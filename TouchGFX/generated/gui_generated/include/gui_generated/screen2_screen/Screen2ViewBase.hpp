/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN2VIEWBASE_HPP
#define SCREEN2VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen2_screen/Screen2Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/Gauge.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ClickListener< touchgfx::Image > image1;
    touchgfx::TextArea textArea1;
    touchgfx::ButtonWithIcon buttonWithIcon1;
    touchgfx::ClickListener< touchgfx::Gauge > gaugeRPM;
    touchgfx::PainterRGB565 gaugeRPMPainter;
    touchgfx::BoxProgress boxProgressTemp;
    touchgfx::ClickListener< touchgfx::Gauge > gaugeSpeed;
    touchgfx::PainterRGB565 gaugeSpeedPainter;
    touchgfx::Line line1;
    touchgfx::PainterRGB565 line1Painter;
    touchgfx::TextAreaWithOneWildcard textAmbientTemp;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::Circle circle1;
    touchgfx::PainterRGB565 circle1Painter;
    touchgfx::TextAreaWithOneWildcard textSpeed;
    touchgfx::ScalableImage scalableImage2;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAMBIENTTEMP_SIZE = 8;
    touchgfx::Unicode::UnicodeChar textAmbientTempBuffer[TEXTAMBIENTTEMP_SIZE];
    static const uint16_t TEXTSPEED_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textSpeedBuffer[TEXTSPEED_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen2ViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREEN2VIEWBASE_HPP
