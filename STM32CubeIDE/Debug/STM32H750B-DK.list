
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002c69c  900002a0  900002a0  000042a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000043e4  9002c940  9002c940  00030940  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000034  90030d24  90030d24  00034d24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  90030d58  90030d58  003f2fc0  2**0
                  CONTENTS
  6 .ARM          00000008  90030d58  90030d58  00034d58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  90030d60  90030d60  003f2fc0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   0000001c  90030d60  90030d60  00034d60  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  90030d7c  90030d7c  00034d7c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000140  24000000  90030d84  00035000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 CCMRAM        00005a00  24000140  90030ec4  00035140  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          00022744  24005b40  900368c4  0003ab40  2**3
                  ALLOC
 13 ._user_heap_stack 00002004  24028284  900368c4  0003b284  2**0
                  ALLOC
 14 .ARM.attributes 0000002e  00000000  00000000  003f2fc0  2**0
                  CONTENTS, READONLY
 15 FontFlashSection 000025e4  90200000  90200000  0003b000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 TextFlashSection 00000304  902025e4  902025e4  0003d5e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 ExtFlashSection 003b56d8  902028e8  902028e8  0003d8e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  003f3000  2**2
                  ALLOC
 19 Video_RGB_Buffer 00043800  d00bf400  d00bf400  003f3000  2**2
                  ALLOC
 20 .debug_line   000969c7  00000000  00000000  003f2fee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005b  00000000  00000000  004899b5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_info   0012c42e  00000000  00000000  00489a10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_abbrev 0001a5d5  00000000  00000000  005b5e3e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_aranges 00004098  00000000  00000000  005d0418  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    001b5e7e  00000000  00000000  005d44b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_rnglists 00009b8d  00000000  00000000  0078a32e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_loclists 000491af  00000000  00000000  00793ebb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_macro  0001890a  00000000  00000000  007dd06a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .comment      000000c2  00000000  00000000  007f5974  2**0
                  CONTENTS, READONLY
 30 .debug_frame  0000c3ac  00000000  00000000  007f5a38  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	@ (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	@ (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	@ (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24005b40 	.word	0x24005b40
900002bc:	00000000 	.word	0x00000000
900002c0:	9002c924 	.word	0x9002c924

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	@ (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	@ (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	@ (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24005b44 	.word	0x24005b44
900002dc:	9002c924 	.word	0x9002c924

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <__aeabi_drsub>:
90000380:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
90000384:	e002      	b.n	9000038c <__adddf3>
90000386:	bf00      	nop

90000388 <__aeabi_dsub>:
90000388:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

9000038c <__adddf3>:
9000038c:	b530      	push	{r4, r5, lr}
9000038e:	ea4f 0441 	mov.w	r4, r1, lsl #1
90000392:	ea4f 0543 	mov.w	r5, r3, lsl #1
90000396:	ea94 0f05 	teq	r4, r5
9000039a:	bf08      	it	eq
9000039c:	ea90 0f02 	teqeq	r0, r2
900003a0:	bf1f      	itttt	ne
900003a2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003a6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003b2:	f000 80e2 	beq.w	9000057a <__adddf3+0x1ee>
900003b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003be:	bfb8      	it	lt
900003c0:	426d      	neglt	r5, r5
900003c2:	dd0c      	ble.n	900003de <__adddf3+0x52>
900003c4:	442c      	add	r4, r5
900003c6:	ea80 0202 	eor.w	r2, r0, r2
900003ca:	ea81 0303 	eor.w	r3, r1, r3
900003ce:	ea82 0000 	eor.w	r0, r2, r0
900003d2:	ea83 0101 	eor.w	r1, r3, r1
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	2d36      	cmp	r5, #54	@ 0x36
900003e0:	bf88      	it	hi
900003e2:	bd30      	pophi	{r4, r5, pc}
900003e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
900003e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
900003f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
900003f4:	d002      	beq.n	900003fc <__adddf3+0x70>
900003f6:	4240      	negs	r0, r0
900003f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900003fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
90000400:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000404:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000408:	d002      	beq.n	90000410 <__adddf3+0x84>
9000040a:	4252      	negs	r2, r2
9000040c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000410:	ea94 0f05 	teq	r4, r5
90000414:	f000 80a7 	beq.w	90000566 <__adddf3+0x1da>
90000418:	f1a4 0401 	sub.w	r4, r4, #1
9000041c:	f1d5 0e20 	rsbs	lr, r5, #32
90000420:	db0d      	blt.n	9000043e <__adddf3+0xb2>
90000422:	fa02 fc0e 	lsl.w	ip, r2, lr
90000426:	fa22 f205 	lsr.w	r2, r2, r5
9000042a:	1880      	adds	r0, r0, r2
9000042c:	f141 0100 	adc.w	r1, r1, #0
90000430:	fa03 f20e 	lsl.w	r2, r3, lr
90000434:	1880      	adds	r0, r0, r2
90000436:	fa43 f305 	asr.w	r3, r3, r5
9000043a:	4159      	adcs	r1, r3
9000043c:	e00e      	b.n	9000045c <__adddf3+0xd0>
9000043e:	f1a5 0520 	sub.w	r5, r5, #32
90000442:	f10e 0e20 	add.w	lr, lr, #32
90000446:	2a01      	cmp	r2, #1
90000448:	fa03 fc0e 	lsl.w	ip, r3, lr
9000044c:	bf28      	it	cs
9000044e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000452:	fa43 f305 	asr.w	r3, r3, r5
90000456:	18c0      	adds	r0, r0, r3
90000458:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000045c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000460:	d507      	bpl.n	90000472 <__adddf3+0xe6>
90000462:	f04f 0e00 	mov.w	lr, #0
90000466:	f1dc 0c00 	rsbs	ip, ip, #0
9000046a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000046e:	eb6e 0101 	sbc.w	r1, lr, r1
90000472:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
90000476:	d31b      	bcc.n	900004b0 <__adddf3+0x124>
90000478:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000047c:	d30c      	bcc.n	90000498 <__adddf3+0x10c>
9000047e:	0849      	lsrs	r1, r1, #1
90000480:	ea5f 0030 	movs.w	r0, r0, rrx
90000484:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000488:	f104 0401 	add.w	r4, r4, #1
9000048c:	ea4f 5244 	mov.w	r2, r4, lsl #21
90000490:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
90000494:	f080 809a 	bcs.w	900005cc <__adddf3+0x240>
90000498:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
9000049c:	bf08      	it	eq
9000049e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004a2:	f150 0000 	adcs.w	r0, r0, #0
900004a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004aa:	ea41 0105 	orr.w	r1, r1, r5
900004ae:	bd30      	pop	{r4, r5, pc}
900004b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004b4:	4140      	adcs	r0, r0
900004b6:	eb41 0101 	adc.w	r1, r1, r1
900004ba:	3c01      	subs	r4, #1
900004bc:	bf28      	it	cs
900004be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
900004c2:	d2e9      	bcs.n	90000498 <__adddf3+0x10c>
900004c4:	f091 0f00 	teq	r1, #0
900004c8:	bf04      	itt	eq
900004ca:	4601      	moveq	r1, r0
900004cc:	2000      	moveq	r0, #0
900004ce:	fab1 f381 	clz	r3, r1
900004d2:	bf08      	it	eq
900004d4:	3320      	addeq	r3, #32
900004d6:	f1a3 030b 	sub.w	r3, r3, #11
900004da:	f1b3 0220 	subs.w	r2, r3, #32
900004de:	da0c      	bge.n	900004fa <__adddf3+0x16e>
900004e0:	320c      	adds	r2, #12
900004e2:	dd08      	ble.n	900004f6 <__adddf3+0x16a>
900004e4:	f102 0c14 	add.w	ip, r2, #20
900004e8:	f1c2 020c 	rsb	r2, r2, #12
900004ec:	fa01 f00c 	lsl.w	r0, r1, ip
900004f0:	fa21 f102 	lsr.w	r1, r1, r2
900004f4:	e00c      	b.n	90000510 <__adddf3+0x184>
900004f6:	f102 0214 	add.w	r2, r2, #20
900004fa:	bfd8      	it	le
900004fc:	f1c2 0c20 	rsble	ip, r2, #32
90000500:	fa01 f102 	lsl.w	r1, r1, r2
90000504:	fa20 fc0c 	lsr.w	ip, r0, ip
90000508:	bfdc      	itt	le
9000050a:	ea41 010c 	orrle.w	r1, r1, ip
9000050e:	4090      	lslle	r0, r2
90000510:	1ae4      	subs	r4, r4, r3
90000512:	bfa2      	ittt	ge
90000514:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000518:	4329      	orrge	r1, r5
9000051a:	bd30      	popge	{r4, r5, pc}
9000051c:	ea6f 0404 	mvn.w	r4, r4
90000520:	3c1f      	subs	r4, #31
90000522:	da1c      	bge.n	9000055e <__adddf3+0x1d2>
90000524:	340c      	adds	r4, #12
90000526:	dc0e      	bgt.n	90000546 <__adddf3+0x1ba>
90000528:	f104 0414 	add.w	r4, r4, #20
9000052c:	f1c4 0220 	rsb	r2, r4, #32
90000530:	fa20 f004 	lsr.w	r0, r0, r4
90000534:	fa01 f302 	lsl.w	r3, r1, r2
90000538:	ea40 0003 	orr.w	r0, r0, r3
9000053c:	fa21 f304 	lsr.w	r3, r1, r4
90000540:	ea45 0103 	orr.w	r1, r5, r3
90000544:	bd30      	pop	{r4, r5, pc}
90000546:	f1c4 040c 	rsb	r4, r4, #12
9000054a:	f1c4 0220 	rsb	r2, r4, #32
9000054e:	fa20 f002 	lsr.w	r0, r0, r2
90000552:	fa01 f304 	lsl.w	r3, r1, r4
90000556:	ea40 0003 	orr.w	r0, r0, r3
9000055a:	4629      	mov	r1, r5
9000055c:	bd30      	pop	{r4, r5, pc}
9000055e:	fa21 f004 	lsr.w	r0, r1, r4
90000562:	4629      	mov	r1, r5
90000564:	bd30      	pop	{r4, r5, pc}
90000566:	f094 0f00 	teq	r4, #0
9000056a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
9000056e:	bf06      	itte	eq
90000570:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
90000574:	3401      	addeq	r4, #1
90000576:	3d01      	subne	r5, #1
90000578:	e74e      	b.n	90000418 <__adddf3+0x8c>
9000057a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000057e:	bf18      	it	ne
90000580:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000584:	d029      	beq.n	900005da <__adddf3+0x24e>
90000586:	ea94 0f05 	teq	r4, r5
9000058a:	bf08      	it	eq
9000058c:	ea90 0f02 	teqeq	r0, r2
90000590:	d005      	beq.n	9000059e <__adddf3+0x212>
90000592:	ea54 0c00 	orrs.w	ip, r4, r0
90000596:	bf04      	itt	eq
90000598:	4619      	moveq	r1, r3
9000059a:	4610      	moveq	r0, r2
9000059c:	bd30      	pop	{r4, r5, pc}
9000059e:	ea91 0f03 	teq	r1, r3
900005a2:	bf1e      	ittt	ne
900005a4:	2100      	movne	r1, #0
900005a6:	2000      	movne	r0, #0
900005a8:	bd30      	popne	{r4, r5, pc}
900005aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005ae:	d105      	bne.n	900005bc <__adddf3+0x230>
900005b0:	0040      	lsls	r0, r0, #1
900005b2:	4149      	adcs	r1, r1
900005b4:	bf28      	it	cs
900005b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
900005ba:	bd30      	pop	{r4, r5, pc}
900005bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
900005c0:	bf3c      	itt	cc
900005c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
900005c6:	bd30      	popcc	{r4, r5, pc}
900005c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
900005cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
900005d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900005d4:	f04f 0000 	mov.w	r0, #0
900005d8:	bd30      	pop	{r4, r5, pc}
900005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005de:	bf1a      	itte	ne
900005e0:	4619      	movne	r1, r3
900005e2:	4610      	movne	r0, r2
900005e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005e8:	bf1c      	itt	ne
900005ea:	460b      	movne	r3, r1
900005ec:	4602      	movne	r2, r0
900005ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
900005f2:	bf06      	itte	eq
900005f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
900005f8:	ea91 0f03 	teqeq	r1, r3
900005fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
90000600:	bd30      	pop	{r4, r5, pc}
90000602:	bf00      	nop

90000604 <__aeabi_ui2d>:
90000604:	f090 0f00 	teq	r0, #0
90000608:	bf04      	itt	eq
9000060a:	2100      	moveq	r1, #0
9000060c:	4770      	bxeq	lr
9000060e:	b530      	push	{r4, r5, lr}
90000610:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000614:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000618:	f04f 0500 	mov.w	r5, #0
9000061c:	f04f 0100 	mov.w	r1, #0
90000620:	e750      	b.n	900004c4 <__adddf3+0x138>
90000622:	bf00      	nop

90000624 <__aeabi_i2d>:
90000624:	f090 0f00 	teq	r0, #0
90000628:	bf04      	itt	eq
9000062a:	2100      	moveq	r1, #0
9000062c:	4770      	bxeq	lr
9000062e:	b530      	push	{r4, r5, lr}
90000630:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000634:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000638:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
9000063c:	bf48      	it	mi
9000063e:	4240      	negmi	r0, r0
90000640:	f04f 0100 	mov.w	r1, #0
90000644:	e73e      	b.n	900004c4 <__adddf3+0x138>
90000646:	bf00      	nop

90000648 <__aeabi_f2d>:
90000648:	0042      	lsls	r2, r0, #1
9000064a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000064e:	ea4f 0131 	mov.w	r1, r1, rrx
90000652:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000656:	bf1f      	itttt	ne
90000658:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
9000065c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
90000660:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
90000664:	4770      	bxne	lr
90000666:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
9000066a:	bf08      	it	eq
9000066c:	4770      	bxeq	lr
9000066e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
90000672:	bf04      	itt	eq
90000674:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
90000678:	4770      	bxeq	lr
9000067a:	b530      	push	{r4, r5, lr}
9000067c:	f44f 7460 	mov.w	r4, #896	@ 0x380
90000680:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000684:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
90000688:	e71c      	b.n	900004c4 <__adddf3+0x138>
9000068a:	bf00      	nop

9000068c <__aeabi_ul2d>:
9000068c:	ea50 0201 	orrs.w	r2, r0, r1
90000690:	bf08      	it	eq
90000692:	4770      	bxeq	lr
90000694:	b530      	push	{r4, r5, lr}
90000696:	f04f 0500 	mov.w	r5, #0
9000069a:	e00a      	b.n	900006b2 <__aeabi_l2d+0x16>

9000069c <__aeabi_l2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
900006aa:	d502      	bpl.n	900006b2 <__aeabi_l2d+0x16>
900006ac:	4240      	negs	r0, r0
900006ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
900006b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
900006ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006be:	f43f aed8 	beq.w	90000472 <__adddf3+0xe6>
900006c2:	f04f 0203 	mov.w	r2, #3
900006c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006ca:	bf18      	it	ne
900006cc:	3203      	addne	r2, #3
900006ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006d2:	bf18      	it	ne
900006d4:	3203      	addne	r2, #3
900006d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006da:	f1c2 0320 	rsb	r3, r2, #32
900006de:	fa00 fc03 	lsl.w	ip, r0, r3
900006e2:	fa20 f002 	lsr.w	r0, r0, r2
900006e6:	fa01 fe03 	lsl.w	lr, r1, r3
900006ea:	ea40 000e 	orr.w	r0, r0, lr
900006ee:	fa21 f102 	lsr.w	r1, r1, r2
900006f2:	4414      	add	r4, r2
900006f4:	e6bd      	b.n	90000472 <__adddf3+0xe6>
900006f6:	bf00      	nop

900006f8 <__aeabi_uldivmod>:
900006f8:	b953      	cbnz	r3, 90000710 <__aeabi_uldivmod+0x18>
900006fa:	b94a      	cbnz	r2, 90000710 <__aeabi_uldivmod+0x18>
900006fc:	2900      	cmp	r1, #0
900006fe:	bf08      	it	eq
90000700:	2800      	cmpeq	r0, #0
90000702:	bf1c      	itt	ne
90000704:	f04f 31ff 	movne.w	r1, #4294967295
90000708:	f04f 30ff 	movne.w	r0, #4294967295
9000070c:	f000 b96a 	b.w	900009e4 <__aeabi_idiv0>
90000710:	f1ad 0c08 	sub.w	ip, sp, #8
90000714:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000718:	f000 f806 	bl	90000728 <__udivmoddi4>
9000071c:	f8dd e004 	ldr.w	lr, [sp, #4]
90000720:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000724:	b004      	add	sp, #16
90000726:	4770      	bx	lr

90000728 <__udivmoddi4>:
90000728:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000072c:	9d08      	ldr	r5, [sp, #32]
9000072e:	460c      	mov	r4, r1
90000730:	2b00      	cmp	r3, #0
90000732:	d14e      	bne.n	900007d2 <__udivmoddi4+0xaa>
90000734:	4694      	mov	ip, r2
90000736:	458c      	cmp	ip, r1
90000738:	4686      	mov	lr, r0
9000073a:	fab2 f282 	clz	r2, r2
9000073e:	d962      	bls.n	90000806 <__udivmoddi4+0xde>
90000740:	b14a      	cbz	r2, 90000756 <__udivmoddi4+0x2e>
90000742:	f1c2 0320 	rsb	r3, r2, #32
90000746:	4091      	lsls	r1, r2
90000748:	fa20 f303 	lsr.w	r3, r0, r3
9000074c:	fa0c fc02 	lsl.w	ip, ip, r2
90000750:	4319      	orrs	r1, r3
90000752:	fa00 fe02 	lsl.w	lr, r0, r2
90000756:	ea4f 471c 	mov.w	r7, ip, lsr #16
9000075a:	fa1f f68c 	uxth.w	r6, ip
9000075e:	fbb1 f4f7 	udiv	r4, r1, r7
90000762:	ea4f 431e 	mov.w	r3, lr, lsr #16
90000766:	fb07 1114 	mls	r1, r7, r4, r1
9000076a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000076e:	fb04 f106 	mul.w	r1, r4, r6
90000772:	4299      	cmp	r1, r3
90000774:	d90a      	bls.n	9000078c <__udivmoddi4+0x64>
90000776:	eb1c 0303 	adds.w	r3, ip, r3
9000077a:	f104 30ff 	add.w	r0, r4, #4294967295
9000077e:	f080 8112 	bcs.w	900009a6 <__udivmoddi4+0x27e>
90000782:	4299      	cmp	r1, r3
90000784:	f240 810f 	bls.w	900009a6 <__udivmoddi4+0x27e>
90000788:	3c02      	subs	r4, #2
9000078a:	4463      	add	r3, ip
9000078c:	1a59      	subs	r1, r3, r1
9000078e:	fa1f f38e 	uxth.w	r3, lr
90000792:	fbb1 f0f7 	udiv	r0, r1, r7
90000796:	fb07 1110 	mls	r1, r7, r0, r1
9000079a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000079e:	fb00 f606 	mul.w	r6, r0, r6
900007a2:	429e      	cmp	r6, r3
900007a4:	d90a      	bls.n	900007bc <__udivmoddi4+0x94>
900007a6:	eb1c 0303 	adds.w	r3, ip, r3
900007aa:	f100 31ff 	add.w	r1, r0, #4294967295
900007ae:	f080 80fc 	bcs.w	900009aa <__udivmoddi4+0x282>
900007b2:	429e      	cmp	r6, r3
900007b4:	f240 80f9 	bls.w	900009aa <__udivmoddi4+0x282>
900007b8:	4463      	add	r3, ip
900007ba:	3802      	subs	r0, #2
900007bc:	1b9b      	subs	r3, r3, r6
900007be:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
900007c2:	2100      	movs	r1, #0
900007c4:	b11d      	cbz	r5, 900007ce <__udivmoddi4+0xa6>
900007c6:	40d3      	lsrs	r3, r2
900007c8:	2200      	movs	r2, #0
900007ca:	e9c5 3200 	strd	r3, r2, [r5]
900007ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900007d2:	428b      	cmp	r3, r1
900007d4:	d905      	bls.n	900007e2 <__udivmoddi4+0xba>
900007d6:	b10d      	cbz	r5, 900007dc <__udivmoddi4+0xb4>
900007d8:	e9c5 0100 	strd	r0, r1, [r5]
900007dc:	2100      	movs	r1, #0
900007de:	4608      	mov	r0, r1
900007e0:	e7f5      	b.n	900007ce <__udivmoddi4+0xa6>
900007e2:	fab3 f183 	clz	r1, r3
900007e6:	2900      	cmp	r1, #0
900007e8:	d146      	bne.n	90000878 <__udivmoddi4+0x150>
900007ea:	42a3      	cmp	r3, r4
900007ec:	d302      	bcc.n	900007f4 <__udivmoddi4+0xcc>
900007ee:	4290      	cmp	r0, r2
900007f0:	f0c0 80f0 	bcc.w	900009d4 <__udivmoddi4+0x2ac>
900007f4:	1a86      	subs	r6, r0, r2
900007f6:	eb64 0303 	sbc.w	r3, r4, r3
900007fa:	2001      	movs	r0, #1
900007fc:	2d00      	cmp	r5, #0
900007fe:	d0e6      	beq.n	900007ce <__udivmoddi4+0xa6>
90000800:	e9c5 6300 	strd	r6, r3, [r5]
90000804:	e7e3      	b.n	900007ce <__udivmoddi4+0xa6>
90000806:	2a00      	cmp	r2, #0
90000808:	f040 8090 	bne.w	9000092c <__udivmoddi4+0x204>
9000080c:	eba1 040c 	sub.w	r4, r1, ip
90000810:	ea4f 481c 	mov.w	r8, ip, lsr #16
90000814:	fa1f f78c 	uxth.w	r7, ip
90000818:	2101      	movs	r1, #1
9000081a:	fbb4 f6f8 	udiv	r6, r4, r8
9000081e:	ea4f 431e 	mov.w	r3, lr, lsr #16
90000822:	fb08 4416 	mls	r4, r8, r6, r4
90000826:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
9000082a:	fb07 f006 	mul.w	r0, r7, r6
9000082e:	4298      	cmp	r0, r3
90000830:	d908      	bls.n	90000844 <__udivmoddi4+0x11c>
90000832:	eb1c 0303 	adds.w	r3, ip, r3
90000836:	f106 34ff 	add.w	r4, r6, #4294967295
9000083a:	d202      	bcs.n	90000842 <__udivmoddi4+0x11a>
9000083c:	4298      	cmp	r0, r3
9000083e:	f200 80cd 	bhi.w	900009dc <__udivmoddi4+0x2b4>
90000842:	4626      	mov	r6, r4
90000844:	1a1c      	subs	r4, r3, r0
90000846:	fa1f f38e 	uxth.w	r3, lr
9000084a:	fbb4 f0f8 	udiv	r0, r4, r8
9000084e:	fb08 4410 	mls	r4, r8, r0, r4
90000852:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
90000856:	fb00 f707 	mul.w	r7, r0, r7
9000085a:	429f      	cmp	r7, r3
9000085c:	d908      	bls.n	90000870 <__udivmoddi4+0x148>
9000085e:	eb1c 0303 	adds.w	r3, ip, r3
90000862:	f100 34ff 	add.w	r4, r0, #4294967295
90000866:	d202      	bcs.n	9000086e <__udivmoddi4+0x146>
90000868:	429f      	cmp	r7, r3
9000086a:	f200 80b0 	bhi.w	900009ce <__udivmoddi4+0x2a6>
9000086e:	4620      	mov	r0, r4
90000870:	1bdb      	subs	r3, r3, r7
90000872:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
90000876:	e7a5      	b.n	900007c4 <__udivmoddi4+0x9c>
90000878:	f1c1 0620 	rsb	r6, r1, #32
9000087c:	408b      	lsls	r3, r1
9000087e:	fa22 f706 	lsr.w	r7, r2, r6
90000882:	431f      	orrs	r7, r3
90000884:	fa20 fc06 	lsr.w	ip, r0, r6
90000888:	fa04 f301 	lsl.w	r3, r4, r1
9000088c:	ea43 030c 	orr.w	r3, r3, ip
90000890:	40f4      	lsrs	r4, r6
90000892:	fa00 f801 	lsl.w	r8, r0, r1
90000896:	0c38      	lsrs	r0, r7, #16
90000898:	ea4f 4913 	mov.w	r9, r3, lsr #16
9000089c:	fbb4 fef0 	udiv	lr, r4, r0
900008a0:	fa1f fc87 	uxth.w	ip, r7
900008a4:	fb00 441e 	mls	r4, r0, lr, r4
900008a8:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
900008ac:	fb0e f90c 	mul.w	r9, lr, ip
900008b0:	45a1      	cmp	r9, r4
900008b2:	fa02 f201 	lsl.w	r2, r2, r1
900008b6:	d90a      	bls.n	900008ce <__udivmoddi4+0x1a6>
900008b8:	193c      	adds	r4, r7, r4
900008ba:	f10e 3aff 	add.w	sl, lr, #4294967295
900008be:	f080 8084 	bcs.w	900009ca <__udivmoddi4+0x2a2>
900008c2:	45a1      	cmp	r9, r4
900008c4:	f240 8081 	bls.w	900009ca <__udivmoddi4+0x2a2>
900008c8:	f1ae 0e02 	sub.w	lr, lr, #2
900008cc:	443c      	add	r4, r7
900008ce:	eba4 0409 	sub.w	r4, r4, r9
900008d2:	fa1f f983 	uxth.w	r9, r3
900008d6:	fbb4 f3f0 	udiv	r3, r4, r0
900008da:	fb00 4413 	mls	r4, r0, r3, r4
900008de:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
900008e2:	fb03 fc0c 	mul.w	ip, r3, ip
900008e6:	45a4      	cmp	ip, r4
900008e8:	d907      	bls.n	900008fa <__udivmoddi4+0x1d2>
900008ea:	193c      	adds	r4, r7, r4
900008ec:	f103 30ff 	add.w	r0, r3, #4294967295
900008f0:	d267      	bcs.n	900009c2 <__udivmoddi4+0x29a>
900008f2:	45a4      	cmp	ip, r4
900008f4:	d965      	bls.n	900009c2 <__udivmoddi4+0x29a>
900008f6:	3b02      	subs	r3, #2
900008f8:	443c      	add	r4, r7
900008fa:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
900008fe:	fba0 9302 	umull	r9, r3, r0, r2
90000902:	eba4 040c 	sub.w	r4, r4, ip
90000906:	429c      	cmp	r4, r3
90000908:	46ce      	mov	lr, r9
9000090a:	469c      	mov	ip, r3
9000090c:	d351      	bcc.n	900009b2 <__udivmoddi4+0x28a>
9000090e:	d04e      	beq.n	900009ae <__udivmoddi4+0x286>
90000910:	b155      	cbz	r5, 90000928 <__udivmoddi4+0x200>
90000912:	ebb8 030e 	subs.w	r3, r8, lr
90000916:	eb64 040c 	sbc.w	r4, r4, ip
9000091a:	fa04 f606 	lsl.w	r6, r4, r6
9000091e:	40cb      	lsrs	r3, r1
90000920:	431e      	orrs	r6, r3
90000922:	40cc      	lsrs	r4, r1
90000924:	e9c5 6400 	strd	r6, r4, [r5]
90000928:	2100      	movs	r1, #0
9000092a:	e750      	b.n	900007ce <__udivmoddi4+0xa6>
9000092c:	f1c2 0320 	rsb	r3, r2, #32
90000930:	fa20 f103 	lsr.w	r1, r0, r3
90000934:	fa0c fc02 	lsl.w	ip, ip, r2
90000938:	fa24 f303 	lsr.w	r3, r4, r3
9000093c:	4094      	lsls	r4, r2
9000093e:	430c      	orrs	r4, r1
90000940:	ea4f 481c 	mov.w	r8, ip, lsr #16
90000944:	fa00 fe02 	lsl.w	lr, r0, r2
90000948:	fa1f f78c 	uxth.w	r7, ip
9000094c:	fbb3 f0f8 	udiv	r0, r3, r8
90000950:	fb08 3110 	mls	r1, r8, r0, r3
90000954:	0c23      	lsrs	r3, r4, #16
90000956:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000095a:	fb00 f107 	mul.w	r1, r0, r7
9000095e:	4299      	cmp	r1, r3
90000960:	d908      	bls.n	90000974 <__udivmoddi4+0x24c>
90000962:	eb1c 0303 	adds.w	r3, ip, r3
90000966:	f100 36ff 	add.w	r6, r0, #4294967295
9000096a:	d22c      	bcs.n	900009c6 <__udivmoddi4+0x29e>
9000096c:	4299      	cmp	r1, r3
9000096e:	d92a      	bls.n	900009c6 <__udivmoddi4+0x29e>
90000970:	3802      	subs	r0, #2
90000972:	4463      	add	r3, ip
90000974:	1a5b      	subs	r3, r3, r1
90000976:	b2a4      	uxth	r4, r4
90000978:	fbb3 f1f8 	udiv	r1, r3, r8
9000097c:	fb08 3311 	mls	r3, r8, r1, r3
90000980:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
90000984:	fb01 f307 	mul.w	r3, r1, r7
90000988:	42a3      	cmp	r3, r4
9000098a:	d908      	bls.n	9000099e <__udivmoddi4+0x276>
9000098c:	eb1c 0404 	adds.w	r4, ip, r4
90000990:	f101 36ff 	add.w	r6, r1, #4294967295
90000994:	d213      	bcs.n	900009be <__udivmoddi4+0x296>
90000996:	42a3      	cmp	r3, r4
90000998:	d911      	bls.n	900009be <__udivmoddi4+0x296>
9000099a:	3902      	subs	r1, #2
9000099c:	4464      	add	r4, ip
9000099e:	1ae4      	subs	r4, r4, r3
900009a0:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
900009a4:	e739      	b.n	9000081a <__udivmoddi4+0xf2>
900009a6:	4604      	mov	r4, r0
900009a8:	e6f0      	b.n	9000078c <__udivmoddi4+0x64>
900009aa:	4608      	mov	r0, r1
900009ac:	e706      	b.n	900007bc <__udivmoddi4+0x94>
900009ae:	45c8      	cmp	r8, r9
900009b0:	d2ae      	bcs.n	90000910 <__udivmoddi4+0x1e8>
900009b2:	ebb9 0e02 	subs.w	lr, r9, r2
900009b6:	eb63 0c07 	sbc.w	ip, r3, r7
900009ba:	3801      	subs	r0, #1
900009bc:	e7a8      	b.n	90000910 <__udivmoddi4+0x1e8>
900009be:	4631      	mov	r1, r6
900009c0:	e7ed      	b.n	9000099e <__udivmoddi4+0x276>
900009c2:	4603      	mov	r3, r0
900009c4:	e799      	b.n	900008fa <__udivmoddi4+0x1d2>
900009c6:	4630      	mov	r0, r6
900009c8:	e7d4      	b.n	90000974 <__udivmoddi4+0x24c>
900009ca:	46d6      	mov	lr, sl
900009cc:	e77f      	b.n	900008ce <__udivmoddi4+0x1a6>
900009ce:	4463      	add	r3, ip
900009d0:	3802      	subs	r0, #2
900009d2:	e74d      	b.n	90000870 <__udivmoddi4+0x148>
900009d4:	4606      	mov	r6, r0
900009d6:	4623      	mov	r3, r4
900009d8:	4608      	mov	r0, r1
900009da:	e70f      	b.n	900007fc <__udivmoddi4+0xd4>
900009dc:	3e02      	subs	r6, #2
900009de:	4463      	add	r3, ip
900009e0:	e730      	b.n	90000844 <__udivmoddi4+0x11c>
900009e2:	bf00      	nop

900009e4 <__aeabi_idiv0>:
900009e4:	4770      	bx	lr
900009e6:	bf00      	nop

900009e8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
900009e8:	f8df d034 	ldr.w	sp, [pc, #52]	@ 90000a20 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
900009ec:	2100      	movs	r1, #0
  b  LoopCopyDataInit
900009ee:	e003      	b.n	900009f8 <LoopCopyDataInit>

900009f0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
900009f0:	4b0c      	ldr	r3, [pc, #48]	@ (90000a24 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
900009f2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
900009f4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
900009f6:	3104      	adds	r1, #4

900009f8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
900009f8:	480b      	ldr	r0, [pc, #44]	@ (90000a28 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
900009fa:	4b0c      	ldr	r3, [pc, #48]	@ (90000a2c <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
900009fc:	1842      	adds	r2, r0, r1
  cmp  r2, r3
900009fe:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000a00:	d3f6      	bcc.n	900009f0 <CopyDataInit>
  ldr  r2, =_sbss
90000a02:	4a0b      	ldr	r2, [pc, #44]	@ (90000a30 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000a04:	e002      	b.n	90000a0c <LoopFillZerobss>

90000a06 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000a06:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000a08:	f842 3b04 	str.w	r3, [r2], #4

90000a0c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000a0c:	4b09      	ldr	r3, [pc, #36]	@ (90000a34 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000a0e:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000a10:	d3f9      	bcc.n	90000a06 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000a12:	f009 ff83 	bl	9000a91c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000a16:	f02b faa9 	bl	9002bf6c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000a1a:	f000 f9b3 	bl	90000d84 <main>
  bx  lr    
90000a1e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000a20:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000a24:	90030d84 	.word	0x90030d84
  ldr  r0, =_sdata
90000a28:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000a2c:	24000140 	.word	0x24000140
  ldr  r2, =_sbss
90000a30:	24005b40 	.word	0x24005b40
  ldr  r3, = _ebss
90000a34:	24028284 	.word	0x24028284

90000a38 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000a38:	e7fe      	b.n	90000a38 <ADC3_IRQHandler>
90000a3a:	0000      	movs	r0, r0
90000a3c:	0000      	movs	r0, r0
	...

90000a40 <DHT22_GetData>:
 * Checks if DHT22 is present and reads 40 bits.
 * Returns 0 if success, otherwise -1
 */

uint8_t DHT22_GetData (DHT22_DataTypedef *pDHT22_Data)
{
90000a40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90000a44:	b087      	sub	sp, #28
	GPIO_InitTypeDef GPIO_InitStruct = {0};
90000a46:	2400      	movs	r4, #0
	GPIO_InitStruct.Pin = GPIO_Pin;
90000a48:	f44f 7280 	mov.w	r2, #256	@ 0x100
90000a4c:	2301      	movs	r3, #1
	HAL_GPIO_Init(GPIOx, &GPIO_InitStruct);
90000a4e:	4669      	mov	r1, sp
{
90000a50:	4607      	mov	r7, r0
	HAL_GPIO_Init(GPIOx, &GPIO_InitStruct);
90000a52:	484d      	ldr	r0, [pc, #308]	@ (90000b88 <DHT22_GetData+0x148>)
	GPIO_InitTypeDef GPIO_InitStruct = {0};
90000a54:	9404      	str	r4, [sp, #16]
	GPIO_InitStruct.Pin = GPIO_Pin;
90000a56:	e9cd 2300 	strd	r2, r3, [sp]
	GPIO_InitTypeDef GPIO_InitStruct = {0};
90000a5a:	e9cd 4402 	strd	r4, r4, [sp, #8]
	HAL_GPIO_Init(GPIOx, &GPIO_InitStruct);
90000a5e:	f00a ff71 	bl	9000b944 <HAL_GPIO_Init>
	HAL_GPIO_WritePin (DHT22_PORT, DHT22_PIN, 0);   // pull the pin low
90000a62:	4622      	mov	r2, r4
90000a64:	2414      	movs	r4, #20
90000a66:	f44f 7180 	mov.w	r1, #256	@ 0x100
90000a6a:	4847      	ldr	r0, [pc, #284]	@ (90000b88 <DHT22_GetData+0x148>)
90000a6c:	f00b f97c 	bl	9000bd68 <HAL_GPIO_WritePin>
		DWT_DelayUS (100);
90000a70:	2064      	movs	r0, #100	@ 0x64
90000a72:	f000 f8ad 	bl	90000bd0 <DWT_DelayUS>
	for(unsigned int i=0; i<20;i++){
90000a76:	3c01      	subs	r4, #1
90000a78:	d1fa      	bne.n	90000a70 <DHT22_GetData+0x30>
	HAL_GPIO_WritePin (DHT22_PORT, DHT22_PIN, 1);   // pull the pin high and
90000a7a:	2201      	movs	r2, #1
90000a7c:	f44f 7180 	mov.w	r1, #256	@ 0x100
90000a80:	4841      	ldr	r0, [pc, #260]	@ (90000b88 <DHT22_GetData+0x148>)
	GPIO_InitStruct.Pin = GPIO_Pin;
90000a82:	f44f 7580 	mov.w	r5, #256	@ 0x100
	HAL_GPIO_WritePin (DHT22_PORT, DHT22_PIN, 1);   // pull the pin high and
90000a86:	f00b f96f 	bl	9000bd68 <HAL_GPIO_WritePin>
	HAL_GPIO_Init(GPIOx, &GPIO_InitStruct);
90000a8a:	4669      	mov	r1, sp
90000a8c:	483e      	ldr	r0, [pc, #248]	@ (90000b88 <DHT22_GetData+0x148>)
	GPIO_InitTypeDef GPIO_InitStruct = {0};
90000a8e:	9404      	str	r4, [sp, #16]
	GPIO_InitStruct.Pin = GPIO_Pin;
90000a90:	e9cd 5400 	strd	r5, r4, [sp]
	GPIO_InitTypeDef GPIO_InitStruct = {0};
90000a94:	e9cd 4402 	strd	r4, r4, [sp, #8]
	HAL_GPIO_Init(GPIOx, &GPIO_InitStruct);
90000a98:	f00a ff54 	bl	9000b944 <HAL_GPIO_Init>
	DWT_DelayUS (60);
90000a9c:	203c      	movs	r0, #60	@ 0x3c
90000a9e:	f000 f897 	bl	90000bd0 <DWT_DelayUS>
	if (!(HAL_GPIO_ReadPin (DHT22_PORT, DHT22_PIN)))
90000aa2:	4629      	mov	r1, r5
90000aa4:	4838      	ldr	r0, [pc, #224]	@ (90000b88 <DHT22_GetData+0x148>)
90000aa6:	f00b f959 	bl	9000bd5c <HAL_GPIO_ReadPin>
90000aaa:	2800      	cmp	r0, #0
90000aac:	d05d      	beq.n	90000b6a <DHT22_GetData+0x12a>
	HAL_GPIO_WritePin (DHT22_PORT, DHT22_PIN, 0);   // pull the pin low
90000aae:	2400      	movs	r4, #0
90000ab0:	2628      	movs	r6, #40	@ 0x28
		while ((HAL_GPIO_ReadPin (DHT22_PORT, DHT22_PIN))); 	// wait for the pin to go low
90000ab2:	4d35      	ldr	r5, [pc, #212]	@ (90000b88 <DHT22_GetData+0x148>)
	HAL_GPIO_WritePin (DHT22_PORT, DHT22_PIN, 0);   // pull the pin low
90000ab4:	46a0      	mov	r8, r4
		while ((HAL_GPIO_ReadPin (DHT22_PORT, DHT22_PIN))); 	// wait for the pin to go low
90000ab6:	f44f 7180 	mov.w	r1, #256	@ 0x100
90000aba:	4628      	mov	r0, r5
90000abc:	f00b f94e 	bl	9000bd5c <HAL_GPIO_ReadPin>
90000ac0:	2800      	cmp	r0, #0
90000ac2:	d1f8      	bne.n	90000ab6 <DHT22_GetData+0x76>
		while (!(HAL_GPIO_ReadPin (DHT22_PORT, DHT22_PIN)));   	// wait for the pin to go high
90000ac4:	f44f 7180 	mov.w	r1, #256	@ 0x100
90000ac8:	4628      	mov	r0, r5
90000aca:	f00b f947 	bl	9000bd5c <HAL_GPIO_ReadPin>
90000ace:	2800      	cmp	r0, #0
90000ad0:	d0f8      	beq.n	90000ac4 <DHT22_GetData+0x84>
		DWT_DelayUS (35);   // wait for 50 us
90000ad2:	2023      	movs	r0, #35	@ 0x23
90000ad4:	f000 f87c 	bl	90000bd0 <DWT_DelayUS>
		data = data << 1;
90000ad8:	1924      	adds	r4, r4, r4
		if ((HAL_GPIO_ReadPin (DHT22_PORT, DHT22_PIN)))   // if the pin is HIGH
90000ada:	f44f 7180 	mov.w	r1, #256	@ 0x100
90000ade:	4628      	mov	r0, r5
		data = data << 1;
90000ae0:	eb48 0908 	adc.w	r9, r8, r8
		if ((HAL_GPIO_ReadPin (DHT22_PORT, DHT22_PIN)))   // if the pin is HIGH
90000ae4:	f00b f93a 	bl	9000bd5c <HAL_GPIO_ReadPin>
		data = data << 1;
90000ae8:	46c8      	mov	r8, r9
		if ((HAL_GPIO_ReadPin (DHT22_PORT, DHT22_PIN)))   // if the pin is HIGH
90000aea:	b108      	cbz	r0, 90000af0 <DHT22_GetData+0xb0>
			data |= 0x01;
90000aec:	f044 0401 	orr.w	r4, r4, #1
	for (uint8_t j=0;j<40;j++)
90000af0:	1e73      	subs	r3, r6, #1
90000af2:	f013 06ff 	ands.w	r6, r3, #255	@ 0xff
90000af6:	d1de      	bne.n	90000ab6 <DHT22_GetData+0x76>
	}

	dht22_data 	= DHT22_Read_40bit();

	pdata = (uint8_t*) &dht22_data;
	Rh_byteH = pdata[4];
90000af8:	fa5f f989 	uxtb.w	r9, r9
	Rh_byteL = pdata[3];
	Temp_byteH = pdata[2];
90000afc:	f3c4 4307 	ubfx	r3, r4, #16, #8
	Temp_byteL = pdata[1];
90000b00:	f3c4 2007 	ubfx	r0, r4, #8, #8
	 *   16 bits RH data 16 bits T data check sum
	 *   Check sum=0000 0010+1000 1100+0000 0001+0101 1111=1110 1110 RH= (0000 0010 1000 1100)/10=65.2%RH
	 *   T=(0000 0001 0101 1111)/10=35.1
	 */

	if (ChkSum == (unsigned char)(Rh_byteH+Rh_byteL+Temp_byteH+Temp_byteL)){
90000b04:	b2e5      	uxtb	r5, r4
90000b06:	eb09 6214 	add.w	r2, r9, r4, lsr #24
	Rh_byteL = pdata[3];
90000b0a:	0e21      	lsrs	r1, r4, #24
	Temp_byteH = pdata[2];
90000b0c:	461c      	mov	r4, r3
	if (ChkSum == (unsigned char)(Rh_byteH+Rh_byteL+Temp_byteH+Temp_byteL)){
90000b0e:	441a      	add	r2, r3
90000b10:	4402      	add	r2, r0
90000b12:	b2d2      	uxtb	r2, r2
90000b14:	42aa      	cmp	r2, r5
90000b16:	d004      	beq.n	90000b22 <DHT22_GetData+0xe2>
		return -1;   // DHT22 not present
90000b18:	26ff      	movs	r6, #255	@ 0xff
		pDHT22_Data->Humidity = ((Rh_byteH << 8 ) + Rh_byteL) * 0.1;

		return 0;
	}
	else return -1;
}
90000b1a:	4630      	mov	r0, r6
90000b1c:	b007      	add	sp, #28
90000b1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			pDHT22_Data->Temperature = (((Temp_byteH & 0x7f) << 8) + Temp_byteL) * 0.1;
90000b22:	021b      	lsls	r3, r3, #8
		if (Temp_byteH & 0x80) { // negative temperature !
90000b24:	0622      	lsls	r2, r4, #24
		pDHT22_Data->Humidity = ((Rh_byteH << 8 ) + Rh_byteL) * 0.1;
90000b26:	eb01 2109 	add.w	r1, r1, r9, lsl #8
			pDHT22_Data->Temperature = (((Temp_byteH & 0x7f) << 8) + Temp_byteL) * 0.1;
90000b2a:	bf48      	it	mi
90000b2c:	f403 43fe 	andmi.w	r3, r3, #32512	@ 0x7f00
			pDHT22_Data->Temperature = ((Temp_byteH << 8 ) + Temp_byteL) * 0.1 ;
90000b30:	4403      	add	r3, r0
}
90000b32:	4630      	mov	r0, r6
			pDHT22_Data->Temperature = ((Temp_byteH << 8 ) + Temp_byteL) * 0.1 ;
90000b34:	ee07 3a90 	vmov	s15, r3
90000b38:	ed9f 6b11 	vldr	d6, [pc, #68]	@ 90000b80 <DHT22_GetData+0x140>
90000b3c:	eeb8 7be7 	vcvt.f64.s32	d7, s15
90000b40:	ee27 7b06 	vmul.f64	d7, d7, d6
		pDHT22_Data->Humidity = ((Rh_byteH << 8 ) + Rh_byteL) * 0.1;
90000b44:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 90000b80 <DHT22_GetData+0x140>
			pDHT22_Data->Temperature = ((Temp_byteH << 8 ) + Temp_byteL) * 0.1 ;
90000b48:	eeb7 7bc7 	vcvt.f32.f64	s14, d7
		pDHT22_Data->Humidity = ((Rh_byteH << 8 ) + Rh_byteL) * 0.1;
90000b4c:	ee07 1a90 	vmov	s15, r1
90000b50:	ed87 7a00 	vstr	s14, [r7]
90000b54:	eeb8 7be7 	vcvt.f64.s32	d7, s15
90000b58:	ee27 7b06 	vmul.f64	d7, d7, d6
90000b5c:	eeb7 7bc7 	vcvt.f32.f64	s14, d7
90000b60:	ed87 7a01 	vstr	s14, [r7, #4]
}
90000b64:	b007      	add	sp, #28
90000b66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		DWT_DelayUS (80);
90000b6a:	2050      	movs	r0, #80	@ 0x50
90000b6c:	f000 f830 	bl	90000bd0 <DWT_DelayUS>
		if ((HAL_GPIO_ReadPin (DHT22_PORT, DHT22_PIN))) bDHT22_present = -1;
90000b70:	4629      	mov	r1, r5
90000b72:	4805      	ldr	r0, [pc, #20]	@ (90000b88 <DHT22_GetData+0x148>)
90000b74:	f00b f8f2 	bl	9000bd5c <HAL_GPIO_ReadPin>
90000b78:	2800      	cmp	r0, #0
90000b7a:	d098      	beq.n	90000aae <DHT22_GetData+0x6e>
90000b7c:	e7cc      	b.n	90000b18 <DHT22_GetData+0xd8>
90000b7e:	bf00      	nop
90000b80:	9999999a 	.word	0x9999999a
90000b84:	3fb99999 	.word	0x3fb99999
90000b88:	58022000 	.word	0x58022000

90000b8c <DWT_Init>:
 */

char DWT_Init(){

	/* Enable trace and debug block in Debug Exception and Monitor Control Register */
	CoreDebug->DEMCR |=  CoreDebug_DEMCR_TRCENA_Msk; // 0x01000000;
90000b8c:	490d      	ldr	r1, [pc, #52]	@ (90000bc4 <DWT_Init+0x38>)
	// Unlock access to DWT (ITM, etc.) registers:
	DWT->LAR = 0xC5ACCE55;

	/* Reset the clock cycle counter value */
	DWT->CYCCNT = 0;
90000b8e:	2000      	movs	r0, #0
	DWT->LAR = 0xC5ACCE55;
90000b90:	4b0d      	ldr	r3, [pc, #52]	@ (90000bc8 <DWT_Init+0x3c>)
	CoreDebug->DEMCR |=  CoreDebug_DEMCR_TRCENA_Msk; // 0x01000000;
90000b92:	f8d1 20fc 	ldr.w	r2, [r1, #252]	@ 0xfc
char DWT_Init(){
90000b96:	b410      	push	{r4}
	CoreDebug->DEMCR |=  CoreDebug_DEMCR_TRCENA_Msk; // 0x01000000;
90000b98:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
	DWT->LAR = 0xC5ACCE55;
90000b9c:	4c0b      	ldr	r4, [pc, #44]	@ (90000bcc <DWT_Init+0x40>)
	CoreDebug->DEMCR |=  CoreDebug_DEMCR_TRCENA_Msk; // 0x01000000;
90000b9e:	f8c1 20fc 	str.w	r2, [r1, #252]	@ 0xfc
	DWT->LAR = 0xC5ACCE55;
90000ba2:	f8c3 4fb0 	str.w	r4, [r3, #4016]	@ 0xfb0
	DWT->CYCCNT = 0;
90000ba6:	6058      	str	r0, [r3, #4]

	/* Enable  clock cycle counter */
	DWT->CTRL |=  DWT_CTRL_CYCCNTENA_Msk; //0x00000001;
90000ba8:	681a      	ldr	r2, [r3, #0]
90000baa:	f042 0201 	orr.w	r2, r2, #1
90000bae:	601a      	str	r2, [r3, #0]

	// Execute 3 NOP instructiio0n just to wait for a few cycles:
	__NOP();
90000bb0:	bf00      	nop
	__NOP();
90000bb2:	bf00      	nop
	__NOP();
90000bb4:	bf00      	nop

	/* Check if clock cycle counter has started */
	if(DWT->CYCCNT)
90000bb6:	6858      	ldr	r0, [r3, #4]
	}
	else
	{
		return 1; /* clock cycle counter not started */
	}
}
90000bb8:	f85d 4b04 	ldr.w	r4, [sp], #4
90000bbc:	fab0 f080 	clz	r0, r0
90000bc0:	0940      	lsrs	r0, r0, #5
90000bc2:	4770      	bx	lr
90000bc4:	e000ed00 	.word	0xe000ed00
90000bc8:	e0001000 	.word	0xe0001000
90000bcc:	c5acce55 	.word	0xc5acce55

90000bd0 <DWT_DelayUS>:
 * DWT delay in microseconds
 * Patricio Bulic, UL FRI
 */

void DWT_DelayUS(unsigned int microseconds)
{
90000bd0:	b570      	push	{r4, r5, r6, lr}
  // read cycle counter:
  DWT->CYCCNT = 0;
90000bd2:	2300      	movs	r3, #0
90000bd4:	4c0c      	ldr	r4, [pc, #48]	@ (90000c08 <DWT_DelayUS+0x38>)
{
90000bd6:	b082      	sub	sp, #8
90000bd8:	4606      	mov	r6, r0
  DWT->CYCCNT = 0;
90000bda:	6063      	str	r3, [r4, #4]
  unsigned int clk_cycle_start = DWT->CYCCNT;
90000bdc:	6865      	ldr	r5, [r4, #4]

  // get CPU cycles per us:
  volatile unsigned int cpu_freq = HAL_RCC_GetSysClockFreq();
90000bde:	f00e f811 	bl	9000ec04 <HAL_RCC_GetSysClockFreq>
90000be2:	9001      	str	r0, [sp, #4]
  unsigned int cycles_per_us = (cpu_freq / 1000000);
90000be4:	4a09      	ldr	r2, [pc, #36]	@ (90000c0c <DWT_DelayUS+0x3c>)
90000be6:	9b01      	ldr	r3, [sp, #4]
90000be8:	fba2 2303 	umull	r2, r3, r2, r3
90000bec:	0c9b      	lsrs	r3, r3, #18

  unsigned int delay = clk_cycle_start + microseconds*cycles_per_us;
90000bee:	fb06 5003 	mla	r0, r6, r3, r5
  //microseconds = microseconds*cycles_per_us;


  if ((clk_cycle_start + delay) < clk_cycle_start) { // overflow!!!
90000bf2:	42c5      	cmn	r5, r0
90000bf4:	d301      	bcc.n	90000bfa <DWT_DelayUS+0x2a>
  }
  else{
	  while ((DWT->CYCCNT) < delay);
  }

}
90000bf6:	b002      	add	sp, #8
90000bf8:	bd70      	pop	{r4, r5, r6, pc}
	  while ((DWT->CYCCNT) < delay);
90000bfa:	6863      	ldr	r3, [r4, #4]
90000bfc:	4283      	cmp	r3, r0
90000bfe:	d2fa      	bcs.n	90000bf6 <DWT_DelayUS+0x26>
90000c00:	6863      	ldr	r3, [r4, #4]
90000c02:	4283      	cmp	r3, r0
90000c04:	d3f9      	bcc.n	90000bfa <DWT_DelayUS+0x2a>
90000c06:	e7f6      	b.n	90000bf6 <DWT_DelayUS+0x26>
90000c08:	e0001000 	.word	0xe0001000
90000c0c:	431bde83 	.word	0x431bde83

90000c10 <HAL_FDCAN_RxFifo0Callback>:
  *                     This parameter can be any combination of @arg FDCAN_Rx_Fifo0_Interrupts.
  * @retval None
  */
void HAL_FDCAN_RxFifo0Callback(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo0ITs)
{
  if((RxFifo0ITs & FDCAN_IT_RX_FIFO0_NEW_MESSAGE) != RESET)
90000c10:	07cb      	lsls	r3, r1, #31
90000c12:	d400      	bmi.n	90000c16 <HAL_FDCAN_RxFifo0Callback+0x6>
90000c14:	4770      	bx	lr
{
90000c16:	b510      	push	{r4, lr}
  {
    /* Retreive Rx messages from RX FIFO0 */
    if (HAL_FDCAN_GetRxMessage(hfdcan, FDCAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK)
90000c18:	4b18      	ldr	r3, [pc, #96]	@ (90000c7c <HAL_FDCAN_RxFifo0Callback+0x6c>)
90000c1a:	2140      	movs	r1, #64	@ 0x40
90000c1c:	4a18      	ldr	r2, [pc, #96]	@ (90000c80 <HAL_FDCAN_RxFifo0Callback+0x70>)
90000c1e:	4604      	mov	r4, r0
90000c20:	f00a fbd6 	bl	9000b3d0 <HAL_FDCAN_GetRxMessage>
90000c24:	b100      	cbz	r0, 90000c28 <HAL_FDCAN_RxFifo0Callback+0x18>
    {
      // Reception Error
      __NOP();
90000c26:	bf00      	nop
    }

    //(RxHeader.Identifier == 0x7E8) &&

    if ((RxHeader.IsFilterMatchingFrame == 0) && (RxHeader.RxFrameType == FDCAN_DATA_FRAME) && (RxHeader.IdType == FDCAN_STANDARD_ID) && (RxHeader.DataLength == FDCAN_DLC_BYTES_8))
90000c28:	4a15      	ldr	r2, [pc, #84]	@ (90000c80 <HAL_FDCAN_RxFifo0Callback+0x70>)
90000c2a:	e9d2 1001 	ldrd	r1, r0, [r2, #4]
90000c2e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
90000c30:	4303      	orrs	r3, r0
90000c32:	430b      	orrs	r3, r1
90000c34:	d111      	bne.n	90000c5a <HAL_FDCAN_RxFifo0Callback+0x4a>
90000c36:	68d2      	ldr	r2, [r2, #12]
90000c38:	f5b2 2f00 	cmp.w	r2, #524288	@ 0x80000
90000c3c:	d10d      	bne.n	90000c5a <HAL_FDCAN_RxFifo0Callback+0x4a>
    {
      new_can_data.length = RxData[0];
90000c3e:	490f      	ldr	r1, [pc, #60]	@ (90000c7c <HAL_FDCAN_RxFifo0Callback+0x6c>)
90000c40:	e9d1 2000 	ldrd	r2, r0, [r1]
90000c44:	490f      	ldr	r1, [pc, #60]	@ (90000c84 <HAL_FDCAN_RxFifo0Callback+0x74>)
90000c46:	600a      	str	r2, [r1, #0]
      /* PAZI!!!!! The highest interrupt priority that can be used by any interrupt service
  	  	  routine that makes calls to interrupt safe FreeRTOS API functions is
  	  	  configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY.
  	  	  DO NOT CALL INTERRUPT SAFE FREERTOS API FUNCTIONS FROM ANY INTERRUPT THAT HAS A HIGHER
  	  	  PRIORITY THAN THIS! (higher priorities are lower numeric values. */
      if (new_can_data.service == 0x41)
90000c48:	f3c2 2207 	ubfx	r2, r2, #8, #8
      new_can_data.length = RxData[0];
90000c4c:	6048      	str	r0, [r1, #4]
      if (new_can_data.service == 0x41)
90000c4e:	2a41      	cmp	r2, #65	@ 0x41
90000c50:	d00b      	beq.n	90000c6a <HAL_FDCAN_RxFifo0Callback+0x5a>
    	  osstatus = osMessageQueuePut(mid_OBD2MsgQueue, &new_can_data, 0U, 0U); // Timeout should be set to zero if called from ISR!!
      if ( osstatus != osOK){
90000c52:	4b0d      	ldr	r3, [pc, #52]	@ (90000c88 <HAL_FDCAN_RxFifo0Callback+0x78>)
90000c54:	6818      	ldr	r0, [r3, #0]
90000c56:	b100      	cbz	r0, 90000c5a <HAL_FDCAN_RxFifo0Callback+0x4a>
    	  // Message queue error
    	  __NOP();
90000c58:	bf00      	nop
      }
    }

    if (HAL_FDCAN_ActivateNotification(hfdcan, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0) != HAL_OK)
90000c5a:	2200      	movs	r2, #0
90000c5c:	2101      	movs	r1, #1
90000c5e:	4620      	mov	r0, r4
90000c60:	f00a fc74 	bl	9000b54c <HAL_FDCAN_ActivateNotification>
90000c64:	b100      	cbz	r0, 90000c68 <HAL_FDCAN_RxFifo0Callback+0x58>
    {
      // Notification Error
    	__NOP();
90000c66:	bf00      	nop

    }
  }
}
90000c68:	bd10      	pop	{r4, pc}
    	  osstatus = osMessageQueuePut(mid_OBD2MsgQueue, &new_can_data, 0U, 0U); // Timeout should be set to zero if called from ISR!!
90000c6a:	4808      	ldr	r0, [pc, #32]	@ (90000c8c <HAL_FDCAN_RxFifo0Callback+0x7c>)
90000c6c:	461a      	mov	r2, r3
90000c6e:	6800      	ldr	r0, [r0, #0]
90000c70:	f010 fe44 	bl	900118fc <osMessageQueuePut>
90000c74:	4b04      	ldr	r3, [pc, #16]	@ (90000c88 <HAL_FDCAN_RxFifo0Callback+0x78>)
90000c76:	6018      	str	r0, [r3, #0]
90000c78:	e7ed      	b.n	90000c56 <HAL_FDCAN_RxFifo0Callback+0x46>
90000c7a:	bf00      	nop
90000c7c:	24005b68 	.word	0x24005b68
90000c80:	24005b70 	.word	0x24005b70
90000c84:	24005b60 	.word	0x24005b60
90000c88:	24005b5c 	.word	0x24005b5c
90000c8c:	24005c40 	.word	0x24005c40

90000c90 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90000c90:	4b03      	ldr	r3, [pc, #12]	@ (90000ca0 <HAL_TIM_PeriodElapsedCallback+0x10>)
90000c92:	6802      	ldr	r2, [r0, #0]
90000c94:	429a      	cmp	r2, r3
90000c96:	d000      	beq.n	90000c9a <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90000c98:	4770      	bx	lr
    HAL_IncTick();
90000c9a:	f009 beb1 	b.w	9000aa00 <HAL_IncTick>
90000c9e:	bf00      	nop
90000ca0:	40001000 	.word	0x40001000

90000ca4 <Error_Handler>:
  */
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  BSP_LED_On(LED_RED);
90000ca4:	2001      	movs	r0, #1
{
90000ca6:	b508      	push	{r3, lr}
  BSP_LED_On(LED_RED);
90000ca8:	f008 ff9c 	bl	90009be4 <BSP_LED_On>
  while(1){
	  __NOP();
90000cac:	bf00      	nop
  while(1){
90000cae:	e7fd      	b.n	90000cac <Error_Handler+0x8>

90000cb0 <SystemClock_Config>:
{
90000cb0:	b530      	push	{r4, r5, lr}
90000cb2:	b09f      	sub	sp, #124	@ 0x7c
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90000cb4:	224c      	movs	r2, #76	@ 0x4c
90000cb6:	2100      	movs	r1, #0
90000cb8:	a80a      	add	r0, sp, #40	@ 0x28
90000cba:	f02b f89d 	bl	9002bdf8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90000cbe:	2220      	movs	r2, #32
90000cc0:	2100      	movs	r1, #0
90000cc2:	a802      	add	r0, sp, #8
90000cc4:	f02b f898 	bl	9002bdf8 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90000cc8:	2002      	movs	r0, #2
90000cca:	f00d fc13 	bl	9000e4f4 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
90000cce:	4b2a      	ldr	r3, [pc, #168]	@ (90000d78 <SystemClock_Config+0xc8>)
90000cd0:	2100      	movs	r1, #0
90000cd2:	4a2a      	ldr	r2, [pc, #168]	@ (90000d7c <SystemClock_Config+0xcc>)
90000cd4:	9101      	str	r1, [sp, #4]
90000cd6:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
90000cd8:	f021 0101 	bic.w	r1, r1, #1
90000cdc:	62d9      	str	r1, [r3, #44]	@ 0x2c
90000cde:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90000ce0:	f003 0301 	and.w	r3, r3, #1
90000ce4:	9301      	str	r3, [sp, #4]
90000ce6:	6993      	ldr	r3, [r2, #24]
90000ce8:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
90000cec:	6193      	str	r3, [r2, #24]
90000cee:	6993      	ldr	r3, [r2, #24]
90000cf0:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
90000cf4:	9301      	str	r3, [sp, #4]
90000cf6:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90000cf8:	6993      	ldr	r3, [r2, #24]
90000cfa:	049b      	lsls	r3, r3, #18
90000cfc:	d5fc      	bpl.n	90000cf8 <SystemClock_Config+0x48>
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
90000cfe:	4a20      	ldr	r2, [pc, #128]	@ (90000d80 <SystemClock_Config+0xd0>)
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90000d00:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90000d02:	2508      	movs	r5, #8
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90000d04:	a80a      	add	r0, sp, #40	@ 0x28
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
90000d06:	6a93      	ldr	r3, [r2, #40]	@ 0x28
90000d08:	f023 0303 	bic.w	r3, r3, #3
90000d0c:	f043 0302 	orr.w	r3, r3, #2
90000d10:	6293      	str	r3, [r2, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLM = 5;
90000d12:	2205      	movs	r2, #5
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90000d14:	2300      	movs	r3, #0
  RCC_OscInitStruct.PLL.PLLP = 2;
90000d16:	9417      	str	r4, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLM = 5;
90000d18:	9215      	str	r2, [sp, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLN = 160;
90000d1a:	22a0      	movs	r2, #160	@ 0xa0
  RCC_OscInitStruct.PLL.PLLR = 2;
90000d1c:	9419      	str	r4, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLN = 160;
90000d1e:	9216      	str	r2, [sp, #88]	@ 0x58
  RCC_OscInitStruct.PLL.PLLQ = 20;  /* fdcan_ker_ck = 40 MHz */
90000d20:	2214      	movs	r2, #20
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90000d22:	951a      	str	r5, [sp, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLQ = 20;  /* fdcan_ker_ck = 40 MHz */
90000d24:	9218      	str	r2, [sp, #96]	@ 0x60
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90000d26:	ed9f 7b12 	vldr	d7, [pc, #72]	@ 90000d70 <SystemClock_Config+0xc0>
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90000d2a:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90000d2e:	e9cd 4413 	strd	r4, r4, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90000d32:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90000d36:	f00d fc73 	bl	9000e620 <HAL_RCC_OscConfig>
90000d3a:	4603      	mov	r3, r0
90000d3c:	b998      	cbnz	r0, 90000d66 <SystemClock_Config+0xb6>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90000d3e:	223f      	movs	r2, #63	@ 0x3f
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90000d40:	9304      	str	r3, [sp, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90000d42:	2340      	movs	r3, #64	@ 0x40
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90000d44:	4621      	mov	r1, r4
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90000d46:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90000d48:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90000d4a:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90000d4c:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90000d4e:	9309      	str	r3, [sp, #36]	@ 0x24
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90000d50:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90000d52:	e9cd 5305 	strd	r5, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90000d56:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90000d5a:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90000d5c:	f00d ffe0 	bl	9000ed20 <HAL_RCC_ClockConfig>
90000d60:	b908      	cbnz	r0, 90000d66 <SystemClock_Config+0xb6>
}
90000d62:	b01f      	add	sp, #124	@ 0x7c
90000d64:	bd30      	pop	{r4, r5, pc}
    Error_Handler();
90000d66:	f7ff ff9d 	bl	90000ca4 <Error_Handler>
90000d6a:	bf00      	nop
90000d6c:	f3af 8000 	nop.w
90000d70:	00000001 	.word	0x00000001
90000d74:	00010000 	.word	0x00010000
90000d78:	58000400 	.word	0x58000400
90000d7c:	58024800 	.word	0x58024800
90000d80:	58024400 	.word	0x58024400

90000d84 <main>:
{
90000d84:	b580      	push	{r7, lr}
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90000d86:	2400      	movs	r4, #0
{
90000d88:	b0a0      	sub	sp, #128	@ 0x80
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90000d8a:	2501      	movs	r5, #1
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90000d8c:	271b      	movs	r7, #27
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90000d8e:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90000d90:	e9cd 4413 	strd	r4, r4, [sp, #76]	@ 0x4c
90000d94:	e9cd 4415 	strd	r4, r4, [sp, #84]	@ 0x54
  HAL_MPU_Disable();
90000d98:	f009 feb8 	bl	9000ab0c <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90000d9c:	f04f 5310 	mov.w	r3, #603979776	@ 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90000da0:	49ce      	ldr	r1, [pc, #824]	@ (900010dc <main+0x358>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90000da2:	a813      	add	r0, sp, #76	@ 0x4c
  MPU_InitStruct.BaseAddress = 0x24000000;
90000da4:	9314      	str	r3, [sp, #80]	@ 0x50
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90000da6:	4bce      	ldr	r3, [pc, #824]	@ (900010e0 <main+0x35c>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90000da8:	f8ad 504c 	strh.w	r5, [sp, #76]	@ 0x4c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90000dac:	e9cd 1315 	strd	r1, r3, [sp, #84]	@ 0x54
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90000db0:	f009 feca 	bl	9000ab48 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90000db4:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90000db8:	a813      	add	r0, sp, #76	@ 0x4c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90000dba:	f88d 4057 	strb.w	r4, [sp, #87]	@ 0x57
  MPU_InitStruct.BaseAddress = 0x90000000;
90000dbe:	9314      	str	r3, [sp, #80]	@ 0x50
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90000dc0:	f8ad 405a 	strh.w	r4, [sp, #90]	@ 0x5a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90000dc4:	f88d 504d 	strb.w	r5, [sp, #77]	@ 0x4d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90000dc8:	f88d 7054 	strb.w	r7, [sp, #84]	@ 0x54
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90000dcc:	f009 febc 	bl	9000ab48 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90000dd0:	2302      	movs	r3, #2
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90000dd2:	a813      	add	r0, sp, #76	@ 0x4c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90000dd4:	f8ad 6057 	strh.w	r6, [sp, #87]	@ 0x57
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90000dd8:	f88d 304d 	strb.w	r3, [sp, #77]	@ 0x4d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90000ddc:	231a      	movs	r3, #26
90000dde:	f88d 3054 	strb.w	r3, [sp, #84]	@ 0x54
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90000de2:	f240 1301 	movw	r3, #257	@ 0x101
90000de6:	f8ad 305a 	strh.w	r3, [sp, #90]	@ 0x5a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90000dea:	f009 fead 	bl	9000ab48 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90000dee:	f44f 7380 	mov.w	r3, #256	@ 0x100
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90000df2:	a813      	add	r0, sp, #76	@ 0x4c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90000df4:	f8ad 405a 	strh.w	r4, [sp, #90]	@ 0x5a
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90000df8:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90000dfa:	f8ad 3057 	strh.w	r3, [sp, #87]	@ 0x57
  MPU_InitStruct.BaseAddress = 0xD0000000;
90000dfe:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90000e02:	f88d 7054 	strb.w	r7, [sp, #84]	@ 0x54
  MPU_InitStruct.BaseAddress = 0xD0000000;
90000e06:	9314      	str	r3, [sp, #80]	@ 0x50
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90000e08:	f88d 604d 	strb.w	r6, [sp, #77]	@ 0x4d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90000e0c:	f009 fe9c 	bl	9000ab48 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90000e10:	2318      	movs	r3, #24
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90000e12:	a813      	add	r0, sp, #76	@ 0x4c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90000e14:	f88d 6057 	strb.w	r6, [sp, #87]	@ 0x57
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90000e18:	f88d 3054 	strb.w	r3, [sp, #84]	@ 0x54
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90000e1c:	f88d 404d 	strb.w	r4, [sp, #77]	@ 0x4d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90000e20:	f88d 505a 	strb.w	r5, [sp, #90]	@ 0x5a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90000e24:	f009 fe90 	bl	9000ab48 <HAL_MPU_ConfigRegion>
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90000e28:	4620      	mov	r0, r4
90000e2a:	f009 fe7d 	bl	9000ab28 <HAL_MPU_Enable>
  \details Turns on I-Cache
  */
__STATIC_FORCEINLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90000e2e:	4aad      	ldr	r2, [pc, #692]	@ (900010e4 <main+0x360>)
90000e30:	6953      	ldr	r3, [r2, #20]
90000e32:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
90000e36:	d111      	bne.n	90000e5c <main+0xd8>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000e38:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000e3c:	f3bf 8f6f 	isb	sy

    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90000e40:	f8c2 3250 	str.w	r3, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90000e44:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000e48:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90000e4c:	6953      	ldr	r3, [r2, #20]
90000e4e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
90000e52:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90000e54:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000e58:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90000e5c:	48a1      	ldr	r0, [pc, #644]	@ (900010e4 <main+0x360>)
90000e5e:	6943      	ldr	r3, [r0, #20]
90000e60:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
90000e64:	d124      	bne.n	90000eb0 <main+0x12c>

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000e66:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90000e6a:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000e6e:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90000e72:	f643 76e0 	movw	r6, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000e76:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000e7a:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90000e7e:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90000e80:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000e84:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90000e86:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000e8a:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90000e8c:	f8c0 2260 	str.w	r2, [r0, #608]	@ 0x260
      } while (ways-- != 0U);
90000e90:	1c5a      	adds	r2, r3, #1
90000e92:	d1f8      	bne.n	90000e86 <main+0x102>
    } while(sets-- != 0U);
90000e94:	3c20      	subs	r4, #32
90000e96:	f114 0f20 	cmn.w	r4, #32
90000e9a:	d1f1      	bne.n	90000e80 <main+0xfc>
90000e9c:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90000ea0:	6943      	ldr	r3, [r0, #20]
90000ea2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
90000ea6:	6143      	str	r3, [r0, #20]
90000ea8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000eac:	f3bf 8f6f 	isb	sy
  HAL_Init();
90000eb0:	f009 fd76 	bl	9000a9a0 <HAL_Init>
  SystemClock_Config();
90000eb4:	f7ff fefc 	bl	90000cb0 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90000eb8:	b662      	cpsie	i
  __HAL_RCC_GPIOK_CLK_ENABLE();
90000eba:	4c8b      	ldr	r4, [pc, #556]	@ (900010e8 <main+0x364>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90000ebc:	2500      	movs	r5, #0
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
90000ebe:	2180      	movs	r1, #128	@ 0x80
90000ec0:	488a      	ldr	r0, [pc, #552]	@ (900010ec <main+0x368>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90000ec2:	9517      	str	r5, [sp, #92]	@ 0x5c
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
90000ec4:	462a      	mov	r2, r5
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90000ec6:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90000ec8:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Pin = RENDER_TIME_Pin;
90000ecc:	2780      	movs	r7, #128	@ 0x80
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90000ece:	f04f 0908 	mov.w	r9, #8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90000ed2:	e9cd 5513 	strd	r5, r5, [sp, #76]	@ 0x4c
90000ed6:	e9cd 5515 	strd	r5, r5, [sp, #84]	@ 0x54
  __HAL_RCC_GPIOK_CLK_ENABLE();
90000eda:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000ede:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
90000ee2:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90000ee6:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000eea:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
90000eee:	9302      	str	r3, [sp, #8]
90000ef0:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90000ef2:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000ef6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90000efa:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90000efe:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000f02:	f003 0340 	and.w	r3, r3, #64	@ 0x40
90000f06:	9303      	str	r3, [sp, #12]
90000f08:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90000f0a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000f0e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90000f12:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90000f16:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000f1a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90000f1e:	9304      	str	r3, [sp, #16]
90000f20:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90000f22:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000f26:	f043 0310 	orr.w	r3, r3, #16
90000f2a:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90000f2e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000f32:	f003 0310 	and.w	r3, r3, #16
90000f36:	9305      	str	r3, [sp, #20]
90000f38:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90000f3a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000f3e:	f043 0302 	orr.w	r3, r3, #2
90000f42:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90000f46:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000f4a:	f003 0302 	and.w	r3, r3, #2
90000f4e:	9306      	str	r3, [sp, #24]
90000f50:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90000f52:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000f56:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
90000f5a:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90000f5e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000f62:	f403 7300 	and.w	r3, r3, #512	@ 0x200
90000f66:	9307      	str	r3, [sp, #28]
90000f68:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90000f6a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000f6e:	f043 0308 	orr.w	r3, r3, #8
90000f72:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90000f76:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000f7a:	f003 0308 	and.w	r3, r3, #8
90000f7e:	9308      	str	r3, [sp, #32]
90000f80:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOA_CLK_ENABLE();
90000f82:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000f86:	f043 0301 	orr.w	r3, r3, #1
90000f8a:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90000f8e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000f92:	f003 0301 	and.w	r3, r3, #1
90000f96:	9309      	str	r3, [sp, #36]	@ 0x24
90000f98:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOF_CLK_ENABLE();
90000f9a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000f9e:	f043 0320 	orr.w	r3, r3, #32
90000fa2:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90000fa6:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000faa:	f003 0320 	and.w	r3, r3, #32
90000fae:	930a      	str	r3, [sp, #40]	@ 0x28
90000fb0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
90000fb2:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000fb6:	430b      	orrs	r3, r1
90000fb8:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90000fbc:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
90000fc0:	400b      	ands	r3, r1
90000fc2:	930b      	str	r3, [sp, #44]	@ 0x2c
90000fc4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
90000fc6:	f00a fecf 	bl	9000bd68 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90000fca:	462a      	mov	r2, r5
90000fcc:	2180      	movs	r1, #128	@ 0x80
90000fce:	4848      	ldr	r0, [pc, #288]	@ (900010f0 <main+0x36c>)
90000fd0:	f00a feca 	bl	9000bd68 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90000fd4:	462a      	mov	r2, r5
90000fd6:	2108      	movs	r1, #8
90000fd8:	4846      	ldr	r0, [pc, #280]	@ (900010f4 <main+0x370>)
90000fda:	f00a fec5 	bl	9000bd68 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000fde:	2201      	movs	r2, #1
90000fe0:	4845      	ldr	r0, [pc, #276]	@ (900010f8 <main+0x374>)
90000fe2:	4611      	mov	r1, r2
90000fe4:	f00a fec0 	bl	9000bd68 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, LCD_RESET_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90000fe8:	462a      	mov	r2, r5
90000fea:	2144      	movs	r1, #68	@ 0x44
90000fec:	4843      	ldr	r0, [pc, #268]	@ (900010fc <main+0x378>)
90000fee:	f00a febb 	bl	9000bd68 <HAL_GPIO_WritePin>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
90000ff2:	a913      	add	r1, sp, #76	@ 0x4c
90000ff4:	483d      	ldr	r0, [pc, #244]	@ (900010ec <main+0x368>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90000ff6:	f8cd 8058 	str.w	r8, [sp, #88]	@ 0x58
  GPIO_InitStruct.Pin = RENDER_TIME_Pin;
90000ffa:	9713      	str	r7, [sp, #76]	@ 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90000ffc:	e9cd 6514 	strd	r6, r5, [sp, #80]	@ 0x50
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
90001000:	f00a fca0 	bl	9000b944 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90001004:	a913      	add	r1, sp, #76	@ 0x4c
90001006:	483a      	ldr	r0, [pc, #232]	@ (900010f0 <main+0x36c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90001008:	e9cd 7613 	strd	r7, r6, [sp, #76]	@ 0x4c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
9000100c:	e9cd 5515 	strd	r5, r5, [sp, #84]	@ 0x54
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90001010:	f00a fc98 	bl	9000b944 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90001014:	a913      	add	r1, sp, #76	@ 0x4c
90001016:	4837      	ldr	r0, [pc, #220]	@ (900010f4 <main+0x370>)
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90001018:	2704      	movs	r7, #4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000101a:	f8cd 8058 	str.w	r8, [sp, #88]	@ 0x58
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
9000101e:	f8cd 904c 	str.w	r9, [sp, #76]	@ 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90001022:	e9cd 6514 	strd	r6, r5, [sp, #80]	@ 0x50
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90001026:	f00a fc8d 	bl	9000b944 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
9000102a:	a913      	add	r1, sp, #76	@ 0x4c
9000102c:	4832      	ldr	r0, [pc, #200]	@ (900010f8 <main+0x374>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
9000102e:	e9cd 5515 	strd	r5, r5, [sp, #84]	@ 0x54
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90001032:	e9cd 6613 	strd	r6, r6, [sp, #76]	@ 0x4c
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90001036:	f00a fc85 	bl	9000b944 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
9000103a:	a913      	add	r1, sp, #76	@ 0x4c
9000103c:	482f      	ldr	r0, [pc, #188]	@ (900010fc <main+0x378>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
9000103e:	9516      	str	r5, [sp, #88]	@ 0x58
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90001040:	9713      	str	r7, [sp, #76]	@ 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90001042:	e9cd 6514 	strd	r6, r5, [sp, #80]	@ 0x50
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90001046:	f00a fc7d 	bl	9000b944 <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000104a:	f8cd 8058 	str.w	r8, [sp, #88]	@ 0x58
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
9000104e:	f04f 0840 	mov.w	r8, #64	@ 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90001052:	a913      	add	r1, sp, #76	@ 0x4c
90001054:	4829      	ldr	r0, [pc, #164]	@ (900010fc <main+0x378>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90001056:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
9000105a:	e9cd 6514 	strd	r6, r5, [sp, #80]	@ 0x50
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
9000105e:	f00a fc71 	bl	9000b944 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90001062:	f8d4 30d4 	ldr.w	r3, [r4, #212]	@ 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90001066:	462a      	mov	r2, r5
90001068:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
9000106a:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
9000106c:	207a      	movs	r0, #122	@ 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
9000106e:	f8c4 30d4 	str.w	r3, [r4, #212]	@ 0xd4
90001072:	f8d4 30d4 	ldr.w	r3, [r4, #212]	@ 0xd4
  hltdc.Instance = LTDC;
90001076:	4c22      	ldr	r4, [pc, #136]	@ (90001100 <main+0x37c>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90001078:	4033      	ands	r3, r6
9000107a:	9301      	str	r3, [sp, #4]
9000107c:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
9000107e:	f009 fce9 	bl	9000aa54 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90001082:	207a      	movs	r0, #122	@ 0x7a
90001084:	f009 fd22 	bl	9000aacc <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90001088:	2234      	movs	r2, #52	@ 0x34
9000108a:	4629      	mov	r1, r5
9000108c:	a813      	add	r0, sp, #76	@ 0x4c
9000108e:	f02a feb3 	bl	9002bdf8 <memset>
  hltdc.Instance = LTDC;
90001092:	4b1c      	ldr	r3, [pc, #112]	@ (90001104 <main+0x380>)
  hltdc.Init.Backcolor.Blue = 0;
90001094:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hltdc.Init.AccumulatedActiveH = 283;
90001096:	f240 2c0a 	movw	ip, #522	@ 0x20a
  hltdc.Instance = LTDC;
9000109a:	6023      	str	r3, [r4, #0]
  hltdc.Init.HorizontalSync = 39;
9000109c:	2327      	movs	r3, #39	@ 0x27
  hltdc.Init.Backcolor.Red = 0;
9000109e:	f884 5036 	strb.w	r5, [r4, #54]	@ 0x36
  hltdc.Init.TotalHeigh = 285;
900010a2:	f44f 7e04 	mov.w	lr, #528	@ 0x210
  hltdc.Init.HorizontalSync = 39;
900010a6:	6163      	str	r3, [r4, #20]
  hltdc.Init.AccumulatedVBP = 11;
900010a8:	230b      	movs	r3, #11
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
900010aa:	4620      	mov	r0, r4
  hltdc.Init.VerticalSync = 8;
900010ac:	f8c4 9018 	str.w	r9, [r4, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
900010b0:	e9c4 5501 	strd	r5, r5, [r4, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
900010b4:	e9c4 5503 	strd	r5, r5, [r4, #12]
  hltdc.Init.AccumulatedVBP = 11;
900010b8:	252a      	movs	r5, #42	@ 0x2a
900010ba:	e9c4 5307 	strd	r5, r3, [r4, #28]
  hltdc.Init.AccumulatedActiveH = 283;
900010be:	f240 131b 	movw	r3, #283	@ 0x11b
900010c2:	e9c4 c309 	strd	ip, r3, [r4, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
900010c6:	f240 131d 	movw	r3, #285	@ 0x11d
900010ca:	e9c4 e30b 	strd	lr, r3, [r4, #44]	@ 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
900010ce:	f00c fe39 	bl	9000dd44 <HAL_LTDC_Init>
900010d2:	4602      	mov	r2, r0
900010d4:	2800      	cmp	r0, #0
900010d6:	f040 80c0 	bne.w	9000125a <main+0x4d6>
900010da:	e015      	b.n	90001108 <main+0x384>
900010dc:	03000012 	.word	0x03000012
900010e0:	01010001 	.word	0x01010001
900010e4:	e000ed00 	.word	0xe000ed00
900010e8:	58024400 	.word	0x58024400
900010ec:	58020400 	.word	0x58020400
900010f0:	58020c00 	.word	0x58020c00
900010f4:	58021800 	.word	0x58021800
900010f8:	58022800 	.word	0x58022800
900010fc:	58020000 	.word	0x58020000
90001100:	24005d0c 	.word	0x24005d0c
90001104:	50001000 	.word	0x50001000
  pLayerCfg.WindowX1 = 480;
90001108:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  pLayerCfg.Alpha = 255;
9000110c:	f04f 0902 	mov.w	r9, #2
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90001110:	2505      	movs	r5, #5
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90001112:	a913      	add	r1, sp, #76	@ 0x4c
  pLayerCfg.WindowX1 = 480;
90001114:	9314      	str	r3, [sp, #80]	@ 0x50
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90001116:	4620      	mov	r0, r4
  pLayerCfg.ImageWidth = 480;
90001118:	931d      	str	r3, [sp, #116]	@ 0x74
  pLayerCfg.WindowY1 = 272;
9000111a:	f44f 7388 	mov.w	r3, #272	@ 0x110
  pLayerCfg.WindowX0 = 0;
9000111e:	9213      	str	r2, [sp, #76]	@ 0x4c
  pLayerCfg.WindowY1 = 272;
90001120:	9316      	str	r3, [sp, #88]	@ 0x58
  pLayerCfg.ImageHeight = 272;
90001122:	931e      	str	r3, [sp, #120]	@ 0x78
  pLayerCfg.Alpha = 255;
90001124:	23ff      	movs	r3, #255	@ 0xff
  pLayerCfg.WindowY0 = 0;
90001126:	9215      	str	r2, [sp, #84]	@ 0x54
  pLayerCfg.Alpha0 = 0;
90001128:	9219      	str	r2, [sp, #100]	@ 0x64
  pLayerCfg.FBStartAdress = 0;
9000112a:	921c      	str	r2, [sp, #112]	@ 0x70
  pLayerCfg.Backcolor.Blue = 0;
9000112c:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
  pLayerCfg.Backcolor.Red = 0;
90001130:	f88d 207e 	strb.w	r2, [sp, #126]	@ 0x7e
  pLayerCfg.Alpha = 255;
90001134:	e9cd 9317 	strd	r9, r3, [sp, #92]	@ 0x5c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90001138:	f44f 6380 	mov.w	r3, #1024	@ 0x400
9000113c:	e9cd 351a 	strd	r3, r5, [sp, #104]	@ 0x68
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90001140:	f00c fed4 	bl	9000deec <HAL_LTDC_ConfigLayer>
90001144:	2800      	cmp	r0, #0
90001146:	f040 8088 	bne.w	9000125a <main+0x4d6>
  hdma2d.Instance = DMA2D;
9000114a:	4c45      	ldr	r4, [pc, #276]	@ (90001260 <main+0x4dc>)
9000114c:	4b45      	ldr	r3, [pc, #276]	@ (90001264 <main+0x4e0>)
  hdma2d.Init.OutputOffset = 0;
9000114e:	60e0      	str	r0, [r4, #12]
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90001150:	65e0      	str	r0, [r4, #92]	@ 0x5c
  hdma2d.Instance = DMA2D;
90001152:	6023      	str	r3, [r4, #0]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90001154:	e9c4 0901 	strd	r0, r9, [r4, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90001158:	e9c4 0911 	strd	r0, r9, [r4, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
9000115c:	e9c4 0013 	strd	r0, r0, [r4, #76]	@ 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90001160:	e9c4 0015 	strd	r0, r0, [r4, #84]	@ 0x54
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90001164:	4620      	mov	r0, r4
90001166:	f009 fff1 	bl	9000b14c <HAL_DMA2D_Init>
9000116a:	2800      	cmp	r0, #0
9000116c:	d175      	bne.n	9000125a <main+0x4d6>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
9000116e:	4620      	mov	r0, r4
90001170:	4631      	mov	r1, r6
90001172:	f00a f8c3 	bl	9000b2fc <HAL_DMA2D_ConfigLayer>
90001176:	4603      	mov	r3, r0
90001178:	2800      	cmp	r0, #0
9000117a:	d16e      	bne.n	9000125a <main+0x4d6>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
9000117c:	483a      	ldr	r0, [pc, #232]	@ (90001268 <main+0x4e4>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
9000117e:	f44f 72c0 	mov.w	r2, #384	@ 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90001182:	a90c      	add	r1, sp, #48	@ 0x30
  SdramTiming.WriteRecoveryTime = 5;
90001184:	9510      	str	r5, [sp, #64]	@ 0x40
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90001186:	6283      	str	r3, [r0, #40]	@ 0x28
  SdramTiming.LoadToActiveDelay = 2;
90001188:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
  SdramTiming.SelfRefreshTime = 4;
9000118c:	970e      	str	r7, [sp, #56]	@ 0x38
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
9000118e:	60c7      	str	r7, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90001190:	f8c0 8014 	str.w	r8, [r0, #20]
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90001194:	e9c0 2306 	strd	r2, r3, [r0, #24]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90001198:	e9c0 6301 	strd	r6, r3, [r0, #4]
  SdramTiming.ExitSelfRefreshDelay = 7;
9000119c:	2307      	movs	r3, #7
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
9000119e:	f44f 6200 	mov.w	r2, #2048	@ 0x800
  SdramTiming.ExitSelfRefreshDelay = 7;
900011a2:	930d      	str	r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
900011a4:	930f      	str	r3, [sp, #60]	@ 0x3c
  hsdram2.Instance = FMC_SDRAM_DEVICE;
900011a6:	4b31      	ldr	r3, [pc, #196]	@ (9000126c <main+0x4e8>)
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
900011a8:	6202      	str	r2, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
900011aa:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram2.Instance = FMC_SDRAM_DEVICE;
900011ae:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
900011b0:	2310      	movs	r3, #16
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
900011b2:	6242      	str	r2, [r0, #36]	@ 0x24
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
900011b4:	6103      	str	r3, [r0, #16]
  SdramTiming.RCDDelay = 2;
900011b6:	e9cd 9911 	strd	r9, r9, [sp, #68]	@ 0x44
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
900011ba:	f00f f95b 	bl	90010474 <HAL_SDRAM_Init>
900011be:	4604      	mov	r4, r0
900011c0:	2800      	cmp	r0, #0
900011c2:	d14a      	bne.n	9000125a <main+0x4d6>
  BSP_SDRAM_DeInit(0);
900011c4:	f009 f988 	bl	9000a4d8 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
900011c8:	4620      	mov	r0, r4
900011ca:	f009 f9cf 	bl	9000a56c <BSP_SDRAM_Init>
900011ce:	2800      	cmp	r0, #0
900011d0:	d143      	bne.n	9000125a <main+0x4d6>
  MX_LIBJPEG_Init();
900011d2:	f000 fbf1 	bl	900019b8 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
900011d6:	4b26      	ldr	r3, [pc, #152]	@ (90001270 <main+0x4ec>)
900011d8:	4826      	ldr	r0, [pc, #152]	@ (90001274 <main+0x4f0>)
900011da:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
900011dc:	f00b fd7e 	bl	9000ccdc <HAL_JPEG_Init>
900011e0:	4603      	mov	r3, r0
900011e2:	2800      	cmp	r0, #0
900011e4:	d139      	bne.n	9000125a <main+0x4d6>
  hcrc.Instance = CRC;
900011e6:	4824      	ldr	r0, [pc, #144]	@ (90001278 <main+0x4f4>)
900011e8:	4a24      	ldr	r2, [pc, #144]	@ (9000127c <main+0x4f8>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
900011ea:	8083      	strh	r3, [r0, #4]
  hcrc.Instance = CRC;
900011ec:	6002      	str	r2, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
900011ee:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
900011f0:	e9c0 3305 	strd	r3, r3, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
900011f4:	f009 fcda 	bl	9000abac <HAL_CRC_Init>
900011f8:	4603      	mov	r3, r0
900011fa:	bb70      	cbnz	r0, 9000125a <main+0x4d6>
  huart1.Instance = USART1;
900011fc:	4c20      	ldr	r4, [pc, #128]	@ (90001280 <main+0x4fc>)
  huart1.Init.BaudRate = 115200;
900011fe:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
  huart1.Instance = USART1;
90001202:	4820      	ldr	r0, [pc, #128]	@ (90001284 <main+0x500>)
  huart1.Init.Mode = UART_MODE_TX_RX;
90001204:	220c      	movs	r2, #12
  huart1.Init.BaudRate = 115200;
90001206:	e884 000b 	stmia.w	r4, {r0, r1, r3}
  if (HAL_UART_Init(&huart1) != HAL_OK)
9000120a:	4620      	mov	r0, r4
  huart1.Init.Parity = UART_PARITY_NONE;
9000120c:	e9c4 3303 	strd	r3, r3, [r4, #12]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
90001210:	e9c4 2305 	strd	r2, r3, [r4, #20]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
90001214:	e9c4 3307 	strd	r3, r3, [r4, #28]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
90001218:	e9c4 3309 	strd	r3, r3, [r4, #36]	@ 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
9000121c:	f010 f868 	bl	900112f0 <HAL_UART_Init>
90001220:	4601      	mov	r1, r0
90001222:	b9d0      	cbnz	r0, 9000125a <main+0x4d6>
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
90001224:	4620      	mov	r0, r4
90001226:	f010 f8bb 	bl	900113a0 <HAL_UARTEx_SetTxFifoThreshold>
9000122a:	b9b0      	cbnz	r0, 9000125a <main+0x4d6>
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
9000122c:	2100      	movs	r1, #0
9000122e:	4620      	mov	r0, r4
90001230:	f010 f8f8 	bl	90011424 <HAL_UARTEx_SetRxFifoThreshold>
90001234:	b988      	cbnz	r0, 9000125a <main+0x4d6>
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
90001236:	4620      	mov	r0, r4
90001238:	f010 f894 	bl	90011364 <HAL_UARTEx_DisableFifoMode>
9000123c:	b968      	cbnz	r0, 9000125a <main+0x4d6>
  MX_TouchGFX_Init();
9000123e:	f000 fbbf 	bl	900019c0 <MX_TouchGFX_Init>
	  DHT22_GetData (&DHT22_Data);
90001242:	4c11      	ldr	r4, [pc, #68]	@ (90001288 <main+0x504>)
  MX_TouchGFX_PreOSInit();
90001244:	f000 fbba 	bl	900019bc <MX_TouchGFX_PreOSInit>
  DWT_Init();
90001248:	f7ff fca0 	bl	90000b8c <DWT_Init>
  DWT_DelayUS(200);
9000124c:	20c8      	movs	r0, #200	@ 0xc8
9000124e:	f7ff fcbf 	bl	90000bd0 <DWT_DelayUS>
	  DHT22_GetData (&DHT22_Data);
90001252:	4620      	mov	r0, r4
90001254:	f7ff fbf4 	bl	90000a40 <DHT22_GetData>
  while(1) {
90001258:	e7fb      	b.n	90001252 <main+0x4ce>
    Error_Handler();
9000125a:	f7ff fd23 	bl	90000ca4 <Error_Handler>
9000125e:	bf00      	nop
90001260:	24005ee4 	.word	0x24005ee4
90001264:	52001000 	.word	0x52001000
90001268:	24005c44 	.word	0x24005c44
9000126c:	52004140 	.word	0x52004140
90001270:	52003000 	.word	0x52003000
90001274:	24005e8c 	.word	0x24005e8c
90001278:	24005f4c 	.word	0x24005f4c
9000127c:	58024c00 	.word	0x58024c00
90001280:	24005c78 	.word	0x24005c78
90001284:	40011000 	.word	0x40011000
90001288:	24005c38 	.word	0x24005c38

9000128c <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000128c:	4b0b      	ldr	r3, [pc, #44]	@ (900012bc <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
9000128e:	2200      	movs	r2, #0
90001290:	210f      	movs	r1, #15
90001292:	f06f 0001 	mvn.w	r0, #1
{
90001296:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90001298:	f8d3 40f4 	ldr.w	r4, [r3, #244]	@ 0xf4
{
9000129c:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000129e:	f044 0402 	orr.w	r4, r4, #2
900012a2:	f8c3 40f4 	str.w	r4, [r3, #244]	@ 0xf4
900012a6:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
900012aa:	f003 0302 	and.w	r3, r3, #2
900012ae:	9301      	str	r3, [sp, #4]
900012b0:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
900012b2:	b003      	add	sp, #12
900012b4:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
900012b8:	f009 bbcc 	b.w	9000aa54 <HAL_NVIC_SetPriority>
900012bc:	58024400 	.word	0x58024400

900012c0 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
900012c0:	4b0a      	ldr	r3, [pc, #40]	@ (900012ec <HAL_CRC_MspInit+0x2c>)
900012c2:	6802      	ldr	r2, [r0, #0]
900012c4:	429a      	cmp	r2, r3
900012c6:	d000      	beq.n	900012ca <HAL_CRC_MspInit+0xa>
900012c8:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
900012ca:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
{
900012ce:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
900012d0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900012d4:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
900012d8:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900012dc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
900012e0:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
900012e4:	9301      	str	r3, [sp, #4]
900012e6:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
900012e8:	b002      	add	sp, #8
900012ea:	4770      	bx	lr
900012ec:	58024c00 	.word	0x58024c00

900012f0 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
900012f0:	4b0f      	ldr	r3, [pc, #60]	@ (90001330 <HAL_DMA2D_MspInit+0x40>)
900012f2:	6802      	ldr	r2, [r0, #0]
900012f4:	429a      	cmp	r2, r3
900012f6:	d000      	beq.n	900012fa <HAL_DMA2D_MspInit+0xa>
900012f8:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900012fa:	4b0e      	ldr	r3, [pc, #56]	@ (90001334 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900012fc:	205a      	movs	r0, #90	@ 0x5a
900012fe:	2200      	movs	r2, #0
90001300:	2105      	movs	r1, #5
{
90001302:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001304:	f8d3 40d4 	ldr.w	r4, [r3, #212]	@ 0xd4
{
90001308:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000130a:	f044 0410 	orr.w	r4, r4, #16
9000130e:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
90001312:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
90001316:	f003 0310 	and.w	r3, r3, #16
9000131a:	9301      	str	r3, [sp, #4]
9000131c:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
9000131e:	f009 fb99 	bl	9000aa54 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90001322:	205a      	movs	r0, #90	@ 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
90001324:	b002      	add	sp, #8
90001326:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
9000132a:	f009 bbcf 	b.w	9000aacc <HAL_NVIC_EnableIRQ>
9000132e:	bf00      	nop
90001330:	52001000 	.word	0x52001000
90001334:	58024400 	.word	0x58024400

90001338 <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90001338:	4b3f      	ldr	r3, [pc, #252]	@ (90001438 <HAL_JPEG_MspInit+0x100>)
9000133a:	6802      	ldr	r2, [r0, #0]
9000133c:	429a      	cmp	r2, r3
9000133e:	d000      	beq.n	90001342 <HAL_JPEG_MspInit+0xa>
90001340:	4770      	bx	lr
{
90001342:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90001344:	4b3d      	ldr	r3, [pc, #244]	@ (9000143c <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90001346:	2211      	movs	r2, #17
90001348:	4e3d      	ldr	r6, [pc, #244]	@ (90001440 <HAL_JPEG_MspInit+0x108>)
{
9000134a:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000134c:	4d3d      	ldr	r5, [pc, #244]	@ (90001444 <HAL_JPEG_MspInit+0x10c>)
9000134e:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90001350:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90001352:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90001354:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90001358:	493b      	ldr	r1, [pc, #236]	@ (90001448 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
9000135a:	f042 0220 	orr.w	r2, r2, #32
9000135e:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90001362:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90001364:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90001368:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
9000136a:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
9000136e:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90001370:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90001372:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90001374:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90001376:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90001378:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000137c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
90001380:	6272      	str	r2, [r6, #36]	@ 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90001382:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90001384:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
90001388:	e9c6 330d 	strd	r3, r3, [r6, #52]	@ 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
9000138c:	62b2      	str	r2, [r6, #40]	@ 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
9000138e:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
90001392:	f44f 42a0 	mov.w	r2, #20480	@ 0x5000
90001396:	e9c6 230b 	strd	r2, r3, [r6, #44]	@ 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000139a:	2313      	movs	r3, #19
9000139c:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
9000139e:	2302      	movs	r3, #2
900013a0:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
900013a2:	f00c fe99 	bl	9000e0d8 <HAL_MDMA_Init>
900013a6:	2800      	cmp	r0, #0
900013a8:	d13a      	bne.n	90001420 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
900013aa:	2200      	movs	r2, #0
900013ac:	4824      	ldr	r0, [pc, #144]	@ (90001440 <HAL_JPEG_MspInit+0x108>)
900013ae:	4611      	mov	r1, r2
900013b0:	f00c ff30 	bl	9000e214 <HAL_MDMA_ConfigPostRequestMask>
900013b4:	2800      	cmp	r0, #0
900013b6:	d13c      	bne.n	90001432 <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
900013b8:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
900013ba:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
900013bc:	6326      	str	r6, [r4, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
900013be:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
900013c0:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
900013c2:	62aa      	str	r2, [r5, #40]	@ 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
900013c4:	f44f 3220 	mov.w	r2, #163840	@ 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900013c8:	4920      	ldr	r1, [pc, #128]	@ (9000144c <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
900013ca:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
900013cc:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
900013ce:	63ab      	str	r3, [r5, #56]	@ 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
900013d0:	6434      	str	r4, [r6, #64]	@ 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
900013d2:	e9c5 230c 	strd	r2, r3, [r5, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
900013d6:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900013da:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900013dc:	22c0      	movs	r2, #192	@ 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900013de:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900013e2:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900013e4:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900013e8:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900013ec:	4815      	ldr	r0, [pc, #84]	@ (90001444 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900013ee:	62e9      	str	r1, [r5, #44]	@ 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900013f0:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900013f2:	626b      	str	r3, [r5, #36]	@ 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900013f4:	f00c fe70 	bl	9000e0d8 <HAL_MDMA_Init>
900013f8:	b9c0      	cbnz	r0, 9000142c <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
900013fa:	2200      	movs	r2, #0
900013fc:	4811      	ldr	r0, [pc, #68]	@ (90001444 <HAL_JPEG_MspInit+0x10c>)
900013fe:	4611      	mov	r1, r2
90001400:	f00c ff08 	bl	9000e214 <HAL_MDMA_ConfigPostRequestMask>
90001404:	b978      	cbnz	r0, 90001426 <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90001406:	6365      	str	r5, [r4, #52]	@ 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90001408:	2079      	movs	r0, #121	@ 0x79
9000140a:	2200      	movs	r2, #0
9000140c:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
9000140e:	642c      	str	r4, [r5, #64]	@ 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90001410:	f009 fb20 	bl	9000aa54 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90001414:	2079      	movs	r0, #121	@ 0x79
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
90001416:	b002      	add	sp, #8
90001418:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
9000141c:	f009 bb56 	b.w	9000aacc <HAL_NVIC_EnableIRQ>
      Error_Handler();
90001420:	f7ff fc40 	bl	90000ca4 <Error_Handler>
90001424:	e7c1      	b.n	900013aa <HAL_JPEG_MspInit+0x72>
      Error_Handler();
90001426:	f7ff fc3d 	bl	90000ca4 <Error_Handler>
9000142a:	e7ec      	b.n	90001406 <HAL_JPEG_MspInit+0xce>
      Error_Handler();
9000142c:	f7ff fc3a 	bl	90000ca4 <Error_Handler>
90001430:	e7e3      	b.n	900013fa <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
90001432:	f7ff fc37 	bl	90000ca4 <Error_Handler>
90001436:	e7bf      	b.n	900013b8 <HAL_JPEG_MspInit+0x80>
90001438:	52003000 	.word	0x52003000
9000143c:	58024400 	.word	0x58024400
90001440:	24005e20 	.word	0x24005e20
90001444:	24005db4 	.word	0x24005db4
90001448:	52000200 	.word	0x52000200
9000144c:	520001c0 	.word	0x520001c0

90001450 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
90001450:	b570      	push	{r4, r5, r6, lr}
90001452:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90001454:	2100      	movs	r1, #0
{
90001456:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90001458:	22c0      	movs	r2, #192	@ 0xc0
9000145a:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000145c:	9109      	str	r1, [sp, #36]	@ 0x24
9000145e:	e9cd 1105 	strd	r1, r1, [sp, #20]
90001462:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90001466:	f02a fcc7 	bl	9002bdf8 <memset>
  if(hltdc->Instance==LTDC)
9000146a:	4b4a      	ldr	r3, [pc, #296]	@ (90001594 <HAL_LTDC_MspInit+0x144>)
9000146c:	6822      	ldr	r2, [r4, #0]
9000146e:	429a      	cmp	r2, r3
90001470:	d001      	beq.n	90001476 <HAL_LTDC_MspInit+0x26>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
90001472:	b03a      	add	sp, #232	@ 0xe8
90001474:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90001476:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90001478:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000147a:	f04f 5400 	mov.w	r4, #536870912	@ 0x20000000
9000147e:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90001480:	21a0      	movs	r1, #160	@ 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90001482:	9316      	str	r3, [sp, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90001484:	9214      	str	r2, [sp, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 83;
90001486:	2253      	movs	r2, #83	@ 0x53
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90001488:	9317      	str	r3, [sp, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000148a:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000148e:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90001490:	9115      	str	r1, [sp, #84]	@ 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90001492:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 83;
90001496:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000149a:	f00d ff4b 	bl	9000f334 <HAL_RCCEx_PeriphCLKConfig>
9000149e:	2800      	cmp	r0, #0
900014a0:	d174      	bne.n	9000158c <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
900014a2:	4b3d      	ldr	r3, [pc, #244]	@ (90001598 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900014a4:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900014a6:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900014a8:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
900014aa:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900014ae:	a905      	add	r1, sp, #20
900014b0:	483a      	ldr	r0, [pc, #232]	@ (9000159c <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
900014b2:	f042 0208 	orr.w	r2, r2, #8
900014b6:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
900014ba:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
900014be:	f002 0208 	and.w	r2, r2, #8
900014c2:	9200      	str	r2, [sp, #0]
900014c4:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
900014c6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900014ca:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
900014ce:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900014d2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900014d6:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
900014da:	9201      	str	r2, [sp, #4]
900014dc:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
900014de:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900014e2:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
900014e6:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900014ea:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900014ee:	f402 7280 	and.w	r2, r2, #256	@ 0x100
900014f2:	9202      	str	r2, [sp, #8]
900014f4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
900014f6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900014fa:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
900014fe:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90001502:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90001506:	f402 7200 	and.w	r2, r2, #512	@ 0x200
9000150a:	9203      	str	r2, [sp, #12]
9000150c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000150e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90001512:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90001516:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000151a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
9000151e:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90001520:	f003 0380 	and.w	r3, r3, #128	@ 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90001524:	9609      	str	r6, [sp, #36]	@ 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
90001526:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90001528:	23fc      	movs	r3, #252	@ 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000152a:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
9000152c:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000152e:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90001532:	f00a fa07 	bl	9000b944 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90001536:	f24d 2303 	movw	r3, #53763	@ 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
9000153a:	a905      	add	r1, sp, #20
9000153c:	4818      	ldr	r0, [pc, #96]	@ (900015a0 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
9000153e:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90001540:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90001544:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90001548:	f00a f9fc 	bl	9000b944 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
9000154c:	f64f 73fb 	movw	r3, #65531	@ 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90001550:	a905      	add	r1, sp, #20
90001552:	4814      	ldr	r0, [pc, #80]	@ (900015a4 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90001554:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90001556:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000155a:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
9000155e:	f00a f9f1 	bl	9000b944 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90001562:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90001566:	a905      	add	r1, sp, #20
90001568:	480f      	ldr	r0, [pc, #60]	@ (900015a8 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000156a:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
9000156c:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90001570:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90001574:	f00a f9e6 	bl	9000b944 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
90001578:	462a      	mov	r2, r5
9000157a:	2105      	movs	r1, #5
9000157c:	2058      	movs	r0, #88	@ 0x58
9000157e:	f009 fa69 	bl	9000aa54 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
90001582:	2058      	movs	r0, #88	@ 0x58
90001584:	f009 faa2 	bl	9000aacc <HAL_NVIC_EnableIRQ>
}
90001588:	b03a      	add	sp, #232	@ 0xe8
9000158a:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
9000158c:	f7ff fb8a 	bl	90000ca4 <Error_Handler>
90001590:	e787      	b.n	900014a2 <HAL_LTDC_MspInit+0x52>
90001592:	bf00      	nop
90001594:	50001000 	.word	0x50001000
90001598:	58024400 	.word	0x58024400
9000159c:	58022800 	.word	0x58022800
900015a0:	58022000 	.word	0x58022000
900015a4:	58022400 	.word	0x58022400
900015a8:	58021c00 	.word	0x58021c00

900015ac <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
900015ac:	b5d0      	push	{r4, r6, r7, lr}
900015ae:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900015b0:	2100      	movs	r1, #0
{
900015b2:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900015b4:	22c0      	movs	r2, #192	@ 0xc0
900015b6:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900015b8:	9108      	str	r1, [sp, #32]
900015ba:	e9cd 1104 	strd	r1, r1, [sp, #16]
900015be:	e9cd 1106 	strd	r1, r1, [sp, #24]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900015c2:	f02a fc19 	bl	9002bdf8 <memset>
  if(huart->Instance==USART1)
900015c6:	4b2d      	ldr	r3, [pc, #180]	@ (9000167c <HAL_UART_MspInit+0xd0>)
900015c8:	6822      	ldr	r2, [r4, #0]
900015ca:	429a      	cmp	r2, r3
900015cc:	d001      	beq.n	900015d2 <HAL_UART_MspInit+0x26>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
900015ce:	b03a      	add	sp, #232	@ 0xe8
900015d0:	bdd0      	pop	{r4, r6, r7, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
900015d2:	2201      	movs	r2, #1
900015d4:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900015d6:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
900015d8:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900015dc:	f00d feaa 	bl	9000f334 <HAL_RCCEx_PeriphCLKConfig>
900015e0:	2800      	cmp	r0, #0
900015e2:	d148      	bne.n	90001676 <HAL_UART_MspInit+0xca>
    __HAL_RCC_USART1_CLK_ENABLE();
900015e4:	4b26      	ldr	r3, [pc, #152]	@ (90001680 <HAL_UART_MspInit+0xd4>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
900015e6:	2040      	movs	r0, #64	@ 0x40
900015e8:	2102      	movs	r1, #2
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
900015ea:	2407      	movs	r4, #7
    __HAL_RCC_USART1_CLK_ENABLE();
900015ec:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
    GPIO_InitStruct.Pin = GPIO_PIN_6;
900015f0:	2600      	movs	r6, #0
900015f2:	2700      	movs	r7, #0
    __HAL_RCC_USART1_CLK_ENABLE();
900015f4:	f042 0210 	orr.w	r2, r2, #16
900015f8:	f8c3 20f0 	str.w	r2, [r3, #240]	@ 0xf0
900015fc:	f8d3 20f0 	ldr.w	r2, [r3, #240]	@ 0xf0
90001600:	f002 0210 	and.w	r2, r2, #16
90001604:	9201      	str	r2, [sp, #4]
90001606:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
90001608:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000160c:	f042 0202 	orr.w	r2, r2, #2
90001610:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90001614:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90001618:	f002 0202 	and.w	r2, r2, #2
9000161c:	9202      	str	r2, [sp, #8]
9000161e:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
90001620:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90001624:	f042 0201 	orr.w	r2, r2, #1
90001628:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000162c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
90001630:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOA_CLK_ENABLE();
90001632:	f003 0301 	and.w	r3, r3, #1
    GPIO_InitStruct.Pin = GPIO_PIN_6;
90001636:	e9cd 0104 	strd	r0, r1, [sp, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
9000163a:	9303      	str	r3, [sp, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
9000163c:	a904      	add	r1, sp, #16
9000163e:	4811      	ldr	r0, [pc, #68]	@ (90001684 <HAL_UART_MspInit+0xd8>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
90001640:	9b03      	ldr	r3, [sp, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
90001642:	e9cd 6706 	strd	r6, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90001646:	f00a f97d 	bl	9000b944 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10;
9000164a:	2302      	movs	r3, #2
9000164c:	f44f 6280 	mov.w	r2, #1024	@ 0x400
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90001650:	a904      	add	r1, sp, #16
90001652:	480d      	ldr	r0, [pc, #52]	@ (90001688 <HAL_UART_MspInit+0xdc>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
90001654:	9408      	str	r4, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_10;
90001656:	e9cd 2304 	strd	r2, r3, [sp, #16]
9000165a:	e9cd 6706 	strd	r6, r7, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
9000165e:	f00a f971 	bl	9000b944 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
90001662:	2200      	movs	r2, #0
90001664:	2105      	movs	r1, #5
90001666:	2025      	movs	r0, #37	@ 0x25
90001668:	f009 f9f4 	bl	9000aa54 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
9000166c:	2025      	movs	r0, #37	@ 0x25
9000166e:	f009 fa2d 	bl	9000aacc <HAL_NVIC_EnableIRQ>
}
90001672:	b03a      	add	sp, #232	@ 0xe8
90001674:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90001676:	f7ff fb15 	bl	90000ca4 <Error_Handler>
9000167a:	e7b3      	b.n	900015e4 <HAL_UART_MspInit+0x38>
9000167c:	40011000 	.word	0x40011000
90001680:	58024400 	.word	0x58024400
90001684:	58020400 	.word	0x58020400
90001688:	58020000 	.word	0x58020000

9000168c <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
9000168c:	4836      	ldr	r0, [pc, #216]	@ (90001768 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000168e:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90001690:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
90001692:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90001694:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90001696:	e9cd 3302 	strd	r3, r3, [sp, #8]
9000169a:	e9cd 3304 	strd	r3, r3, [sp, #16]
9000169e:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
900016a0:	b109      	cbz	r1, 900016a6 <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
900016a2:	b038      	add	sp, #224	@ 0xe0
900016a4:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
900016a6:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900016a8:	22b8      	movs	r2, #184	@ 0xb8
  FMC_Initialized = 1;
900016aa:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900016ac:	a80a      	add	r0, sp, #40	@ 0x28
900016ae:	f02a fba3 	bl	9002bdf8 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900016b2:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900016b6:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900016b8:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900016ba:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900016be:	f00d fe39 	bl	9000f334 <HAL_RCCEx_PeriphCLKConfig>
900016c2:	2800      	cmp	r0, #0
900016c4:	d14c      	bne.n	90001760 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
900016c6:	4b29      	ldr	r3, [pc, #164]	@ (9000176c <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900016c8:	f64f 7083 	movw	r0, #65411	@ 0xff83
900016cc:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900016ce:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900016d0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900016d4:	2600      	movs	r6, #0
900016d6:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900016d8:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
900016dc:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900016e0:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900016e4:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
900016e6:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900016ea:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
900016ee:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900016f0:	a902      	add	r1, sp, #8
900016f2:	481f      	ldr	r0, [pc, #124]	@ (90001770 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900016f4:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900016f6:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900016fa:	f00a f923 	bl	9000b944 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900016fe:	f248 1233 	movw	r2, #33075	@ 0x8133
90001702:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90001704:	a902      	add	r1, sp, #8
90001706:	481b      	ldr	r0, [pc, #108]	@ (90001774 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90001708:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000170a:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000170e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90001712:	f00a f917 	bl	9000b944 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90001716:	f24c 7203 	movw	r2, #50947	@ 0xc703
9000171a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
9000171c:	a902      	add	r1, sp, #8
9000171e:	4816      	ldr	r0, [pc, #88]	@ (90001778 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90001720:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90001722:	e9cd 2302 	strd	r2, r3, [sp, #8]
90001726:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
9000172a:	f00a f90b 	bl	9000b944 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000172e:	f64f 023f 	movw	r2, #63551	@ 0xf83f
90001732:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90001734:	a902      	add	r1, sp, #8
90001736:	4811      	ldr	r0, [pc, #68]	@ (9000177c <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90001738:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000173a:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000173e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90001742:	f00a f8ff 	bl	9000b944 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90001746:	22e0      	movs	r2, #224	@ 0xe0
90001748:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000174a:	a902      	add	r1, sp, #8
9000174c:	480c      	ldr	r0, [pc, #48]	@ (90001780 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000174e:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90001750:	e9cd 6704 	strd	r6, r7, [sp, #16]
90001754:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90001758:	f00a f8f4 	bl	9000b944 <HAL_GPIO_Init>
}
9000175c:	b038      	add	sp, #224	@ 0xe0
9000175e:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90001760:	f7ff faa0 	bl	90000ca4 <Error_Handler>
90001764:	e7af      	b.n	900016c6 <HAL_SDRAM_MspInit+0x3a>
90001766:	bf00      	nop
90001768:	24005f74 	.word	0x24005f74
9000176c:	58024400 	.word	0x58024400
90001770:	58021000 	.word	0x58021000
90001774:	58021800 	.word	0x58021800
90001778:	58020c00 	.word	0x58020c00
9000177c:	58021400 	.word	0x58021400
90001780:	58021c00 	.word	0x58021c00

90001784 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
90001784:	4b13      	ldr	r3, [pc, #76]	@ (900017d4 <HAL_SDRAM_MspDeInit+0x50>)
90001786:	681a      	ldr	r2, [r3, #0]
90001788:	b102      	cbz	r2, 9000178c <HAL_SDRAM_MspDeInit+0x8>
9000178a:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
9000178c:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
9000178e:	4a12      	ldr	r2, [pc, #72]	@ (900017d8 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
90001790:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90001792:	f64f 7183 	movw	r1, #65411	@ 0xff83
90001796:	4811      	ldr	r0, [pc, #68]	@ (900017dc <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
90001798:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
9000179a:	f8d2 30d4 	ldr.w	r3, [r2, #212]	@ 0xd4
9000179e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
900017a2:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900017a6:	f00a fa0f 	bl	9000bbc8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900017aa:	f248 1133 	movw	r1, #33075	@ 0x8133
900017ae:	480c      	ldr	r0, [pc, #48]	@ (900017e0 <HAL_SDRAM_MspDeInit+0x5c>)
900017b0:	f00a fa0a 	bl	9000bbc8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900017b4:	f24c 7103 	movw	r1, #50947	@ 0xc703
900017b8:	480a      	ldr	r0, [pc, #40]	@ (900017e4 <HAL_SDRAM_MspDeInit+0x60>)
900017ba:	f00a fa05 	bl	9000bbc8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900017be:	f64f 013f 	movw	r1, #63551	@ 0xf83f
900017c2:	4809      	ldr	r0, [pc, #36]	@ (900017e8 <HAL_SDRAM_MspDeInit+0x64>)
900017c4:	f00a fa00 	bl	9000bbc8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900017c8:	21e0      	movs	r1, #224	@ 0xe0
900017ca:	4808      	ldr	r0, [pc, #32]	@ (900017ec <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
900017cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900017d0:	f00a b9fa 	b.w	9000bbc8 <HAL_GPIO_DeInit>
900017d4:	24005f70 	.word	0x24005f70
900017d8:	58024400 	.word	0x58024400
900017dc:	58021000 	.word	0x58021000
900017e0:	58021800 	.word	0x58021800
900017e4:	58020c00 	.word	0x58020c00
900017e8:	58021400 	.word	0x58021400
900017ec:	58021c00 	.word	0x58021c00

900017f0 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900017f0:	280f      	cmp	r0, #15
900017f2:	d901      	bls.n	900017f8 <HAL_InitTick+0x8>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
900017f4:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
900017f6:	4770      	bx	lr
{
900017f8:	b530      	push	{r4, r5, lr}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900017fa:	4601      	mov	r1, r0
{
900017fc:	b08b      	sub	sp, #44	@ 0x2c
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900017fe:	2200      	movs	r2, #0
90001800:	4604      	mov	r4, r0
90001802:	2036      	movs	r0, #54	@ 0x36
90001804:	f009 f926 	bl	9000aa54 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
90001808:	2036      	movs	r0, #54	@ 0x36
9000180a:	f009 f95f 	bl	9000aacc <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
9000180e:	4b1b      	ldr	r3, [pc, #108]	@ (9000187c <HAL_InitTick+0x8c>)
    uwTickPrio = TickPriority;
90001810:	4a1b      	ldr	r2, [pc, #108]	@ (90001880 <HAL_InitTick+0x90>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90001812:	4669      	mov	r1, sp
90001814:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
90001816:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90001818:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
9000181c:	f042 0210 	orr.w	r2, r2, #16
90001820:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
90001824:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
90001828:	f003 0310 	and.w	r3, r3, #16
9000182c:	9301      	str	r3, [sp, #4]
9000182e:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90001830:	f00d fc70 	bl	9000f114 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
90001834:	9b07      	ldr	r3, [sp, #28]
90001836:	b9c3      	cbnz	r3, 9000186a <HAL_InitTick+0x7a>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90001838:	f00d fbdc 	bl	9000eff4 <HAL_RCC_GetPCLK1Freq>
9000183c:	4603      	mov	r3, r0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000183e:	4911      	ldr	r1, [pc, #68]	@ (90001884 <HAL_InitTick+0x94>)
  htim6.Init.ClockDivision = 0;
90001840:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
90001842:	4c11      	ldr	r4, [pc, #68]	@ (90001888 <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90001844:	fba1 1303 	umull	r1, r3, r1, r3
  htim6.Instance = TIM6;
90001848:	4d10      	ldr	r5, [pc, #64]	@ (9000188c <HAL_InitTick+0x9c>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
9000184a:	f240 31e7 	movw	r1, #999	@ 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
9000184e:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90001850:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
90001852:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
90001854:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90001856:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90001858:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
9000185c:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
9000185e:	f00e fe7b 	bl	90010558 <HAL_TIM_Base_Init>
90001862:	b130      	cbz	r0, 90001872 <HAL_InitTick+0x82>
    return HAL_ERROR;
90001864:	2001      	movs	r0, #1
}
90001866:	b00b      	add	sp, #44	@ 0x2c
90001868:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
9000186a:	f00d fbc3 	bl	9000eff4 <HAL_RCC_GetPCLK1Freq>
9000186e:	0043      	lsls	r3, r0, #1
90001870:	e7e5      	b.n	9000183e <HAL_InitTick+0x4e>
    return HAL_TIM_Base_Start_IT(&htim6);
90001872:	4620      	mov	r0, r4
90001874:	f00e ff0e 	bl	90010694 <HAL_TIM_Base_Start_IT>
90001878:	e7f5      	b.n	90001866 <HAL_InitTick+0x76>
9000187a:	bf00      	nop
9000187c:	58024400 	.word	0x58024400
90001880:	24000060 	.word	0x24000060
90001884:	431bde83 	.word	0x431bde83
90001888:	24005f78 	.word	0x24005f78
9000188c:	40001000 	.word	0x40001000

90001890 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90001890:	4770      	bx	lr
90001892:	bf00      	nop

90001894 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
90001894:	e7fe      	b.n	90001894 <HardFault_Handler>
90001896:	bf00      	nop

90001898 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90001898:	e7fe      	b.n	90001898 <MemManage_Handler>
9000189a:	bf00      	nop

9000189c <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
9000189c:	e7fe      	b.n	9000189c <BusFault_Handler>
9000189e:	bf00      	nop

900018a0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
900018a0:	e7fe      	b.n	900018a0 <UsageFault_Handler>
900018a2:	bf00      	nop

900018a4 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
900018a4:	4770      	bx	lr
900018a6:	bf00      	nop

900018a8 <USART1_IRQHandler>:
void USART1_IRQHandler(void)
{
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
900018a8:	4801      	ldr	r0, [pc, #4]	@ (900018b0 <USART1_IRQHandler+0x8>)
900018aa:	f00f b81b 	b.w	900108e4 <HAL_UART_IRQHandler>
900018ae:	bf00      	nop
900018b0:	24005c78 	.word	0x24005c78

900018b4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
900018b4:	4801      	ldr	r0, [pc, #4]	@ (900018bc <TIM6_DAC_IRQHandler+0x8>)
900018b6:	f00e bf47 	b.w	90010748 <HAL_TIM_IRQHandler>
900018ba:	bf00      	nop
900018bc:	24005f78 	.word	0x24005f78

900018c0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
900018c0:	4801      	ldr	r0, [pc, #4]	@ (900018c8 <LTDC_IRQHandler+0x8>)
900018c2:	f00c bab1 	b.w	9000de28 <HAL_LTDC_IRQHandler>
900018c6:	bf00      	nop
900018c8:	24005d0c 	.word	0x24005d0c

900018cc <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
900018cc:	4801      	ldr	r0, [pc, #4]	@ (900018d4 <DMA2D_IRQHandler+0x8>)
900018ce:	f009 bc81 	b.w	9000b1d4 <HAL_DMA2D_IRQHandler>
900018d2:	bf00      	nop
900018d4:	24005ee4 	.word	0x24005ee4

900018d8 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
900018d8:	4801      	ldr	r0, [pc, #4]	@ (900018e0 <JPEG_IRQHandler+0x8>)
900018da:	f00c b997 	b.w	9000dc0c <HAL_JPEG_IRQHandler>
900018de:	bf00      	nop
900018e0:	24005e8c 	.word	0x24005e8c

900018e4 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900018e4:	4804      	ldr	r0, [pc, #16]	@ (900018f8 <MDMA_IRQHandler+0x14>)
{
900018e6:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900018e8:	f00c fd46 	bl	9000e378 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900018ec:	4803      	ldr	r0, [pc, #12]	@ (900018fc <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
900018ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900018f2:	f00c bd41 	b.w	9000e378 <HAL_MDMA_IRQHandler>
900018f6:	bf00      	nop
900018f8:	24005db4 	.word	0x24005db4
900018fc:	24005e20 	.word	0x24005e20

90001900 <FDCAN1_IT0_IRQHandler>:

/* USER CODE BEGIN 1 */

void FDCAN1_IT0_IRQHandler(void)
{
  HAL_FDCAN_IRQHandler(&hfdcan);
90001900:	4801      	ldr	r0, [pc, #4]	@ (90001908 <FDCAN1_IT0_IRQHandler+0x8>)
90001902:	f009 be87 	b.w	9000b614 <HAL_FDCAN_IRQHandler>
90001906:	bf00      	nop
90001908:	24005b98 	.word	0x24005b98

9000190c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
9000190c:	2001      	movs	r0, #1
9000190e:	4770      	bx	lr

90001910 <_kill>:

int _kill(int pid, int sig)
{
90001910:	b508      	push	{r3, lr}
	errno = EINVAL;
90001912:	f02a fb25 	bl	9002bf60 <__errno>
90001916:	2216      	movs	r2, #22
90001918:	4603      	mov	r3, r0
	return -1;
}
9000191a:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
9000191e:	601a      	str	r2, [r3, #0]
}
90001920:	bd08      	pop	{r3, pc}
90001922:	bf00      	nop

90001924 <_exit>:

void _exit (int status)
{
90001924:	b508      	push	{r3, lr}
	errno = EINVAL;
90001926:	f02a fb1b 	bl	9002bf60 <__errno>
9000192a:	2316      	movs	r3, #22
9000192c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
9000192e:	e7fe      	b.n	9000192e <_exit+0xa>

90001930 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90001930:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90001932:	1e16      	subs	r6, r2, #0
90001934:	dd07      	ble.n	90001946 <_read+0x16>
90001936:	460c      	mov	r4, r1
90001938:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
9000193a:	f3af 8000 	nop.w
9000193e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90001942:	42a5      	cmp	r5, r4
90001944:	d1f9      	bne.n	9000193a <_read+0xa>
	}

return len;
}
90001946:	4630      	mov	r0, r6
90001948:	bd70      	pop	{r4, r5, r6, pc}
9000194a:	bf00      	nop

9000194c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
9000194c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000194e:	1e16      	subs	r6, r2, #0
90001950:	dd07      	ble.n	90001962 <_write+0x16>
90001952:	460c      	mov	r4, r1
90001954:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90001956:	f814 0b01 	ldrb.w	r0, [r4], #1
9000195a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000195e:	42ac      	cmp	r4, r5
90001960:	d1f9      	bne.n	90001956 <_write+0xa>
	}
	return len;
}
90001962:	4630      	mov	r0, r6
90001964:	bd70      	pop	{r4, r5, r6, pc}
90001966:	bf00      	nop

90001968 <_close>:

int _close(int file)
{
	return -1;
}
90001968:	f04f 30ff 	mov.w	r0, #4294967295
9000196c:	4770      	bx	lr
9000196e:	bf00      	nop

90001970 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90001970:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
90001974:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90001976:	604b      	str	r3, [r1, #4]
}
90001978:	4770      	bx	lr
9000197a:	bf00      	nop

9000197c <_isatty>:

int _isatty(int file)
{
	return 1;
}
9000197c:	2001      	movs	r0, #1
9000197e:	4770      	bx	lr

90001980 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90001980:	2000      	movs	r0, #0
90001982:	4770      	bx	lr

90001984 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
90001984:	4a0a      	ldr	r2, [pc, #40]	@ (900019b0 <_sbrk+0x2c>)
{
90001986:	b508      	push	{r3, lr}
	if (heap_end == 0)
90001988:	6813      	ldr	r3, [r2, #0]
9000198a:	b12b      	cbz	r3, 90001998 <_sbrk+0x14>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
9000198c:	4403      	add	r3, r0
9000198e:	4669      	mov	r1, sp
90001990:	428b      	cmp	r3, r1
90001992:	d808      	bhi.n	900019a6 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
90001994:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
90001996:	bd08      	pop	{r3, pc}
		heap_end = &end;
90001998:	4906      	ldr	r1, [pc, #24]	@ (900019b4 <_sbrk+0x30>)
9000199a:	460b      	mov	r3, r1
9000199c:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
9000199e:	4669      	mov	r1, sp
900019a0:	4403      	add	r3, r0
900019a2:	428b      	cmp	r3, r1
900019a4:	d9f6      	bls.n	90001994 <_sbrk+0x10>
		errno = ENOMEM;
900019a6:	f02a fadb 	bl	9002bf60 <__errno>
900019aa:	230c      	movs	r3, #12
900019ac:	6003      	str	r3, [r0, #0]
}
900019ae:	bd08      	pop	{r3, pc}
900019b0:	24005fc4 	.word	0x24005fc4
900019b4:	24028288 	.word	0x24028288

900019b8 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
900019b8:	4770      	bx	lr
900019ba:	bf00      	nop

900019bc <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
900019bc:	4770      	bx	lr
900019be:	bf00      	nop

900019c0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
900019c0:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
900019c2:	f001 fedf 	bl	90003784 <touchgfx_components_init>
  touchgfx_init();
}
900019c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
900019ca:	f001 be5f 	b.w	9000368c <touchgfx_init>
900019ce:	bf00      	nop

900019d0 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
900019d0:	6840      	ldr	r0, [r0, #4]
    }
900019d2:	4770      	bx	lr

900019d4 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
900019d4:	6041      	str	r1, [r0, #4]
    }
900019d6:	4770      	bx	lr

900019d8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
900019d8:	f04f 20e0 	mov.w	r0, #3758153728	@ 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
900019dc:	4b08      	ldr	r3, [pc, #32]	@ (90001a00 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
900019de:	4a09      	ldr	r2, [pc, #36]	@ (90001a04 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
900019e0:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	@ 0xdfc
900019e4:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
900019e8:	f8c0 1dfc 	str.w	r1, [r0, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
900019ec:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
900019f0:	430a      	orrs	r2, r1
900019f2:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
900019f6:	681a      	ldr	r2, [r3, #0]
900019f8:	f042 0201 	orr.w	r2, r2, #1
900019fc:	601a      	str	r2, [r3, #0]
}
900019fe:	4770      	bx	lr
90001a00:	e0001000 	.word	0xe0001000
90001a04:	c5acce55 	.word	0xc5acce55

90001a08 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90001a08:	1a52      	subs	r2, r2, r1
90001a0a:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
90001a0e:	fbb2 f0f3 	udiv	r0, r2, r3
90001a12:	4770      	bx	lr

90001a14 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90001a14:	4b01      	ldr	r3, [pc, #4]	@ (90001a1c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90001a16:	6858      	ldr	r0, [r3, #4]
}
90001a18:	4770      	bx	lr
90001a1a:	bf00      	nop
90001a1c:	e0001000 	.word	0xe0001000

90001a20 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90001a20:	4770      	bx	lr
90001a22:	bf00      	nop

90001a24 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90001a24:	b510      	push	{r4, lr}
90001a26:	4604      	mov	r4, r0
90001a28:	210c      	movs	r1, #12
90001a2a:	f029 fd6c 	bl	9002b506 <_ZdlPvj>
90001a2e:	4620      	mov	r0, r4
90001a30:	bd10      	pop	{r4, pc}
90001a32:	bf00      	nop

90001a34 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90001a34:	6803      	ldr	r3, [r0, #0]
90001a36:	4a0c      	ldr	r2, [pc, #48]	@ (90001a68 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90001a38:	691b      	ldr	r3, [r3, #16]
{
90001a3a:	b510      	push	{r4, lr}
90001a3c:	4604      	mov	r4, r0
    if (active) //idle task sched out
90001a3e:	b149      	cbz	r1, 90001a54 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90001a40:	4293      	cmp	r3, r2
90001a42:	d10d      	bne.n	90001a60 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90001a44:	4b09      	ldr	r3, [pc, #36]	@ (90001a6c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90001a46:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90001a48:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90001a4a:	6863      	ldr	r3, [r4, #4]
90001a4c:	1a9b      	subs	r3, r3, r2
90001a4e:	4403      	add	r3, r0
90001a50:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90001a52:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90001a54:	4293      	cmp	r3, r2
90001a56:	d105      	bne.n	90001a64 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90001a58:	4b04      	ldr	r3, [pc, #16]	@ (90001a6c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90001a5a:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90001a5c:	60a0      	str	r0, [r4, #8]
}
90001a5e:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90001a60:	4798      	blx	r3
90001a62:	e7f1      	b.n	90001a48 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90001a64:	4798      	blx	r3
90001a66:	e7f9      	b.n	90001a5c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90001a68:	90001a15 	.word	0x90001a15
90001a6c:	e0001000 	.word	0xe0001000

90001a70 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90001a70:	4770      	bx	lr
90001a72:	bf00      	nop
90001a74:	0000      	movs	r0, r0
	...

90001a78 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90001a78:	b500      	push	{lr}
90001a7a:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90001a7c:	2208      	movs	r2, #8
90001a7e:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90001a80:	2000      	movs	r0, #0
90001a82:	4669      	mov	r1, sp
    hTS.Width = 480;
90001a84:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90001aa0 <_ZN20STM32TouchController4initEv+0x28>
90001a88:	e9cd 2302 	strd	r2, r3, [sp, #8]
90001a8c:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90001a90:	f008 fe56 	bl	9000a740 <BSP_TS_Init>
}
90001a94:	b005      	add	sp, #20
90001a96:	f85d fb04 	ldr.w	pc, [sp], #4
90001a9a:	bf00      	nop
90001a9c:	f3af 8000 	nop.w
90001aa0:	000001e0 	.word	0x000001e0
90001aa4:	00000110 	.word	0x00000110

90001aa8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90001aa8:	b530      	push	{r4, r5, lr}
90001aaa:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90001aac:	2000      	movs	r0, #0
{
90001aae:	460d      	mov	r5, r1
90001ab0:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90001ab2:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90001ab4:	9001      	str	r0, [sp, #4]
90001ab6:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90001aba:	f008 fecf 	bl	9000a85c <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90001abe:	9801      	ldr	r0, [sp, #4]
90001ac0:	b120      	cbz	r0, 90001acc <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90001ac2:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90001ac4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90001ac8:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90001aca:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90001acc:	b005      	add	sp, #20
90001ace:	bd30      	pop	{r4, r5, pc}

90001ad0 <_ZN20STM32TouchControllerD0Ev>:
90001ad0:	b510      	push	{r4, lr}
90001ad2:	4604      	mov	r4, r0
90001ad4:	2104      	movs	r1, #4
90001ad6:	f029 fd16 	bl	9002b506 <_ZdlPvj>
90001ada:	4620      	mov	r0, r4
90001adc:	bd10      	pop	{r4, pc}
90001ade:	bf00      	nop

90001ae0 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90001ae0:	2108      	movs	r1, #8
90001ae2:	480c      	ldr	r0, [pc, #48]	@ (90001b14 <_ZN8touchgfx4GPIO4initEv+0x34>)
{
90001ae4:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90001ae6:	f00a f939 	bl	9000bd5c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90001aea:	2801      	cmp	r0, #1
90001aec:	d101      	bne.n	90001af2 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
90001aee:	4b0a      	ldr	r3, [pc, #40]	@ (90001b18 <_ZN8touchgfx4GPIO4initEv+0x38>)
90001af0:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90001af2:	2180      	movs	r1, #128	@ 0x80
90001af4:	4809      	ldr	r0, [pc, #36]	@ (90001b1c <_ZN8touchgfx4GPIO4initEv+0x3c>)
90001af6:	f00a f931 	bl	9000bd5c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90001afa:	2801      	cmp	r0, #1
90001afc:	d101      	bne.n	90001b02 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
90001afe:	4b06      	ldr	r3, [pc, #24]	@ (90001b18 <_ZN8touchgfx4GPIO4initEv+0x38>)
90001b00:	6058      	str	r0, [r3, #4]
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90001b02:	2140      	movs	r1, #64	@ 0x40
90001b04:	4806      	ldr	r0, [pc, #24]	@ (90001b20 <_ZN8touchgfx4GPIO4initEv+0x40>)
90001b06:	f00a f929 	bl	9000bd5c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90001b0a:	2801      	cmp	r0, #1
90001b0c:	d101      	bne.n	90001b12 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
90001b0e:	4b02      	ldr	r3, [pc, #8]	@ (90001b18 <_ZN8touchgfx4GPIO4initEv+0x38>)
90001b10:	60d8      	str	r0, [r3, #12]
}
90001b12:	bd08      	pop	{r3, pc}
90001b14:	58021800 	.word	0x58021800
90001b18:	24005fc8 	.word	0x24005fc8
90001b1c:	58020400 	.word	0x58020400
90001b20:	58020000 	.word	0x58020000

90001b24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90001b24:	2801      	cmp	r0, #1
90001b26:	d003      	beq.n	90001b30 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0xc>
90001b28:	2803      	cmp	r0, #3
90001b2a:	d013      	beq.n	90001b54 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>
90001b2c:	b148      	cbz	r0, 90001b42 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1e>
}
90001b2e:	4770      	bx	lr
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90001b30:	4b0d      	ldr	r3, [pc, #52]	@ (90001b68 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
90001b32:	2180      	movs	r1, #128	@ 0x80
90001b34:	480d      	ldr	r0, [pc, #52]	@ (90001b6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>)
90001b36:	685a      	ldr	r2, [r3, #4]
90001b38:	fab2 f282 	clz	r2, r2
90001b3c:	0952      	lsrs	r2, r2, #5
90001b3e:	f00a b913 	b.w	9000bd68 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90001b42:	4b09      	ldr	r3, [pc, #36]	@ (90001b68 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
90001b44:	2108      	movs	r1, #8
90001b46:	480a      	ldr	r0, [pc, #40]	@ (90001b70 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
90001b48:	681a      	ldr	r2, [r3, #0]
90001b4a:	fab2 f282 	clz	r2, r2
90001b4e:	0952      	lsrs	r2, r2, #5
90001b50:	f00a b90a 	b.w	9000bd68 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90001b54:	4b04      	ldr	r3, [pc, #16]	@ (90001b68 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
90001b56:	2140      	movs	r1, #64	@ 0x40
90001b58:	4806      	ldr	r0, [pc, #24]	@ (90001b74 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
90001b5a:	68da      	ldr	r2, [r3, #12]
90001b5c:	fab2 f282 	clz	r2, r2
90001b60:	0952      	lsrs	r2, r2, #5
90001b62:	f00a b901 	b.w	9000bd68 <HAL_GPIO_WritePin>
90001b66:	bf00      	nop
90001b68:	24005fc8 	.word	0x24005fc8
90001b6c:	58020400 	.word	0x58020400
90001b70:	58021800 	.word	0x58021800
90001b74:	58020000 	.word	0x58020000

90001b78 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90001b78:	2801      	cmp	r0, #1
90001b7a:	d003      	beq.n	90001b84 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0xc>
90001b7c:	2803      	cmp	r0, #3
90001b7e:	d013      	beq.n	90001ba8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>
90001b80:	b148      	cbz	r0, 90001b96 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1e>
}
90001b82:	4770      	bx	lr
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
90001b84:	4b0d      	ldr	r3, [pc, #52]	@ (90001bbc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
90001b86:	2180      	movs	r1, #128	@ 0x80
90001b88:	480d      	ldr	r0, [pc, #52]	@ (90001bc0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>)
90001b8a:	685a      	ldr	r2, [r3, #4]
90001b8c:	3a00      	subs	r2, #0
90001b8e:	bf18      	it	ne
90001b90:	2201      	movne	r2, #1
90001b92:	f00a b8e9 	b.w	9000bd68 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90001b96:	4b09      	ldr	r3, [pc, #36]	@ (90001bbc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
90001b98:	2108      	movs	r1, #8
90001b9a:	480a      	ldr	r0, [pc, #40]	@ (90001bc4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
90001b9c:	681a      	ldr	r2, [r3, #0]
90001b9e:	3a00      	subs	r2, #0
90001ba0:	bf18      	it	ne
90001ba2:	2201      	movne	r2, #1
90001ba4:	f00a b8e0 	b.w	9000bd68 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90001ba8:	4b04      	ldr	r3, [pc, #16]	@ (90001bbc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
90001baa:	2140      	movs	r1, #64	@ 0x40
90001bac:	4806      	ldr	r0, [pc, #24]	@ (90001bc8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
90001bae:	68da      	ldr	r2, [r3, #12]
90001bb0:	3a00      	subs	r2, #0
90001bb2:	bf18      	it	ne
90001bb4:	2201      	movne	r2, #1
90001bb6:	f00a b8d7 	b.w	9000bd68 <HAL_GPIO_WritePin>
90001bba:	bf00      	nop
90001bbc:	24005fc8 	.word	0x24005fc8
90001bc0:	58020400 	.word	0x58020400
90001bc4:	58021800 	.word	0x58021800
90001bc8:	58020000 	.word	0x58020000

90001bcc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90001bcc:	2801      	cmp	r0, #1
90001bce:	d003      	beq.n	90001bd8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
90001bd0:	2803      	cmp	r0, #3
90001bd2:	d009      	beq.n	90001be8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>
90001bd4:	b120      	cbz	r0, 90001be0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>
}
90001bd6:	4770      	bx	lr
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90001bd8:	2180      	movs	r1, #128	@ 0x80
90001bda:	4805      	ldr	r0, [pc, #20]	@ (90001bf0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
90001bdc:	f00a b8c8 	b.w	9000bd70 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90001be0:	2108      	movs	r1, #8
90001be2:	4804      	ldr	r0, [pc, #16]	@ (90001bf4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
90001be4:	f00a b8c4 	b.w	9000bd70 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90001be8:	2140      	movs	r1, #64	@ 0x40
90001bea:	4803      	ldr	r0, [pc, #12]	@ (90001bf8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
90001bec:	f00a b8c0 	b.w	9000bd70 <HAL_GPIO_TogglePin>
90001bf0:	58020400 	.word	0x58020400
90001bf4:	58021800 	.word	0x58021800
90001bf8:	58020000 	.word	0x58020000

90001bfc <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90001bfc:	2000      	movs	r0, #0
90001bfe:	4770      	bx	lr

90001c00 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90001c00:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90001c02:	f880 1074 	strb.w	r1, [r0, #116]	@ 0x74
        displayOrientationChangeRequested = true;
90001c06:	f880 3075 	strb.w	r3, [r0, #117]	@ 0x75
    }
90001c0a:	4770      	bx	lr

90001c0c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90001c0c:	2000      	movs	r0, #0
90001c0e:	4770      	bx	lr

90001c10 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90001c10:	1e0a      	subs	r2, r1, #0
90001c12:	4b03      	ldr	r3, [pc, #12]	@ (90001c20 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90001c14:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90001c16:	bf18      	it	ne
90001c18:	2201      	movne	r2, #1
90001c1a:	701a      	strb	r2, [r3, #0]
    }
90001c1c:	4770      	bx	lr
90001c1e:	bf00      	nop
90001c20:	24027e9b 	.word	0x24027e9b

90001c24 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90001c24:	2000      	movs	r0, #0
90001c26:	4770      	bx	lr

90001c28 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90001c28:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
90001c2a:	4608      	mov	r0, r1
        if (taskDelayFunc)
90001c2c:	b103      	cbz	r3, 90001c30 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90001c2e:	4718      	bx	r3
        }
    }
90001c30:	4770      	bx	lr
90001c32:	bf00      	nop

90001c34 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90001c34:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90001c38:	4770      	bx	lr
90001c3a:	bf00      	nop

90001c3c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90001c3c:	4770      	bx	lr
90001c3e:	bf00      	nop

90001c40 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90001c40:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90001c42:	4b09      	ldr	r3, [pc, #36]	@ (90001c68 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90001c44:	881b      	ldrh	r3, [r3, #0]
90001c46:	428b      	cmp	r3, r1
90001c48:	d808      	bhi.n	90001c5c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90001c4a:	4b08      	ldr	r3, [pc, #32]	@ (90001c6c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90001c4c:	881b      	ldrh	r3, [r3, #0]
90001c4e:	4293      	cmp	r3, r2
90001c50:	d804      	bhi.n	90001c5c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90001c52:	4807      	ldr	r0, [pc, #28]	@ (90001c70 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90001c54:	4b07      	ldr	r3, [pc, #28]	@ (90001c74 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90001c56:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90001c58:	801a      	strh	r2, [r3, #0]
    }
90001c5a:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90001c5c:	4b06      	ldr	r3, [pc, #24]	@ (90001c78 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90001c5e:	219e      	movs	r1, #158	@ 0x9e
90001c60:	4a06      	ldr	r2, [pc, #24]	@ (90001c7c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90001c62:	4807      	ldr	r0, [pc, #28]	@ (90001c80 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90001c64:	f029 fe2c 	bl	9002b8c0 <__assert_func>
90001c68:	24027e90 	.word	0x24027e90
90001c6c:	24027e92 	.word	0x24027e92
90001c70:	24027e96 	.word	0x24027e96
90001c74:	24027e98 	.word	0x24027e98
90001c78:	9002c9c0 	.word	0x9002c9c0
90001c7c:	9002ca24 	.word	0x9002ca24
90001c80:	9002ca68 	.word	0x9002ca68

90001c84 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90001c84:	b510      	push	{r4, lr}
90001c86:	4604      	mov	r4, r0
        swapFrameBuffers();
90001c88:	f013 fee4 	bl	90015a54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90001c8c:	6823      	ldr	r3, [r4, #0]
90001c8e:	4620      	mov	r0, r4
90001c90:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
90001c94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90001c98:	4718      	bx	r3
90001c9a:	bf00      	nop

90001c9c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90001c9c:	f001 be66 	b.w	9000396c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90001ca0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90001ca0:	f001 be6a 	b.w	90003978 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90001ca4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90001ca4:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90001ca6:	f001 ff29 	bl	90003afc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90001caa:	4812      	ldr	r0, [pc, #72]	@ (90001cf4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90001cac:	2300      	movs	r3, #0
90001cae:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90001cb2:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90001cb6:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90001cba:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90001cbe:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90001cc2:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90001cc6:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90001cca:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90001cce:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90001cd0:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90001cd4:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90001cd6:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90001cda:	1c5a      	adds	r2, r3, #1
90001cdc:	d1f8      	bne.n	90001cd0 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90001cde:	f1ac 0c20 	sub.w	ip, ip, #32
90001ce2:	f11c 0f20 	cmn.w	ip, #32
90001ce6:	d1f0      	bne.n	90001cca <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90001ce8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90001cec:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90001cf0:	bd10      	pop	{r4, pc}
90001cf2:	bf00      	nop
90001cf4:	e000ed00 	.word	0xe000ed00

90001cf8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90001cf8:	f001 be14 	b.w	90003924 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90001cfc <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90001cfc:	f002 b824 	b.w	90003d48 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90001d00 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90001d00:	f002 b80e 	b.w	90003d20 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90001d04 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90001d04:	f001 be18 	b.w	90003938 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90001d08 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
90001d08:	f013 b8fc 	b.w	90014f04 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90001d0c <_ZN11TouchGFXHALD0Ev>:
90001d0c:	b510      	push	{r4, lr}
90001d0e:	4604      	mov	r4, r0
90001d10:	2188      	movs	r1, #136	@ 0x88
90001d12:	f029 fbf8 	bl	9002b506 <_ZdlPvj>
90001d16:	4620      	mov	r0, r4
90001d18:	bd10      	pop	{r4, pc}
90001d1a:	bf00      	nop

90001d1c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
90001d1c:	f890 c074 	ldrb.w	ip, [r0, #116]	@ 0x74
90001d20:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
90001d24:	4b0b      	ldr	r3, [pc, #44]	@ (90001d54 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
        if (requestedOrientation != nativeDisplayOrientation)
90001d26:	458c      	cmp	ip, r1
            if (DISPLAY_ROTATION == rotate0)
90001d28:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90001d2a:	d00b      	beq.n	90001d44 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90001d2c:	b94a      	cbnz	r2, 90001d42 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
90001d2e:	4a0a      	ldr	r2, [pc, #40]	@ (90001d58 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
90001d30:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90001d34:	4909      	ldr	r1, [pc, #36]	@ (90001d5c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
90001d36:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
90001d38:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90001d3c:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90001d3e:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90001d40:	8013      	strh	r3, [r2, #0]
        }
    }
90001d42:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90001d44:	2a00      	cmp	r2, #0
90001d46:	d0fc      	beq.n	90001d42 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90001d48:	4a03      	ldr	r2, [pc, #12]	@ (90001d58 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90001d4a:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90001d4e:	4903      	ldr	r1, [pc, #12]	@ (90001d5c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90001d50:	e7f1      	b.n	90001d36 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90001d52:	bf00      	nop
90001d54:	24027e94 	.word	0x24027e94
90001d58:	24027e92 	.word	0x24027e92
90001d5c:	24027e90 	.word	0x24027e90

90001d60 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90001d60:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90001d62:	f890 0077 	ldrb.w	r0, [r0, #119]	@ 0x77
90001d66:	b118      	cbz	r0, 90001d70 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90001d68:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90001d6a:	6803      	ldr	r3, [r0, #0]
90001d6c:	681b      	ldr	r3, [r3, #0]
90001d6e:	4718      	bx	r3
    }
90001d70:	4770      	bx	lr
90001d72:	bf00      	nop

90001d74 <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90001d74:	6840      	ldr	r0, [r0, #4]
90001d76:	4a04      	ldr	r2, [pc, #16]	@ (90001d88 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90001d78:	6803      	ldr	r3, [r0, #0]
90001d7a:	699b      	ldr	r3, [r3, #24]
90001d7c:	4293      	cmp	r3, r2
90001d7e:	d101      	bne.n	90001d84 <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90001d80:	2000      	movs	r0, #0
90001d82:	4770      	bx	lr
        return dma.getDMAType();
90001d84:	4718      	bx	r3
90001d86:	bf00      	nop
90001d88:	90001bfd 	.word	0x90001bfd

90001d8c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90001d8c:	b1a9      	cbz	r1, 90001dba <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90001d8e:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90001d90:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90001d92:	63c1      	str	r1, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90001d94:	bf18      	it	ne
90001d96:	2201      	movne	r2, #1
90001d98:	490c      	ldr	r1, [pc, #48]	@ (90001dcc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90001d9a:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90001d9c:	6802      	ldr	r2, [r0, #0]
90001d9e:	490c      	ldr	r1, [pc, #48]	@ (90001dd0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90001da0:	f8d2 208c 	ldr.w	r2, [r2, #140]	@ 0x8c
90001da4:	428a      	cmp	r2, r1
90001da6:	d106      	bne.n	90001db6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90001da8:	1e19      	subs	r1, r3, #0
90001daa:	4a0a      	ldr	r2, [pc, #40]	@ (90001dd4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90001dac:	6443      	str	r3, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90001dae:	bf18      	it	ne
90001db0:	2101      	movne	r1, #1
90001db2:	7011      	strb	r1, [r2, #0]
90001db4:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90001db6:	4619      	mov	r1, r3
90001db8:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90001dba:	4b07      	ldr	r3, [pc, #28]	@ (90001dd8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90001dbc:	f240 21d2 	movw	r1, #722	@ 0x2d2
90001dc0:	4a06      	ldr	r2, [pc, #24]	@ (90001ddc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90001dc2:	4807      	ldr	r0, [pc, #28]	@ (90001de0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90001dc4:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90001dc6:	f029 fd7b 	bl	9002b8c0 <__assert_func>
90001dca:	bf00      	nop
90001dcc:	24027e9a 	.word	0x24027e9a
90001dd0:	90001c11 	.word	0x90001c11
90001dd4:	24027e9b 	.word	0x24027e9b
90001dd8:	9002cab0 	.word	0x9002cab0
90001ddc:	9002cae8 	.word	0x9002cae8
90001de0:	9002ca68 	.word	0x9002ca68

90001de4 <_ZN11TouchGFXHAL9taskEntryEv>:
{
90001de4:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90001de6:	6803      	ldr	r3, [r0, #0]
{
90001de8:	4604      	mov	r4, r0
90001dea:	4d17      	ldr	r5, [pc, #92]	@ (90001e48 <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
    enableLCDControllerInterrupt();
90001dec:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90001df0:	4798      	blx	r3
    enableInterrupts();
90001df2:	6823      	ldr	r3, [r4, #0]
90001df4:	4620      	mov	r0, r4
90001df6:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90001df8:	4798      	blx	r3
    OSWrappers::waitForVSync();
90001dfa:	f001 f8ad 	bl	90002f58 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90001dfe:	6823      	ldr	r3, [r4, #0]
90001e00:	4620      	mov	r0, r4
90001e02:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90001e04:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
90001e06:	2201      	movs	r2, #1
90001e08:	2104      	movs	r1, #4
90001e0a:	4810      	ldr	r0, [pc, #64]	@ (90001e4c <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
90001e0c:	f009 ffac 	bl	9000bd68 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90001e10:	2201      	movs	r2, #1
90001e12:	2180      	movs	r1, #128	@ 0x80
90001e14:	480e      	ldr	r0, [pc, #56]	@ (90001e50 <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
90001e16:	f009 ffa7 	bl	9000bd68 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90001e1a:	2201      	movs	r2, #1
90001e1c:	480d      	ldr	r0, [pc, #52]	@ (90001e54 <_ZN11TouchGFXHAL9taskEntryEv+0x70>)
90001e1e:	4611      	mov	r1, r2
90001e20:	f009 ffa2 	bl	9000bd68 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90001e24:	f001 f898 	bl	90002f58 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
90001e28:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
90001e2a:	4620      	mov	r0, r4
90001e2c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90001e2e:	42ab      	cmp	r3, r5
90001e30:	d107      	bne.n	90001e42 <_ZN11TouchGFXHAL9taskEntryEv+0x5e>
90001e32:	f013 fe0f 	bl	90015a54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90001e36:	6823      	ldr	r3, [r4, #0]
90001e38:	4620      	mov	r0, r4
90001e3a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
90001e3e:	4798      	blx	r3
    }
90001e40:	e7f0      	b.n	90001e24 <_ZN11TouchGFXHAL9taskEntryEv+0x40>
90001e42:	4798      	blx	r3
90001e44:	e7ee      	b.n	90001e24 <_ZN11TouchGFXHAL9taskEntryEv+0x40>
90001e46:	bf00      	nop
90001e48:	90001c85 	.word	0x90001c85
90001e4c:	58020000 	.word	0x58020000
90001e50:	58020c00 	.word	0x58020c00
90001e54:	58022800 	.word	0x58022800

90001e58 <_ZN11TouchGFXHAL10initializeEv>:
{
90001e58:	b538      	push	{r3, r4, r5, lr}
90001e5a:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90001e5c:	f001 ff7e 	bl	90003d5c <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
90001e60:	4817      	ldr	r0, [pc, #92]	@ (90001ec0 <_ZN11TouchGFXHAL10initializeEv+0x68>)
90001e62:	6823      	ldr	r3, [r4, #0]
90001e64:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
90001e66:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
90001e6a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
90001e6c:	4285      	cmp	r5, r0
90001e6e:	d119      	bne.n	90001ea4 <_ZN11TouchGFXHAL10initializeEv+0x4c>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90001e70:	b1f9      	cbz	r1, 90001eb2 <_ZN11TouchGFXHAL10initializeEv+0x5a>
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90001e72:	3a00      	subs	r2, #0
90001e74:	4913      	ldr	r1, [pc, #76]	@ (90001ec4 <_ZN11TouchGFXHAL10initializeEv+0x6c>)
        setAnimationStorage(animationStorage);
90001e76:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90001e7a:	bf18      	it	ne
90001e7c:	2201      	movne	r2, #1
90001e7e:	4812      	ldr	r0, [pc, #72]	@ (90001ec8 <_ZN11TouchGFXHAL10initializeEv+0x70>)
90001e80:	428b      	cmp	r3, r1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90001e82:	4912      	ldr	r1, [pc, #72]	@ (90001ecc <_ZN11TouchGFXHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90001e84:	7002      	strb	r2, [r0, #0]
        setAnimationStorage(animationStorage);
90001e86:	d111      	bne.n	90001eac <_ZN11TouchGFXHAL10initializeEv+0x54>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90001e88:	4b11      	ldr	r3, [pc, #68]	@ (90001ed0 <_ZN11TouchGFXHAL10initializeEv+0x78>)
90001e8a:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90001e8c:	6461      	str	r1, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90001e8e:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90001e90:	f104 057c 	add.w	r5, r4, #124	@ 0x7c
90001e94:	4628      	mov	r0, r5
90001e96:	f7ff fd9f 	bl	900019d8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90001e9a:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90001e9c:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90001e9e:	f884 306c 	strb.w	r3, [r4, #108]	@ 0x6c
}
90001ea2:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
90001ea4:	4b09      	ldr	r3, [pc, #36]	@ (90001ecc <_ZN11TouchGFXHAL10initializeEv+0x74>)
90001ea6:	4620      	mov	r0, r4
90001ea8:	47a8      	blx	r5
90001eaa:	e7f1      	b.n	90001e90 <_ZN11TouchGFXHAL10initializeEv+0x38>
        setAnimationStorage(animationStorage);
90001eac:	4620      	mov	r0, r4
90001eae:	4798      	blx	r3
90001eb0:	e7ee      	b.n	90001e90 <_ZN11TouchGFXHAL10initializeEv+0x38>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90001eb2:	4b08      	ldr	r3, [pc, #32]	@ (90001ed4 <_ZN11TouchGFXHAL10initializeEv+0x7c>)
90001eb4:	f240 21d2 	movw	r1, #722	@ 0x2d2
90001eb8:	4a07      	ldr	r2, [pc, #28]	@ (90001ed8 <_ZN11TouchGFXHAL10initializeEv+0x80>)
90001eba:	4808      	ldr	r0, [pc, #32]	@ (90001edc <_ZN11TouchGFXHAL10initializeEv+0x84>)
90001ebc:	f029 fd00 	bl	9002b8c0 <__assert_func>
90001ec0:	90001d8d 	.word	0x90001d8d
90001ec4:	90001c11 	.word	0x90001c11
90001ec8:	24027e9a 	.word	0x24027e9a
90001ecc:	d0000000 	.word	0xd0000000
90001ed0:	24027e9b 	.word	0x24027e9b
90001ed4:	9002cab0 	.word	0x9002cab0
90001ed8:	9002cae8 	.word	0x9002cae8
90001edc:	9002ca68 	.word	0x9002ca68

90001ee0 <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool gotoNextFrame();
    //Decode part of the current frame
    virtual bool decodeFrame(const touchgfx::Rect& area, uint8_t* frameBuffer, uint32_t framebuffer_width);
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const { return frameNumber; }
90001ee0:	6940      	ldr	r0, [r0, #20]
90001ee2:	4770      	bx	lr

90001ee4 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    virtual void setRepeatVideo(bool repeat);
    virtual void getVideoInfo(touchgfx::VideoInformation* data);

    void setAVIFileBuffer(uint8_t* buffer, uint32_t size) { aviBuffer = buffer, aviBufferLength = size; }

    virtual AVIErrors getLastError() { return lastError; }
90001ee4:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
90001ee8:	4770      	bx	lr
90001eea:	bf00      	nop

90001eec <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90001eec:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90001eee:	b10b      	cbz	r3, 90001ef4 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
90001ef0:	2001      	movs	r0, #1
}
90001ef2:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90001ef4:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
90001ef6:	3800      	subs	r0, #0
90001ef8:	bf18      	it	ne
90001efa:	2001      	movne	r0, #1
90001efc:	4770      	bx	lr
90001efe:	bf00      	nop

90001f00 <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
90001f00:	6880      	ldr	r0, [r0, #8]
90001f02:	4770      	bx	lr

90001f04 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001f04:	4770      	bx	lr
90001f06:	bf00      	nop

90001f08 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
90001f08:	3004      	adds	r0, #4
{
90001f0a:	468c      	mov	ip, r1
    *data = videoInfo;
90001f0c:	c80f      	ldmia	r0, {r0, r1, r2, r3}
90001f0e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
90001f12:	4770      	bx	lr

90001f14 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001f14:	4770      	bx	lr
90001f16:	bf00      	nop

90001f18 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
90001f18:	b508      	push	{r3, lr}
    assert(0);
90001f1a:	4a03      	ldr	r2, [pc, #12]	@ (90001f28 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
90001f1c:	f240 11cf 	movw	r1, #463	@ 0x1cf
90001f20:	4b02      	ldr	r3, [pc, #8]	@ (90001f2c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
90001f22:	4803      	ldr	r0, [pc, #12]	@ (90001f30 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
90001f24:	f029 fccc 	bl	9002b8c0 <__assert_func>
90001f28:	9002cc14 	.word	0x9002cc14
90001f2c:	9002cc10 	.word	0x9002cc10
90001f30:	9002cc70 	.word	0x9002cc70

90001f34 <_ZN20HardwareMJPEGDecoderD0Ev>:
90001f34:	b510      	push	{r4, lr}
90001f36:	4604      	mov	r4, r0
90001f38:	2148      	movs	r1, #72	@ 0x48
90001f3a:	f029 fae4 	bl	9002b506 <_ZdlPvj>
90001f3e:	4620      	mov	r0, r4
90001f40:	bd10      	pop	{r4, pc}
90001f42:	bf00      	nop

90001f44 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
90001f44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90001f48:	b085      	sub	sp, #20
90001f4a:	4604      	mov	r4, r0
      JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001f4c:	f8df b1c8 	ldr.w	fp, [pc, #456]	@ 90002118 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1d4>
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
90001f50:	9003      	str	r0, [sp, #12]
      JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001f52:	2002      	movs	r0, #2
90001f54:	f8cb 0010 	str.w	r0, [fp, #16]
      JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001f58:	68e0      	ldr	r0, [r4, #12]
      if((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001f5a:	0704      	lsls	r4, r0, #28
90001f5c:	d002      	beq.n	90001f64 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x20>
          JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001f5e:	f020 000f 	bic.w	r0, r0, #15
90001f62:	3010      	adds	r0, #16
      JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001f64:	f8cb 0000 	str.w	r0, [fp]
      JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001f68:	0900      	lsrs	r0, r0, #4
      JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001f6a:	f44f 7470 	mov.w	r4, #960	@ 0x3c0
  * @retval None
  */
uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef *hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
{
    FrameBufferAddress = output;
    Output_Is_Paused = 0;
90001f6e:	4e5d      	ldr	r6, [pc, #372]	@ (900020e4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1a0>)
      JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001f70:	f8cb 000c 	str.w	r0, [fp, #12]
      Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
      Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
    }

    //Do not return from this function until done with decoding all chunks.
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001f74:	eb00 0040 	add.w	r0, r0, r0, lsl #1
      Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001f78:	4d5b      	ldr	r5, [pc, #364]	@ (900020e8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1a4>)
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001f7a:	01c0      	lsls	r0, r0, #7
    JPEG_OUT_Read_BufferIndex = 0;
90001f7c:	4f5b      	ldr	r7, [pc, #364]	@ (900020ec <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1a8>)
    DMA2D_output_Is_Paused = 1;
90001f7e:	f8df a19c 	ldr.w	sl, [pc, #412]	@ 9000211c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1d8>
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001f82:	9000      	str	r0, [sp, #0]
      JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001f84:	9803      	ldr	r0, [sp, #12]
      JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001f86:	f8cb 4004 	str.w	r4, [fp, #4]
      JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001f8a:	6900      	ldr	r0, [r0, #16]
    FrameBufferAddress = output;
90001f8c:	4c58      	ldr	r4, [pc, #352]	@ (900020f0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1ac>)
      JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001f8e:	f000 000f 	and.w	r0, r0, #15
90001f92:	f8df 818c 	ldr.w	r8, [pc, #396]	@ 90002120 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1dc>
    FrameBufferAddress = output;
90001f96:	6023      	str	r3, [r4, #0]
      JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001f98:	f1c0 0010 	rsb	r0, r0, #16
    JPEG_OUT_Write_BufferIndex = 0;
90001f9c:	4b55      	ldr	r3, [pc, #340]	@ (900020f4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1b0>)
90001f9e:	f8df 9184 	ldr.w	r9, [pc, #388]	@ 90002124 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1e0>
      JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001fa2:	f8cb 0008 	str.w	r0, [fp, #8]
    Output_Is_Paused = 0;
90001fa6:	2000      	movs	r0, #0
90001fa8:	4c53      	ldr	r4, [pc, #332]	@ (900020f8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1b4>)
    JPEG_OUT_Write_BufferIndex = 0;
90001faa:	6018      	str	r0, [r3, #0]
    JPEG_InputImageIndex = 0;
90001fac:	4b53      	ldr	r3, [pc, #332]	@ (900020fc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1b8>)
    Output_Is_Paused = 0;
90001fae:	6030      	str	r0, [r6, #0]
    JPEG_InputImageIndex = 0;
90001fb0:	6018      	str	r0, [r3, #0]
    JPEG_InputImageAddress = (uint32_t)input;
90001fb2:	4b53      	ldr	r3, [pc, #332]	@ (90002100 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1bc>)
      Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001fb4:	7028      	strb	r0, [r5, #0]
    JPEG_InputImageAddress = (uint32_t)input;
90001fb6:	6019      	str	r1, [r3, #0]
    JPEG_InputImageSize_Bytes = chunkSizeIn;
90001fb8:	4b52      	ldr	r3, [pc, #328]	@ (90002104 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1c0>)
      Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90001fba:	60a8      	str	r0, [r5, #8]
    JPEG_InputImageSize_Bytes = chunkSizeIn;
90001fbc:	601a      	str	r2, [r3, #0]
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001fbe:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
    MCU_BlockIndex = 0;
90001fc2:	4b51      	ldr	r3, [pc, #324]	@ (90002108 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1c4>)
      Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001fc4:	7328      	strb	r0, [r5, #12]
    MCU_BlockIndex = 0;
90001fc6:	6018      	str	r0, [r3, #0]
    DMA2D_output_Is_Paused = 1;
90001fc8:	2301      	movs	r3, #1
      Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90001fca:	6168      	str	r0, [r5, #20]
    JPEG_OUT_Read_BufferIndex = 0;
90001fcc:	6038      	str	r0, [r7, #0]
    DMA2D_output_Is_Paused = 1;
90001fce:	f8ca 3000 	str.w	r3, [sl]
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001fd2:	484e      	ldr	r0, [pc, #312]	@ (9000210c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1c8>)
90001fd4:	686b      	ldr	r3, [r5, #4]
90001fd6:	f00a ffb3 	bl	9000cf40 <HAL_JPEG_Decode_DMA>
  * @param dma: DMA2D reference
  * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
  */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef *hjpeg, touchgfx::DMA_Interface& dma)
{
  if(Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd) // decode completed
90001fda:	f8d8 3000 	ldr.w	r3, [r8]
90001fde:	b11b      	cbz	r3, 90001fe8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa4>
90001fe0:	4b4b      	ldr	r3, [pc, #300]	@ (90002110 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1cc>)
90001fe2:	681b      	ldr	r3, [r3, #0]
90001fe4:	2b00      	cmp	r3, #0
90001fe6:	d17b      	bne.n	900020e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x19c>
  {
      return 1;
  }

  // Add job to DMA2D if ready and JPEG buffer is full
  if((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_output_Is_Paused == 1))
90001fe8:	683b      	ldr	r3, [r7, #0]
90001fea:	eb03 0243 	add.w	r2, r3, r3, lsl #1
90001fee:	f815 1022 	ldrb.w	r1, [r5, r2, lsl #2]
90001ff2:	eb05 0282 	add.w	r2, r5, r2, lsl #2
90001ff6:	2901      	cmp	r1, #1
90001ff8:	d041      	beq.n	9000207e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13a>
      // Try to start DMA2D
      dma.start();
  }

  // Start JPEG IP if paused and next buffer is empty
  if((Output_Is_Paused == 1) && \
90001ffa:	6833      	ldr	r3, [r6, #0]
          (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) &&\
90001ffc:	2b01      	cmp	r3, #1
90001ffe:	d029      	beq.n	90002054 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>
  {
      Output_Is_Paused = 0;
      HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
  }

  if ((Output_Is_Paused == 0) && (DMA2D_output_Is_Paused == 0))
90002000:	6833      	ldr	r3, [r6, #0]
90002002:	b9c3      	cbnz	r3, 90002036 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf2>
90002004:	f8da 3000 	ldr.w	r3, [sl]
90002008:	fab3 f383 	clz	r3, r3
9000200c:	095b      	lsrs	r3, r3, #5
9000200e:	005b      	lsls	r3, r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg, *pDma);
90002010:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90002012:	6823      	ldr	r3, [r4, #0]
90002014:	2b02      	cmp	r3, #2
90002016:	d013      	beq.n	90002040 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xfc>
      while(JpegProcessing_End != 1);
90002018:	6823      	ldr	r3, [r4, #0]
9000201a:	2b01      	cmp	r3, #1
9000201c:	d1dd      	bne.n	90001fda <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x96>
  {
      return count_ == max_size_;
  }
  void reset()
  {
      head_ = tail_ = count_ = 0;
9000201e:	2300      	movs	r3, #0
      DMA2D_CopyBufferEnd = 0;
90002020:	4a3b      	ldr	r2, [pc, #236]	@ (90002110 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1cc>)
90002022:	f8c9 300c 	str.w	r3, [r9, #12]
      Jpeg_HWDecodingEnd = 0;
90002026:	f8c8 3000 	str.w	r3, [r8]
      DMA2D_CopyBufferEnd = 0;
9000202a:	6013      	str	r3, [r2, #0]
9000202c:	e9c9 3301 	strd	r3, r3, [r9, #4]
}
90002030:	b005      	add	sp, #20
90002032:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  {
      return 2;
  }

  return 0;
90002036:	2300      	movs	r3, #0
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg, *pDma);
90002038:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
9000203a:	6823      	ldr	r3, [r4, #0]
9000203c:	2b02      	cmp	r3, #2
9000203e:	d1eb      	bne.n	90002018 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
          SEM_WAIT(semDecodingDone);
90002040:	4b34      	ldr	r3, [pc, #208]	@ (90002114 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1d0>)
90002042:	f04f 31ff 	mov.w	r1, #4294967295
90002046:	6818      	ldr	r0, [r3, #0]
90002048:	f00f fbc0 	bl	900117cc <osSemaphoreAcquire>
      while(JpegProcessing_End != 1);
9000204c:	6823      	ldr	r3, [r4, #0]
9000204e:	2b01      	cmp	r3, #1
90002050:	d1c3      	bne.n	90001fda <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x96>
90002052:	e7e4      	b.n	9000201e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xda>
          (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) &&\
90002054:	4b27      	ldr	r3, [pc, #156]	@ (900020f4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1b0>)
90002056:	681b      	ldr	r3, [r3, #0]
90002058:	eb03 0343 	add.w	r3, r3, r3, lsl #1
  if((Output_Is_Paused == 1) && \
9000205c:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
90002060:	2b00      	cmp	r3, #0
90002062:	d1cd      	bne.n	90002000 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xbc>
          (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_EMPTY))
90002064:	683b      	ldr	r3, [r7, #0]
90002066:	eb03 0343 	add.w	r3, r3, r3, lsl #1
          (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) &&\
9000206a:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
9000206e:	2b00      	cmp	r3, #0
90002070:	d1c6      	bne.n	90002000 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xbc>
      HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002072:	2102      	movs	r1, #2
90002074:	4825      	ldr	r0, [pc, #148]	@ (9000210c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1c8>)
      Output_Is_Paused = 0;
90002076:	6033      	str	r3, [r6, #0]
      HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002078:	f00b f8a6 	bl	9000d1c8 <HAL_JPEG_Resume>
9000207c:	e7c0      	b.n	90002000 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xbc>
  if((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_output_Is_Paused == 1))
9000207e:	f8da 1000 	ldr.w	r1, [sl]
90002082:	2901      	cmp	r1, #1
90002084:	d1b9      	bne.n	90001ffa <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xb6>
      JPEG_OUT_Read_BufferIndex++;
90002086:	3301      	adds	r3, #1
      };
90002088:	491f      	ldr	r1, [pc, #124]	@ (90002108 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1c4>)
      tail_ = (tail_ + 1) % max_size_;
9000208a:	f8d9 0000 	ldr.w	r0, [r9]
9000208e:	2b02      	cmp	r3, #2
90002090:	f8d1 c000 	ldr.w	ip, [r1]
90002094:	bf28      	it	cs
90002096:	2300      	movcs	r3, #0
      JPEG_OUT_Read_BufferIndex++;
90002098:	603b      	str	r3, [r7, #0]
      buffer_[tail_] = job;
9000209a:	f8d9 3008 	ldr.w	r3, [r9, #8]
      tail_ = (tail_ + 1) % max_size_;
9000209e:	1c59      	adds	r1, r3, #1
      buffer_[tail_] = job;
900020a0:	3302      	adds	r3, #2
900020a2:	f849 c033 	str.w	ip, [r9, r3, lsl #3]
900020a6:	eb09 03c3 	add.w	r3, r9, r3, lsl #3
900020aa:	605a      	str	r2, [r3, #4]
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg, *pDma);
900020ac:	9a03      	ldr	r2, [sp, #12]
      tail_ = (tail_ + 1) % max_size_;
900020ae:	fbb1 f3f0 	udiv	r3, r1, r0
900020b2:	fb00 1113 	mls	r1, r0, r3, r1
900020b6:	6c50      	ldr	r0, [r2, #68]	@ 0x44
      count_++;
900020b8:	f8d9 200c 	ldr.w	r2, [r9, #12]
      tail_ = (tail_ + 1) % max_size_;
900020bc:	f8c9 1008 	str.w	r1, [r9, #8]
      count_++;
900020c0:	3201      	adds	r2, #1
      MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900020c2:	4911      	ldr	r1, [pc, #68]	@ (90002108 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x1c4>)
900020c4:	f8c9 200c 	str.w	r2, [r9, #12]
900020c8:	680b      	ldr	r3, [r1, #0]
900020ca:	f8db 200c 	ldr.w	r2, [fp, #12]
900020ce:	4413      	add	r3, r2
900020d0:	600b      	str	r3, [r1, #0]
      DMA2D_output_Is_Paused = 0;
900020d2:	2300      	movs	r3, #0
900020d4:	f8ca 3000 	str.w	r3, [sl]
      dma.start();
900020d8:	6803      	ldr	r3, [r0, #0]
900020da:	691b      	ldr	r3, [r3, #16]
900020dc:	4798      	blx	r3
900020de:	e78c      	b.n	90001ffa <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xb6>
      return 1;
900020e0:	2301      	movs	r3, #1
900020e2:	e795      	b.n	90002010 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xcc>
900020e4:	2400602c 	.word	0x2400602c
900020e8:	24000004 	.word	0x24000004
900020ec:	24006034 	.word	0x24006034
900020f0:	24006048 	.word	0x24006048
900020f4:	24006030 	.word	0x24006030
900020f8:	24006020 	.word	0x24006020
900020fc:	24006044 	.word	0x24006044
90002100:	2400603c 	.word	0x2400603c
90002104:	24006040 	.word	0x24006040
90002108:	24006014 	.word	0x24006014
9000210c:	24005e8c 	.word	0x24005e8c
90002110:	24006028 	.word	0x24006028
90002114:	24006010 	.word	0x24006010
90002118:	24005fd8 	.word	0x24005fd8
9000211c:	24006024 	.word	0x24006024
90002120:	24006038 	.word	0x24006038
90002124:	24005ff0 	.word	0x24005ff0

90002128 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90002128:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
9000212a:	6803      	ldr	r3, [r0, #0]
9000212c:	2901      	cmp	r1, #1
9000212e:	4e2b      	ldr	r6, [pc, #172]	@ (900021dc <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb4>)
{
90002130:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
90002132:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90002134:	bf38      	it	cc
90002136:	2101      	movcc	r1, #1
90002138:	42b3      	cmp	r3, r6
9000213a:	460d      	mov	r5, r1
9000213c:	d135      	bne.n	900021aa <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x82>
    return videoInfo.number_of_frames;
9000213e:	6886      	ldr	r6, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90002140:	42b1      	cmp	r1, r6
90002142:	d93d      	bls.n	900021c0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x98>
    uint32_t offset = indexOffset + 8 + (frameNumber-1)*16;
90002144:	1e73      	subs	r3, r6, #1
90002146:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90002148:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber-1)*16;
9000214a:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
9000214e:	b338      	cbz	r0, 900021a0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        if (length > aviBufferLength)
90002150:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90002152:	2b0f      	cmp	r3, #15
90002154:	d936      	bls.n	900021c4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x9c>
        reader->seek(offset);
90002156:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber-1)*16;
90002158:	f107 0508 	add.w	r5, r7, #8
        reader->seek(offset);
9000215c:	68db      	ldr	r3, [r3, #12]
9000215e:	4629      	mov	r1, r5
90002160:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90002162:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90002164:	2210      	movs	r2, #16
90002166:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90002168:	6803      	ldr	r3, [r0, #0]
9000216a:	691b      	ldr	r3, [r3, #16]
9000216c:	4798      	blx	r3
9000216e:	b198      	cbz	r0, 90002198 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
    if (reader != 0)
90002170:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        aviBufferStartOffset = offset;
90002172:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
90002174:	b1a3      	cbz	r3, 900021a0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90002176:	6b62      	ldr	r2, [r4, #52]	@ 0x34
90002178:	7a93      	ldrb	r3, [r2, #10]
9000217a:	7a51      	ldrb	r1, [r2, #9]
9000217c:	041b      	lsls	r3, r3, #16
9000217e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90002182:	7a11      	ldrb	r1, [r2, #8]
90002184:	7ad2      	ldrb	r2, [r2, #11]
90002186:	430b      	orrs	r3, r1
90002188:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
9000218c:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
9000218e:	6166      	str	r6, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90002190:	3a04      	subs	r2, #4
90002192:	441a      	add	r2, r3
90002194:	61a2      	str	r2, [r4, #24]
}
90002196:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90002198:	230d      	movs	r3, #13
9000219a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
9000219e:	e7e7      	b.n	90002170 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900021a0:	f107 0310 	add.w	r3, r7, #16
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
900021a4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
900021a6:	58d3      	ldr	r3, [r2, r3]
900021a8:	e7f0      	b.n	9000218c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
900021aa:	4798      	blx	r3
900021ac:	4285      	cmp	r5, r0
900021ae:	d907      	bls.n	900021c0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x98>
        frameNumber = getNumberOfFrames();
900021b0:	6823      	ldr	r3, [r4, #0]
900021b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900021b4:	42b3      	cmp	r3, r6
900021b6:	d00e      	beq.n	900021d6 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xae>
900021b8:	4620      	mov	r0, r4
900021ba:	4798      	blx	r3
900021bc:	4606      	mov	r6, r0
900021be:	e7c1      	b.n	90002144 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
{
900021c0:	462e      	mov	r6, r5
900021c2:	e7bf      	b.n	90002144 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900021c4:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900021c6:	4b06      	ldr	r3, [pc, #24]	@ (900021e0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb8>)
900021c8:	4a06      	ldr	r2, [pc, #24]	@ (900021e4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xbc>)
900021ca:	21a6      	movs	r1, #166	@ 0xa6
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900021cc:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
900021d0:	4805      	ldr	r0, [pc, #20]	@ (900021e8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc0>)
900021d2:	f029 fb75 	bl	9002b8c0 <__assert_func>
    return videoInfo.number_of_frames;
900021d6:	68a6      	ldr	r6, [r4, #8]
900021d8:	e7b4      	b.n	90002144 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
900021da:	bf00      	nop
900021dc:	90001f01 	.word	0x90001f01
900021e0:	9002ccbc 	.word	0x9002ccbc
900021e4:	9002ccd0 	.word	0x9002ccd0
900021e8:	9002cc70 	.word	0x9002cc70

900021ec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
900021ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900021f0:	4604      	mov	r4, r0
    if (reader != 0)
900021f2:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
900021f4:	b083      	sub	sp, #12
900021f6:	4615      	mov	r5, r2
    readData(currentMovieOffset, 8);
900021f8:	69a6      	ldr	r6, [r4, #24]
    if (reader != 0)
900021fa:	2800      	cmp	r0, #0
900021fc:	f000 80e2 	beq.w	900023c4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>
        if (length > aviBufferLength)
90002200:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90002202:	2b07      	cmp	r3, #7
90002204:	f240 80e5 	bls.w	900023d2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e6>
        reader->seek(offset);
90002208:	6803      	ldr	r3, [r0, #0]
9000220a:	4631      	mov	r1, r6
9000220c:	68db      	ldr	r3, [r3, #12]
9000220e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90002210:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90002212:	2208      	movs	r2, #8
90002214:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90002216:	6803      	ldr	r3, [r0, #0]
90002218:	691b      	ldr	r3, [r3, #16]
9000221a:	4798      	blx	r3
9000221c:	2800      	cmp	r0, #0
9000221e:	f000 80cd 	beq.w	900023bc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d0>
    const uint32_t length = getU32(currentMovieOffset + 4);
90002222:	69a3      	ldr	r3, [r4, #24]
    if (reader != 0)
90002224:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90002226:	1d1a      	adds	r2, r3, #4
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90002228:	f103 0708 	add.w	r7, r3, #8
        aviBufferStartOffset = offset;
9000222c:	63e6      	str	r6, [r4, #60]	@ 0x3c
    if (reader != 0)
9000222e:	2800      	cmp	r0, #0
90002230:	f000 80d8 	beq.w	900023e4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f8>
        const uint32_t index = offset - aviBufferStartOffset;
90002234:	1b92      	subs	r2, r2, r6
        if (length > aviBufferLength)
90002236:	e9d4 630d 	ldrd	r6, r3, [r4, #52]	@ 0x34
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
9000223a:	18b1      	adds	r1, r6, r2
9000223c:	5cb2      	ldrb	r2, [r6, r2]
9000223e:	788e      	ldrb	r6, [r1, #2]
90002240:	f891 c001 	ldrb.w	ip, [r1, #1]
90002244:	0436      	lsls	r6, r6, #16
90002246:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
9000224a:	4316      	orrs	r6, r2
9000224c:	78ca      	ldrb	r2, [r1, #3]
9000224e:	ea46 6602 	orr.w	r6, r6, r2, lsl #24
        if (length > aviBufferLength)
90002252:	42b3      	cmp	r3, r6
90002254:	f0c0 80bd 	bcc.w	900023d2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e6>
        reader->seek(offset);
90002258:	6803      	ldr	r3, [r0, #0]
9000225a:	4639      	mov	r1, r7
9000225c:	68db      	ldr	r3, [r3, #12]
9000225e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90002260:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90002262:	4632      	mov	r2, r6
90002264:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90002266:	6803      	ldr	r3, [r0, #0]
90002268:	691b      	ldr	r3, [r3, #16]
9000226a:	4798      	blx	r3
9000226c:	b910      	cbnz	r0, 90002274 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x88>
            lastError = AVI_ERROR_EOF_REACHED;
9000226e:	230d      	movs	r3, #13
90002270:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
90002274:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90002276:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (frameBuffer) //only decode if buffers are assigned.
90002278:	2d00      	cmp	r5, #0
9000227a:	d053      	beq.n	90002324 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x138>
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000227c:	4a5a      	ldr	r2, [pc, #360]	@ (900023e8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1fc>)
    FrameBufferAddress = output;
9000227e:	4b5b      	ldr	r3, [pc, #364]	@ (900023ec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x200>)
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002280:	68d2      	ldr	r2, [r2, #12]
    FrameBufferAddress = output;
90002282:	601d      	str	r5, [r3, #0]
    Output_Is_Paused = 0;
90002284:	2300      	movs	r3, #0
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002286:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
9000228a:	4d59      	ldr	r5, [pc, #356]	@ (900023f0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x204>)
    Output_Is_Paused = 0;
9000228c:	4f59      	ldr	r7, [pc, #356]	@ (900023f4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x208>)
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000228e:	01d2      	lsls	r2, r2, #7
      Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90002290:	702b      	strb	r3, [r5, #0]
    Output_Is_Paused = 0;
90002292:	603b      	str	r3, [r7, #0]
      Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90002294:	60ab      	str	r3, [r5, #8]
      Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90002296:	732b      	strb	r3, [r5, #12]
      Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90002298:	616b      	str	r3, [r5, #20]
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000229a:	9200      	str	r2, [sp, #0]
    JPEG_InputImageIndex = 0;
9000229c:	4a56      	ldr	r2, [pc, #344]	@ (900023f8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x20c>)
    JPEG_OUT_Read_BufferIndex = 0;
9000229e:	f8df 8184 	ldr.w	r8, [pc, #388]	@ 90002424 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x238>
    JPEG_InputImageIndex = 0;
900022a2:	6013      	str	r3, [r2, #0]
    JPEG_InputImageAddress = (uint32_t)input;
900022a4:	4a55      	ldr	r2, [pc, #340]	@ (900023fc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x210>)
    JPEG_OUT_Write_BufferIndex = 0;
900022a6:	f8df a180 	ldr.w	sl, [pc, #384]	@ 90002428 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x23c>
    JPEG_InputImageAddress = (uint32_t)input;
900022aa:	6011      	str	r1, [r2, #0]
    JPEG_InputImageSize_Bytes = chunkSizeIn;
900022ac:	4a54      	ldr	r2, [pc, #336]	@ (90002400 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x214>)
    DMA2D_output_Is_Paused = 1;
900022ae:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 9000242c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x240>
    JPEG_InputImageSize_Bytes = chunkSizeIn;
900022b2:	6016      	str	r6, [r2, #0]
    MCU_BlockIndex = 0;
900022b4:	4a53      	ldr	r2, [pc, #332]	@ (90002404 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x218>)
    JPEG_OUT_Read_BufferIndex = 0;
900022b6:	f8c8 3000 	str.w	r3, [r8]
    MCU_BlockIndex = 0;
900022ba:	6013      	str	r3, [r2, #0]
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900022bc:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
    JPEG_OUT_Write_BufferIndex = 0;
900022c0:	f8ca 3000 	str.w	r3, [sl]
    DMA2D_output_Is_Paused = 1;
900022c4:	2301      	movs	r3, #1
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900022c6:	4850      	ldr	r0, [pc, #320]	@ (90002408 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x21c>)
    DMA2D_output_Is_Paused = 1;
900022c8:	f8cb 3000 	str.w	r3, [fp]
    HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900022cc:	686b      	ldr	r3, [r5, #4]
900022ce:	f8df 9160 	ldr.w	r9, [pc, #352]	@ 90002430 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x244>
900022d2:	4e4e      	ldr	r6, [pc, #312]	@ (9000240c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x220>)
900022d4:	f00a fe34 	bl	9000cf40 <HAL_JPEG_Decode_DMA>
    return 0;
900022d8:	e008      	b.n	900022ec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x100>
  if ((Output_Is_Paused == 0) && (DMA2D_output_Is_Paused == 0))
900022da:	f8db 3000 	ldr.w	r3, [fp]
900022de:	fab3 f383 	clz	r3, r3
900022e2:	095b      	lsrs	r3, r3, #5
900022e4:	005b      	lsls	r3, r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg, *pDma);
900022e6:	6033      	str	r3, [r6, #0]
      while(JpegProcessing_End == 0);
900022e8:	6833      	ldr	r3, [r6, #0]
900022ea:	b9db      	cbnz	r3, 90002324 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x138>
  if(Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd) // decode completed
900022ec:	f8d9 3000 	ldr.w	r3, [r9]
900022f0:	b11b      	cbz	r3, 900022fa <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10e>
900022f2:	4b47      	ldr	r3, [pc, #284]	@ (90002410 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x224>)
900022f4:	681b      	ldr	r3, [r3, #0]
900022f6:	2b00      	cmp	r3, #0
900022f8:	d15e      	bne.n	900023b8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>
  if((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_output_Is_Paused == 1))
900022fa:	f8d8 2000 	ldr.w	r2, [r8]
900022fe:	eb02 0342 	add.w	r3, r2, r2, lsl #1
90002302:	f815 1023 	ldrb.w	r1, [r5, r3, lsl #2]
90002306:	eb05 0383 	add.w	r3, r5, r3, lsl #2
9000230a:	2901      	cmp	r1, #1
9000230c:	d024      	beq.n	90002358 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16c>
  if((Output_Is_Paused == 1) && \
9000230e:	683b      	ldr	r3, [r7, #0]
          (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) &&\
90002310:	2b01      	cmp	r3, #1
90002312:	d00b      	beq.n	9000232c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
  if ((Output_Is_Paused == 0) && (DMA2D_output_Is_Paused == 0))
90002314:	683b      	ldr	r3, [r7, #0]
90002316:	2b00      	cmp	r3, #0
90002318:	d0df      	beq.n	900022da <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xee>
  return 0;
9000231a:	2300      	movs	r3, #0
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg, *pDma);
9000231c:	6033      	str	r3, [r6, #0]
      while(JpegProcessing_End == 0);
9000231e:	6833      	ldr	r3, [r6, #0]
90002320:	2b00      	cmp	r3, #0
90002322:	d0e3      	beq.n	900022ec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x100>
}
90002324:	2001      	movs	r0, #1
90002326:	b003      	add	sp, #12
90002328:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
          (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) &&\
9000232c:	f8da 3000 	ldr.w	r3, [sl]
90002330:	eb03 0343 	add.w	r3, r3, r3, lsl #1
  if((Output_Is_Paused == 1) && \
90002334:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
90002338:	2b00      	cmp	r3, #0
9000233a:	d1eb      	bne.n	90002314 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
          (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_EMPTY))
9000233c:	f8d8 3000 	ldr.w	r3, [r8]
90002340:	eb03 0343 	add.w	r3, r3, r3, lsl #1
          (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) &&\
90002344:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
90002348:	2b00      	cmp	r3, #0
9000234a:	d1e3      	bne.n	90002314 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
      HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
9000234c:	2102      	movs	r1, #2
9000234e:	482e      	ldr	r0, [pc, #184]	@ (90002408 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x21c>)
      Output_Is_Paused = 0;
90002350:	603b      	str	r3, [r7, #0]
      HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002352:	f00a ff39 	bl	9000d1c8 <HAL_JPEG_Resume>
90002356:	e7dd      	b.n	90002314 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
  if((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_output_Is_Paused == 1))
90002358:	f8db 1000 	ldr.w	r1, [fp]
9000235c:	2901      	cmp	r1, #1
9000235e:	d1d6      	bne.n	9000230e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x122>
      JPEG_OUT_Read_BufferIndex++;
90002360:	3201      	adds	r2, #1
      };
90002362:	4828      	ldr	r0, [pc, #160]	@ (90002404 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x218>)
90002364:	2a02      	cmp	r2, #2
90002366:	f8d0 e000 	ldr.w	lr, [r0]
      MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
9000236a:	f8d0 c000 	ldr.w	ip, [r0]
9000236e:	bf28      	it	cs
90002370:	2200      	movcs	r2, #0
      JPEG_OUT_Read_BufferIndex++;
90002372:	f8c8 2000 	str.w	r2, [r8]
      buffer_[tail_] = job;
90002376:	4a27      	ldr	r2, [pc, #156]	@ (90002414 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x228>)
      count_++;
90002378:	68d0      	ldr	r0, [r2, #12]
      buffer_[tail_] = job;
9000237a:	6891      	ldr	r1, [r2, #8]
      count_++;
9000237c:	3001      	adds	r0, #1
9000237e:	60d0      	str	r0, [r2, #12]
      tail_ = (tail_ + 1) % max_size_;
90002380:	1c48      	adds	r0, r1, #1
      buffer_[tail_] = job;
90002382:	3102      	adds	r1, #2
90002384:	f842 e031 	str.w	lr, [r2, r1, lsl #3]
90002388:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
9000238c:	604b      	str	r3, [r1, #4]
      tail_ = (tail_ + 1) % max_size_;
9000238e:	6813      	ldr	r3, [r2, #0]
90002390:	6811      	ldr	r1, [r2, #0]
90002392:	fbb0 f3f3 	udiv	r3, r0, r3
90002396:	fb01 0013 	mls	r0, r1, r3, r0
      MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
9000239a:	4b13      	ldr	r3, [pc, #76]	@ (900023e8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1fc>)
9000239c:	68db      	ldr	r3, [r3, #12]
9000239e:	6090      	str	r0, [r2, #8]
900023a0:	4463      	add	r3, ip
900023a2:	4818      	ldr	r0, [pc, #96]	@ (90002404 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x218>)
900023a4:	6003      	str	r3, [r0, #0]
      DMA2D_output_Is_Paused = 0;
900023a6:	2300      	movs	r3, #0
      dma.start();
900023a8:	6c60      	ldr	r0, [r4, #68]	@ 0x44
      DMA2D_output_Is_Paused = 0;
900023aa:	f8cb 3000 	str.w	r3, [fp]
      dma.start();
900023ae:	6c63      	ldr	r3, [r4, #68]	@ 0x44
900023b0:	681b      	ldr	r3, [r3, #0]
900023b2:	691b      	ldr	r3, [r3, #16]
900023b4:	4798      	blx	r3
900023b6:	e7aa      	b.n	9000230e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x122>
      return 1;
900023b8:	2301      	movs	r3, #1
900023ba:	e794      	b.n	900022e6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xfa>
            lastError = AVI_ERROR_EOF_REACHED;
900023bc:	230d      	movs	r3, #13
900023be:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
900023c2:	e72e      	b.n	90002222 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x36>
    const uint32_t length = getU32(currentMovieOffset + 4);
900023c4:	1d32      	adds	r2, r6, #4
    if (reader != 0)
900023c6:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
900023c8:	f106 0308 	add.w	r3, r6, #8
900023cc:	588e      	ldr	r6, [r1, r2]
    return movieData + offset;
900023ce:	4419      	add	r1, r3
900023d0:	e752      	b.n	90002278 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x8c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900023d2:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900023d4:	4b10      	ldr	r3, [pc, #64]	@ (90002418 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>)
900023d6:	4a11      	ldr	r2, [pc, #68]	@ (9000241c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x230>)
900023d8:	21a6      	movs	r1, #166	@ 0xa6
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900023da:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
900023de:	4810      	ldr	r0, [pc, #64]	@ (90002420 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x234>)
900023e0:	f029 fa6e 	bl	9002b8c0 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
900023e4:	461e      	mov	r6, r3
900023e6:	e7ee      	b.n	900023c6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1da>
900023e8:	24005fd8 	.word	0x24005fd8
900023ec:	24006048 	.word	0x24006048
900023f0:	24000004 	.word	0x24000004
900023f4:	2400602c 	.word	0x2400602c
900023f8:	24006044 	.word	0x24006044
900023fc:	2400603c 	.word	0x2400603c
90002400:	24006040 	.word	0x24006040
90002404:	24006014 	.word	0x24006014
90002408:	24005e8c 	.word	0x24005e8c
9000240c:	24006020 	.word	0x24006020
90002410:	24006028 	.word	0x24006028
90002414:	24005ff0 	.word	0x24005ff0
90002418:	9002ccbc 	.word	0x9002ccbc
9000241c:	9002ccd0 	.word	0x9002ccd0
90002420:	9002cc70 	.word	0x9002cc70
90002424:	24006034 	.word	0x24006034
90002428:	24006030 	.word	0x24006030
9000242c:	24006024 	.word	0x24006024
90002430:	24006038 	.word	0x24006038

90002434 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90002434:	6943      	ldr	r3, [r0, #20]
{
90002436:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000243a:	2b00      	cmp	r3, #0
9000243c:	f000 8098 	beq.w	90002570 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x13c>
    readData(currentMovieOffset, 8);
90002440:	4605      	mov	r5, r0
    if (reader != 0)
90002442:	6b00      	ldr	r0, [r0, #48]	@ 0x30
    readData(currentMovieOffset, 8);
90002444:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
90002446:	2800      	cmp	r0, #0
90002448:	f000 8082 	beq.w	90002550 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x11c>
        if (length > aviBufferLength)
9000244c:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000244e:	2b07      	cmp	r3, #7
90002450:	f240 8083 	bls.w	9000255a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
90002454:	6803      	ldr	r3, [r0, #0]
90002456:	4621      	mov	r1, r4
90002458:	68db      	ldr	r3, [r3, #12]
9000245a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000245c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000245e:	2208      	movs	r2, #8
90002460:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90002462:	6803      	ldr	r3, [r0, #0]
90002464:	691b      	ldr	r3, [r3, #16]
90002466:	4798      	blx	r3
90002468:	2800      	cmp	r0, #0
9000246a:	d06d      	beq.n	90002548 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x114>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
9000246c:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
9000246e:	6b28      	ldr	r0, [r5, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90002470:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90002472:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
90002474:	2800      	cmp	r0, #0
90002476:	d06d      	beq.n	90002554 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x120>
        const uint32_t index = offset - aviBufferStartOffset;
90002478:	1b12      	subs	r2, r2, r4
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
9000247a:	6b6c      	ldr	r4, [r5, #52]	@ 0x34
9000247c:	18a1      	adds	r1, r4, r2
9000247e:	5ca2      	ldrb	r2, [r4, r2]
90002480:	788c      	ldrb	r4, [r1, #2]
90002482:	784e      	ldrb	r6, [r1, #1]
90002484:	0424      	lsls	r4, r4, #16
90002486:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
9000248a:	4314      	orrs	r4, r2
9000248c:	78ca      	ldrb	r2, [r1, #3]
9000248e:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90002492:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90002494:	f243 0630 	movw	r6, #12336	@ 0x3030
90002498:	e039      	b.n	9000250e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xda>
        if (length > aviBufferLength)
9000249a:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000249c:	2b07      	cmp	r3, #7
9000249e:	d95c      	bls.n	9000255a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
900024a0:	6803      	ldr	r3, [r0, #0]
900024a2:	4621      	mov	r1, r4
900024a4:	68db      	ldr	r3, [r3, #12]
900024a6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900024a8:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900024aa:	2208      	movs	r2, #8
900024ac:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900024ae:	6803      	ldr	r3, [r0, #0]
900024b0:	691b      	ldr	r3, [r3, #16]
900024b2:	4798      	blx	r3
900024b4:	b908      	cbnz	r0, 900024ba <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
900024b6:	f885 7040 	strb.w	r7, [r5, #64]	@ 0x40
    if (reader != 0)
900024ba:	6b28      	ldr	r0, [r5, #48]	@ 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
900024bc:	69aa      	ldr	r2, [r5, #24]
        aviBufferStartOffset = offset;
900024be:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900024c0:	2800      	cmp	r0, #0
900024c2:	d053      	beq.n	9000256c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x138>
        const uint32_t index = offset - aviBufferStartOffset;
900024c4:	1b12      	subs	r2, r2, r4
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8);
900024c6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900024c8:	188b      	adds	r3, r1, r2
900024ca:	5c89      	ldrb	r1, [r1, r2]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900024cc:	799c      	ldrb	r4, [r3, #6]
900024ce:	f893 a005 	ldrb.w	sl, [r3, #5]
900024d2:	0424      	lsls	r4, r4, #16
900024d4:	f893 e004 	ldrb.w	lr, [r3, #4]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8);
900024d8:	f893 9001 	ldrb.w	r9, [r3, #1]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900024dc:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
900024e0:	f893 c007 	ldrb.w	ip, [r3, #7]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8);
900024e4:	f893 8003 	ldrb.w	r8, [r3, #3]
900024e8:	ea41 2109 	orr.w	r1, r1, r9, lsl #8
900024ec:	789a      	ldrb	r2, [r3, #2]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900024ee:	ea44 040e 	orr.w	r4, r4, lr
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8);
900024f2:	ea42 2308 	orr.w	r3, r2, r8, lsl #8
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900024f6:	ea44 640c 	orr.w	r4, r4, ip, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
900024fa:	f246 3264 	movw	r2, #25444	@ 0x6364
900024fe:	42b1      	cmp	r1, r6
90002500:	bf08      	it	eq
90002502:	4293      	cmpeq	r3, r2
90002504:	bf0c      	ite	eq
90002506:	2101      	moveq	r1, #1
90002508:	2100      	movne	r1, #0
9000250a:	d01a      	beq.n	90002542 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x10e>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
9000250c:	69ab      	ldr	r3, [r5, #24]
9000250e:	441c      	add	r4, r3
90002510:	6aab      	ldr	r3, [r5, #40]	@ 0x28
90002512:	f104 0208 	add.w	r2, r4, #8
90002516:	429a      	cmp	r2, r3
90002518:	d20e      	bcs.n	90002538 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x104>
        frameNumber++;
9000251a:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; //pad to next word
9000251c:	3409      	adds	r4, #9
        frameNumber++;
9000251e:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; //pad to next word
90002520:	f024 0401 	bic.w	r4, r4, #1
90002524:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90002528:	2800      	cmp	r0, #0
9000252a:	d1b6      	bne.n	9000249a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x66>
        const uint8_t* const d = movieData + offset;
9000252c:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
        return d[0] | (d[1] << 8);
9000252e:	191a      	adds	r2, r3, r4
90002530:	5b19      	ldrh	r1, [r3, r4]
90002532:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90002534:	6854      	ldr	r4, [r2, #4]
90002536:	e7e0      	b.n	900024fa <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xc6>
    frameNumber = 1;
90002538:	2201      	movs	r2, #1
    currentMovieOffset = firstFrameOffset; //start over
9000253a:	6a2b      	ldr	r3, [r5, #32]
    return false;
9000253c:	2100      	movs	r1, #0
    currentMovieOffset = firstFrameOffset; //start over
9000253e:	e9c5 2305 	strd	r2, r3, [r5, #20]
}
90002542:	4608      	mov	r0, r1
90002544:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90002548:	230d      	movs	r3, #13
9000254a:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
9000254e:	e78d      	b.n	9000246c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x38>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90002550:	1d22      	adds	r2, r4, #4
90002552:	4623      	mov	r3, r4
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90002554:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
90002556:	588c      	ldr	r4, [r1, r2]
90002558:	e79b      	b.n	90002492 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x5e>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000255a:	2009      	movs	r0, #9
            assert(!"Buffer to small");
9000255c:	4b07      	ldr	r3, [pc, #28]	@ (9000257c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x148>)
9000255e:	4a08      	ldr	r2, [pc, #32]	@ (90002580 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>)
90002560:	21a6      	movs	r1, #166	@ 0xa6
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90002562:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
90002566:	4807      	ldr	r0, [pc, #28]	@ (90002584 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90002568:	f029 f9aa 	bl	9002b8c0 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
9000256c:	4614      	mov	r4, r2
9000256e:	e7dd      	b.n	9000252c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xf8>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90002570:	4b05      	ldr	r3, [pc, #20]	@ (90002588 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x154>)
90002572:	21ec      	movs	r1, #236	@ 0xec
90002574:	4a05      	ldr	r2, [pc, #20]	@ (9000258c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x158>)
90002576:	4803      	ldr	r0, [pc, #12]	@ (90002584 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90002578:	f029 f9a2 	bl	9002b8c0 <__assert_func>
9000257c:	9002ccbc 	.word	0x9002ccbc
90002580:	9002ccd0 	.word	0x9002ccd0
90002584:	9002cc70 	.word	0x9002cc70
90002588:	9002cd14 	.word	0x9002cd14
9000258c:	9002cd60 	.word	0x9002cd60

90002590 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90002590:	6943      	ldr	r3, [r0, #20]
{
90002592:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90002596:	2b00      	cmp	r3, #0
90002598:	f000 809b 	beq.w	900026d2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x142>
    readData(currentMovieOffset, 8);
9000259c:	4604      	mov	r4, r0
    if (reader != 0)
9000259e:	6b00      	ldr	r0, [r0, #48]	@ 0x30
900025a0:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
900025a2:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
900025a4:	2800      	cmp	r0, #0
900025a6:	d061      	beq.n	9000266c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xdc>
        if (length > aviBufferLength)
900025a8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
900025aa:	2b07      	cmp	r3, #7
900025ac:	f240 8097 	bls.w	900026de <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x14e>
        reader->seek(offset);
900025b0:	6803      	ldr	r3, [r0, #0]
900025b2:	4629      	mov	r1, r5
900025b4:	68db      	ldr	r3, [r3, #12]
900025b6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900025b8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900025ba:	2208      	movs	r2, #8
900025bc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900025be:	6803      	ldr	r3, [r0, #0]
900025c0:	691b      	ldr	r3, [r3, #16]
900025c2:	4798      	blx	r3
900025c4:	2800      	cmp	r0, #0
900025c6:	d04c      	beq.n	90002662 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd2>
    uint32_t streamNo  = getU16(currentMovieOffset);
900025c8:	69a1      	ldr	r1, [r4, #24]
    if (reader != 0)
900025ca:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t chunkType = getU16(currentMovieOffset + 2);
900025cc:	1c8a      	adds	r2, r1, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900025ce:	f101 0c04 	add.w	ip, r1, #4
        aviBufferStartOffset = offset;
900025d2:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
900025d4:	2800      	cmp	r0, #0
900025d6:	d048      	beq.n	9000266a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xda>
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8);
900025d8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900025da:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
900025de:	1b52      	subs	r2, r2, r5
900025e0:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900025e2:	eb03 0e0c 	add.w	lr, r3, ip
900025e6:	f813 700c 	ldrb.w	r7, [r3, ip]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8);
900025ea:	eb03 0805 	add.w	r8, r3, r5
900025ee:	f813 c005 	ldrb.w	ip, [r3, r5]
900025f2:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900025f6:	f89e 8001 	ldrb.w	r8, [lr, #1]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8);
900025fa:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900025fe:	f89e 5002 	ldrb.w	r5, [lr, #2]
90002602:	f89e e003 	ldrb.w	lr, [lr, #3]
90002606:	042d      	lsls	r5, r5, #16
90002608:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
9000260c:	433d      	orrs	r5, r7
9000260e:	ea45 650e 	orr.w	r5, r5, lr, lsl #24
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8);
90002612:	eb03 0e02 	add.w	lr, r3, r2
90002616:	5c9b      	ldrb	r3, [r3, r2]
90002618:	f89e 2001 	ldrb.w	r2, [lr, #1]
9000261c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90002620:	eb01 0e05 	add.w	lr, r1, r5
90002624:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
90002626:	f10e 0208 	add.w	r2, lr, #8
9000262a:	42ba      	cmp	r2, r7
9000262c:	d212      	bcs.n	90002654 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc4>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
9000262e:	f243 0730 	movw	r7, #12336	@ 0x3030
90002632:	45bc      	cmp	ip, r7
90002634:	d123      	bne.n	9000267e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
90002636:	f246 3764 	movw	r7, #25444	@ 0x6364
9000263a:	42bb      	cmp	r3, r7
9000263c:	d11f      	bne.n	9000267e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
9000263e:	bb15      	cbnz	r5, 90002686 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xf6>
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; //pad to next word
90002640:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90002642:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; //pad to next word
90002644:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90002648:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; //pad to next word
9000264a:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
9000264c:	d002      	beq.n	90002654 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc4>
9000264e:	2001      	movs	r0, #1
}
90002650:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90002654:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; //start over
90002656:	6a23      	ldr	r3, [r4, #32]
90002658:	2000      	movs	r0, #0
        frameNumber = 1;
9000265a:	6162      	str	r2, [r4, #20]
        currentMovieOffset = firstFrameOffset; //start over
9000265c:	61a3      	str	r3, [r4, #24]
}
9000265e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90002662:	230d      	movs	r3, #13
90002664:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90002668:	e7ae      	b.n	900025c8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
9000266a:	460d      	mov	r5, r1
        const uint8_t* const d = movieData + offset;
9000266c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        const uint8_t* const d = movieData + offset;
9000266e:	4629      	mov	r1, r5
90002670:	2000      	movs	r0, #0
        return d[0] | (d[1] << 8);
90002672:	f832 c005 	ldrh.w	ip, [r2, r5]
90002676:	442a      	add	r2, r5
90002678:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
9000267a:	6855      	ldr	r5, [r2, #4]
9000267c:	e7d0      	b.n	90002620 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x90>
        if (chunkSize == 0) // Empty frame - Skip
9000267e:	2d00      	cmp	r5, #0
90002680:	bf18      	it	ne
90002682:	4672      	movne	r2, lr
90002684:	e7dc      	b.n	90002640 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb0>
            currentMovieOffset += 8;
90002686:	f101 0708 	add.w	r7, r1, #8
9000268a:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
9000268c:	b1f0      	cbz	r0, 900026cc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x13c>
        if (length > aviBufferLength)
9000268e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90002690:	429d      	cmp	r5, r3
90002692:	d824      	bhi.n	900026de <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x14e>
        reader->seek(offset);
90002694:	6803      	ldr	r3, [r0, #0]
90002696:	4639      	mov	r1, r7
90002698:	68db      	ldr	r3, [r3, #12]
9000269a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000269c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000269e:	462a      	mov	r2, r5
900026a0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900026a2:	6803      	ldr	r3, [r0, #0]
900026a4:	691b      	ldr	r3, [r3, #16]
900026a6:	4798      	blx	r3
900026a8:	b910      	cbnz	r0, 900026b0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
900026aa:	230d      	movs	r3, #13
900026ac:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
900026b0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
900026b2:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (outputBuffer) //only decode if buffers are assigned.
900026b4:	b126      	cbz	r6, 900026c0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x130>
900026b6:	4633      	mov	r3, r6
900026b8:	462a      	mov	r2, r5
900026ba:	4620      	mov	r0, r4
900026bc:	f7ff fc42 	bl	90001f44 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
900026c0:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
900026c4:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
900026c6:	442a      	add	r2, r5
            frameNumber++;
900026c8:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) // Empty frame - Skip
900026ca:	e7b9      	b.n	90002640 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb0>
    return movieData + offset;
900026cc:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
900026ce:	4439      	add	r1, r7
900026d0:	e7f0      	b.n	900026b4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x124>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900026d2:	4b07      	ldr	r3, [pc, #28]	@ (900026f0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>)
900026d4:	21b8      	movs	r1, #184	@ 0xb8
900026d6:	4a07      	ldr	r2, [pc, #28]	@ (900026f4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x164>)
900026d8:	4807      	ldr	r0, [pc, #28]	@ (900026f8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
900026da:	f029 f8f1 	bl	9002b8c0 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900026de:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900026e0:	4b06      	ldr	r3, [pc, #24]	@ (900026fc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x16c>)
900026e2:	4a07      	ldr	r2, [pc, #28]	@ (90002700 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x170>)
900026e4:	21a6      	movs	r1, #166	@ 0xa6
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900026e6:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
900026ea:	4803      	ldr	r0, [pc, #12]	@ (900026f8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
900026ec:	f029 f8e8 	bl	9002b8c0 <__assert_func>
900026f0:	9002cd14 	.word	0x9002cd14
900026f4:	9002cd94 	.word	0x9002cd94
900026f8:	9002cc70 	.word	0x9002cc70
900026fc:	9002ccbc 	.word	0x9002ccbc
90002700:	9002ccd0 	.word	0x9002ccd0

90002704 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90002704:	b538      	push	{r3, r4, r5, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90002706:	2500      	movs	r5, #0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90002708:	4b0f      	ldr	r3, [pc, #60]	@ (90002748 <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
9000270a:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000270c:	6003      	str	r3, [r0, #0]
9000270e:	63c5      	str	r5, [r0, #60]	@ 0x3c
90002710:	f880 5040 	strb.w	r5, [r0, #64]	@ 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90002714:	e9c0 5505 	strd	r5, r5, [r0, #20]
90002718:	e9c0 5507 	strd	r5, r5, [r0, #28]
9000271c:	e9c0 5509 	strd	r5, r5, [r0, #36]	@ 0x24
90002720:	e9c0 550b 	strd	r5, r5, [r0, #44]	@ 0x2c
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90002724:	e9c0 550d 	strd	r5, r5, [r0, #52]	@ 0x34
    videoInfo.frame_width = 0;
90002728:	e9c0 5503 	strd	r5, r5, [r0, #12]
    videoInfo.number_of_frames = 0;
9000272c:	e9c0 5501 	strd	r5, r5, [r0, #4]
    TGFX_JPEG_InitColorTables();
90002730:	f002 fa36 	bl	90004ba0 <TGFX_JPEG_InitColorTables>
    semDecodingDone = SEM_CREATE();
90002734:	462a      	mov	r2, r5
90002736:	4629      	mov	r1, r5
90002738:	2001      	movs	r0, #1
9000273a:	f00e fffb 	bl	90011734 <osSemaphoreNew>
9000273e:	4b03      	ldr	r3, [pc, #12]	@ (9000274c <_ZN20HardwareMJPEGDecoderC1Ev+0x48>)
90002740:	4602      	mov	r2, r0
}
90002742:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90002744:	601a      	str	r2, [r3, #0]
}
90002746:	bd38      	pop	{r3, r4, r5, pc}
90002748:	9002cf14 	.word	0x9002cf14
9000274c:	24006010 	.word	0x24006010

90002750 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90002750:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90002754:	2100      	movs	r1, #0
    if (reader != 0)
90002756:	6b06      	ldr	r6, [r0, #48]	@ 0x30
{
90002758:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000275a:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000275c:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    if (reader != 0)
90002760:	2e00      	cmp	r6, #0
90002762:	f000 81a9 	beq.w	90002ab8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>
        if (length > aviBufferLength)
90002766:	6b83      	ldr	r3, [r0, #56]	@ 0x38
90002768:	2b47      	cmp	r3, #71	@ 0x47
9000276a:	f240 8206 	bls.w	90002b7a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42a>
        reader->seek(offset);
9000276e:	6833      	ldr	r3, [r6, #0]
90002770:	4630      	mov	r0, r6
90002772:	68db      	ldr	r3, [r3, #12]
90002774:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90002776:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90002778:	2248      	movs	r2, #72	@ 0x48
9000277a:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000277c:	6803      	ldr	r3, [r0, #0]
9000277e:	691b      	ldr	r3, [r3, #16]
90002780:	4798      	blx	r3
90002782:	2800      	cmp	r0, #0
90002784:	f000 80b7 	beq.w	900028f6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a6>
        aviBufferStartOffset = offset;
90002788:	2300      	movs	r3, #0
    if (reader != 0)
9000278a:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000278c:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
9000278e:	46b2      	mov	sl, r6
        aviBufferStartOffset = offset;
90002790:	63eb      	str	r3, [r5, #60]	@ 0x3c
    if (reader != 0)
90002792:	2e00      	cmp	r6, #0
90002794:	f000 8191 	beq.w	90002aba <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36a>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90002798:	f8d5 9034 	ldr.w	r9, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
9000279c:	2204      	movs	r2, #4
9000279e:	49be      	ldr	r1, [pc, #760]	@ (90002a98 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x348>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900027a0:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
900027a4:	4620      	mov	r0, r4
900027a6:	f029 fb2f 	bl	9002be08 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900027aa:	2800      	cmp	r0, #0
900027ac:	f040 81f5 	bne.w	90002b9a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x44a>
    currentMovieOffset += 8;
900027b0:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900027b4:	2204      	movs	r2, #4
900027b6:	49b9      	ldr	r1, [pc, #740]	@ (90002a9c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x34c>)
    currentMovieOffset += 8;
900027b8:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900027ba:	4448      	add	r0, r9
900027bc:	f029 fb24 	bl	9002be08 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900027c0:	2800      	cmp	r0, #0
900027c2:	f040 81fe 	bne.w	90002bc2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x472>
    currentMovieOffset += 4;
900027c6:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900027ca:	2204      	movs	r2, #4
900027cc:	49b4      	ldr	r1, [pc, #720]	@ (90002aa0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>)
900027ce:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900027d2:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900027d6:	f029 fb17 	bl	9002be08 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900027da:	4680      	mov	r8, r0
900027dc:	2800      	cmp	r0, #0
900027de:	f040 81e6 	bne.w	90002bae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x45e>
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900027e2:	7ca3      	ldrb	r3, [r4, #18]
900027e4:	7c62      	ldrb	r2, [r4, #17]
900027e6:	041b      	lsls	r3, r3, #16
900027e8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
900027ec:	7c22      	ldrb	r2, [r4, #16]
900027ee:	4313      	orrs	r3, r2
900027f0:	7ce2      	ldrb	r2, [r4, #19]
    assert(aviListSize);
900027f2:	ea53 6402 	orrs.w	r4, r3, r2, lsl #24
900027f6:	f000 81c9 	beq.w	90002b8c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x43c>
    uint32_t offset =  currentMovieOffset + 8;
900027fa:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900027fe:	2204      	movs	r2, #4
90002800:	49a8      	ldr	r1, [pc, #672]	@ (90002aa4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x354>)
90002802:	4448      	add	r0, r9
90002804:	f029 fb00 	bl	9002be08 <strncmp>
    if (compare(offset, "hdrl", 4))
90002808:	2800      	cmp	r0, #0
9000280a:	d078      	beq.n	900028fe <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ae>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000280c:	2306      	movs	r3, #6
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000280e:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90002812:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90002816:	4448      	add	r0, r9
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90002818:	445c      	add	r4, fp
    return strncmp(src, str, num);
9000281a:	2204      	movs	r2, #4
9000281c:	49a2      	ldr	r1, [pc, #648]	@ (90002aa8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x358>)
    uint32_t listOffset = aviListOffset + aviListSize + 8;
9000281e:	3408      	adds	r4, #8
    return strncmp(src, str, num);
90002820:	f029 faf2 	bl	9002be08 <strncmp>
    if (compare(offset, "avih", 4))
90002824:	2800      	cmp	r0, #0
90002826:	f000 80dc 	beq.w	900029e2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x292>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
9000282a:	2307      	movs	r3, #7
9000282c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90002830:	f1ba 0f00 	cmp.w	sl, #0
90002834:	f000 8176 	beq.w	90002b24 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3d4>
        if (length > aviBufferLength)
90002838:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000283a:	2b0b      	cmp	r3, #11
9000283c:	f240 819d 	bls.w	90002b7a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42a>
        reader->seek(offset);
90002840:	f8da 3000 	ldr.w	r3, [sl]
90002844:	4621      	mov	r1, r4
90002846:	4650      	mov	r0, sl
90002848:	68db      	ldr	r3, [r3, #12]
9000284a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000284c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000284e:	220c      	movs	r2, #12
90002850:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90002852:	6803      	ldr	r3, [r0, #0]
90002854:	691b      	ldr	r3, [r3, #16]
90002856:	4798      	blx	r3
90002858:	2800      	cmp	r0, #0
9000285a:	f000 8117 	beq.w	90002a8c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x33c>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000285e:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        aviBufferStartOffset = offset;
90002862:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
90002864:	63ec      	str	r4, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90002866:	f8df 8248 	ldr.w	r8, [pc, #584]	@ 90002ab0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>
            lastError = AVI_ERROR_EOF_REACHED;
9000286a:	f04f 090d 	mov.w	r9, #13
9000286e:	e003      	b.n	90002878 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90002870:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
    if (reader != 0)
90002874:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
90002876:	63ec      	str	r4, [r5, #60]	@ 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90002878:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
9000287c:	2e00      	cmp	r6, #0
9000287e:	d048      	beq.n	90002912 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c2>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90002880:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90002882:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90002884:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
90002886:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90002888:	1afb      	subs	r3, r7, r3
9000288a:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000288c:	f029 fabc 	bl	9002be08 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90002890:	2800      	cmp	r0, #0
90002892:	d047      	beq.n	90002924 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d4>
90002894:	f1ba 0f00 	cmp.w	sl, #0
90002898:	f040 809e 	bne.w	900029d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x288>
9000289c:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000289e:	42a3      	cmp	r3, r4
900028a0:	d943      	bls.n	9000292a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1da>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
900028a2:	3404      	adds	r4, #4
    if (reader != 0)
900028a4:	b386      	cbz	r6, 90002908 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>
        const uint32_t index = offset - aviBufferStartOffset;
900028a6:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
        if (length > aviBufferLength)
900028a8:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900028ac:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
900028ae:	2b0b      	cmp	r3, #11
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900028b0:	eb01 0204 	add.w	r2, r1, r4
900028b4:	5d09      	ldrb	r1, [r1, r4]
900028b6:	7894      	ldrb	r4, [r2, #2]
900028b8:	7850      	ldrb	r0, [r2, #1]
900028ba:	ea4f 4404 	mov.w	r4, r4, lsl #16
900028be:	78d2      	ldrb	r2, [r2, #3]
900028c0:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
900028c4:	ea44 0401 	orr.w	r4, r4, r1
900028c8:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
900028cc:	443c      	add	r4, r7
        if (length > aviBufferLength)
900028ce:	f240 8154 	bls.w	90002b7a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42a>
        reader->seek(offset);
900028d2:	6833      	ldr	r3, [r6, #0]
900028d4:	4621      	mov	r1, r4
900028d6:	4630      	mov	r0, r6
900028d8:	68db      	ldr	r3, [r3, #12]
900028da:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900028dc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900028de:	220c      	movs	r2, #12
900028e0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900028e2:	6803      	ldr	r3, [r0, #0]
900028e4:	691b      	ldr	r3, [r3, #16]
900028e6:	4798      	blx	r3
900028e8:	2800      	cmp	r0, #0
900028ea:	d1c1      	bne.n	90002870 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
900028ec:	f04f 0a0d 	mov.w	sl, #13
900028f0:	f885 9040 	strb.w	r9, [r5, #64]	@ 0x40
900028f4:	e7be      	b.n	90002874 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
900028f6:	230d      	movs	r3, #13
900028f8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900028fc:	e744      	b.n	90002788 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
    offset += 4;
900028fe:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
90002902:	f04f 0801 	mov.w	r8, #1
90002906:	e786      	b.n	90002816 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc6>
        listOffset += listSize;
90002908:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000290a:	591c      	ldr	r4, [r3, r4]
9000290c:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000290e:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
90002912:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
90002914:	2204      	movs	r2, #4
90002916:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
90002918:	2600      	movs	r6, #0
9000291a:	4438      	add	r0, r7
    return strncmp(src, str, num);
9000291c:	f029 fa74 	bl	9002be08 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90002920:	2800      	cmp	r0, #0
90002922:	d1b7      	bne.n	90002894 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x144>
    if (lastError != AVI_NO_ERROR)
90002924:	f1ba 0f00 	cmp.w	sl, #0
90002928:	d156      	bne.n	900029d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x288>
    currentMovieOffset = listOffset + 8 + 4; //skip LIST and 'movi'
9000292a:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
9000292e:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; //skip LIST and 'movi'
90002930:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
90002932:	2e00      	cmp	r6, #0
90002934:	f000 8119 	beq.w	90002b6a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x41a>
        const uint32_t index = offset - aviBufferStartOffset;
90002938:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
9000293a:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
9000293c:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	@ 0x34
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90002940:	f104 0e02 	add.w	lr, r4, #2
90002944:	f104 0c01 	add.w	ip, r4, #1
90002948:	f811 8004 	ldrb.w	r8, [r1, r4]
9000294c:	1ce0      	adds	r0, r4, #3
9000294e:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
90002952:	2a03      	cmp	r2, #3
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90002954:	f811 900c 	ldrb.w	r9, [r1, ip]
90002958:	ea4f 4303 	mov.w	r3, r3, lsl #16
9000295c:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90002960:	ea43 0308 	orr.w	r3, r3, r8
90002964:	f811 8000 	ldrb.w	r8, [r1, r0]
90002968:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
9000296c:	443b      	add	r3, r7
9000296e:	626b      	str	r3, [r5, #36]	@ 0x24
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90002970:	f811 300e 	ldrb.w	r3, [r1, lr]
90002974:	f811 e00c 	ldrb.w	lr, [r1, ip]
90002978:	f811 c004 	ldrb.w	ip, [r1, r4]
9000297c:	ea4f 4403 	mov.w	r4, r3, lsl #16
90002980:	5c09      	ldrb	r1, [r1, r0]
90002982:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
90002986:	ea44 040c 	orr.w	r4, r4, ip
9000298a:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
9000298e:	443c      	add	r4, r7
        if (length > aviBufferLength)
90002990:	f240 80f3 	bls.w	90002b7a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42a>
        reader->seek(offset);
90002994:	6833      	ldr	r3, [r6, #0]
90002996:	4621      	mov	r1, r4
90002998:	4630      	mov	r0, r6
9000299a:	68db      	ldr	r3, [r3, #12]
9000299c:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000299e:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900029a0:	2204      	movs	r2, #4
900029a2:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900029a4:	6803      	ldr	r3, [r0, #0]
900029a6:	691b      	ldr	r3, [r3, #16]
900029a8:	4798      	blx	r3
900029aa:	2800      	cmp	r0, #0
900029ac:	f000 80bd 	beq.w	90002b2a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3da>
    if (reader != 0)
900029b0:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
900029b2:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900029b4:	2b00      	cmp	r3, #0
900029b6:	f000 810e 	beq.w	90002bd6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x486>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900029ba:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900029bc:	2204      	movs	r2, #4
900029be:	493b      	ldr	r1, [pc, #236]	@ (90002aac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
900029c0:	f029 fa22 	bl	9002be08 <strncmp>
    if (!compare(listOffset, "idx1", 4))
900029c4:	2800      	cmp	r0, #0
900029c6:	f040 80cb 	bne.w	90002b60 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x410>
    frameNumber = 1; //next frame number is 1
900029ca:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
900029cc:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
900029ce:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; //next frame number is 1
900029d0:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
900029d2:	622b      	str	r3, [r5, #32]
}
900029d4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900029d8:	230a      	movs	r3, #10
900029da:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
900029de:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
900029e2:	f1b8 0f00 	cmp.w	r8, #0
900029e6:	f43f af23 	beq.w	90002830 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe0>
        offset += 8; //skip fourcc and cb in AVIMAINHEADER
900029ea:	f107 0320 	add.w	r3, r7, #32
    if (reader != 0)
900029ee:	f1ba 0f00 	cmp.w	sl, #0
900029f2:	f000 80a4 	beq.w	90002b3e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3ee>
        const uint32_t index = offset - aviBufferStartOffset;
900029f6:	6bee      	ldr	r6, [r5, #60]	@ 0x3c
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
900029f8:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900029fa:	1b9b      	subs	r3, r3, r6
900029fc:	f1c6 0030 	rsb	r0, r6, #48	@ 0x30
90002a00:	f1c6 0140 	rsb	r1, r6, #64	@ 0x40
90002a04:	f1c6 0644 	rsb	r6, r6, #68	@ 0x44
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90002a08:	eb02 0e03 	add.w	lr, r2, r3
90002a0c:	f812 8003 	ldrb.w	r8, [r2, r3]
        const uint32_t index = offset - aviBufferStartOffset;
90002a10:	4438      	add	r0, r7
90002a12:	4439      	add	r1, r7
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90002a14:	f89e 3002 	ldrb.w	r3, [lr, #2]
        const uint32_t index = offset - aviBufferStartOffset;
90002a18:	443e      	add	r6, r7
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90002a1a:	f89e 7001 	ldrb.w	r7, [lr, #1]
90002a1e:	041b      	lsls	r3, r3, #16
        videoInfo.ms_between_frames = getU32(offset)/1000;
90002a20:	f8df c090 	ldr.w	ip, [pc, #144]	@ 90002ab4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90002a24:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
90002a28:	f89e 7003 	ldrb.w	r7, [lr, #3]
90002a2c:	ea43 0308 	orr.w	r3, r3, r8
90002a30:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
90002a34:	1817      	adds	r7, r2, r0
        videoInfo.ms_between_frames = getU32(offset)/1000;
90002a36:	fbac c303 	umull	ip, r3, ip, r3
90002a3a:	099b      	lsrs	r3, r3, #6
90002a3c:	606b      	str	r3, [r5, #4]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90002a3e:	78bb      	ldrb	r3, [r7, #2]
90002a40:	f897 e001 	ldrb.w	lr, [r7, #1]
90002a44:	041b      	lsls	r3, r3, #16
90002a46:	f812 c000 	ldrb.w	ip, [r2, r0]
90002a4a:	78ff      	ldrb	r7, [r7, #3]
90002a4c:	1850      	adds	r0, r2, r1
90002a4e:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
90002a52:	ea43 030c 	orr.w	r3, r3, ip
90002a56:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
90002a5a:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90002a5c:	7883      	ldrb	r3, [r0, #2]
90002a5e:	7847      	ldrb	r7, [r0, #1]
90002a60:	041b      	lsls	r3, r3, #16
90002a62:	5c51      	ldrb	r1, [r2, r1]
90002a64:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
90002a68:	430b      	orrs	r3, r1
90002a6a:	78c1      	ldrb	r1, [r0, #3]
90002a6c:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90002a70:	1991      	adds	r1, r2, r6
        videoInfo.frame_width = getU32(offset + 32);
90002a72:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index+0] | (aviBuffer[index+1]<<8) | (aviBuffer[index+2]<<16) | (aviBuffer[index+3]<<24);
90002a74:	788b      	ldrb	r3, [r1, #2]
90002a76:	7848      	ldrb	r0, [r1, #1]
90002a78:	041b      	lsls	r3, r3, #16
90002a7a:	5d92      	ldrb	r2, [r2, r6]
90002a7c:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90002a80:	4313      	orrs	r3, r2
90002a82:	78ca      	ldrb	r2, [r1, #3]
90002a84:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
90002a88:	612b      	str	r3, [r5, #16]
    if (reader != 0)
90002a8a:	e6d5      	b.n	90002838 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe8>
            lastError = AVI_ERROR_EOF_REACHED;
90002a8c:	230d      	movs	r3, #13
90002a8e:	469a      	mov	sl, r3
90002a90:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90002a94:	e6e5      	b.n	90002862 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x112>
90002a96:	bf00      	nop
90002a98:	9002cdf0 	.word	0x9002cdf0
90002a9c:	9002cea8 	.word	0x9002cea8
90002aa0:	9002cea0 	.word	0x9002cea0
90002aa4:	9002ce74 	.word	0x9002ce74
90002aa8:	9002ce88 	.word	0x9002ce88
90002aac:	9002ce98 	.word	0x9002ce98
90002ab0:	9002ce90 	.word	0x9002ce90
90002ab4:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
90002ab8:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
90002aba:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
90002abe:	2204      	movs	r2, #4
90002ac0:	4946      	ldr	r1, [pc, #280]	@ (90002bdc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x48c>)
        src = (const char*)movieData + offset;
90002ac2:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
90002ac6:	4620      	mov	r0, r4
90002ac8:	f029 f99e 	bl	9002be08 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90002acc:	2800      	cmp	r0, #0
90002ace:	d164      	bne.n	90002b9a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x44a>
    currentMovieOffset += 8;
90002ad0:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90002ad4:	2204      	movs	r2, #4
90002ad6:	4942      	ldr	r1, [pc, #264]	@ (90002be0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x490>)
    currentMovieOffset += 8;
90002ad8:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
90002ada:	4448      	add	r0, r9
90002adc:	f029 f994 	bl	9002be08 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90002ae0:	2800      	cmp	r0, #0
90002ae2:	d16e      	bne.n	90002bc2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x472>
    currentMovieOffset += 4;
90002ae4:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
90002ae8:	2204      	movs	r2, #4
90002aea:	493e      	ldr	r1, [pc, #248]	@ (90002be4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x494>)
90002aec:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
90002af0:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
90002af4:	f029 f988 	bl	9002be08 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
90002af8:	4680      	mov	r8, r0
90002afa:	2800      	cmp	r0, #0
90002afc:	d157      	bne.n	90002bae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x45e>
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90002afe:	6924      	ldr	r4, [r4, #16]
    assert(aviListSize);
90002b00:	2c00      	cmp	r4, #0
90002b02:	d043      	beq.n	90002b8c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x43c>
    uint32_t offset =  currentMovieOffset + 8;
90002b04:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90002b08:	2204      	movs	r2, #4
90002b0a:	4937      	ldr	r1, [pc, #220]	@ (90002be8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x498>)
90002b0c:	4448      	add	r0, r9
90002b0e:	f029 f97b 	bl	9002be08 <strncmp>
    if (compare(offset, "hdrl", 4))
90002b12:	b970      	cbnz	r0, 90002b32 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3e2>
    offset += 4;
90002b14:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
90002b18:	f04f 0801 	mov.w	r8, #1
        src = (const char*)movieData + offset;
90002b1c:	4448      	add	r0, r9
90002b1e:	f04f 0a00 	mov.w	sl, #0
90002b22:	e679      	b.n	90002818 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90002b24:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
90002b28:	e69d      	b.n	90002866 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_EOF_REACHED;
90002b2a:	230d      	movs	r3, #13
90002b2c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90002b30:	e73e      	b.n	900029b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x260>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90002b32:	2306      	movs	r3, #6
    offset += 4;
90002b34:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90002b38:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90002b3c:	e7ee      	b.n	90002b1c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3cc>
90002b3e:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90002b40:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        videoInfo.ms_between_frames = getU32(offset)/1000;
90002b44:	58d1      	ldr	r1, [r2, r3]
90002b46:	19d3      	adds	r3, r2, r7
90002b48:	4a28      	ldr	r2, [pc, #160]	@ (90002bec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x49c>)
90002b4a:	fba2 1201 	umull	r1, r2, r2, r1
90002b4e:	0992      	lsrs	r2, r2, #6
90002b50:	606a      	str	r2, [r5, #4]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90002b52:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
        videoInfo.number_of_frames = getU32(offset + 16);
90002b54:	60aa      	str	r2, [r5, #8]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90002b56:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
        videoInfo.frame_width = getU32(offset + 32);
90002b58:	60ea      	str	r2, [r5, #12]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90002b5a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
        videoInfo.frame_height = getU32(offset + 36);
90002b5c:	612b      	str	r3, [r5, #16]
    if (reader != 0)
90002b5e:	e682      	b.n	90002866 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90002b60:	230b      	movs	r3, #11
90002b62:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90002b66:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
90002b6a:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90002b6c:	5903      	ldr	r3, [r0, r4]
90002b6e:	443b      	add	r3, r7
90002b70:	626b      	str	r3, [r5, #36]	@ 0x24
    listOffset += listSize;
90002b72:	5904      	ldr	r4, [r0, r4]
90002b74:	443c      	add	r4, r7
        src = (const char*)movieData + offset;
90002b76:	4420      	add	r0, r4
90002b78:	e720      	b.n	900029bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x26c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90002b7a:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90002b7c:	4b1c      	ldr	r3, [pc, #112]	@ (90002bf0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a0>)
90002b7e:	4a1d      	ldr	r2, [pc, #116]	@ (90002bf4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90002b80:	21a6      	movs	r1, #166	@ 0xa6
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90002b82:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
90002b86:	481c      	ldr	r0, [pc, #112]	@ (90002bf8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a8>)
90002b88:	f028 fe9a 	bl	9002b8c0 <__assert_func>
    assert(aviListSize);
90002b8c:	4b1b      	ldr	r3, [pc, #108]	@ (90002bfc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
90002b8e:	f240 1149 	movw	r1, #329	@ 0x149
90002b92:	4a1b      	ldr	r2, [pc, #108]	@ (90002c00 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b0>)
90002b94:	4818      	ldr	r0, [pc, #96]	@ (90002bf8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a8>)
90002b96:	f028 fe93 	bl	9002b8c0 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
90002b9a:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90002b9c:	4b19      	ldr	r3, [pc, #100]	@ (90002c04 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b4>)
90002b9e:	4a18      	ldr	r2, [pc, #96]	@ (90002c00 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b0>)
90002ba0:	f44f 719a 	mov.w	r1, #308	@ 0x134
        lastError = AVI_ERROR_NOT_RIFF;
90002ba4:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"RIFF header not found");
90002ba8:	4813      	ldr	r0, [pc, #76]	@ (90002bf8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a8>)
90002baa:	f028 fe89 	bl	9002b8c0 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90002bae:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
90002bb0:	4b15      	ldr	r3, [pc, #84]	@ (90002c08 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b8>)
90002bb2:	4a13      	ldr	r2, [pc, #76]	@ (90002c00 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b0>)
90002bb4:	f240 1143 	movw	r1, #323	@ 0x143
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90002bb8:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI LIST not found");
90002bbc:	480e      	ldr	r0, [pc, #56]	@ (90002bf8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a8>)
90002bbe:	f028 fe7f 	bl	9002b8c0 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90002bc2:	2004      	movs	r0, #4
        assert(!"AVI header not found");
90002bc4:	4b11      	ldr	r3, [pc, #68]	@ (90002c0c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4bc>)
90002bc6:	4a0e      	ldr	r2, [pc, #56]	@ (90002c00 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b0>)
90002bc8:	f44f 719e 	mov.w	r1, #316	@ 0x13c
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90002bcc:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI header not found");
90002bd0:	4809      	ldr	r0, [pc, #36]	@ (90002bf8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a8>)
90002bd2:	f028 fe75 	bl	9002b8c0 <__assert_func>
        src = (const char*)movieData + offset;
90002bd6:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
90002bd8:	4420      	add	r0, r4
90002bda:	e6ef      	b.n	900029bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x26c>
90002bdc:	9002cdf0 	.word	0x9002cdf0
90002be0:	9002cea8 	.word	0x9002cea8
90002be4:	9002cea0 	.word	0x9002cea0
90002be8:	9002ce74 	.word	0x9002ce74
90002bec:	10624dd3 	.word	0x10624dd3
90002bf0:	9002ccbc 	.word	0x9002ccbc
90002bf4:	9002ccd0 	.word	0x9002ccd0
90002bf8:	9002cc70 	.word	0x9002cc70
90002bfc:	9002ce7c 	.word	0x9002ce7c
90002c00:	9002ce14 	.word	0x9002ce14
90002c04:	9002cdf8 	.word	0x9002cdf8
90002c08:	9002ce5c 	.word	0x9002ce5c
90002c0c:	9002ce44 	.word	0x9002ce44

90002c10 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
90002c10:	b410      	push	{r4}
    reader = 0; //not using reader
90002c12:	2400      	movs	r4, #0
    movieLength = length;
90002c14:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; //not using reader
90002c18:	6304      	str	r4, [r0, #48]	@ 0x30
}
90002c1a:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
90002c1e:	f7ff bd97 	b.w	90002750 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
90002c22:	bf00      	nop

90002c24 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
90002c24:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
90002c26:	680b      	ldr	r3, [r1, #0]
{
90002c28:	4604      	mov	r4, r0
    movieData = 0;
90002c2a:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90002c2c:	4608      	mov	r0, r1
90002c2e:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
90002c30:	e9c4 210b 	strd	r2, r1, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
90002c34:	4798      	blx	r3
90002c36:	4603      	mov	r3, r0
    readVideoHeader();
90002c38:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
90002c3a:	62a3      	str	r3, [r4, #40]	@ 0x28
}
90002c3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
90002c40:	f7ff bd86 	b.w	90002750 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90002c44 <HAL_JPEG_InfoReadyCallback>:
{
90002c44:	b508      	push	{r3, lr}
  if(pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90002c46:	684b      	ldr	r3, [r1, #4]
{
90002c48:	4608      	mov	r0, r1
  if(pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90002c4a:	2b01      	cmp	r3, #1
90002c4c:	d01a      	beq.n	90002c84 <HAL_JPEG_InfoReadyCallback+0x40>
    if(pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90002c4e:	2b02      	cmp	r3, #2
90002c50:	d010      	beq.n	90002c74 <HAL_JPEG_InfoReadyCallback+0x30>
    if(pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90002c52:	b94b      	cbnz	r3, 90002c68 <HAL_JPEG_InfoReadyCallback+0x24>
      if((pInfo->ImageWidth % 8) != 0)
90002c54:	68cb      	ldr	r3, [r1, #12]
90002c56:	0759      	lsls	r1, r3, #29
90002c58:	d12f      	bne.n	90002cba <HAL_JPEG_InfoReadyCallback+0x76>
      if((pInfo->ImageHeight % 8) != 0)
90002c5a:	6883      	ldr	r3, [r0, #8]
90002c5c:	075a      	lsls	r2, r3, #29
90002c5e:	d003      	beq.n	90002c68 <HAL_JPEG_InfoReadyCallback+0x24>
        pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90002c60:	f023 0307 	bic.w	r3, r3, #7
90002c64:	3308      	adds	r3, #8
90002c66:	6083      	str	r3, [r0, #8]
    HAL_StatusTypeDef status = JPEG_GetDecodeColorConvertFunc(pInfo, &pConvert_Function, &MCU_TotalNb);
90002c68:	4a1a      	ldr	r2, [pc, #104]	@ (90002cd4 <HAL_JPEG_InfoReadyCallback+0x90>)
90002c6a:	491b      	ldr	r1, [pc, #108]	@ (90002cd8 <HAL_JPEG_InfoReadyCallback+0x94>)
90002c6c:	f011 fae4 	bl	90014238 <JPEG_GetDecodeColorConvertFunc>
    if(status != HAL_OK)
90002c70:	bb40      	cbnz	r0, 90002cc4 <HAL_JPEG_InfoReadyCallback+0x80>
}
90002c72:	bd08      	pop	{r3, pc}
      if((pInfo->ImageWidth % 16) != 0)
90002c74:	68cb      	ldr	r3, [r1, #12]
90002c76:	071a      	lsls	r2, r3, #28
90002c78:	d0ef      	beq.n	90002c5a <HAL_JPEG_InfoReadyCallback+0x16>
        pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90002c7a:	f023 030f 	bic.w	r3, r3, #15
90002c7e:	3310      	adds	r3, #16
90002c80:	60cb      	str	r3, [r1, #12]
90002c82:	e7ea      	b.n	90002c5a <HAL_JPEG_InfoReadyCallback+0x16>
    if((pInfo->ImageWidth % 16) != 0)
90002c84:	68cb      	ldr	r3, [r1, #12]
90002c86:	071a      	lsls	r2, r3, #28
90002c88:	d003      	beq.n	90002c92 <HAL_JPEG_InfoReadyCallback+0x4e>
      pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90002c8a:	f023 030f 	bic.w	r3, r3, #15
90002c8e:	3310      	adds	r3, #16
90002c90:	60cb      	str	r3, [r1, #12]
    if((pInfo->ImageHeight % 16) != 0)
90002c92:	6883      	ldr	r3, [r0, #8]
90002c94:	0719      	lsls	r1, r3, #28
90002c96:	d003      	beq.n	90002ca0 <HAL_JPEG_InfoReadyCallback+0x5c>
      pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90002c98:	f023 030f 	bic.w	r3, r3, #15
90002c9c:	3310      	adds	r3, #16
90002c9e:	6083      	str	r3, [r0, #8]
    HAL_StatusTypeDef status = TGFX_JPEG_GetDecodeColorConvertFunc(pInfo, &pConvert_Function, &MCU_TotalNb);
90002ca0:	4a0c      	ldr	r2, [pc, #48]	@ (90002cd4 <HAL_JPEG_InfoReadyCallback+0x90>)
90002ca2:	490d      	ldr	r1, [pc, #52]	@ (90002cd8 <HAL_JPEG_InfoReadyCallback+0x94>)
90002ca4:	f001 fef2 	bl	90004a8c <TGFX_JPEG_GetDecodeColorConvertFunc>
    if(status != HAL_OK)
90002ca8:	2800      	cmp	r0, #0
90002caa:	d0e2      	beq.n	90002c72 <HAL_JPEG_InfoReadyCallback+0x2e>
      assert(status == HAL_OK);
90002cac:	4b0b      	ldr	r3, [pc, #44]	@ (90002cdc <HAL_JPEG_InfoReadyCallback+0x98>)
90002cae:	f240 212e 	movw	r1, #558	@ 0x22e
90002cb2:	4a0b      	ldr	r2, [pc, #44]	@ (90002ce0 <HAL_JPEG_InfoReadyCallback+0x9c>)
90002cb4:	480b      	ldr	r0, [pc, #44]	@ (90002ce4 <HAL_JPEG_InfoReadyCallback+0xa0>)
90002cb6:	f028 fe03 	bl	9002b8c0 <__assert_func>
        pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90002cba:	f023 0307 	bic.w	r3, r3, #7
90002cbe:	3308      	adds	r3, #8
90002cc0:	60c3      	str	r3, [r0, #12]
90002cc2:	e7ca      	b.n	90002c5a <HAL_JPEG_InfoReadyCallback+0x16>
      assert(status == HAL_OK);
90002cc4:	4b05      	ldr	r3, [pc, #20]	@ (90002cdc <HAL_JPEG_InfoReadyCallback+0x98>)
90002cc6:	f44f 7112 	mov.w	r1, #584	@ 0x248
90002cca:	4a05      	ldr	r2, [pc, #20]	@ (90002ce0 <HAL_JPEG_InfoReadyCallback+0x9c>)
90002ccc:	4805      	ldr	r0, [pc, #20]	@ (90002ce4 <HAL_JPEG_InfoReadyCallback+0xa0>)
90002cce:	f028 fdf7 	bl	9002b8c0 <__assert_func>
90002cd2:	bf00      	nop
90002cd4:	2400601c 	.word	0x2400601c
90002cd8:	24006018 	.word	0x24006018
90002cdc:	9002ceb0 	.word	0x9002ceb0
90002ce0:	9002cec4 	.word	0x9002cec4
90002ce4:	9002cc70 	.word	0x9002cc70

90002ce8 <HAL_JPEG_GetDataCallback>:
{
90002ce8:	b410      	push	{r4}
  JPEG_InputImageIndex += NbDecodedData;
90002cea:	4c0c      	ldr	r4, [pc, #48]	@ (90002d1c <HAL_JPEG_GetDataCallback+0x34>)
  if(JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90002cec:	4a0c      	ldr	r2, [pc, #48]	@ (90002d20 <HAL_JPEG_GetDataCallback+0x38>)
  JPEG_InputImageIndex += NbDecodedData;
90002cee:	6823      	ldr	r3, [r4, #0]
  if(JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90002cf0:	6812      	ldr	r2, [r2, #0]
  JPEG_InputImageIndex += NbDecodedData;
90002cf2:	440b      	add	r3, r1
  if(JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90002cf4:	4293      	cmp	r3, r2
  JPEG_InputImageIndex += NbDecodedData;
90002cf6:	6023      	str	r3, [r4, #0]
  if(JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90002cf8:	d302      	bcc.n	90002d00 <HAL_JPEG_GetDataCallback+0x18>
}
90002cfa:	f85d 4b04 	ldr.w	r4, [sp], #4
90002cfe:	4770      	bx	lr
    uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90002d00:	1ad2      	subs	r2, r2, r3
    JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90002d02:	4b08      	ldr	r3, [pc, #32]	@ (90002d24 <HAL_JPEG_GetDataCallback+0x3c>)
90002d04:	681c      	ldr	r4, [r3, #0]
    HAL_JPEG_ConfigInputBuffer(hjpeg,(uint8_t *)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90002d06:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
    JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90002d0a:	4421      	add	r1, r4
    HAL_JPEG_ConfigInputBuffer(hjpeg,(uint8_t *)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90002d0c:	bf28      	it	cs
90002d0e:	f44f 3280 	movcs.w	r2, #65536	@ 0x10000
}
90002d12:	f85d 4b04 	ldr.w	r4, [sp], #4
    JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90002d16:	6019      	str	r1, [r3, #0]
    HAL_JPEG_ConfigInputBuffer(hjpeg,(uint8_t *)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90002d18:	f00a b988 	b.w	9000d02c <HAL_JPEG_ConfigInputBuffer>
90002d1c:	24006044 	.word	0x24006044
90002d20:	24006040 	.word	0x24006040
90002d24:	2400603c 	.word	0x2400603c

90002d28 <HAL_JPEG_DataReadyCallback>:
{
90002d28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90002d2a:	4e1b      	ldr	r6, [pc, #108]	@ (90002d98 <HAL_JPEG_DataReadyCallback+0x70>)
{
90002d2c:	4605      	mov	r5, r0
    Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90002d2e:	6833      	ldr	r3, [r6, #0]
    JPEG_OUT_Write_BufferIndex++;
90002d30:	1c59      	adds	r1, r3, #1
    if(JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90002d32:	2901      	cmp	r1, #1
90002d34:	d923      	bls.n	90002d7e <HAL_JPEG_DataReadyCallback+0x56>
90002d36:	2000      	movs	r0, #0
90002d38:	4601      	mov	r1, r0
    Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90002d3a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
90002d3e:	4c17      	ldr	r4, [pc, #92]	@ (90002d9c <HAL_JPEG_DataReadyCallback+0x74>)
90002d40:	2701      	movs	r7, #1
    JPEG_OUT_Write_BufferIndex++;
90002d42:	6030      	str	r0, [r6, #0]
    Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90002d44:	009b      	lsls	r3, r3, #2
90002d46:	54e7      	strb	r7, [r4, r3]
    Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002d48:	4423      	add	r3, r4
90002d4a:	609a      	str	r2, [r3, #8]
    if(Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
90002d4c:	eb01 0341 	add.w	r3, r1, r1, lsl #1
90002d50:	f814 2023 	ldrb.w	r2, [r4, r3, lsl #2]
90002d54:	fa01 f307 	lsl.w	r3, r1, r7
90002d58:	b99a      	cbnz	r2, 90002d82 <HAL_JPEG_DataReadyCallback+0x5a>
    HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002d5a:	4a11      	ldr	r2, [pc, #68]	@ (90002da0 <HAL_JPEG_DataReadyCallback+0x78>)
90002d5c:	440b      	add	r3, r1
90002d5e:	4628      	mov	r0, r5
90002d60:	68d2      	ldr	r2, [r2, #12]
90002d62:	eb04 0483 	add.w	r4, r4, r3, lsl #2
90002d66:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90002d6a:	6861      	ldr	r1, [r4, #4]
90002d6c:	01d2      	lsls	r2, r2, #7
90002d6e:	f00a f961 	bl	9000d034 <HAL_JPEG_ConfigOutputBuffer>
    SEM_POST(semDecodingDone);
90002d72:	4b0c      	ldr	r3, [pc, #48]	@ (90002da4 <HAL_JPEG_DataReadyCallback+0x7c>)
90002d74:	6818      	ldr	r0, [r3, #0]
}
90002d76:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    SEM_POST(semDecodingDone);
90002d7a:	f00e bd59 	b.w	90011830 <osSemaphoreRelease>
    if(JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90002d7e:	4608      	mov	r0, r1
90002d80:	e7db      	b.n	90002d3a <HAL_JPEG_DataReadyCallback+0x12>
      HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002d82:	2102      	movs	r1, #2
90002d84:	4628      	mov	r0, r5
90002d86:	f00a f919 	bl	9000cfbc <HAL_JPEG_Pause>
      Output_Is_Paused = 1;
90002d8a:	4b07      	ldr	r3, [pc, #28]	@ (90002da8 <HAL_JPEG_DataReadyCallback+0x80>)
    HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002d8c:	6831      	ldr	r1, [r6, #0]
      Output_Is_Paused = 1;
90002d8e:	601f      	str	r7, [r3, #0]
90002d90:	fa01 f307 	lsl.w	r3, r1, r7
90002d94:	e7e1      	b.n	90002d5a <HAL_JPEG_DataReadyCallback+0x32>
90002d96:	bf00      	nop
90002d98:	24006030 	.word	0x24006030
90002d9c:	24000004 	.word	0x24000004
90002da0:	24005fd8 	.word	0x24005fd8
90002da4:	24006010 	.word	0x24006010
90002da8:	2400602c 	.word	0x2400602c

90002dac <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90002dac:	b672      	cpsid	i
  while (1)
90002dae:	e7fe      	b.n	90002dae <HAL_JPEG_ErrorCallback+0x2>

90002db0 <HAL_JPEG_DecodeCpltCallback>:
  Jpeg_HWDecodingEnd = 1;
90002db0:	4b01      	ldr	r3, [pc, #4]	@ (90002db8 <HAL_JPEG_DecodeCpltCallback+0x8>)
90002db2:	2201      	movs	r2, #1
90002db4:	601a      	str	r2, [r3, #0]
}
90002db6:	4770      	bx	lr
90002db8:	24006038 	.word	0x24006038

90002dbc <DMA2D_CopyBuffer>:
  * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
  * @param job: External job reference
  * @retval None
  */
void DMA2D_CopyBuffer(External_DMA2D_JobTypeDef& job)
{
90002dbc:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t xRef, yRef, refline;

  xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90002dbe:	491b      	ldr	r1, [pc, #108]	@ (90002e2c <DMA2D_CopyBuffer+0x70>)
  yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);

  refline = (JPEG_ConvertorParams.ScaledWidth) * xRef + (JPEG_ConvertorParams.bytes_pr_pixel * yRef);

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002dc0:	2302      	movs	r3, #2
  xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90002dc2:	6806      	ldr	r6, [r0, #0]
  WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002dc4:	4d1a      	ldr	r5, [pc, #104]	@ (90002e30 <DMA2D_CopyBuffer+0x74>)
  xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90002dc6:	680a      	ldr	r2, [r1, #0]
  WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002dc8:	636b      	str	r3, [r5, #52]	@ 0x34
  xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90002dca:	0133      	lsls	r3, r6, #4

  /* Configure DMA2D data size */
  if(job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  // Last line of frame
90002dcc:	4c19      	ldr	r4, [pc, #100]	@ (90002e34 <DMA2D_CopyBuffer+0x78>)
  refline = (JPEG_ConvertorParams.ScaledWidth) * xRef + (JPEG_ConvertorParams.bytes_pr_pixel * yRef);
90002dce:	690f      	ldr	r7, [r1, #16]
  if(job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  // Last line of frame
90002dd0:	6824      	ldr	r4, [r4, #0]
  xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90002dd2:	fbb3 fcf2 	udiv	ip, r3, r2
  yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);
90002dd6:	fb02 321c 	mls	r2, r2, ip, r3
  refline = (JPEG_ConvertorParams.ScaledWidth) * xRef + (JPEG_ConvertorParams.bytes_pr_pixel * yRef);
90002dda:	684b      	ldr	r3, [r1, #4]
90002ddc:	fb03 fc0c 	mul.w	ip, r3, ip
  if(job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  // Last line of frame
90002de0:	68cb      	ldr	r3, [r1, #12]
  refline = (JPEG_ConvertorParams.ScaledWidth) * xRef + (JPEG_ConvertorParams.bytes_pr_pixel * yRef);
90002de2:	fb07 f202 	mul.w	r2, r7, r2
  if(job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  // Last line of frame
90002de6:	1ae4      	subs	r4, r4, r3
  refline = (JPEG_ConvertorParams.ScaledWidth) * xRef + (JPEG_ConvertorParams.bytes_pr_pixel * yRef);
90002de8:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
  {
      WRITE_REG(DMA2D->NLR, (JPEG_ConvertorParams.LastLineHeight | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
90002dec:	ea4f 5e03 	mov.w	lr, r3, lsl #20
  if(job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  // Last line of frame
90002df0:	42a6      	cmp	r6, r4
90002df2:	d317      	bcc.n	90002e24 <DMA2D_CopyBuffer+0x68>
      WRITE_REG(DMA2D->NLR, (JPEG_ConvertorParams.LastLineHeight | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
90002df4:	6889      	ldr	r1, [r1, #8]
90002df6:	ea4e 0101 	orr.w	r1, lr, r1
90002dfa:	6469      	str	r1, [r5, #68]	@ 0x44
  {
      WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
  }

  /* Configure DMA2D destination address */
  WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90002dfc:	490e      	ldr	r1, [pc, #56]	@ (90002e38 <DMA2D_CopyBuffer+0x7c>)

  /* DMA2D OOR register configuration ------------------------------------------*/
  WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90002dfe:	f1c3 031e 	rsb	r3, r3, #30

  /* DMA2D FGPFCCR register configuration -------------------------------------*/
  WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

  /* Configure DMA2D source address */
  WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.jpeg_buffer->DataBuffer));
90002e02:	6840      	ldr	r0, [r0, #4]
  WRITE_REG(DMA2D->FGOR, 0);
90002e04:	2400      	movs	r4, #0
  WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90002e06:	6809      	ldr	r1, [r1, #0]
  WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90002e08:	011b      	lsls	r3, r3, #4
  WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.jpeg_buffer->DataBuffer));
90002e0a:	6840      	ldr	r0, [r0, #4]
  WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90002e0c:	4411      	add	r1, r2
90002e0e:	4a08      	ldr	r2, [pc, #32]	@ (90002e30 <DMA2D_CopyBuffer+0x74>)
90002e10:	4461      	add	r1, ip
90002e12:	63d1      	str	r1, [r2, #60]	@ 0x3c
  WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90002e14:	6413      	str	r3, [r2, #64]	@ 0x40
  WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002e16:	4909      	ldr	r1, [pc, #36]	@ (90002e3c <DMA2D_CopyBuffer+0x80>)

  /* Configure DMA2D contol register */
  WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90002e18:	4b09      	ldr	r3, [pc, #36]	@ (90002e40 <DMA2D_CopyBuffer+0x84>)
  WRITE_REG(DMA2D->FGOR, 0);
90002e1a:	6114      	str	r4, [r2, #16]
  WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002e1c:	61d1      	str	r1, [r2, #28]
  WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.jpeg_buffer->DataBuffer));
90002e1e:	60d0      	str	r0, [r2, #12]
  WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90002e20:	6013      	str	r3, [r2, #0]
}
90002e22:	bdf0      	pop	{r4, r5, r6, r7, pc}
      WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
90002e24:	f04e 0110 	orr.w	r1, lr, #16
90002e28:	6469      	str	r1, [r5, #68]	@ 0x44
90002e2a:	e7e7      	b.n	90002dfc <DMA2D_CopyBuffer+0x40>
90002e2c:	24005fd8 	.word	0x24005fd8
90002e30:	52001000 	.word	0x52001000
90002e34:	2400601c 	.word	0x2400601c
90002e38:	24006048 	.word	0x24006048
90002e3c:	ff09000b 	.word	0xff09000b
90002e40:	00010201 	.word	0x00010201

90002e44 <DMA2D_ExternalJobCompleted>:
  * @retval None
  */
void DMA2D_ExternalJobCompleted(External_DMA2D_JobTypeDef& job)
{
  // Mark ycbcr empty
  job.jpeg_buffer->State = JPEG_BUFFER_EMPTY;
90002e44:	2200      	movs	r2, #0
90002e46:	6843      	ldr	r3, [r0, #4]
      return count_ == 0;
90002e48:	490b      	ldr	r1, [pc, #44]	@ (90002e78 <DMA2D_ExternalJobCompleted+0x34>)
90002e4a:	701a      	strb	r2, [r3, #0]
  job.jpeg_buffer->DataBufferSize = 0;

  // Mark dma paused if queue is empty
  if(external_queue.is_empty())
90002e4c:	68c9      	ldr	r1, [r1, #12]
  job.jpeg_buffer->DataBufferSize = 0;
90002e4e:	609a      	str	r2, [r3, #8]
  if(external_queue.is_empty())
90002e50:	b911      	cbnz	r1, 90002e58 <DMA2D_ExternalJobCompleted+0x14>
  {
      DMA2D_output_Is_Paused = 1;
90002e52:	4b0a      	ldr	r3, [pc, #40]	@ (90002e7c <DMA2D_ExternalJobCompleted+0x38>)
90002e54:	2201      	movs	r2, #1
90002e56:	601a      	str	r2, [r3, #0]
  }

  // Check if last line
  if(job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))
90002e58:	4b09      	ldr	r3, [pc, #36]	@ (90002e80 <DMA2D_ExternalJobCompleted+0x3c>)
90002e5a:	490a      	ldr	r1, [pc, #40]	@ (90002e84 <DMA2D_ExternalJobCompleted+0x40>)
90002e5c:	681b      	ldr	r3, [r3, #0]
90002e5e:	68c9      	ldr	r1, [r1, #12]
90002e60:	6802      	ldr	r2, [r0, #0]
90002e62:	1a5b      	subs	r3, r3, r1
90002e64:	429a      	cmp	r2, r3
90002e66:	d302      	bcc.n	90002e6e <DMA2D_ExternalJobCompleted+0x2a>
  {
      DMA2D_CopyBufferEnd = 1;
90002e68:	4b07      	ldr	r3, [pc, #28]	@ (90002e88 <DMA2D_ExternalJobCompleted+0x44>)
90002e6a:	2201      	movs	r2, #1
90002e6c:	601a      	str	r2, [r3, #0]
  }

  // Signal Hardware Decoding to wake up
  SEM_POST(semDecodingDone);
90002e6e:	4b07      	ldr	r3, [pc, #28]	@ (90002e8c <DMA2D_ExternalJobCompleted+0x48>)
90002e70:	6818      	ldr	r0, [r3, #0]
90002e72:	f00e bcdd 	b.w	90011830 <osSemaphoreRelease>
90002e76:	bf00      	nop
90002e78:	24005ff0 	.word	0x24005ff0
90002e7c:	24006024 	.word	0x24006024
90002e80:	2400601c 	.word	0x2400601c
90002e84:	24005fd8 	.word	0x24005fd8
90002e88:	24006028 	.word	0x24006028
90002e8c:	24006010 	.word	0x24006010

90002e90 <_GLOBAL__sub_I_FrameBufferAddress>:
      : max_size_(Size), head_(0), tail_(0), count_(0)
90002e90:	ed9f 7b05 	vldr	d7, [pc, #20]	@ 90002ea8 <_GLOBAL__sub_I_FrameBufferAddress+0x18>
90002e94:	4b06      	ldr	r3, [pc, #24]	@ (90002eb0 <_GLOBAL__sub_I_FrameBufferAddress+0x20>)
90002e96:	2000      	movs	r0, #0
90002e98:	2100      	movs	r1, #0
90002e9a:	ed83 7b00 	vstr	d7, [r3]
90002e9e:	e9c3 0102 	strd	r0, r1, [r3, #8]
}
90002ea2:	4770      	bx	lr
90002ea4:	f3af 8000 	nop.w
90002ea8:	00000002 	.word	0x00000002
90002eac:	00000000 	.word	0x00000000
90002eb0:	24005ff0 	.word	0x24005ff0

90002eb4 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90002eb4:	2101      	movs	r1, #1
90002eb6:	2200      	movs	r2, #0
{
90002eb8:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90002eba:	4608      	mov	r0, r1
90002ebc:	f00e fc3a 	bl	90011734 <osSemaphoreNew>
90002ec0:	4b0b      	ldr	r3, [pc, #44]	@ (90002ef0 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90002ec2:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90002ec4:	b140      	cbz	r0, 90002ed8 <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
90002ec6:	2200      	movs	r2, #0
90002ec8:	2104      	movs	r1, #4
90002eca:	2001      	movs	r0, #1
90002ecc:	f00e fcda 	bl	90011884 <osMessageQueueNew>
90002ed0:	4b08      	ldr	r3, [pc, #32]	@ (90002ef4 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90002ed2:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002ed4:	b130      	cbz	r0, 90002ee4 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
90002ed6:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90002ed8:	4b07      	ldr	r3, [pc, #28]	@ (90002ef8 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
90002eda:	2128      	movs	r1, #40	@ 0x28
90002edc:	4a07      	ldr	r2, [pc, #28]	@ (90002efc <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90002ede:	4808      	ldr	r0, [pc, #32]	@ (90002f00 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002ee0:	f028 fcee 	bl	9002b8c0 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002ee4:	4b07      	ldr	r3, [pc, #28]	@ (90002f04 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
90002ee6:	212c      	movs	r1, #44	@ 0x2c
90002ee8:	4a04      	ldr	r2, [pc, #16]	@ (90002efc <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90002eea:	4805      	ldr	r0, [pc, #20]	@ (90002f00 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002eec:	f028 fce8 	bl	9002b8c0 <__assert_func>
90002ef0:	24006050 	.word	0x24006050
90002ef4:	2400604c 	.word	0x2400604c
90002ef8:	9002cf50 	.word	0x9002cf50
90002efc:	9002cf9c 	.word	0x9002cf9c
90002f00:	9002cfcc 	.word	0x9002cfcc
90002f04:	9002d010 	.word	0x9002d010

90002f08 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
90002f08:	4b02      	ldr	r3, [pc, #8]	@ (90002f14 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
90002f0a:	f04f 31ff 	mov.w	r1, #4294967295
90002f0e:	6818      	ldr	r0, [r3, #0]
90002f10:	f00e bc5c 	b.w	900117cc <osSemaphoreAcquire>
90002f14:	24006050 	.word	0x24006050

90002f18 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
90002f18:	4b01      	ldr	r3, [pc, #4]	@ (90002f20 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
90002f1a:	6818      	ldr	r0, [r3, #0]
90002f1c:	f00e bc88 	b.w	90011830 <osSemaphoreRelease>
90002f20:	24006050 	.word	0x24006050

90002f24 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90002f24:	4b02      	ldr	r3, [pc, #8]	@ (90002f30 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
90002f26:	2100      	movs	r1, #0
90002f28:	6818      	ldr	r0, [r3, #0]
90002f2a:	f00e bc4f 	b.w	900117cc <osSemaphoreAcquire>
90002f2e:	bf00      	nop
90002f30:	24006050 	.word	0x24006050

90002f34 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
90002f34:	4b01      	ldr	r3, [pc, #4]	@ (90002f3c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
90002f36:	6818      	ldr	r0, [r3, #0]
90002f38:	f00e bc7a 	b.w	90011830 <osSemaphoreRelease>
90002f3c:	24006050 	.word	0x24006050

90002f40 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90002f40:	4803      	ldr	r0, [pc, #12]	@ (90002f50 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90002f42:	2300      	movs	r3, #0
90002f44:	4903      	ldr	r1, [pc, #12]	@ (90002f54 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
90002f46:	461a      	mov	r2, r3
90002f48:	6800      	ldr	r0, [r0, #0]
90002f4a:	f00e bcd7 	b.w	900118fc <osMessageQueuePut>
90002f4e:	bf00      	nop
90002f50:	2400604c 	.word	0x2400604c
90002f54:	2400001c 	.word	0x2400001c

90002f58 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
90002f58:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90002f5a:	2300      	movs	r3, #0
{
90002f5c:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90002f5e:	4c07      	ldr	r4, [pc, #28]	@ (90002f7c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
90002f60:	461a      	mov	r2, r3
90002f62:	a901      	add	r1, sp, #4
90002f64:	6820      	ldr	r0, [r4, #0]
90002f66:	f00e fd05 	bl	90011974 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
90002f6a:	f04f 33ff 	mov.w	r3, #4294967295
90002f6e:	2200      	movs	r2, #0
90002f70:	a901      	add	r1, sp, #4
90002f72:	6820      	ldr	r0, [r4, #0]
90002f74:	f00e fcfe 	bl	90011974 <osMessageQueueGet>
}
90002f78:	b002      	add	sp, #8
90002f7a:	bd10      	pop	{r4, pc}
90002f7c:	2400604c 	.word	0x2400604c

90002f80 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90002f80:	6803      	ldr	r3, [r0, #0]
90002f82:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90002f84:	4718      	bx	r3
90002f86:	bf00      	nop

90002f88 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
90002f88:	2001      	movs	r0, #1
90002f8a:	4770      	bx	lr

90002f8c <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
{
    mutexIsRunning = MUTEX_CREATE();
}

STM32DMA::~STM32DMA()
90002f8c:	4905      	ldr	r1, [pc, #20]	@ (90002fa4 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002f8e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90002f92:	4b05      	ldr	r3, [pc, #20]	@ (90002fa8 <_ZN8STM32DMAD1Ev+0x1c>)
90002f94:	6001      	str	r1, [r0, #0]
90002f96:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002f9a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002f9e:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
90002fa2:	4770      	bx	lr
90002fa4:	9002d1ac 	.word	0x9002d1ac
90002fa8:	e000e100 	.word	0xe000e100

90002fac <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fac:	4b0f      	ldr	r3, [pc, #60]	@ (90002fec <_ZN8STM32DMA10initializeEv+0x40>)
{
90002fae:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90002fb0:	490f      	ldr	r1, [pc, #60]	@ (90002ff0 <_ZN8STM32DMA10initializeEv+0x44>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fb2:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90002fb6:	480f      	ldr	r0, [pc, #60]	@ (90002ff4 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fb8:	f042 0210 	orr.w	r2, r2, #16
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90002fbc:	6208      	str	r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fbe:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90002fc2:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90002fc6:	f002 0210 	and.w	r2, r2, #16
90002fca:	9201      	str	r2, [sp, #4]
90002fcc:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
90002fce:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
90002fd0:	f042 0210 	orr.w	r2, r2, #16
90002fd4:	67da      	str	r2, [r3, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90002fd6:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
90002fd8:	f022 0210 	bic.w	r2, r2, #16
90002fdc:	67da      	str	r2, [r3, #124]	@ 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002fde:	4b06      	ldr	r3, [pc, #24]	@ (90002ff8 <_ZN8STM32DMA10initializeEv+0x4c>)
90002fe0:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90002fe4:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90002fe6:	b002      	add	sp, #8
90002fe8:	4770      	bx	lr
90002fea:	bf00      	nop
90002fec:	58024400 	.word	0x58024400
90002ff0:	24005ee4 	.word	0x24005ee4
90002ff4:	90003375 	.word	0x90003375
90002ff8:	e000e100 	.word	0xe000e100

90002ffc <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90002ffc:	f240 30ef 	movw	r0, #1007	@ 0x3ef
90003000:	4770      	bx	lr
90003002:	bf00      	nop

90003004 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90003004:	4909      	ldr	r1, [pc, #36]	@ (9000302c <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003006:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000300a:	4b09      	ldr	r3, [pc, #36]	@ (90003030 <_ZN8STM32DMAD0Ev+0x2c>)
9000300c:	b510      	push	{r4, lr}
9000300e:	6001      	str	r1, [r0, #0]
90003010:	4604      	mov	r4, r0
90003012:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90003016:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000301a:	f3bf 8f6f 	isb	sy
}
9000301e:	f640 51a8 	movw	r1, #3496	@ 0xda8
90003022:	f028 fa70 	bl	9002b506 <_ZdlPvj>
90003026:	4620      	mov	r0, r4
90003028:	bd10      	pop	{r4, pc}
9000302a:	bf00      	nop
9000302c:	9002d1ac 	.word	0x9002d1ac
90003030:	e000e100 	.word	0xe000e100

90003034 <_ZN8STM32DMA5startEv>:
                externalJobExecute();
            }
        }
    }

    virtual void start()
90003034:	b510      	push	{r4, lr}
90003036:	4604      	mov	r4, r0
    {
        MUTEX_LOCK(mutexIsRunning);
90003038:	f04f 31ff 	mov.w	r1, #4294967295
9000303c:	f8d0 0da4 	ldr.w	r0, [r0, #3492]	@ 0xda4
90003040:	f00e fb32 	bl	900116a8 <osMutexAcquire>
        if (!queue.isEmpty() && isAllowed && !isRunning)
90003044:	6860      	ldr	r0, [r4, #4]
90003046:	6803      	ldr	r3, [r0, #0]
90003048:	681b      	ldr	r3, [r3, #0]
9000304a:	4798      	blx	r3
9000304c:	b978      	cbnz	r0, 9000306e <_ZN8STM32DMA5startEv+0x3a>
9000304e:	7a63      	ldrb	r3, [r4, #9]
90003050:	b16b      	cbz	r3, 9000306e <_ZN8STM32DMA5startEv+0x3a>
90003052:	7a23      	ldrb	r3, [r4, #8]
90003054:	b92b      	cbnz	r3, 90003062 <_ZN8STM32DMA5startEv+0x2e>
        {
            started_by_external_job = false;
            execute();
90003056:	6822      	ldr	r2, [r4, #0]
90003058:	4620      	mov	r0, r4
            started_by_external_job = false;
9000305a:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            execute();
9000305e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
90003060:	4798      	blx	r3
        else if(!external_queue.is_empty() && !isRunning)
        {
            started_by_external_job = true;
            externalJobExecute();
        }
        MUTEX_UNLOCK(mutexIsRunning);
90003062:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	@ 0xda4
    }
90003066:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
9000306a:	f00e bb41 	b.w	900116f0 <osMutexRelease>
      return count_ == 0;
9000306e:	4b0b      	ldr	r3, [pc, #44]	@ (9000309c <_ZN8STM32DMA5startEv+0x68>)
        else if(!external_queue.is_empty() && !isRunning)
90003070:	68da      	ldr	r2, [r3, #12]
90003072:	2a00      	cmp	r2, #0
90003074:	d0f5      	beq.n	90003062 <_ZN8STM32DMA5startEv+0x2e>
90003076:	7a22      	ldrb	r2, [r4, #8]
90003078:	2a00      	cmp	r2, #0
9000307a:	d1f2      	bne.n	90003062 <_ZN8STM32DMA5startEv+0x2e>
      return buffer_[head_];
9000307c:	6858      	ldr	r0, [r3, #4]
            started_by_external_job = true;
9000307e:	2201      	movs	r2, #1
      return buffer_[head_];
90003080:	3002      	adds	r0, #2
            started_by_external_job = true;
90003082:	f884 2da0 	strb.w	r2, [r4, #3488]	@ 0xda0
     *
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
90003086:	7222      	strb	r2, [r4, #8]
        External_DMA2D_JobTypeDef& job = external_queue.front();
        DMA2D_CopyBuffer(job);
90003088:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
9000308c:	f7ff fe96 	bl	90002dbc <DMA2D_CopyBuffer>
        MUTEX_UNLOCK(mutexIsRunning);
90003090:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	@ 0xda4
    }
90003094:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90003098:	f00e bb2a 	b.w	900116f0 <osMutexRelease>
9000309c:	24005ff0 	.word	0x24005ff0

900030a0 <_ZN8STM32DMA18signalDMAInterruptEv>:
    virtual void signalDMAInterrupt()
900030a0:	b538      	push	{r3, r4, r5, lr}
        if(started_by_external_job)
900030a2:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
900030a6:	4604      	mov	r4, r0
        if(started_by_external_job)
900030a8:	b943      	cbnz	r3, 900030bc <_ZN8STM32DMA18signalDMAInterruptEv+0x1c>
            executeCompleted();
900030aa:	6803      	ldr	r3, [r0, #0]
900030ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900030ae:	4798      	blx	r3
      return count_ == 0;
900030b0:	4b15      	ldr	r3, [pc, #84]	@ (90003108 <_ZN8STM32DMA18signalDMAInterruptEv+0x68>)
            if(!external_queue.is_empty() && !isRunning)
900030b2:	68da      	ldr	r2, [r3, #12]
900030b4:	b10a      	cbz	r2, 900030ba <_ZN8STM32DMA18signalDMAInterruptEv+0x1a>
900030b6:	7a22      	ldrb	r2, [r4, #8]
900030b8:	b1d2      	cbz	r2, 900030f0 <_ZN8STM32DMA18signalDMAInterruptEv+0x50>
    }
900030ba:	bd38      	pop	{r3, r4, r5, pc}
      return count_ == 0;
900030bc:	4b12      	ldr	r3, [pc, #72]	@ (90003108 <_ZN8STM32DMA18signalDMAInterruptEv+0x68>)
900030be:	68da      	ldr	r2, [r3, #12]
        if(!external_queue.is_empty() && isRunning)
900030c0:	2a00      	cmp	r2, #0
900030c2:	d0fa      	beq.n	900030ba <_ZN8STM32DMA18signalDMAInterruptEv+0x1a>
900030c4:	7a01      	ldrb	r1, [r0, #8]
900030c6:	2900      	cmp	r1, #0
900030c8:	d0f7      	beq.n	900030ba <_ZN8STM32DMA18signalDMAInterruptEv+0x1a>
            isRunning = false;
900030ca:	2100      	movs	r1, #0
      count_--;
900030cc:	3a01      	subs	r2, #1
      head_ = (head_ + 1) % max_size_;
900030ce:	e9d3 5000 	ldrd	r5, r0, [r3]
            isRunning = false;
900030d2:	7221      	strb	r1, [r4, #8]
      head_ = (head_ + 1) % max_size_;
900030d4:	1c41      	adds	r1, r0, #1
      count_--;
900030d6:	60da      	str	r2, [r3, #12]
      return buffer_[head_];
900030d8:	3002      	adds	r0, #2
      head_ = (head_ + 1) % max_size_;
900030da:	fbb1 f2f5 	udiv	r2, r1, r5
900030de:	fb05 1112 	mls	r1, r5, r2, r1
            DMA2D_ExternalJobCompleted(completed_job);
900030e2:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
      head_ = (head_ + 1) % max_size_;
900030e6:	6059      	str	r1, [r3, #4]
    }
900030e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            DMA2D_ExternalJobCompleted(completed_job);
900030ec:	f7ff beaa 	b.w	90002e44 <DMA2D_ExternalJobCompleted>
      return buffer_[head_];
900030f0:	6858      	ldr	r0, [r3, #4]
                started_by_external_job = true;
900030f2:	2201      	movs	r2, #1
      return buffer_[head_];
900030f4:	3002      	adds	r0, #2
                started_by_external_job = true;
900030f6:	f884 2da0 	strb.w	r2, [r4, #3488]	@ 0xda0
        isRunning = true;
900030fa:	7222      	strb	r2, [r4, #8]
        DMA2D_CopyBuffer(job);
900030fc:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
    }
90003100:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        DMA2D_CopyBuffer(job);
90003104:	f7ff be5a 	b.w	90002dbc <DMA2D_CopyBuffer>
90003108:	24005ff0 	.word	0x24005ff0

9000310c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
9000310c:	b570      	push	{r4, r5, r6, lr}
    switch (format)
9000310e:	7f8b      	ldrb	r3, [r1, #30]
90003110:	2b0a      	cmp	r3, #10
90003112:	d83d      	bhi.n	90003190 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>
90003114:	e8df f003 	tbb	[pc, r3]
90003118:	3c2a063a 	.word	0x3c2a063a
9000311c:	063c3c3c 	.word	0x063c3c3c
90003120:	0606      	.short	0x0606
90003122:	06          	.byte	0x06
90003123:	00          	.byte	0x00
90003124:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90003126:	f8b1 c014 	ldrh.w	ip, [r1, #20]
9000312a:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000312c:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000312e:	4b1b      	ldr	r3, [pc, #108]	@ (9000319c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90003130:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90003134:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90003136:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000313a:	635c      	str	r4, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000313c:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000313e:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90003140:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90003142:	680e      	ldr	r6, [r1, #0]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
90003144:	68c8      	ldr	r0, [r1, #12]
90003146:	2e08      	cmp	r6, #8
90003148:	d012      	beq.n	90003170 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000314a:	0a02      	lsrs	r2, r0, #8
        WRITE_REG(DMA2D->FGOR, 0);
9000314c:	2500      	movs	r5, #0
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000314e:	0941      	lsrs	r1, r0, #5
90003150:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90003154:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90003158:	61dc      	str	r4, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000315a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
        WRITE_REG(DMA2D->FGOR, 0);
9000315e:	611d      	str	r5, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90003160:	430a      	orrs	r2, r1

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90003162:	490f      	ldr	r1, [pc, #60]	@ (900031a0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90003164:	4302      	orrs	r2, r0
90003166:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90003168:	6019      	str	r1, [r3, #0]
    }
}
9000316a:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
9000316c:	2400      	movs	r4, #0
9000316e:	e7da      	b.n	90003126 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90003170:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90003172:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90003174:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90003176:	4a0b      	ldr	r2, [pc, #44]	@ (900031a4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
90003178:	7f09      	ldrb	r1, [r1, #28]
9000317a:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
9000317e:	490a      	ldr	r1, [pc, #40]	@ (900031a8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90003180:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90003182:	6218      	str	r0, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90003184:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90003186:	60dd      	str	r5, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90003188:	6019      	str	r1, [r3, #0]
}
9000318a:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
9000318c:	2402      	movs	r4, #2
9000318e:	e7ca      	b.n	90003126 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
90003190:	4b06      	ldr	r3, [pc, #24]	@ (900031ac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
90003192:	2188      	movs	r1, #136	@ 0x88
90003194:	4a06      	ldr	r2, [pc, #24]	@ (900031b0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
90003196:	4807      	ldr	r0, [pc, #28]	@ (900031b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
90003198:	f028 fb92 	bl	9002b8c0 <__assert_func>
9000319c:	52001000 	.word	0x52001000
900031a0:	00030201 	.word	0x00030201
900031a4:	00010009 	.word	0x00010009
900031a8:	00020201 	.word	0x00020201
900031ac:	9002d054 	.word	0x9002d054
900031b0:	9002d070 	.word	0x9002d070
900031b4:	9002d0bc 	.word	0x9002d0bc

900031b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
900031b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
900031ba:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
900031be:	f1be 0f0b 	cmp.w	lr, #11
900031c2:	f200 80ac 	bhi.w	9000331e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
900031c6:	e8df f00e 	tbb	[pc, lr]
900031ca:	605b      	.short	0x605b
900031cc:	aaaaaa46 	.word	0xaaaaaa46
900031d0:	060606aa 	.word	0x060606aa
900031d4:	0606      	.short	0x0606
        dma2dColorMode = DMA2D_INPUT_L8;
900031d6:	2605      	movs	r6, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
900031d8:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
900031dc:	f1bc 0f0b 	cmp.w	ip, #11
900031e0:	f200 809d 	bhi.w	9000331e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
900031e4:	e8df f00c 	tbb	[pc, ip]
900031e8:	9b0d494e 	.word	0x9b0d494e
900031ec:	069b9b9b 	.word	0x069b9b9b
900031f0:	06060606 	.word	0x06060606
    switch (format)
900031f4:	f1bc 0f0b 	cmp.w	ip, #11
900031f8:	f000 8097 	beq.w	9000332a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x172>
        dma2dColorMode = DMA2D_INPUT_L8;
900031fc:	2405      	movs	r4, #5
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
900031fe:	2701      	movs	r7, #1
90003200:	e001      	b.n	90003206 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90003202:	2400      	movs	r4, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90003204:	4627      	mov	r7, r4
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90003206:	8a8b      	ldrh	r3, [r1, #20]
90003208:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
9000320a:	8b0d      	ldrh	r5, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000320c:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000320e:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90003210:	1aed      	subs	r5, r5, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90003212:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90003216:	4b4b      	ldr	r3, [pc, #300]	@ (90003344 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90003218:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000321a:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
9000321c:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
9000321e:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90003220:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90003222:	635f      	str	r7, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90003224:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90003226:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90003228:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
9000322a:	680a      	ldr	r2, [r1, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000322c:	7f0f      	ldrb	r7, [r1, #28]
    switch (blitOp.operation)
9000322e:	2a80      	cmp	r2, #128	@ 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90003230:	ea4f 6007 	mov.w	r0, r7, lsl #24
    switch (blitOp.operation)
90003234:	d02e      	beq.n	90003294 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xdc>
90003236:	d810      	bhi.n	9000325a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
90003238:	2a20      	cmp	r2, #32
9000323a:	d028      	beq.n	9000328e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
9000323c:	2a40      	cmp	r2, #64	@ 0x40
9000323e:	d026      	beq.n	9000328e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
90003240:	2a04      	cmp	r2, #4
90003242:	d15a      	bne.n	900032fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90003244:	4330      	orrs	r0, r6
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90003246:	4a40      	ldr	r2, [pc, #256]	@ (90003348 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90003248:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000324c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000324e:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90003250:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90003252:	601a      	str	r2, [r3, #0]
}
90003254:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90003256:	2600      	movs	r6, #0
90003258:	e7be      	b.n	900031d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (blitOp.operation)
9000325a:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000325e:	d059      	beq.n	90003314 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>
90003260:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
90003264:	d149      	bne.n	900032fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90003266:	4a39      	ldr	r2, [pc, #228]	@ (9000334c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
90003268:	4302      	orrs	r2, r0
9000326a:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
9000326c:	4a36      	ldr	r2, [pc, #216]	@ (90003348 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
9000326e:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90003270:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90003272:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90003274:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90003276:	601a      	str	r2, [r3, #0]
}
90003278:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
9000327a:	2401      	movs	r4, #1
9000327c:	4627      	mov	r7, r4
9000327e:	e7c2      	b.n	90003206 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
90003280:	2602      	movs	r6, #2
90003282:	e7a9      	b.n	900031d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
90003284:	2402      	movs	r4, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90003286:	4627      	mov	r7, r4
90003288:	e7bd      	b.n	90003206 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_RGB888;
9000328a:	2601      	movs	r6, #1
9000328c:	e7a4      	b.n	900031d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000328e:	4330      	orrs	r0, r6
90003290:	4b2c      	ldr	r3, [pc, #176]	@ (90003344 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90003292:	e7d8      	b.n	90003246 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8e>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
90003294:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90003296:	4330      	orrs	r0, r6
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90003298:	1d11      	adds	r1, r2, #4
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000329a:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
9000329e:	62d9      	str	r1, [r3, #44]	@ 0x2c
            switch ((Bitmap::ClutFormat)palette->format)
900032a0:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900032a2:	61d8      	str	r0, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900032a4:	625c      	str	r4, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900032a6:	615d      	str	r5, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
900032a8:	b9b1      	cbnz	r1, 900032d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x120>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900032aa:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
900032ac:	2701      	movs	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900032ae:	69d8      	ldr	r0, [r3, #28]
900032b0:	4a27      	ldr	r2, [pc, #156]	@ (90003350 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900032b2:	3901      	subs	r1, #1
900032b4:	4002      	ands	r2, r0
900032b6:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900032ba:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
900032bc:	4a21      	ldr	r2, [pc, #132]	@ (90003344 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
900032be:	69d3      	ldr	r3, [r2, #28]
900032c0:	f043 0320 	orr.w	r3, r3, #32
900032c4:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
900032c6:	69d3      	ldr	r3, [r2, #28]
900032c8:	069b      	lsls	r3, r3, #26
900032ca:	d4fc      	bmi.n	900032c6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10e>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
900032cc:	2310      	movs	r3, #16
900032ce:	6093      	str	r3, [r2, #8]
            if(blend)
900032d0:	b317      	cbz	r7, 90003318 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
900032d2:	4b1d      	ldr	r3, [pc, #116]	@ (90003348 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
900032d4:	6013      	str	r3, [r2, #0]
}
900032d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900032d8:	2901      	cmp	r1, #1
900032da:	d12c      	bne.n	90003336 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17e>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900032dc:	8851      	ldrh	r1, [r2, #2]
                if(blitOp.alpha == 255)
900032de:	3fff      	subs	r7, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900032e0:	69d8      	ldr	r0, [r3, #28]
900032e2:	4a1b      	ldr	r2, [pc, #108]	@ (90003350 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900032e4:	f101 31ff 	add.w	r1, r1, #4294967295
                if(blitOp.alpha == 255)
900032e8:	bf18      	it	ne
900032ea:	2701      	movne	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900032ec:	4002      	ands	r2, r0
900032ee:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900032f2:	f042 0210 	orr.w	r2, r2, #16
900032f6:	61da      	str	r2, [r3, #28]
                break;
900032f8:	e7e0      	b.n	900032bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
        if (blitOp.srcFormat != blitOp.dstFormat)
900032fa:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900032fc:	ea46 0600 	orr.w	r6, r6, r0
90003300:	4b10      	ldr	r3, [pc, #64]	@ (90003344 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90003302:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90003306:	bf14      	ite	ne
90003308:	4a12      	ldrne	r2, [pc, #72]	@ (90003354 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
9000330a:	f240 2201 	movweq	r2, #513	@ 0x201
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000330e:	61de      	str	r6, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90003310:	601a      	str	r2, [r3, #0]
}
90003312:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90003314:	4a10      	ldr	r2, [pc, #64]	@ (90003358 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90003316:	e7a7      	b.n	90003268 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90003318:	4b0e      	ldr	r3, [pc, #56]	@ (90003354 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
9000331a:	6013      	str	r3, [r2, #0]
}
9000331c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
9000331e:	4b0f      	ldr	r3, [pc, #60]	@ (9000335c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
90003320:	2167      	movs	r1, #103	@ 0x67
90003322:	4a0f      	ldr	r2, [pc, #60]	@ (90003360 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90003324:	480f      	ldr	r0, [pc, #60]	@ (90003364 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90003326:	f028 facb 	bl	9002b8c0 <__assert_func>
        assert(0 && "Unsupported Format!");
9000332a:	4b0c      	ldr	r3, [pc, #48]	@ (9000335c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
9000332c:	2188      	movs	r1, #136	@ 0x88
9000332e:	4a0e      	ldr	r2, [pc, #56]	@ (90003368 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b0>)
90003330:	480c      	ldr	r0, [pc, #48]	@ (90003364 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90003332:	f028 fac5 	bl	9002b8c0 <__assert_func>
                assert(0 && "Unsupported format");
90003336:	4b0d      	ldr	r3, [pc, #52]	@ (9000336c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
90003338:	f44f 7189 	mov.w	r1, #274	@ 0x112
9000333c:	4a0c      	ldr	r2, [pc, #48]	@ (90003370 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
9000333e:	4809      	ldr	r0, [pc, #36]	@ (90003364 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90003340:	f028 fabe 	bl	9002b8c0 <__assert_func>
90003344:	52001000 	.word	0x52001000
90003348:	00020201 	.word	0x00020201
9000334c:	00020009 	.word	0x00020009
90003350:	ffff00ef 	.word	0xffff00ef
90003354:	00010201 	.word	0x00010201
90003358:	0002000a 	.word	0x0002000a
9000335c:	9002d054 	.word	0x9002d054
90003360:	9002d0fc 	.word	0x9002d0fc
90003364:	9002d0bc 	.word	0x9002d0bc
90003368:	9002d070 	.word	0x9002d070
9000336c:	9002d148 	.word	0x9002d148
90003370:	9002d164 	.word	0x9002d164

90003374 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90003374:	4b1f      	ldr	r3, [pc, #124]	@ (900033f4 <DMA2D_XferCpltCallback+0x80>)
90003376:	4920      	ldr	r1, [pc, #128]	@ (900033f8 <DMA2D_XferCpltCallback+0x84>)
90003378:	681b      	ldr	r3, [r3, #0]
    {
9000337a:	b570      	push	{r4, r5, r6, lr}
9000337c:	685c      	ldr	r4, [r3, #4]
9000337e:	6823      	ldr	r3, [r4, #0]
90003380:	695a      	ldr	r2, [r3, #20]
90003382:	428a      	cmp	r2, r1
90003384:	d125      	bne.n	900033d2 <DMA2D_XferCpltCallback+0x5e>
        if(started_by_external_job)
90003386:	f894 2da0 	ldrb.w	r2, [r4, #3488]	@ 0xda0
9000338a:	b942      	cbnz	r2, 9000339e <DMA2D_XferCpltCallback+0x2a>
            executeCompleted();
9000338c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000338e:	4620      	mov	r0, r4
90003390:	4798      	blx	r3
      return count_ == 0;
90003392:	4b1a      	ldr	r3, [pc, #104]	@ (900033fc <DMA2D_XferCpltCallback+0x88>)
            if(!external_queue.is_empty() && !isRunning)
90003394:	68da      	ldr	r2, [r3, #12]
90003396:	b10a      	cbz	r2, 9000339c <DMA2D_XferCpltCallback+0x28>
90003398:	7a22      	ldrb	r2, [r4, #8]
9000339a:	b1f2      	cbz	r2, 900033da <DMA2D_XferCpltCallback+0x66>
    }
9000339c:	bd70      	pop	{r4, r5, r6, pc}
      return count_ == 0;
9000339e:	4b17      	ldr	r3, [pc, #92]	@ (900033fc <DMA2D_XferCpltCallback+0x88>)
900033a0:	68da      	ldr	r2, [r3, #12]
        if(!external_queue.is_empty() && isRunning)
900033a2:	2a00      	cmp	r2, #0
900033a4:	d0fa      	beq.n	9000339c <DMA2D_XferCpltCallback+0x28>
900033a6:	7a21      	ldrb	r1, [r4, #8]
900033a8:	2900      	cmp	r1, #0
900033aa:	d0f7      	beq.n	9000339c <DMA2D_XferCpltCallback+0x28>
            isRunning = false;
900033ac:	2100      	movs	r1, #0
      count_--;
900033ae:	3a01      	subs	r2, #1
      head_ = (head_ + 1) % max_size_;
900033b0:	e9d3 5000 	ldrd	r5, r0, [r3]
            isRunning = false;
900033b4:	7221      	strb	r1, [r4, #8]
      head_ = (head_ + 1) % max_size_;
900033b6:	1c41      	adds	r1, r0, #1
      count_--;
900033b8:	60da      	str	r2, [r3, #12]
      return buffer_[head_];
900033ba:	3002      	adds	r0, #2
      head_ = (head_ + 1) % max_size_;
900033bc:	fbb1 f2f5 	udiv	r2, r1, r5
900033c0:	fb05 1112 	mls	r1, r5, r2, r1
            DMA2D_ExternalJobCompleted(completed_job);
900033c4:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
900033c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      head_ = (head_ + 1) % max_size_;
900033cc:	6059      	str	r1, [r3, #4]
            DMA2D_ExternalJobCompleted(completed_job);
900033ce:	f7ff bd39 	b.w	90002e44 <DMA2D_ExternalJobCompleted>
900033d2:	4620      	mov	r0, r4
900033d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900033d8:	4710      	bx	r2
      return buffer_[head_];
900033da:	6858      	ldr	r0, [r3, #4]
                started_by_external_job = true;
900033dc:	2201      	movs	r2, #1
      return buffer_[head_];
900033de:	3002      	adds	r0, #2
                started_by_external_job = true;
900033e0:	f884 2da0 	strb.w	r2, [r4, #3488]	@ 0xda0
        isRunning = true;
900033e4:	7222      	strb	r2, [r4, #8]
        DMA2D_CopyBuffer(job);
900033e6:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
900033ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900033ee:	f7ff bce5 	b.w	90002dbc <DMA2D_CopyBuffer>
900033f2:	bf00      	nop
900033f4:	24027e9c 	.word	0x24027e9c
900033f8:	900030a1 	.word	0x900030a1
900033fc:	24005ff0 	.word	0x24005ff0

90003400 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
90003400:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90003402:	4b10      	ldr	r3, [pc, #64]	@ (90003444 <_ZN8STM32DMAC1Ev+0x44>)
STM32DMA::STM32DMA()
90003404:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90003406:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90003408:	2500      	movs	r5, #0
9000340a:	300c      	adds	r0, #12
9000340c:	2260      	movs	r2, #96	@ 0x60
9000340e:	7235      	strb	r5, [r6, #8]
90003410:	7275      	strb	r5, [r6, #9]
90003412:	6070      	str	r0, [r6, #4]
90003414:	f844 3b20 	str.w	r3, [r4], #32
90003418:	4621      	mov	r1, r4
9000341a:	f012 fc5f 	bl	90015cdc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
9000341e:	4621      	mov	r1, r4
90003420:	f506 635a 	add.w	r3, r6, #3488	@ 0xda0
        : color(0)
90003424:	60cd      	str	r5, [r1, #12]
90003426:	3124      	adds	r1, #36	@ 0x24
90003428:	4299      	cmp	r1, r3
9000342a:	d1fb      	bne.n	90003424 <_ZN8STM32DMAC1Ev+0x24>
9000342c:	f886 5da0 	strb.w	r5, [r6, #3488]	@ 0xda0
    mutexIsRunning = MUTEX_CREATE();
90003430:	2000      	movs	r0, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90003432:	f8c6 5da4 	str.w	r5, [r6, #3492]	@ 0xda4
    mutexIsRunning = MUTEX_CREATE();
90003436:	f00e f8f5 	bl	90011624 <osMutexNew>
9000343a:	4603      	mov	r3, r0
}
9000343c:	4630      	mov	r0, r6
    mutexIsRunning = MUTEX_CREATE();
9000343e:	f8c6 3da4 	str.w	r3, [r6, #3492]	@ 0xda4
}
90003442:	bd70      	pop	{r4, r5, r6, pc}
90003444:	9002d1ac 	.word	0x9002d1ac

90003448 <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90003448:	4a03      	ldr	r2, [pc, #12]	@ (90003458 <_ZN8touchgfx5paint8tearDownEv+0x10>)
9000344a:	6813      	ldr	r3, [r2, #0]
9000344c:	07db      	lsls	r3, r3, #31
9000344e:	d4fc      	bmi.n	9000344a <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90003450:	2323      	movs	r3, #35	@ 0x23
90003452:	6093      	str	r3, [r2, #8]
}
90003454:	4770      	bx	lr
90003456:	bf00      	nop
90003458:	52001000 	.word	0x52001000

9000345c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
9000345c:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
9000345e:	4c11      	ldr	r4, [pc, #68]	@ (900034a4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90003460:	6825      	ldr	r5, [r4, #0]
90003462:	07ed      	lsls	r5, r5, #31
90003464:	d4fc      	bmi.n	90003460 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90003466:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90003468:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
9000346a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000346c:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
9000346e:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90003472:	f04f 0502 	mov.w	r5, #2
90003476:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90003478:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
9000347a:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
9000347c:	d00b      	beq.n	90003496 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
9000347e:	490a      	ldr	r1, [pc, #40]	@ (900034a8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90003480:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90003482:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90003486:	4909      	ldr	r1, [pc, #36]	@ (900034ac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90003488:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
9000348a:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
9000348c:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
9000348e:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90003490:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
90003492:	bc30      	pop	{r4, r5}
90003494:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90003496:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90003498:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
9000349a:	4b05      	ldr	r3, [pc, #20]	@ (900034b0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
9000349c:	63a2      	str	r2, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
9000349e:	6023      	str	r3, [r4, #0]
}
900034a0:	bc30      	pop	{r4, r5}
900034a2:	4770      	bx	lr
900034a4:	52001000 	.word	0x52001000
900034a8:	00010009 	.word	0x00010009
900034ac:	00020001 	.word	0x00020001
900034b0:	00030001 	.word	0x00030001

900034b4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
900034b4:	2001      	movs	r0, #1
900034b6:	4770      	bx	lr

900034b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
900034b8:	2040      	movs	r0, #64	@ 0x40
900034ba:	4770      	bx	lr

900034bc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
900034bc:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
900034c0:	3008      	adds	r0, #8
900034c2:	4770      	bx	lr

900034c4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
900034c4:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
900034c8:	3008      	adds	r0, #8
900034ca:	4770      	bx	lr

900034cc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
900034cc:	2001      	movs	r0, #1
900034ce:	4770      	bx	lr

900034d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
900034d0:	f242 30c4 	movw	r0, #9156	@ 0x23c4
900034d4:	4770      	bx	lr
900034d6:	bf00      	nop

900034d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
900034d8:	f242 33c4 	movw	r3, #9156	@ 0x23c4
900034dc:	fb03 0001 	mla	r0, r3, r1, r0
    }
900034e0:	3008      	adds	r0, #8
900034e2:	4770      	bx	lr

900034e4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
900034e4:	f242 33c4 	movw	r3, #9156	@ 0x23c4
900034e8:	fb03 0001 	mla	r0, r3, r1, r0
    }
900034ec:	3008      	adds	r0, #8
900034ee:	4770      	bx	lr

900034f0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
900034f0:	2001      	movs	r0, #1
900034f2:	4770      	bx	lr

900034f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
900034f4:	2010      	movs	r0, #16
900034f6:	4770      	bx	lr

900034f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
900034f8:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
900034fc:	3008      	adds	r0, #8
900034fe:	4770      	bx	lr

90003500 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90003500:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90003504:	3008      	adds	r0, #8
90003506:	4770      	bx	lr

90003508 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
90003508:	4608      	mov	r0, r1
9000350a:	f002 bdbd 	b.w	90006088 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
9000350e:	bf00      	nop

90003510 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90003510:	4b03      	ldr	r3, [pc, #12]	@ (90003520 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
90003512:	b510      	push	{r4, lr}
90003514:	4604      	mov	r4, r0
90003516:	6003      	str	r3, [r0, #0]
90003518:	f010 ff3b 	bl	90014392 <_ZN8touchgfx17AbstractPartitionD1Ev>
9000351c:	4620      	mov	r0, r4
9000351e:	bd10      	pop	{r4, pc}
90003520:	9002d264 	.word	0x9002d264

90003524 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90003524:	4b05      	ldr	r3, [pc, #20]	@ (9000353c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
90003526:	b510      	push	{r4, lr}
90003528:	4604      	mov	r4, r0
9000352a:	6003      	str	r3, [r0, #0]
9000352c:	f010 ff31 	bl	90014392 <_ZN8touchgfx17AbstractPartitionD1Ev>
90003530:	2148      	movs	r1, #72	@ 0x48
90003532:	4620      	mov	r0, r4
90003534:	f027 ffe7 	bl	9002b506 <_ZdlPvj>
90003538:	4620      	mov	r0, r4
9000353a:	bd10      	pop	{r4, pc}
9000353c:	9002d264 	.word	0x9002d264

90003540 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90003540:	4b03      	ldr	r3, [pc, #12]	@ (90003550 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90003542:	b510      	push	{r4, lr}
90003544:	4604      	mov	r4, r0
90003546:	6003      	str	r3, [r0, #0]
90003548:	f010 ff23 	bl	90014392 <_ZN8touchgfx17AbstractPartitionD1Ev>
9000354c:	4620      	mov	r0, r4
9000354e:	bd10      	pop	{r4, pc}
90003550:	9002d230 	.word	0x9002d230

90003554 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90003554:	4b06      	ldr	r3, [pc, #24]	@ (90003570 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90003556:	b510      	push	{r4, lr}
90003558:	4604      	mov	r4, r0
9000355a:	6003      	str	r3, [r0, #0]
9000355c:	f010 ff19 	bl	90014392 <_ZN8touchgfx17AbstractPartitionD1Ev>
90003560:	f242 31cc 	movw	r1, #9164	@ 0x23cc
90003564:	4620      	mov	r0, r4
90003566:	f027 ffce 	bl	9002b506 <_ZdlPvj>
9000356a:	4620      	mov	r0, r4
9000356c:	bd10      	pop	{r4, pc}
9000356e:	bf00      	nop
90003570:	9002d230 	.word	0x9002d230

90003574 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90003574:	4b03      	ldr	r3, [pc, #12]	@ (90003584 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90003576:	b510      	push	{r4, lr}
90003578:	4604      	mov	r4, r0
9000357a:	6003      	str	r3, [r0, #0]
9000357c:	f010 ff09 	bl	90014392 <_ZN8touchgfx17AbstractPartitionD1Ev>
90003580:	4620      	mov	r0, r4
90003582:	bd10      	pop	{r4, pc}
90003584:	9002d1fc 	.word	0x9002d1fc

90003588 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90003588:	4b05      	ldr	r3, [pc, #20]	@ (900035a0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
9000358a:	b510      	push	{r4, lr}
9000358c:	4604      	mov	r4, r0
9000358e:	6003      	str	r3, [r0, #0]
90003590:	f010 feff 	bl	90014392 <_ZN8touchgfx17AbstractPartitionD1Ev>
90003594:	2118      	movs	r1, #24
90003596:	4620      	mov	r0, r4
90003598:	f027 ffb5 	bl	9002b506 <_ZdlPvj>
9000359c:	4620      	mov	r0, r4
9000359e:	bd10      	pop	{r4, pc}
900035a0:	9002d1fc 	.word	0x9002d1fc

900035a4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
900035a4:	b510      	push	{r4, lr}
900035a6:	4604      	mov	r4, r0
900035a8:	490c      	ldr	r1, [pc, #48]	@ (900035dc <_ZN12FrontendHeapD1Ev+0x38>)
900035aa:	4a0d      	ldr	r2, [pc, #52]	@ (900035e0 <_ZN12FrontendHeapD1Ev+0x3c>)
900035ac:	f242 30f8 	movw	r0, #9208	@ 0x23f8
900035b0:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
900035b4:	6021      	str	r1, [r4, #0]
900035b6:	4420      	add	r0, r4
900035b8:	f8c3 23f8 	str.w	r2, [r3, #1016]	@ 0x3f8
900035bc:	f010 fee9 	bl	90014392 <_ZN8touchgfx17AbstractPartitionD1Ev>
900035c0:	4620      	mov	r0, r4
900035c2:	4b08      	ldr	r3, [pc, #32]	@ (900035e4 <_ZN12FrontendHeapD1Ev+0x40>)
900035c4:	f840 3f2c 	str.w	r3, [r0, #44]!
900035c8:	f010 fee3 	bl	90014392 <_ZN8touchgfx17AbstractPartitionD1Ev>
900035cc:	4620      	mov	r0, r4
900035ce:	4b06      	ldr	r3, [pc, #24]	@ (900035e8 <_ZN12FrontendHeapD1Ev+0x44>)
900035d0:	f840 3f14 	str.w	r3, [r0, #20]!
900035d4:	f010 fedd 	bl	90014392 <_ZN8touchgfx17AbstractPartitionD1Ev>
900035d8:	4620      	mov	r0, r4
900035da:	bd10      	pop	{r4, pc}
900035dc:	9002d298 	.word	0x9002d298
900035e0:	9002d264 	.word	0x9002d264
900035e4:	9002d230 	.word	0x9002d230
900035e8:	9002d1fc 	.word	0x9002d1fc

900035ec <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
900035ec:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
900035ee:	4c0c      	ldr	r4, [pc, #48]	@ (90003620 <__tcf_0+0x34>)
900035f0:	490c      	ldr	r1, [pc, #48]	@ (90003624 <__tcf_0+0x38>)
900035f2:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
900035f6:	4a0c      	ldr	r2, [pc, #48]	@ (90003628 <__tcf_0+0x3c>)
900035f8:	480c      	ldr	r0, [pc, #48]	@ (9000362c <__tcf_0+0x40>)
900035fa:	6021      	str	r1, [r4, #0]
900035fc:	f8c3 23f8 	str.w	r2, [r3, #1016]	@ 0x3f8
90003600:	f010 fec7 	bl	90014392 <_ZN8touchgfx17AbstractPartitionD1Ev>
90003604:	4620      	mov	r0, r4
90003606:	4b0a      	ldr	r3, [pc, #40]	@ (90003630 <__tcf_0+0x44>)
90003608:	f840 3f2c 	str.w	r3, [r0, #44]!
9000360c:	f010 fec1 	bl	90014392 <_ZN8touchgfx17AbstractPartitionD1Ev>
90003610:	4620      	mov	r0, r4
90003612:	4b08      	ldr	r3, [pc, #32]	@ (90003634 <__tcf_0+0x48>)
        static FrontendHeap instance;
90003614:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90003618:	f840 3f14 	str.w	r3, [r0, #20]!
9000361c:	f010 beb9 	b.w	90014392 <_ZN8touchgfx17AbstractPartitionD1Ev>
90003620:	24006f08 	.word	0x24006f08
90003624:	9002d298 	.word	0x9002d298
90003628:	9002d264 	.word	0x9002d264
9000362c:	24009300 	.word	0x24009300
90003630:	9002d230 	.word	0x9002d230
90003634:	9002d1fc 	.word	0x9002d1fc

90003638 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90003638:	b510      	push	{r4, lr}
9000363a:	4604      	mov	r4, r0
9000363c:	4a0f      	ldr	r2, [pc, #60]	@ (9000367c <_ZN12FrontendHeapD0Ev+0x44>)
9000363e:	4910      	ldr	r1, [pc, #64]	@ (90003680 <_ZN12FrontendHeapD0Ev+0x48>)
90003640:	f242 30f8 	movw	r0, #9208	@ 0x23f8
90003644:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
90003648:	6021      	str	r1, [r4, #0]
9000364a:	4420      	add	r0, r4
9000364c:	f8c3 23f8 	str.w	r2, [r3, #1016]	@ 0x3f8
90003650:	f010 fe9f 	bl	90014392 <_ZN8touchgfx17AbstractPartitionD1Ev>
90003654:	4620      	mov	r0, r4
90003656:	4b0b      	ldr	r3, [pc, #44]	@ (90003684 <_ZN12FrontendHeapD0Ev+0x4c>)
90003658:	f840 3f2c 	str.w	r3, [r0, #44]!
9000365c:	f010 fe99 	bl	90014392 <_ZN8touchgfx17AbstractPartitionD1Ev>
90003660:	4b09      	ldr	r3, [pc, #36]	@ (90003688 <_ZN12FrontendHeapD0Ev+0x50>)
90003662:	4620      	mov	r0, r4
90003664:	f840 3f14 	str.w	r3, [r0, #20]!
90003668:	f010 fe93 	bl	90014392 <_ZN8touchgfx17AbstractPartitionD1Ev>
9000366c:	4620      	mov	r0, r4
9000366e:	f242 51b0 	movw	r1, #9648	@ 0x25b0
90003672:	f027 ff48 	bl	9002b506 <_ZdlPvj>
90003676:	4620      	mov	r0, r4
90003678:	bd10      	pop	{r4, pc}
9000367a:	bf00      	nop
9000367c:	9002d264 	.word	0x9002d264
90003680:	9002d298 	.word	0x9002d298
90003684:	9002d230 	.word	0x9002d230
90003688:	9002d1fc 	.word	0x9002d1fc

9000368c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
9000368c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90003690:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90003692:	2400      	movs	r4, #0
90003694:	f001 ff96 	bl	900055c4 <_ZN14BitmapDatabase11getInstanceEv>
90003698:	4605      	mov	r5, r0
9000369a:	f001 ff97 	bl	900055cc <_ZN14BitmapDatabase15getInstanceSizeEv>
9000369e:	4623      	mov	r3, r4
900036a0:	4601      	mov	r1, r0
900036a2:	4622      	mov	r2, r4
900036a4:	4628      	mov	r0, r5
900036a6:	9400      	str	r4, [sp, #0]
900036a8:	f01a fe82 	bl	9001e3b0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
900036ac:	4b29      	ldr	r3, [pc, #164]	@ (90003754 <touchgfx_init+0xc8>)
900036ae:	4a2a      	ldr	r2, [pc, #168]	@ (90003758 <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
900036b0:	4620      	mov	r0, r4
        static FrontendHeap instance;
900036b2:	4c2a      	ldr	r4, [pc, #168]	@ (9000375c <touchgfx_init+0xd0>)
900036b4:	601a      	str	r2, [r3, #0]
900036b6:	f005 fac3 	bl	90008c40 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
900036ba:	4829      	ldr	r0, [pc, #164]	@ (90003760 <touchgfx_init+0xd4>)
900036bc:	f01a fde0 	bl	9001e280 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
900036c0:	6823      	ldr	r3, [r4, #0]
900036c2:	f3bf 8f5b 	dmb	ish
900036c6:	07db      	lsls	r3, r3, #31
900036c8:	d505      	bpl.n	900036d6 <touchgfx_init+0x4a>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
900036ca:	4826      	ldr	r0, [pc, #152]	@ (90003764 <touchgfx_init+0xd8>)
}
900036cc:	b002      	add	sp, #8
900036ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
900036d2:	f7fe bbc1 	b.w	90001e58 <_ZN11TouchGFXHAL10initializeEv>
900036d6:	4620      	mov	r0, r4
900036d8:	f027 ff17 	bl	9002b50a <__cxa_guard_acquire>
900036dc:	2800      	cmp	r0, #0
900036de:	d0f4      	beq.n	900036ca <touchgfx_init+0x3e>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
900036e0:	4d21      	ldr	r5, [pc, #132]	@ (90003768 <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
900036e2:	4f22      	ldr	r7, [pc, #136]	@ (9000376c <touchgfx_init+0xe0>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
900036e4:	4b22      	ldr	r3, [pc, #136]	@ (90003770 <touchgfx_init+0xe4>)
        : presenterStorage(pres),
900036e6:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
900036ea:	f107 065c 	add.w	r6, r7, #92	@ 0x5c
          screenStorage(scr),
900036ee:	f105 082c 	add.w	r8, r5, #44	@ 0x2c
900036f2:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
900036f4:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
900036f6:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
900036f8:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
900036fa:	f8c5 8008 	str.w	r8, [r5, #8]
900036fe:	f010 fe49 	bl	90014394 <_ZN8touchgfx17AbstractPartitionC1Ev>
90003702:	4b1c      	ldr	r3, [pc, #112]	@ (90003774 <touchgfx_init+0xe8>)
90003704:	4640      	mov	r0, r8
90003706:	616b      	str	r3, [r5, #20]
90003708:	f010 fe44 	bl	90014394 <_ZN8touchgfx17AbstractPartitionC1Ev>
9000370c:	4b1a      	ldr	r3, [pc, #104]	@ (90003778 <touchgfx_init+0xec>)
9000370e:	4638      	mov	r0, r7
90003710:	62eb      	str	r3, [r5, #44]	@ 0x2c
90003712:	f010 fe3f 	bl	90014394 <_ZN8touchgfx17AbstractPartitionC1Ev>
90003716:	f505 5300 	add.w	r3, r5, #8192	@ 0x2000
9000371a:	4a18      	ldr	r2, [pc, #96]	@ (9000377c <touchgfx_init+0xf0>)
9000371c:	f505 5011 	add.w	r0, r5, #9280	@ 0x2440
90003720:	f8c3 23f8 	str.w	r2, [r3, #1016]	@ 0x3f8
90003724:	f005 fb14 	bl	90008d50 <_ZN5ModelC1Ev>
90003728:	462a      	mov	r2, r5
9000372a:	f505 5111 	add.w	r1, r5, #9280	@ 0x2440
9000372e:	4630      	mov	r0, r6
90003730:	f005 fb00 	bl	90008d34 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90003734:	4630      	mov	r0, r6
90003736:	f002 fca7 	bl	90006088 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
9000373a:	4811      	ldr	r0, [pc, #68]	@ (90003780 <touchgfx_init+0xf4>)
9000373c:	f028 f8de 	bl	9002b8fc <atexit>
90003740:	4620      	mov	r0, r4
90003742:	f027 feee 	bl	9002b522 <__cxa_guard_release>
90003746:	4807      	ldr	r0, [pc, #28]	@ (90003764 <touchgfx_init+0xd8>)
}
90003748:	b002      	add	sp, #8
9000374a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
9000374e:	f7fe bb83 	b.w	90001e58 <_ZN11TouchGFXHAL10initializeEv>
90003752:	bf00      	nop
90003754:	24027f00 	.word	0x24027f00
90003758:	240060dc 	.word	0x240060dc
9000375c:	24006f04 	.word	0x24006f04
90003760:	24000020 	.word	0x24000020
90003764:	24006054 	.word	0x24006054
90003768:	24006f08 	.word	0x24006f08
9000376c:	24009300 	.word	0x24009300
90003770:	9002d298 	.word	0x9002d298
90003774:	9002d1fc 	.word	0x9002d1fc
90003778:	9002d230 	.word	0x9002d230
9000377c:	9002d264 	.word	0x9002d264
90003780:	900035ed 	.word	0x900035ed

90003784 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90003784:	4770      	bx	lr
90003786:	bf00      	nop

90003788 <_GLOBAL__sub_I_touchgfx_init>:
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
}
90003788:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
9000378a:	4e26      	ldr	r6, [pc, #152]	@ (90003824 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
9000378c:	4b26      	ldr	r3, [pc, #152]	@ (90003828 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
9000378e:	4c27      	ldr	r4, [pc, #156]	@ (9000382c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
90003790:	4630      	mov	r0, r6
static LCD16bpp display;
90003792:	4d27      	ldr	r5, [pc, #156]	@ (90003830 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
90003794:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90003796:	f7ff fe33 	bl	90003400 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
9000379a:	4628      	mov	r0, r5
9000379c:	f01d ff12 	bl	900215c4 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
900037a0:	4b24      	ldr	r3, [pc, #144]	@ (90003834 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          mcuInstrumentation(0),
900037a2:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900037a4:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900037a8:	f44f 7188 	mov.w	r1, #272	@ 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
900037ac:	62da      	str	r2, [r3, #44]	@ 0x2c
900037ae:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
900037b0:	669a      	str	r2, [r3, #104]	@ 0x68
          updateMCULoad(0),
900037b2:	f883 206c 	strb.w	r2, [r3, #108]	@ 0x6c
          cc_begin(0),
900037b6:	671a      	str	r2, [r3, #112]	@ 0x70
          mcuInstrumentation(0),
900037b8:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
900037bc:	4c1e      	ldr	r4, [pc, #120]	@ (90003838 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
900037be:	665c      	str	r4, [r3, #100]	@ 0x64
          requestedOrientation(ORIENTATION_LANDSCAPE),
900037c0:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
900037c4:	675c      	str	r4, [r3, #116]	@ 0x74
          lastRenderMethod(HARDWARE)
900037c6:	2401      	movs	r4, #1
900037c8:	f883 4078 	strb.w	r4, [r3, #120]	@ 0x78
        instance = this;
900037cc:	4c1b      	ldr	r4, [pc, #108]	@ (9000383c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
900037ce:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900037d0:	4c1b      	ldr	r4, [pc, #108]	@ (90003840 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
900037d2:	8020      	strh	r0, [r4, #0]
900037d4:	4c1b      	ldr	r4, [pc, #108]	@ (90003844 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          lcdRef(display),
900037d6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900037da:	8020      	strh	r0, [r4, #0]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
900037dc:	f44f 7580 	mov.w	r5, #256	@ 0x100
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900037e0:	4c19      	ldr	r4, [pc, #100]	@ (90003848 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
900037e2:	481a      	ldr	r0, [pc, #104]	@ (9000384c <_GLOBAL__sub_I_touchgfx_init+0xc4>)
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
900037e4:	649d      	str	r5, [r3, #72]	@ 0x48
          frameBufferAllocator(0),
900037e6:	e9c3 2205 	strd	r2, r2, [r3, #20]
            : startX(0),
900037ea:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
900037ee:	e9c3 2209 	strd	r2, r2, [r3, #36]	@ 0x24
          frameBuffer0(0),
900037f2:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
900037f6:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
900037fa:	e9c3 2213 	strd	r2, r2, [r3, #76]	@ 0x4c
          listener(0),
900037fe:	e9c3 2215 	strd	r2, r2, [r3, #84]	@ 0x54
          lastY(0),
90003802:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90003806:	8021      	strh	r1, [r4, #0]
90003808:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
9000380a:	4c11      	ldr	r4, [pc, #68]	@ (90003850 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
9000380c:	4811      	ldr	r0, [pc, #68]	@ (90003854 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
9000380e:	4912      	ldr	r1, [pc, #72]	@ (90003858 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
        : cc_consumed(0),
90003810:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
90003814:	7022      	strb	r2, [r4, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90003816:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
9000381a:	6018      	str	r0, [r3, #0]
          cc_in(0)
9000381c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
90003820:	67d9      	str	r1, [r3, #124]	@ 0x7c
}
90003822:	bd70      	pop	{r4, r5, r6, pc}
90003824:	24006158 	.word	0x24006158
90003828:	9002c9b0 	.word	0x9002c9b0
9000382c:	24006f00 	.word	0x24006f00
90003830:	240060e0 	.word	0x240060e0
90003834:	24006054 	.word	0x24006054
90003838:	01000001 	.word	0x01000001
9000383c:	24027e9c 	.word	0x24027e9c
90003840:	24027e90 	.word	0x24027e90
90003844:	24027e96 	.word	0x24027e96
90003848:	24027e92 	.word	0x24027e92
9000384c:	24027e98 	.word	0x24027e98
90003850:	24027e94 	.word	0x24027e94
90003854:	9002cb40 	.word	0x9002cb40
90003858:	9002c988 	.word	0x9002c988

9000385c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
9000385c:	4801      	ldr	r0, [pc, #4]	@ (90003864 <_GLOBAL__sub_D_touchgfx_init+0x8>)
9000385e:	f7ff bb95 	b.w	90002f8c <_ZN8STM32DMAD1Ev>
90003862:	bf00      	nop
90003864:	24006158 	.word	0x24006158

90003868 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90003868:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
9000386c:	b112      	cbz	r2, 90003874 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
9000386e:	6803      	ldr	r3, [r0, #0]
90003870:	695b      	ldr	r3, [r3, #20]
90003872:	4718      	bx	r3
        }
    }
90003874:	4770      	bx	lr
90003876:	bf00      	nop

90003878 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90003878:	2000      	movs	r0, #0
9000387a:	4770      	bx	lr

9000387c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
9000387c:	8081      	strh	r1, [r0, #4]
    }
9000387e:	4770      	bx	lr

90003880 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90003880:	80c1      	strh	r1, [r0, #6]
    }
90003882:	4770      	bx	lr

90003884 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90003884:	8101      	strh	r1, [r0, #8]
    }
90003886:	4770      	bx	lr

90003888 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90003888:	8141      	strh	r1, [r0, #10]
    }
9000388a:	4770      	bx	lr

9000388c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
9000388c:	4770      	bx	lr
9000388e:	bf00      	nop

90003890 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90003890:	4770      	bx	lr
90003892:	bf00      	nop

90003894 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90003894:	4770      	bx	lr
90003896:	bf00      	nop

90003898 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90003898:	4770      	bx	lr
9000389a:	bf00      	nop

9000389c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
9000389c:	4770      	bx	lr
9000389e:	bf00      	nop

900038a0 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
900038a0:	f8b0 c006 	ldrh.w	ip, [r0, #6]
900038a4:	6803      	ldr	r3, [r0, #0]
900038a6:	eba2 020c 	sub.w	r2, r2, ip
900038aa:	f8b0 c004 	ldrh.w	ip, [r0, #4]
900038ae:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900038b0:	eba1 010c 	sub.w	r1, r1, ip
900038b4:	b212      	sxth	r2, r2
900038b6:	b209      	sxth	r1, r1
900038b8:	4718      	bx	r3
900038ba:	bf00      	nop

900038bc <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
900038bc:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
900038be:	f64f 7cff 	movw	ip, #65535	@ 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
900038c2:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
900038c6:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
900038ca:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
900038ce:	6010      	str	r0, [r2, #0]
    }
900038d0:	4770      	bx	lr
900038d2:	bf00      	nop

900038d4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
900038d4:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
900038d8:	b11a      	cbz	r2, 900038e2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
900038da:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
900038de:	b102      	cbz	r2, 900038e2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
900038e0:	6018      	str	r0, [r3, #0]
        }
    }
900038e2:	4770      	bx	lr

900038e4 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
900038e4:	2000      	movs	r0, #0
900038e6:	4770      	bx	lr

900038e8 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
900038e8:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
900038ea:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
900038ec:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
900038ee:	809a      	strh	r2, [r3, #4]
    }
900038f0:	4770      	bx	lr
900038f2:	bf00      	nop

900038f4 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
900038f4:	4770      	bx	lr
900038f6:	bf00      	nop

900038f8 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
900038f8:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
900038fc:	4770      	bx	lr
900038fe:	bf00      	nop

90003900 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90003900:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
90003904:	4770      	bx	lr
90003906:	bf00      	nop

90003908 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90003908:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
9000390c:	688a      	ldr	r2, [r1, #8]
9000390e:	f8c0 c000 	str.w	ip, [r0]
90003912:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90003914:	4770      	bx	lr
90003916:	bf00      	nop

90003918 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90003918:	2200      	movs	r2, #0
9000391a:	6002      	str	r2, [r0, #0]
9000391c:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
9000391e:	4770      	bx	lr

90003920 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90003920:	2000      	movs	r0, #0
90003922:	4770      	bx	lr

90003924 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90003924:	4b03      	ldr	r3, [pc, #12]	@ (90003934 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90003926:	2290      	movs	r2, #144	@ 0x90
90003928:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
9000392c:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90003930:	4770      	bx	lr
90003932:	bf00      	nop
90003934:	e000e100 	.word	0xe000e100

90003938 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90003938:	4a09      	ldr	r2, [pc, #36]	@ (90003960 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
9000393a:	490a      	ldr	r1, [pc, #40]	@ (90003964 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
9000393c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
9000393e:	480a      	ldr	r0, [pc, #40]	@ (90003968 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90003940:	f3c3 030a 	ubfx	r3, r3, #0, #11
90003944:	3b01      	subs	r3, #1
90003946:	b29b      	uxth	r3, r3
90003948:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
9000394a:	6911      	ldr	r1, [r2, #16]
9000394c:	f3c1 010a 	ubfx	r1, r1, #0, #11
90003950:	3901      	subs	r1, #1
90003952:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90003954:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90003956:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90003958:	f043 0301 	orr.w	r3, r3, #1
9000395c:	6353      	str	r3, [r2, #52]	@ 0x34
}
9000395e:	4770      	bx	lr
90003960:	50001000 	.word	0x50001000
90003964:	240094ba 	.word	0x240094ba
90003968:	240094b8 	.word	0x240094b8

9000396c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    videoController.endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
9000396c:	4b01      	ldr	r3, [pc, #4]	@ (90003974 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
9000396e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
90003972:	4770      	bx	lr
90003974:	50001000 	.word	0x50001000

90003978 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90003978:	4b02      	ldr	r3, [pc, #8]	@ (90003984 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
9000397a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
9000397c:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90003980:	625a      	str	r2, [r3, #36]	@ 0x24
}
90003982:	4770      	bx	lr
90003984:	50001000 	.word	0x50001000

90003988 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setRGBBufferEPhj>:

    virtual void setRGBBuffer(uint8_t* buffer, size_t sizeOfBuffer)
    {
        // Running in UI thread / main

        bufferRGB = buffer;
90003988:	e9c0 120c 	strd	r1, r2, [r0, #48]	@ 0x30
        topBufferRGB = bufferRGB;
9000398c:	6381      	str	r1, [r0, #56]	@ 0x38
        sizeBufferRGB = sizeOfBuffer;
    }
9000398e:	4770      	bx	lr

90003990 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
class DedicatedBufferController : public touchgfx::VideoController
90003990:	4770      	bx	lr
90003992:	bf00      	nop

90003994 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
        mjpegDecoders[handle]->setVideoData(reader);
90003994:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90003998:	4611      	mov	r1, r2
9000399a:	6840      	ldr	r0, [r0, #4]
9000399c:	6803      	ldr	r3, [r0, #0]
9000399e:	68db      	ldr	r3, [r3, #12]
900039a0:	4718      	bx	r3
900039a2:	bf00      	nop

900039a4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DedicatedBufferController : public touchgfx::VideoController
900039a4:	b510      	push	{r4, lr}
900039a6:	4604      	mov	r4, r0
900039a8:	2148      	movs	r1, #72	@ 0x48
900039aa:	f027 fdac 	bl	9002b506 <_ZdlPvj>
900039ae:	4620      	mov	r0, r4
900039b0:	bd10      	pop	{r4, pc}
900039b2:	bf00      	nop

900039b4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        mjpegDecoders[handle]->getVideoInfo(data);
    }

    virtual bool getIsPlaying(const Handle handle)
    {
        assert(handle < no_streams);
900039b4:	b911      	cbnz	r1, 900039bc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
        Stream& stream = streams[handle];
        return stream.isPlaying;
    }
900039b6:	f890 0029 	ldrb.w	r0, [r0, #41]	@ 0x29
900039ba:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
900039bc:	b508      	push	{r3, lr}
        assert(handle < no_streams);
900039be:	4a03      	ldr	r2, [pc, #12]	@ (900039cc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
900039c0:	f44f 71b8 	mov.w	r1, #368	@ 0x170
900039c4:	4b02      	ldr	r3, [pc, #8]	@ (900039d0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
900039c6:	4803      	ldr	r0, [pc, #12]	@ (900039d4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
900039c8:	f027 ff7a 	bl	9002b8c0 <__assert_func>
900039cc:	9002d2b8 	.word	0x9002d2b8
900039d0:	9002d2a4 	.word	0x9002d2a4
900039d4:	9002d444 	.word	0x9002d444

900039d8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
900039d8:	b921      	cbnz	r1, 900039e4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
900039da:	6840      	ldr	r0, [r0, #4]
900039dc:	4611      	mov	r1, r2
900039de:	6803      	ldr	r3, [r0, #0]
900039e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900039e2:	4718      	bx	r3
        assert(handle < no_streams);
900039e4:	4b03      	ldr	r3, [pc, #12]	@ (900039f4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
900039e6:	f44f 71b5 	mov.w	r1, #362	@ 0x16a
900039ea:	4a03      	ldr	r2, [pc, #12]	@ (900039f8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
900039ec:	4803      	ldr	r0, [pc, #12]	@ (900039fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
900039ee:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900039f0:	f027 ff66 	bl	9002b8c0 <__assert_func>
900039f4:	9002d2a4 	.word	0x9002d2a4
900039f8:	9002d488 	.word	0x9002d488
900039fc:	9002d444 	.word	0x9002d444

90003a00 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90003a00:	b909      	cbnz	r1, 90003a06 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90003a02:	68c0      	ldr	r0, [r0, #12]
90003a04:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90003a06:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90003a08:	4a02      	ldr	r2, [pc, #8]	@ (90003a14 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x14>)
90003a0a:	2179      	movs	r1, #121	@ 0x79
90003a0c:	4b02      	ldr	r3, [pc, #8]	@ (90003a18 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90003a0e:	4803      	ldr	r0, [pc, #12]	@ (90003a1c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90003a10:	f027 ff56 	bl	9002b8c0 <__assert_func>
90003a14:	9002d638 	.word	0x9002d638
90003a18:	9002d2a4 	.word	0x9002d2a4
90003a1c:	9002d444 	.word	0x9002d444

90003a20 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
90003a20:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90003a22:	460c      	mov	r4, r1
90003a24:	b951      	cbnz	r1, 90003a3c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x1c>
90003a26:	4684      	mov	ip, r0
        mjpegDecoders[handle]->setVideoData(movie, length);
90003a28:	6840      	ldr	r0, [r0, #4]
90003a2a:	4611      	mov	r1, r2
90003a2c:	461a      	mov	r2, r3
90003a2e:	6803      	ldr	r3, [r0, #0]
        stream.frameNumber = 0;
90003a30:	f8cc 400c 	str.w	r4, [ip, #12]
        mjpegDecoders[handle]->setVideoData(movie, length);
90003a34:	689b      	ldr	r3, [r3, #8]
    }
90003a36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->setVideoData(movie, length);
90003a3a:	4718      	bx	r3
        assert(handle < no_streams);
90003a3c:	4b02      	ldr	r3, [pc, #8]	@ (90003a48 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x28>)
90003a3e:	2190      	movs	r1, #144	@ 0x90
90003a40:	4a02      	ldr	r2, [pc, #8]	@ (90003a4c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x2c>)
90003a42:	4803      	ldr	r0, [pc, #12]	@ (90003a50 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x30>)
90003a44:	f027 ff3c 	bl	9002b8c0 <__assert_func>
90003a48:	9002d2a4 	.word	0x9002d2a4
90003a4c:	9002d7ec 	.word	0x9002d7ec
90003a50:	9002d444 	.word	0x9002d444

90003a54 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90003a54:	b921      	cbnz	r1, 90003a60 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.frameCount = 0;
90003a56:	e9c0 1104 	strd	r1, r1, [r0, #16]
        stream.frame_rate_video = video_frames;
90003a5a:	e9c0 3206 	strd	r3, r2, [r0, #24]
90003a5e:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90003a60:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90003a62:	4a03      	ldr	r2, [pc, #12]	@ (90003a70 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90003a64:	2182      	movs	r1, #130	@ 0x82
90003a66:	4b03      	ldr	r3, [pc, #12]	@ (90003a74 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90003a68:	4803      	ldr	r0, [pc, #12]	@ (90003a78 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
90003a6a:	f027 ff29 	bl	9002b8c0 <__assert_func>
90003a6e:	bf00      	nop
90003a70:	9002d9c8 	.word	0x9002d9c8
90003a74:	9002d2a4 	.word	0x9002d2a4
90003a78:	9002d444 	.word	0x9002d444

90003a7c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
90003a7c:	f011 ba7e 	b.w	90014f7c <_ZN8touchgfx3HAL10beginFrameEv>

90003a80 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
90003a80:	f890 304b 	ldrb.w	r3, [r0, #75]	@ 0x4b
{
90003a84:	b510      	push	{r4, lr}
    if (frameBufferUpdatedThisFrame)
90003a86:	b113      	cbz	r3, 90003a8e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xe>
        refreshRequested = true;
90003a88:	4b1a      	ldr	r3, [pc, #104]	@ (90003af4 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x74>)
90003a8a:	2201      	movs	r2, #1
90003a8c:	701a      	strb	r2, [r3, #0]
            if (stream.isPlaying || stream.isShowingOneFrame)
90003a8e:	4c1a      	ldr	r4, [pc, #104]	@ (90003af8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x78>)
    HAL::endFrame();
90003a90:	f011 fa80 	bl	90014f94 <_ZN8touchgfx3HAL8endFrameEv>
90003a94:	f894 3029 	ldrb.w	r3, [r4, #41]	@ 0x29
90003a98:	b913      	cbnz	r3, 90003aa0 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x20>
90003a9a:	f894 302a 	ldrb.w	r3, [r4, #42]	@ 0x2a
90003a9e:	b14b      	cbz	r3, 90003ab4 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameCount to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) >= (stream.frame_rate_ticks * stream.frameCount))
90003aa0:	69e1      	ldr	r1, [r4, #28]
90003aa2:	6922      	ldr	r2, [r4, #16]
90003aa4:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
90003aa8:	fb01 f202 	mul.w	r2, r1, r2
90003aac:	fb00 f303 	mul.w	r3, r0, r3
90003ab0:	4293      	cmp	r3, r2
90003ab2:	d209      	bcs.n	90003ac8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x48>
        firstDrawThisFrame = true;
90003ab4:	2301      	movs	r3, #1
        SEM_POST(semDecode);
90003ab6:	6c20      	ldr	r0, [r4, #64]	@ 0x40
        firstDrawThisFrame = true;
90003ab8:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
        SEM_POST(semDecode);
90003abc:	f00d feb8 	bl	90011830 <osSemaphoreRelease>
        if (uiHasMutex)
90003ac0:	f894 303e 	ldrb.w	r3, [r4, #62]	@ 0x3e
90003ac4:	b97b      	cbnz	r3, 90003ae6 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x66>
}
90003ac6:	bd10      	pop	{r4, pc}
        {
            if (allowSkipFrames)
90003ac8:	f894 003c 	ldrb.w	r0, [r4, #60]	@ 0x3c
90003acc:	b138      	cbz	r0, 90003ade <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x5e>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
90003ace:	1a9b      	subs	r3, r3, r2
90003ad0:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90003ad4:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
90003ad6:	bf98      	it	ls
90003ad8:	f102 32ff 	addls.w	r2, r2, #4294967295
90003adc:	6262      	str	r2, [r4, #36]	@ 0x24
                    stream.doDecode = true;
90003ade:	2301      	movs	r3, #1
90003ae0:	f884 302e 	strb.w	r3, [r4, #46]	@ 0x2e
90003ae4:	e7e6      	b.n	90003ab4 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
            MUTEX_UNLOCK(mutexBuffers);
90003ae6:	6c60      	ldr	r0, [r4, #68]	@ 0x44
90003ae8:	f00d fe02 	bl	900116f0 <osMutexRelease>
            uiHasMutex = false;
90003aec:	2300      	movs	r3, #0
90003aee:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
90003af2:	bd10      	pop	{r4, pc}
90003af4:	240094bc 	.word	0x240094bc
90003af8:	240094c0 	.word	0x240094c0

90003afc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90003afc:	f011 ba08 	b.w	90014f10 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

90003b00 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
90003b00:	f011 bb63 	b.w	900151ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

90003b04 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
        if (firstDrawThisFrame)
90003b04:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
90003b08:	b903      	cbnz	r3, 90003b0c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x8>
90003b0a:	4770      	bx	lr
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
90003b0c:	b510      	push	{r4, lr}
            MUTEX_LOCK(mutexBuffers);
90003b0e:	f04f 31ff 	mov.w	r1, #4294967295
90003b12:	4604      	mov	r4, r0
90003b14:	6c40      	ldr	r0, [r0, #68]	@ 0x44
90003b16:	f00d fdc7 	bl	900116a8 <osMutexAcquire>
            firstDrawThisFrame = false;
90003b1a:	f44f 7380 	mov.w	r3, #256	@ 0x100
90003b1e:	f8a4 303d 	strh.w	r3, [r4, #61]	@ 0x3d
    }
90003b22:	bd10      	pop	{r4, pc}

90003b24 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
    virtual void unregisterVideoWidget(const Handle handle)
90003b24:	b538      	push	{r3, r4, r5, lr}
90003b26:	460c      	mov	r4, r1
90003b28:	4605      	mov	r5, r0
        MUTEX_LOCK(mutexBuffers);
90003b2a:	f04f 31ff 	mov.w	r1, #4294967295
90003b2e:	6c40      	ldr	r0, [r0, #68]	@ 0x44
        streams[handle].isActive = false;
90003b30:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
        MUTEX_LOCK(mutexBuffers);
90003b34:	f00d fdb8 	bl	900116a8 <osMutexAcquire>
        MUTEX_UNLOCK(mutexBuffers);
90003b38:	6c68      	ldr	r0, [r5, #68]	@ 0x44
90003b3a:	f00d fdd9 	bl	900116f0 <osMutexRelease>
        streams[handle].isActive = false;
90003b3e:	2300      	movs	r3, #0
90003b40:	eb05 0484 	add.w	r4, r5, r4, lsl #2
90003b44:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
        if (oneIsActive == false)
90003b48:	f895 3028 	ldrb.w	r3, [r5, #40]	@ 0x28
90003b4c:	b90b      	cbnz	r3, 90003b52 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm+0x2e>
            topBufferRGB = bufferRGB;
90003b4e:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
90003b50:	63ab      	str	r3, [r5, #56]	@ 0x38
    }
90003b52:	bd38      	pop	{r3, r4, r5, pc}

90003b54 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90003b54:	4814      	ldr	r0, [pc, #80]	@ (90003ba8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
90003b56:	6943      	ldr	r3, [r0, #20]
90003b58:	03d9      	lsls	r1, r3, #15
90003b5a:	d523      	bpl.n	90003ba4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90003b5c:	2300      	movs	r3, #0
{
90003b5e:	b510      	push	{r4, lr}
90003b60:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90003b64:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90003b68:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90003b6c:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90003b70:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003b74:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90003b78:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90003b7c:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003b80:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90003b82:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90003b86:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90003b88:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90003b8c:	1c5a      	adds	r2, r3, #1
90003b8e:	d1f8      	bne.n	90003b82 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
90003b90:	f1ac 0c20 	sub.w	ip, ip, #32
90003b94:	f11c 0f20 	cmn.w	ip, #32
90003b98:	d1f0      	bne.n	90003b7c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
90003b9a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003b9e:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
90003ba2:	bd10      	pop	{r4, pc}
90003ba4:	4770      	bx	lr
90003ba6:	bf00      	nop
90003ba8:	e000ed00 	.word	0xe000ed00

90003bac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003bac:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90003bae:	2900      	cmp	r1, #0
90003bb0:	d133      	bne.n	90003c1a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
90003bb2:	4604      	mov	r4, r0
        switch (cmd)
90003bb4:	2a05      	cmp	r2, #5
90003bb6:	d809      	bhi.n	90003bcc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
90003bb8:	e8df f002 	tbb	[pc, r2]
90003bbc:	27221e0f 	.word	0x27221e0f
90003bc0:	0903      	.short	0x0903
            stream.isPlaying = false;
90003bc2:	2200      	movs	r2, #0
            stream.seek_to_frame = 1;
90003bc4:	2301      	movs	r3, #1
            stream.isPlaying = false;
90003bc6:	f880 2029 	strb.w	r2, [r0, #41]	@ 0x29
            stream.seek_to_frame = 1;
90003bca:	6203      	str	r3, [r0, #32]
    }
90003bcc:	bd10      	pop	{r4, pc}
            stream.repeat = (param > 0);
90003bce:	3b00      	subs	r3, #0
90003bd0:	bf18      	it	ne
90003bd2:	2301      	movne	r3, #1
90003bd4:	f880 302d 	strb.w	r3, [r0, #45]	@ 0x2d
    }
90003bd8:	bd10      	pop	{r4, pc}
            if (mjpegDecoders[handle]->hasVideo())
90003bda:	6840      	ldr	r0, [r0, #4]
90003bdc:	6803      	ldr	r3, [r0, #0]
90003bde:	691b      	ldr	r3, [r3, #16]
90003be0:	4798      	blx	r3
90003be2:	2800      	cmp	r0, #0
90003be4:	d0f2      	beq.n	90003bcc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
                stream.isPlaying = true;
90003be6:	2201      	movs	r2, #1
                stream.frameCount = 0;
90003be8:	2300      	movs	r3, #0
                stream.isPlaying = true;
90003bea:	f884 2029 	strb.w	r2, [r4, #41]	@ 0x29
                stream.hasMoreFrames = true; // Assume more frames, lowered on end
90003bee:	f884 202c 	strb.w	r2, [r4, #44]	@ 0x2c
                stream.frameCount = 0;
90003bf2:	e9c4 3304 	strd	r3, r3, [r4, #16]
    }
90003bf6:	bd10      	pop	{r4, pc}
            stream.isPlaying = false;
90003bf8:	2300      	movs	r3, #0
90003bfa:	f880 3029 	strb.w	r3, [r0, #41]	@ 0x29
    }
90003bfe:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
90003c00:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90003c02:	6203      	str	r3, [r0, #32]
            stream.frameCount = 0;
90003c04:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
90003c08:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
90003c0a:	2200      	movs	r2, #0
            stream.isShowingOneFrame = true;
90003c0c:	2101      	movs	r1, #1
            stream.seek_to_frame = param;
90003c0e:	6203      	str	r3, [r0, #32]
            stream.isShowingOneFrame = true;
90003c10:	f880 102a 	strb.w	r1, [r0, #42]	@ 0x2a
            stream.frameCount = 0;
90003c14:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
90003c18:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
90003c1a:	4b03      	ldr	r3, [pc, #12]	@ (90003c28 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x7c>)
90003c1c:	21a2      	movs	r1, #162	@ 0xa2
90003c1e:	4a03      	ldr	r2, [pc, #12]	@ (90003c2c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x80>)
90003c20:	4803      	ldr	r0, [pc, #12]	@ (90003c30 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x84>)
90003c22:	f027 fe4d 	bl	9002b8c0 <__assert_func>
90003c26:	bf00      	nop
90003c28:	9002d2a4 	.word	0x9002d2a4
90003c2c:	9002db84 	.word	0x9002db84
90003c30:	9002d444 	.word	0x9002d444

90003c34 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
90003c34:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90003c36:	bb39      	cbnz	r1, 90003c88 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x54>
        if (stream.isPlaying)
90003c38:	f890 3029 	ldrb.w	r3, [r0, #41]	@ 0x29
90003c3c:	4604      	mov	r4, r0
90003c3e:	b923      	cbnz	r3, 90003c4a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x16>
        if (stream.doInvalidateOnNextTick)
90003c40:	f894 302b 	ldrb.w	r3, [r4, #43]	@ 0x2b
90003c44:	b963      	cbnz	r3, 90003c60 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x2c>
        return true;
90003c46:	2001      	movs	r0, #1
    }
90003c48:	bd10      	pop	{r4, pc}
        return vSyncForFrame;
90003c4a:	4912      	ldr	r1, [pc, #72]	@ (90003c94 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x60>)
            stream.tickCount+=HAL::getInstance()->getLCDRefreshCount();
90003c4c:	6943      	ldr	r3, [r0, #20]
90003c4e:	6809      	ldr	r1, [r1, #0]
90003c50:	f891 1067 	ldrb.w	r1, [r1, #103]	@ 0x67
90003c54:	440b      	add	r3, r1
90003c56:	6143      	str	r3, [r0, #20]
        if (stream.doInvalidateOnNextTick)
90003c58:	f894 302b 	ldrb.w	r3, [r4, #43]	@ 0x2b
90003c5c:	2b00      	cmp	r3, #0
90003c5e:	d0f2      	beq.n	90003c46 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
     *
     * @param [in] videoBuffer Video buffer.
     */
    void setVideoBuffer(uint8_t* const videoBuffer)
    {
        buffer = videoBuffer;
90003c60:	68a1      	ldr	r1, [r4, #8]
            widget.invalidate();
90003c62:	4610      	mov	r0, r2
90003c64:	6813      	ldr	r3, [r2, #0]
90003c66:	695b      	ldr	r3, [r3, #20]
90003c68:	6311      	str	r1, [r2, #48]	@ 0x30
90003c6a:	4798      	blx	r3
            stream.doInvalidateOnNextTick = false;
90003c6c:	2300      	movs	r3, #0
            if (!stream.hasMoreFrames && !stream.repeat)
90003c6e:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
            stream.doInvalidateOnNextTick = false;
90003c72:	f884 302b 	strb.w	r3, [r4, #43]	@ 0x2b
            if (!stream.hasMoreFrames && !stream.repeat)
90003c76:	2800      	cmp	r0, #0
90003c78:	d1e5      	bne.n	90003c46 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
90003c7a:	f894 302d 	ldrb.w	r3, [r4, #45]	@ 0x2d
90003c7e:	2b00      	cmp	r3, #0
90003c80:	d1e2      	bne.n	90003c48 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
                stream.isPlaying = false;
90003c82:	f884 0029 	strb.w	r0, [r4, #41]	@ 0x29
    }
90003c86:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
90003c88:	4b03      	ldr	r3, [pc, #12]	@ (90003c98 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x64>)
90003c8a:	21d0      	movs	r1, #208	@ 0xd0
90003c8c:	4a03      	ldr	r2, [pc, #12]	@ (90003c9c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x68>)
90003c8e:	4804      	ldr	r0, [pc, #16]	@ (90003ca0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6c>)
90003c90:	f027 fe16 	bl	9002b8c0 <__assert_func>
90003c94:	24027e9c 	.word	0x24027e9c
90003c98:	9002d2a4 	.word	0x9002d2a4
90003c9c:	9002dd58 	.word	0x9002dd58
90003ca0:	9002d444 	.word	0x9002d444

90003ca4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    {
        // Running in UI thread

        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
90003ca4:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
90003ca8:	b570      	push	{r4, r5, r6, lr}
            if (streams[i].isActive == false)
90003caa:	b9fb      	cbnz	r3, 90003cec <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x48>
            {
                // Reset stream parameters
                streams[i] = Stream();
90003cac:	2201      	movs	r2, #1
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
90003cae:	6b85      	ldr	r5, [r0, #56]	@ 0x38
                streams[i] = Stream();
90003cb0:	60c3      	str	r3, [r0, #12]
90003cb2:	f8a0 202d 	strh.w	r2, [r0, #45]	@ 0x2d
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
90003cb6:	f505 2487 	add.w	r4, r5, #276480	@ 0x43800
        streams[handle].isActive = true;
90003cba:	f880 2028 	strb.w	r2, [r0, #40]	@ 0x28
                streams[i] = Stream();
90003cbe:	6103      	str	r3, [r0, #16]
90003cc0:	6143      	str	r3, [r0, #20]
90003cc2:	6183      	str	r3, [r0, #24]
90003cc4:	61c3      	str	r3, [r0, #28]
90003cc6:	6203      	str	r3, [r0, #32]
90003cc8:	6243      	str	r3, [r0, #36]	@ 0x24
90003cca:	f8c0 3029 	str.w	r3, [r0, #41]	@ 0x29
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
90003cce:	e9d0 260c 	ldrd	r2, r6, [r0, #48]	@ 0x30
90003cd2:	4432      	add	r2, r6
90003cd4:	4294      	cmp	r4, r2
90003cd6:	d810      	bhi.n	90003cfa <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x56>
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
        bufferWidth = width;
90003cd8:	4a0b      	ldr	r2, [pc, #44]	@ (90003d08 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x64>)
        decodeBuffers[handle] = (uint32_t*)topBufferRGB;
90003cda:	6085      	str	r5, [r0, #8]
        topBufferRGB += sizeOfOneDecodeBuffer;
90003cdc:	6384      	str	r4, [r0, #56]	@ 0x38
    }
90003cde:	4618      	mov	r0, r3
        format = bufferFormat;
90003ce0:	f881 3034 	strb.w	r3, [r1, #52]	@ 0x34
        bufferWidth = width;
90003ce4:	f8c1 2036 	str.w	r2, [r1, #54]	@ 0x36
        buffer = videoBuffer;
90003ce8:	630b      	str	r3, [r1, #48]	@ 0x30
90003cea:	bd70      	pop	{r4, r5, r6, pc}

                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90003cec:	4b07      	ldr	r3, [pc, #28]	@ (90003d0c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x68>)
90003cee:	f240 11c5 	movw	r1, #453	@ 0x1c5
90003cf2:	4a07      	ldr	r2, [pc, #28]	@ (90003d10 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x6c>)
90003cf4:	4807      	ldr	r0, [pc, #28]	@ (90003d14 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
90003cf6:	f027 fde3 	bl	9002b8c0 <__assert_func>
            assert(0 && "registerVideoWidget: Unable to allocate RGB buffer!");
90003cfa:	4b07      	ldr	r3, [pc, #28]	@ (90003d18 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x74>)
90003cfc:	2152      	movs	r1, #82	@ 0x52
90003cfe:	4a07      	ldr	r2, [pc, #28]	@ (90003d1c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x78>)
90003d00:	4804      	ldr	r0, [pc, #16]	@ (90003d14 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
90003d02:	f027 fddd 	bl	9002b8c0 <__assert_func>
90003d06:	bf00      	nop
90003d08:	012001e0 	.word	0x012001e0
90003d0c:	9002def8 	.word	0x9002def8
90003d10:	9002df28 	.word	0x9002df28
90003d14:	9002d444 	.word	0x9002d444
90003d18:	9002e0b0 	.word	0x9002e0b0
90003d1c:	9002e0ec 	.word	0x9002e0ec

90003d20 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003d20:	4b08      	ldr	r3, [pc, #32]	@ (90003d44 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
90003d22:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90003d26:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90003d2a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003d2e:	f3bf 8f6f 	isb	sy
90003d32:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
90003d36:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90003d3a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003d3e:	f3bf 8f6f 	isb	sy
}
90003d42:	4770      	bx	lr
90003d44:	e000e100 	.word	0xe000e100

90003d48 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003d48:	4b03      	ldr	r3, [pc, #12]	@ (90003d58 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
90003d4a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90003d4e:	609a      	str	r2, [r3, #8]
90003d50:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
90003d54:	609a      	str	r2, [r3, #8]
}
90003d56:	4770      	bx	lr
90003d58:	e000e100 	.word	0xe000e100

90003d5c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
90003d5c:	b538      	push	{r3, r4, r5, lr}
90003d5e:	4604      	mov	r4, r0
    HAL::initialize();
90003d60:	f011 f925 	bl	90014fae <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
90003d64:	6823      	ldr	r3, [r4, #0]
90003d66:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
90003d68:	f016 ff48 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
90003d6c:	4601      	mov	r1, r0
90003d6e:	4620      	mov	r0, r4
90003d70:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90003d72:	6823      	ldr	r3, [r4, #0]
90003d74:	4a16      	ldr	r2, [pc, #88]	@ (90003dd0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
90003d76:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
90003d7a:	4295      	cmp	r5, r2
90003d7c:	d11c      	bne.n	90003db8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90003d7e:	4a15      	ldr	r2, [pc, #84]	@ (90003dd4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90003d80:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
90003d82:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90003d86:	f502 317f 	add.w	r1, r2, #261120	@ 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90003d8a:	4813      	ldr	r0, [pc, #76]	@ (90003dd8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90003d8c:	e9c4 210f 	strd	r2, r1, [r4, #60]	@ 0x3c
        setAnimationStorage(animationStorage);
90003d90:	4a12      	ldr	r2, [pc, #72]	@ (90003ddc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90003d92:	7005      	strb	r5, [r0, #0]
90003d94:	4293      	cmp	r3, r2
90003d96:	d116      	bne.n	90003dc6 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6a>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90003d98:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
90003d9a:	4a11      	ldr	r2, [pc, #68]	@ (90003de0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90003d9c:	6463      	str	r3, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90003d9e:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma) { pDma = &dma; }
90003da0:	6864      	ldr	r4, [r4, #4]
        sizeBufferRGB = sizeOfBuffer;
90003da2:	f44f 2087 	mov.w	r0, #276480	@ 0x43800
        mjpegDecoders[index] = &decoder;
90003da6:	4b0f      	ldr	r3, [pc, #60]	@ (90003de4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x88>)
90003da8:	490f      	ldr	r1, [pc, #60]	@ (90003de8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x8c>)
        bufferRGB = buffer;
90003daa:	4a10      	ldr	r2, [pc, #64]	@ (90003dec <_ZN20TouchGFXGeneratedHAL10initializeEv+0x90>)
90003dac:	644c      	str	r4, [r1, #68]	@ 0x44
        mjpegDecoders[index] = &decoder;
90003dae:	6059      	str	r1, [r3, #4]
        bufferRGB = buffer;
90003db0:	631a      	str	r2, [r3, #48]	@ 0x30
        sizeBufferRGB = sizeOfBuffer;
90003db2:	e9c3 020d 	strd	r0, r2, [r3, #52]	@ 0x34
}
90003db6:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90003db8:	4a0d      	ldr	r2, [pc, #52]	@ (90003df0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x94>)
90003dba:	2300      	movs	r3, #0
90003dbc:	4620      	mov	r0, r4
90003dbe:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
90003dc2:	47a8      	blx	r5
90003dc4:	e7ec      	b.n	90003da0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
90003dc6:	2100      	movs	r1, #0
90003dc8:	4620      	mov	r0, r4
90003dca:	4798      	blx	r3
90003dcc:	e7e8      	b.n	90003da0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
90003dce:	bf00      	nop
90003dd0:	90001d8d 	.word	0x90001d8d
90003dd4:	d003fc00 	.word	0xd003fc00
90003dd8:	24027e9a 	.word	0x24027e9a
90003ddc:	90001c11 	.word	0x90001c11
90003de0:	24027e9b 	.word	0x24027e9b
90003de4:	240094c0 	.word	0x240094c0
90003de8:	24009508 	.word	0x24009508
90003dec:	d00bf400 	.word	0xd00bf400
90003df0:	d007f800 	.word	0xd007f800

90003df4 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90003df4:	b510      	push	{r4, lr}
        return instance;
90003df6:	4c14      	ldr	r4, [pc, #80]	@ (90003e48 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
90003df8:	6823      	ldr	r3, [r4, #0]
90003dfa:	b323      	cbz	r3, 90003e46 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90003dfc:	4b13      	ldr	r3, [pc, #76]	@ (90003e4c <HAL_LTDC_LineEventCallback+0x58>)
90003dfe:	4a14      	ldr	r2, [pc, #80]	@ (90003e50 <HAL_LTDC_LineEventCallback+0x5c>)
90003e00:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90003e02:	8811      	ldrh	r1, [r2, #0]
90003e04:	428b      	cmp	r3, r1
90003e06:	d00a      	beq.n	90003e1e <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90003e08:	f00a f944 	bl	9000e094 <HAL_LTDC_ProgramLineEvent>
90003e0c:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
90003e0e:	6803      	ldr	r3, [r0, #0]
90003e10:	6a1b      	ldr	r3, [r3, #32]
90003e12:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90003e14:	2000      	movs	r0, #0
        }
    }
90003e16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
90003e1a:	f7fd bead 	b.w	90001b78 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
90003e1e:	4b0d      	ldr	r3, [pc, #52]	@ (90003e54 <HAL_LTDC_LineEventCallback+0x60>)
90003e20:	8819      	ldrh	r1, [r3, #0]
90003e22:	f00a f937 	bl	9000e094 <HAL_LTDC_ProgramLineEvent>
        return instance;
90003e26:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
90003e28:	f892 3066 	ldrb.w	r3, [r2, #102]	@ 0x66
90003e2c:	3301      	adds	r3, #1
90003e2e:	f882 3066 	strb.w	r3, [r2, #102]	@ 0x66
            OSWrappers::signalVSync();
90003e32:	f7ff f885 	bl	90002f40 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
90003e36:	6820      	ldr	r0, [r4, #0]
90003e38:	f011 fe0c 	bl	90015a54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
90003e3c:	2000      	movs	r0, #0
    }
90003e3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
90003e42:	f7fd be6f 	b.w	90001b24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
90003e46:	bd10      	pop	{r4, pc}
90003e48:	24027e9c 	.word	0x24027e9c
90003e4c:	50001000 	.word	0x50001000
90003e50:	240094ba 	.word	0x240094ba
90003e54:	240094b8 	.word	0x240094b8

90003e58 <_GLOBAL__sub_I_mjpegdecoder1>:
}
90003e58:	b538      	push	{r3, r4, r5, lr}
HardwareMJPEGDecoder mjpegdecoder1;
90003e5a:	4815      	ldr	r0, [pc, #84]	@ (90003eb0 <_GLOBAL__sub_I_mjpegdecoder1+0x58>)
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90003e5c:	2500      	movs	r5, #0
90003e5e:	f7fe fc51 	bl	90002704 <_ZN20HardwareMJPEGDecoderC1Ev>
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90003e62:	4c14      	ldr	r4, [pc, #80]	@ (90003eb4 <_GLOBAL__sub_I_mjpegdecoder1+0x5c>)
90003e64:	4914      	ldr	r1, [pc, #80]	@ (90003eb8 <_GLOBAL__sub_I_mjpegdecoder1+0x60>)
                   doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90003e66:	f44f 7380 	mov.w	r3, #256	@ 0x100
        semDecode = SEM_CREATE(); // Binary semaphore
90003e6a:	462a      	mov	r2, r5
90003e6c:	2001      	movs	r0, #1
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90003e6e:	6021      	str	r1, [r4, #0]
        semDecode = SEM_CREATE(); // Binary semaphore
90003e70:	4629      	mov	r1, r5
                   doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90003e72:	85a3      	strh	r3, [r4, #44]	@ 0x2c
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90003e74:	87a3      	strh	r3, [r4, #60]	@ 0x3c
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90003e76:	60e5      	str	r5, [r4, #12]
                   isActive(false), isPlaying(false), isShowingOneFrame(false),
90003e78:	62a5      	str	r5, [r4, #40]	@ 0x28
                   doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90003e7a:	f884 502e 	strb.w	r5, [r4, #46]	@ 0x2e
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90003e7e:	63a5      	str	r5, [r4, #56]	@ 0x38
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90003e80:	f884 503e 	strb.w	r5, [r4, #62]	@ 0x3e
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90003e84:	e9c4 5504 	strd	r5, r5, [r4, #16]
90003e88:	e9c4 5506 	strd	r5, r5, [r4, #24]
                   seek_to_frame(0), skip_frames(0),
90003e8c:	e9c4 5508 	strd	r5, r5, [r4, #32]
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90003e90:	e9c4 550c 	strd	r5, r5, [r4, #48]	@ 0x30
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90003e94:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
90003e98:	e9c4 5501 	strd	r5, r5, [r4, #4]
        semDecode = SEM_CREATE(); // Binary semaphore
90003e9c:	f00d fc4a 	bl	90011734 <osSemaphoreNew>
90003ea0:	4603      	mov	r3, r0
        mutexBuffers = MUTEX_CREATE();
90003ea2:	4628      	mov	r0, r5
        semDecode = SEM_CREATE(); // Binary semaphore
90003ea4:	6423      	str	r3, [r4, #64]	@ 0x40
        mutexBuffers = MUTEX_CREATE();
90003ea6:	f00d fbbd 	bl	90011624 <osMutexNew>
90003eaa:	6460      	str	r0, [r4, #68]	@ 0x44
}
90003eac:	bd38      	pop	{r3, r4, r5, pc}
90003eae:	bf00      	nop
90003eb0:	24009508 	.word	0x24009508
90003eb4:	240094c0 	.word	0x240094c0
90003eb8:	9002e2b8 	.word	0x9002e2b8

90003ebc <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks>:
static uint32_t TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks(uint8_t *pInBuffer,
                                      uint8_t *pOutBuffer,
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{
90003ebc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  int32_t c_red, c_blue, c_green;

  uint8_t *pOutAddr, *pOutAddr2;
  uint8_t *pChrom, *pLum;

  numberMCU = DataCount / YCBCR_420_BLOCK_SIZE;
90003ec0:	4c7b      	ldr	r4, [pc, #492]	@ (900040b0 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x1f4>)
{
90003ec2:	4616      	mov	r6, r2
90003ec4:	b08f      	sub	sp, #60	@ 0x3c
  numberMCU = DataCount / YCBCR_420_BLOCK_SIZE;
90003ec6:	fba4 4203 	umull	r4, r2, r4, r3
  currentMCU = BlockIndex;

  while(currentMCU < (numberMCU + BlockIndex))
90003eca:	eb06 2c12 	add.w	ip, r6, r2, lsr #8
  numberMCU = DataCount / YCBCR_420_BLOCK_SIZE;
90003ece:	0a13      	lsrs	r3, r2, #8
  while(currentMCU < (numberMCU + BlockIndex))
90003ed0:	45b4      	cmp	ip, r6
90003ed2:	f240 80e8 	bls.w	900040a6 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x1ea>
  {
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*16;
90003ed6:	4a77      	ldr	r2, [pc, #476]	@ (900040b4 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x1f8>)
90003ed8:	468e      	mov	lr, r1
90003eda:	930d      	str	r3, [sp, #52]	@ 0x34
90003edc:	4633      	mov	r3, r6
90003ede:	6a51      	ldr	r1, [r2, #36]	@ 0x24
90003ee0:	46f2      	mov	sl, lr
90003ee2:	4f75      	ldr	r7, [pc, #468]	@ (900040b8 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x1fc>)
90003ee4:	f8df 81dc 	ldr.w	r8, [pc, #476]	@ 900040c4 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x208>
90003ee8:	f8df b1dc 	ldr.w	fp, [pc, #476]	@ 900040c8 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x20c>
90003eec:	e9cd 1c0b 	strd	r1, ip, [sp, #44]	@ 0x2c
90003ef0:	4684      	mov	ip, r0
90003ef2:	e009      	b.n	90003f08 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x4c>

        refline += 2*JPEG_ConvertorParams.ScaledWidth;
      }
    }

    pInBuffer +=  YCBCR_420_BLOCK_SIZE;
90003ef4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90003ef6:	4682      	mov	sl, r0
  while(currentMCU < (numberMCU + BlockIndex))
90003ef8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
    pInBuffer +=  YCBCR_420_BLOCK_SIZE;
90003efa:	f8dd c024 	ldr.w	ip, [sp, #36]	@ 0x24
  while(currentMCU < (numberMCU + BlockIndex))
90003efe:	429a      	cmp	r2, r3
    pInBuffer +=  YCBCR_420_BLOCK_SIZE;
90003f00:	f50c 7cc0 	add.w	ip, ip, #384	@ 0x180
  while(currentMCU < (numberMCU + BlockIndex))
90003f04:	f000 80ca 	beq.w	9000409c <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x1e0>
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*16;
90003f08:	011a      	lsls	r2, r3, #4
90003f0a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90003f0c:	3301      	adds	r3, #1
    pChrom = pInBuffer + 256; /* pChroma = pInBuffer + 4*64 */
90003f0e:	f50c 7580 	add.w	r5, ip, #256	@ 0x100
90003f12:	4666      	mov	r6, ip
90003f14:	f8cd c024 	str.w	ip, [sp, #36]	@ 0x24
90003f18:	930a      	str	r3, [sp, #40]	@ 0x28
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*16;
90003f1a:	fbb2 f1f0 	udiv	r1, r2, r0
    yRef = ((currentMCU *16) % JPEG_ConvertorParams.WidthExtend);
90003f1e:	fb00 2211 	mls	r2, r0, r1, r2
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90003f22:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
90003f26:	4650      	mov	r0, sl
90003f28:	0052      	lsls	r2, r2, #1
90003f2a:	eb02 2181 	add.w	r1, r2, r1, lsl #10
    for(i= 0; i <  16; i+=2)
90003f2e:	2200      	movs	r2, #0
90003f30:	4614      	mov	r4, r2
90003f32:	460a      	mov	r2, r1
90003f34:	4621      	mov	r1, r4
      if(refline < JPEG_ConvertorParams.ScaledWidth * 288)
90003f36:	f5b2 2f87 	cmp.w	r2, #276480	@ 0x43800
90003f3a:	d2db      	bcs.n	90003ef4 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x38>
        pOutAddr = pOutBuffer + refline;
90003f3c:	1884      	adds	r4, r0, r2
90003f3e:	46b1      	mov	r9, r6
90003f40:	462b      	mov	r3, r5
90003f42:	9008      	str	r0, [sp, #32]
90003f44:	f104 0a30 	add.w	sl, r4, #48	@ 0x30
90003f48:	f104 0e10 	add.w	lr, r4, #16
90003f4c:	e9cd 6204 	strd	r6, r2, [sp, #16]
90003f50:	e9cd 1506 	strd	r1, r5, [sp, #24]
90003f54:	f8cd a00c 	str.w	sl, [sp, #12]
90003f58:	f50e 766c 	add.w	r6, lr, #944	@ 0x3b0
90003f5c:	f1ae 0510 	sub.w	r5, lr, #16
          for(j=0; j < 8; j+=2)
90003f60:	f103 3cff 	add.w	ip, r3, #4294967295
90003f64:	464c      	mov	r4, r9
90003f66:	e9cd 9301 	strd	r9, r3, [sp, #4]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90003f6a:	f81c 2f01 	ldrb.w	r2, [ip, #1]!
            pOutAddr += JPEG_BYTES_PER_PIXEL * 2;
90003f6e:	3504      	adds	r5, #4
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90003f70:	4852      	ldr	r0, [pc, #328]	@ (900040bc <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x200>)
          for(j=0; j < 8; j+=2)
90003f72:	3402      	adds	r4, #2
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
90003f74:	f89c 1040 	ldrb.w	r1, [ip, #64]	@ 0x40
            pOutAddr2 += JPEG_BYTES_PER_PIXEL * 2;
90003f78:	3604      	adds	r6, #4
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90003f7a:	f858 3022 	ldr.w	r3, [r8, r2, lsl #2]
          for(j=0; j < 8; j+=2)
90003f7e:	4575      	cmp	r5, lr
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90003f80:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90003f84:	f857 2021 	ldr.w	r2, [r7, r1, lsl #2]
            ycomp = (int32_t)(*(pLum +j));
90003f88:	f814 9c02 	ldrb.w	r9, [r4, #-2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003f8c:	4458      	add	r0, fp
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90003f8e:	4413      	add	r3, r2
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
90003f90:	4a4b      	ldr	r2, [pc, #300]	@ (900040c0 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x204>)
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003f92:	eb0b 4323 	add.w	r3, fp, r3, asr #16
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
90003f96:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003f9a:	eb00 0209 	add.w	r2, r0, r9
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003f9e:	4459      	add	r1, fp
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003fa0:	eb03 0a09 	add.w	sl, r3, r9
90003fa4:	f892 2100 	ldrb.w	r2, [r2, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003fa8:	4489      	add	r9, r1
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003faa:	f89a a100 	ldrb.w	sl, [sl, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003fae:	f899 9100 	ldrb.w	r9, [r9, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003fb2:	ea4f 0a9a 	mov.w	sl, sl, lsr #2
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003fb6:	ea4f 09d9 	mov.w	r9, r9, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003fba:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
90003fbe:	ea4a 2ac9 	orr.w	sl, sl, r9, lsl #11
90003fc2:	ea4a 0ad2 	orr.w	sl, sl, r2, lsr #3
            *(__IO uint16_t *)pOutAddr =
90003fc6:	f825 ac04 	strh.w	sl, [r5, #-4]
            ycomp = (int32_t)(*(pLum +j +1));
90003fca:	f814 9c01 	ldrb.w	r9, [r4, #-1]
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003fce:	eb03 0209 	add.w	r2, r3, r9
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003fd2:	eb01 0a09 	add.w	sl, r1, r9
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90003fd6:	4481      	add	r9, r0
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003fd8:	f892 2100 	ldrb.w	r2, [r2, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003fdc:	f89a a100 	ldrb.w	sl, [sl, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003fe0:	ea4f 0292 	mov.w	r2, r2, lsr #2
90003fe4:	f899 9100 	ldrb.w	r9, [r9, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90003fe8:	ea4f 0ada 	mov.w	sl, sl, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90003fec:	ea4f 1242 	mov.w	r2, r2, lsl #5
90003ff0:	ea42 22ca 	orr.w	r2, r2, sl, lsl #11
90003ff4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
            *((__IO uint16_t *)(pOutAddr + 2)) =
90003ff8:	f825 2c02 	strh.w	r2, [r5, #-2]
            ycomp = (int32_t)(*(pLum +j +8));
90003ffc:	f894 9006 	ldrb.w	r9, [r4, #6]
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004000:	eb03 0209 	add.w	r2, r3, r9
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004004:	eb01 0a09 	add.w	sl, r1, r9
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90004008:	4481      	add	r9, r0
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000400a:	f892 2100 	ldrb.w	r2, [r2, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000400e:	f89a a100 	ldrb.w	sl, [sl, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004012:	ea4f 0292 	mov.w	r2, r2, lsr #2
90004016:	f899 9100 	ldrb.w	r9, [r9, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000401a:	ea4f 0ada 	mov.w	sl, sl, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000401e:	ea4f 1242 	mov.w	r2, r2, lsl #5
90004022:	ea42 22ca 	orr.w	r2, r2, sl, lsl #11
90004026:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
            *(__IO uint16_t *)pOutAddr2 =
9000402a:	f826 2c04 	strh.w	r2, [r6, #-4]
            ycomp = (int32_t)(*(pLum +j +8 +1));
9000402e:	79e2      	ldrb	r2, [r4, #7]
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004030:	4413      	add	r3, r2
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004032:	4411      	add	r1, r2
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90004034:	4402      	add	r2, r0
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004036:	f893 3100 	ldrb.w	r3, [r3, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000403a:	f891 1100 	ldrb.w	r1, [r1, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000403e:	ea4f 0393 	mov.w	r3, r3, lsr #2
90004042:	f892 2100 	ldrb.w	r2, [r2, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004046:	ea4f 01d1 	mov.w	r1, r1, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000404a:	ea4f 1343 	mov.w	r3, r3, lsl #5
9000404e:	ea43 23c1 	orr.w	r3, r3, r1, lsl #11
90004052:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
            *((__IO uint16_t *)(pOutAddr2 +2)) =
90004056:	f826 3c02 	strh.w	r3, [r6, #-2]
          for(j=0; j < 8; j+=2)
9000405a:	d186      	bne.n	90003f6a <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0xae>
        for(k= 0; k<2; k++)
9000405c:	f105 0e10 	add.w	lr, r5, #16
90004060:	9a03      	ldr	r2, [sp, #12]
90004062:	e9dd 9301 	ldrd	r9, r3, [sp, #4]
90004066:	4596      	cmp	lr, r2
            pChrom++;
90004068:	f103 0304 	add.w	r3, r3, #4
          pLum += 64;
9000406c:	f109 0940 	add.w	r9, r9, #64	@ 0x40
        for(k= 0; k<2; k++)
90004070:	f47f af72 	bne.w	90003f58 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x9c>
    for(i= 0; i <  16; i+=2)
90004074:	9808      	ldr	r0, [sp, #32]
90004076:	e9dd 1506 	ldrd	r1, r5, [sp, #24]
9000407a:	e9dd 6204 	ldrd	r6, r2, [sp, #16]
9000407e:	3102      	adds	r1, #2
90004080:	2910      	cmp	r1, #16
90004082:	f43f af37 	beq.w	90003ef4 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x38>
      if(i == 8)
90004086:	2908      	cmp	r1, #8
90004088:	d004      	beq.n	90004094 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x1d8>
        pLum = pLum - 128 + 16;
9000408a:	3610      	adds	r6, #16
            pChrom++;
9000408c:	3508      	adds	r5, #8
        refline += 2*JPEG_ConvertorParams.ScaledWidth;
9000408e:	f502 62f0 	add.w	r2, r2, #1920	@ 0x780
90004092:	e750      	b.n	90003f36 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x7a>
        pLum = pInBuffer + 128;
90004094:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90004096:	f103 0680 	add.w	r6, r3, #128	@ 0x80
9000409a:	e7f7      	b.n	9000408c <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x1d0>
9000409c:	f44f 7270 	mov.w	r2, #960	@ 0x3c0
900040a0:	4904      	ldr	r1, [pc, #16]	@ (900040b4 <TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x1f8>)
900040a2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900040a4:	628a      	str	r2, [r1, #40]	@ 0x28
  }
  return numberMCU;
}
900040a6:	4618      	mov	r0, r3
900040a8:	b00f      	add	sp, #60	@ 0x3c
900040aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900040ae:	bf00      	nop
900040b0:	aaaaaaab 	.word	0xaaaaaaab
900040b4:	2400d550 	.word	0x2400d550
900040b8:	2400c950 	.word	0x2400c950
900040bc:	2400cd50 	.word	0x2400cd50
900040c0:	2400d150 	.word	0x2400d150
900040c4:	2400c550 	.word	0x2400c550
900040c8:	9002e2f0 	.word	0x9002e2f0

900040cc <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_YCbCr422_ARGB_ConvertBlocks(uint8_t *pInBuffer,
                                      uint8_t *pOutBuffer,
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{
900040cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint8_t *pChrom, *pLum;

  numberMCU = DataCount / YCBCR_422_BLOCK_SIZE;
  currentMCU = BlockIndex;

  while(currentMCU < (numberMCU + BlockIndex))
900040d0:	eb02 2613 	add.w	r6, r2, r3, lsr #8
{
900040d4:	b08f      	sub	sp, #60	@ 0x3c
  numberMCU = DataCount / YCBCR_422_BLOCK_SIZE;
900040d6:	0a1c      	lsrs	r4, r3, #8
  while(currentMCU < (numberMCU + BlockIndex))
900040d8:	42b2      	cmp	r2, r6
900040da:	f080 8156 	bcs.w	9000438a <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2be>
  {
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*8;
900040de:	4bad      	ldr	r3, [pc, #692]	@ (90004394 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2c8>)
900040e0:	468e      	mov	lr, r1
900040e2:	4dad      	ldr	r5, [pc, #692]	@ (90004398 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2cc>)

    pLum = pInBuffer;

    for(i= 0; i <  8; i++)
    {
       if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
900040e4:	f8d3 c010 	ldr.w	ip, [r3, #16]
900040e8:	f8df a2b0 	ldr.w	sl, [pc, #688]	@ 9000439c <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2d0>
900040ec:	f8df 92b0 	ldr.w	r9, [pc, #688]	@ 900043a0 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2d4>
900040f0:	f8df b2b0 	ldr.w	fp, [pc, #688]	@ 900043a4 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2d8>
900040f4:	f8df 82b0 	ldr.w	r8, [pc, #688]	@ 900043a8 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2dc>
900040f8:	f8cd c01c 	str.w	ip, [sp, #28]
900040fc:	f8cd e020 	str.w	lr, [sp, #32]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90004100:	e9d3 7109 	ldrd	r7, r1, [r3, #36]	@ 0x24
90004104:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
90004108:	9106      	str	r1, [sp, #24]
9000410a:	970b      	str	r7, [sp, #44]	@ 0x2c
9000410c:	e007      	b.n	9000411e <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x52>

        refline += JPEG_ConvertorParams.ScaledWidth;
      }
    }

    pInBuffer +=  YCBCR_422_BLOCK_SIZE;
9000410e:	e9dd 0209 	ldrd	r0, r2, [sp, #36]	@ 0x24
  while(currentMCU < (numberMCU + BlockIndex))
90004112:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    pInBuffer +=  YCBCR_422_BLOCK_SIZE;
90004114:	f500 7080 	add.w	r0, r0, #256	@ 0x100
  while(currentMCU < (numberMCU + BlockIndex))
90004118:	429a      	cmp	r2, r3
9000411a:	f000 8135 	beq.w	90004388 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2bc>
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*8;
9000411e:	0113      	lsls	r3, r2, #4
90004120:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
    pChrom = pInBuffer + 128; /* pChroma = pInBuffer + 2*64 */
90004122:	f04f 0e08 	mov.w	lr, #8
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*8;
90004126:	3201      	adds	r2, #1
    pChrom = pInBuffer + 128; /* pChroma = pInBuffer + 2*64 */
90004128:	f100 0680 	add.w	r6, r0, #128	@ 0x80
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*8;
9000412c:	fbb3 f1f4 	udiv	r1, r3, r4
    yRef = ((currentMCU *16) % JPEG_ConvertorParams.WidthExtend);
90004130:	fb04 3311 	mls	r3, r4, r1, r3
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90004134:	9c06      	ldr	r4, [sp, #24]
90004136:	005b      	lsls	r3, r3, #1
90004138:	fb04 f101 	mul.w	r1, r4, r1
9000413c:	eb03 0cc1 	add.w	ip, r3, r1, lsl #3
    pChrom = pInBuffer + 128; /* pChroma = pInBuffer + 2*64 */
90004140:	4673      	mov	r3, lr
90004142:	4686      	mov	lr, r0
90004144:	461f      	mov	r7, r3
90004146:	e9cd 0209 	strd	r0, r2, [sp, #36]	@ 0x24
       if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
9000414a:	9b07      	ldr	r3, [sp, #28]
9000414c:	4563      	cmp	r3, ip
9000414e:	d9de      	bls.n	9000410e <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x42>
        pOutAddr = pOutBuffer + refline;
90004150:	9b08      	ldr	r3, [sp, #32]
90004152:	f10e 0140 	add.w	r1, lr, #64	@ 0x40
90004156:	1d32      	adds	r2, r6, #4
90004158:	9705      	str	r7, [sp, #20]
9000415a:	4463      	add	r3, ip
        for(k= 0; k<2; k++)
9000415c:	f103 0020 	add.w	r0, r3, #32
90004160:	e9cd ec03 	strd	lr, ip, [sp, #12]
90004164:	e9cd 0601 	strd	r0, r6, [sp, #4]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
90004168:	f892 703c 	ldrb.w	r7, [r2, #60]	@ 0x3c
            pOutAddr += JPEG_BYTES_PER_PIXEL * 2;
9000416c:	3310      	adds	r3, #16
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
9000416e:	f812 0c04 	ldrb.w	r0, [r2, #-4]
        for(k= 0; k<2; k++)
90004172:	3140      	adds	r1, #64	@ 0x40
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
90004174:	f85a 6027 	ldr.w	r6, [sl, r7, lsl #2]
        for(k= 0; k<2; k++)
90004178:	3204      	adds	r2, #4
            ycomp = (int32_t)(*(pLum +j));
9000417a:	f811 cc80 	ldrb.w	ip, [r1, #-128]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
9000417e:	f855 4020 	ldr.w	r4, [r5, r0, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004182:	4446      	add	r6, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90004184:	f85b 0020 	ldr.w	r0, [fp, r0, lsl #2]
90004188:	f859 7027 	ldr.w	r7, [r9, r7, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9000418c:	4444      	add	r4, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000418e:	4407      	add	r7, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004190:	eb06 000c 	add.w	r0, r6, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004194:	eb08 4727 	add.w	r7, r8, r7, asr #16
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004198:	f890 e100 	ldrb.w	lr, [r0, #256]	@ 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9000419c:	eb04 000c 	add.w	r0, r4, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900041a0:	44bc      	add	ip, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900041a2:	ea4f 0ede 	mov.w	lr, lr, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900041a6:	f890 0100 	ldrb.w	r0, [r0, #256]	@ 0x100
900041aa:	f89c c100 	ldrb.w	ip, [ip, #256]	@ 0x100
900041ae:	08c0      	lsrs	r0, r0, #3
900041b0:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
900041b4:	ea40 20ce 	orr.w	r0, r0, lr, lsl #11
900041b8:	ea40 104c 	orr.w	r0, r0, ip, lsl #5
            *(__IO uint16_t *)pOutAddr =
900041bc:	f823 0c10 	strh.w	r0, [r3, #-16]
            ycomp = (int32_t)(*(pLum +j +1));
900041c0:	f811 0c7f 	ldrb.w	r0, [r1, #-127]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900041c4:	4406      	add	r6, r0
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900041c6:	4404      	add	r4, r0
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900041c8:	4438      	add	r0, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900041ca:	f896 6100 	ldrb.w	r6, [r6, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900041ce:	f894 4100 	ldrb.w	r4, [r4, #256]	@ 0x100
900041d2:	f890 0100 	ldrb.w	r0, [r0, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900041d6:	08f6      	lsrs	r6, r6, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900041d8:	08e4      	lsrs	r4, r4, #3
900041da:	0880      	lsrs	r0, r0, #2
900041dc:	ea44 24c6 	orr.w	r4, r4, r6, lsl #11
900041e0:	ea44 1440 	orr.w	r4, r4, r0, lsl #5
            *((__IO uint16_t *)(pOutAddr + 2)) =
900041e4:	f823 4c0e 	strh.w	r4, [r3, #-14]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900041e8:	f892 7039 	ldrb.w	r7, [r2, #57]	@ 0x39
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900041ec:	f812 0c07 	ldrb.w	r0, [r2, #-7]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900041f0:	f85a 6027 	ldr.w	r6, [sl, r7, lsl #2]
            ycomp = (int32_t)(*(pLum +j));
900041f4:	f811 cc7e 	ldrb.w	ip, [r1, #-126]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900041f8:	f855 4020 	ldr.w	r4, [r5, r0, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900041fc:	4446      	add	r6, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900041fe:	f85b 0020 	ldr.w	r0, [fp, r0, lsl #2]
90004202:	f859 7027 	ldr.w	r7, [r9, r7, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90004206:	4444      	add	r4, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90004208:	4407      	add	r7, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000420a:	eb06 000c 	add.w	r0, r6, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000420e:	eb08 4727 	add.w	r7, r8, r7, asr #16
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004212:	f890 e100 	ldrb.w	lr, [r0, #256]	@ 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90004216:	eb04 000c 	add.w	r0, r4, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000421a:	44bc      	add	ip, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000421c:	ea4f 0ede 	mov.w	lr, lr, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004220:	f890 0100 	ldrb.w	r0, [r0, #256]	@ 0x100
90004224:	f89c c100 	ldrb.w	ip, [ip, #256]	@ 0x100
90004228:	08c0      	lsrs	r0, r0, #3
9000422a:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
9000422e:	ea40 20ce 	orr.w	r0, r0, lr, lsl #11
90004232:	ea40 104c 	orr.w	r0, r0, ip, lsl #5
            *(__IO uint16_t *)pOutAddr =
90004236:	f823 0c0c 	strh.w	r0, [r3, #-12]
            ycomp = (int32_t)(*(pLum +j +1));
9000423a:	f811 0c7d 	ldrb.w	r0, [r1, #-125]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000423e:	4406      	add	r6, r0
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90004240:	4404      	add	r4, r0
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004242:	4438      	add	r0, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004244:	f896 6100 	ldrb.w	r6, [r6, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004248:	f894 4100 	ldrb.w	r4, [r4, #256]	@ 0x100
9000424c:	f890 0100 	ldrb.w	r0, [r0, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004250:	08f6      	lsrs	r6, r6, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004252:	08e4      	lsrs	r4, r4, #3
90004254:	0880      	lsrs	r0, r0, #2
90004256:	ea44 24c6 	orr.w	r4, r4, r6, lsl #11
9000425a:	ea44 1440 	orr.w	r4, r4, r0, lsl #5
            *((__IO uint16_t *)(pOutAddr + 2)) =
9000425e:	f823 4c0a 	strh.w	r4, [r3, #-10]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90004262:	f812 0c06 	ldrb.w	r0, [r2, #-6]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
90004266:	f892 703a 	ldrb.w	r7, [r2, #58]	@ 0x3a
            ycomp = (int32_t)(*(pLum +j));
9000426a:	f811 cc7c 	ldrb.w	ip, [r1, #-124]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
9000426e:	f85a 6027 	ldr.w	r6, [sl, r7, lsl #2]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90004272:	f855 4020 	ldr.w	r4, [r5, r0, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90004276:	f859 7027 	ldr.w	r7, [r9, r7, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000427a:	4446      	add	r6, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000427c:	f85b 0020 	ldr.w	r0, [fp, r0, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90004280:	4444      	add	r4, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90004282:	4407      	add	r7, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004284:	eb06 000c 	add.w	r0, r6, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004288:	eb08 4727 	add.w	r7, r8, r7, asr #16
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000428c:	f890 e100 	ldrb.w	lr, [r0, #256]	@ 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90004290:	eb04 000c 	add.w	r0, r4, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004294:	44bc      	add	ip, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004296:	ea4f 0ede 	mov.w	lr, lr, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000429a:	f890 0100 	ldrb.w	r0, [r0, #256]	@ 0x100
9000429e:	f89c c100 	ldrb.w	ip, [ip, #256]	@ 0x100
900042a2:	08c0      	lsrs	r0, r0, #3
900042a4:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
900042a8:	ea40 20ce 	orr.w	r0, r0, lr, lsl #11
900042ac:	ea40 104c 	orr.w	r0, r0, ip, lsl #5
            *(__IO uint16_t *)pOutAddr =
900042b0:	f823 0c08 	strh.w	r0, [r3, #-8]
            ycomp = (int32_t)(*(pLum +j +1));
900042b4:	f811 0c7b 	ldrb.w	r0, [r1, #-123]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900042b8:	4406      	add	r6, r0
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900042ba:	4404      	add	r4, r0
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900042bc:	4438      	add	r0, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900042be:	f896 6100 	ldrb.w	r6, [r6, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900042c2:	f894 4100 	ldrb.w	r4, [r4, #256]	@ 0x100
900042c6:	f890 0100 	ldrb.w	r0, [r0, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900042ca:	08f6      	lsrs	r6, r6, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900042cc:	08e4      	lsrs	r4, r4, #3
900042ce:	0880      	lsrs	r0, r0, #2
900042d0:	ea44 24c6 	orr.w	r4, r4, r6, lsl #11
900042d4:	ea44 1440 	orr.w	r4, r4, r0, lsl #5
            *((__IO uint16_t *)(pOutAddr + 2)) =
900042d8:	f823 4c06 	strh.w	r4, [r3, #-6]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900042dc:	f892 703b 	ldrb.w	r7, [r2, #59]	@ 0x3b
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900042e0:	f812 0c05 	ldrb.w	r0, [r2, #-5]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900042e4:	f85a 6027 	ldr.w	r6, [sl, r7, lsl #2]
            ycomp = (int32_t)(*(pLum +j));
900042e8:	f811 cc7a 	ldrb.w	ip, [r1, #-122]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900042ec:	f855 4020 	ldr.w	r4, [r5, r0, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900042f0:	4446      	add	r6, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900042f2:	f85b 0020 	ldr.w	r0, [fp, r0, lsl #2]
900042f6:	f859 7027 	ldr.w	r7, [r9, r7, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900042fa:	4444      	add	r4, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900042fc:	4407      	add	r7, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900042fe:	eb06 000c 	add.w	r0, r6, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004302:	eb08 4727 	add.w	r7, r8, r7, asr #16
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004306:	f890 e100 	ldrb.w	lr, [r0, #256]	@ 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9000430a:	eb04 000c 	add.w	r0, r4, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000430e:	44bc      	add	ip, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004310:	ea4f 0ede 	mov.w	lr, lr, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004314:	f890 0100 	ldrb.w	r0, [r0, #256]	@ 0x100
90004318:	f89c c100 	ldrb.w	ip, [ip, #256]	@ 0x100
9000431c:	08c0      	lsrs	r0, r0, #3
9000431e:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
90004322:	ea40 20ce 	orr.w	r0, r0, lr, lsl #11
90004326:	ea40 104c 	orr.w	r0, r0, ip, lsl #5
            *(__IO uint16_t *)pOutAddr =
9000432a:	f823 0c04 	strh.w	r0, [r3, #-4]
            ycomp = (int32_t)(*(pLum +j +1));
9000432e:	f811 0c79 	ldrb.w	r0, [r1, #-121]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004332:	4406      	add	r6, r0
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90004334:	4404      	add	r4, r0
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004336:	4438      	add	r0, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004338:	f896 6100 	ldrb.w	r6, [r6, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000433c:	f894 4100 	ldrb.w	r4, [r4, #256]	@ 0x100
90004340:	f890 0100 	ldrb.w	r0, [r0, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004344:	08f6      	lsrs	r6, r6, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004346:	08e4      	lsrs	r4, r4, #3
90004348:	0880      	lsrs	r0, r0, #2
9000434a:	ea44 24c6 	orr.w	r4, r4, r6, lsl #11
9000434e:	ea44 1440 	orr.w	r4, r4, r0, lsl #5
            *((__IO uint16_t *)(pOutAddr + 2)) =
90004352:	f823 4c02 	strh.w	r4, [r3, #-2]
        for(k= 0; k<2; k++)
90004356:	9801      	ldr	r0, [sp, #4]
90004358:	4283      	cmp	r3, r0
9000435a:	f47f af05 	bne.w	90004168 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x9c>
        refline += JPEG_ConvertorParams.ScaledWidth;
9000435e:	9b06      	ldr	r3, [sp, #24]
            pChrom++;
90004360:	e9dd c704 	ldrd	ip, r7, [sp, #16]
90004364:	e9dd 6e02 	ldrd	r6, lr, [sp, #8]
    for(i= 0; i <  8; i++)
90004368:	3f01      	subs	r7, #1
        refline += JPEG_ConvertorParams.ScaledWidth;
9000436a:	449c      	add	ip, r3
            pChrom++;
9000436c:	f106 0608 	add.w	r6, r6, #8
        pLum = pLum - 128 + 8;
90004370:	f10e 0e08 	add.w	lr, lr, #8
    for(i= 0; i <  8; i++)
90004374:	f47f aee9 	bne.w	9000414a <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x7e>
  while(currentMCU < (numberMCU + BlockIndex))
90004378:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    pInBuffer +=  YCBCR_422_BLOCK_SIZE;
9000437a:	e9dd 0209 	ldrd	r0, r2, [sp, #36]	@ 0x24
  while(currentMCU < (numberMCU + BlockIndex))
9000437e:	429a      	cmp	r2, r3
    pInBuffer +=  YCBCR_422_BLOCK_SIZE;
90004380:	f500 7080 	add.w	r0, r0, #256	@ 0x100
  while(currentMCU < (numberMCU + BlockIndex))
90004384:	f47f aecb 	bne.w	9000411e <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x52>
90004388:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
  }
  return numberMCU;
}
9000438a:	4620      	mov	r0, r4
9000438c:	b00f      	add	sp, #60	@ 0x3c
9000438e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90004392:	bf00      	nop
90004394:	2400d550 	.word	0x2400d550
90004398:	2400cd50 	.word	0x2400cd50
9000439c:	2400d150 	.word	0x2400d150
900043a0:	2400c950 	.word	0x2400c950
900043a4:	2400c550 	.word	0x2400c550
900043a8:	9002e2f0 	.word	0x9002e2f0

900043ac <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_YCbCr444_ARGB_ConvertBlocks(uint8_t *pInBuffer,
                                      uint8_t *pOutBuffer,
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{
900043ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  int32_t c_red, c_blue, c_green;

  uint8_t *pOutAddr;
  uint8_t *pChrom, *pLum;

  numberMCU = DataCount / YCBCR_444_BLOCK_SIZE;
900043b0:	4cb1      	ldr	r4, [pc, #708]	@ (90004678 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2cc>)
{
900043b2:	4691      	mov	r9, r2
900043b4:	b08b      	sub	sp, #44	@ 0x2c
  numberMCU = DataCount / YCBCR_444_BLOCK_SIZE;
900043b6:	fba4 4203 	umull	r4, r2, r4, r3
{
900043ba:	9102      	str	r1, [sp, #8]
  currentMCU = BlockIndex;

  while(currentMCU < (numberMCU + BlockIndex))
900043bc:	eb09 1bd2 	add.w	fp, r9, r2, lsr #7
  numberMCU = DataCount / YCBCR_444_BLOCK_SIZE;
900043c0:	09d3      	lsrs	r3, r2, #7
  while(currentMCU < (numberMCU + BlockIndex))
900043c2:	45d9      	cmp	r9, fp
900043c4:	f080 8153 	bcs.w	9000466e <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2c2>
  {

    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
900043c8:	4aac      	ldr	r2, [pc, #688]	@ (9000467c <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2d0>)
900043ca:	4682      	mov	sl, r0
#elif (JPEG_RGB_FORMAT == JPEG_RGB565)

            ycomp = (int32_t)(*(pLum +j));

            *(__IO uint16_t *)pOutAddr =
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900043cc:	4cac      	ldr	r4, [pc, #688]	@ (90004680 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2d4>)
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900043ce:	f8df e2b8 	ldr.w	lr, [pc, #696]	@ 90004688 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2dc>
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900043d2:	f8df c2b8 	ldr.w	ip, [pc, #696]	@ 9000468c <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2e0>
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900043d6:	48ab      	ldr	r0, [pc, #684]	@ (90004684 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2d8>)
900043d8:	f8df 82b4 	ldr.w	r8, [pc, #692]	@ 90004690 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2e4>
900043dc:	9309      	str	r3, [sp, #36]	@ 0x24
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
900043de:	e9d2 6109 	ldrd	r6, r1, [r2, #36]	@ 0x24
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
900043e2:	6912      	ldr	r2, [r2, #16]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
900043e4:	9103      	str	r1, [sp, #12]
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
900043e6:	9206      	str	r2, [sp, #24]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900043e8:	e9cd 6b07 	strd	r6, fp, [sp, #28]
900043ec:	e9cd a904 	strd	sl, r9, [sp, #16]
900043f0:	e007      	b.n	90004402 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x56>

        refline += JPEG_ConvertorParams.ScaledWidth;
      }
    }

    pInBuffer +=  YCBCR_444_BLOCK_SIZE;
900043f2:	9b04      	ldr	r3, [sp, #16]
  while(currentMCU < (numberMCU + BlockIndex))
900043f4:	9a08      	ldr	r2, [sp, #32]
    pInBuffer +=  YCBCR_444_BLOCK_SIZE;
900043f6:	33c0      	adds	r3, #192	@ 0xc0
900043f8:	9304      	str	r3, [sp, #16]
  while(currentMCU < (numberMCU + BlockIndex))
900043fa:	9b05      	ldr	r3, [sp, #20]
900043fc:	4293      	cmp	r3, r2
900043fe:	f000 8135 	beq.w	9000466c <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2c0>
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90004402:	9e05      	ldr	r6, [sp, #20]
90004404:	9f07      	ldr	r7, [sp, #28]
90004406:	00f1      	lsls	r1, r6, #3
90004408:	3601      	adds	r6, #1
    pChrom = pInBuffer + 64; /* pChroma = pInBuffer + 4*64 */
9000440a:	9a04      	ldr	r2, [sp, #16]
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
9000440c:	9605      	str	r6, [sp, #20]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
9000440e:	9e03      	ldr	r6, [sp, #12]
    pChrom = pInBuffer + 64; /* pChroma = pInBuffer + 4*64 */
90004410:	f102 0340 	add.w	r3, r2, #64	@ 0x40
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90004414:	fbb1 f5f7 	udiv	r5, r1, r7
    yRef = ((currentMCU *8) % JPEG_ConvertorParams.WidthExtend);
90004418:	fb07 1115 	mls	r1, r7, r5, r1
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
9000441c:	fb06 f505 	mul.w	r5, r6, r5
90004420:	0049      	lsls	r1, r1, #1
90004422:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
    pChrom = pInBuffer + 64; /* pChroma = pInBuffer + 4*64 */
90004426:	2508      	movs	r5, #8
90004428:	468a      	mov	sl, r1
9000442a:	9501      	str	r5, [sp, #4]
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
9000442c:	9906      	ldr	r1, [sp, #24]
9000442e:	4551      	cmp	r1, sl
90004430:	d9df      	bls.n	900043f2 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x46>
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
90004432:	f893 7040 	ldrb.w	r7, [r3, #64]	@ 0x40
          pLum += 8;
90004436:	3208      	adds	r2, #8
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90004438:	7819      	ldrb	r1, [r3, #0]
            pChrom++;
9000443a:	3308      	adds	r3, #8
            ycomp = (int32_t)(*(pLum +j));
9000443c:	f812 5c08 	ldrb.w	r5, [r2, #-8]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90004440:	f850 9027 	ldr.w	r9, [r0, r7, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004444:	f85e 6027 	ldr.w	r6, [lr, r7, lsl #2]
90004448:	4425      	add	r5, r4
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9000444a:	f85c 7021 	ldr.w	r7, [ip, r1, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000444e:	f858 1021 	ldr.w	r1, [r8, r1, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004452:	442e      	add	r6, r5
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90004454:	442f      	add	r7, r5
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90004456:	4449      	add	r1, r9
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004458:	f896 6100 	ldrb.w	r6, [r6, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000445c:	eb05 4121 	add.w	r1, r5, r1, asr #16
90004460:	f897 5100 	ldrb.w	r5, [r7, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004464:	08f6      	lsrs	r6, r6, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004466:	f891 1100 	ldrb.w	r1, [r1, #256]	@ 0x100
9000446a:	08ed      	lsrs	r5, r5, #3
9000446c:	0889      	lsrs	r1, r1, #2
9000446e:	ea45 25c6 	orr.w	r5, r5, r6, lsl #11
90004472:	ea45 1541 	orr.w	r5, r5, r1, lsl #5
            *(__IO uint16_t *)pOutAddr =
90004476:	9902      	ldr	r1, [sp, #8]
90004478:	f821 500a 	strh.w	r5, [r1, sl]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
9000447c:	f893 7039 	ldrb.w	r7, [r3, #57]	@ 0x39
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90004480:	f813 1c07 	ldrb.w	r1, [r3, #-7]
            ycomp = (int32_t)(*(pLum +j));
90004484:	f812 5c07 	ldrb.w	r5, [r2, #-7]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90004488:	f850 9027 	ldr.w	r9, [r0, r7, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000448c:	4425      	add	r5, r4
9000448e:	f85e 6027 	ldr.w	r6, [lr, r7, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90004492:	f85c 7021 	ldr.w	r7, [ip, r1, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90004496:	f858 1021 	ldr.w	r1, [r8, r1, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000449a:	442e      	add	r6, r5
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9000449c:	442f      	add	r7, r5
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000449e:	4449      	add	r1, r9
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900044a0:	f896 6100 	ldrb.w	r6, [r6, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900044a4:	eb05 4121 	add.w	r1, r5, r1, asr #16
900044a8:	f897 5100 	ldrb.w	r5, [r7, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900044ac:	08f6      	lsrs	r6, r6, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900044ae:	f891 1100 	ldrb.w	r1, [r1, #256]	@ 0x100
900044b2:	08ed      	lsrs	r5, r5, #3
900044b4:	0889      	lsrs	r1, r1, #2
900044b6:	ea45 25c6 	orr.w	r5, r5, r6, lsl #11
900044ba:	ea45 1541 	orr.w	r5, r5, r1, lsl #5
        pOutAddr = pOutBuffer+ refline;
900044be:	9902      	ldr	r1, [sp, #8]
900044c0:	4451      	add	r1, sl
            *(__IO uint16_t *)pOutAddr =
900044c2:	804d      	strh	r5, [r1, #2]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900044c4:	f893 903a 	ldrb.w	r9, [r3, #58]	@ 0x3a
            ycomp = (int32_t)(*(pLum +j));
900044c8:	f812 6c06 	ldrb.w	r6, [r2, #-6]
        refline += JPEG_ConvertorParams.ScaledWidth;
900044cc:	9d03      	ldr	r5, [sp, #12]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900044ce:	4426      	add	r6, r4
900044d0:	f85e 7029 	ldr.w	r7, [lr, r9, lsl #2]
        refline += JPEG_ConvertorParams.ScaledWidth;
900044d4:	44aa      	add	sl, r5
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900044d6:	f813 5c06 	ldrb.w	r5, [r3, #-6]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900044da:	4437      	add	r7, r6
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900044dc:	f850 b029 	ldr.w	fp, [r0, r9, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900044e0:	f85c 9025 	ldr.w	r9, [ip, r5, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900044e4:	f897 7100 	ldrb.w	r7, [r7, #256]	@ 0x100
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900044e8:	f858 5025 	ldr.w	r5, [r8, r5, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900044ec:	44b1      	add	r9, r6
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900044ee:	08ff      	lsrs	r7, r7, #3
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900044f0:	445d      	add	r5, fp
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900044f2:	eb06 4525 	add.w	r5, r6, r5, asr #16
900044f6:	f899 6100 	ldrb.w	r6, [r9, #256]	@ 0x100
900044fa:	f895 5100 	ldrb.w	r5, [r5, #256]	@ 0x100
900044fe:	08f6      	lsrs	r6, r6, #3
90004500:	08ad      	lsrs	r5, r5, #2
90004502:	ea46 26c7 	orr.w	r6, r6, r7, lsl #11
90004506:	ea46 1645 	orr.w	r6, r6, r5, lsl #5
            *(__IO uint16_t *)pOutAddr =
9000450a:	808e      	strh	r6, [r1, #4]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
9000450c:	f893 903b 	ldrb.w	r9, [r3, #59]	@ 0x3b
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90004510:	f813 5c05 	ldrb.w	r5, [r3, #-5]
            ycomp = (int32_t)(*(pLum +j));
90004514:	f812 6c05 	ldrb.w	r6, [r2, #-5]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90004518:	f850 b029 	ldr.w	fp, [r0, r9, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000451c:	f85e 7029 	ldr.w	r7, [lr, r9, lsl #2]
90004520:	4426      	add	r6, r4
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90004522:	f85c 9025 	ldr.w	r9, [ip, r5, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90004526:	f858 5025 	ldr.w	r5, [r8, r5, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000452a:	4437      	add	r7, r6
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9000452c:	44b1      	add	r9, r6
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000452e:	445d      	add	r5, fp
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004530:	f897 7100 	ldrb.w	r7, [r7, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004534:	eb06 4525 	add.w	r5, r6, r5, asr #16
90004538:	f899 6100 	ldrb.w	r6, [r9, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000453c:	08ff      	lsrs	r7, r7, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000453e:	f895 5100 	ldrb.w	r5, [r5, #256]	@ 0x100
90004542:	08f6      	lsrs	r6, r6, #3
90004544:	08ad      	lsrs	r5, r5, #2
90004546:	ea46 26c7 	orr.w	r6, r6, r7, lsl #11
9000454a:	ea46 1645 	orr.w	r6, r6, r5, lsl #5
            *(__IO uint16_t *)pOutAddr =
9000454e:	80ce      	strh	r6, [r1, #6]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
90004550:	f893 903c 	ldrb.w	r9, [r3, #60]	@ 0x3c
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90004554:	f813 5c04 	ldrb.w	r5, [r3, #-4]
            ycomp = (int32_t)(*(pLum +j));
90004558:	f812 6c04 	ldrb.w	r6, [r2, #-4]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000455c:	f850 b029 	ldr.w	fp, [r0, r9, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004560:	4426      	add	r6, r4
90004562:	f85e 7029 	ldr.w	r7, [lr, r9, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90004566:	f85c 9025 	ldr.w	r9, [ip, r5, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000456a:	f858 5025 	ldr.w	r5, [r8, r5, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000456e:	4437      	add	r7, r6
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90004570:	44b1      	add	r9, r6
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90004572:	445d      	add	r5, fp
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004574:	f897 7100 	ldrb.w	r7, [r7, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004578:	eb06 4525 	add.w	r5, r6, r5, asr #16
9000457c:	f899 6100 	ldrb.w	r6, [r9, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004580:	08ff      	lsrs	r7, r7, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004582:	f895 5100 	ldrb.w	r5, [r5, #256]	@ 0x100
90004586:	08f6      	lsrs	r6, r6, #3
90004588:	08ad      	lsrs	r5, r5, #2
9000458a:	ea46 26c7 	orr.w	r6, r6, r7, lsl #11
9000458e:	ea46 1645 	orr.w	r6, r6, r5, lsl #5
            *(__IO uint16_t *)pOutAddr =
90004592:	810e      	strh	r6, [r1, #8]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
90004594:	f893 903d 	ldrb.w	r9, [r3, #61]	@ 0x3d
            ycomp = (int32_t)(*(pLum +j));
90004598:	f812 6c03 	ldrb.w	r6, [r2, #-3]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000459c:	f85e 7029 	ldr.w	r7, [lr, r9, lsl #2]
900045a0:	4426      	add	r6, r4
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900045a2:	f813 5c03 	ldrb.w	r5, [r3, #-3]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900045a6:	f850 b029 	ldr.w	fp, [r0, r9, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900045aa:	4437      	add	r7, r6
900045ac:	f897 7100 	ldrb.w	r7, [r7, #256]	@ 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900045b0:	f85c 9025 	ldr.w	r9, [ip, r5, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900045b4:	f858 5025 	ldr.w	r5, [r8, r5, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900045b8:	08ff      	lsrs	r7, r7, #3
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900045ba:	44b1      	add	r9, r6
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900045bc:	445d      	add	r5, fp
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900045be:	eb06 4525 	add.w	r5, r6, r5, asr #16
900045c2:	f899 6100 	ldrb.w	r6, [r9, #256]	@ 0x100
900045c6:	f895 5100 	ldrb.w	r5, [r5, #256]	@ 0x100
900045ca:	08f6      	lsrs	r6, r6, #3
900045cc:	08ad      	lsrs	r5, r5, #2
900045ce:	ea46 26c7 	orr.w	r6, r6, r7, lsl #11
900045d2:	ea46 1645 	orr.w	r6, r6, r5, lsl #5
            *(__IO uint16_t *)pOutAddr =
900045d6:	814e      	strh	r6, [r1, #10]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
900045d8:	f893 903e 	ldrb.w	r9, [r3, #62]	@ 0x3e
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900045dc:	f813 5c02 	ldrb.w	r5, [r3, #-2]
            ycomp = (int32_t)(*(pLum +j));
900045e0:	f812 6c02 	ldrb.w	r6, [r2, #-2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900045e4:	f850 b029 	ldr.w	fp, [r0, r9, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900045e8:	4426      	add	r6, r4
900045ea:	f85e 7029 	ldr.w	r7, [lr, r9, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900045ee:	f85c 9025 	ldr.w	r9, [ip, r5, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900045f2:	f858 5025 	ldr.w	r5, [r8, r5, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900045f6:	4437      	add	r7, r6
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900045f8:	44b1      	add	r9, r6
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
900045fa:	445d      	add	r5, fp
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900045fc:	f897 7100 	ldrb.w	r7, [r7, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004600:	eb06 4525 	add.w	r5, r6, r5, asr #16
90004604:	f899 6100 	ldrb.w	r6, [r9, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004608:	08ff      	lsrs	r7, r7, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000460a:	f895 5100 	ldrb.w	r5, [r5, #256]	@ 0x100
9000460e:	08f6      	lsrs	r6, r6, #3
90004610:	08ad      	lsrs	r5, r5, #2
90004612:	ea46 26c7 	orr.w	r6, r6, r7, lsl #11
90004616:	ea46 1645 	orr.w	r6, r6, r5, lsl #5
            *(__IO uint16_t *)pOutAddr =
9000461a:	818e      	strh	r6, [r1, #12]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));
9000461c:	f893 903f 	ldrb.w	r9, [r3, #63]	@ 0x3f
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90004620:	f813 5c01 	ldrb.w	r5, [r3, #-1]
            ycomp = (int32_t)(*(pLum +j));
90004624:	f812 6c01 	ldrb.w	r6, [r2, #-1]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004628:	f85e 7029 	ldr.w	r7, [lr, r9, lsl #2]
9000462c:	4426      	add	r6, r4
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000462e:	f850 b029 	ldr.w	fp, [r0, r9, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90004632:	f85c 9025 	ldr.w	r9, [ip, r5, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
90004636:	f858 5025 	ldr.w	r5, [r8, r5, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000463a:	4437      	add	r7, r6
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9000463c:	44b1      	add	r9, r6
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;
9000463e:	445d      	add	r5, fp
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90004640:	f897 7100 	ldrb.w	r7, [r7, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90004644:	eb06 4525 	add.w	r5, r6, r5, asr #16
90004648:	f899 6100 	ldrb.w	r6, [r9, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9000464c:	08ff      	lsrs	r7, r7, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9000464e:	f895 5100 	ldrb.w	r5, [r5, #256]	@ 0x100
90004652:	08f6      	lsrs	r6, r6, #3
90004654:	08ad      	lsrs	r5, r5, #2
90004656:	ea46 26c7 	orr.w	r6, r6, r7, lsl #11
9000465a:	ea46 1645 	orr.w	r6, r6, r5, lsl #5
            *(__IO uint16_t *)pOutAddr =
9000465e:	81ce      	strh	r6, [r1, #14]
    for(i= 0; i <  8; i++)
90004660:	9901      	ldr	r1, [sp, #4]
90004662:	3901      	subs	r1, #1
90004664:	9101      	str	r1, [sp, #4]
90004666:	f43f aec4 	beq.w	900043f2 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x46>
9000466a:	e6df      	b.n	9000442c <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x80>
9000466c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  }
  return numberMCU;
}
9000466e:	4618      	mov	r0, r3
90004670:	b00b      	add	sp, #44	@ 0x2c
90004672:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90004676:	bf00      	nop
90004678:	aaaaaaab 	.word	0xaaaaaaab
9000467c:	2400d550 	.word	0x2400d550
90004680:	9002e2f0 	.word	0x9002e2f0
90004684:	2400c950 	.word	0x2400c950
90004688:	2400d150 	.word	0x2400d150
9000468c:	2400cd50 	.word	0x2400cd50
90004690:	2400c550 	.word	0x2400c550

90004694 <JPEG_MCU_Gray_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_Gray_ARGB_ConvertBlocks(uint8_t *pInBuffer,
                                      uint8_t *pOutBuffer,
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{
90004694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint8_t *pOutAddr,  *pLum;

  numberMCU = DataCount / GRAY_444_BLOCK_SIZE;
  currentMCU = BlockIndex;

  while(currentMCU < (numberMCU + BlockIndex))
90004698:	eb02 1993 	add.w	r9, r2, r3, lsr #6
{
9000469c:	4606      	mov	r6, r0
9000469e:	b083      	sub	sp, #12
  numberMCU = DataCount / GRAY_444_BLOCK_SIZE;
900046a0:	0998      	lsrs	r0, r3, #6
  while(currentMCU < (numberMCU + BlockIndex))
900046a2:	4591      	cmp	r9, r2
900046a4:	f240 809d 	bls.w	900047e2 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x14e>
  {
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
900046a8:	4b4f      	ldr	r3, [pc, #316]	@ (900047e8 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x154>)
900046aa:	460c      	mov	r4, r1
900046ac:	4615      	mov	r5, r2
    pLum = pInBuffer;

    for(i= 0; i <  8; i++)
    {
      pOutAddr = pOutBuffer + refline;
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
900046ae:	4686      	mov	lr, r0
900046b0:	f8d3 8010 	ldr.w	r8, [r3, #16]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
900046b4:	e9d3 1709 	ldrd	r1, r7, [r3, #36]	@ 0x24
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
900046b8:	f8cd 8004 	str.w	r8, [sp, #4]
900046bc:	e004      	b.n	900046c8 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x34>
  while(currentMCU < (numberMCU + BlockIndex))
900046be:	45a9      	cmp	r9, r5

        refline += JPEG_ConvertorParams.ScaledWidth;
      }
    }

    pInBuffer +=  GRAY_444_BLOCK_SIZE;
900046c0:	f106 0640 	add.w	r6, r6, #64	@ 0x40
  while(currentMCU < (numberMCU + BlockIndex))
900046c4:	f000 808c 	beq.w	900047e0 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x14c>
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
900046c8:	00ea      	lsls	r2, r5, #3
    currentMCU++;
900046ca:	4633      	mov	r3, r6
900046cc:	f04f 0a08 	mov.w	sl, #8
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
900046d0:	3501      	adds	r5, #1
900046d2:	fbb2 f0f1 	udiv	r0, r2, r1
    yRef = ((currentMCU *8) % JPEG_ConvertorParams.WidthExtend);
900046d6:	fb01 2210 	mls	r2, r1, r0, r2
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
900046da:	fb07 f000 	mul.w	r0, r7, r0
900046de:	0052      	lsls	r2, r2, #1
900046e0:	eb02 02c0 	add.w	r2, r2, r0, lsl #3
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
900046e4:	9801      	ldr	r0, [sp, #4]
900046e6:	4290      	cmp	r0, r2
900046e8:	d9e9      	bls.n	900046be <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x2a>
          ySample =   (uint32_t)(*pLum);
900046ea:	f893 8000 	ldrb.w	r8, [r3]
      pOutAddr = pOutBuffer + refline;
900046ee:	18a0      	adds	r0, r4, r2
          pLum++;
900046f0:	3308      	adds	r3, #8
    for(i= 0; i <  8; i++)
900046f2:	f1ba 0a01 	subs.w	sl, sl, #1
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);
900046f6:	ea4f 0cd8 	mov.w	ip, r8, lsr #3
900046fa:	ea4f 0898 	mov.w	r8, r8, lsr #2
900046fe:	ea4f 2bcc 	mov.w	fp, ip, lsl #11
90004702:	ea4b 1848 	orr.w	r8, fp, r8, lsl #5
90004706:	ea4c 0c08 	orr.w	ip, ip, r8
9000470a:	f824 c002 	strh.w	ip, [r4, r2]
        refline += JPEG_ConvertorParams.ScaledWidth;
9000470e:	443a      	add	r2, r7
          ySample =   (uint32_t)(*pLum);
90004710:	f813 8c07 	ldrb.w	r8, [r3, #-7]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);
90004714:	ea4f 0cd8 	mov.w	ip, r8, lsr #3
90004718:	ea4f 0898 	mov.w	r8, r8, lsr #2
9000471c:	ea4f 2bcc 	mov.w	fp, ip, lsl #11
90004720:	ea4b 1848 	orr.w	r8, fp, r8, lsl #5
90004724:	ea4c 0c08 	orr.w	ip, ip, r8
90004728:	f8a0 c002 	strh.w	ip, [r0, #2]
          ySample =   (uint32_t)(*pLum);
9000472c:	f813 8c06 	ldrb.w	r8, [r3, #-6]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);
90004730:	ea4f 0cd8 	mov.w	ip, r8, lsr #3
90004734:	ea4f 0898 	mov.w	r8, r8, lsr #2
90004738:	ea4f 2bcc 	mov.w	fp, ip, lsl #11
9000473c:	ea4b 1848 	orr.w	r8, fp, r8, lsl #5
90004740:	ea4c 0c08 	orr.w	ip, ip, r8
90004744:	f8a0 c004 	strh.w	ip, [r0, #4]
          ySample =   (uint32_t)(*pLum);
90004748:	f813 8c05 	ldrb.w	r8, [r3, #-5]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);
9000474c:	ea4f 0cd8 	mov.w	ip, r8, lsr #3
90004750:	ea4f 0898 	mov.w	r8, r8, lsr #2
90004754:	ea4f 2bcc 	mov.w	fp, ip, lsl #11
90004758:	ea4b 1848 	orr.w	r8, fp, r8, lsl #5
9000475c:	ea4c 0c08 	orr.w	ip, ip, r8
90004760:	f8a0 c006 	strh.w	ip, [r0, #6]
          ySample =   (uint32_t)(*pLum);
90004764:	f813 8c04 	ldrb.w	r8, [r3, #-4]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);
90004768:	ea4f 0cd8 	mov.w	ip, r8, lsr #3
9000476c:	ea4f 0898 	mov.w	r8, r8, lsr #2
90004770:	ea4f 2bcc 	mov.w	fp, ip, lsl #11
90004774:	ea4b 1848 	orr.w	r8, fp, r8, lsl #5
90004778:	ea4c 0c08 	orr.w	ip, ip, r8
9000477c:	f8a0 c008 	strh.w	ip, [r0, #8]
          ySample =   (uint32_t)(*pLum);
90004780:	f813 8c03 	ldrb.w	r8, [r3, #-3]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);
90004784:	ea4f 0cd8 	mov.w	ip, r8, lsr #3
90004788:	ea4f 0898 	mov.w	r8, r8, lsr #2
9000478c:	ea4f 2bcc 	mov.w	fp, ip, lsl #11
90004790:	ea4b 1848 	orr.w	r8, fp, r8, lsl #5
90004794:	ea4c 0c08 	orr.w	ip, ip, r8
90004798:	f8a0 c00a 	strh.w	ip, [r0, #10]
          ySample =   (uint32_t)(*pLum);
9000479c:	f813 8c02 	ldrb.w	r8, [r3, #-2]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);
900047a0:	ea4f 0cd8 	mov.w	ip, r8, lsr #3
900047a4:	ea4f 0898 	mov.w	r8, r8, lsr #2
900047a8:	ea4f 2bcc 	mov.w	fp, ip, lsl #11
900047ac:	ea4b 1848 	orr.w	r8, fp, r8, lsl #5
900047b0:	ea4c 0c08 	orr.w	ip, ip, r8
900047b4:	f8a0 c00c 	strh.w	ip, [r0, #12]
          ySample =   (uint32_t)(*pLum);
900047b8:	f813 8c01 	ldrb.w	r8, [r3, #-1]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);
900047bc:	ea4f 0cd8 	mov.w	ip, r8, lsr #3
900047c0:	ea4f 0898 	mov.w	r8, r8, lsr #2
900047c4:	ea4f 2bcc 	mov.w	fp, ip, lsl #11
900047c8:	ea4b 1848 	orr.w	r8, fp, r8, lsl #5
900047cc:	ea4c 0c08 	orr.w	ip, ip, r8
900047d0:	f8a0 c00e 	strh.w	ip, [r0, #14]
    for(i= 0; i <  8; i++)
900047d4:	d186      	bne.n	900046e4 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x50>
  while(currentMCU < (numberMCU + BlockIndex))
900047d6:	45a9      	cmp	r9, r5
    pInBuffer +=  GRAY_444_BLOCK_SIZE;
900047d8:	f106 0640 	add.w	r6, r6, #64	@ 0x40
  while(currentMCU < (numberMCU + BlockIndex))
900047dc:	f47f af74 	bne.w	900046c8 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x34>
900047e0:	4670      	mov	r0, lr
  }
  return numberMCU;
}
900047e2:	b003      	add	sp, #12
900047e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900047e8:	2400d550 	.word	0x2400d550

900047ec <JPEG_MCU_YCCK_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_YCCK_ARGB_ConvertBlocks(uint8_t *pInBuffer,
                                      uint8_t *pOutBuffer,
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{
900047ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint8_t *pOutAddr, *pChrom;

  numberMCU = DataCount / CMYK_444_BLOCK_SIZE;
  currentMCU = BlockIndex;

  while(currentMCU < (numberMCU + BlockIndex))
900047f0:	eb02 2a13 	add.w	sl, r2, r3, lsr #8
{
900047f4:	b085      	sub	sp, #20
  numberMCU = DataCount / CMYK_444_BLOCK_SIZE;
900047f6:	ea4f 2913 	mov.w	r9, r3, lsr #8
  while(currentMCU < (numberMCU + BlockIndex))
900047fa:	4592      	cmp	sl, r2
900047fc:	f240 813e 	bls.w	90004a7c <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x290>
  {

    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90004800:	4ba0      	ldr	r3, [pc, #640]	@ (90004a84 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x298>)
90004802:	4615      	mov	r5, r2
90004804:	4606      	mov	r6, r0
90004806:	460c      	mov	r4, r1
        pOutAddr = pOutBuffer+ refline;

          for(j=0; j < 8; j++)
          {
            color_k = (int32_t)(*(pChrom + 192));
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90004808:	4a9f      	ldr	r2, [pc, #636]	@ (90004a88 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x29c>)
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
9000480a:	f8d3 8010 	ldr.w	r8, [r3, #16]
9000480e:	9501      	str	r5, [sp, #4]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90004810:	e9d3 b709 	ldrd	fp, r7, [r3, #36]	@ 0x24
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90004814:	e9cd ba02 	strd	fp, sl, [sp, #8]
90004818:	e006      	b.n	90004828 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x3c>
  while(currentMCU < (numberMCU + BlockIndex))
9000481a:	9b03      	ldr	r3, [sp, #12]

        refline += JPEG_ConvertorParams.ScaledWidth;
      }
    }

    pInBuffer +=  CMYK_444_BLOCK_SIZE;
9000481c:	f506 7680 	add.w	r6, r6, #256	@ 0x100
  while(currentMCU < (numberMCU + BlockIndex))
90004820:	9901      	ldr	r1, [sp, #4]
90004822:	428b      	cmp	r3, r1
90004824:	f000 812a 	beq.w	90004a7c <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x290>
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90004828:	9801      	ldr	r0, [sp, #4]
    currentMCU++;
9000482a:	f04f 0e08 	mov.w	lr, #8
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
9000482e:	9d02      	ldr	r5, [sp, #8]
90004830:	00c3      	lsls	r3, r0, #3
90004832:	3001      	adds	r0, #1
90004834:	fbb3 f1f5 	udiv	r1, r3, r5
90004838:	9001      	str	r0, [sp, #4]
    yRef = ((currentMCU *8) % JPEG_ConvertorParams.WidthExtend);
9000483a:	fb05 3011 	mls	r0, r5, r1, r3
    currentMCU++;
9000483e:	4633      	mov	r3, r6
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90004840:	fb07 f101 	mul.w	r1, r7, r1
    currentMCU++;
90004844:	4675      	mov	r5, lr
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90004846:	0040      	lsls	r0, r0, #1
90004848:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
9000484c:	4580      	cmp	r8, r0
9000484e:	d9e4      	bls.n	9000481a <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x2e>
            color_k = (int32_t)(*(pChrom + 192));
90004850:	f893 b0c0 	ldrb.w	fp, [r3, #192]	@ 0xc0
        pOutAddr = pOutBuffer+ refline;
90004854:	eb04 0c00 	add.w	ip, r4, r0
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90004858:	f893 1040 	ldrb.w	r1, [r3, #64]	@ 0x40
    for(i= 0; i <  8; i++)
9000485c:	3d01      	subs	r5, #1
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9000485e:	f893 a000 	ldrb.w	sl, [r3]
            pChrom++;
90004862:	f103 0308 	add.w	r3, r3, #8
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90004866:	fb11 f10b 	smulbb	r1, r1, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9000486a:	fb1a fa0b 	smulbb	sl, sl, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9000486e:	fba2 1e01 	umull	r1, lr, r2, r1
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90004872:	fba2 a10a 	umull	sl, r1, r2, sl
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90004876:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
9000487a:	ea4f 2191 	mov.w	r1, r1, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9000487e:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90004882:	ea4e 21c1 	orr.w	r1, lr, r1, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90004886:	f893 e078 	ldrb.w	lr, [r3, #120]	@ 0x78
9000488a:	fb1e fe0b 	smulbb	lr, lr, fp
9000488e:	fba2 ea0e 	umull	lr, sl, r2, lr
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90004892:	ea41 219a 	orr.w	r1, r1, sl, lsr #10
90004896:	b289      	uxth	r1, r1
          *(__IO uint16_t *)pOutAddr =
90004898:	5221      	strh	r1, [r4, r0]
        refline += JPEG_ConvertorParams.ScaledWidth;
9000489a:	4438      	add	r0, r7
            color_k = (int32_t)(*(pChrom + 192));
9000489c:	f893 b0b9 	ldrb.w	fp, [r3, #185]	@ 0xb9
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900048a0:	f893 1039 	ldrb.w	r1, [r3, #57]	@ 0x39
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900048a4:	f813 ac07 	ldrb.w	sl, [r3, #-7]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900048a8:	fb11 f10b 	smulbb	r1, r1, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900048ac:	fb1a fa0b 	smulbb	sl, sl, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900048b0:	fba2 1e01 	umull	r1, lr, r2, r1
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900048b4:	fba2 a10a 	umull	sl, r1, r2, sl
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900048b8:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900048bc:	ea4f 2191 	mov.w	r1, r1, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900048c0:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900048c4:	ea4e 21c1 	orr.w	r1, lr, r1, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
900048c8:	f893 e079 	ldrb.w	lr, [r3, #121]	@ 0x79
900048cc:	fb1e fe0b 	smulbb	lr, lr, fp
900048d0:	fba2 ea0e 	umull	lr, sl, r2, lr
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900048d4:	ea41 219a 	orr.w	r1, r1, sl, lsr #10
900048d8:	b289      	uxth	r1, r1
          *(__IO uint16_t *)pOutAddr =
900048da:	f8ac 1002 	strh.w	r1, [ip, #2]
            color_k = (int32_t)(*(pChrom + 192));
900048de:	f893 b0ba 	ldrb.w	fp, [r3, #186]	@ 0xba
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900048e2:	f893 103a 	ldrb.w	r1, [r3, #58]	@ 0x3a
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900048e6:	f813 ac06 	ldrb.w	sl, [r3, #-6]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900048ea:	fb11 f10b 	smulbb	r1, r1, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900048ee:	fb1a fa0b 	smulbb	sl, sl, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900048f2:	fba2 1e01 	umull	r1, lr, r2, r1
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900048f6:	fba2 a10a 	umull	sl, r1, r2, sl
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900048fa:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900048fe:	ea4f 2191 	mov.w	r1, r1, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90004902:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90004906:	ea4e 21c1 	orr.w	r1, lr, r1, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
9000490a:	f893 e07a 	ldrb.w	lr, [r3, #122]	@ 0x7a
9000490e:	fb1e fe0b 	smulbb	lr, lr, fp
90004912:	fba2 ea0e 	umull	lr, sl, r2, lr
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90004916:	ea41 219a 	orr.w	r1, r1, sl, lsr #10
9000491a:	b289      	uxth	r1, r1
          *(__IO uint16_t *)pOutAddr =
9000491c:	f8ac 1004 	strh.w	r1, [ip, #4]
            color_k = (int32_t)(*(pChrom + 192));
90004920:	f893 b0bb 	ldrb.w	fp, [r3, #187]	@ 0xbb
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90004924:	f893 103b 	ldrb.w	r1, [r3, #59]	@ 0x3b
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90004928:	f813 ac05 	ldrb.w	sl, [r3, #-5]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9000492c:	fb11 f10b 	smulbb	r1, r1, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90004930:	fb1a fa0b 	smulbb	sl, sl, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90004934:	fba2 1e01 	umull	r1, lr, r2, r1
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90004938:	fba2 a10a 	umull	sl, r1, r2, sl
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9000493c:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90004940:	ea4f 2191 	mov.w	r1, r1, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90004944:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90004948:	ea4e 21c1 	orr.w	r1, lr, r1, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
9000494c:	f893 e07b 	ldrb.w	lr, [r3, #123]	@ 0x7b
90004950:	fb1e fe0b 	smulbb	lr, lr, fp
90004954:	fba2 ea0e 	umull	lr, sl, r2, lr
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90004958:	ea41 219a 	orr.w	r1, r1, sl, lsr #10
9000495c:	b289      	uxth	r1, r1
          *(__IO uint16_t *)pOutAddr =
9000495e:	f8ac 1006 	strh.w	r1, [ip, #6]
            color_k = (int32_t)(*(pChrom + 192));
90004962:	f893 b0bc 	ldrb.w	fp, [r3, #188]	@ 0xbc
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90004966:	f893 103c 	ldrb.w	r1, [r3, #60]	@ 0x3c
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9000496a:	f813 ac04 	ldrb.w	sl, [r3, #-4]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9000496e:	fb11 f10b 	smulbb	r1, r1, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90004972:	fb1a fa0b 	smulbb	sl, sl, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90004976:	fba2 1e01 	umull	r1, lr, r2, r1
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9000497a:	fba2 a10a 	umull	sl, r1, r2, sl
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9000497e:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90004982:	ea4f 2191 	mov.w	r1, r1, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90004986:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
9000498a:	ea4e 21c1 	orr.w	r1, lr, r1, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
9000498e:	f893 e07c 	ldrb.w	lr, [r3, #124]	@ 0x7c
90004992:	fb1e fe0b 	smulbb	lr, lr, fp
90004996:	fba2 ea0e 	umull	lr, sl, r2, lr
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9000499a:	ea41 219a 	orr.w	r1, r1, sl, lsr #10
9000499e:	b289      	uxth	r1, r1
          *(__IO uint16_t *)pOutAddr =
900049a0:	f8ac 1008 	strh.w	r1, [ip, #8]
            color_k = (int32_t)(*(pChrom + 192));
900049a4:	f893 b0bd 	ldrb.w	fp, [r3, #189]	@ 0xbd
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900049a8:	f893 103d 	ldrb.w	r1, [r3, #61]	@ 0x3d
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900049ac:	f813 ac03 	ldrb.w	sl, [r3, #-3]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900049b0:	fb11 f10b 	smulbb	r1, r1, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900049b4:	fb1a fa0b 	smulbb	sl, sl, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900049b8:	fba2 1e01 	umull	r1, lr, r2, r1
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900049bc:	fba2 a10a 	umull	sl, r1, r2, sl
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900049c0:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900049c4:	ea4f 2191 	mov.w	r1, r1, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900049c8:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900049cc:	ea4e 21c1 	orr.w	r1, lr, r1, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
900049d0:	f893 e07d 	ldrb.w	lr, [r3, #125]	@ 0x7d
900049d4:	fb1e fe0b 	smulbb	lr, lr, fp
900049d8:	fba2 ea0e 	umull	lr, sl, r2, lr
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900049dc:	ea41 219a 	orr.w	r1, r1, sl, lsr #10
900049e0:	b289      	uxth	r1, r1
          *(__IO uint16_t *)pOutAddr =
900049e2:	f8ac 100a 	strh.w	r1, [ip, #10]
            color_k = (int32_t)(*(pChrom + 192));
900049e6:	f893 a0be 	ldrb.w	sl, [r3, #190]	@ 0xbe
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900049ea:	f813 1c02 	ldrb.w	r1, [r3, #-2]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900049ee:	f893 e03e 	ldrb.w	lr, [r3, #62]	@ 0x3e
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900049f2:	fb11 f10a 	smulbb	r1, r1, sl
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900049f6:	fb1e fe0a 	smulbb	lr, lr, sl
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900049fa:	fba2 1b01 	umull	r1, fp, r2, r1
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900049fe:	fba2 e10e 	umull	lr, r1, r2, lr
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90004a02:	f893 e07e 	ldrb.w	lr, [r3, #126]	@ 0x7e
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90004a06:	ea4f 2b9b 	mov.w	fp, fp, lsr #10
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90004a0a:	fb1e fe0a 	smulbb	lr, lr, sl
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90004a0e:	ea4f 2151 	mov.w	r1, r1, lsr #9
90004a12:	ea4f 1141 	mov.w	r1, r1, lsl #5
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90004a16:	fba2 ea0e 	umull	lr, sl, r2, lr
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90004a1a:	ea41 21cb 	orr.w	r1, r1, fp, lsl #11
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90004a1e:	ea41 219a 	orr.w	r1, r1, sl, lsr #10
90004a22:	b289      	uxth	r1, r1
          *(__IO uint16_t *)pOutAddr =
90004a24:	f8ac 100c 	strh.w	r1, [ip, #12]
            color_k = (int32_t)(*(pChrom + 192));
90004a28:	f893 b0bf 	ldrb.w	fp, [r3, #191]	@ 0xbf
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90004a2c:	f893 103f 	ldrb.w	r1, [r3, #63]	@ 0x3f
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90004a30:	f813 ac01 	ldrb.w	sl, [r3, #-1]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90004a34:	fb11 f10b 	smulbb	r1, r1, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90004a38:	fb1a fa0b 	smulbb	sl, sl, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90004a3c:	fba2 1e01 	umull	r1, lr, r2, r1
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90004a40:	fba2 a10a 	umull	sl, r1, r2, sl
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90004a44:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90004a48:	ea4f 2191 	mov.w	r1, r1, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90004a4c:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90004a50:	ea4e 21c1 	orr.w	r1, lr, r1, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90004a54:	f893 e07f 	ldrb.w	lr, [r3, #127]	@ 0x7f
90004a58:	fb1e fe0b 	smulbb	lr, lr, fp
90004a5c:	fba2 ea0e 	umull	lr, sl, r2, lr
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90004a60:	ea41 219a 	orr.w	r1, r1, sl, lsr #10
90004a64:	b289      	uxth	r1, r1
          *(__IO uint16_t *)pOutAddr =
90004a66:	f8ac 100e 	strh.w	r1, [ip, #14]
    for(i= 0; i <  8; i++)
90004a6a:	f47f aeef 	bne.w	9000484c <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x60>
  while(currentMCU < (numberMCU + BlockIndex))
90004a6e:	9b03      	ldr	r3, [sp, #12]
    pInBuffer +=  CMYK_444_BLOCK_SIZE;
90004a70:	f506 7680 	add.w	r6, r6, #256	@ 0x100
  while(currentMCU < (numberMCU + BlockIndex))
90004a74:	9901      	ldr	r1, [sp, #4]
90004a76:	428b      	cmp	r3, r1
90004a78:	f47f aed6 	bne.w	90004828 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x3c>
  }
  return numberMCU;
}
90004a7c:	4648      	mov	r0, r9
90004a7e:	b005      	add	sp, #20
90004a80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90004a84:	2400d550 	.word	0x2400d550
90004a88:	80808081 	.word	0x80808081

90004a8c <TGFX_JPEG_GetDecodeColorConvertFunc>:
  *                      depending of the jpeg image color space and chroma sampling info.
  * @param ImageNbMCUs : pointer to uint32_t, used to retrive the total number of MCU blocks in the jpeg image.
  * @retval HAL status : HAL_OK or HAL_ERROR.
  */
HAL_StatusTypeDef TGFX_JPEG_GetDecodeColorConvertFunc(JPEG_ConfTypeDef *pJpegInfo, JPEG_YCbCrToRGB_Convert_Function *pFunction, uint32_t *ImageNbMCUs)
{
90004a8c:	b5f0      	push	{r4, r5, r6, r7, lr}
  JPEG_ConvertorParams.ColorSpace = pJpegInfo->ColorSpace;
  JPEG_ConvertorParams.ImageWidth = pJpegInfo->ImageWidth;
  JPEG_ConvertorParams.ImageHeight = pJpegInfo->ImageHeight;
  JPEG_ConvertorParams.ImageSize_Bytes = pJpegInfo->ImageWidth * pJpegInfo->ImageHeight * JPEG_BYTES_PER_PIXEL;

  JPEG_ConvertorParams.ChromaSubsampling = pJpegInfo->ChromaSubsampling;
90004a8e:	e9d0 7501 	ldrd	r7, r5, [r0, #4]
  JPEG_ConvertorParams.ImageWidth = pJpegInfo->ImageWidth;
90004a92:	68c4      	ldr	r4, [r0, #12]
  JPEG_ConvertorParams.ColorSpace = pJpegInfo->ColorSpace;
90004a94:	6806      	ldr	r6, [r0, #0]
  JPEG_ConvertorParams.ImageSize_Bytes = pJpegInfo->ImageWidth * pJpegInfo->ImageHeight * JPEG_BYTES_PER_PIXEL;
90004a96:	fb05 f004 	mul.w	r0, r5, r4
  JPEG_ConvertorParams.ColorSpace = pJpegInfo->ColorSpace;
90004a9a:	4b3b      	ldr	r3, [pc, #236]	@ (90004b88 <TGFX_JPEG_GetDecodeColorConvertFunc+0xfc>)
  if(JPEG_ConvertorParams.ColorSpace == JPEG_YCBCR_COLORSPACE)
90004a9c:	2e10      	cmp	r6, #16
  JPEG_ConvertorParams.ImageSize_Bytes = pJpegInfo->ImageWidth * pJpegInfo->ImageHeight * JPEG_BYTES_PER_PIXEL;
90004a9e:	ea4f 0040 	mov.w	r0, r0, lsl #1
  JPEG_ConvertorParams.ImageWidth = pJpegInfo->ImageWidth;
90004aa2:	609c      	str	r4, [r3, #8]
  JPEG_ConvertorParams.ColorSpace = pJpegInfo->ColorSpace;
90004aa4:	601e      	str	r6, [r3, #0]
  JPEG_ConvertorParams.ImageHeight = pJpegInfo->ImageHeight;
90004aa6:	60dd      	str	r5, [r3, #12]
  JPEG_ConvertorParams.ChromaSubsampling = pJpegInfo->ChromaSubsampling;
90004aa8:	605f      	str	r7, [r3, #4]
  JPEG_ConvertorParams.ImageSize_Bytes = pJpegInfo->ImageWidth * pJpegInfo->ImageHeight * JPEG_BYTES_PER_PIXEL;
90004aaa:	6118      	str	r0, [r3, #16]
  if(JPEG_ConvertorParams.ColorSpace == JPEG_YCBCR_COLORSPACE)
90004aac:	d030      	beq.n	90004b10 <TGFX_JPEG_GetDecodeColorConvertFunc+0x84>
      }
      JPEG_ConvertorParams.H_factor = 8;
      JPEG_ConvertorParams.V_factor  = 8;
    }
  }
  else if(JPEG_ConvertorParams.ColorSpace == JPEG_GRAYSCALE_COLORSPACE)
90004aae:	b9c6      	cbnz	r6, 90004ae2 <TGFX_JPEG_GetDecodeColorConvertFunc+0x56>
  {
    *pFunction =  JPEG_MCU_Gray_ARGB_ConvertBlocks;
90004ab0:	4836      	ldr	r0, [pc, #216]	@ (90004b8c <TGFX_JPEG_GetDecodeColorConvertFunc+0x100>)

    JPEG_ConvertorParams.LineOffset = JPEG_ConvertorParams.ImageWidth % 8;

    if(JPEG_ConvertorParams.LineOffset != 0)
90004ab2:	f014 0707 	ands.w	r7, r4, #7
    *pFunction =  JPEG_MCU_Gray_ARGB_ConvertBlocks;
90004ab6:	6008      	str	r0, [r1, #0]
    if(JPEG_ConvertorParams.LineOffset != 0)
90004ab8:	d11a      	bne.n	90004af0 <TGFX_JPEG_GetDecodeColorConvertFunc+0x64>
  {
    return HAL_ERROR; /* Color space Not supported*/
  }

  JPEG_ConvertorParams.WidthExtend = JPEG_ConvertorParams.ImageWidth + JPEG_ConvertorParams.LineOffset;
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth;
90004aba:	0061      	lsls	r1, r4, #1
      JPEG_ConvertorParams.H_factor = 16;
90004abc:	2008      	movs	r0, #8
    JPEG_ConvertorParams.LineOffset = JPEG_ConvertorParams.ImageWidth % 8;
90004abe:	615f      	str	r7, [r3, #20]
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth;
90004ac0:	6299      	str	r1, [r3, #40]	@ 0x28

  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
90004ac2:	08e1      	lsrs	r1, r4, #3
  JPEG_ConvertorParams.WidthExtend = JPEG_ConvertorParams.ImageWidth + JPEG_ConvertorParams.LineOffset;
90004ac4:	625c      	str	r4, [r3, #36]	@ 0x24
      JPEG_ConvertorParams.V_factor  = 8;
90004ac6:	e9c3 0007 	strd	r0, r0, [r3, #28]
  if((JPEG_ConvertorParams.ImageWidth % JPEG_ConvertorParams.H_factor) != 0)
  {
    hMCU++; /*+1 for horizenatl incomplete MCU */
  }

  vMCU = (JPEG_ConvertorParams.ImageHeight / JPEG_ConvertorParams.V_factor);
90004aca:	fbb5 f4f0 	udiv	r4, r5, r0
  if((JPEG_ConvertorParams.ImageHeight % JPEG_ConvertorParams.V_factor) != 0)
90004ace:	fb00 5514 	mls	r5, r0, r4, r5
90004ad2:	b105      	cbz	r5, 90004ad6 <TGFX_JPEG_GetDecodeColorConvertFunc+0x4a>
  {
    vMCU++; /*+1 for vertical incomplete MCU */
90004ad4:	3401      	adds	r4, #1
  }
  JPEG_ConvertorParams.MCU_Total_Nb = (hMCU * vMCU);
90004ad6:	fb04 f101 	mul.w	r1, r4, r1
  *ImageNbMCUs = JPEG_ConvertorParams.MCU_Total_Nb;

  return HAL_OK;
90004ada:	2000      	movs	r0, #0
  JPEG_ConvertorParams.MCU_Total_Nb = (hMCU * vMCU);
90004adc:	62d9      	str	r1, [r3, #44]	@ 0x2c
  *ImageNbMCUs = JPEG_ConvertorParams.MCU_Total_Nb;
90004ade:	6011      	str	r1, [r2, #0]
}
90004ae0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  else if(JPEG_ConvertorParams.ColorSpace == JPEG_CMYK_COLORSPACE)
90004ae2:	2e30      	cmp	r6, #48	@ 0x30
90004ae4:	d11e      	bne.n	90004b24 <TGFX_JPEG_GetDecodeColorConvertFunc+0x98>
    *pFunction =  JPEG_MCU_YCCK_ARGB_ConvertBlocks;
90004ae6:	482a      	ldr	r0, [pc, #168]	@ (90004b90 <TGFX_JPEG_GetDecodeColorConvertFunc+0x104>)
    if(JPEG_ConvertorParams.LineOffset != 0)
90004ae8:	f014 0707 	ands.w	r7, r4, #7
    *pFunction =  JPEG_MCU_YCCK_ARGB_ConvertBlocks;
90004aec:	6008      	str	r0, [r1, #0]
    if(JPEG_ConvertorParams.LineOffset != 0)
90004aee:	d0e4      	beq.n	90004aba <TGFX_JPEG_GetDecodeColorConvertFunc+0x2e>
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
90004af0:	2608      	movs	r6, #8
      JPEG_ConvertorParams.LineOffset = 8 - JPEG_ConvertorParams.LineOffset;
90004af2:	f1c7 0708 	rsb	r7, r7, #8
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth;
90004af6:	ea4f 0e44 	mov.w	lr, r4, lsl #1
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
90004afa:	08e1      	lsrs	r1, r4, #3
90004afc:	46b4      	mov	ip, r6
  JPEG_ConvertorParams.WidthExtend = JPEG_ConvertorParams.ImageWidth + JPEG_ConvertorParams.LineOffset;
90004afe:	443c      	add	r4, r7
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
90004b00:	4630      	mov	r0, r6
    hMCU++; /*+1 for horizenatl incomplete MCU */
90004b02:	3101      	adds	r1, #1
      JPEG_ConvertorParams.LineOffset = 8 - JPEG_ConvertorParams.LineOffset;
90004b04:	615f      	str	r7, [r3, #20]
      JPEG_ConvertorParams.V_factor  = 8;
90004b06:	e9c3 6c07 	strd	r6, ip, [r3, #28]
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth;
90004b0a:	e9c3 4e09 	strd	r4, lr, [r3, #36]	@ 0x24
    hMCU++; /*+1 for horizenatl incomplete MCU */
90004b0e:	e7dc      	b.n	90004aca <TGFX_JPEG_GetDecodeColorConvertFunc+0x3e>
    if(JPEG_ConvertorParams.ChromaSubsampling == JPEG_420_SUBSAMPLING)
90004b10:	2f01      	cmp	r7, #1
90004b12:	d018      	beq.n	90004b46 <TGFX_JPEG_GetDecodeColorConvertFunc+0xba>
    else if(JPEG_ConvertorParams.ChromaSubsampling == JPEG_422_SUBSAMPLING)
90004b14:	2f02      	cmp	r7, #2
90004b16:	d007      	beq.n	90004b28 <TGFX_JPEG_GetDecodeColorConvertFunc+0x9c>
      *pFunction =  JPEG_MCU_YCbCr444_ARGB_ConvertBlocks;
90004b18:	481e      	ldr	r0, [pc, #120]	@ (90004b94 <TGFX_JPEG_GetDecodeColorConvertFunc+0x108>)
      if(JPEG_ConvertorParams.LineOffset != 0)
90004b1a:	f014 0707 	ands.w	r7, r4, #7
      *pFunction =  JPEG_MCU_YCbCr444_ARGB_ConvertBlocks;
90004b1e:	6008      	str	r0, [r1, #0]
      if(JPEG_ConvertorParams.LineOffset != 0)
90004b20:	d1e6      	bne.n	90004af0 <TGFX_JPEG_GetDecodeColorConvertFunc+0x64>
90004b22:	e7ca      	b.n	90004aba <TGFX_JPEG_GetDecodeColorConvertFunc+0x2e>
    return HAL_ERROR; /* Color space Not supported*/
90004b24:	2001      	movs	r0, #1
}
90004b26:	bdf0      	pop	{r4, r5, r6, r7, pc}
      *pFunction =  JPEG_MCU_YCbCr422_ARGB_ConvertBlocks;
90004b28:	481b      	ldr	r0, [pc, #108]	@ (90004b98 <TGFX_JPEG_GetDecodeColorConvertFunc+0x10c>)
      if(JPEG_ConvertorParams.LineOffset != 0)
90004b2a:	f014 070f 	ands.w	r7, r4, #15
      *pFunction =  JPEG_MCU_YCbCr422_ARGB_ConvertBlocks;
90004b2e:	6008      	str	r0, [r1, #0]
      if(JPEG_ConvertorParams.LineOffset != 0)
90004b30:	d020      	beq.n	90004b74 <TGFX_JPEG_GetDecodeColorConvertFunc+0xe8>
        JPEG_ConvertorParams.LineOffset = 16 - JPEG_ConvertorParams.LineOffset;
90004b32:	f1c7 0710 	rsb	r7, r7, #16
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
90004b36:	f04f 0c08 	mov.w	ip, #8
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth;
90004b3a:	ea4f 0e44 	mov.w	lr, r4, lsl #1
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
90004b3e:	0921      	lsrs	r1, r4, #4
90004b40:	4660      	mov	r0, ip
  JPEG_ConvertorParams.WidthExtend = JPEG_ConvertorParams.ImageWidth + JPEG_ConvertorParams.LineOffset;
90004b42:	443c      	add	r4, r7
  if((JPEG_ConvertorParams.ImageWidth % JPEG_ConvertorParams.H_factor) != 0)
90004b44:	e7dd      	b.n	90004b02 <TGFX_JPEG_GetDecodeColorConvertFunc+0x76>
      *pFunction = TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks;
90004b46:	4815      	ldr	r0, [pc, #84]	@ (90004b9c <TGFX_JPEG_GetDecodeColorConvertFunc+0x110>)
      if(JPEG_ConvertorParams.LineOffset != 0)
90004b48:	f014 070f 	ands.w	r7, r4, #15
      *pFunction = TGFX_JPEG_MCU_YCbCr420_ARGB_ConvertBlocks;
90004b4c:	6008      	str	r0, [r1, #0]
      if(JPEG_ConvertorParams.LineOffset != 0)
90004b4e:	d108      	bne.n	90004b62 <TGFX_JPEG_GetDecodeColorConvertFunc+0xd6>
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth;
90004b50:	0061      	lsls	r1, r4, #1
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
90004b52:	4630      	mov	r0, r6
      JPEG_ConvertorParams.LineOffset = JPEG_ConvertorParams.ImageWidth % 16;
90004b54:	615f      	str	r7, [r3, #20]
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth;
90004b56:	6299      	str	r1, [r3, #40]	@ 0x28
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
90004b58:	0921      	lsrs	r1, r4, #4
  JPEG_ConvertorParams.WidthExtend = JPEG_ConvertorParams.ImageWidth + JPEG_ConvertorParams.LineOffset;
90004b5a:	625c      	str	r4, [r3, #36]	@ 0x24
      JPEG_ConvertorParams.V_factor  = 8;
90004b5c:	e9c3 6607 	strd	r6, r6, [r3, #28]
  if((JPEG_ConvertorParams.ImageWidth % JPEG_ConvertorParams.H_factor) != 0)
90004b60:	e7b3      	b.n	90004aca <TGFX_JPEG_GetDecodeColorConvertFunc+0x3e>
        JPEG_ConvertorParams.LineOffset = 16 - JPEG_ConvertorParams.LineOffset;
90004b62:	f1c7 0710 	rsb	r7, r7, #16
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth;
90004b66:	ea4f 0e44 	mov.w	lr, r4, lsl #1
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
90004b6a:	0921      	lsrs	r1, r4, #4
90004b6c:	46b4      	mov	ip, r6
  JPEG_ConvertorParams.WidthExtend = JPEG_ConvertorParams.ImageWidth + JPEG_ConvertorParams.LineOffset;
90004b6e:	443c      	add	r4, r7
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
90004b70:	4630      	mov	r0, r6
90004b72:	e7c6      	b.n	90004b02 <TGFX_JPEG_GetDecodeColorConvertFunc+0x76>
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth;
90004b74:	0061      	lsls	r1, r4, #1
      JPEG_ConvertorParams.V_factor  = 8;
90004b76:	2008      	movs	r0, #8
      JPEG_ConvertorParams.LineOffset = JPEG_ConvertorParams.ImageWidth % 16;
90004b78:	615f      	str	r7, [r3, #20]
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth;
90004b7a:	6299      	str	r1, [r3, #40]	@ 0x28
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
90004b7c:	0921      	lsrs	r1, r4, #4
      JPEG_ConvertorParams.H_factor = 16;
90004b7e:	61de      	str	r6, [r3, #28]
      JPEG_ConvertorParams.V_factor  = 8;
90004b80:	e9c3 0408 	strd	r0, r4, [r3, #32]
  if((JPEG_ConvertorParams.ImageWidth % JPEG_ConvertorParams.H_factor) != 0)
90004b84:	e7a1      	b.n	90004aca <TGFX_JPEG_GetDecodeColorConvertFunc+0x3e>
90004b86:	bf00      	nop
90004b88:	2400d550 	.word	0x2400d550
90004b8c:	90004695 	.word	0x90004695
90004b90:	900047ed 	.word	0x900047ed
90004b94:	900043ad 	.word	0x900043ad
90004b98:	900040cd 	.word	0x900040cd
90004b9c:	90003ebd 	.word	0x90003ebd

90004ba0 <TGFX_JPEG_InitColorTables>:
  * @brief  Initializes the colors conversion Look Up Tables
  * @param  None
  * @retval None
  */
void TGFX_JPEG_InitColorTables(void)
{
90004ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004ba4:	f8df c1bc 	ldr.w	ip, [pc, #444]	@ 90004d64 <TGFX_JPEG_InitColorTables+0x1c4>
90004ba8:	b0a5      	sub	sp, #148	@ 0x94
90004baa:	f8df 81bc 	ldr.w	r8, [pc, #444]	@ 90004d68 <TGFX_JPEG_InitColorTables+0x1c8>
90004bae:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
90004bb2:	f8df e1b8 	ldr.w	lr, [pc, #440]	@ 90004d6c <TGFX_JPEG_InitColorTables+0x1cc>
  */
void TGFX_JPEG_InitPreProcColorTables(void)
{
  int32_t i;

  for (i = 0; i <= 255; i++)
90004bb6:	2300      	movs	r3, #0
90004bb8:	4f60      	ldr	r7, [pc, #384]	@ (90004d3c <TGFX_JPEG_InitColorTables+0x19c>)
    GREEN_CB_LUT[i]        = (((-((int32_t) ((0.3313 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;

    /* BLUE_CB_LUT and RED_CR_LUT are identical */
    BLUE_CB_RED_CR_LUT[i]  = ((  ((int32_t) ((0.5 )    * (1L << 16)))  * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;

    GREEN_CR_LUT[i]        = (((-((int32_t) ((0.4187 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90004bba:	f64e 3b2f 	movw	fp, #60207	@ 0xeb2f
90004bbe:	4e60      	ldr	r6, [pc, #384]	@ (90004d40 <TGFX_JPEG_InitColorTables+0x1a0>)
    BLUE_CR_LUT[i]         = (((-((int32_t) ((0.0813 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90004bc0:	f249 4ad0 	movw	sl, #38096	@ 0x94d0
90004bc4:	4d5f      	ldr	r5, [pc, #380]	@ (90004d44 <TGFX_JPEG_InitColorTables+0x1a4>)
  for (i = 0; i <= 255; i++)
90004bc6:	f644 498b 	movw	r9, #19595	@ 0x4c8b
90004bca:	4c5f      	ldr	r4, [pc, #380]	@ (90004d48 <TGFX_JPEG_InitColorTables+0x1a8>)
90004bcc:	485f      	ldr	r0, [pc, #380]	@ (90004d4c <TGFX_JPEG_InitColorTables+0x1ac>)
    GREEN_Y_LUT[i]         = ((  ((int32_t) ((0.587 )  * (1L << 16)))  * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90004bce:	f249 6245 	movw	r2, #38469	@ 0x9645
90004bd2:	fb02 f203 	mul.w	r2, r2, r3
90004bd6:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90004bda:	1412      	asrs	r2, r2, #16
90004bdc:	f84e 2f04 	str.w	r2, [lr, #4]!
    BLUE_Y_LUT[i]          = ((  ((int32_t) ((0.114 )  * (1L << 16)))  * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90004be0:	f641 522f 	movw	r2, #7471	@ 0x1d2f
90004be4:	fb02 f203 	mul.w	r2, r2, r3
90004be8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90004bec:	1412      	asrs	r2, r2, #16
90004bee:	f84c 2f04 	str.w	r2, [ip, #4]!
    RED_CB_LUT[i]          = (((-((int32_t) ((0.1687 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90004bf2:	4a57      	ldr	r2, [pc, #348]	@ (90004d50 <TGFX_JPEG_InitColorTables+0x1b0>)
90004bf4:	fb02 f203 	mul.w	r2, r2, r3
90004bf8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90004bfc:	1412      	asrs	r2, r2, #16
90004bfe:	f847 2f04 	str.w	r2, [r7, #4]!
    GREEN_CB_LUT[i]        = (((-((int32_t) ((0.3313 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90004c02:	4a54      	ldr	r2, [pc, #336]	@ (90004d54 <TGFX_JPEG_InitColorTables+0x1b4>)
90004c04:	fb02 f203 	mul.w	r2, r2, r3
    BLUE_CB_RED_CR_LUT[i]  = ((  ((int32_t) ((0.5 )    * (1L << 16)))  * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90004c08:	3301      	adds	r3, #1
    GREEN_CB_LUT[i]        = (((-((int32_t) ((0.3313 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90004c0a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
  for (i = 0; i <= 255; i++)
90004c0e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
    GREEN_CB_LUT[i]        = (((-((int32_t) ((0.3313 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90004c12:	ea4f 4222 	mov.w	r2, r2, asr #16
90004c16:	f846 2f04 	str.w	r2, [r6, #4]!
    GREEN_CR_LUT[i]        = (((-((int32_t) ((0.4187 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90004c1a:	4a4f      	ldr	r2, [pc, #316]	@ (90004d58 <TGFX_JPEG_InitColorTables+0x1b8>)
90004c1c:	fb02 b203 	mla	r2, r2, r3, fp
90004c20:	ea4f 4222 	mov.w	r2, r2, asr #16
90004c24:	f844 2f04 	str.w	r2, [r4, #4]!
    BLUE_CR_LUT[i]         = (((-((int32_t) ((0.0813 ) * (1L << 16)))) * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90004c28:	4a4c      	ldr	r2, [pc, #304]	@ (90004d5c <TGFX_JPEG_InitColorTables+0x1bc>)
90004c2a:	fb02 a203 	mla	r2, r2, r3, sl
90004c2e:	ea4f 4222 	mov.w	r2, r2, asr #16
90004c32:	f840 2f04 	str.w	r2, [r0, #4]!
    RED_Y_LUT[i]           = ((  ((int32_t) ((0.299 )  * (1L << 16)))  * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90004c36:	ea4f 4221 	mov.w	r2, r1, asr #16
  for (i = 0; i <= 255; i++)
90004c3a:	4449      	add	r1, r9
    RED_Y_LUT[i]           = ((  ((int32_t) ((0.299 )  * (1L << 16)))  * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90004c3c:	f848 2f04 	str.w	r2, [r8, #4]!
    BLUE_CB_RED_CR_LUT[i]  = ((  ((int32_t) ((0.5 )    * (1L << 16)))  * i) + ((int32_t) 1 << (16 - 1))) >> 16 ;
90004c40:	f343 024f 	sbfx	r2, r3, #1, #16
90004c44:	f845 2f04 	str.w	r2, [r5, #4]!
  for (i = 0; i <= 255; i++)
90004c48:	d1c1      	bne.n	90004bce <TGFX_JPEG_InitColorTables+0x2e>
90004c4a:	2200      	movs	r2, #0
90004c4c:	4b44      	ldr	r3, [pc, #272]	@ (90004d60 <TGFX_JPEG_InitColorTables+0x1c0>)
90004c4e:	f04f 0e41 	mov.w	lr, #65	@ 0x41
90004c52:	f04f 0c42 	mov.w	ip, #66	@ 0x42
90004c56:	2743      	movs	r7, #67	@ 0x43
90004c58:	2644      	movs	r6, #68	@ 0x44
90004c5a:	2545      	movs	r5, #69	@ 0x45
90004c5c:	2446      	movs	r4, #70	@ 0x46
90004c5e:	2047      	movs	r0, #71	@ 0x47
void TGFX_JPEG_Init_MCU_LUT(void)
{
  uint32_t i, j, offset;

  /*Y LUT */
  for(i = 0; i < 16; i++)
90004c60:	4611      	mov	r1, r2
90004c62:	e035      	b.n	90004cd0 <TGFX_JPEG_InitColorTables+0x130>
      offset =  j + (i*8);
      if((j>=8) && (i>=8)) offset+= 120;
      else  if((j>=8) && (i<8)) offset+= 56;
      else  if((j<8) && (i>=8)) offset+= 64;

      JPEG_Y_MCU_LUT[i*16 + j] = offset;
90004c64:	f8a3 9004 	strh.w	r9, [r3, #4]
      offset =  j + (i*8);
90004c68:	f102 0904 	add.w	r9, r2, #4
      JPEG_Y_MCU_LUT[i*16 + j] = offset;
90004c6c:	f8a3 8006 	strh.w	r8, [r3, #6]
      offset =  j + (i*8);
90004c70:	f102 0806 	add.w	r8, r2, #6
      JPEG_Y_MCU_LUT[i*16 + j] = offset;
90004c74:	f8a3 9008 	strh.w	r9, [r3, #8]
      offset =  j + (i*8);
90004c78:	f102 0905 	add.w	r9, r2, #5
      JPEG_Y_MCU_LUT[i*16 + j] = offset;
90004c7c:	801a      	strh	r2, [r3, #0]
90004c7e:	f8a3 900a 	strh.w	r9, [r3, #10]
      offset =  j + (i*8);
90004c82:	f102 0907 	add.w	r9, r2, #7
      JPEG_Y_MCU_LUT[i*16 + j] = offset;
90004c86:	f8a3 800c 	strh.w	r8, [r3, #12]
90004c8a:	3208      	adds	r2, #8
      else  if((j>=8) && (i<8)) offset+= 56;
90004c8c:	4680      	mov	r8, r0
      JPEG_Y_MCU_LUT[i*16 + j] = offset;
90004c8e:	f8a3 a002 	strh.w	sl, [r3, #2]
90004c92:	f8a3 e012 	strh.w	lr, [r3, #18]
90004c96:	f8a3 c014 	strh.w	ip, [r3, #20]
90004c9a:	82df      	strh	r7, [r3, #22]
90004c9c:	831e      	strh	r6, [r3, #24]
90004c9e:	f8a3 900e 	strh.w	r9, [r3, #14]
90004ca2:	f8a3 b010 	strh.w	fp, [r3, #16]
90004ca6:	835d      	strh	r5, [r3, #26]
90004ca8:	839c      	strh	r4, [r3, #28]
  for(i = 0; i < 16; i++)
90004caa:	3101      	adds	r1, #1
      JPEG_Y_MCU_LUT[i*16 + j] = offset;
90004cac:	f8a3 801e 	strh.w	r8, [r3, #30]
  for(i = 0; i < 16; i++)
90004cb0:	3008      	adds	r0, #8
90004cb2:	3320      	adds	r3, #32
90004cb4:	2910      	cmp	r1, #16
90004cb6:	f104 0408 	add.w	r4, r4, #8
90004cba:	f105 0508 	add.w	r5, r5, #8
90004cbe:	f106 0608 	add.w	r6, r6, #8
90004cc2:	f107 0708 	add.w	r7, r7, #8
90004cc6:	f10c 0c08 	add.w	ip, ip, #8
90004cca:	f10e 0e08 	add.w	lr, lr, #8
90004cce:	d04f      	beq.n	90004d70 <TGFX_JPEG_InitColorTables+0x1d0>
      else  if((j<8) && (i>=8)) offset+= 64;
90004cd0:	2907      	cmp	r1, #7
      offset =  j + (i*8);
90004cd2:	f102 0a01 	add.w	sl, r2, #1
90004cd6:	f102 0902 	add.w	r9, r2, #2
90004cda:	f102 0803 	add.w	r8, r2, #3
      else  if((j<8) && (i>=8)) offset+= 64;
90004cde:	f102 0b40 	add.w	fp, r2, #64	@ 0x40
90004ce2:	d9bf      	bls.n	90004c64 <TGFX_JPEG_InitColorTables+0xc4>
      if((j>=8) && (i>=8)) offset+= 120;
90004ce4:	f102 0980 	add.w	r9, r2, #128	@ 0x80
90004ce8:	f102 0881 	add.w	r8, r2, #129	@ 0x81
      JPEG_Y_MCU_LUT[i*16 + j] = offset;
90004cec:	f8a3 b000 	strh.w	fp, [r3]
90004cf0:	f8a3 9010 	strh.w	r9, [r3, #16]
      if((j>=8) && (i>=8)) offset+= 120;
90004cf4:	f102 0982 	add.w	r9, r2, #130	@ 0x82
      JPEG_Y_MCU_LUT[i*16 + j] = offset;
90004cf8:	f8a3 8012 	strh.w	r8, [r3, #18]
      if((j>=8) && (i>=8)) offset+= 120;
90004cfc:	f102 0883 	add.w	r8, r2, #131	@ 0x83
      JPEG_Y_MCU_LUT[i*16 + j] = offset;
90004d00:	f8a3 9014 	strh.w	r9, [r3, #20]
      if((j>=8) && (i>=8)) offset+= 120;
90004d04:	f102 0984 	add.w	r9, r2, #132	@ 0x84
      JPEG_Y_MCU_LUT[i*16 + j] = offset;
90004d08:	f8a3 8016 	strh.w	r8, [r3, #22]
      if((j>=8) && (i>=8)) offset+= 120;
90004d0c:	f102 0885 	add.w	r8, r2, #133	@ 0x85
      JPEG_Y_MCU_LUT[i*16 + j] = offset;
90004d10:	f8a3 9018 	strh.w	r9, [r3, #24]
      if((j>=8) && (i>=8)) offset+= 120;
90004d14:	f102 0986 	add.w	r9, r2, #134	@ 0x86
      JPEG_Y_MCU_LUT[i*16 + j] = offset;
90004d18:	f8a3 801a 	strh.w	r8, [r3, #26]
      if((j>=8) && (i>=8)) offset+= 120;
90004d1c:	f102 0887 	add.w	r8, r2, #135	@ 0x87
      JPEG_Y_MCU_LUT[i*16 + j] = offset;
90004d20:	f8a3 e002 	strh.w	lr, [r3, #2]
90004d24:	3208      	adds	r2, #8
90004d26:	f8a3 c004 	strh.w	ip, [r3, #4]
90004d2a:	80df      	strh	r7, [r3, #6]
90004d2c:	811e      	strh	r6, [r3, #8]
90004d2e:	815d      	strh	r5, [r3, #10]
90004d30:	819c      	strh	r4, [r3, #12]
90004d32:	81d8      	strh	r0, [r3, #14]
90004d34:	f8a3 901c 	strh.w	r9, [r3, #28]
90004d38:	e7b7      	b.n	90004caa <TGFX_JPEG_InitColorTables+0x10a>
90004d3a:	bf00      	nop
90004d3c:	2400bd4c 	.word	0x2400bd4c
90004d40:	2400ad4c 	.word	0x2400ad4c
90004d44:	2400b94c 	.word	0x2400b94c
90004d48:	2400b14c 	.word	0x2400b14c
90004d4c:	2400a54c 	.word	0x2400a54c
90004d50:	ffffd4d1 	.word	0xffffd4d1
90004d54:	ffffab30 	.word	0xffffab30
90004d58:	ffff94d1 	.word	0xffff94d1
90004d5c:	ffffeb30 	.word	0xffffeb30
90004d60:	2400a350 	.word	0x2400a350
90004d64:	2400a94c 	.word	0x2400a94c
90004d68:	2400c14c 	.word	0x2400c14c
90004d6c:	2400b54c 	.word	0x2400b54c
90004d70:	4b07      	ldr	r3, [pc, #28]	@ (90004d90 <TGFX_JPEG_InitColorTables+0x1f0>)
    }
  }

  /*Cb Cr K LUT*/
  for(i = 0; i < 16; i++)
90004d72:	2000      	movs	r0, #0
90004d74:	4a07      	ldr	r2, [pc, #28]	@ (90004d94 <TGFX_JPEG_InitColorTables+0x1f4>)
  for(i = 0; i < 16; i++)
90004d76:	f04f 0c80 	mov.w	ip, #128	@ 0x80
90004d7a:	9304      	str	r3, [sp, #16]
90004d7c:	4b06      	ldr	r3, [pc, #24]	@ (90004d98 <TGFX_JPEG_InitColorTables+0x1f8>)
90004d7e:	4907      	ldr	r1, [pc, #28]	@ (90004d9c <TGFX_JPEG_InitColorTables+0x1fc>)
90004d80:	9303      	str	r3, [sp, #12]
90004d82:	4b07      	ldr	r3, [pc, #28]	@ (90004da0 <TGFX_JPEG_InitColorTables+0x200>)
90004d84:	f8df e01c 	ldr.w	lr, [pc, #28]	@ 90004da4 <TGFX_JPEG_InitColorTables+0x204>
  for(i = 0; i < 16; i++)
90004d88:	469b      	mov	fp, r3
90004d8a:	9002      	str	r0, [sp, #8]
90004d8c:	e00c      	b.n	90004da8 <TGFX_JPEG_InitColorTables+0x208>
90004d8e:	bf00      	nop
90004d90:	2400a0d0 	.word	0x2400a0d0
90004d94:	24009a50 	.word	0x24009a50
90004d98:	24009ed0 	.word	0x24009ed0
90004d9c:	240097d0 	.word	0x240097d0
90004da0:	24009c50 	.word	0x24009c50
90004da4:	240095d0 	.word	0x240095d0
  {
    for(j = 0; j < 16; j++)
    {
      offset = i*16 + j;

      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004da8:	9802      	ldr	r0, [sp, #8]
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004daa:	f10c 0501 	add.w	r5, ip, #1

      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004dae:	f10c 0640 	add.w	r6, ip, #64	@ 0x40
90004db2:	2400      	movs	r4, #0
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004db4:	0843      	lsrs	r3, r0, #1
  for(i = 0; i < 16; i++)
90004db6:	1c47      	adds	r7, r0, #1
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004db8:	b2ad      	uxth	r5, r5
90004dba:	2000      	movs	r0, #0
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004dbc:	00db      	lsls	r3, r3, #3
  for(i = 0; i < 16; i++)
90004dbe:	9702      	str	r7, [sp, #8]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004dc0:	b2b6      	uxth	r6, r6
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004dc2:	9508      	str	r5, [sp, #32]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004dc4:	b29b      	uxth	r3, r3
  for(i = 0; i < 16; i++)
90004dc6:	3120      	adds	r1, #32
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004dc8:	9606      	str	r6, [sp, #24]
90004dca:	4626      	mov	r6, r4
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004dcc:	f503 7580 	add.w	r5, r3, #256	@ 0x100
90004dd0:	f503 7a81 	add.w	sl, r3, #258	@ 0x102
90004dd4:	f203 1903 	addw	r9, r3, #259	@ 0x103
  for(i = 0; i < 16; i++)
90004dd8:	f10b 0b20 	add.w	fp, fp, #32
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004ddc:	b2ad      	uxth	r5, r5
  for(i = 0; i < 16; i++)
90004dde:	3220      	adds	r2, #32
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004de0:	fa1f fa8a 	uxth.w	sl, sl
90004de4:	f365 060f 	bfi	r6, r5, #0, #16
90004de8:	fa1f f989 	uxth.w	r9, r9
90004dec:	f365 461f 	bfi	r6, r5, #16, #16
90004df0:	4635      	mov	r5, r6
90004df2:	9e04      	ldr	r6, [sp, #16]
90004df4:	9500      	str	r5, [sp, #0]
90004df6:	4634      	mov	r4, r6
90004df8:	6035      	str	r5, [r6, #0]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004dfa:	f10c 0541 	add.w	r5, ip, #65	@ 0x41
90004dfe:	b2ad      	uxth	r5, r5
90004e00:	950a      	str	r5, [sp, #40]	@ 0x28
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e02:	f10c 0502 	add.w	r5, ip, #2
90004e06:	fa1f f885 	uxth.w	r8, r5
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e0a:	f10c 0542 	add.w	r5, ip, #66	@ 0x42
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e0e:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e12:	fa1f f885 	uxth.w	r8, r5
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e16:	f10c 0503 	add.w	r5, ip, #3
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e1a:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e1e:	fa1f f885 	uxth.w	r8, r5
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e22:	f10c 0543 	add.w	r5, ip, #67	@ 0x43
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e26:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e2a:	fa1f f885 	uxth.w	r8, r5
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e2e:	f10c 0504 	add.w	r5, ip, #4
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e32:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e36:	fa1f f885 	uxth.w	r8, r5
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e3a:	f10c 0544 	add.w	r5, ip, #68	@ 0x44
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e3e:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e42:	fa1f f885 	uxth.w	r8, r5
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e46:	f10c 0505 	add.w	r5, ip, #5
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e4a:	f8cd 8058 	str.w	r8, [sp, #88]	@ 0x58
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e4e:	fa1f f885 	uxth.w	r8, r5
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e52:	f10c 0545 	add.w	r5, ip, #69	@ 0x45
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e56:	f8cd 8060 	str.w	r8, [sp, #96]	@ 0x60
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e5a:	fa1f f885 	uxth.w	r8, r5
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e5e:	f10c 0506 	add.w	r5, ip, #6
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e62:	f8cd 8068 	str.w	r8, [sp, #104]	@ 0x68
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e66:	fa1f f885 	uxth.w	r8, r5
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e6a:	f10c 0546 	add.w	r5, ip, #70	@ 0x46
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e6e:	f8cd 8070 	str.w	r8, [sp, #112]	@ 0x70
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e72:	fa1f f885 	uxth.w	r8, r5
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e76:	f10c 0507 	add.w	r5, ip, #7
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e7a:	f8cd 8078 	str.w	r8, [sp, #120]	@ 0x78
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e7e:	fa1f f885 	uxth.w	r8, r5
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e82:	f10c 0547 	add.w	r5, ip, #71	@ 0x47
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004e86:	f8cd 8080 	str.w	r8, [sp, #128]	@ 0x80
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e8a:	fa1f f885 	uxth.w	r8, r5
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004e8e:	f503 75a0 	add.w	r5, r3, #320	@ 0x140
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90004e92:	f8cd 8088 	str.w	r8, [sp, #136]	@ 0x88
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004e96:	fa1f f885 	uxth.w	r8, r5

      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004e9a:	f503 75c0 	add.w	r5, r3, #384	@ 0x180
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004e9e:	f8cd 8014 	str.w	r8, [sp, #20]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004ea2:	fa1f f885 	uxth.w	r8, r5
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004ea6:	f203 1501 	addw	r5, r3, #257	@ 0x101
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004eaa:	f8cd 801c 	str.w	r8, [sp, #28]
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004eae:	b2ad      	uxth	r5, r5
90004eb0:	f365 000f 	bfi	r0, r5, #0, #16
90004eb4:	f365 401f 	bfi	r0, r5, #16, #16
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004eb8:	f203 1541 	addw	r5, r3, #321	@ 0x141
90004ebc:	fa1f f885 	uxth.w	r8, r5
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004ec0:	f203 1581 	addw	r5, r3, #385	@ 0x181
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004ec4:	6070      	str	r0, [r6, #4]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004ec6:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004eca:	fa1f f885 	uxth.w	r8, r5
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004ece:	f503 75a1 	add.w	r5, r3, #322	@ 0x142
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004ed2:	9001      	str	r0, [sp, #4]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004ed4:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004ed8:	f203 1047 	addw	r0, r3, #327	@ 0x147
90004edc:	fa1f f885 	uxth.w	r8, r5
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004ee0:	f503 75c1 	add.w	r5, r3, #386	@ 0x182
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004ee4:	b280      	uxth	r0, r0
90004ee6:	f8cd 8034 	str.w	r8, [sp, #52]	@ 0x34
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004eea:	fa1f f885 	uxth.w	r8, r5
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004eee:	f203 1543 	addw	r5, r3, #323	@ 0x143
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004ef2:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004ef6:	fa1f f885 	uxth.w	r8, r5
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004efa:	f203 1583 	addw	r5, r3, #387	@ 0x183
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004efe:	f8cd 8044 	str.w	r8, [sp, #68]	@ 0x44
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004f02:	fa1f f885 	uxth.w	r8, r5
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004f06:	f503 75a2 	add.w	r5, r3, #324	@ 0x144
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004f0a:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004f0e:	f503 7882 	add.w	r8, r3, #260	@ 0x104
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004f12:	b2af      	uxth	r7, r5
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004f14:	f503 75c2 	add.w	r5, r3, #388	@ 0x184
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004f18:	fa1f f888 	uxth.w	r8, r8
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004f1c:	9715      	str	r7, [sp, #84]	@ 0x54
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004f1e:	b2af      	uxth	r7, r5
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004f20:	f203 1545 	addw	r5, r3, #325	@ 0x145
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004f24:	9717      	str	r7, [sp, #92]	@ 0x5c
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004f26:	f203 1705 	addw	r7, r3, #261	@ 0x105
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004f2a:	b2ae      	uxth	r6, r5
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004f2c:	f203 1585 	addw	r5, r3, #389	@ 0x185
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004f30:	b2bf      	uxth	r7, r7
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004f32:	b2ad      	uxth	r5, r5
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004f34:	9619      	str	r6, [sp, #100]	@ 0x64
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004f36:	f503 7683 	add.w	r6, r3, #262	@ 0x106
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004f3a:	9021      	str	r0, [sp, #132]	@ 0x84
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004f3c:	951b      	str	r5, [sp, #108]	@ 0x6c
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004f3e:	f503 75a3 	add.w	r5, r3, #326	@ 0x146
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004f42:	b2b6      	uxth	r6, r6
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004f44:	9803      	ldr	r0, [sp, #12]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90004f46:	b2ad      	uxth	r5, r5
90004f48:	951d      	str	r5, [sp, #116]	@ 0x74
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004f4a:	f503 75c3 	add.w	r5, r3, #390	@ 0x186
90004f4e:	b2ad      	uxth	r5, r5
90004f50:	951f      	str	r5, [sp, #124]	@ 0x7c
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004f52:	f203 1507 	addw	r5, r3, #263	@ 0x107
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004f56:	f203 1387 	addw	r3, r3, #391	@ 0x187
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004f5a:	b2ad      	uxth	r5, r5
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90004f5c:	b29b      	uxth	r3, r3
90004f5e:	9323      	str	r3, [sp, #140]	@ 0x8c
90004f60:	2300      	movs	r3, #0
90004f62:	f36a 030f 	bfi	r3, sl, #0, #16
90004f66:	f36a 431f 	bfi	r3, sl, #16, #16
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004f6a:	f04f 0a00 	mov.w	sl, #0
90004f6e:	f369 0a0f 	bfi	sl, r9, #0, #16
90004f72:	60a3      	str	r3, [r4, #8]
90004f74:	f369 4a1f 	bfi	sl, r9, #16, #16
90004f78:	f04f 0900 	mov.w	r9, #0
90004f7c:	f368 090f 	bfi	r9, r8, #0, #16
90004f80:	f8c4 a00c 	str.w	sl, [r4, #12]
90004f84:	f368 491f 	bfi	r9, r8, #16, #16
90004f88:	f04f 0800 	mov.w	r8, #0
90004f8c:	f367 080f 	bfi	r8, r7, #0, #16
90004f90:	f8c4 9010 	str.w	r9, [r4, #16]
90004f94:	f367 481f 	bfi	r8, r7, #16, #16
90004f98:	2700      	movs	r7, #0
90004f9a:	f366 070f 	bfi	r7, r6, #0, #16
90004f9e:	f8c4 8014 	str.w	r8, [r4, #20]
90004fa2:	f366 471f 	bfi	r7, r6, #16, #16
90004fa6:	2600      	movs	r6, #0
90004fa8:	f365 060f 	bfi	r6, r5, #0, #16
90004fac:	61a7      	str	r7, [r4, #24]
90004fae:	f365 461f 	bfi	r6, r5, #16, #16
  for(i = 0; i < 16; i++)
90004fb2:	f104 0520 	add.w	r5, r4, #32
90004fb6:	9504      	str	r5, [sp, #16]
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004fb8:	2500      	movs	r5, #0
      JPEG_Cb_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90004fba:	61e6      	str	r6, [r4, #28]
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004fbc:	f36c 050f 	bfi	r5, ip, #0, #16
90004fc0:	9c08      	ldr	r4, [sp, #32]
90004fc2:	f36c 451f 	bfi	r5, ip, #16, #16
  for(i = 0; i < 16; i++)
90004fc6:	f10c 0c08 	add.w	ip, ip, #8
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004fca:	6005      	str	r5, [r0, #0]
90004fcc:	2500      	movs	r5, #0
  for(i = 0; i < 16; i++)
90004fce:	fa1f fc8c 	uxth.w	ip, ip
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90004fd2:	f364 050f 	bfi	r5, r4, #0, #16
90004fd6:	f364 451f 	bfi	r5, r4, #16, #16
90004fda:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90004fdc:	6045      	str	r5, [r0, #4]
90004fde:	2500      	movs	r5, #0
90004fe0:	f364 050f 	bfi	r5, r4, #0, #16
90004fe4:	f364 451f 	bfi	r5, r4, #16, #16
90004fe8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90004fea:	6085      	str	r5, [r0, #8]
90004fec:	2500      	movs	r5, #0
90004fee:	f364 050f 	bfi	r5, r4, #0, #16
90004ff2:	f364 451f 	bfi	r5, r4, #16, #16
90004ff6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90004ff8:	60c5      	str	r5, [r0, #12]
90004ffa:	2500      	movs	r5, #0
90004ffc:	f364 050f 	bfi	r5, r4, #0, #16
90005000:	f364 451f 	bfi	r5, r4, #16, #16
90005004:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90005006:	6105      	str	r5, [r0, #16]
90005008:	2500      	movs	r5, #0
9000500a:	f364 050f 	bfi	r5, r4, #0, #16
9000500e:	f364 451f 	bfi	r5, r4, #16, #16
90005012:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90005014:	6145      	str	r5, [r0, #20]
90005016:	2500      	movs	r5, #0
90005018:	f364 050f 	bfi	r5, r4, #0, #16
9000501c:	f364 451f 	bfi	r5, r4, #16, #16
90005020:	9c20      	ldr	r4, [sp, #128]	@ 0x80
90005022:	6185      	str	r5, [r0, #24]
90005024:	2500      	movs	r5, #0
90005026:	f364 050f 	bfi	r5, r4, #0, #16
9000502a:	f364 451f 	bfi	r5, r4, #16, #16
  for(i = 0; i < 16; i++)
9000502e:	f100 0420 	add.w	r4, r0, #32
      JPEG_Cb_MCU_422_LUT[offset] = (j/2) + (i*8) + 128;
90005032:	61c5      	str	r5, [r0, #28]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90005034:	2500      	movs	r5, #0
  for(i = 0; i < 16; i++)
90005036:	9403      	str	r4, [sp, #12]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
90005038:	9c05      	ldr	r4, [sp, #20]
9000503a:	f364 050f 	bfi	r5, r4, #0, #16
9000503e:	f364 451f 	bfi	r5, r4, #16, #16
90005042:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90005044:	f84b 5c20 	str.w	r5, [fp, #-32]
90005048:	2500      	movs	r5, #0
9000504a:	f364 050f 	bfi	r5, r4, #0, #16
9000504e:	f364 451f 	bfi	r5, r4, #16, #16
90005052:	f84b 5c1c 	str.w	r5, [fp, #-28]
90005056:	2500      	movs	r5, #0
90005058:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
9000505a:	9806      	ldr	r0, [sp, #24]
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
9000505c:	f364 050f 	bfi	r5, r4, #0, #16
90005060:	f364 451f 	bfi	r5, r4, #16, #16
90005064:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90005066:	f84b 5c18 	str.w	r5, [fp, #-24]
9000506a:	2500      	movs	r5, #0
9000506c:	f364 050f 	bfi	r5, r4, #0, #16
90005070:	f364 451f 	bfi	r5, r4, #16, #16
90005074:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90005076:	f84b 5c14 	str.w	r5, [fp, #-20]
9000507a:	2500      	movs	r5, #0
9000507c:	f364 050f 	bfi	r5, r4, #0, #16
90005080:	f364 451f 	bfi	r5, r4, #16, #16
90005084:	9c19      	ldr	r4, [sp, #100]	@ 0x64
90005086:	f84b 5c10 	str.w	r5, [fp, #-16]
9000508a:	2500      	movs	r5, #0
9000508c:	f364 050f 	bfi	r5, r4, #0, #16
90005090:	f364 451f 	bfi	r5, r4, #16, #16
90005094:	9c1d      	ldr	r4, [sp, #116]	@ 0x74
90005096:	f84b 5c0c 	str.w	r5, [fp, #-12]
9000509a:	2500      	movs	r5, #0
9000509c:	f364 050f 	bfi	r5, r4, #0, #16
900050a0:	f364 451f 	bfi	r5, r4, #16, #16
900050a4:	9c21      	ldr	r4, [sp, #132]	@ 0x84
900050a6:	f84b 5c08 	str.w	r5, [fp, #-8]
900050aa:	2500      	movs	r5, #0
900050ac:	f364 050f 	bfi	r5, r4, #0, #16
900050b0:	f364 451f 	bfi	r5, r4, #16, #16
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
900050b4:	2400      	movs	r4, #0
      JPEG_Cr_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 320;
900050b6:	f84b 5c04 	str.w	r5, [fp, #-4]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
900050ba:	2500      	movs	r5, #0
900050bc:	f360 050f 	bfi	r5, r0, #0, #16
900050c0:	f360 451f 	bfi	r5, r0, #16, #16
900050c4:	980a      	ldr	r0, [sp, #40]	@ 0x28
900050c6:	f842 5c20 	str.w	r5, [r2, #-32]
900050ca:	2500      	movs	r5, #0
900050cc:	f360 050f 	bfi	r5, r0, #0, #16
900050d0:	f360 451f 	bfi	r5, r0, #16, #16
900050d4:	980e      	ldr	r0, [sp, #56]	@ 0x38
900050d6:	f842 5c1c 	str.w	r5, [r2, #-28]
900050da:	2500      	movs	r5, #0
900050dc:	f360 050f 	bfi	r5, r0, #0, #16
900050e0:	f360 451f 	bfi	r5, r0, #16, #16
900050e4:	9812      	ldr	r0, [sp, #72]	@ 0x48
900050e6:	f842 5c18 	str.w	r5, [r2, #-24]
900050ea:	2500      	movs	r5, #0
900050ec:	f360 050f 	bfi	r5, r0, #0, #16
900050f0:	f360 451f 	bfi	r5, r0, #16, #16
900050f4:	9816      	ldr	r0, [sp, #88]	@ 0x58
900050f6:	f842 5c14 	str.w	r5, [r2, #-20]
900050fa:	2500      	movs	r5, #0
900050fc:	f360 050f 	bfi	r5, r0, #0, #16
90005100:	f360 451f 	bfi	r5, r0, #16, #16
90005104:	981a      	ldr	r0, [sp, #104]	@ 0x68
90005106:	f842 5c10 	str.w	r5, [r2, #-16]
9000510a:	2500      	movs	r5, #0
9000510c:	f360 050f 	bfi	r5, r0, #0, #16
90005110:	f360 451f 	bfi	r5, r0, #16, #16
90005114:	981e      	ldr	r0, [sp, #120]	@ 0x78
90005116:	f842 5c0c 	str.w	r5, [r2, #-12]
9000511a:	2500      	movs	r5, #0
9000511c:	f360 050f 	bfi	r5, r0, #0, #16
90005120:	f360 451f 	bfi	r5, r0, #16, #16
90005124:	9822      	ldr	r0, [sp, #136]	@ 0x88
90005126:	f842 5c08 	str.w	r5, [r2, #-8]
9000512a:	2500      	movs	r5, #0
9000512c:	f360 050f 	bfi	r5, r0, #0, #16
90005130:	f360 451f 	bfi	r5, r0, #16, #16
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90005134:	9807      	ldr	r0, [sp, #28]
      JPEG_Cr_MCU_422_LUT[offset] = (j/2) + (i*8) + 192;
90005136:	f842 5c04 	str.w	r5, [r2, #-4]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
9000513a:	2500      	movs	r5, #0
9000513c:	f360 050f 	bfi	r5, r0, #0, #16
90005140:	f360 451f 	bfi	r5, r0, #16, #16
90005144:	f841 5c20 	str.w	r5, [r1, #-32]
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90005148:	9d00      	ldr	r5, [sp, #0]
9000514a:	f8ce 5000 	str.w	r5, [lr]
9000514e:	9801      	ldr	r0, [sp, #4]
90005150:	f8ce 601c 	str.w	r6, [lr, #28]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90005154:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
90005156:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
90005158:	e9ce 0301 	strd	r0, r3, [lr, #4]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
9000515c:	2300      	movs	r3, #0
9000515e:	9817      	ldr	r0, [sp, #92]	@ 0x5c
90005160:	f366 030f 	bfi	r3, r6, #0, #16
90005164:	f366 431f 	bfi	r3, r6, #16, #16
90005168:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
      JPEG_K_MCU_422_LUT[offset] = (j/2) + ((i/2)*8) + 256;
9000516a:	e9ce 8705 	strd	r8, r7, [lr, #20]
9000516e:	e9ce a903 	strd	sl, r9, [lr, #12]
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90005172:	f841 3c1c 	str.w	r3, [r1, #-28]
90005176:	2300      	movs	r3, #0
  for(i = 0; i < 16; i++)
90005178:	9f02      	ldr	r7, [sp, #8]
9000517a:	f10e 0e20 	add.w	lr, lr, #32
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
9000517e:	f366 030f 	bfi	r3, r6, #0, #16
  for(i = 0; i < 16; i++)
90005182:	2f10      	cmp	r7, #16
      JPEG_K_MCU_420_LUT[offset] = (j/2) + ((i/2)*8) + 384;
90005184:	f366 431f 	bfi	r3, r6, #16, #16
90005188:	f841 3c18 	str.w	r3, [r1, #-24]
9000518c:	f04f 0300 	mov.w	r3, #0
90005190:	f365 030f 	bfi	r3, r5, #0, #16
90005194:	f365 431f 	bfi	r3, r5, #16, #16
90005198:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
9000519a:	f841 3c14 	str.w	r3, [r1, #-20]
9000519e:	f04f 0300 	mov.w	r3, #0
900051a2:	f365 040f 	bfi	r4, r5, #0, #16
900051a6:	f360 030f 	bfi	r3, r0, #0, #16
900051aa:	f365 441f 	bfi	r4, r5, #16, #16
900051ae:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
900051b0:	f360 431f 	bfi	r3, r0, #16, #16
900051b4:	f04f 0000 	mov.w	r0, #0
900051b8:	f841 4c0c 	str.w	r4, [r1, #-12]
900051bc:	f841 3c10 	str.w	r3, [r1, #-16]
900051c0:	4603      	mov	r3, r0
900051c2:	9c23      	ldr	r4, [sp, #140]	@ 0x8c
900051c4:	f365 000f 	bfi	r0, r5, #0, #16
900051c8:	f364 030f 	bfi	r3, r4, #0, #16
900051cc:	f365 401f 	bfi	r0, r5, #16, #16
900051d0:	f364 431f 	bfi	r3, r4, #16, #16
900051d4:	e941 0302 	strd	r0, r3, [r1, #-8]
  for(i = 0; i < 16; i++)
900051d8:	f47f ade6 	bne.w	90004da8 <TGFX_JPEG_InitColorTables+0x208>
  {
    for(j = 0; j < 8; j++)
    {
      offset = i*8 + j;

      JPEG_Y_MCU_444_LUT[offset]  = offset;
900051dc:	48d3      	ldr	r0, [pc, #844]	@ (9000552c <TGFX_JPEG_InitColorTables+0x98c>)
900051de:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
      JPEG_Cb_MCU_444_LUT[offset] = offset + 64 ;
900051e2:	49d3      	ldr	r1, [pc, #844]	@ (90005530 <TGFX_JPEG_InitColorTables+0x990>)
      JPEG_Y_MCU_444_LUT[offset]  = offset;
900051e4:	6004      	str	r4, [r0, #0]
900051e6:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
      JPEG_Cr_MCU_444_LUT[offset] = offset + 128 ;
900051ea:	4ad2      	ldr	r2, [pc, #840]	@ (90005534 <TGFX_JPEG_InitColorTables+0x994>)
      JPEG_Y_MCU_444_LUT[offset]  = offset;
900051ec:	6044      	str	r4, [r0, #4]
900051ee:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
      JPEG_K_MCU_444_LUT[offset]  = offset + 192 ;
900051f2:	4bd1      	ldr	r3, [pc, #836]	@ (90005538 <TGFX_JPEG_InitColorTables+0x998>)
      JPEG_Y_MCU_444_LUT[offset]  = offset;
900051f4:	6084      	str	r4, [r0, #8]
900051f6:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
900051fa:	4fd0      	ldr	r7, [pc, #832]	@ (9000553c <TGFX_JPEG_InitColorTables+0x99c>)
900051fc:	60c4      	str	r4, [r0, #12]
900051fe:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
90005202:	4ecf      	ldr	r6, [pc, #828]	@ (90005540 <TGFX_JPEG_InitColorTables+0x9a0>)
90005204:	6104      	str	r4, [r0, #16]
90005206:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
9000520a:	4dce      	ldr	r5, [pc, #824]	@ (90005544 <TGFX_JPEG_InitColorTables+0x9a4>)
9000520c:	6144      	str	r4, [r0, #20]
9000520e:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
  for (i = 0; i <= 255; i++)
90005212:	f8df b354 	ldr.w	fp, [pc, #852]	@ 90005568 <TGFX_JPEG_InitColorTables+0x9c8>
      JPEG_Y_MCU_444_LUT[offset]  = offset;
90005216:	6184      	str	r4, [r0, #24]
90005218:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
  for (i = 0; i <= 255; i++)
9000521c:	f8df a34c 	ldr.w	sl, [pc, #844]	@ 9000556c <TGFX_JPEG_InitColorTables+0x9cc>
      JPEG_Y_MCU_444_LUT[offset]  = offset;
90005220:	61c4      	str	r4, [r0, #28]
90005222:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
  for (i = 0; i <= 255; i++)
90005226:	f8df 9348 	ldr.w	r9, [pc, #840]	@ 90005570 <TGFX_JPEG_InitColorTables+0x9d0>
      JPEG_Y_MCU_444_LUT[offset]  = offset;
9000522a:	6204      	str	r4, [r0, #32]
9000522c:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
  for (i = 0; i <= 255; i++)
90005230:	f8df 8340 	ldr.w	r8, [pc, #832]	@ 90005574 <TGFX_JPEG_InitColorTables+0x9d4>
      JPEG_Y_MCU_444_LUT[offset]  = offset;
90005234:	6244      	str	r4, [r0, #36]	@ 0x24
90005236:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
  for (i = 0; i <= 255; i++)
9000523a:	f8df e33c 	ldr.w	lr, [pc, #828]	@ 90005578 <TGFX_JPEG_InitColorTables+0x9d8>
      JPEG_Y_MCU_444_LUT[offset]  = offset;
9000523e:	6284      	str	r4, [r0, #40]	@ 0x28
90005240:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
90005244:	62c4      	str	r4, [r0, #44]	@ 0x2c
90005246:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
9000524a:	6304      	str	r4, [r0, #48]	@ 0x30
9000524c:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
90005250:	6344      	str	r4, [r0, #52]	@ 0x34
90005252:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
90005256:	6384      	str	r4, [r0, #56]	@ 0x38
90005258:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
9000525c:	63c4      	str	r4, [r0, #60]	@ 0x3c
9000525e:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
90005262:	6404      	str	r4, [r0, #64]	@ 0x40
90005264:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
90005268:	6444      	str	r4, [r0, #68]	@ 0x44
9000526a:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
9000526e:	6484      	str	r4, [r0, #72]	@ 0x48
90005270:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
90005274:	64c4      	str	r4, [r0, #76]	@ 0x4c
90005276:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
9000527a:	6504      	str	r4, [r0, #80]	@ 0x50
9000527c:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
90005280:	6544      	str	r4, [r0, #84]	@ 0x54
90005282:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
90005286:	6584      	str	r4, [r0, #88]	@ 0x58
90005288:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
9000528c:	65c4      	str	r4, [r0, #92]	@ 0x5c
9000528e:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
90005292:	6604      	str	r4, [r0, #96]	@ 0x60
90005294:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
90005298:	6644      	str	r4, [r0, #100]	@ 0x64
9000529a:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
9000529e:	6684      	str	r4, [r0, #104]	@ 0x68
900052a0:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
900052a4:	66c4      	str	r4, [r0, #108]	@ 0x6c
900052a6:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
900052aa:	6704      	str	r4, [r0, #112]	@ 0x70
900052ac:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
900052b0:	6744      	str	r4, [r0, #116]	@ 0x74
900052b2:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
900052b6:	6784      	str	r4, [r0, #120]	@ 0x78
900052b8:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
900052bc:	67c4      	str	r4, [r0, #124]	@ 0x7c
      JPEG_Cb_MCU_444_LUT[offset] = offset + 64 ;
900052be:	f104 1402 	add.w	r4, r4, #131074	@ 0x20002
900052c2:	48a1      	ldr	r0, [pc, #644]	@ (90005548 <TGFX_JPEG_InitColorTables+0x9a8>)
900052c4:	e9c1 4000 	strd	r4, r0, [r1]
900052c8:	f104 1404 	add.w	r4, r4, #262148	@ 0x40004
900052cc:	f100 1004 	add.w	r0, r0, #262148	@ 0x40004
900052d0:	e9c1 4002 	strd	r4, r0, [r1, #8]
900052d4:	f104 1404 	add.w	r4, r4, #262148	@ 0x40004
900052d8:	f100 1004 	add.w	r0, r0, #262148	@ 0x40004
900052dc:	e9c1 4004 	strd	r4, r0, [r1, #16]
900052e0:	f104 1404 	add.w	r4, r4, #262148	@ 0x40004
900052e4:	f100 1004 	add.w	r0, r0, #262148	@ 0x40004
900052e8:	e9c1 4006 	strd	r4, r0, [r1, #24]
900052ec:	f104 1404 	add.w	r4, r4, #262148	@ 0x40004
900052f0:	f100 1004 	add.w	r0, r0, #262148	@ 0x40004
900052f4:	e9c1 4008 	strd	r4, r0, [r1, #32]
900052f8:	f104 1404 	add.w	r4, r4, #262148	@ 0x40004
900052fc:	f100 1004 	add.w	r0, r0, #262148	@ 0x40004
90005300:	e9c1 400a 	strd	r4, r0, [r1, #40]	@ 0x28
90005304:	f104 1404 	add.w	r4, r4, #262148	@ 0x40004
90005308:	f100 1004 	add.w	r0, r0, #262148	@ 0x40004
9000530c:	e9c1 400c 	strd	r4, r0, [r1, #48]	@ 0x30
90005310:	f104 1404 	add.w	r4, r4, #262148	@ 0x40004
90005314:	f100 1004 	add.w	r0, r0, #262148	@ 0x40004
90005318:	e9c1 400e 	strd	r4, r0, [r1, #56]	@ 0x38
9000531c:	f104 1404 	add.w	r4, r4, #262148	@ 0x40004
90005320:	f100 1004 	add.w	r0, r0, #262148	@ 0x40004
90005324:	e9c1 4010 	strd	r4, r0, [r1, #64]	@ 0x40
90005328:	f104 1404 	add.w	r4, r4, #262148	@ 0x40004
9000532c:	f100 1004 	add.w	r0, r0, #262148	@ 0x40004
90005330:	e9c1 4012 	strd	r4, r0, [r1, #72]	@ 0x48
90005334:	f104 1404 	add.w	r4, r4, #262148	@ 0x40004
90005338:	f100 1004 	add.w	r0, r0, #262148	@ 0x40004
9000533c:	e9c1 4014 	strd	r4, r0, [r1, #80]	@ 0x50
90005340:	f104 1404 	add.w	r4, r4, #262148	@ 0x40004
90005344:	f100 1004 	add.w	r0, r0, #262148	@ 0x40004
90005348:	e9c1 4016 	strd	r4, r0, [r1, #88]	@ 0x58
9000534c:	f104 1404 	add.w	r4, r4, #262148	@ 0x40004
90005350:	f100 1004 	add.w	r0, r0, #262148	@ 0x40004
90005354:	e9c1 4018 	strd	r4, r0, [r1, #96]	@ 0x60
90005358:	f104 1404 	add.w	r4, r4, #262148	@ 0x40004
9000535c:	f100 1004 	add.w	r0, r0, #262148	@ 0x40004
90005360:	e9c1 401a 	strd	r4, r0, [r1, #104]	@ 0x68
90005364:	f104 1404 	add.w	r4, r4, #262148	@ 0x40004
90005368:	f100 1004 	add.w	r0, r0, #262148	@ 0x40004
9000536c:	e9c1 401c 	strd	r4, r0, [r1, #112]	@ 0x70
90005370:	f104 1404 	add.w	r4, r4, #262148	@ 0x40004
90005374:	f100 1004 	add.w	r0, r0, #262148	@ 0x40004
90005378:	e9c1 401e 	strd	r4, r0, [r1, #120]	@ 0x78
      JPEG_Cr_MCU_444_LUT[offset] = offset + 128 ;
9000537c:	f104 1404 	add.w	r4, r4, #262148	@ 0x40004
90005380:	4972      	ldr	r1, [pc, #456]	@ (9000554c <TGFX_JPEG_InitColorTables+0x9ac>)
90005382:	f100 1006 	add.w	r0, r0, #393222	@ 0x60006
90005386:	e9c2 4100 	strd	r4, r1, [r2]
9000538a:	f101 1104 	add.w	r1, r1, #262148	@ 0x40004
9000538e:	f104 1408 	add.w	r4, r4, #524296	@ 0x80008
90005392:	e9c2 0102 	strd	r0, r1, [r2, #8]
90005396:	f101 1104 	add.w	r1, r1, #262148	@ 0x40004
9000539a:	f100 1008 	add.w	r0, r0, #524296	@ 0x80008
9000539e:	e9c2 4104 	strd	r4, r1, [r2, #16]
900053a2:	f101 1104 	add.w	r1, r1, #262148	@ 0x40004
900053a6:	f104 1408 	add.w	r4, r4, #524296	@ 0x80008
900053aa:	e9c2 0106 	strd	r0, r1, [r2, #24]
900053ae:	f101 1104 	add.w	r1, r1, #262148	@ 0x40004
900053b2:	f100 1008 	add.w	r0, r0, #524296	@ 0x80008
900053b6:	e9c2 4108 	strd	r4, r1, [r2, #32]
900053ba:	f101 1104 	add.w	r1, r1, #262148	@ 0x40004
900053be:	f104 1408 	add.w	r4, r4, #524296	@ 0x80008
900053c2:	e9c2 010a 	strd	r0, r1, [r2, #40]	@ 0x28
900053c6:	f101 1104 	add.w	r1, r1, #262148	@ 0x40004
900053ca:	f100 1008 	add.w	r0, r0, #524296	@ 0x80008
900053ce:	e9c2 410c 	strd	r4, r1, [r2, #48]	@ 0x30
900053d2:	f101 1104 	add.w	r1, r1, #262148	@ 0x40004
900053d6:	f104 1408 	add.w	r4, r4, #524296	@ 0x80008
900053da:	e9c2 010e 	strd	r0, r1, [r2, #56]	@ 0x38
900053de:	f101 1104 	add.w	r1, r1, #262148	@ 0x40004
900053e2:	f100 1008 	add.w	r0, r0, #524296	@ 0x80008
900053e6:	e9c2 4110 	strd	r4, r1, [r2, #64]	@ 0x40
900053ea:	f101 1104 	add.w	r1, r1, #262148	@ 0x40004
900053ee:	f104 1408 	add.w	r4, r4, #524296	@ 0x80008
900053f2:	e9c2 0112 	strd	r0, r1, [r2, #72]	@ 0x48
900053f6:	f101 1104 	add.w	r1, r1, #262148	@ 0x40004
900053fa:	f100 1008 	add.w	r0, r0, #524296	@ 0x80008
900053fe:	e9c2 4114 	strd	r4, r1, [r2, #80]	@ 0x50
90005402:	f101 1104 	add.w	r1, r1, #262148	@ 0x40004
90005406:	f104 1408 	add.w	r4, r4, #524296	@ 0x80008
9000540a:	e9c2 0116 	strd	r0, r1, [r2, #88]	@ 0x58
9000540e:	f101 1104 	add.w	r1, r1, #262148	@ 0x40004
90005412:	f100 1008 	add.w	r0, r0, #524296	@ 0x80008
90005416:	e9c2 4118 	strd	r4, r1, [r2, #96]	@ 0x60
9000541a:	f101 1104 	add.w	r1, r1, #262148	@ 0x40004
9000541e:	f104 1408 	add.w	r4, r4, #524296	@ 0x80008
90005422:	e9c2 011a 	strd	r0, r1, [r2, #104]	@ 0x68
90005426:	f101 1104 	add.w	r1, r1, #262148	@ 0x40004
9000542a:	f100 1008 	add.w	r0, r0, #524296	@ 0x80008
9000542e:	e9c2 411c 	strd	r4, r1, [r2, #112]	@ 0x70
90005432:	f101 1104 	add.w	r1, r1, #262148	@ 0x40004
      JPEG_K_MCU_444_LUT[offset]  = offset + 192 ;
90005436:	f104 1408 	add.w	r4, r4, #524296	@ 0x80008
      JPEG_Cr_MCU_444_LUT[offset] = offset + 128 ;
9000543a:	e9c2 011e 	strd	r0, r1, [r2, #120]	@ 0x78
      JPEG_K_MCU_444_LUT[offset]  = offset + 192 ;
9000543e:	f100 1006 	add.w	r0, r0, #393222	@ 0x60006
90005442:	f101 1106 	add.w	r1, r1, #393222	@ 0x60006
90005446:	4a42      	ldr	r2, [pc, #264]	@ (90005550 <TGFX_JPEG_InitColorTables+0x9b0>)
90005448:	e9c3 4000 	strd	r4, r0, [r3]
9000544c:	e9c3 1202 	strd	r1, r2, [r3, #8]
90005450:	f104 1408 	add.w	r4, r4, #524296	@ 0x80008
90005454:	f100 1008 	add.w	r0, r0, #524296	@ 0x80008
90005458:	f101 1108 	add.w	r1, r1, #524296	@ 0x80008
9000545c:	f102 1208 	add.w	r2, r2, #524296	@ 0x80008
90005460:	e9c3 4004 	strd	r4, r0, [r3, #16]
90005464:	e9c3 1206 	strd	r1, r2, [r3, #24]
90005468:	f104 1408 	add.w	r4, r4, #524296	@ 0x80008
9000546c:	f100 1008 	add.w	r0, r0, #524296	@ 0x80008
90005470:	f101 1108 	add.w	r1, r1, #524296	@ 0x80008
90005474:	f102 1208 	add.w	r2, r2, #524296	@ 0x80008
90005478:	e9c3 4008 	strd	r4, r0, [r3, #32]
9000547c:	e9c3 120a 	strd	r1, r2, [r3, #40]	@ 0x28
90005480:	f104 1408 	add.w	r4, r4, #524296	@ 0x80008
90005484:	f100 1008 	add.w	r0, r0, #524296	@ 0x80008
90005488:	f101 1108 	add.w	r1, r1, #524296	@ 0x80008
9000548c:	f102 1208 	add.w	r2, r2, #524296	@ 0x80008
90005490:	e9c3 400c 	strd	r4, r0, [r3, #48]	@ 0x30
90005494:	e9c3 120e 	strd	r1, r2, [r3, #56]	@ 0x38
90005498:	f104 1408 	add.w	r4, r4, #524296	@ 0x80008
9000549c:	f100 1008 	add.w	r0, r0, #524296	@ 0x80008
900054a0:	f101 1108 	add.w	r1, r1, #524296	@ 0x80008
900054a4:	f102 1208 	add.w	r2, r2, #524296	@ 0x80008
900054a8:	e9c3 4010 	strd	r4, r0, [r3, #64]	@ 0x40
900054ac:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
900054b0:	f104 1408 	add.w	r4, r4, #524296	@ 0x80008
900054b4:	f100 1008 	add.w	r0, r0, #524296	@ 0x80008
900054b8:	f101 1108 	add.w	r1, r1, #524296	@ 0x80008
900054bc:	f102 1208 	add.w	r2, r2, #524296	@ 0x80008
900054c0:	e9c3 4014 	strd	r4, r0, [r3, #80]	@ 0x50
900054c4:	e9c3 1216 	strd	r1, r2, [r3, #88]	@ 0x58
900054c8:	f104 1408 	add.w	r4, r4, #524296	@ 0x80008
900054cc:	f100 1008 	add.w	r0, r0, #524296	@ 0x80008
900054d0:	f101 1108 	add.w	r1, r1, #524296	@ 0x80008
900054d4:	f102 1208 	add.w	r2, r2, #524296	@ 0x80008
900054d8:	e9c3 4018 	strd	r4, r0, [r3, #96]	@ 0x60
900054dc:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
900054e0:	f104 1408 	add.w	r4, r4, #524296	@ 0x80008
900054e4:	f100 1008 	add.w	r0, r0, #524296	@ 0x80008
900054e8:	f101 1108 	add.w	r1, r1, #524296	@ 0x80008
900054ec:	f102 1208 	add.w	r2, r2, #524296	@ 0x80008
900054f0:	e9c3 401c 	strd	r4, r0, [r3, #112]	@ 0x70
900054f4:	e9c3 121e 	strd	r1, r2, [r3, #120]	@ 0x78
  for(i = 0; i < 8; i++)
900054f8:	4c16      	ldr	r4, [pc, #88]	@ (90005554 <TGFX_JPEG_InitColorTables+0x9b4>)
      JPEG_K_MCU_444_LUT[offset]  = offset + 192 ;
900054fa:	4817      	ldr	r0, [pc, #92]	@ (90005558 <TGFX_JPEG_InitColorTables+0x9b8>)
900054fc:	4917      	ldr	r1, [pc, #92]	@ (9000555c <TGFX_JPEG_InitColorTables+0x9bc>)
900054fe:	4a18      	ldr	r2, [pc, #96]	@ (90005560 <TGFX_JPEG_InitColorTables+0x9c0>)
90005500:	4b18      	ldr	r3, [pc, #96]	@ (90005564 <TGFX_JPEG_InitColorTables+0x9c4>)
    CR_RED_LUT[i] = ( (((int32_t) ((1.40200 / 2) * (1L << 16)))  * index) + ((int32_t) 1 << (16 - 1))) >> 16;
90005502:	ea4f 4c23 	mov.w	ip, r3, asr #16
  for (i = 0; i <= 255; i++)
90005506:	445b      	add	r3, fp
    CR_GREEN_LUT[i] = (-((int32_t) ((0.71414 / 2) * (1L << 16)))) * index;
90005508:	f845 1f04 	str.w	r1, [r5, #4]!
  for (i = 0; i <= 255; i++)
9000550c:	4449      	add	r1, r9
    CR_RED_LUT[i] = ( (((int32_t) ((1.40200 / 2) * (1L << 16)))  * index) + ((int32_t) 1 << (16 - 1))) >> 16;
9000550e:	f847 cf04 	str.w	ip, [r7, #4]!
  for (i = 0; i <= 255; i++)
90005512:	4573      	cmp	r3, lr
    CB_BLUE_LUT[i] = ( (((int32_t) ((1.77200 / 2) * (1L << 16)))  * index) + ((int32_t) 1 << (16 - 1))) >> 16;
90005514:	ea4f 4c22 	mov.w	ip, r2, asr #16
    CB_GREEN_LUT[i] = (-((int32_t) ((0.34414 / 2) * (1L << 16)))) * index;
90005518:	f844 0f04 	str.w	r0, [r4, #4]!
  for (i = 0; i <= 255; i++)
9000551c:	4452      	add	r2, sl
9000551e:	4440      	add	r0, r8
    CB_BLUE_LUT[i] = ( (((int32_t) ((1.77200 / 2) * (1L << 16)))  * index) + ((int32_t) 1 << (16 - 1))) >> 16;
90005520:	f846 cf04 	str.w	ip, [r6, #4]!
  for (i = 0; i <= 255; i++)
90005524:	d1ed      	bne.n	90005502 <TGFX_JPEG_InitColorTables+0x962>
}
90005526:	b025      	add	sp, #148	@ 0x94
90005528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000552c:	2400a2d0 	.word	0x2400a2d0
90005530:	24009e50 	.word	0x24009e50
90005534:	240099d0 	.word	0x240099d0
90005538:	24009550 	.word	0x24009550
9000553c:	2400d14c 	.word	0x2400d14c
90005540:	2400cd4c 	.word	0x2400cd4c
90005544:	2400c94c 	.word	0x2400c94c
90005548:	00430042 	.word	0x00430042
9000554c:	00830082 	.word	0x00830082
90005550:	00c700c6 	.word	0x00c700c6
90005554:	2400c54c 	.word	0x2400c54c
90005558:	002c0c00 	.word	0x002c0c00
9000555c:	005b6800 	.word	0x005b6800
90005560:	ff1db000 	.word	0xff1db000
90005564:	ff4d0c00 	.word	0xff4d0c00
90005568:	000166e8 	.word	0x000166e8
9000556c:	0001c5a0 	.word	0x0001c5a0
90005570:	ffff4930 	.word	0xffff4930
90005574:	ffffa7e8 	.word	0xffffa7e8
90005578:	00b3f400 	.word	0x00b3f400

9000557c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId VERDANA16 = 3; // verdana_16_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
9000557c:	4770      	bx	lr
9000557e:	bf00      	nop

90005580 <_ZN23ApplicationFontProviderD0Ev>:
90005580:	b510      	push	{r4, lr}
90005582:	4604      	mov	r4, r0
90005584:	2104      	movs	r1, #4
90005586:	f025 ffbe 	bl	9002b506 <_ZdlPvj>
9000558a:	4620      	mov	r0, r4
9000558c:	bd10      	pop	{r4, pc}
9000558e:	bf00      	nop

90005590 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
90005590:	b508      	push	{r3, lr}
    switch (typography)
90005592:	2903      	cmp	r1, #3
90005594:	d813      	bhi.n	900055be <_ZN23ApplicationFontProvider7getFontEt+0x2e>
90005596:	e8df f001 	tbb	[pc, r1]
9000559a:	0e0a      	.short	0x0e0a
9000559c:	0206      	.short	0x0206
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    case Typography::VERDANA16:
        // verdana_16_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
9000559e:	f003 fb9d 	bl	90008cdc <_ZN17TypedTextDatabase8getFontsEv>
900055a2:	68c0      	ldr	r0, [r0, #12]
    default:
        return 0;
    }
}
900055a4:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
900055a6:	f003 fb99 	bl	90008cdc <_ZN17TypedTextDatabase8getFontsEv>
900055aa:	6880      	ldr	r0, [r0, #8]
}
900055ac:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
900055ae:	f003 fb95 	bl	90008cdc <_ZN17TypedTextDatabase8getFontsEv>
900055b2:	6800      	ldr	r0, [r0, #0]
}
900055b4:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
900055b6:	f003 fb91 	bl	90008cdc <_ZN17TypedTextDatabase8getFontsEv>
900055ba:	6840      	ldr	r0, [r0, #4]
}
900055bc:	bd08      	pop	{r3, pc}
    switch (typography)
900055be:	2000      	movs	r0, #0
}
900055c0:	bd08      	pop	{r3, pc}
900055c2:	bf00      	nop

900055c4 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
900055c4:	4800      	ldr	r0, [pc, #0]	@ (900055c8 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
900055c6:	4770      	bx	lr
900055c8:	9002e604 	.word	0x9002e604

900055cc <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
900055cc:	200c      	movs	r0, #12
900055ce:	4770      	bx	lr

900055d0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
900055d0:	b169      	cbz	r1, 900055ee <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900055d2:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
900055d4:	b530      	push	{r4, r5, lr}
900055d6:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
900055d8:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900055da:	6895      	ldr	r5, [r2, #8]
900055dc:	f10d 0303 	add.w	r3, sp, #3
900055e0:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
900055e2:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
900055e4:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900055e8:	47a8      	blx	r5
        return glyph;
    }
900055ea:	b003      	add	sp, #12
900055ec:	bd30      	pop	{r4, r5, pc}
            return 0;
900055ee:	4608      	mov	r0, r1
    }
900055f0:	4770      	bx	lr
900055f2:	bf00      	nop

900055f4 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
900055f4:	89c0      	ldrh	r0, [r0, #14]
900055f6:	4770      	bx	lr

900055f8 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
900055f8:	8a00      	ldrh	r0, [r0, #16]
900055fa:	4770      	bx	lr

900055fc <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
900055fc:	88c0      	ldrh	r0, [r0, #6]
900055fe:	4770      	bx	lr

90005600 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
90005600:	8880      	ldrh	r0, [r0, #4]
90005602:	4770      	bx	lr

90005604 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90005604:	7a80      	ldrb	r0, [r0, #10]
    }
90005606:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
9000560a:	4770      	bx	lr

9000560c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
9000560c:	7a80      	ldrb	r0, [r0, #10]
    }
9000560e:	09c0      	lsrs	r0, r0, #7
90005610:	4770      	bx	lr
90005612:	bf00      	nop

90005614 <_ZN8touchgfx9TypedTextD1Ev>:
    }
90005614:	4770      	bx	lr
90005616:	bf00      	nop

90005618 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
90005618:	b510      	push	{r4, lr}
9000561a:	4604      	mov	r4, r0
    }
9000561c:	2108      	movs	r1, #8
9000561e:	f025 ff72 	bl	9002b506 <_ZdlPvj>
90005622:	4620      	mov	r0, r4
90005624:	bd10      	pop	{r4, pc}
90005626:	bf00      	nop

90005628 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
90005628:	4770      	bx	lr
9000562a:	bf00      	nop

9000562c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
9000562c:	f500 7398 	add.w	r3, r0, #304	@ 0x130
90005630:	6808      	ldr	r0, [r1, #0]
90005632:	6849      	ldr	r1, [r1, #4]
90005634:	c303      	stmia	r3!, {r0, r1}
    }
90005636:	4770      	bx	lr

90005638 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
90005638:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000563a:	4770      	bx	lr

9000563c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
9000563c:	4770      	bx	lr
9000563e:	bf00      	nop

90005640 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90005640:	4770      	bx	lr
90005642:	bf00      	nop

90005644 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90005644:	6041      	str	r1, [r0, #4]
    }
90005646:	4770      	bx	lr

90005648 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005648:	f04f 0c00 	mov.w	ip, #0
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
        {
            return Rect(0, 0, rect.width, rect.height);
9000564c:	688a      	ldr	r2, [r1, #8]
9000564e:	f8c0 c000 	str.w	ip, [r0]
90005652:	6042      	str	r2, [r0, #4]
        }
90005654:	4770      	bx	lr
90005656:	bf00      	nop

90005658 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
90005658:	4770      	bx	lr
9000565a:	bf00      	nop

9000565c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
9000565c:	4770      	bx	lr
9000565e:	bf00      	nop

90005660 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90005660:	4905      	ldr	r1, [pc, #20]	@ (90005678 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90005662:	2200      	movs	r2, #0
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90005664:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90005668:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
9000566c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90005670:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
90005674:	4770      	bx	lr
90005676:	bf00      	nop
90005678:	9000599d 	.word	0x9000599d

9000567c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
9000567c:	2301      	movs	r3, #1
9000567e:	7203      	strb	r3, [r0, #8]
    }
90005680:	4770      	bx	lr
90005682:	bf00      	nop

90005684 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
90005684:	4770      	bx	lr
90005686:	bf00      	nop

90005688 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EED1Ev>:
{
/**
 * A Transition that slides the new screen over the previous \e from the given direction.
 */
template <Direction templateDirection>
class CoverTransition : public Transition
90005688:	4770      	bx	lr
9000568a:	bf00      	nop

9000568c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
9000568c:	4770      	bx	lr
9000568e:	bf00      	nop

90005690 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90005690:	4770      	bx	lr
90005692:	bf00      	nop

90005694 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
90005694:	4770      	bx	lr
90005696:	bf00      	nop

90005698 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE8tearDownEv>:

            d = d->getNextSibling();
        }
    }

    virtual void tearDown()
90005698:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
9000569a:	6840      	ldr	r0, [r0, #4]
9000569c:	6803      	ldr	r3, [r0, #0]
9000569e:	3110      	adds	r1, #16
900056a0:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
900056a2:	4718      	bx	r3

900056a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
900056a4:	1d01      	adds	r1, r0, #4
900056a6:	c90e      	ldmia	r1, {r1, r2, r3}
900056a8:	ea4f 0c63 	mov.w	ip, r3, asr #1
900056ac:	eb01 0063 	add.w	r0, r1, r3, asr #1
900056b0:	07db      	lsls	r3, r3, #31
900056b2:	d502      	bpl.n	900056ba <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
900056b4:	f851 300c 	ldr.w	r3, [r1, ip]
900056b8:	589a      	ldr	r2, [r3, r2]
900056ba:	4710      	bx	r2

900056bc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
900056bc:	6843      	ldr	r3, [r0, #4]
900056be:	b13b      	cbz	r3, 900056d0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
900056c0:	6883      	ldr	r3, [r0, #8]
900056c2:	b10b      	cbz	r3, 900056c8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
900056c4:	2001      	movs	r0, #1
    }
900056c6:	4770      	bx	lr
900056c8:	68c0      	ldr	r0, [r0, #12]
900056ca:	f000 0001 	and.w	r0, r0, #1
900056ce:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900056d0:	4618      	mov	r0, r3
900056d2:	4770      	bx	lr

900056d4 <_ZN8touchgfx12NoTransitionD0Ev>:
900056d4:	b510      	push	{r4, lr}
900056d6:	4604      	mov	r4, r0
900056d8:	210c      	movs	r1, #12
900056da:	f025 ff14 	bl	9002b506 <_ZdlPvj>
900056de:	4620      	mov	r0, r4
900056e0:	bd10      	pop	{r4, pc}
900056e2:	bf00      	nop

900056e4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900056e4:	b510      	push	{r4, lr}
900056e6:	4604      	mov	r4, r0
900056e8:	2110      	movs	r1, #16
900056ea:	f025 ff0c 	bl	9002b506 <_ZdlPvj>
900056ee:	4620      	mov	r0, r4
900056f0:	bd10      	pop	{r4, pc}
900056f2:	bf00      	nop

900056f4 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
900056f4:	b510      	push	{r4, lr}
900056f6:	4604      	mov	r4, r0
900056f8:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
900056fc:	f025 ff03 	bl	9002b506 <_ZdlPvj>
90005700:	4620      	mov	r0, r4
90005702:	bd10      	pop	{r4, pc}

90005704 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EED0Ev>:
class CoverTransition : public Transition
90005704:	b510      	push	{r4, lr}
90005706:	4604      	mov	r4, r0
90005708:	2138      	movs	r1, #56	@ 0x38
9000570a:	f025 fefc 	bl	9002b506 <_ZdlPvj>
9000570e:	4620      	mov	r0, r4
90005710:	bd10      	pop	{r4, pc}
90005712:	bf00      	nop

90005714 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
90005714:	b510      	push	{r4, lr}
90005716:	4604      	mov	r4, r0
90005718:	2128      	movs	r1, #40	@ 0x28
9000571a:	f025 fef4 	bl	9002b506 <_ZdlPvj>
9000571e:	4620      	mov	r0, r4
90005720:	bd10      	pop	{r4, pc}
90005722:	bf00      	nop

90005724 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
90005724:	b510      	push	{r4, lr}
90005726:	4604      	mov	r4, r0
90005728:	2140      	movs	r1, #64	@ 0x40
9000572a:	f025 feec 	bl	9002b506 <_ZdlPvj>
9000572e:	4620      	mov	r0, r4
90005730:	bd10      	pop	{r4, pc}
90005732:	bf00      	nop

90005734 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90005734:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
90005736:	f015 fa61 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
    }
9000573a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
9000573e:	f015 bf19 	b.w	9001b574 <_ZN8touchgfx11Application10invalidateEv>
90005742:	bf00      	nop

90005744 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90005744:	4b05      	ldr	r3, [pc, #20]	@ (9000575c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
90005746:	781b      	ldrb	r3, [r3, #0]
90005748:	b13b      	cbz	r3, 9000575a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
9000574a:	6843      	ldr	r3, [r0, #4]
9000574c:	b12b      	cbz	r3, 9000575a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
        {
            screenContainer->remove(snapshot);
9000574e:	681a      	ldr	r2, [r3, #0]
90005750:	f100 010c 	add.w	r1, r0, #12
90005754:	4618      	mov	r0, r3
90005756:	6e53      	ldr	r3, [r2, #100]	@ 0x64
90005758:	4718      	bx	r3
        }
    }
9000575a:	4770      	bx	lr
9000575c:	24027e9b 	.word	0x24027e9b

90005760 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
90005760:	b570      	push	{r4, r5, r6, lr}
90005762:	4604      	mov	r4, r0
        animationCounter++;
90005764:	7a80      	ldrb	r0, [r0, #10]
    virtual void handleTickEvent()
90005766:	b082      	sub	sp, #8
        animationCounter++;
90005768:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
9000576a:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
9000576c:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
9000576e:	4298      	cmp	r0, r3
        animationCounter++;
90005770:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
90005772:	d905      	bls.n	90005780 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x20>
            done = true;
90005774:	2201      	movs	r2, #1
            animationCounter = 0;
90005776:	2300      	movs	r3, #0
            done = true;
90005778:	7222      	strb	r2, [r4, #8]
            animationCounter = 0;
9000577a:	72a3      	strb	r3, [r4, #10]
    }
9000577c:	b002      	add	sp, #8
9000577e:	bd70      	pop	{r4, r5, r6, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90005780:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90005784:	2100      	movs	r1, #0
        const int16_t oldValue = calculatedValue;
90005786:	f9b4 500e 	ldrsh.w	r5, [r4, #14]
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
9000578a:	f017 f835 	bl	9001c7f8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
9000578e:	07c2      	lsls	r2, r0, #31
90005790:	b283      	uxth	r3, r0
90005792:	d507      	bpl.n	900057a4 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90005794:	2800      	cmp	r0, #0
90005796:	f64f 70ff 	movw	r0, #65535	@ 0xffff
9000579a:	bfc8      	it	gt
9000579c:	2001      	movgt	r0, #1
9000579e:	4418      	add	r0, r3
900057a0:	b283      	uxth	r3, r0
900057a2:	b200      	sxth	r0, r0
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
900057a4:	7aa2      	ldrb	r2, [r4, #10]
        const int16_t relativeValue = calculatedValue - oldValue;
900057a6:	1b5d      	subs	r5, r3, r5
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
900057a8:	81e0      	strh	r0, [r4, #14]
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
900057aa:	2a01      	cmp	r2, #1
        const int16_t relativeValue = calculatedValue - oldValue;
900057ac:	b2ad      	uxth	r5, r5
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
900057ae:	d031      	beq.n	90005814 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb4>
            rect.width = -calculatedValue;
900057b0:	4258      	negs	r0, r3
            rect.x = HAL::DISPLAY_WIDTH + calculatedValue;
900057b2:	491f      	ldr	r1, [pc, #124]	@ (90005830 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
            rect.height = HAL::DISPLAY_HEIGHT;
900057b4:	4a1f      	ldr	r2, [pc, #124]	@ (90005834 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
            rect.width = -calculatedValue;
900057b6:	f8ad 0004 	strh.w	r0, [sp, #4]
            rect.x = HAL::DISPLAY_WIDTH + calculatedValue;
900057ba:	8808      	ldrh	r0, [r1, #0]
        : x(0), y(0), width(0), height(0)
900057bc:	2100      	movs	r1, #0
            rect.height = HAL::DISPLAY_HEIGHT;
900057be:	8812      	ldrh	r2, [r2, #0]
            rect.x = HAL::DISPLAY_WIDTH + calculatedValue;
900057c0:	4403      	add	r3, r0
900057c2:	f8ad 1002 	strh.w	r1, [sp, #2]
            rect.height = HAL::DISPLAY_HEIGHT;
900057c6:	f8ad 2006 	strh.w	r2, [sp, #6]
            rect.x = HAL::DISPLAY_WIDTH + calculatedValue;
900057ca:	f8ad 3000 	strh.w	r3, [sp]
        Application::getInstance()->invalidateArea(rect);
900057ce:	f015 fa15 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
900057d2:	ab02      	add	r3, sp, #8
900057d4:	e913 0006 	ldmdb	r3, {r1, r2}
900057d8:	f015 fba6 	bl	9001af28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
        Drawable* d = screenContainer->getFirstChild();
900057dc:	6860      	ldr	r0, [r4, #4]
900057de:	4a16      	ldr	r2, [pc, #88]	@ (90005838 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd8>)
900057e0:	6803      	ldr	r3, [r0, #0]
900057e2:	69db      	ldr	r3, [r3, #28]
900057e4:	4293      	cmp	r3, r2
900057e6:	d11f      	bne.n	90005828 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>
        return firstChild;
900057e8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
900057ea:	2c00      	cmp	r4, #0
900057ec:	d0c6      	beq.n	9000577c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
900057ee:	4e13      	ldr	r6, [pc, #76]	@ (9000583c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xdc>)
                d->setX(d->getX() + relativeValue);
900057f0:	6823      	ldr	r3, [r4, #0]
900057f2:	88a1      	ldrh	r1, [r4, #4]
900057f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900057f6:	4429      	add	r1, r5
900057f8:	42b3      	cmp	r3, r6
900057fa:	b209      	sxth	r1, r1
        rect.x = x;
900057fc:	d104      	bne.n	90005808 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xa8>
900057fe:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90005800:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005802:	2c00      	cmp	r4, #0
90005804:	d1f4      	bne.n	900057f0 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x90>
90005806:	e7b9      	b.n	9000577c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
                d->setX(d->getX() + relativeValue);
90005808:	4620      	mov	r0, r4
9000580a:	4798      	blx	r3
9000580c:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000580e:	2c00      	cmp	r4, #0
90005810:	d1ee      	bne.n	900057f0 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x90>
90005812:	e7b3      	b.n	9000577c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
90005814:	4a0a      	ldr	r2, [pc, #40]	@ (90005840 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xe0>)
90005816:	7812      	ldrb	r2, [r2, #0]
90005818:	2a00      	cmp	r2, #0
9000581a:	d0c9      	beq.n	900057b0 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x50>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
9000581c:	f015 f9ee 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
90005820:	f015 f9f2 	bl	9001ac08 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            rect.x = HAL::DISPLAY_WIDTH + calculatedValue;
90005824:	89e3      	ldrh	r3, [r4, #14]
90005826:	e7c3      	b.n	900057b0 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x50>
        Drawable* d = screenContainer->getFirstChild();
90005828:	4798      	blx	r3
9000582a:	4604      	mov	r4, r0
9000582c:	e7dd      	b.n	900057ea <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x8a>
9000582e:	bf00      	nop
90005830:	24027e90 	.word	0x24027e90
90005834:	24027e92 	.word	0x24027e92
90005838:	90005639 	.word	0x90005639
9000583c:	9000387d 	.word	0x9000387d
90005840:	24027e9a 	.word	0x24027e9a

90005844 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
90005844:	b570      	push	{r4, r5, r6, lr}
90005846:	4606      	mov	r6, r0
    {
        Transition::init();

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
90005848:	6840      	ldr	r0, [r0, #4]
9000584a:	4a13      	ldr	r2, [pc, #76]	@ (90005898 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv+0x54>)
9000584c:	6803      	ldr	r3, [r0, #0]
9000584e:	69db      	ldr	r3, [r3, #28]
90005850:	4293      	cmp	r3, r2
90005852:	d11d      	bne.n	90005890 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv+0x4c>
90005854:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
90005856:	b164      	cbz	r4, 90005872 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv+0x2e>
90005858:	89b2      	ldrh	r2, [r6, #12]
9000585a:	4d10      	ldr	r5, [pc, #64]	@ (9000589c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv+0x58>)
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
9000585c:	6823      	ldr	r3, [r4, #0]
9000585e:	88a1      	ldrh	r1, [r4, #4]
90005860:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90005862:	1a89      	subs	r1, r1, r2
90005864:	42ab      	cmp	r3, r5
90005866:	b209      	sxth	r1, r1
        rect.x = x;
90005868:	d10b      	bne.n	90005882 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv+0x3e>
9000586a:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
9000586c:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000586e:	2c00      	cmp	r4, #0
90005870:	d1f4      	bne.n	9000585c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv+0x18>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(solid);
90005872:	6870      	ldr	r0, [r6, #4]
90005874:	f106 0110 	add.w	r1, r6, #16
90005878:	6803      	ldr	r3, [r0, #0]
    }
9000587a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(solid);
9000587e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90005880:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
90005882:	4620      	mov	r0, r4
90005884:	4798      	blx	r3
90005886:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005888:	2c00      	cmp	r4, #0
9000588a:	d0f2      	beq.n	90005872 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv+0x2e>
9000588c:	89b2      	ldrh	r2, [r6, #12]
9000588e:	e7e5      	b.n	9000585c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv+0x18>
        Drawable* d = screenContainer->getFirstChild();
90005890:	4798      	blx	r3
90005892:	4604      	mov	r4, r0
90005894:	e7df      	b.n	90005856 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv+0x12>
90005896:	bf00      	nop
90005898:	90005639 	.word	0x90005639
9000589c:	9000387d 	.word	0x9000387d

900058a0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
900058a0:	b570      	push	{r4, r5, r6, lr}
900058a2:	4605      	mov	r5, r0
        animationCounter++;
900058a4:	f890 0039 	ldrb.w	r0, [r0, #57]	@ 0x39
900058a8:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
900058aa:	f895 3038 	ldrb.w	r3, [r5, #56]	@ 0x38
        animationCounter++;
900058ae:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
900058b0:	4298      	cmp	r0, r3
        animationCounter++;
900058b2:	f885 0039 	strb.w	r0, [r5, #57]	@ 0x39
        if (animationCounter > animationSteps)
900058b6:	d905      	bls.n	900058c4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
900058b8:	2201      	movs	r2, #1
            animationCounter = 0;
900058ba:	2300      	movs	r3, #0
            done = true;
900058bc:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
900058be:	f885 3039 	strb.w	r3, [r5, #57]	@ 0x39
    }
900058c2:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
900058c4:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	@ 0x3a
900058c8:	2100      	movs	r1, #0
900058ca:	f016 ff95 	bl	9001c7f8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
900058ce:	07c2      	lsls	r2, r0, #31
900058d0:	b283      	uxth	r3, r0
900058d2:	d506      	bpl.n	900058e2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x42>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
900058d4:	2800      	cmp	r0, #0
900058d6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
900058da:	bfc8      	it	gt
900058dc:	2201      	movgt	r2, #1
900058de:	4413      	add	r3, r2
900058e0:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
900058e2:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
900058e4:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
900058e6:	6802      	ldr	r2, [r0, #0]
900058e8:	4912      	ldr	r1, [pc, #72]	@ (90005934 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
900058ea:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
900058ec:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
900058ee:	87ab      	strh	r3, [r5, #60]	@ 0x3c
900058f0:	428a      	cmp	r2, r1
900058f2:	d11b      	bne.n	9000592c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x8c>
900058f4:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
900058f6:	b164      	cbz	r4, 90005912 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x72>
900058f8:	8faa      	ldrh	r2, [r5, #60]	@ 0x3c
900058fa:	4e0f      	ldr	r6, [pc, #60]	@ (90005938 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
900058fc:	6823      	ldr	r3, [r4, #0]
900058fe:	88a1      	ldrh	r1, [r4, #4]
90005900:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90005902:	4411      	add	r1, r2
90005904:	42b3      	cmp	r3, r6
90005906:	b209      	sxth	r1, r1
        rect.x = x;
90005908:	d109      	bne.n	9000591e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x7e>
9000590a:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
9000590c:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000590e:	2c00      	cmp	r4, #0
90005910:	d1f4      	bne.n	900058fc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5c>
        screenContainer->invalidate();
90005912:	6868      	ldr	r0, [r5, #4]
90005914:	6803      	ldr	r3, [r0, #0]
    }
90005916:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
9000591a:	695b      	ldr	r3, [r3, #20]
9000591c:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
9000591e:	4620      	mov	r0, r4
90005920:	4798      	blx	r3
90005922:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005924:	2c00      	cmp	r4, #0
90005926:	d0f4      	beq.n	90005912 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x72>
90005928:	8faa      	ldrh	r2, [r5, #60]	@ 0x3c
9000592a:	e7e7      	b.n	900058fc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5c>
        Drawable* d = screenContainer->getFirstChild();
9000592c:	4790      	blx	r2
9000592e:	4604      	mov	r4, r0
90005930:	e7e1      	b.n	900058f6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x56>
90005932:	bf00      	nop
90005934:	90005639 	.word	0x90005639
90005938:	9000387d 	.word	0x9000387d

9000593c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
9000593c:	7a03      	ldrb	r3, [r0, #8]
9000593e:	bb2b      	cbnz	r3, 9000598c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x50>
90005940:	4a14      	ldr	r2, [pc, #80]	@ (90005994 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x58>)
    virtual void init()
90005942:	b570      	push	{r4, r5, r6, lr}
90005944:	4605      	mov	r5, r0
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
90005946:	6840      	ldr	r0, [r0, #4]
90005948:	6803      	ldr	r3, [r0, #0]
9000594a:	69db      	ldr	r3, [r3, #28]
9000594c:	4293      	cmp	r3, r2
9000594e:	d11e      	bne.n	9000598e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x52>
90005950:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
90005952:	b164      	cbz	r4, 9000596e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90005954:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
90005956:	4e10      	ldr	r6, [pc, #64]	@ (90005998 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x5c>)
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
90005958:	6823      	ldr	r3, [r4, #0]
9000595a:	88a1      	ldrh	r1, [r4, #4]
9000595c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000595e:	1a89      	subs	r1, r1, r2
90005960:	42b3      	cmp	r3, r6
90005962:	b209      	sxth	r1, r1
        rect.x = x;
90005964:	d10b      	bne.n	9000597e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x42>
90005966:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90005968:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000596a:	2c00      	cmp	r4, #0
9000596c:	d1f4      	bne.n	90005958 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
9000596e:	6868      	ldr	r0, [r5, #4]
90005970:	f105 010c 	add.w	r1, r5, #12
90005974:	6803      	ldr	r3, [r0, #0]
    }
90005976:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
9000597a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9000597c:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
9000597e:	4620      	mov	r0, r4
90005980:	4798      	blx	r3
90005982:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005984:	2c00      	cmp	r4, #0
90005986:	d0f2      	beq.n	9000596e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90005988:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
9000598a:	e7e5      	b.n	90005958 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
9000598c:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
9000598e:	4798      	blx	r3
90005990:	4604      	mov	r4, r0
90005992:	e7de      	b.n	90005952 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x16>
90005994:	90005639 	.word	0x90005639
90005998:	9000387d 	.word	0x9000387d

9000599c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
9000599c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900059a0:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
900059a4:	4607      	mov	r7, r0
900059a6:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900059a8:	68b0      	ldr	r0, [r6, #8]
900059aa:	6803      	ldr	r3, [r0, #0]
900059ac:	6a1b      	ldr	r3, [r3, #32]
900059ae:	4798      	blx	r3
900059b0:	f640 33fb 	movw	r3, #3067	@ 0xbfb
900059b4:	4298      	cmp	r0, r3
900059b6:	f240 80a2 	bls.w	90005afe <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x162>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900059ba:	6870      	ldr	r0, [r6, #4]
900059bc:	6803      	ldr	r3, [r0, #0]
900059be:	6a1b      	ldr	r3, [r3, #32]
900059c0:	4798      	blx	r3
900059c2:	280f      	cmp	r0, #15
900059c4:	f240 8095 	bls.w	90005af2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x156>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900059c8:	68f0      	ldr	r0, [r6, #12]
900059ca:	6803      	ldr	r3, [r0, #0]
900059cc:	6a1b      	ldr	r3, [r3, #32]
900059ce:	4798      	blx	r3
900059d0:	280b      	cmp	r0, #11
900059d2:	f240 8088 	bls.w	90005ae6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14a>
    if (*currentTrans)
900059d6:	f8df 9154 	ldr.w	r9, [pc, #340]	@ 90005b2c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x190>
    Application::getInstance()->clearAllTimerWidgets();
900059da:	f015 f90f 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
900059de:	3004      	adds	r0, #4
900059e0:	f015 f972 	bl	9001acc8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
900059e4:	f8d9 0000 	ldr.w	r0, [r9]
900059e8:	b140      	cbz	r0, 900059fc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x60>
        (*currentTrans)->tearDown();
900059ea:	6803      	ldr	r3, [r0, #0]
900059ec:	68db      	ldr	r3, [r3, #12]
900059ee:	4798      	blx	r3
    if (*currentTrans)
900059f0:	f8d9 0000 	ldr.w	r0, [r9]
900059f4:	b110      	cbz	r0, 900059fc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x60>
        (*currentTrans)->~Transition();
900059f6:	6803      	ldr	r3, [r0, #0]
900059f8:	681b      	ldr	r3, [r3, #0]
900059fa:	4798      	blx	r3
    if (*currentScreen)
900059fc:	f8df 8130 	ldr.w	r8, [pc, #304]	@ 90005b30 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x194>
90005a00:	f8d8 0000 	ldr.w	r0, [r8]
90005a04:	2800      	cmp	r0, #0
90005a06:	d060      	beq.n	90005aca <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12e>
        (*currentScreen)->tearDownScreen();
90005a08:	6803      	ldr	r3, [r0, #0]
90005a0a:	695b      	ldr	r3, [r3, #20]
90005a0c:	4798      	blx	r3
    if (*currentPresenter)
90005a0e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90005a12:	2800      	cmp	r0, #0
90005a14:	d054      	beq.n	90005ac0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x124>
        (*currentPresenter)->deactivate();
90005a16:	6803      	ldr	r3, [r0, #0]
90005a18:	685b      	ldr	r3, [r3, #4]
90005a1a:	4798      	blx	r3
    if (*currentScreen)
90005a1c:	f8d8 0000 	ldr.w	r0, [r8]
90005a20:	b110      	cbz	r0, 90005a28 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentScreen)->~Screen();
90005a22:	6803      	ldr	r3, [r0, #0]
90005a24:	681b      	ldr	r3, [r3, #0]
90005a26:	4798      	blx	r3
    if (*currentPresenter)
90005a28:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90005a2c:	b110      	cbz	r0, 90005a34 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentPresenter)->~Presenter();
90005a2e:	6803      	ldr	r3, [r0, #0]
90005a30:	689b      	ldr	r3, [r3, #8]
90005a32:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90005a34:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90005a36:	2100      	movs	r1, #0
90005a38:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90005a3a:	468b      	mov	fp, r1
90005a3c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005a3e:	4798      	blx	r3
90005a40:	4b32      	ldr	r3, [pc, #200]	@ (90005b0c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x170>)
90005a42:	4604      	mov	r4, r0
90005a44:	f8c0 b004 	str.w	fp, [r0, #4]
90005a48:	f880 b008 	strb.w	fp, [r0, #8]
90005a4c:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90005a4e:	68b0      	ldr	r0, [r6, #8]
90005a50:	6023      	str	r3, [r4, #0]
90005a52:	6803      	ldr	r3, [r0, #0]
90005a54:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005a56:	4798      	blx	r3
90005a58:	4605      	mov	r5, r0
90005a5a:	f003 fb17 	bl	9000908c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90005a5e:	6870      	ldr	r0, [r6, #4]
90005a60:	4659      	mov	r1, fp
90005a62:	6803      	ldr	r3, [r0, #0]
90005a64:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005a66:	4798      	blx	r3
90005a68:	4606      	mov	r6, r0
90005a6a:	4629      	mov	r1, r5
90005a6c:	f003 fa90 	bl	90008f90 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
90005a70:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90005a72:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90005a76:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90005a78:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90005a7c:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90005a80:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90005a84:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
90005a86:	f8c6 a008 	str.w	sl, [r6, #8]
90005a8a:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90005a8c:	63ee      	str	r6, [r5, #60]	@ 0x3c
90005a8e:	4798      	blx	r3
    newPresenter->activate();
90005a90:	6833      	ldr	r3, [r6, #0]
90005a92:	4630      	mov	r0, r6
90005a94:	681b      	ldr	r3, [r3, #0]
90005a96:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90005a98:	4621      	mov	r1, r4
90005a9a:	4628      	mov	r0, r5
90005a9c:	f016 fea6 	bl	9001c7ec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90005aa0:	6823      	ldr	r3, [r4, #0]
90005aa2:	491b      	ldr	r1, [pc, #108]	@ (90005b10 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x174>)
90005aa4:	691a      	ldr	r2, [r3, #16]
90005aa6:	428a      	cmp	r2, r1
90005aa8:	d119      	bne.n	90005ade <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x142>
    newTransition->invalidate();
90005aaa:	695b      	ldr	r3, [r3, #20]
90005aac:	4a19      	ldr	r2, [pc, #100]	@ (90005b14 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x178>)
90005aae:	4293      	cmp	r3, r2
90005ab0:	d110      	bne.n	90005ad4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>
        Application::getInstance()->invalidate();
90005ab2:	f015 f8a3 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
}
90005ab6:	b001      	add	sp, #4
90005ab8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005abc:	f015 bd5a 	b.w	9001b574 <_ZN8touchgfx11Application10invalidateEv>
    if (*currentScreen)
90005ac0:	f8d8 0000 	ldr.w	r0, [r8]
90005ac4:	2800      	cmp	r0, #0
90005ac6:	d1ac      	bne.n	90005a22 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x86>
90005ac8:	e7b4      	b.n	90005a34 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
    if (*currentPresenter)
90005aca:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90005ace:	2800      	cmp	r0, #0
90005ad0:	d1a1      	bne.n	90005a16 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x7a>
90005ad2:	e7af      	b.n	90005a34 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
    newTransition->invalidate();
90005ad4:	4620      	mov	r0, r4
90005ad6:	b001      	add	sp, #4
90005ad8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005adc:	4718      	bx	r3
    newTransition->init();
90005ade:	4620      	mov	r0, r4
90005ae0:	4790      	blx	r2
    newTransition->invalidate();
90005ae2:	6823      	ldr	r3, [r4, #0]
90005ae4:	e7e1      	b.n	90005aaa <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x10e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005ae6:	4b0c      	ldr	r3, [pc, #48]	@ (90005b18 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x17c>)
90005ae8:	21a5      	movs	r1, #165	@ 0xa5
90005aea:	4a0c      	ldr	r2, [pc, #48]	@ (90005b1c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x180>)
90005aec:	480c      	ldr	r0, [pc, #48]	@ (90005b20 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x184>)
90005aee:	f025 fee7 	bl	9002b8c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90005af2:	4b0c      	ldr	r3, [pc, #48]	@ (90005b24 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x188>)
90005af4:	21a4      	movs	r1, #164	@ 0xa4
90005af6:	4a09      	ldr	r2, [pc, #36]	@ (90005b1c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x180>)
90005af8:	4809      	ldr	r0, [pc, #36]	@ (90005b20 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x184>)
90005afa:	f025 fee1 	bl	9002b8c0 <__assert_func>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005afe:	4b0a      	ldr	r3, [pc, #40]	@ (90005b28 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x18c>)
90005b00:	21a3      	movs	r1, #163	@ 0xa3
90005b02:	4a06      	ldr	r2, [pc, #24]	@ (90005b1c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x180>)
90005b04:	4806      	ldr	r0, [pc, #24]	@ (90005b20 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x184>)
90005b06:	f025 fedb 	bl	9002b8c0 <__assert_func>
90005b0a:	bf00      	nop
90005b0c:	9002ec9c 	.word	0x9002ec9c
90005b10:	90005641 	.word	0x90005641
90005b14:	90005735 	.word	0x90005735
90005b18:	9002e954 	.word	0x9002e954
90005b1c:	9002e794 	.word	0x9002e794
90005b20:	9002e868 	.word	0x9002e868
90005b24:	9002e8b0 	.word	0x9002e8b0
90005b28:	9002e704 	.word	0x9002e704
90005b2c:	24027ee4 	.word	0x24027ee4
90005b30:	24027ee0 	.word	0x24027ee0

90005b34 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen2ScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreen2ScreenSlideTransitionEastImpl()
{
90005b34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90005b38:	e9d0 7b55 	ldrd	r7, fp, [r0, #340]	@ 0x154
{
90005b3c:	4680      	mov	r8, r0
90005b3e:	b081      	sub	sp, #4
90005b40:	68b8      	ldr	r0, [r7, #8]
90005b42:	6803      	ldr	r3, [r0, #0]
90005b44:	6a1b      	ldr	r3, [r3, #32]
90005b46:	4798      	blx	r3
90005b48:	f242 33c3 	movw	r3, #9155	@ 0x23c3
90005b4c:	4298      	cmp	r0, r3
90005b4e:	f240 80db 	bls.w	90005d08 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1d4>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90005b52:	6878      	ldr	r0, [r7, #4]
90005b54:	6803      	ldr	r3, [r0, #0]
90005b56:	6a1b      	ldr	r3, [r3, #32]
90005b58:	4798      	blx	r3
90005b5a:	280f      	cmp	r0, #15
90005b5c:	f240 80e0 	bls.w	90005d20 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1ec>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005b60:	68f8      	ldr	r0, [r7, #12]
90005b62:	6803      	ldr	r3, [r0, #0]
90005b64:	6a1b      	ldr	r3, [r3, #32]
90005b66:	4798      	blx	r3
90005b68:	283f      	cmp	r0, #63	@ 0x3f
90005b6a:	f240 80d3 	bls.w	90005d14 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1e0>
    if (*currentTrans)
90005b6e:	f8df a1f0 	ldr.w	sl, [pc, #496]	@ 90005d60 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x22c>
    Application::getInstance()->clearAllTimerWidgets();
90005b72:	f015 f843 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
90005b76:	3004      	adds	r0, #4
90005b78:	f015 f8a6 	bl	9001acc8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90005b7c:	f8da 0000 	ldr.w	r0, [sl]
90005b80:	b140      	cbz	r0, 90005b94 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90005b82:	6803      	ldr	r3, [r0, #0]
90005b84:	68db      	ldr	r3, [r3, #12]
90005b86:	4798      	blx	r3
    if (*currentTrans)
90005b88:	f8da 0000 	ldr.w	r0, [sl]
90005b8c:	b110      	cbz	r0, 90005b94 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90005b8e:	6803      	ldr	r3, [r0, #0]
90005b90:	681b      	ldr	r3, [r3, #0]
90005b92:	4798      	blx	r3
    if (*currentScreen)
90005b94:	f8df 91cc 	ldr.w	r9, [pc, #460]	@ 90005d64 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x230>
90005b98:	f8d9 0000 	ldr.w	r0, [r9]
90005b9c:	2800      	cmp	r0, #0
90005b9e:	f000 80a1 	beq.w	90005ce4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1b0>
        (*currentScreen)->tearDownScreen();
90005ba2:	6803      	ldr	r3, [r0, #0]
90005ba4:	695b      	ldr	r3, [r3, #20]
90005ba6:	4798      	blx	r3
    if (*currentPresenter)
90005ba8:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90005bac:	2800      	cmp	r0, #0
90005bae:	d07d      	beq.n	90005cac <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x178>
        (*currentPresenter)->deactivate();
90005bb0:	6803      	ldr	r3, [r0, #0]
90005bb2:	685b      	ldr	r3, [r3, #4]
90005bb4:	4798      	blx	r3
    if (*currentScreen)
90005bb6:	f8d9 0000 	ldr.w	r0, [r9]
90005bba:	b110      	cbz	r0, 90005bc2 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x8e>
        (*currentScreen)->~Screen();
90005bbc:	6803      	ldr	r3, [r0, #0]
90005bbe:	681b      	ldr	r3, [r3, #0]
90005bc0:	4798      	blx	r3
    if (*currentPresenter)
90005bc2:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90005bc6:	b110      	cbz	r0, 90005bce <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x9a>
        (*currentPresenter)->~Presenter();
90005bc8:	6803      	ldr	r3, [r0, #0]
90005bca:	689b      	ldr	r3, [r3, #8]
90005bcc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90005bce:	68f8      	ldr	r0, [r7, #12]
90005bd0:	2100      	movs	r1, #0
90005bd2:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90005bd4:	460c      	mov	r4, r1
90005bd6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005bd8:	4798      	blx	r3
          relativeValue(0)
90005bda:	4b54      	ldr	r3, [pc, #336]	@ (90005d2c <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1f8>)
90005bdc:	4606      	mov	r6, r0
90005bde:	4605      	mov	r5, r0
90005be0:	6044      	str	r4, [r0, #4]
90005be2:	7204      	strb	r4, [r0, #8]
90005be4:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90005be8:	4630      	mov	r0, r6
90005bea:	f011 fa9f 	bl	9001712c <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
90005bee:	4b50      	ldr	r3, [pc, #320]	@ (90005d30 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1fc>)
          animationSteps(transitionSteps),
90005bf0:	2214      	movs	r2, #20
          relativeValue(0)
90005bf2:	87ac      	strh	r4, [r5, #60]	@ 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90005bf4:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90005bf6:	872a      	strh	r2, [r5, #56]	@ 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90005bf8:	2b00      	cmp	r3, #0
90005bfa:	d163      	bne.n	90005cc4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x190>
            done = true;
90005bfc:	2301      	movs	r3, #1
90005bfe:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90005c00:	68b8      	ldr	r0, [r7, #8]
90005c02:	2100      	movs	r1, #0
90005c04:	6803      	ldr	r3, [r0, #0]
90005c06:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005c08:	4798      	blx	r3
90005c0a:	4604      	mov	r4, r0
90005c0c:	f003 fcba 	bl	90009584 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90005c10:	6878      	ldr	r0, [r7, #4]
90005c12:	2100      	movs	r1, #0
90005c14:	6803      	ldr	r3, [r0, #0]
90005c16:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005c18:	4798      	blx	r3
90005c1a:	4607      	mov	r7, r0
90005c1c:	4621      	mov	r1, r4
90005c1e:	f003 fbfd 	bl	9000941c <_ZN16Screen2PresenterC1ER11Screen2View>
    model->bind(newPresenter);
90005c22:	1d3a      	adds	r2, r7, #4
    newScreen->setupScreen();
90005c24:	6823      	ldr	r3, [r4, #0]
90005c26:	4620      	mov	r0, r4
    *currentPresenter = newPresenter;
90005c28:	f8c8 713c 	str.w	r7, [r8, #316]	@ 0x13c
    newScreen->setupScreen();
90005c2c:	68db      	ldr	r3, [r3, #12]
    *currentTrans = newTransition;
90005c2e:	f8ca 5000 	str.w	r5, [sl]
    *currentScreen = newScreen;
90005c32:	f8c9 4000 	str.w	r4, [r9]
90005c36:	f8cb 2000 	str.w	r2, [fp]
90005c3a:	f8c7 b008 	str.w	fp, [r7, #8]
90005c3e:	63e7      	str	r7, [r4, #60]	@ 0x3c
    newScreen->setupScreen();
90005c40:	4798      	blx	r3
    newPresenter->activate();
90005c42:	683b      	ldr	r3, [r7, #0]
90005c44:	4638      	mov	r0, r7
90005c46:	681b      	ldr	r3, [r3, #0]
90005c48:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90005c4a:	4629      	mov	r1, r5
90005c4c:	4620      	mov	r0, r4
90005c4e:	f016 fdcd 	bl	9001c7ec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90005c52:	682b      	ldr	r3, [r5, #0]
90005c54:	4937      	ldr	r1, [pc, #220]	@ (90005d34 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x200>)
90005c56:	691a      	ldr	r2, [r3, #16]
90005c58:	428a      	cmp	r2, r1
90005c5a:	d151      	bne.n	90005d00 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1cc>
        if (done)
90005c5c:	7a2a      	ldrb	r2, [r5, #8]
90005c5e:	b9d2      	cbnz	r2, 90005c96 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x162>
        Drawable* d = screenContainer->getFirstChild();
90005c60:	6868      	ldr	r0, [r5, #4]
90005c62:	4a35      	ldr	r2, [pc, #212]	@ (90005d38 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x204>)
90005c64:	6803      	ldr	r3, [r0, #0]
90005c66:	69db      	ldr	r3, [r3, #28]
90005c68:	4293      	cmp	r3, r2
90005c6a:	d141      	bne.n	90005cf0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1bc>
90005c6c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
90005c6e:	b164      	cbz	r4, 90005c8a <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x156>
90005c70:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
90005c72:	4f32      	ldr	r7, [pc, #200]	@ (90005d3c <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x208>)
                d->setX(d->getX() - targetValue);
90005c74:	6823      	ldr	r3, [r4, #0]
90005c76:	88a1      	ldrh	r1, [r4, #4]
90005c78:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90005c7a:	1a89      	subs	r1, r1, r2
90005c7c:	42bb      	cmp	r3, r7
90005c7e:	b209      	sxth	r1, r1
90005c80:	d119      	bne.n	90005cb6 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x182>
        rect.x = x;
90005c82:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90005c84:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005c86:	2c00      	cmp	r4, #0
90005c88:	d1f4      	bne.n	90005c74 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x140>
        screenContainer->add(snapshot);
90005c8a:	6868      	ldr	r0, [r5, #4]
90005c8c:	4631      	mov	r1, r6
90005c8e:	6803      	ldr	r3, [r0, #0]
90005c90:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90005c92:	4798      	blx	r3
    newTransition->invalidate();
90005c94:	682b      	ldr	r3, [r5, #0]
90005c96:	695b      	ldr	r3, [r3, #20]
90005c98:	4a29      	ldr	r2, [pc, #164]	@ (90005d40 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x20c>)
90005c9a:	4293      	cmp	r3, r2
90005c9c:	d12b      	bne.n	90005cf6 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1c2>
        Application::getInstance()->invalidate();
90005c9e:	f014 ffad 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
}
90005ca2:	b001      	add	sp, #4
90005ca4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005ca8:	f015 bc64 	b.w	9001b574 <_ZN8touchgfx11Application10invalidateEv>
    if (*currentScreen)
90005cac:	f8d9 0000 	ldr.w	r0, [r9]
90005cb0:	2800      	cmp	r0, #0
90005cb2:	d183      	bne.n	90005bbc <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x88>
90005cb4:	e78b      	b.n	90005bce <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x9a>
                d->setX(d->getX() - targetValue);
90005cb6:	4620      	mov	r0, r4
90005cb8:	4798      	blx	r3
90005cba:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005cbc:	2c00      	cmp	r4, #0
90005cbe:	d0e4      	beq.n	90005c8a <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x156>
90005cc0:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
90005cc2:	e7d7      	b.n	90005c74 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x140>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90005cc4:	4b1f      	ldr	r3, [pc, #124]	@ (90005d44 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x210>)
        snapshot.makeSnapshot();
90005cc6:	4630      	mov	r0, r6
        rect.x = x;
90005cc8:	612c      	str	r4, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90005cca:	f9b3 3000 	ldrsh.w	r3, [r3]
90005cce:	4c1e      	ldr	r4, [pc, #120]	@ (90005d48 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x214>)
        rect.height = height;
90005cd0:	82eb      	strh	r3, [r5, #22]
90005cd2:	f9b4 3000 	ldrsh.w	r3, [r4]
        rect.width = width;
90005cd6:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
90005cd8:	f011 f9a3 	bl	90017022 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
90005cdc:	8823      	ldrh	r3, [r4, #0]
90005cde:	425b      	negs	r3, r3
90005ce0:	876b      	strh	r3, [r5, #58]	@ 0x3a
            break;
90005ce2:	e78d      	b.n	90005c00 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0xcc>
    if (*currentPresenter)
90005ce4:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90005ce8:	2800      	cmp	r0, #0
90005cea:	f47f af61 	bne.w	90005bb0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x7c>
90005cee:	e76e      	b.n	90005bce <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x9a>
        Drawable* d = screenContainer->getFirstChild();
90005cf0:	4798      	blx	r3
90005cf2:	4604      	mov	r4, r0
90005cf4:	e7bb      	b.n	90005c6e <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x13a>
    newTransition->invalidate();
90005cf6:	4628      	mov	r0, r5
90005cf8:	b001      	add	sp, #4
90005cfa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005cfe:	4718      	bx	r3
    newTransition->init();
90005d00:	4628      	mov	r0, r5
90005d02:	4790      	blx	r2
    newTransition->invalidate();
90005d04:	682b      	ldr	r3, [r5, #0]
90005d06:	e7c6      	b.n	90005c96 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x162>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005d08:	4b10      	ldr	r3, [pc, #64]	@ (90005d4c <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x218>)
90005d0a:	21a3      	movs	r1, #163	@ 0xa3
90005d0c:	4a10      	ldr	r2, [pc, #64]	@ (90005d50 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x21c>)
90005d0e:	4811      	ldr	r0, [pc, #68]	@ (90005d54 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x220>)
90005d10:	f025 fdd6 	bl	9002b8c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005d14:	4b10      	ldr	r3, [pc, #64]	@ (90005d58 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x224>)
90005d16:	21a5      	movs	r1, #165	@ 0xa5
90005d18:	4a0d      	ldr	r2, [pc, #52]	@ (90005d50 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x21c>)
90005d1a:	480e      	ldr	r0, [pc, #56]	@ (90005d54 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x220>)
90005d1c:	f025 fdd0 	bl	9002b8c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90005d20:	4b0e      	ldr	r3, [pc, #56]	@ (90005d5c <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x228>)
90005d22:	21a4      	movs	r1, #164	@ 0xa4
90005d24:	4a0a      	ldr	r2, [pc, #40]	@ (90005d50 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x21c>)
90005d26:	480b      	ldr	r0, [pc, #44]	@ (90005d54 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x220>)
90005d28:	f025 fdca 	bl	9002b8c0 <__assert_func>
90005d2c:	9002ecc0 	.word	0x9002ecc0
90005d30:	24027e9b 	.word	0x24027e9b
90005d34:	9000593d 	.word	0x9000593d
90005d38:	90005639 	.word	0x90005639
90005d3c:	9000387d 	.word	0x9000387d
90005d40:	90005735 	.word	0x90005735
90005d44:	24027e92 	.word	0x24027e92
90005d48:	24027e90 	.word	0x24027e90
90005d4c:	9002e704 	.word	0x9002e704
90005d50:	9002e9f8 	.word	0x9002e9f8
90005d54:	9002e868 	.word	0x9002e868
90005d58:	9002e954 	.word	0x9002e954
90005d5c:	9002e8b0 	.word	0x9002e8b0
90005d60:	24027ee4 	.word	0x24027ee4
90005d64:	24027ee0 	.word	0x24027ee0

90005d68 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    virtual void handlePendingScreenTransition()
90005d68:	b570      	push	{r4, r5, r6, lr}
90005d6a:	4604      	mov	r4, r0
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90005d6c:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
90005d70:	b1b8      	cbz	r0, 90005da2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90005d72:	6802      	ldr	r2, [r0, #0]
90005d74:	4916      	ldr	r1, [pc, #88]	@ (90005dd0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x68>)
90005d76:	68d3      	ldr	r3, [r2, #12]
90005d78:	428b      	cmp	r3, r1
90005d7a:	d11f      	bne.n	90005dbc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x54>
        return (pobject != 0) && (pmemfun != 0);
90005d7c:	6843      	ldr	r3, [r0, #4]
90005d7e:	b183      	cbz	r3, 90005da2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90005d80:	6881      	ldr	r1, [r0, #8]
90005d82:	b179      	cbz	r1, 90005da4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
            pendingScreenTransitionCallback->execute();
90005d84:	6892      	ldr	r2, [r2, #8]
90005d86:	4b13      	ldr	r3, [pc, #76]	@ (90005dd4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90005d88:	429a      	cmp	r2, r3
90005d8a:	d11e      	bne.n	90005dca <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90005d8c:	68c2      	ldr	r2, [r0, #12]
90005d8e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90005d92:	eb03 0062 	add.w	r0, r3, r2, asr #1
90005d96:	07d3      	lsls	r3, r2, #31
90005d98:	d40d      	bmi.n	90005db6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x4e>
90005d9a:	4788      	blx	r1
            pendingScreenTransitionCallback = 0;
90005d9c:	2300      	movs	r3, #0
90005d9e:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
90005da2:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
90005da4:	68c5      	ldr	r5, [r0, #12]
90005da6:	07ee      	lsls	r6, r5, #31
90005da8:	d5fb      	bpl.n	90005da2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90005daa:	6892      	ldr	r2, [r2, #8]
90005dac:	4e09      	ldr	r6, [pc, #36]	@ (90005dd4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90005dae:	42b2      	cmp	r2, r6
90005db0:	d10b      	bne.n	90005dca <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90005db2:	eb03 0065 	add.w	r0, r3, r5, asr #1
90005db6:	6803      	ldr	r3, [r0, #0]
90005db8:	5859      	ldr	r1, [r3, r1]
90005dba:	e7ee      	b.n	90005d9a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90005dbc:	4798      	blx	r3
90005dbe:	2800      	cmp	r0, #0
90005dc0:	d0ef      	beq.n	90005da2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90005dc2:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
90005dc6:	6802      	ldr	r2, [r0, #0]
90005dc8:	e7dc      	b.n	90005d84 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
90005dca:	4790      	blx	r2
90005dcc:	e7e6      	b.n	90005d9c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90005dce:	bf00      	nop
90005dd0:	900056bd 	.word	0x900056bd
90005dd4:	900056a5 	.word	0x900056a5

90005dd8 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv>:
{
90005dd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90005ddc:	e9d0 7b55 	ldrd	r7, fp, [r0, #340]	@ 0x154
{
90005de0:	4680      	mov	r8, r0
90005de2:	b083      	sub	sp, #12
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005de4:	68b8      	ldr	r0, [r7, #8]
90005de6:	6803      	ldr	r3, [r0, #0]
90005de8:	6a1b      	ldr	r3, [r3, #32]
90005dea:	4798      	blx	r3
90005dec:	f640 33fb 	movw	r3, #3067	@ 0xbfb
90005df0:	4298      	cmp	r0, r3
90005df2:	f240 80dd 	bls.w	90005fb0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x1d8>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90005df6:	6878      	ldr	r0, [r7, #4]
90005df8:	6803      	ldr	r3, [r0, #0]
90005dfa:	6a1b      	ldr	r3, [r3, #32]
90005dfc:	4798      	blx	r3
90005dfe:	280f      	cmp	r0, #15
90005e00:	f240 80d0 	bls.w	90005fa4 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x1cc>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005e04:	68f8      	ldr	r0, [r7, #12]
90005e06:	6803      	ldr	r3, [r0, #0]
90005e08:	6a1b      	ldr	r3, [r3, #32]
90005e0a:	4798      	blx	r3
90005e0c:	2837      	cmp	r0, #55	@ 0x37
90005e0e:	f240 80d5 	bls.w	90005fbc <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x1e4>
    if (*currentTrans)
90005e12:	f8df a1e8 	ldr.w	sl, [pc, #488]	@ 90005ffc <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x224>
    Application::getInstance()->clearAllTimerWidgets();
90005e16:	f014 fef1 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
90005e1a:	3004      	adds	r0, #4
90005e1c:	f014 ff54 	bl	9001acc8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90005e20:	f8da 0000 	ldr.w	r0, [sl]
90005e24:	b140      	cbz	r0, 90005e38 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90005e26:	6803      	ldr	r3, [r0, #0]
90005e28:	68db      	ldr	r3, [r3, #12]
90005e2a:	4798      	blx	r3
    if (*currentTrans)
90005e2c:	f8da 0000 	ldr.w	r0, [sl]
90005e30:	b110      	cbz	r0, 90005e38 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90005e32:	6803      	ldr	r3, [r0, #0]
90005e34:	681b      	ldr	r3, [r3, #0]
90005e36:	4798      	blx	r3
    if (*currentScreen)
90005e38:	f8df 91c4 	ldr.w	r9, [pc, #452]	@ 90006000 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x228>
90005e3c:	f8d9 0000 	ldr.w	r0, [r9]
90005e40:	2800      	cmp	r0, #0
90005e42:	f000 809e 	beq.w	90005f82 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x1aa>
        (*currentScreen)->tearDownScreen();
90005e46:	6803      	ldr	r3, [r0, #0]
90005e48:	695b      	ldr	r3, [r3, #20]
90005e4a:	4798      	blx	r3
    if (*currentPresenter)
90005e4c:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90005e50:	2800      	cmp	r0, #0
90005e52:	f000 8090 	beq.w	90005f76 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x19e>
        (*currentPresenter)->deactivate();
90005e56:	6803      	ldr	r3, [r0, #0]
90005e58:	685b      	ldr	r3, [r3, #4]
90005e5a:	4798      	blx	r3
    if (*currentScreen)
90005e5c:	f8d9 0000 	ldr.w	r0, [r9]
90005e60:	b110      	cbz	r0, 90005e68 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x90>
        (*currentScreen)->~Screen();
90005e62:	6803      	ldr	r3, [r0, #0]
90005e64:	681b      	ldr	r3, [r3, #0]
90005e66:	4798      	blx	r3
    if (*currentPresenter)
90005e68:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90005e6c:	b110      	cbz	r0, 90005e74 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x9c>
        (*currentPresenter)->~Presenter();
90005e6e:	6803      	ldr	r3, [r0, #0]
90005e70:	689b      	ldr	r3, [r3, #8]
90005e72:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90005e74:	68f8      	ldr	r0, [r7, #12]
90005e76:	2100      	movs	r1, #0
90005e78:	6802      	ldr	r2, [r0, #0]
        : screenContainer(0), done(false)
90005e7a:	460e      	mov	r6, r1
90005e7c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
90005e7e:	4790      	blx	r2
          solid()
90005e80:	4a51      	ldr	r2, [pc, #324]	@ (90005fc8 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x1f0>)
90005e82:	f100 0310 	add.w	r3, r0, #16
90005e86:	4605      	mov	r5, r0
90005e88:	6002      	str	r2, [r0, #0]
          animationSteps(transitionSteps),
90005e8a:	2214      	movs	r2, #20
          solid()
90005e8c:	4631      	mov	r1, r6
90005e8e:	6046      	str	r6, [r0, #4]
          animationSteps(transitionSteps),
90005e90:	f8a0 2009 	strh.w	r2, [r0, #9]
          solid()
90005e94:	2228      	movs	r2, #40	@ 0x28
90005e96:	7206      	strb	r6, [r0, #8]
          calculatedValue(0),
90005e98:	81c6      	strh	r6, [r0, #14]
          solid()
90005e9a:	4618      	mov	r0, r3
90005e9c:	9301      	str	r3, [sp, #4]
90005e9e:	f025 ffab 	bl	9002bdf8 <memset>
            targetValue = -HAL::DISPLAY_WIDTH;
90005ea2:	4a4a      	ldr	r2, [pc, #296]	@ (90005fcc <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x1f4>)
          touchable(false),
90005ea4:	f44f 7180 	mov.w	r1, #256	@ 0x100
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90005ea8:	68b8      	ldr	r0, [r7, #8]
90005eaa:	8812      	ldrh	r2, [r2, #0]
        rect.x = x;
90005eac:	616e      	str	r6, [r5, #20]
        rect.width = width;
90005eae:	832a      	strh	r2, [r5, #24]
90005eb0:	4252      	negs	r2, r2
90005eb2:	81aa      	strh	r2, [r5, #12]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90005eb4:	4a46      	ldr	r2, [pc, #280]	@ (90005fd0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x1f8>)
90005eb6:	f9b2 2000 	ldrsh.w	r2, [r2]
        rect.height = height;
90005eba:	836a      	strh	r2, [r5, #26]
90005ebc:	6802      	ldr	r2, [r0, #0]
90005ebe:	6a52      	ldr	r2, [r2, #36]	@ 0x24
          touchable(false),
90005ec0:	86a9      	strh	r1, [r5, #52]	@ 0x34
    class FullSolidRect : public Widget
90005ec2:	4944      	ldr	r1, [pc, #272]	@ (90005fd4 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x1fc>)
90005ec4:	6129      	str	r1, [r5, #16]
90005ec6:	4631      	mov	r1, r6
90005ec8:	4790      	blx	r2
90005eca:	4604      	mov	r4, r0
90005ecc:	f003 f8de 	bl	9000908c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90005ed0:	6878      	ldr	r0, [r7, #4]
90005ed2:	4631      	mov	r1, r6
90005ed4:	6803      	ldr	r3, [r0, #0]
90005ed6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005ed8:	4798      	blx	r3
90005eda:	4607      	mov	r7, r0
90005edc:	4621      	mov	r1, r4
90005ede:	f003 f857 	bl	90008f90 <_ZN16Screen1PresenterC1ER11Screen1View>
    model->bind(newPresenter);
90005ee2:	1d3a      	adds	r2, r7, #4
    newScreen->setupScreen();
90005ee4:	6823      	ldr	r3, [r4, #0]
90005ee6:	4620      	mov	r0, r4
    *currentPresenter = newPresenter;
90005ee8:	f8c8 713c 	str.w	r7, [r8, #316]	@ 0x13c
    newScreen->setupScreen();
90005eec:	68db      	ldr	r3, [r3, #12]
    *currentTrans = newTransition;
90005eee:	f8ca 5000 	str.w	r5, [sl]
    *currentScreen = newScreen;
90005ef2:	f8c9 4000 	str.w	r4, [r9]
90005ef6:	f8cb 2000 	str.w	r2, [fp]
90005efa:	f8c7 b008 	str.w	fp, [r7, #8]
90005efe:	63e7      	str	r7, [r4, #60]	@ 0x3c
    newScreen->setupScreen();
90005f00:	4798      	blx	r3
    newPresenter->activate();
90005f02:	683b      	ldr	r3, [r7, #0]
90005f04:	4638      	mov	r0, r7
90005f06:	681b      	ldr	r3, [r3, #0]
90005f08:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90005f0a:	4629      	mov	r1, r5
90005f0c:	4620      	mov	r0, r4
90005f0e:	f016 fc6d 	bl	9001c7ec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90005f12:	682b      	ldr	r3, [r5, #0]
90005f14:	4a30      	ldr	r2, [pc, #192]	@ (90005fd8 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x200>)
90005f16:	691b      	ldr	r3, [r3, #16]
90005f18:	4293      	cmp	r3, r2
90005f1a:	d13d      	bne.n	90005f98 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x1c0>
        Drawable* d = screenContainer->getFirstChild();
90005f1c:	6868      	ldr	r0, [r5, #4]
90005f1e:	4a2f      	ldr	r2, [pc, #188]	@ (90005fdc <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x204>)
90005f20:	6803      	ldr	r3, [r0, #0]
90005f22:	69db      	ldr	r3, [r3, #28]
90005f24:	4293      	cmp	r3, r2
90005f26:	d13a      	bne.n	90005f9e <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x1c6>
90005f28:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
90005f2a:	b164      	cbz	r4, 90005f46 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x16e>
90005f2c:	89aa      	ldrh	r2, [r5, #12]
90005f2e:	4f2c      	ldr	r7, [pc, #176]	@ (90005fe0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x208>)
                d->setX(d->getX() - targetValue);
90005f30:	6823      	ldr	r3, [r4, #0]
90005f32:	88a1      	ldrh	r1, [r4, #4]
90005f34:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90005f36:	1a89      	subs	r1, r1, r2
90005f38:	42bb      	cmp	r3, r7
90005f3a:	b209      	sxth	r1, r1
90005f3c:	d114      	bne.n	90005f68 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x190>
        rect.x = x;
90005f3e:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90005f40:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005f42:	2c00      	cmp	r4, #0
90005f44:	d1f4      	bne.n	90005f30 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x158>
        screenContainer->add(solid);
90005f46:	6868      	ldr	r0, [r5, #4]
90005f48:	9901      	ldr	r1, [sp, #4]
90005f4a:	6803      	ldr	r3, [r0, #0]
90005f4c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90005f4e:	4798      	blx	r3
    newTransition->invalidate();
90005f50:	682b      	ldr	r3, [r5, #0]
90005f52:	4a24      	ldr	r2, [pc, #144]	@ (90005fe4 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x20c>)
90005f54:	695b      	ldr	r3, [r3, #20]
90005f56:	4293      	cmp	r3, r2
90005f58:	d119      	bne.n	90005f8e <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x1b6>
        Application::getInstance()->invalidate();
90005f5a:	f014 fe4f 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
}
90005f5e:	b003      	add	sp, #12
90005f60:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005f64:	f015 bb06 	b.w	9001b574 <_ZN8touchgfx11Application10invalidateEv>
                d->setX(d->getX() - targetValue);
90005f68:	4620      	mov	r0, r4
90005f6a:	4798      	blx	r3
90005f6c:	69a4      	ldr	r4, [r4, #24]
        while (d)
90005f6e:	2c00      	cmp	r4, #0
90005f70:	d0e9      	beq.n	90005f46 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x16e>
90005f72:	89aa      	ldrh	r2, [r5, #12]
90005f74:	e7dc      	b.n	90005f30 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x158>
    if (*currentScreen)
90005f76:	f8d9 0000 	ldr.w	r0, [r9]
90005f7a:	2800      	cmp	r0, #0
90005f7c:	f47f af71 	bne.w	90005e62 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x8a>
90005f80:	e778      	b.n	90005e74 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x9c>
    if (*currentPresenter)
90005f82:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90005f86:	2800      	cmp	r0, #0
90005f88:	f47f af65 	bne.w	90005e56 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x7e>
90005f8c:	e772      	b.n	90005e74 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x9c>
    newTransition->invalidate();
90005f8e:	4628      	mov	r0, r5
90005f90:	b003      	add	sp, #12
90005f92:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005f96:	4718      	bx	r3
    newTransition->init();
90005f98:	4628      	mov	r0, r5
90005f9a:	4798      	blx	r3
90005f9c:	e7d8      	b.n	90005f50 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x178>
        Drawable* d = screenContainer->getFirstChild();
90005f9e:	4798      	blx	r3
90005fa0:	4604      	mov	r4, r0
90005fa2:	e7c2      	b.n	90005f2a <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x152>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90005fa4:	4b10      	ldr	r3, [pc, #64]	@ (90005fe8 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x210>)
90005fa6:	21a4      	movs	r1, #164	@ 0xa4
90005fa8:	4a10      	ldr	r2, [pc, #64]	@ (90005fec <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x214>)
90005faa:	4811      	ldr	r0, [pc, #68]	@ (90005ff0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x218>)
90005fac:	f025 fc88 	bl	9002b8c0 <__assert_func>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005fb0:	4b10      	ldr	r3, [pc, #64]	@ (90005ff4 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x21c>)
90005fb2:	21a3      	movs	r1, #163	@ 0xa3
90005fb4:	4a0d      	ldr	r2, [pc, #52]	@ (90005fec <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x214>)
90005fb6:	480e      	ldr	r0, [pc, #56]	@ (90005ff0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x218>)
90005fb8:	f025 fc82 	bl	9002b8c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005fbc:	4b0e      	ldr	r3, [pc, #56]	@ (90005ff8 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x220>)
90005fbe:	21a5      	movs	r1, #165	@ 0xa5
90005fc0:	4a0a      	ldr	r2, [pc, #40]	@ (90005fec <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x214>)
90005fc2:	480b      	ldr	r0, [pc, #44]	@ (90005ff0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenCoverTransitionEastImplEv+0x218>)
90005fc4:	f025 fc7c 	bl	9002b8c0 <__assert_func>
90005fc8:	9002ece4 	.word	0x9002ece4
90005fcc:	24027e90 	.word	0x24027e90
90005fd0:	24027e92 	.word	0x24027e92
90005fd4:	9002ebd0 	.word	0x9002ebd0
90005fd8:	90005845 	.word	0x90005845
90005fdc:	90005639 	.word	0x90005639
90005fe0:	9000387d 	.word	0x9000387d
90005fe4:	90005735 	.word	0x90005735
90005fe8:	9002e8b0 	.word	0x9002e8b0
90005fec:	9002eae0 	.word	0x9002eae0
90005ff0:	9002e868 	.word	0x9002e868
90005ff4:	9002e704 	.word	0x9002e704
90005ff8:	9002e954 	.word	0x9002e954
90005ffc:	24027ee4 	.word	0x24027ee4
90006000:	24027ee0 	.word	0x24027ee0

90006004 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90006004:	b570      	push	{r4, r5, r6, lr}
90006006:	4604      	mov	r4, r0
90006008:	4616      	mov	r6, r2
9000600a:	460d      	mov	r5, r1
          pendingScreenTransitionCallback(0)
9000600c:	f014 ff2e 	bl	9001ae6c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90006010:	4a18      	ldr	r2, [pc, #96]	@ (90006074 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
        : currentPresenter(0),
90006012:	2300      	movs	r3, #0
      frontendHeap(heap),
90006014:	f8c4 6154 	str.w	r6, [r4, #340]	@ 0x154
        instance = this;
90006018:	6014      	str	r4, [r2, #0]
        return instance;
9000601a:	4e17      	ldr	r6, [pc, #92]	@ (90006078 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x74>)
      model(m)
9000601c:	4a17      	ldr	r2, [pc, #92]	@ (9000607c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x78>)
9000601e:	6830      	ldr	r0, [r6, #0]
90006020:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90006022:	4a17      	ldr	r2, [pc, #92]	@ (90006080 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7c>)
90006024:	4917      	ldr	r1, [pc, #92]	@ (90006084 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>)
90006026:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
9000602a:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
9000602e:	f8c4 5158 	str.w	r5, [r4, #344]	@ 0x158
        : currentPresenter(0),
90006032:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
90006036:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
9000603a:	6802      	ldr	r2, [r0, #0]
9000603c:	6892      	ldr	r2, [r2, #8]
9000603e:	428a      	cmp	r2, r1
90006040:	d115      	bne.n	9000606e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x6a>
        requestedOrientation = orientation;
90006042:	f44f 7380 	mov.w	r3, #256	@ 0x100
90006046:	f8a0 3074 	strh.w	r3, [r0, #116]	@ 0x74
    touchgfx::Texts::setLanguage(GB);
9000604a:	2000      	movs	r0, #0
9000604c:	f002 fdf8 	bl	90008c40 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90006050:	6833      	ldr	r3, [r6, #0]
90006052:	f893 2076 	ldrb.w	r2, [r3, #118]	@ 0x76
90006056:	b12a      	cbz	r2, 90006064 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>
90006058:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000605a:	b118      	cbz	r0, 90006064 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
9000605c:	f01d f899 	bl	90023192 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
90006060:	4620      	mov	r0, r4
90006062:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90006064:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90006066:	f01d f894 	bl	90023192 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
9000606a:	4620      	mov	r0, r4
9000606c:	bd70      	pop	{r4, r5, r6, pc}
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
9000606e:	4619      	mov	r1, r3
90006070:	4790      	blx	r2
90006072:	e7ea      	b.n	9000604a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
90006074:	24027ef0 	.word	0x24027ef0
90006078:	24027e9c 	.word	0x24027e9c
9000607c:	9002ec50 	.word	0x9002ec50
90006080:	9002ec38 	.word	0x9002ec38
90006084:	90001c01 	.word	0x90001c01

90006088 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90006088:	4905      	ldr	r1, [pc, #20]	@ (900060a0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x18>)
9000608a:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
9000608c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90006090:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90006094:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90006098:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
9000609c:	4770      	bx	lr
9000609e:	bf00      	nop
900060a0:	9000599d 	.word	0x9000599d

900060a4 <_ZN23FrontendApplicationBase36gotoScreen1ScreenCoverTransitionEastEv>:
900060a4:	4905      	ldr	r1, [pc, #20]	@ (900060bc <_ZN23FrontendApplicationBase36gotoScreen1ScreenCoverTransitionEastEv+0x18>)
900060a6:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900060a8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900060ac:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900060b0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900060b4:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
900060b8:	4770      	bx	lr
900060ba:	bf00      	nop
900060bc:	90005dd9 	.word	0x90005dd9

900060c0 <_ZN23FrontendApplicationBase36gotoScreen2ScreenSlideTransitionEastEv>:
900060c0:	4905      	ldr	r1, [pc, #20]	@ (900060d8 <_ZN23FrontendApplicationBase36gotoScreen2ScreenSlideTransitionEastEv+0x18>)
900060c2:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900060c4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900060c8:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900060cc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900060d0:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
900060d4:	4770      	bx	lr
900060d6:	bf00      	nop
900060d8:	90005b35 	.word	0x90005b35

900060dc <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
900060dc:	6a40      	ldr	r0, [r0, #36]	@ 0x24
900060de:	4770      	bx	lr

900060e0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
900060e0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
900060e2:	4770      	bx	lr

900060e4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
900060e4:	4770      	bx	lr
900060e6:	bf00      	nop

900060e8 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
900060e8:	888b      	ldrh	r3, [r1, #4]
900060ea:	69c0      	ldr	r0, [r0, #28]
900060ec:	0adb      	lsrs	r3, r3, #11
900060ee:	680a      	ldr	r2, [r1, #0]
900060f0:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
900060f4:	4410      	add	r0, r2
900060f6:	4770      	bx	lr

900060f8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
900060f8:	b1fa      	cbz	r2, 9000613a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
{
900060fa:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
900060fc:	7b14      	ldrb	r4, [r2, #12]
900060fe:	b1d4      	cbz	r4, 90006136 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90006100:	f892 c00d 	ldrb.w	ip, [r2, #13]
90006104:	f892 e00b 	ldrb.w	lr, [r2, #11]
90006108:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
9000610c:	6a03      	ldr	r3, [r0, #32]
9000610e:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
90006112:	ea4e 0202 	orr.w	r2, lr, r2
90006116:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
9000611a:	eb03 0084 	add.w	r0, r3, r4, lsl #2
9000611e:	e004      	b.n	9000612a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x32>
90006120:	f103 0304 	add.w	r3, r3, #4
    {
        if (prevChar == kerndata->unicodePrevChar)
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90006124:	d807      	bhi.n	90006136 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90006126:	4283      	cmp	r3, r0
90006128:	d005      	beq.n	90006136 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        if (prevChar == kerndata->unicodePrevChar)
9000612a:	881a      	ldrh	r2, [r3, #0]
9000612c:	428a      	cmp	r2, r1
9000612e:	d1f7      	bne.n	90006120 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
            return kerndata->distance;
90006130:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
90006134:	bd10      	pop	{r4, pc}
        return 0;
90006136:	2000      	movs	r0, #0
}
90006138:	bd10      	pop	{r4, pc}
        return 0;
9000613a:	4610      	mov	r0, r2
}
9000613c:	4770      	bx	lr
9000613e:	bf00      	nop

90006140 <_ZN8touchgfx13GeneratedFontD0Ev>:
90006140:	b510      	push	{r4, lr}
90006142:	4604      	mov	r4, r0
90006144:	212c      	movs	r1, #44	@ 0x2c
90006146:	f025 f9de 	bl	9002b506 <_ZdlPvj>
9000614a:	4620      	mov	r0, r4
9000614c:	bd10      	pop	{r4, pc}
9000614e:	bf00      	nop

90006150 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006150:	b530      	push	{r4, r5, lr}
90006152:	b08b      	sub	sp, #44	@ 0x2c
90006154:	4604      	mov	r4, r0
90006156:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
      arabicTable(formsTable)
9000615a:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000615c:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
      arabicTable(formsTable)
90006160:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006162:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
      arabicTable(formsTable)
90006166:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006168:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
      arabicTable(formsTable)
9000616c:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000616e:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
      arabicTable(formsTable)
90006172:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006174:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
      arabicTable(formsTable)
90006178:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000617a:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
      arabicTable(formsTable)
9000617e:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006180:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
      arabicTable(formsTable)
90006184:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90006186:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
      arabicTable(formsTable)
9000618a:	9508      	str	r5, [sp, #32]
9000618c:	f015 fe9a 	bl	9001bec4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90006190:	9b15      	ldr	r3, [sp, #84]	@ 0x54
}
90006192:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
90006194:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
90006196:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90006198:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
9000619a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9000619c:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
9000619e:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
900061a0:	62a3      	str	r3, [r4, #40]	@ 0x28
900061a2:	4b02      	ldr	r3, [pc, #8]	@ (900061ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
900061a4:	6023      	str	r3, [r4, #0]
}
900061a6:	b00b      	add	sp, #44	@ 0x2c
900061a8:	bd30      	pop	{r4, r5, pc}
900061aa:	bf00      	nop
900061ac:	9002ed08 	.word	0x9002ed08

900061b0 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
900061b0:	4770      	bx	lr
900061b2:	bf00      	nop

900061b4 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
900061b4:	4770      	bx	lr
900061b6:	bf00      	nop

900061b8 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
900061b8:	4770      	bx	lr
900061ba:	bf00      	nop

900061bc <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
900061bc:	4770      	bx	lr
900061be:	bf00      	nop

900061c0 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
900061c0:	b530      	push	{r4, r5, lr}
900061c2:	b085      	sub	sp, #20
900061c4:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
900061c6:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
900061c8:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
900061ca:	466d      	mov	r5, sp
900061cc:	4601      	mov	r1, r0
        rect.width = width;
900061ce:	8102      	strh	r2, [r0, #8]
900061d0:	343c      	adds	r4, #60	@ 0x3c
900061d2:	4628      	mov	r0, r5
900061d4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
900061d8:	4798      	blx	r3
900061da:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900061de:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
900061e2:	b005      	add	sp, #20
900061e4:	bd30      	pop	{r4, r5, pc}
900061e6:	bf00      	nop

900061e8 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
900061e8:	b530      	push	{r4, r5, lr}
900061ea:	b085      	sub	sp, #20
900061ec:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
900061ee:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
900061f0:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
900061f2:	466d      	mov	r5, sp
900061f4:	4601      	mov	r1, r0
        rect.height = height;
900061f6:	8142      	strh	r2, [r0, #10]
900061f8:	343c      	adds	r4, #60	@ 0x3c
900061fa:	4628      	mov	r0, r5
900061fc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90006200:	4798      	blx	r3
90006202:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90006206:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
9000620a:	b005      	add	sp, #20
9000620c:	bd30      	pop	{r4, r5, pc}
9000620e:	bf00      	nop

90006210 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
90006210:	2200      	movs	r2, #0
90006212:	6002      	str	r2, [r0, #0]
90006214:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90006216:	4770      	bx	lr

90006218 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90006218:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
9000621c:	4770      	bx	lr
9000621e:	bf00      	nop

90006220 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
90006220:	2000      	movs	r0, #0
90006222:	4770      	bx	lr

90006224 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
90006224:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90006228:	b112      	cbz	r2, 90006230 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
9000622a:	6803      	ldr	r3, [r0, #0]
9000622c:	695b      	ldr	r3, [r3, #20]
9000622e:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
90006230:	4770      	bx	lr
90006232:	bf00      	nop

90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006234:	2200      	movs	r2, #0
90006236:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
9000623a:	6082      	str	r2, [r0, #8]
9000623c:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
90006240:	4770      	bx	lr
90006242:	bf00      	nop

90006244 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
90006244:	6c80      	ldr	r0, [r0, #72]	@ 0x48
90006246:	4770      	bx	lr

90006248 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
90006248:	6c80      	ldr	r0, [r0, #72]	@ 0x48
9000624a:	4770      	bx	lr

9000624c <_ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard2Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return wc2;
    }
9000624c:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
9000624e:	4770      	bx	lr

90006250 <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
90006250:	4770      	bx	lr
90006252:	bf00      	nop

90006254 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
90006254:	4770      	bx	lr
90006256:	bf00      	nop

90006258 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006258:	4770      	bx	lr
9000625a:	bf00      	nop

9000625c <_ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev>:
class TextAreaWithTwoWildcards : public TextAreaWithWildcardBase
9000625c:	4770      	bx	lr
9000625e:	bf00      	nop

90006260 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90006260:	4770      	bx	lr
90006262:	bf00      	nop

90006264 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90006264:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90006266:	68c3      	ldr	r3, [r0, #12]
90006268:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
9000626c:	f013 0f01 	tst.w	r3, #1
90006270:	eb04 0063 	add.w	r0, r4, r3, asr #1
90006274:	d004      	beq.n	90006280 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
90006276:	ea4f 0c63 	mov.w	ip, r3, asr #1
9000627a:	f854 300c 	ldr.w	r3, [r4, ip]
9000627e:	589a      	ldr	r2, [r3, r2]
    }
90006280:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90006284:	4710      	bx	r2
90006286:	bf00      	nop

90006288 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90006288:	6843      	ldr	r3, [r0, #4]
9000628a:	b13b      	cbz	r3, 9000629c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
9000628c:	6883      	ldr	r3, [r0, #8]
9000628e:	b10b      	cbz	r3, 90006294 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90006290:	2001      	movs	r0, #1
    }
90006292:	4770      	bx	lr
90006294:	68c0      	ldr	r0, [r0, #12]
90006296:	f000 0001 	and.w	r0, r0, #1
9000629a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
9000629c:	4618      	mov	r0, r3
9000629e:	4770      	bx	lr

900062a0 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
900062a0:	b510      	push	{r4, lr}
900062a2:	4604      	mov	r4, r0
900062a4:	214c      	movs	r1, #76	@ 0x4c
900062a6:	f025 f92e 	bl	9002b506 <_ZdlPvj>
900062aa:	4620      	mov	r0, r4
900062ac:	bd10      	pop	{r4, pc}
900062ae:	bf00      	nop

900062b0 <_ZN8touchgfx24TextAreaWithTwoWildcardsD0Ev>:
class TextAreaWithTwoWildcards : public TextAreaWithWildcardBase
900062b0:	b510      	push	{r4, lr}
900062b2:	4604      	mov	r4, r0
900062b4:	2150      	movs	r1, #80	@ 0x50
900062b6:	f025 f926 	bl	9002b506 <_ZdlPvj>
900062ba:	4620      	mov	r0, r4
900062bc:	bd10      	pop	{r4, pc}
900062be:	bf00      	nop

900062c0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900062c0:	b510      	push	{r4, lr}
900062c2:	4604      	mov	r4, r0
900062c4:	2110      	movs	r1, #16
900062c6:	f025 f91e 	bl	9002b506 <_ZdlPvj>
900062ca:	4620      	mov	r0, r4
900062cc:	bd10      	pop	{r4, pc}
900062ce:	bf00      	nop

900062d0 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
900062d0:	b510      	push	{r4, lr}
900062d2:	4604      	mov	r4, r0
}
900062d4:	f640 31ec 	movw	r1, #3052	@ 0xbec
900062d8:	f025 f915 	bl	9002b506 <_ZdlPvj>
900062dc:	4620      	mov	r0, r4
900062de:	bd10      	pop	{r4, pc}

900062e0 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithIcon1)
900062e0:	f500 7066 	add.w	r0, r0, #920	@ 0x398
900062e4:	4288      	cmp	r0, r1
900062e6:	d000      	beq.n	900062ea <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa>
900062e8:	4770      	bx	lr
{
900062ea:	b508      	push	{r3, lr}
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
900062ec:	f014 fc86 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithIcon1 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenSlideTransitionEast();
    }
}
900062f0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenSlideTransitionEast();
900062f4:	f7ff bee4 	b.w	900060c0 <_ZN23FrontendApplicationBase36gotoScreen2ScreenSlideTransitionEastEv>

900062f8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900062f8:	4b1b      	ldr	r3, [pc, #108]	@ (90006368 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
900062fa:	6802      	ldr	r2, [r0, #0]
900062fc:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
900062fe:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90006300:	6b55      	ldr	r5, [r2, #52]	@ 0x34
90006302:	b323      	cbz	r3, 9000634e <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
90006304:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
90006306:	4919      	ldr	r1, [pc, #100]	@ (9000636c <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90006308:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
9000630a:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000630c:	8809      	ldrh	r1, [r1, #0]
9000630e:	4291      	cmp	r1, r2
90006310:	d923      	bls.n	9000635a <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
90006312:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90006316:	4b16      	ldr	r3, [pc, #88]	@ (90006370 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90006318:	681b      	ldr	r3, [r3, #0]
9000631a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
9000631e:	4a15      	ldr	r2, [pc, #84]	@ (90006374 <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90006320:	6803      	ldr	r3, [r0, #0]
90006322:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90006324:	4293      	cmp	r3, r2
90006326:	d107      	bne.n	90006338 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90006328:	88c0      	ldrh	r0, [r0, #6]
9000632a:	4b13      	ldr	r3, [pc, #76]	@ (90006378 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
9000632c:	1a31      	subs	r1, r6, r0
9000632e:	429d      	cmp	r5, r3
90006330:	b209      	sxth	r1, r1
90006332:	d107      	bne.n	90006344 <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
90006334:	80e1      	strh	r1, [r4, #6]
    }
90006336:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90006338:	4798      	blx	r3
9000633a:	4b0f      	ldr	r3, [pc, #60]	@ (90006378 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
9000633c:	1a31      	subs	r1, r6, r0
9000633e:	429d      	cmp	r5, r3
90006340:	b209      	sxth	r1, r1
90006342:	d0f7      	beq.n	90006334 <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
90006344:	4620      	mov	r0, r4
90006346:	462b      	mov	r3, r5
    }
90006348:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
9000634c:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000634e:	4b0b      	ldr	r3, [pc, #44]	@ (9000637c <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
90006350:	216c      	movs	r1, #108	@ 0x6c
90006352:	4a0b      	ldr	r2, [pc, #44]	@ (90006380 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90006354:	480b      	ldr	r0, [pc, #44]	@ (90006384 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90006356:	f025 fab3 	bl	9002b8c0 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000635a:	4b0b      	ldr	r3, [pc, #44]	@ (90006388 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
9000635c:	216d      	movs	r1, #109	@ 0x6d
9000635e:	4a08      	ldr	r2, [pc, #32]	@ (90006380 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90006360:	4808      	ldr	r0, [pc, #32]	@ (90006384 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90006362:	f025 faad 	bl	9002b8c0 <__assert_func>
90006366:	bf00      	nop
90006368:	24027ef4 	.word	0x24027ef4
9000636c:	24027ef8 	.word	0x24027ef8
90006370:	24027efc 	.word	0x24027efc
90006374:	900055fd 	.word	0x900055fd
90006378:	90003881 	.word	0x90003881
9000637c:	9002ed60 	.word	0x9002ed60
90006380:	9002eda4 	.word	0x9002eda4
90006384:	9002ede0 	.word	0x9002ede0
90006388:	9002ee28 	.word	0x9002ee28

9000638c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
9000638c:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
9000638e:	b570      	push	{r4, r5, r6, lr}
90006390:	4614      	mov	r4, r2
90006392:	4e23      	ldr	r6, [pc, #140]	@ (90006420 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x94>)
        setX(x);
90006394:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90006396:	4605      	mov	r5, r0
90006398:	42b2      	cmp	r2, r6
9000639a:	d122      	bne.n	900063e2 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x56>
        setBaselineY(baselineY);
9000639c:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
        rect.x = x;
9000639e:	80a9      	strh	r1, [r5, #4]
900063a0:	4920      	ldr	r1, [pc, #128]	@ (90006424 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
900063a2:	428a      	cmp	r2, r1
900063a4:	d123      	bne.n	900063ee <_ZN8touchgfx8TextArea13setXBaselineYEss+0x62>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900063a6:	4a20      	ldr	r2, [pc, #128]	@ (90006428 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
900063a8:	b2a4      	uxth	r4, r4
900063aa:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
900063ac:	6813      	ldr	r3, [r2, #0]
900063ae:	2b00      	cmp	r3, #0
900063b0:	d02f      	beq.n	90006412 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x86>
        return typedTextId < numberOfTypedTexts;
900063b2:	491e      	ldr	r1, [pc, #120]	@ (9000642c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
900063b4:	8daa      	ldrh	r2, [r5, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900063b6:	8809      	ldrh	r1, [r1, #0]
900063b8:	4291      	cmp	r1, r2
900063ba:	d924      	bls.n	90006406 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x7a>
        return fonts[typedTexts[typedTextId].fontIdx];
900063bc:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900063c0:	4b1b      	ldr	r3, [pc, #108]	@ (90006430 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
900063c2:	681b      	ldr	r3, [r3, #0]
900063c4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900063c8:	4a1a      	ldr	r2, [pc, #104]	@ (90006434 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
900063ca:	6803      	ldr	r3, [r0, #0]
900063cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900063ce:	4293      	cmp	r3, r2
900063d0:	d117      	bne.n	90006402 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
900063d2:	88c0      	ldrh	r0, [r0, #6]
900063d4:	4b18      	ldr	r3, [pc, #96]	@ (90006438 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
900063d6:	1a24      	subs	r4, r4, r0
900063d8:	429e      	cmp	r6, r3
900063da:	b221      	sxth	r1, r4
900063dc:	d10c      	bne.n	900063f8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6c>
        rect.y = y;
900063de:	80e9      	strh	r1, [r5, #6]
    }
900063e0:	bd70      	pop	{r4, r5, r6, pc}
        setX(x);
900063e2:	4790      	blx	r2
        setBaselineY(baselineY);
900063e4:	682b      	ldr	r3, [r5, #0]
900063e6:	490f      	ldr	r1, [pc, #60]	@ (90006424 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
900063e8:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
900063ea:	428a      	cmp	r2, r1
900063ec:	d0db      	beq.n	900063a6 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1a>
900063ee:	4621      	mov	r1, r4
900063f0:	4628      	mov	r0, r5
    }
900063f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
900063f6:	4710      	bx	r2
        setY(baselineY - getTypedText().getFont()->getBaseline());
900063f8:	4628      	mov	r0, r5
900063fa:	4633      	mov	r3, r6
    }
900063fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90006400:	4718      	bx	r3
90006402:	4798      	blx	r3
90006404:	e7e6      	b.n	900063d4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x48>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90006406:	4b0d      	ldr	r3, [pc, #52]	@ (9000643c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90006408:	216d      	movs	r1, #109	@ 0x6d
9000640a:	4a0d      	ldr	r2, [pc, #52]	@ (90006440 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
9000640c:	480d      	ldr	r0, [pc, #52]	@ (90006444 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
9000640e:	f025 fa57 	bl	9002b8c0 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006412:	4b0d      	ldr	r3, [pc, #52]	@ (90006448 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90006414:	216c      	movs	r1, #108	@ 0x6c
90006416:	4a0a      	ldr	r2, [pc, #40]	@ (90006440 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90006418:	480a      	ldr	r0, [pc, #40]	@ (90006444 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
9000641a:	f025 fa51 	bl	9002b8c0 <__assert_func>
9000641e:	bf00      	nop
90006420:	9000387d 	.word	0x9000387d
90006424:	900062f9 	.word	0x900062f9
90006428:	24027ef4 	.word	0x24027ef4
9000642c:	24027ef8 	.word	0x24027ef8
90006430:	24027efc 	.word	0x24027efc
90006434:	900055fd 	.word	0x900055fd
90006438:	90003881 	.word	0x90003881
9000643c:	9002ee28 	.word	0x9002ee28
90006440:	9002eda4 	.word	0x9002eda4
90006444:	9002ede0 	.word	0x9002ede0
90006448:	9002ed60 	.word	0x9002ed60

9000644c <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
9000644c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006450:	b09d      	sub	sp, #116	@ 0x74
90006452:	4604      	mov	r4, r0
        : presenter(0)
90006454:	f016 f81e 	bl	9001c494 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
90006458:	4af3      	ldr	r2, [pc, #972]	@ (90006828 <_ZN15Screen1ViewBaseC1Ev+0x3dc>)
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
9000645a:	4bf4      	ldr	r3, [pc, #976]	@ (9000682c <_ZN15Screen1ViewBaseC1Ev+0x3e0>)
9000645c:	2600      	movs	r6, #0
          touchable(false),
9000645e:	f44f 7580 	mov.w	r5, #256	@ 0x100
90006462:	f04f 09ff 	mov.w	r9, #255	@ 0xff
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90006466:	f64f 7aff 	movw	sl, #65535	@ 0xffff
9000646a:	6022      	str	r2, [r4, #0]
9000646c:	6423      	str	r3, [r4, #64]	@ 0x40
9000646e:	f104 026c 	add.w	r2, r4, #108	@ 0x6c
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
90006472:	4bef      	ldr	r3, [pc, #956]	@ (90006830 <_ZN15Screen1ViewBaseC1Ev+0x3e4>)
    {
        Image::setBitmap(bmp);
90006474:	a91a      	add	r1, sp, #104	@ 0x68
90006476:	4610      	mov	r0, r2
90006478:	f8a4 5064 	strh.w	r5, [r4, #100]	@ 0x64
9000647c:	f884 9066 	strb.w	r9, [r4, #102]	@ 0x66
90006480:	f04f 37ff 	mov.w	r7, #4294967295
90006484:	f8a4 5090 	strh.w	r5, [r4, #144]	@ 0x90
    __background.setPosition(0, 0, 480, 272);
90006488:	f104 0840 	add.w	r8, r4, #64	@ 0x40
        : Widget(), bitmap(bmp), alpha(255)
9000648c:	f8a4 a092 	strh.w	sl, [r4, #146]	@ 0x92
90006490:	f884 a094 	strb.w	sl, [r4, #148]	@ 0x94
90006494:	66e3      	str	r3, [r4, #108]	@ 0x6c
90006496:	63e6      	str	r6, [r4, #60]	@ 0x3c
        : x(0), y(0), width(0), height(0)
90006498:	6466      	str	r6, [r4, #68]	@ 0x44
          cachedAbsX(0),
9000649a:	6626      	str	r6, [r4, #96]	@ 0x60
        : color(col)
9000649c:	66a6      	str	r6, [r4, #104]	@ 0x68
        : x(0), y(0), width(0), height(0)
9000649e:	6726      	str	r6, [r4, #112]	@ 0x70
900064a0:	f8c4 608c 	str.w	r6, [r4, #140]	@ 0x8c
900064a4:	f8ad a068 	strh.w	sl, [sp, #104]	@ 0x68
        Image::setBitmap(bmp);
900064a8:	9203      	str	r2, [sp, #12]
        : typedTextId(id)
900064aa:	f8df b394 	ldr.w	fp, [pc, #916]	@ 90006840 <_ZN15Screen1ViewBaseC1Ev+0x3f4>
900064ae:	e9c4 6612 	strd	r6, r6, [r4, #72]	@ 0x48
          parent(0),
900064b2:	e9c4 6614 	strd	r6, r6, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
900064b6:	e9c4 6616 	strd	r6, r6, [r4, #88]	@ 0x58
900064ba:	e9c4 661d 	strd	r6, r6, [r4, #116]	@ 0x74
          parent(0),
900064be:	e9c4 661f 	strd	r6, r6, [r4, #124]	@ 0x7c
          nextDrawChainElement(0),
900064c2:	e9c4 6621 	strd	r6, r6, [r4, #132]	@ 0x84
900064c6:	f011 ffbc 	bl	90018442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
        : Box(), borderColor(0), borderSize(0)
900064ca:	4ada      	ldr	r2, [pc, #872]	@ (90006834 <_ZN15Screen1ViewBaseC1Ev+0x3e8>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900064cc:	4bda      	ldr	r3, [pc, #872]	@ (90006838 <_ZN15Screen1ViewBaseC1Ev+0x3ec>)
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
900064ce:	f504 7166 	add.w	r1, r4, #920	@ 0x398
900064d2:	f8c4 2098 	str.w	r2, [r4, #152]	@ 0x98
900064d6:	f8c4 20cc 	str.w	r2, [r4, #204]	@ 0xcc
900064da:	4608      	mov	r0, r1
          touchable(false),
900064dc:	f8a4 50bc 	strh.w	r5, [r4, #188]	@ 0xbc
900064e0:	f884 90be 	strb.w	r9, [r4, #190]	@ 0xbe
900064e4:	f8a4 50f0 	strh.w	r5, [r4, #240]	@ 0xf0
900064e8:	f884 90f2 	strb.w	r9, [r4, #242]	@ 0xf2
900064ec:	f8a4 60c8 	strh.w	r6, [r4, #200]	@ 0xc8
900064f0:	f8a4 60fc 	strh.w	r6, [r4, #252]	@ 0xfc
900064f4:	e9c4 6627 	strd	r6, r6, [r4, #156]	@ 0x9c
900064f8:	e9c4 6629 	strd	r6, r6, [r4, #164]	@ 0xa4
          nextSibling(0),
900064fc:	e9c4 662b 	strd	r6, r6, [r4, #172]	@ 0xac
          cachedAbsX(0),
90006500:	e9c4 662d 	strd	r6, r6, [r4, #180]	@ 0xb4
        : color(col)
90006504:	e9c4 6630 	strd	r6, r6, [r4, #192]	@ 0xc0
        : x(0), y(0), width(0), height(0)
90006508:	e9c4 6634 	strd	r6, r6, [r4, #208]	@ 0xd0
9000650c:	e9c4 6636 	strd	r6, r6, [r4, #216]	@ 0xd8
          nextSibling(0),
90006510:	e9c4 6638 	strd	r6, r6, [r4, #224]	@ 0xe0
          cachedAbsX(0),
90006514:	e9c4 663a 	strd	r6, r6, [r4, #232]	@ 0xe8
        : color(col)
90006518:	e9c4 663d 	strd	r6, r6, [r4, #244]	@ 0xf4
        : x(0), y(0), width(0), height(0)
9000651c:	e9c4 6641 	strd	r6, r6, [r4, #260]	@ 0x104
90006520:	e9c4 6643 	strd	r6, r6, [r4, #268]	@ 0x10c
          parent(0),
90006524:	f8c4 6114 	str.w	r6, [r4, #276]	@ 0x114
90006528:	f8c4 2100 	str.w	r2, [r4, #256]	@ 0x100
9000652c:	f8c4 2134 	str.w	r2, [r4, #308]	@ 0x134
          touchable(false),
90006530:	f8a4 5124 	strh.w	r5, [r4, #292]	@ 0x124
90006534:	f884 9126 	strb.w	r9, [r4, #294]	@ 0x126
90006538:	f8a4 5158 	strh.w	r5, [r4, #344]	@ 0x158
9000653c:	f884 915a 	strb.w	r9, [r4, #346]	@ 0x15a
90006540:	f8a4 518c 	strh.w	r5, [r4, #396]	@ 0x18c
          cachedAbsX(0),
90006544:	f8c4 6120 	str.w	r6, [r4, #288]	@ 0x120
90006548:	f8a4 6130 	strh.w	r6, [r4, #304]	@ 0x130
9000654c:	f8a4 6164 	strh.w	r6, [r4, #356]	@ 0x164
          nextDrawChainElement(0),
90006550:	e9c4 6646 	strd	r6, r6, [r4, #280]	@ 0x118
        : color(col)
90006554:	e9c4 664a 	strd	r6, r6, [r4, #296]	@ 0x128
        : x(0), y(0), width(0), height(0)
90006558:	e9c4 664e 	strd	r6, r6, [r4, #312]	@ 0x138
9000655c:	e9c4 6650 	strd	r6, r6, [r4, #320]	@ 0x140
          nextSibling(0),
90006560:	e9c4 6652 	strd	r6, r6, [r4, #328]	@ 0x148
          cachedAbsX(0),
90006564:	e9c4 6654 	strd	r6, r6, [r4, #336]	@ 0x150
        : color(col)
90006568:	e9c4 6657 	strd	r6, r6, [r4, #348]	@ 0x15c
        : x(0), y(0), width(0), height(0)
9000656c:	e9c4 665b 	strd	r6, r6, [r4, #364]	@ 0x16c
90006570:	e9c4 665d 	strd	r6, r6, [r4, #372]	@ 0x174
          nextSibling(0),
90006574:	e9c4 665f 	strd	r6, r6, [r4, #380]	@ 0x17c
          cachedAbsX(0),
90006578:	e9c4 6661 	strd	r6, r6, [r4, #388]	@ 0x184
9000657c:	f884 918e 	strb.w	r9, [r4, #398]	@ 0x18e
90006580:	f8c4 2168 	str.w	r2, [r4, #360]	@ 0x168
90006584:	f8c4 219c 	str.w	r2, [r4, #412]	@ 0x19c
90006588:	f8c4 21d0 	str.w	r2, [r4, #464]	@ 0x1d0
          touchable(false),
9000658c:	f8a4 51c0 	strh.w	r5, [r4, #448]	@ 0x1c0
90006590:	f884 91c2 	strb.w	r9, [r4, #450]	@ 0x1c2
90006594:	f8a4 51f4 	strh.w	r5, [r4, #500]	@ 0x1f4
90006598:	f884 91f6 	strb.w	r9, [r4, #502]	@ 0x1f6
9000659c:	f8a4 6198 	strh.w	r6, [r4, #408]	@ 0x198
900065a0:	f8a4 61cc 	strh.w	r6, [r4, #460]	@ 0x1cc
900065a4:	f8a4 6200 	strh.w	r6, [r4, #512]	@ 0x200
        : color(col)
900065a8:	e9c4 6664 	strd	r6, r6, [r4, #400]	@ 0x190
        : x(0), y(0), width(0), height(0)
900065ac:	e9c4 6668 	strd	r6, r6, [r4, #416]	@ 0x1a0
900065b0:	e9c4 666a 	strd	r6, r6, [r4, #424]	@ 0x1a8
          nextSibling(0),
900065b4:	e9c4 666c 	strd	r6, r6, [r4, #432]	@ 0x1b0
          cachedAbsX(0),
900065b8:	e9c4 666e 	strd	r6, r6, [r4, #440]	@ 0x1b8
        : color(col)
900065bc:	e9c4 6671 	strd	r6, r6, [r4, #452]	@ 0x1c4
        : x(0), y(0), width(0), height(0)
900065c0:	e9c4 6675 	strd	r6, r6, [r4, #468]	@ 0x1d4
900065c4:	e9c4 6677 	strd	r6, r6, [r4, #476]	@ 0x1dc
          nextSibling(0),
900065c8:	e9c4 6679 	strd	r6, r6, [r4, #484]	@ 0x1e4
          cachedAbsX(0),
900065cc:	e9c4 667b 	strd	r6, r6, [r4, #492]	@ 0x1ec
        : color(col)
900065d0:	e9c4 667e 	strd	r6, r6, [r4, #504]	@ 0x1f8
900065d4:	e9c4 2681 	strd	r2, r6, [r4, #516]	@ 0x204
900065d8:	f8c4 2238 	str.w	r2, [r4, #568]	@ 0x238
          touchable(false),
900065dc:	f8a4 5228 	strh.w	r5, [r4, #552]	@ 0x228
900065e0:	f884 922a 	strb.w	r9, [r4, #554]	@ 0x22a
900065e4:	f8a4 525c 	strh.w	r5, [r4, #604]	@ 0x25c
900065e8:	f884 925e 	strb.w	r9, [r4, #606]	@ 0x25e
          cachedAbsX(0),
900065ec:	f8c4 6224 	str.w	r6, [r4, #548]	@ 0x224
900065f0:	f8a4 6234 	strh.w	r6, [r4, #564]	@ 0x234
900065f4:	f8a4 6268 	strh.w	r6, [r4, #616]	@ 0x268
        : x(0), y(0), width(0), height(0)
900065f8:	e9c4 6683 	strd	r6, r6, [r4, #524]	@ 0x20c
          parent(0),
900065fc:	e9c4 6685 	strd	r6, r6, [r4, #532]	@ 0x214
          nextDrawChainElement(0),
90006600:	e9c4 6687 	strd	r6, r6, [r4, #540]	@ 0x21c
        : color(col)
90006604:	e9c4 668b 	strd	r6, r6, [r4, #556]	@ 0x22c
        : x(0), y(0), width(0), height(0)
90006608:	e9c4 668f 	strd	r6, r6, [r4, #572]	@ 0x23c
9000660c:	e9c4 6691 	strd	r6, r6, [r4, #580]	@ 0x244
          nextSibling(0),
90006610:	e9c4 6693 	strd	r6, r6, [r4, #588]	@ 0x24c
          cachedAbsX(0),
90006614:	e9c4 6695 	strd	r6, r6, [r4, #596]	@ 0x254
        : color(col)
90006618:	e9c4 6698 	strd	r6, r6, [r4, #608]	@ 0x260
        : x(0), y(0), width(0), height(0)
9000661c:	e9c4 669c 	strd	r6, r6, [r4, #624]	@ 0x270
90006620:	e9c4 669e 	strd	r6, r6, [r4, #632]	@ 0x278
          nextSibling(0),
90006624:	e9c4 66a0 	strd	r6, r6, [r4, #640]	@ 0x280
90006628:	f8c4 226c 	str.w	r2, [r4, #620]	@ 0x26c
9000662c:	f8c4 22a0 	str.w	r2, [r4, #672]	@ 0x2a0
          touchable(false),
90006630:	f8a4 5290 	strh.w	r5, [r4, #656]	@ 0x290
90006634:	f884 9292 	strb.w	r9, [r4, #658]	@ 0x292
90006638:	f8a4 52c4 	strh.w	r5, [r4, #708]	@ 0x2c4
9000663c:	f884 92c6 	strb.w	r9, [r4, #710]	@ 0x2c6
90006640:	f8a4 52f8 	strh.w	r5, [r4, #760]	@ 0x2f8
90006644:	f884 92fa 	strb.w	r9, [r4, #762]	@ 0x2fa
90006648:	f8a4 629c 	strh.w	r6, [r4, #668]	@ 0x29c
9000664c:	f8a4 62d0 	strh.w	r6, [r4, #720]	@ 0x2d0
          cachedAbsX(0),
90006650:	e9c4 66a2 	strd	r6, r6, [r4, #648]	@ 0x288
        : color(col)
90006654:	e9c4 66a5 	strd	r6, r6, [r4, #660]	@ 0x294
        : x(0), y(0), width(0), height(0)
90006658:	e9c4 66a9 	strd	r6, r6, [r4, #676]	@ 0x2a4
9000665c:	e9c4 66ab 	strd	r6, r6, [r4, #684]	@ 0x2ac
          nextSibling(0),
90006660:	e9c4 66ad 	strd	r6, r6, [r4, #692]	@ 0x2b4
          cachedAbsX(0),
90006664:	e9c4 66af 	strd	r6, r6, [r4, #700]	@ 0x2bc
        : color(col)
90006668:	e9c4 66b2 	strd	r6, r6, [r4, #712]	@ 0x2c8
        : x(0), y(0), width(0), height(0)
9000666c:	e9c4 66b6 	strd	r6, r6, [r4, #728]	@ 0x2d8
90006670:	e9c4 66b8 	strd	r6, r6, [r4, #736]	@ 0x2e0
          nextSibling(0),
90006674:	e9c4 66ba 	strd	r6, r6, [r4, #744]	@ 0x2e8
          cachedAbsX(0),
90006678:	e9c4 66bc 	strd	r6, r6, [r4, #752]	@ 0x2f0
        : color(col)
9000667c:	f8c4 62fc 	str.w	r6, [r4, #764]	@ 0x2fc
90006680:	f8c4 3308 	str.w	r3, [r4, #776]	@ 0x308
90006684:	f8c4 3350 	str.w	r3, [r4, #848]	@ 0x350
90006688:	f604 23c8 	addw	r3, r4, #2760	@ 0xac8
9000668c:	f8c4 22d4 	str.w	r2, [r4, #724]	@ 0x2d4
          touchable(false),
90006690:	f8a4 532c 	strh.w	r5, [r4, #812]	@ 0x32c
90006694:	f8a4 a334 	strh.w	sl, [r4, #820]	@ 0x334
90006698:	f8c4 933e 	str.w	r9, [r4, #830]	@ 0x33e
9000669c:	f8a4 5374 	strh.w	r5, [r4, #884]	@ 0x374
900066a0:	f8c4 6300 	str.w	r6, [r4, #768]	@ 0x300
900066a4:	f8a4 6304 	strh.w	r6, [r4, #772]	@ 0x304
900066a8:	f8c4 b330 	str.w	fp, [r4, #816]	@ 0x330
900066ac:	f8c4 6338 	str.w	r6, [r4, #824]	@ 0x338
900066b0:	f8a4 633c 	strh.w	r6, [r4, #828]	@ 0x33c
              text(0)
900066b4:	f8c4 634c 	str.w	r6, [r4, #844]	@ 0x34c
900066b8:	f8c4 b378 	str.w	fp, [r4, #888]	@ 0x378
        : x(0), y(0), width(0), height(0)
900066bc:	e9c4 66c3 	strd	r6, r6, [r4, #780]	@ 0x30c
900066c0:	e9c4 66c5 	strd	r6, r6, [r4, #788]	@ 0x314
          nextSibling(0),
900066c4:	e9c4 66c7 	strd	r6, r6, [r4, #796]	@ 0x31c
          cachedAbsX(0),
900066c8:	e9c4 66c9 	strd	r6, r6, [r4, #804]	@ 0x324
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900066cc:	e9c4 67d1 	strd	r6, r7, [r4, #836]	@ 0x344
        : x(0), y(0), width(0), height(0)
900066d0:	e9c4 66d5 	strd	r6, r6, [r4, #852]	@ 0x354
900066d4:	e9c4 66d7 	strd	r6, r6, [r4, #860]	@ 0x35c
          nextSibling(0),
900066d8:	e9c4 66d9 	strd	r6, r6, [r4, #868]	@ 0x364
          cachedAbsX(0),
900066dc:	e9c4 66db 	strd	r6, r6, [r4, #876]	@ 0x36c
900066e0:	f8a4 737c 	strh.w	r7, [r4, #892]	@ 0x37c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900066e4:	f8c4 9386 	str.w	r9, [r4, #902]	@ 0x386
        : color(col)
900066e8:	f8c4 6380 	str.w	r6, [r4, #896]	@ 0x380
900066ec:	f8a4 6384 	strh.w	r6, [r4, #900]	@ 0x384
              text(0)
900066f0:	f8c4 6394 	str.w	r6, [r4, #916]	@ 0x394
900066f4:	930f      	str	r3, [sp, #60]	@ 0x3c
900066f6:	9110      	str	r1, [sp, #64]	@ 0x40
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900066f8:	e9c4 67e3 	strd	r6, r7, [r4, #908]	@ 0x38c
900066fc:	f011 fe7a 	bl	900183f4 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006700:	4b4d      	ldr	r3, [pc, #308]	@ (90006838 <_ZN15Screen1ViewBaseC1Ev+0x3ec>)
        : TextAreaWithWildcardBase(), wc1(0)
90006702:	4a4e      	ldr	r2, [pc, #312]	@ (9000683c <_ZN15Screen1ViewBaseC1Ev+0x3f0>)
90006704:	a91a      	add	r1, sp, #104	@ 0x68
          touchable(false),
90006706:	f8a4 53f8 	strh.w	r5, [r4, #1016]	@ 0x3f8
9000670a:	f8c4 33d4 	str.w	r3, [r4, #980]	@ 0x3d4
9000670e:	f8a4 a400 	strh.w	sl, [r4, #1024]	@ 0x400
90006712:	f8c4 940a 	str.w	r9, [r4, #1034]	@ 0x40a
90006716:	f8a4 5440 	strh.w	r5, [r4, #1088]	@ 0x440
9000671a:	f8a4 a448 	strh.w	sl, [r4, #1096]	@ 0x448
9000671e:	f8c4 9452 	str.w	r9, [r4, #1106]	@ 0x452
90006722:	f8c4 b3fc 	str.w	fp, [r4, #1020]	@ 0x3fc
        : color(col)
90006726:	f8c4 6404 	str.w	r6, [r4, #1028]	@ 0x404
9000672a:	f8a4 6408 	strh.w	r6, [r4, #1032]	@ 0x408
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000672e:	f8c4 6410 	str.w	r6, [r4, #1040]	@ 0x410
90006732:	f8c4 7414 	str.w	r7, [r4, #1044]	@ 0x414
              text(0)
90006736:	f8c4 6418 	str.w	r6, [r4, #1048]	@ 0x418
        : x(0), y(0), width(0), height(0)
9000673a:	f8c4 6420 	str.w	r6, [r4, #1056]	@ 0x420
9000673e:	f8c4 6424 	str.w	r6, [r4, #1060]	@ 0x424
90006742:	f8c4 6428 	str.w	r6, [r4, #1064]	@ 0x428
90006746:	f8c4 642c 	str.w	r6, [r4, #1068]	@ 0x42c
          parent(0),
9000674a:	f8c4 6430 	str.w	r6, [r4, #1072]	@ 0x430
          nextSibling(0),
9000674e:	f8c4 6434 	str.w	r6, [r4, #1076]	@ 0x434
          nextDrawChainElement(0),
90006752:	f8c4 6438 	str.w	r6, [r4, #1080]	@ 0x438
          cachedAbsX(0),
90006756:	f8c4 643c 	str.w	r6, [r4, #1084]	@ 0x43c
9000675a:	f8c4 b444 	str.w	fp, [r4, #1092]	@ 0x444
        : color(col)
9000675e:	f8c4 644c 	str.w	r6, [r4, #1100]	@ 0x44c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006762:	f8a4 6450 	strh.w	r6, [r4, #1104]	@ 0x450
        : x(0), y(0), width(0), height(0)
90006766:	e9c4 66f6 	strd	r6, r6, [r4, #984]	@ 0x3d8
9000676a:	e9c4 66f8 	strd	r6, r6, [r4, #992]	@ 0x3e0
          nextSibling(0),
9000676e:	e9c4 66fa 	strd	r6, r6, [r4, #1000]	@ 0x3e8
          cachedAbsX(0),
90006772:	e9c4 66fc 	strd	r6, r6, [r4, #1008]	@ 0x3f0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006776:	f8c4 6458 	str.w	r6, [r4, #1112]	@ 0x458
9000677a:	f8c4 241c 	str.w	r2, [r4, #1052]	@ 0x41c
          touchable(false),
9000677e:	f8a4 548c 	strh.w	r5, [r4, #1164]	@ 0x48c
90006782:	f8c4 3468 	str.w	r3, [r4, #1128]	@ 0x468
90006786:	f8a4 a494 	strh.w	sl, [r4, #1172]	@ 0x494
9000678a:	f8c4 949e 	str.w	r9, [r4, #1182]	@ 0x49e
9000678e:	f8a4 54d4 	strh.w	r5, [r4, #1236]	@ 0x4d4
90006792:	f8c4 34b0 	str.w	r3, [r4, #1200]	@ 0x4b0
90006796:	f8c4 745c 	str.w	r7, [r4, #1116]	@ 0x45c
              text(0)
9000679a:	f8c4 6460 	str.w	r6, [r4, #1120]	@ 0x460
9000679e:	f8c4 6464 	str.w	r6, [r4, #1124]	@ 0x464
        : x(0), y(0), width(0), height(0)
900067a2:	f8c4 646c 	str.w	r6, [r4, #1132]	@ 0x46c
900067a6:	f8c4 6470 	str.w	r6, [r4, #1136]	@ 0x470
900067aa:	f8c4 6474 	str.w	r6, [r4, #1140]	@ 0x474
900067ae:	f8c4 6478 	str.w	r6, [r4, #1144]	@ 0x478
          parent(0),
900067b2:	f8c4 647c 	str.w	r6, [r4, #1148]	@ 0x47c
          nextSibling(0),
900067b6:	f8c4 6480 	str.w	r6, [r4, #1152]	@ 0x480
          nextDrawChainElement(0),
900067ba:	f8c4 6484 	str.w	r6, [r4, #1156]	@ 0x484
          cachedAbsX(0),
900067be:	f8c4 6488 	str.w	r6, [r4, #1160]	@ 0x488
900067c2:	f8c4 b490 	str.w	fp, [r4, #1168]	@ 0x490
        : color(col)
900067c6:	f8c4 6498 	str.w	r6, [r4, #1176]	@ 0x498
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900067ca:	f8a4 649c 	strh.w	r6, [r4, #1180]	@ 0x49c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900067ce:	f8c4 64a4 	str.w	r6, [r4, #1188]	@ 0x4a4
900067d2:	f8c4 74a8 	str.w	r7, [r4, #1192]	@ 0x4a8
              text(0)
900067d6:	f8c4 64ac 	str.w	r6, [r4, #1196]	@ 0x4ac
        : x(0), y(0), width(0), height(0)
900067da:	f8c4 64b4 	str.w	r6, [r4, #1204]	@ 0x4b4
900067de:	f8c4 64b8 	str.w	r6, [r4, #1208]	@ 0x4b8
900067e2:	f8c4 64bc 	str.w	r6, [r4, #1212]	@ 0x4bc
900067e6:	f8c4 64c0 	str.w	r6, [r4, #1216]	@ 0x4c0
          parent(0),
900067ea:	f8c4 64c4 	str.w	r6, [r4, #1220]	@ 0x4c4
          nextSibling(0),
900067ee:	f8c4 64c8 	str.w	r6, [r4, #1224]	@ 0x4c8
          nextDrawChainElement(0),
900067f2:	f8c4 64cc 	str.w	r6, [r4, #1228]	@ 0x4cc
          cachedAbsX(0),
900067f6:	f8c4 64d0 	str.w	r6, [r4, #1232]	@ 0x4d0
900067fa:	f8c4 b4d8 	str.w	fp, [r4, #1240]	@ 0x4d8
900067fe:	f8c4 24f8 	str.w	r2, [r4, #1272]	@ 0x4f8
90006802:	f8a4 a4dc 	strh.w	sl, [r4, #1244]	@ 0x4dc
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006806:	f8c4 94e6 	str.w	r9, [r4, #1254]	@ 0x4e6
          touchable(false),
9000680a:	f8a4 551c 	strh.w	r5, [r4, #1308]	@ 0x51c
9000680e:	f8a4 a524 	strh.w	sl, [r4, #1316]	@ 0x524
90006812:	f8c4 952e 	str.w	r9, [r4, #1326]	@ 0x52e
        : color(col)
90006816:	f8c4 64e0 	str.w	r6, [r4, #1248]	@ 0x4e0
9000681a:	f8a4 64e4 	strh.w	r6, [r4, #1252]	@ 0x4e4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000681e:	f8c4 64ec 	str.w	r6, [r4, #1260]	@ 0x4ec
90006822:	f8c4 74f0 	str.w	r7, [r4, #1264]	@ 0x4f0
90006826:	e00d      	b.n	90006844 <_ZN15Screen1ViewBaseC1Ev+0x3f8>
90006828:	9002eff8 	.word	0x9002eff8
9000682c:	90030394 	.word	0x90030394
90006830:	900305c4 	.word	0x900305c4
90006834:	900304e4 	.word	0x900304e4
90006838:	90030304 	.word	0x90030304
9000683c:	9002eec0 	.word	0x9002eec0
90006840:	9002e6fc 	.word	0x9002e6fc
              text(0)
90006844:	f8c4 64f4 	str.w	r6, [r4, #1268]	@ 0x4f4
        : x(0), y(0), width(0), height(0)
90006848:	f8c4 64fc 	str.w	r6, [r4, #1276]	@ 0x4fc
9000684c:	f8c4 6500 	str.w	r6, [r4, #1280]	@ 0x500
90006850:	f8c4 6504 	str.w	r6, [r4, #1284]	@ 0x504
90006854:	f8c4 6508 	str.w	r6, [r4, #1288]	@ 0x508
          parent(0),
90006858:	f8c4 650c 	str.w	r6, [r4, #1292]	@ 0x50c
          nextSibling(0),
9000685c:	f8c4 6510 	str.w	r6, [r4, #1296]	@ 0x510
          nextDrawChainElement(0),
90006860:	f8c4 6514 	str.w	r6, [r4, #1300]	@ 0x514
          cachedAbsX(0),
90006864:	f8c4 6518 	str.w	r6, [r4, #1304]	@ 0x518
90006868:	f8c4 b520 	str.w	fp, [r4, #1312]	@ 0x520
        : color(col)
9000686c:	f8c4 6528 	str.w	r6, [r4, #1320]	@ 0x528
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006870:	f8a4 652c 	strh.w	r6, [r4, #1324]	@ 0x52c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006874:	f8c4 6534 	str.w	r6, [r4, #1332]	@ 0x534
90006878:	f8c4 7538 	str.w	r7, [r4, #1336]	@ 0x538
              text(0)
9000687c:	f8c4 653c 	str.w	r6, [r4, #1340]	@ 0x53c
90006880:	f8c4 6540 	str.w	r6, [r4, #1344]	@ 0x540
        : x(0), y(0), width(0), height(0)
90006884:	f8c4 6548 	str.w	r6, [r4, #1352]	@ 0x548
90006888:	f8c4 654c 	str.w	r6, [r4, #1356]	@ 0x54c
9000688c:	f8c4 6550 	str.w	r6, [r4, #1360]	@ 0x550
90006890:	f8c4 6554 	str.w	r6, [r4, #1364]	@ 0x554
          parent(0),
90006894:	f8c4 6558 	str.w	r6, [r4, #1368]	@ 0x558
          nextSibling(0),
90006898:	f8c4 655c 	str.w	r6, [r4, #1372]	@ 0x55c
          nextDrawChainElement(0),
9000689c:	f8c4 6560 	str.w	r6, [r4, #1376]	@ 0x560
900068a0:	f8c4 2544 	str.w	r2, [r4, #1348]	@ 0x544
          touchable(false),
900068a4:	f8a4 5568 	strh.w	r5, [r4, #1384]	@ 0x568
900068a8:	f8a4 a570 	strh.w	sl, [r4, #1392]	@ 0x570
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900068ac:	f8c4 957a 	str.w	r9, [r4, #1402]	@ 0x57a
900068b0:	f8a4 55b4 	strh.w	r5, [r4, #1460]	@ 0x5b4
900068b4:	f8c4 3590 	str.w	r3, [r4, #1424]	@ 0x590
900068b8:	f8a4 a5bc 	strh.w	sl, [r4, #1468]	@ 0x5bc
900068bc:	f8c4 95c6 	str.w	r9, [r4, #1478]	@ 0x5c6
          cachedAbsX(0),
900068c0:	f8c4 6564 	str.w	r6, [r4, #1380]	@ 0x564
900068c4:	f8c4 b56c 	str.w	fp, [r4, #1388]	@ 0x56c
        : color(col)
900068c8:	f8c4 6574 	str.w	r6, [r4, #1396]	@ 0x574
900068cc:	f8a4 6578 	strh.w	r6, [r4, #1400]	@ 0x578
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900068d0:	f8c4 6580 	str.w	r6, [r4, #1408]	@ 0x580
900068d4:	f8c4 7584 	str.w	r7, [r4, #1412]	@ 0x584
              text(0)
900068d8:	f8c4 6588 	str.w	r6, [r4, #1416]	@ 0x588
900068dc:	f8c4 658c 	str.w	r6, [r4, #1420]	@ 0x58c
        : x(0), y(0), width(0), height(0)
900068e0:	f8c4 6594 	str.w	r6, [r4, #1428]	@ 0x594
900068e4:	f8c4 6598 	str.w	r6, [r4, #1432]	@ 0x598
900068e8:	f8c4 659c 	str.w	r6, [r4, #1436]	@ 0x59c
900068ec:	f8c4 65a0 	str.w	r6, [r4, #1440]	@ 0x5a0
          parent(0),
900068f0:	f8c4 65a4 	str.w	r6, [r4, #1444]	@ 0x5a4
          nextSibling(0),
900068f4:	f8c4 65a8 	str.w	r6, [r4, #1448]	@ 0x5a8
          nextDrawChainElement(0),
900068f8:	f8c4 65ac 	str.w	r6, [r4, #1452]	@ 0x5ac
          cachedAbsX(0),
900068fc:	f8c4 65b0 	str.w	r6, [r4, #1456]	@ 0x5b0
90006900:	f8c4 b5b8 	str.w	fp, [r4, #1464]	@ 0x5b8
        : color(col)
90006904:	f8c4 65c0 	str.w	r6, [r4, #1472]	@ 0x5c0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006908:	f8a4 65c4 	strh.w	r6, [r4, #1476]	@ 0x5c4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000690c:	f8c4 65cc 	str.w	r6, [r4, #1484]	@ 0x5cc
90006910:	f8c4 75d0 	str.w	r7, [r4, #1488]	@ 0x5d0
              text(0)
90006914:	f8c4 65d4 	str.w	r6, [r4, #1492]	@ 0x5d4
        : x(0), y(0), width(0), height(0)
90006918:	f8c4 65dc 	str.w	r6, [r4, #1500]	@ 0x5dc
9000691c:	f8c4 65e0 	str.w	r6, [r4, #1504]	@ 0x5e0
90006920:	f8c4 65e4 	str.w	r6, [r4, #1508]	@ 0x5e4
          touchable(false),
90006924:	f8a4 55fc 	strh.w	r5, [r4, #1532]	@ 0x5fc
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006928:	f8c4 35d8 	str.w	r3, [r4, #1496]	@ 0x5d8
9000692c:	f8a4 a604 	strh.w	sl, [r4, #1540]	@ 0x604
90006930:	f8c4 960e 	str.w	r9, [r4, #1550]	@ 0x60e
90006934:	f8a4 5644 	strh.w	r5, [r4, #1604]	@ 0x644
90006938:	f8c4 3620 	str.w	r3, [r4, #1568]	@ 0x620
9000693c:	f8a4 a64c 	strh.w	sl, [r4, #1612]	@ 0x64c
90006940:	f8c4 9656 	str.w	r9, [r4, #1622]	@ 0x656
90006944:	f8c4 65e8 	str.w	r6, [r4, #1512]	@ 0x5e8
          parent(0),
90006948:	f8c4 65ec 	str.w	r6, [r4, #1516]	@ 0x5ec
          nextSibling(0),
9000694c:	f8c4 65f0 	str.w	r6, [r4, #1520]	@ 0x5f0
          nextDrawChainElement(0),
90006950:	f8c4 65f4 	str.w	r6, [r4, #1524]	@ 0x5f4
          cachedAbsX(0),
90006954:	f8c4 65f8 	str.w	r6, [r4, #1528]	@ 0x5f8
90006958:	f8c4 b600 	str.w	fp, [r4, #1536]	@ 0x600
        : color(col)
9000695c:	f8c4 6608 	str.w	r6, [r4, #1544]	@ 0x608
90006960:	f8a4 660c 	strh.w	r6, [r4, #1548]	@ 0x60c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006964:	f8c4 6614 	str.w	r6, [r4, #1556]	@ 0x614
90006968:	f8c4 7618 	str.w	r7, [r4, #1560]	@ 0x618
              text(0)
9000696c:	f8c4 661c 	str.w	r6, [r4, #1564]	@ 0x61c
        : x(0), y(0), width(0), height(0)
90006970:	f8c4 6624 	str.w	r6, [r4, #1572]	@ 0x624
90006974:	f8c4 6628 	str.w	r6, [r4, #1576]	@ 0x628
90006978:	f8c4 662c 	str.w	r6, [r4, #1580]	@ 0x62c
9000697c:	f8c4 6630 	str.w	r6, [r4, #1584]	@ 0x630
          parent(0),
90006980:	f8c4 6634 	str.w	r6, [r4, #1588]	@ 0x634
          nextSibling(0),
90006984:	f8c4 6638 	str.w	r6, [r4, #1592]	@ 0x638
          nextDrawChainElement(0),
90006988:	f8c4 663c 	str.w	r6, [r4, #1596]	@ 0x63c
          cachedAbsX(0),
9000698c:	f8c4 6640 	str.w	r6, [r4, #1600]	@ 0x640
90006990:	f8c4 b648 	str.w	fp, [r4, #1608]	@ 0x648
        : color(col)
90006994:	f8c4 6650 	str.w	r6, [r4, #1616]	@ 0x650
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006998:	f8a4 6654 	strh.w	r6, [r4, #1620]	@ 0x654
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000699c:	f8c4 665c 	str.w	r6, [r4, #1628]	@ 0x65c
900069a0:	f8c4 7660 	str.w	r7, [r4, #1632]	@ 0x660
              text(0)
900069a4:	f8c4 6664 	str.w	r6, [r4, #1636]	@ 0x664
          touchable(false),
900069a8:	f8a4 568c 	strh.w	r5, [r4, #1676]	@ 0x68c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900069ac:	f8c4 3668 	str.w	r3, [r4, #1640]	@ 0x668
900069b0:	f8a4 a694 	strh.w	sl, [r4, #1684]	@ 0x694
900069b4:	f8c4 969e 	str.w	r9, [r4, #1694]	@ 0x69e
900069b8:	f8a4 56d4 	strh.w	r5, [r4, #1748]	@ 0x6d4
900069bc:	f8c4 36b0 	str.w	r3, [r4, #1712]	@ 0x6b0
900069c0:	f8a4 a6dc 	strh.w	sl, [r4, #1756]	@ 0x6dc
        : x(0), y(0), width(0), height(0)
900069c4:	f8c4 666c 	str.w	r6, [r4, #1644]	@ 0x66c
900069c8:	f8c4 6670 	str.w	r6, [r4, #1648]	@ 0x670
900069cc:	f8c4 6674 	str.w	r6, [r4, #1652]	@ 0x674
900069d0:	f8c4 6678 	str.w	r6, [r4, #1656]	@ 0x678
          parent(0),
900069d4:	f8c4 667c 	str.w	r6, [r4, #1660]	@ 0x67c
          nextSibling(0),
900069d8:	f8c4 6680 	str.w	r6, [r4, #1664]	@ 0x680
          nextDrawChainElement(0),
900069dc:	f8c4 6684 	str.w	r6, [r4, #1668]	@ 0x684
          cachedAbsX(0),
900069e0:	f8c4 6688 	str.w	r6, [r4, #1672]	@ 0x688
900069e4:	f8c4 b690 	str.w	fp, [r4, #1680]	@ 0x690
        : color(col)
900069e8:	f8c4 6698 	str.w	r6, [r4, #1688]	@ 0x698
900069ec:	f8a4 669c 	strh.w	r6, [r4, #1692]	@ 0x69c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900069f0:	f8c4 66a4 	str.w	r6, [r4, #1700]	@ 0x6a4
900069f4:	f8c4 76a8 	str.w	r7, [r4, #1704]	@ 0x6a8
              text(0)
900069f8:	f8c4 66ac 	str.w	r6, [r4, #1708]	@ 0x6ac
        : x(0), y(0), width(0), height(0)
900069fc:	f8c4 66b4 	str.w	r6, [r4, #1716]	@ 0x6b4
90006a00:	f8c4 66b8 	str.w	r6, [r4, #1720]	@ 0x6b8
90006a04:	f8c4 66bc 	str.w	r6, [r4, #1724]	@ 0x6bc
90006a08:	f8c4 66c0 	str.w	r6, [r4, #1728]	@ 0x6c0
          parent(0),
90006a0c:	f8c4 66c4 	str.w	r6, [r4, #1732]	@ 0x6c4
          nextSibling(0),
90006a10:	f8c4 66c8 	str.w	r6, [r4, #1736]	@ 0x6c8
          nextDrawChainElement(0),
90006a14:	f8c4 66cc 	str.w	r6, [r4, #1740]	@ 0x6cc
          cachedAbsX(0),
90006a18:	f8c4 66d0 	str.w	r6, [r4, #1744]	@ 0x6d0
90006a1c:	f8c4 b6d8 	str.w	fp, [r4, #1752]	@ 0x6d8
        : color(col)
90006a20:	f8c4 66e0 	str.w	r6, [r4, #1760]	@ 0x6e0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006a24:	f8a4 66e4 	strh.w	r6, [r4, #1764]	@ 0x6e4
90006a28:	f8c4 96e6 	str.w	r9, [r4, #1766]	@ 0x6e6
90006a2c:	f8a4 a724 	strh.w	sl, [r4, #1828]	@ 0x724
          touchable(false),
90006a30:	f8a4 571c 	strh.w	r5, [r4, #1820]	@ 0x71c
90006a34:	f8c4 36f8 	str.w	r3, [r4, #1784]	@ 0x6f8
90006a38:	f8c4 972e 	str.w	r9, [r4, #1838]	@ 0x72e
90006a3c:	f8a4 5764 	strh.w	r5, [r4, #1892]	@ 0x764
90006a40:	f8c4 3740 	str.w	r3, [r4, #1856]	@ 0x740
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006a44:	f8c4 66ec 	str.w	r6, [r4, #1772]	@ 0x6ec
90006a48:	f8c4 76f0 	str.w	r7, [r4, #1776]	@ 0x6f0
              text(0)
90006a4c:	f8c4 66f4 	str.w	r6, [r4, #1780]	@ 0x6f4
        : x(0), y(0), width(0), height(0)
90006a50:	f8c4 66fc 	str.w	r6, [r4, #1788]	@ 0x6fc
90006a54:	f8c4 6700 	str.w	r6, [r4, #1792]	@ 0x700
90006a58:	f8c4 6704 	str.w	r6, [r4, #1796]	@ 0x704
90006a5c:	f8c4 6708 	str.w	r6, [r4, #1800]	@ 0x708
          parent(0),
90006a60:	f8c4 670c 	str.w	r6, [r4, #1804]	@ 0x70c
          nextSibling(0),
90006a64:	f8c4 6710 	str.w	r6, [r4, #1808]	@ 0x710
          nextDrawChainElement(0),
90006a68:	f8c4 6714 	str.w	r6, [r4, #1812]	@ 0x714
          cachedAbsX(0),
90006a6c:	f8c4 6718 	str.w	r6, [r4, #1816]	@ 0x718
90006a70:	f8c4 b720 	str.w	fp, [r4, #1824]	@ 0x720
        : color(col)
90006a74:	f8c4 6728 	str.w	r6, [r4, #1832]	@ 0x728
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006a78:	f8a4 672c 	strh.w	r6, [r4, #1836]	@ 0x72c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006a7c:	f8c4 6734 	str.w	r6, [r4, #1844]	@ 0x734
90006a80:	f8c4 7738 	str.w	r7, [r4, #1848]	@ 0x738
              text(0)
90006a84:	f8c4 673c 	str.w	r6, [r4, #1852]	@ 0x73c
        : x(0), y(0), width(0), height(0)
90006a88:	f8c4 6744 	str.w	r6, [r4, #1860]	@ 0x744
90006a8c:	f8c4 6748 	str.w	r6, [r4, #1864]	@ 0x748
90006a90:	f8c4 674c 	str.w	r6, [r4, #1868]	@ 0x74c
90006a94:	f8c4 6750 	str.w	r6, [r4, #1872]	@ 0x750
          parent(0),
90006a98:	f8c4 6754 	str.w	r6, [r4, #1876]	@ 0x754
          nextSibling(0),
90006a9c:	f8c4 6758 	str.w	r6, [r4, #1880]	@ 0x758
          nextDrawChainElement(0),
90006aa0:	f8c4 675c 	str.w	r6, [r4, #1884]	@ 0x75c
          cachedAbsX(0),
90006aa4:	f8c4 6760 	str.w	r6, [r4, #1888]	@ 0x760
90006aa8:	f8c4 b768 	str.w	fp, [r4, #1896]	@ 0x768
90006aac:	f8a4 776c 	strh.w	r7, [r4, #1900]	@ 0x76c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006ab0:	f8c4 9776 	str.w	r9, [r4, #1910]	@ 0x776
          touchable(false),
90006ab4:	f8a4 57ac 	strh.w	r5, [r4, #1964]	@ 0x7ac
90006ab8:	f8c4 3788 	str.w	r3, [r4, #1928]	@ 0x788
90006abc:	f8c4 97be 	str.w	r9, [r4, #1982]	@ 0x7be
        : color(col)
90006ac0:	f8c4 6770 	str.w	r6, [r4, #1904]	@ 0x770
90006ac4:	f8a4 6774 	strh.w	r6, [r4, #1908]	@ 0x774
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006ac8:	f8c4 677c 	str.w	r6, [r4, #1916]	@ 0x77c
90006acc:	f8c4 7780 	str.w	r7, [r4, #1920]	@ 0x780
              text(0)
90006ad0:	f8c4 6784 	str.w	r6, [r4, #1924]	@ 0x784
        : x(0), y(0), width(0), height(0)
90006ad4:	f8c4 678c 	str.w	r6, [r4, #1932]	@ 0x78c
90006ad8:	f8c4 6790 	str.w	r6, [r4, #1936]	@ 0x790
90006adc:	f8c4 6794 	str.w	r6, [r4, #1940]	@ 0x794
90006ae0:	f8c4 6798 	str.w	r6, [r4, #1944]	@ 0x798
          parent(0),
90006ae4:	f8c4 679c 	str.w	r6, [r4, #1948]	@ 0x79c
          nextSibling(0),
90006ae8:	f8c4 67a0 	str.w	r6, [r4, #1952]	@ 0x7a0
          nextDrawChainElement(0),
90006aec:	f8c4 67a4 	str.w	r6, [r4, #1956]	@ 0x7a4
          cachedAbsX(0),
90006af0:	f8c4 67a8 	str.w	r6, [r4, #1960]	@ 0x7a8
90006af4:	f8c4 b7b0 	str.w	fp, [r4, #1968]	@ 0x7b0
90006af8:	f8a4 77b4 	strh.w	r7, [r4, #1972]	@ 0x7b4
        : color(col)
90006afc:	f8c4 67b8 	str.w	r6, [r4, #1976]	@ 0x7b8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006b00:	f8a4 67bc 	strh.w	r6, [r4, #1980]	@ 0x7bc
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006b04:	f8c4 67c4 	str.w	r6, [r4, #1988]	@ 0x7c4
90006b08:	f8c4 77c8 	str.w	r7, [r4, #1992]	@ 0x7c8
              text(0)
90006b0c:	f8c4 67cc 	str.w	r6, [r4, #1996]	@ 0x7cc
        : x(0), y(0), width(0), height(0)
90006b10:	f8c4 67d4 	str.w	r6, [r4, #2004]	@ 0x7d4
90006b14:	f8c4 67d8 	str.w	r6, [r4, #2008]	@ 0x7d8
90006b18:	f8c4 67dc 	str.w	r6, [r4, #2012]	@ 0x7dc
90006b1c:	f8c4 67e0 	str.w	r6, [r4, #2016]	@ 0x7e0
          parent(0),
90006b20:	f8c4 67e4 	str.w	r6, [r4, #2020]	@ 0x7e4
          nextSibling(0),
90006b24:	f8c4 67e8 	str.w	r6, [r4, #2024]	@ 0x7e8
          nextDrawChainElement(0),
90006b28:	f8c4 67ec 	str.w	r6, [r4, #2028]	@ 0x7ec
          cachedAbsX(0),
90006b2c:	f8c4 67f0 	str.w	r6, [r4, #2032]	@ 0x7f0
          touchable(false),
90006b30:	f8a4 57f4 	strh.w	r5, [r4, #2036]	@ 0x7f4
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006b34:	f8c4 37d0 	str.w	r3, [r4, #2000]	@ 0x7d0
        : TextAreaWithWildcardBase(), wc1(0), wc2(0)
90006b38:	4bf2      	ldr	r3, [pc, #968]	@ (90006f04 <_ZN15Screen1ViewBaseC1Ev+0xab8>)
        : TextAreaWithWildcardBase(), wc1(0)
90006b3a:	f8c4 2818 	str.w	r2, [r4, #2072]	@ 0x818
90006b3e:	f8c4 9806 	str.w	r9, [r4, #2054]	@ 0x806
90006b42:	f8a4 583c 	strh.w	r5, [r4, #2108]	@ 0x83c
90006b46:	f8c4 984e 	str.w	r9, [r4, #2126]	@ 0x84e
90006b4a:	f8c4 b7f8 	str.w	fp, [r4, #2040]	@ 0x7f8
90006b4e:	f8a4 77fc 	strh.w	r7, [r4, #2044]	@ 0x7fc
        : color(col)
90006b52:	f8c4 6800 	str.w	r6, [r4, #2048]	@ 0x800
90006b56:	f8a4 6804 	strh.w	r6, [r4, #2052]	@ 0x804
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006b5a:	f8c4 680c 	str.w	r6, [r4, #2060]	@ 0x80c
90006b5e:	f8c4 7810 	str.w	r7, [r4, #2064]	@ 0x810
              text(0)
90006b62:	f8c4 6814 	str.w	r6, [r4, #2068]	@ 0x814
        : x(0), y(0), width(0), height(0)
90006b66:	f8c4 681c 	str.w	r6, [r4, #2076]	@ 0x81c
90006b6a:	f8c4 6820 	str.w	r6, [r4, #2080]	@ 0x820
90006b6e:	f8c4 6824 	str.w	r6, [r4, #2084]	@ 0x824
90006b72:	f8c4 6828 	str.w	r6, [r4, #2088]	@ 0x828
          parent(0),
90006b76:	f8c4 682c 	str.w	r6, [r4, #2092]	@ 0x82c
          nextSibling(0),
90006b7a:	f8c4 6830 	str.w	r6, [r4, #2096]	@ 0x830
          nextDrawChainElement(0),
90006b7e:	f8c4 6834 	str.w	r6, [r4, #2100]	@ 0x834
          cachedAbsX(0),
90006b82:	f8c4 6838 	str.w	r6, [r4, #2104]	@ 0x838
90006b86:	f8c4 b840 	str.w	fp, [r4, #2112]	@ 0x840
90006b8a:	f8a4 7844 	strh.w	r7, [r4, #2116]	@ 0x844
        : color(col)
90006b8e:	f8c4 6848 	str.w	r6, [r4, #2120]	@ 0x848
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006b92:	f8a4 684c 	strh.w	r6, [r4, #2124]	@ 0x84c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006b96:	f8c4 6854 	str.w	r6, [r4, #2132]	@ 0x854
90006b9a:	f8c4 7858 	str.w	r7, [r4, #2136]	@ 0x858
              text(0)
90006b9e:	f8c4 685c 	str.w	r6, [r4, #2140]	@ 0x85c
90006ba2:	f8c4 6860 	str.w	r6, [r4, #2144]	@ 0x860
        : x(0), y(0), width(0), height(0)
90006ba6:	f8c4 6868 	str.w	r6, [r4, #2152]	@ 0x868
90006baa:	f8c4 686c 	str.w	r6, [r4, #2156]	@ 0x86c
90006bae:	f8c4 6870 	str.w	r6, [r4, #2160]	@ 0x870
90006bb2:	f8c4 6874 	str.w	r6, [r4, #2164]	@ 0x874
          parent(0),
90006bb6:	f8c4 6878 	str.w	r6, [r4, #2168]	@ 0x878
90006bba:	f8c4 2864 	str.w	r2, [r4, #2148]	@ 0x864
90006bbe:	f8c4 28b0 	str.w	r2, [r4, #2224]	@ 0x8b0
          touchable(false),
90006bc2:	f8a4 5888 	strh.w	r5, [r4, #2184]	@ 0x888
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006bc6:	f8c4 989a 	str.w	r9, [r4, #2202]	@ 0x89a
90006bca:	f8a4 58d4 	strh.w	r5, [r4, #2260]	@ 0x8d4
90006bce:	f8c4 98e6 	str.w	r9, [r4, #2278]	@ 0x8e6
          nextSibling(0),
90006bd2:	f8c4 687c 	str.w	r6, [r4, #2172]	@ 0x87c
          nextDrawChainElement(0),
90006bd6:	f8c4 6880 	str.w	r6, [r4, #2176]	@ 0x880
          cachedAbsX(0),
90006bda:	f8c4 6884 	str.w	r6, [r4, #2180]	@ 0x884
90006bde:	f8c4 b88c 	str.w	fp, [r4, #2188]	@ 0x88c
90006be2:	f8a4 7890 	strh.w	r7, [r4, #2192]	@ 0x890
        : color(col)
90006be6:	f8c4 6894 	str.w	r6, [r4, #2196]	@ 0x894
90006bea:	f8a4 6898 	strh.w	r6, [r4, #2200]	@ 0x898
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006bee:	f8c4 68a0 	str.w	r6, [r4, #2208]	@ 0x8a0
90006bf2:	f8c4 78a4 	str.w	r7, [r4, #2212]	@ 0x8a4
              text(0)
90006bf6:	f8c4 68a8 	str.w	r6, [r4, #2216]	@ 0x8a8
90006bfa:	f8c4 68ac 	str.w	r6, [r4, #2220]	@ 0x8ac
        : x(0), y(0), width(0), height(0)
90006bfe:	f8c4 68b4 	str.w	r6, [r4, #2228]	@ 0x8b4
90006c02:	f8c4 68b8 	str.w	r6, [r4, #2232]	@ 0x8b8
90006c06:	f8c4 68bc 	str.w	r6, [r4, #2236]	@ 0x8bc
90006c0a:	f8c4 68c0 	str.w	r6, [r4, #2240]	@ 0x8c0
          parent(0),
90006c0e:	f8c4 68c4 	str.w	r6, [r4, #2244]	@ 0x8c4
          nextSibling(0),
90006c12:	f8c4 68c8 	str.w	r6, [r4, #2248]	@ 0x8c8
          nextDrawChainElement(0),
90006c16:	f8c4 68cc 	str.w	r6, [r4, #2252]	@ 0x8cc
          cachedAbsX(0),
90006c1a:	f8c4 68d0 	str.w	r6, [r4, #2256]	@ 0x8d0
90006c1e:	f8c4 b8d8 	str.w	fp, [r4, #2264]	@ 0x8d8
90006c22:	f8a4 78dc 	strh.w	r7, [r4, #2268]	@ 0x8dc
        : color(col)
90006c26:	f8c4 68e0 	str.w	r6, [r4, #2272]	@ 0x8e0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006c2a:	f8a4 68e4 	strh.w	r6, [r4, #2276]	@ 0x8e4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006c2e:	f8c4 68ec 	str.w	r6, [r4, #2284]	@ 0x8ec
90006c32:	f8c4 78f0 	str.w	r7, [r4, #2288]	@ 0x8f0
              text(0)
90006c36:	f8c4 68f4 	str.w	r6, [r4, #2292]	@ 0x8f4
90006c3a:	f8c4 68f8 	str.w	r6, [r4, #2296]	@ 0x8f8
90006c3e:	f8c4 28fc 	str.w	r2, [r4, #2300]	@ 0x8fc
          touchable(false),
90006c42:	f8a4 5920 	strh.w	r5, [r4, #2336]	@ 0x920
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006c46:	f8c4 9932 	str.w	r9, [r4, #2354]	@ 0x932
90006c4a:	f8a4 596c 	strh.w	r5, [r4, #2412]	@ 0x96c
        : x(0), y(0), width(0), height(0)
90006c4e:	f8c4 6900 	str.w	r6, [r4, #2304]	@ 0x900
90006c52:	f8c4 6904 	str.w	r6, [r4, #2308]	@ 0x904
90006c56:	f8c4 6908 	str.w	r6, [r4, #2312]	@ 0x908
90006c5a:	f8c4 690c 	str.w	r6, [r4, #2316]	@ 0x90c
          parent(0),
90006c5e:	f8c4 6910 	str.w	r6, [r4, #2320]	@ 0x910
          nextSibling(0),
90006c62:	f8c4 6914 	str.w	r6, [r4, #2324]	@ 0x914
          nextDrawChainElement(0),
90006c66:	f8c4 6918 	str.w	r6, [r4, #2328]	@ 0x918
          cachedAbsX(0),
90006c6a:	f8c4 691c 	str.w	r6, [r4, #2332]	@ 0x91c
90006c6e:	f8c4 b924 	str.w	fp, [r4, #2340]	@ 0x924
90006c72:	f8a4 7928 	strh.w	r7, [r4, #2344]	@ 0x928
        : color(col)
90006c76:	f8c4 692c 	str.w	r6, [r4, #2348]	@ 0x92c
90006c7a:	f8a4 6930 	strh.w	r6, [r4, #2352]	@ 0x930
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006c7e:	f8c4 6938 	str.w	r6, [r4, #2360]	@ 0x938
90006c82:	f8c4 793c 	str.w	r7, [r4, #2364]	@ 0x93c
              text(0)
90006c86:	f8c4 6940 	str.w	r6, [r4, #2368]	@ 0x940
90006c8a:	f8c4 6944 	str.w	r6, [r4, #2372]	@ 0x944
        : x(0), y(0), width(0), height(0)
90006c8e:	f8c4 694c 	str.w	r6, [r4, #2380]	@ 0x94c
90006c92:	f8c4 6950 	str.w	r6, [r4, #2384]	@ 0x950
90006c96:	f8c4 6954 	str.w	r6, [r4, #2388]	@ 0x954
90006c9a:	f8c4 6958 	str.w	r6, [r4, #2392]	@ 0x958
          parent(0),
90006c9e:	f8c4 695c 	str.w	r6, [r4, #2396]	@ 0x95c
          nextSibling(0),
90006ca2:	f8c4 6960 	str.w	r6, [r4, #2400]	@ 0x960
          nextDrawChainElement(0),
90006ca6:	f8c4 6964 	str.w	r6, [r4, #2404]	@ 0x964
          cachedAbsX(0),
90006caa:	f8c4 6968 	str.w	r6, [r4, #2408]	@ 0x968
90006cae:	f8c4 b970 	str.w	fp, [r4, #2416]	@ 0x970
90006cb2:	f8a4 7974 	strh.w	r7, [r4, #2420]	@ 0x974
        : color(col)
90006cb6:	f8c4 6978 	str.w	r6, [r4, #2424]	@ 0x978
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006cba:	f8a4 697c 	strh.w	r6, [r4, #2428]	@ 0x97c
90006cbe:	f8c4 997e 	str.w	r9, [r4, #2430]	@ 0x97e
90006cc2:	f8c4 2948 	str.w	r2, [r4, #2376]	@ 0x948
90006cc6:	f8c4 2994 	str.w	r2, [r4, #2452]	@ 0x994
          touchable(false),
90006cca:	f8a4 59b8 	strh.w	r5, [r4, #2488]	@ 0x9b8
90006cce:	f8c4 99ca 	str.w	r9, [r4, #2506]	@ 0x9ca
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006cd2:	f8c4 6984 	str.w	r6, [r4, #2436]	@ 0x984
90006cd6:	f8c4 7988 	str.w	r7, [r4, #2440]	@ 0x988
              text(0)
90006cda:	f8c4 698c 	str.w	r6, [r4, #2444]	@ 0x98c
90006cde:	f8c4 6990 	str.w	r6, [r4, #2448]	@ 0x990
        : x(0), y(0), width(0), height(0)
90006ce2:	f8c4 6998 	str.w	r6, [r4, #2456]	@ 0x998
90006ce6:	f8c4 699c 	str.w	r6, [r4, #2460]	@ 0x99c
90006cea:	f8c4 69a0 	str.w	r6, [r4, #2464]	@ 0x9a0
90006cee:	f8c4 69a4 	str.w	r6, [r4, #2468]	@ 0x9a4
          parent(0),
90006cf2:	f8c4 69a8 	str.w	r6, [r4, #2472]	@ 0x9a8
          nextSibling(0),
90006cf6:	f8c4 69ac 	str.w	r6, [r4, #2476]	@ 0x9ac
          nextDrawChainElement(0),
90006cfa:	f8c4 69b0 	str.w	r6, [r4, #2480]	@ 0x9b0
          cachedAbsX(0),
90006cfe:	f8c4 69b4 	str.w	r6, [r4, #2484]	@ 0x9b4
90006d02:	f8c4 b9bc 	str.w	fp, [r4, #2492]	@ 0x9bc
90006d06:	f8a4 79c0 	strh.w	r7, [r4, #2496]	@ 0x9c0
        : color(col)
90006d0a:	f8c4 69c4 	str.w	r6, [r4, #2500]	@ 0x9c4
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006d0e:	f8a4 69c8 	strh.w	r6, [r4, #2504]	@ 0x9c8
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006d12:	f8c4 69d0 	str.w	r6, [r4, #2512]	@ 0x9d0
90006d16:	f8c4 79d4 	str.w	r7, [r4, #2516]	@ 0x9d4
              text(0)
90006d1a:	f8c4 69d8 	str.w	r6, [r4, #2520]	@ 0x9d8
90006d1e:	f8c4 69dc 	str.w	r6, [r4, #2524]	@ 0x9dc
        : x(0), y(0), width(0), height(0)
90006d22:	f8c4 69e4 	str.w	r6, [r4, #2532]	@ 0x9e4
90006d26:	f8c4 69e8 	str.w	r6, [r4, #2536]	@ 0x9e8
90006d2a:	f8c4 69ec 	str.w	r6, [r4, #2540]	@ 0x9ec
90006d2e:	f8c4 69f0 	str.w	r6, [r4, #2544]	@ 0x9f0
          parent(0),
90006d32:	f8c4 69f4 	str.w	r6, [r4, #2548]	@ 0x9f4
          nextSibling(0),
90006d36:	f8c4 69f8 	str.w	r6, [r4, #2552]	@ 0x9f8
          nextDrawChainElement(0),
90006d3a:	f8c4 69fc 	str.w	r6, [r4, #2556]	@ 0x9fc
          cachedAbsX(0),
90006d3e:	f8c4 6a00 	str.w	r6, [r4, #2560]	@ 0xa00
          touchable(false),
90006d42:	f8a4 5a04 	strh.w	r5, [r4, #2564]	@ 0xa04
90006d46:	f8c4 29e0 	str.w	r2, [r4, #2528]	@ 0x9e0
90006d4a:	f8c4 2a2c 	str.w	r2, [r4, #2604]	@ 0xa2c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006d4e:	f8c4 9a16 	str.w	r9, [r4, #2582]	@ 0xa16
90006d52:	f8a4 5a50 	strh.w	r5, [r4, #2640]	@ 0xa50
90006d56:	f8c4 9a62 	str.w	r9, [r4, #2658]	@ 0xa62
90006d5a:	f8c4 ba08 	str.w	fp, [r4, #2568]	@ 0xa08
90006d5e:	f8a4 7a0c 	strh.w	r7, [r4, #2572]	@ 0xa0c
        : color(col)
90006d62:	f8c4 6a10 	str.w	r6, [r4, #2576]	@ 0xa10
90006d66:	f8a4 6a14 	strh.w	r6, [r4, #2580]	@ 0xa14
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006d6a:	f8c4 6a1c 	str.w	r6, [r4, #2588]	@ 0xa1c
90006d6e:	f8c4 7a20 	str.w	r7, [r4, #2592]	@ 0xa20
              text(0)
90006d72:	f8c4 6a24 	str.w	r6, [r4, #2596]	@ 0xa24
90006d76:	f8c4 6a28 	str.w	r6, [r4, #2600]	@ 0xa28
        : x(0), y(0), width(0), height(0)
90006d7a:	f8c4 6a30 	str.w	r6, [r4, #2608]	@ 0xa30
90006d7e:	f8c4 6a34 	str.w	r6, [r4, #2612]	@ 0xa34
90006d82:	f8c4 6a38 	str.w	r6, [r4, #2616]	@ 0xa38
90006d86:	f8c4 6a3c 	str.w	r6, [r4, #2620]	@ 0xa3c
          parent(0),
90006d8a:	f8c4 6a40 	str.w	r6, [r4, #2624]	@ 0xa40
          nextSibling(0),
90006d8e:	f8c4 6a44 	str.w	r6, [r4, #2628]	@ 0xa44
          nextDrawChainElement(0),
90006d92:	f8c4 6a48 	str.w	r6, [r4, #2632]	@ 0xa48
          cachedAbsX(0),
90006d96:	f8c4 6a4c 	str.w	r6, [r4, #2636]	@ 0xa4c
90006d9a:	f8c4 ba54 	str.w	fp, [r4, #2644]	@ 0xa54
90006d9e:	f8a4 7a58 	strh.w	r7, [r4, #2648]	@ 0xa58
        : color(col)
90006da2:	f8c4 6a5c 	str.w	r6, [r4, #2652]	@ 0xa5c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006da6:	f8a4 6a60 	strh.w	r6, [r4, #2656]	@ 0xa60
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006daa:	f8c4 6a68 	str.w	r6, [r4, #2664]	@ 0xa68
90006dae:	f8c4 7a6c 	str.w	r7, [r4, #2668]	@ 0xa6c
              text(0)
90006db2:	f8c4 6a70 	str.w	r6, [r4, #2672]	@ 0xa70
90006db6:	f8c4 6a74 	str.w	r6, [r4, #2676]	@ 0xa74
        : x(0), y(0), width(0), height(0)
90006dba:	f8c4 6a7c 	str.w	r6, [r4, #2684]	@ 0xa7c
90006dbe:	f8c4 6a80 	str.w	r6, [r4, #2688]	@ 0xa80
90006dc2:	f8c4 6a84 	str.w	r6, [r4, #2692]	@ 0xa84
90006dc6:	f8c4 6a88 	str.w	r6, [r4, #2696]	@ 0xa88
          touchable(false),
90006dca:	f8a4 5a9c 	strh.w	r5, [r4, #2716]	@ 0xa9c
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90006dce:	f04f 457f 	mov.w	r5, #4278190080	@ 0xff000000
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006dd2:	f8c4 9aae 	str.w	r9, [r4, #2734]	@ 0xaae
        : TextAreaWithWildcardBase(), wc1(0), wc2(0)
90006dd6:	f8c4 3a78 	str.w	r3, [r4, #2680]	@ 0xa78
90006dda:	980f      	ldr	r0, [sp, #60]	@ 0x3c
          parent(0),
90006ddc:	f8c4 6a8c 	str.w	r6, [r4, #2700]	@ 0xa8c
          nextSibling(0),
90006de0:	f8c4 6a90 	str.w	r6, [r4, #2704]	@ 0xa90
          nextDrawChainElement(0),
90006de4:	f8c4 6a94 	str.w	r6, [r4, #2708]	@ 0xa94
          cachedAbsX(0),
90006de8:	f8c4 6a98 	str.w	r6, [r4, #2712]	@ 0xa98
90006dec:	f8c4 baa0 	str.w	fp, [r4, #2720]	@ 0xaa0
90006df0:	f8a4 7aa4 	strh.w	r7, [r4, #2724]	@ 0xaa4
        : color(col)
90006df4:	f8c4 6aa8 	str.w	r6, [r4, #2728]	@ 0xaa8
90006df8:	f8a4 6aac 	strh.w	r6, [r4, #2732]	@ 0xaac
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006dfc:	f8c4 6ab4 	str.w	r6, [r4, #2740]	@ 0xab4
90006e00:	f8c4 7ab8 	str.w	r7, [r4, #2744]	@ 0xab8
              text(0)
90006e04:	f8c4 6abc 	str.w	r6, [r4, #2748]	@ 0xabc
90006e08:	f8c4 6ac0 	str.w	r6, [r4, #2752]	@ 0xac0
90006e0c:	f8c4 6ac4 	str.w	r6, [r4, #2756]	@ 0xac4
90006e10:	f8ad 7068 	strh.w	r7, [sp, #104]	@ 0x68
90006e14:	f010 f9e2 	bl	900171dc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        setX(x);
90006e18:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        setWidth(width);
90006e1a:	4640      	mov	r0, r8
        : pobject(pObject), pmemfun(pmemfun_1)
90006e1c:	4a3a      	ldr	r2, [pc, #232]	@ (90006f08 <_ZN15Screen1ViewBaseC1Ev+0xabc>)
90006e1e:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
90006e22:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90006e24:	f8c4 2bdc 	str.w	r2, [r4, #3036]	@ 0xbdc
90006e28:	4a38      	ldr	r2, [pc, #224]	@ (90006f0c <_ZN15Screen1ViewBaseC1Ev+0xac0>)
90006e2a:	f8c4 4be0 	str.w	r4, [r4, #3040]	@ 0xbe0
90006e2e:	f8c4 2be4 	str.w	r2, [r4, #3044]	@ 0xbe4
90006e32:	f8c4 6be8 	str.w	r6, [r4, #3048]	@ 0xbe8
        rect.x = x;
90006e36:	6466      	str	r6, [r4, #68]	@ 0x44
        setWidth(width);
90006e38:	4798      	blx	r3
        setHeight(height);
90006e3a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
90006e3c:	4640      	mov	r0, r8
90006e3e:	f44f 7188 	mov.w	r1, #272	@ 0x110
90006e42:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90006e44:	4798      	blx	r3
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
90006e46:	4641      	mov	r1, r8
90006e48:	f104 0804 	add.w	r8, r4, #4
90006e4c:	66a5      	str	r5, [r4, #104]	@ 0x68
        rect.x = x;
90006e4e:	f8df a0d0 	ldr.w	sl, [pc, #208]	@ 90006f20 <_ZN15Screen1ViewBaseC1Ev+0xad4>
90006e52:	4640      	mov	r0, r8
90006e54:	f00d fdc2 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_WAVES_ID));
90006e58:	ab1a      	add	r3, sp, #104	@ 0x68
90006e5a:	f8dd 900c 	ldr.w	r9, [sp, #12]
90006e5e:	4619      	mov	r1, r3
90006e60:	6726      	str	r6, [r4, #112]	@ 0x70
90006e62:	4648      	mov	r0, r9
90006e64:	f8ad 6068 	strh.w	r6, [sp, #104]	@ 0x68
90006e68:	f011 faeb 	bl	90018442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006e6c:	4649      	mov	r1, r9
90006e6e:	4640      	mov	r0, r8
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
90006e70:	f04f 0905 	mov.w	r9, #5
90006e74:	f8cd 800c 	str.w	r8, [sp, #12]
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90006e78:	f04f 082b 	mov.w	r8, #43	@ 0x2b
90006e7c:	f00d fdae 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006e80:	4b23      	ldr	r3, [pc, #140]	@ (90006f10 <_ZN15Screen1ViewBaseC1Ev+0xac4>)
90006e82:	f104 0198 	add.w	r1, r4, #152	@ 0x98
90006e86:	9803      	ldr	r0, [sp, #12]
90006e88:	f884 80be 	strb.w	r8, [r4, #190]	@ 0xbe
90006e8c:	f8c4 a0a0 	str.w	sl, [r4, #160]	@ 0xa0
90006e90:	f8a4 90c8 	strh.w	r9, [r4, #200]	@ 0xc8
90006e94:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
        borderColor = colorBorder;
90006e98:	e9c4 7530 	strd	r7, r5, [r4, #192]	@ 0xc0
90006e9c:	f00d fd9e 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006ea0:	4b1c      	ldr	r3, [pc, #112]	@ (90006f14 <_ZN15Screen1ViewBaseC1Ev+0xac8>)
90006ea2:	f104 01cc 	add.w	r1, r4, #204	@ 0xcc
90006ea6:	9803      	ldr	r0, [sp, #12]
90006ea8:	f8c4 a0d4 	str.w	sl, [r4, #212]	@ 0xd4
        borderSize = size;
90006eac:	f8a4 90fc 	strh.w	r9, [r4, #252]	@ 0xfc
90006eb0:	f884 80f2 	strb.w	r8, [r4, #242]	@ 0xf2
90006eb4:	f8c4 30d0 	str.w	r3, [r4, #208]	@ 0xd0
        borderColor = colorBorder;
90006eb8:	e9c4 753d 	strd	r7, r5, [r4, #244]	@ 0xf4
90006ebc:	f00d fd8e 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006ec0:	4b15      	ldr	r3, [pc, #84]	@ (90006f18 <_ZN15Screen1ViewBaseC1Ev+0xacc>)
90006ec2:	f504 7180 	add.w	r1, r4, #256	@ 0x100
90006ec6:	9803      	ldr	r0, [sp, #12]
90006ec8:	f8c4 a108 	str.w	sl, [r4, #264]	@ 0x108
        borderSize = size;
90006ecc:	f8a4 9130 	strh.w	r9, [r4, #304]	@ 0x130
90006ed0:	f884 8126 	strb.w	r8, [r4, #294]	@ 0x126
90006ed4:	f8c4 3104 	str.w	r3, [r4, #260]	@ 0x104
        borderColor = colorBorder;
90006ed8:	e9c4 754a 	strd	r7, r5, [r4, #296]	@ 0x128
90006edc:	f00d fd7e 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006ee0:	4b0e      	ldr	r3, [pc, #56]	@ (90006f1c <_ZN15Screen1ViewBaseC1Ev+0xad0>)
90006ee2:	f504 719a 	add.w	r1, r4, #308	@ 0x134
90006ee6:	9803      	ldr	r0, [sp, #12]
90006ee8:	f8c4 a13c 	str.w	sl, [r4, #316]	@ 0x13c
        borderSize = size;
90006eec:	f8a4 9164 	strh.w	r9, [r4, #356]	@ 0x164
90006ef0:	f884 815a 	strb.w	r8, [r4, #346]	@ 0x15a
90006ef4:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
        borderColor = colorBorder;
90006ef8:	e9c4 7557 	strd	r7, r5, [r4, #348]	@ 0x15c
90006efc:	f00d fd6e 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006f00:	e010      	b.n	90006f24 <_ZN15Screen1ViewBaseC1Ev+0xad8>
90006f02:	bf00      	nop
90006f04:	9002ef50 	.word	0x9002ef50
90006f08:	9002efe0 	.word	0x9002efe0
90006f0c:	900062e1 	.word	0x900062e1
90006f10:	00cb00a0 	.word	0x00cb00a0
90006f14:	00cb0140 	.word	0x00cb0140
90006f18:	009900a0 	.word	0x009900a0
90006f1c:	006700a0 	.word	0x006700a0
90006f20:	003200a0 	.word	0x003200a0
90006f24:	4bde      	ldr	r3, [pc, #888]	@ (900072a0 <_ZN15Screen1ViewBaseC1Ev+0xe54>)
90006f26:	f504 71b4 	add.w	r1, r4, #360	@ 0x168
90006f2a:	9803      	ldr	r0, [sp, #12]
90006f2c:	f8c4 a170 	str.w	sl, [r4, #368]	@ 0x170
        borderSize = size;
90006f30:	f8a4 9198 	strh.w	r9, [r4, #408]	@ 0x198
90006f34:	f884 818e 	strb.w	r8, [r4, #398]	@ 0x18e
90006f38:	f8c4 316c 	str.w	r3, [r4, #364]	@ 0x16c
        borderColor = colorBorder;
90006f3c:	e9c4 7564 	strd	r7, r5, [r4, #400]	@ 0x190
90006f40:	f00d fd4c 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006f44:	4bd7      	ldr	r3, [pc, #860]	@ (900072a4 <_ZN15Screen1ViewBaseC1Ev+0xe58>)
90006f46:	f504 71ce 	add.w	r1, r4, #412	@ 0x19c
90006f4a:	9803      	ldr	r0, [sp, #12]
90006f4c:	f8c4 a1a4 	str.w	sl, [r4, #420]	@ 0x1a4
        borderSize = size;
90006f50:	f8a4 91cc 	strh.w	r9, [r4, #460]	@ 0x1cc
90006f54:	f884 81c2 	strb.w	r8, [r4, #450]	@ 0x1c2
90006f58:	f8c4 31a0 	str.w	r3, [r4, #416]	@ 0x1a0
        borderColor = colorBorder;
90006f5c:	e9c4 7571 	strd	r7, r5, [r4, #452]	@ 0x1c4
90006f60:	f00d fd3c 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006f64:	4bd0      	ldr	r3, [pc, #832]	@ (900072a8 <_ZN15Screen1ViewBaseC1Ev+0xe5c>)
90006f66:	f504 71e8 	add.w	r1, r4, #464	@ 0x1d0
90006f6a:	9803      	ldr	r0, [sp, #12]
90006f6c:	f8c4 a1d8 	str.w	sl, [r4, #472]	@ 0x1d8
        borderSize = size;
90006f70:	f8a4 9200 	strh.w	r9, [r4, #512]	@ 0x200
90006f74:	f884 81f6 	strb.w	r8, [r4, #502]	@ 0x1f6
90006f78:	f8c4 31d4 	str.w	r3, [r4, #468]	@ 0x1d4
        borderColor = colorBorder;
90006f7c:	e9c4 757e 	strd	r7, r5, [r4, #504]	@ 0x1f8
90006f80:	f00d fd2c 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006f84:	4bc9      	ldr	r3, [pc, #804]	@ (900072ac <_ZN15Screen1ViewBaseC1Ev+0xe60>)
90006f86:	f504 7101 	add.w	r1, r4, #516	@ 0x204
90006f8a:	9803      	ldr	r0, [sp, #12]
90006f8c:	f8c4 a20c 	str.w	sl, [r4, #524]	@ 0x20c
        borderSize = size;
90006f90:	f8a4 9234 	strh.w	r9, [r4, #564]	@ 0x234
90006f94:	f884 822a 	strb.w	r8, [r4, #554]	@ 0x22a
90006f98:	f8c4 3208 	str.w	r3, [r4, #520]	@ 0x208
        borderColor = colorBorder;
90006f9c:	e9c4 758b 	strd	r7, r5, [r4, #556]	@ 0x22c
90006fa0:	f00d fd1c 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006fa4:	f44f 034b 	mov.w	r3, #13303808	@ 0xcb0000
90006fa8:	f504 710e 	add.w	r1, r4, #568	@ 0x238
90006fac:	9803      	ldr	r0, [sp, #12]
90006fae:	f8c4 a240 	str.w	sl, [r4, #576]	@ 0x240
        borderSize = size;
90006fb2:	f8a4 9268 	strh.w	r9, [r4, #616]	@ 0x268
90006fb6:	f884 825e 	strb.w	r8, [r4, #606]	@ 0x25e
90006fba:	f8c4 323c 	str.w	r3, [r4, #572]	@ 0x23c
        borderColor = colorBorder;
90006fbe:	e9c4 7598 	strd	r7, r5, [r4, #608]	@ 0x260
90006fc2:	f00d fd0b 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006fc6:	f44f 0319 	mov.w	r3, #10027008	@ 0x990000
90006fca:	f504 711b 	add.w	r1, r4, #620	@ 0x26c
90006fce:	9803      	ldr	r0, [sp, #12]
90006fd0:	f8c4 a274 	str.w	sl, [r4, #628]	@ 0x274
        borderSize = size;
90006fd4:	f8a4 929c 	strh.w	r9, [r4, #668]	@ 0x29c
90006fd8:	f884 8292 	strb.w	r8, [r4, #658]	@ 0x292
90006fdc:	f8c4 3270 	str.w	r3, [r4, #624]	@ 0x270
        borderColor = colorBorder;
90006fe0:	e9c4 75a5 	strd	r7, r5, [r4, #660]	@ 0x294
90006fe4:	f00d fcfa 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006fe8:	f44f 03ce 	mov.w	r3, #6750208	@ 0x670000
90006fec:	f504 7128 	add.w	r1, r4, #672	@ 0x2a0
90006ff0:	9803      	ldr	r0, [sp, #12]
90006ff2:	f8c4 a2a8 	str.w	sl, [r4, #680]	@ 0x2a8
        borderSize = size;
90006ff6:	f8a4 92d0 	strh.w	r9, [r4, #720]	@ 0x2d0
90006ffa:	f884 82c6 	strb.w	r8, [r4, #710]	@ 0x2c6
90006ffe:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
        borderColor = colorBorder;
90007002:	e9c4 75b2 	strd	r7, r5, [r4, #712]	@ 0x2c8
90007006:	f00d fce9 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000700a:	f44f 1354 	mov.w	r3, #3473408	@ 0x350000
9000700e:	f504 7135 	add.w	r1, r4, #724	@ 0x2d4
90007012:	9803      	ldr	r0, [sp, #12]
90007014:	f8c4 a2dc 	str.w	sl, [r4, #732]	@ 0x2dc
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
90007018:	f504 7a54 	add.w	sl, r4, #848	@ 0x350
9000701c:	f8c4 5300 	str.w	r5, [r4, #768]	@ 0x300
        boundingArea = calculateBoundingArea();
90007020:	ad12      	add	r5, sp, #72	@ 0x48
        borderSize = size;
90007022:	f8a4 9304 	strh.w	r9, [r4, #772]	@ 0x304
90007026:	f504 7942 	add.w	r9, r4, #776	@ 0x308
9000702a:	f884 82fa 	strb.w	r8, [r4, #762]	@ 0x2fa
9000702e:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
        color = newColor;
90007032:	f8c4 72fc 	str.w	r7, [r4, #764]	@ 0x2fc
90007036:	f00d fcd1 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000703a:	4b9d      	ldr	r3, [pc, #628]	@ (900072b0 <_ZN15Screen1ViewBaseC1Ev+0xe64>)
9000703c:	4649      	mov	r1, r9
9000703e:	4628      	mov	r0, r5
90007040:	f8c4 330c 	str.w	r3, [r4, #780]	@ 0x30c
        color = newColor;
90007044:	f8c4 7338 	str.w	r7, [r4, #824]	@ 0x338
        linespace = space;
90007048:	f8a4 633c 	strh.w	r6, [r4, #828]	@ 0x33c
        boundingArea = calculateBoundingArea();
9000704c:	f010 fb9a 	bl	90017784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90007050:	f504 7275 	add.w	r2, r4, #980	@ 0x3d4
90007054:	f8ad 806c 	strh.w	r8, [sp, #108]	@ 0x6c
90007058:	f504 7351 	add.w	r3, r4, #836	@ 0x344
9000705c:	9211      	str	r2, [sp, #68]	@ 0x44
9000705e:	f504 628d 	add.w	r2, r4, #1128	@ 0x468
90007062:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
    textSpeed.setPosition(17, 72, 123, 25);
90007066:	f204 481c 	addw	r8, r4, #1052	@ 0x41c
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
9000706a:	920d      	str	r2, [sp, #52]	@ 0x34
9000706c:	f504 6296 	add.w	r2, r4, #1200	@ 0x4b0
90007070:	9204      	str	r2, [sp, #16]
90007072:	f504 62b2 	add.w	r2, r4, #1424	@ 0x590
90007076:	920e      	str	r2, [sp, #56]	@ 0x38
90007078:	f504 62bb 	add.w	r2, r4, #1496	@ 0x5d8
9000707c:	9205      	str	r2, [sp, #20]
9000707e:	f504 62c4 	add.w	r2, r4, #1568	@ 0x620
90007082:	9206      	str	r2, [sp, #24]
90007084:	f504 62cd 	add.w	r2, r4, #1640	@ 0x668
90007088:	9207      	str	r2, [sp, #28]
9000708a:	f504 62d6 	add.w	r2, r4, #1712	@ 0x6b0
9000708e:	9208      	str	r2, [sp, #32]
90007090:	f504 62df 	add.w	r2, r4, #1784	@ 0x6f8
90007094:	9209      	str	r2, [sp, #36]	@ 0x24
90007096:	f504 62e8 	add.w	r2, r4, #1856	@ 0x740
9000709a:	920a      	str	r2, [sp, #40]	@ 0x28
9000709c:	f504 62f1 	add.w	r2, r4, #1928	@ 0x788
900070a0:	920b      	str	r2, [sp, #44]	@ 0x2c
900070a2:	f504 62fa 	add.w	r2, r4, #2000	@ 0x7d0
900070a6:	920c      	str	r2, [sp, #48]	@ 0x30
900070a8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900070ac:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MZRT));
900070b0:	ab1a      	add	r3, sp, #104	@ 0x68
900070b2:	4648      	mov	r0, r9
900070b4:	4619      	mov	r1, r3
900070b6:	f010 fdff 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900070ba:	4649      	mov	r1, r9
900070bc:	f8dd 900c 	ldr.w	r9, [sp, #12]
900070c0:	4648      	mov	r0, r9
900070c2:	f00d fc8b 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
900070c6:	4b7b      	ldr	r3, [pc, #492]	@ (900072b4 <_ZN15Screen1ViewBaseC1Ev+0xe68>)
900070c8:	4651      	mov	r1, sl
900070ca:	4628      	mov	r0, r5
900070cc:	f8c4 3354 	str.w	r3, [r4, #852]	@ 0x354
        color = newColor;
900070d0:	f8c4 7380 	str.w	r7, [r4, #896]	@ 0x380
        linespace = space;
900070d4:	f8a4 6384 	strh.w	r6, [r4, #900]	@ 0x384
        boundingArea = calculateBoundingArea();
900070d8:	f010 fb54 	bl	90017784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900070dc:	222a      	movs	r2, #42	@ 0x2a
900070de:	f504 7363 	add.w	r3, r4, #908	@ 0x38c
900070e2:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
900070e6:	f8ad 206c 	strh.w	r2, [sp, #108]	@ 0x6c
900070ea:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900070ee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A7QO));
900070f2:	ab1a      	add	r3, sp, #104	@ 0x68
900070f4:	4650      	mov	r0, sl
900070f6:	4619      	mov	r1, r3
900070f8:	f010 fdde 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900070fc:	4651      	mov	r1, sl
900070fe:	4648      	mov	r0, r9
90007100:	f00d fc6c 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_SWITCH_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_SWITCH_LEFT_50_50_E8F6FB_SVG_ID));
90007104:	ab1a      	add	r3, sp, #104	@ 0x68
90007106:	f8dd a040 	ldr.w	sl, [sp, #64]	@ 0x40
9000710a:	aa18      	add	r2, sp, #96	@ 0x60
9000710c:	9300      	str	r3, [sp, #0]
9000710e:	f44f 73be 	mov.w	r3, #380	@ 0x17c
90007112:	4650      	mov	r0, sl
90007114:	a917      	add	r1, sp, #92	@ 0x5c
90007116:	f8c4 339c 	str.w	r3, [r4, #924]	@ 0x39c
9000711a:	2302      	movs	r3, #2
9000711c:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
90007120:	f8ad 3060 	strh.w	r3, [sp, #96]	@ 0x60
90007124:	2304      	movs	r3, #4
90007126:	f8ad 3064 	strh.w	r3, [sp, #100]	@ 0x64
9000712a:	f8ad 3068 	strh.w	r3, [sp, #104]	@ 0x68
9000712e:	ab19      	add	r3, sp, #100	@ 0x64
90007130:	f011 f8ba 	bl	900182a8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
90007134:	4b60      	ldr	r3, [pc, #384]	@ (900072b8 <_ZN15Screen1ViewBaseC1Ev+0xe6c>)
90007136:	4651      	mov	r1, sl
90007138:	4648      	mov	r0, r9
9000713a:	f8c4 33d0 	str.w	r3, [r4, #976]	@ 0x3d0
    buttonWithIcon1.setAction(buttonCallback);
9000713e:	f604 33dc 	addw	r3, r4, #3036	@ 0xbdc
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
90007142:	f8c4 33c0 	str.w	r3, [r4, #960]	@ 0x3c0
90007146:	f00d fc49 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000714a:	f8dd a044 	ldr.w	sl, [sp, #68]	@ 0x44
9000714e:	4b5b      	ldr	r3, [pc, #364]	@ (900072bc <_ZN15Screen1ViewBaseC1Ev+0xe70>)
90007150:	4628      	mov	r0, r5
90007152:	4651      	mov	r1, sl
        color = newColor;
90007154:	f8c4 7404 	str.w	r7, [r4, #1028]	@ 0x404
90007158:	f8c4 33d8 	str.w	r3, [r4, #984]	@ 0x3d8
        linespace = space;
9000715c:	f8a4 6408 	strh.w	r6, [r4, #1032]	@ 0x408
        boundingArea = calculateBoundingArea();
90007160:	f010 fb10 	bl	90017784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90007164:	2228      	movs	r2, #40	@ 0x28
90007166:	f504 6382 	add.w	r3, r4, #1040	@ 0x410
9000716a:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
9000716e:	f8ad 206c 	strh.w	r2, [sp, #108]	@ 0x6c
90007172:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007176:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VWPI));
9000717a:	a91a      	add	r1, sp, #104	@ 0x68
9000717c:	4650      	mov	r0, sl
9000717e:	f010 fd9b 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007182:	4651      	mov	r1, sl
90007184:	4648      	mov	r0, r9
90007186:	f00d fc29 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000718a:	4a4d      	ldr	r2, [pc, #308]	@ (900072c0 <_ZN15Screen1ViewBaseC1Ev+0xe74>)
        setX(x);
9000718c:	f8d4 341c 	ldr.w	r3, [r4, #1052]	@ 0x41c
        setWidth(width);
90007190:	217b      	movs	r1, #123	@ 0x7b
90007192:	4640      	mov	r0, r8
90007194:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
        rect.x = x;
90007196:	f8c4 2420 	str.w	r2, [r4, #1056]	@ 0x420
        setWidth(width);
9000719a:	4798      	blx	r3
        setHeight(height);
9000719c:	f8d4 341c 	ldr.w	r3, [r4, #1052]	@ 0x41c
900071a0:	2119      	movs	r1, #25
900071a2:	4640      	mov	r0, r8
900071a4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900071a6:	4798      	blx	r3
900071a8:	f8d4 341c 	ldr.w	r3, [r4, #1052]	@ 0x41c
900071ac:	4a45      	ldr	r2, [pc, #276]	@ (900072c4 <_ZN15Screen1ViewBaseC1Ev+0xe78>)
900071ae:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
900071b2:	f8c4 744c 	str.w	r7, [r4, #1100]	@ 0x44c
        linespace = space;
900071b6:	4293      	cmp	r3, r2
900071b8:	f8a4 6450 	strh.w	r6, [r4, #1104]	@ 0x450
        boundingArea = calculateBoundingArea();
900071bc:	f040 85a5 	bne.w	90007d0a <_ZN15Screen1ViewBaseC1Ev+0x18be>
900071c0:	f8c4 745c 	str.w	r7, [r4, #1116]	@ 0x45c
900071c4:	f8c4 6458 	str.w	r6, [r4, #1112]	@ 0x458
900071c8:	f8c4 6460 	str.w	r6, [r4, #1120]	@ 0x460
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900071cc:	4b3e      	ldr	r3, [pc, #248]	@ (900072c8 <_ZN15Screen1ViewBaseC1Ev+0xe7c>)
    Unicode::snprintf(textSpeedBuffer, TEXTSPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_O704).getText());
900071ce:	f604 27f4 	addw	r7, r4, #2804	@ 0xaf4
900071d2:	681b      	ldr	r3, [r3, #0]
900071d4:	2b00      	cmp	r3, #0
900071d6:	f000 85a9 	beq.w	90007d2c <_ZN15Screen1ViewBaseC1Ev+0x18e0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900071da:	4b3c      	ldr	r3, [pc, #240]	@ (900072cc <_ZN15Screen1ViewBaseC1Ev+0xe80>)
900071dc:	881b      	ldrh	r3, [r3, #0]
900071de:	2b26      	cmp	r3, #38	@ 0x26
900071e0:	f240 859e 	bls.w	90007d20 <_ZN15Screen1ViewBaseC1Ev+0x18d4>
        return texts->getText(typedTextId);
900071e4:	4b3a      	ldr	r3, [pc, #232]	@ (900072d0 <_ZN15Screen1ViewBaseC1Ev+0xe84>)
900071e6:	2126      	movs	r1, #38	@ 0x26
        linespace = space;
900071e8:	2600      	movs	r6, #0
        color = newColor;
900071ea:	f04f 3aff 	mov.w	sl, #4294967295
900071ee:	6818      	ldr	r0, [r3, #0]
    Unicode::snprintf(textRPMsBuffer, TEXTRPMS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_W1Q5).getText());
900071f0:	f604 29fe 	addw	r9, r4, #2814	@ 0xafe
900071f4:	f001 fd62 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(textSpeedBuffer, TEXTSPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_O704).getText());
900071f8:	4a36      	ldr	r2, [pc, #216]	@ (900072d4 <_ZN15Screen1ViewBaseC1Ev+0xe88>)
900071fa:	4603      	mov	r3, r0
900071fc:	2105      	movs	r1, #5
900071fe:	4638      	mov	r0, r7
90007200:	f016 fe78 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
90007204:	2327      	movs	r3, #39	@ 0x27
    textSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MK8R));
90007206:	4640      	mov	r0, r8
90007208:	a91a      	add	r1, sp, #104	@ 0x68
        wc1 = value;
9000720a:	f8c4 7464 	str.w	r7, [r4, #1124]	@ 0x464
9000720e:	f8ad 306c 	strh.w	r3, [sp, #108]	@ 0x6c
90007212:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
90007216:	f010 fd4f 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
9000721a:	4641      	mov	r1, r8
9000721c:	9803      	ldr	r0, [sp, #12]
9000721e:	f00d fbdd 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        boundingArea = calculateBoundingArea();
90007222:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
        rect.x = x;
90007224:	4b2c      	ldr	r3, [pc, #176]	@ (900072d8 <_ZN15Screen1ViewBaseC1Ev+0xe8c>)
90007226:	4628      	mov	r0, r5
90007228:	4639      	mov	r1, r7
        color = newColor;
9000722a:	f8c4 a498 	str.w	sl, [r4, #1176]	@ 0x498
9000722e:	f8c4 346c 	str.w	r3, [r4, #1132]	@ 0x46c
        boundingArea = calculateBoundingArea();
90007232:	f204 5834 	addw	r8, r4, #1332	@ 0x534
        linespace = space;
90007236:	f8a4 649c 	strh.w	r6, [r4, #1180]	@ 0x49c
        boundingArea = calculateBoundingArea();
9000723a:	f010 faa3 	bl	90017784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
9000723e:	2225      	movs	r2, #37	@ 0x25
90007240:	46bc      	mov	ip, r7
90007242:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
90007246:	f8ad 206c 	strh.w	r2, [sp, #108]	@ 0x6c
    textRPMs.setPosition(175, 72, 131, 25);
9000724a:	f504 679f 	add.w	r7, r4, #1272	@ 0x4f8
9000724e:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
90007252:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007256:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NDPG));
9000725a:	4660      	mov	r0, ip
9000725c:	a91a      	add	r1, sp, #104	@ 0x68
9000725e:	f8cd c034 	str.w	ip, [sp, #52]	@ 0x34
90007262:	f010 fd29 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007266:	990d      	ldr	r1, [sp, #52]	@ 0x34
90007268:	9803      	ldr	r0, [sp, #12]
9000726a:	f00d fbb7 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000726e:	4b1b      	ldr	r3, [pc, #108]	@ (900072dc <_ZN15Screen1ViewBaseC1Ev+0xe90>)
90007270:	9904      	ldr	r1, [sp, #16]
90007272:	4628      	mov	r0, r5
90007274:	f8c4 34b4 	str.w	r3, [r4, #1204]	@ 0x4b4
        color = newColor;
90007278:	f8c4 a4e0 	str.w	sl, [r4, #1248]	@ 0x4e0
        linespace = space;
9000727c:	f8a4 64e4 	strh.w	r6, [r4, #1252]	@ 0x4e4
        boundingArea = calculateBoundingArea();
90007280:	f010 fa80 	bl	90017784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90007284:	9a04      	ldr	r2, [sp, #16]
90007286:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
9000728a:	f102 033c 	add.w	r3, r2, #60	@ 0x3c
9000728e:	2224      	movs	r2, #36	@ 0x24
90007290:	f8ad 206c 	strh.w	r2, [sp, #108]	@ 0x6c
90007294:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007298:	e883 0007 	stmia.w	r3, {r0, r1, r2}
9000729c:	e020      	b.n	900072e0 <_ZN15Screen1ViewBaseC1Ev+0xe94>
9000729e:	bf00      	nop
900072a0:	003500a0 	.word	0x003500a0
900072a4:	00990140 	.word	0x00990140
900072a8:	00670140 	.word	0x00670140
900072ac:	00350140 	.word	0x00350140
900072b0:	010300c7 	.word	0x010300c7
900072b4:	00060085 	.word	0x00060085
900072b8:	fff90019 	.word	0xfff90019
900072bc:	003b0040 	.word	0x003b0040
900072c0:	00480011 	.word	0x00480011
900072c4:	90006235 	.word	0x90006235
900072c8:	24027ef4 	.word	0x24027ef4
900072cc:	24027ef8 	.word	0x24027ef8
900072d0:	24027f00 	.word	0x24027f00
900072d4:	9002eeb4 	.word	0x9002eeb4
900072d8:	003b00e3 	.word	0x003b00e3
900072dc:	003b016d 	.word	0x003b016d
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9BVT));
900072e0:	a91a      	add	r1, sp, #104	@ 0x68
900072e2:	9804      	ldr	r0, [sp, #16]
900072e4:	f010 fce8 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900072e8:	e9dd 0103 	ldrd	r0, r1, [sp, #12]
900072ec:	f00d fb76 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.width = width;
900072f0:	f04f 0283 	mov.w	r2, #131	@ 0x83
        setX(x);
900072f4:	f8d4 34f8 	ldr.w	r3, [r4, #1272]	@ 0x4f8
        boundingArea = calculateBoundingArea();
900072f8:	4639      	mov	r1, r7
        rect.width = width;
900072fa:	f8a4 2500 	strh.w	r2, [r4, #1280]	@ 0x500
900072fe:	4628      	mov	r0, r5
        rect.x = x;
90007300:	4ada      	ldr	r2, [pc, #872]	@ (9000766c <_ZN15Screen1ViewBaseC1Ev+0x1220>)
90007302:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90007306:	f8c4 24fc 	str.w	r2, [r4, #1276]	@ 0x4fc
9000730a:	4798      	blx	r3
        setHeight(height);
9000730c:	f8d4 34f8 	ldr.w	r3, [r4, #1272]	@ 0x4f8
90007310:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90007314:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        boundingArea = calculateBoundingArea();
90007318:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rect.height = height;
9000731c:	f04f 0219 	mov.w	r2, #25
        boundingArea = calculateBoundingArea();
90007320:	4639      	mov	r1, r7
90007322:	4628      	mov	r0, r5
90007324:	f8a4 2502 	strh.w	r2, [r4, #1282]	@ 0x502
90007328:	4798      	blx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000732a:	4ad1      	ldr	r2, [pc, #836]	@ (90007670 <_ZN15Screen1ViewBaseC1Ev+0x1224>)
9000732c:	6813      	ldr	r3, [r2, #0]
9000732e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007332:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        color = newColor;
90007336:	f8c4 a528 	str.w	sl, [r4, #1320]	@ 0x528
        linespace = space;
9000733a:	f8a4 652c 	strh.w	r6, [r4, #1324]	@ 0x52c
        boundingArea = calculateBoundingArea();
9000733e:	f8c4 6534 	str.w	r6, [r4, #1332]	@ 0x534
90007342:	f8c4 a538 	str.w	sl, [r4, #1336]	@ 0x538
90007346:	f8c4 653c 	str.w	r6, [r4, #1340]	@ 0x53c
9000734a:	2b00      	cmp	r3, #0
9000734c:	f000 84ee 	beq.w	90007d2c <_ZN15Screen1ViewBaseC1Ev+0x18e0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90007350:	49c8      	ldr	r1, [pc, #800]	@ (90007674 <_ZN15Screen1ViewBaseC1Ev+0x1228>)
90007352:	880b      	ldrh	r3, [r1, #0]
90007354:	2b22      	cmp	r3, #34	@ 0x22
90007356:	f240 84e3 	bls.w	90007d20 <_ZN15Screen1ViewBaseC1Ev+0x18d4>
        return texts->getText(typedTextId);
9000735a:	4bc7      	ldr	r3, [pc, #796]	@ (90007678 <_ZN15Screen1ViewBaseC1Ev+0x122c>)
9000735c:	2122      	movs	r1, #34	@ 0x22
    Unicode::snprintf(textEngLoadBuffer, TEXTENGLOAD_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WL4J).getText());
9000735e:	f604 3812 	addw	r8, r4, #2834	@ 0xb12
90007362:	6818      	ldr	r0, [r3, #0]
90007364:	f001 fcaa 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(textRPMsBuffer, TEXTRPMS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_W1Q5).getText());
90007368:	4ac4      	ldr	r2, [pc, #784]	@ (9000767c <_ZN15Screen1ViewBaseC1Ev+0x1230>)
9000736a:	4603      	mov	r3, r0
9000736c:	210a      	movs	r1, #10
9000736e:	4648      	mov	r0, r9
90007370:	f016 fdc0 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textRPMs.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5COD));
90007374:	f10d 0e68 	add.w	lr, sp, #104	@ 0x68
        : typedTextId(id)
90007378:	2323      	movs	r3, #35	@ 0x23
9000737a:	4638      	mov	r0, r7
9000737c:	4671      	mov	r1, lr
9000737e:	f8c4 9540 	str.w	r9, [r4, #1344]	@ 0x540
90007382:	f8ad 306c 	strh.w	r3, [sp, #108]	@ 0x6c
        boundingArea = calculateBoundingArea();
90007386:	f504 69b0 	add.w	r9, r4, #1408	@ 0x580
9000738a:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
9000738e:	f010 fc93 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007392:	4639      	mov	r1, r7
90007394:	9803      	ldr	r0, [sp, #12]
90007396:	f00d fb21 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setX(x);
9000739a:	f8d4 3544 	ldr.w	r3, [r4, #1348]	@ 0x544
        rect.x = x;
9000739e:	4ab8      	ldr	r2, [pc, #736]	@ (90007680 <_ZN15Screen1ViewBaseC1Ev+0x1234>)
    textEngLoad.setPosition(337, 72, 127, 25);
900073a0:	f204 5744 	addw	r7, r4, #1348	@ 0x544
900073a4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
900073a8:	4628      	mov	r0, r5
900073aa:	f8c4 2548 	str.w	r2, [r4, #1352]	@ 0x548
        rect.width = width;
900073ae:	227f      	movs	r2, #127	@ 0x7f
900073b0:	4639      	mov	r1, r7
900073b2:	f8a4 254c 	strh.w	r2, [r4, #1356]	@ 0x54c
900073b6:	4798      	blx	r3
        setHeight(height);
900073b8:	f8d4 3544 	ldr.w	r3, [r4, #1348]	@ 0x544
        rect.height = height;
900073bc:	f04f 0c19 	mov.w	ip, #25
        boundingArea = calculateBoundingArea();
900073c0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        boundingArea = calculateBoundingArea();
900073c4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900073c8:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
900073cc:	4639      	mov	r1, r7
900073ce:	4628      	mov	r0, r5
900073d0:	f8a4 c54e 	strh.w	ip, [r4, #1358]	@ 0x54e
900073d4:	4798      	blx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900073d6:	4aa6      	ldr	r2, [pc, #664]	@ (90007670 <_ZN15Screen1ViewBaseC1Ev+0x1224>)
900073d8:	6813      	ldr	r3, [r2, #0]
900073da:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900073de:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        color = newColor;
900073e2:	f8c4 a574 	str.w	sl, [r4, #1396]	@ 0x574
        linespace = space;
900073e6:	f8a4 6578 	strh.w	r6, [r4, #1400]	@ 0x578
        boundingArea = calculateBoundingArea();
900073ea:	f8c4 6580 	str.w	r6, [r4, #1408]	@ 0x580
900073ee:	f8c4 a584 	str.w	sl, [r4, #1412]	@ 0x584
900073f2:	f8c4 6588 	str.w	r6, [r4, #1416]	@ 0x588
900073f6:	2b00      	cmp	r3, #0
900073f8:	f000 8498 	beq.w	90007d2c <_ZN15Screen1ViewBaseC1Ev+0x18e0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900073fc:	499d      	ldr	r1, [pc, #628]	@ (90007674 <_ZN15Screen1ViewBaseC1Ev+0x1228>)
900073fe:	880b      	ldrh	r3, [r1, #0]
90007400:	2b20      	cmp	r3, #32
90007402:	f240 848d 	bls.w	90007d20 <_ZN15Screen1ViewBaseC1Ev+0x18d4>
        return texts->getText(typedTextId);
90007406:	4b9c      	ldr	r3, [pc, #624]	@ (90007678 <_ZN15Screen1ViewBaseC1Ev+0x122c>)
90007408:	2120      	movs	r1, #32
        : typedTextId(id)
9000740a:	f04f 0918 	mov.w	r9, #24
        return texts->getText(typedTextId);
9000740e:	6818      	ldr	r0, [r3, #0]
90007410:	f001 fc54 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(textEngLoadBuffer, TEXTENGLOAD_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WL4J).getText());
90007414:	4a99      	ldr	r2, [pc, #612]	@ (9000767c <_ZN15Screen1ViewBaseC1Ev+0x1230>)
90007416:	4603      	mov	r3, r0
90007418:	210a      	movs	r1, #10
9000741a:	4640      	mov	r0, r8
9000741c:	f016 fd6a 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textEngLoad.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D2D6));
90007420:	f10d 0e68 	add.w	lr, sp, #104	@ 0x68
        : typedTextId(id)
90007424:	2321      	movs	r3, #33	@ 0x21
90007426:	4638      	mov	r0, r7
90007428:	4671      	mov	r1, lr
9000742a:	f8c4 858c 	str.w	r8, [r4, #1420]	@ 0x58c
9000742e:	f8ad 306c 	strh.w	r3, [sp, #108]	@ 0x6c
90007432:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
90007436:	f010 fc3f 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
9000743a:	4639      	mov	r1, r7
9000743c:	9803      	ldr	r0, [sp, #12]
9000743e:	f00d facd 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007442:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
        rect.x = x;
90007446:	4b8f      	ldr	r3, [pc, #572]	@ (90007684 <_ZN15Screen1ViewBaseC1Ev+0x1238>)
90007448:	4628      	mov	r0, r5
9000744a:	4641      	mov	r1, r8
        color = newColor;
9000744c:	f8c4 a5c0 	str.w	sl, [r4, #1472]	@ 0x5c0
90007450:	f8c4 3594 	str.w	r3, [r4, #1428]	@ 0x594
        boundingArea = calculateBoundingArea();
90007454:	f604 0754 	addw	r7, r4, #2132	@ 0x854
        linespace = space;
90007458:	f8a4 65c4 	strh.w	r6, [r4, #1476]	@ 0x5c4
        boundingArea = calculateBoundingArea();
9000745c:	f010 f992 	bl	90017784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90007460:	221f      	movs	r2, #31
    Unicode::snprintf(textCoolTempBuffer, TEXTCOOLTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VWCY).getText());
90007462:	f604 3026 	addw	r0, r4, #2854	@ 0xb26
90007466:	46c4      	mov	ip, r8
90007468:	f108 033c 	add.w	r3, r8, #60	@ 0x3c
    textArea6.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UTMM));
9000746c:	f10d 0e68 	add.w	lr, sp, #104	@ 0x68
90007470:	f8ad 206c 	strh.w	r2, [sp, #108]	@ 0x6c
    textCoolTemp.setPosition(17, 122, 126, 24);
90007474:	f604 0818 	addw	r8, r4, #2072	@ 0x818
    Unicode::snprintf(textCoolTempBuffer, TEXTCOOLTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VWCY).getText());
90007478:	9004      	str	r0, [sp, #16]
9000747a:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
9000747e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007482:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea6.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UTMM));
90007486:	4660      	mov	r0, ip
90007488:	4671      	mov	r1, lr
9000748a:	f8cd c038 	str.w	ip, [sp, #56]	@ 0x38
9000748e:	f010 fc13 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007492:	990e      	ldr	r1, [sp, #56]	@ 0x38
90007494:	9803      	ldr	r0, [sp, #12]
90007496:	f00d faa1 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000749a:	4b7b      	ldr	r3, [pc, #492]	@ (90007688 <_ZN15Screen1ViewBaseC1Ev+0x123c>)
9000749c:	9905      	ldr	r1, [sp, #20]
9000749e:	4628      	mov	r0, r5
900074a0:	f8c4 35dc 	str.w	r3, [r4, #1500]	@ 0x5dc
        color = newColor;
900074a4:	f8c4 a608 	str.w	sl, [r4, #1544]	@ 0x608
        linespace = space;
900074a8:	f8a4 660c 	strh.w	r6, [r4, #1548]	@ 0x60c
        boundingArea = calculateBoundingArea();
900074ac:	f010 f96a 	bl	90017784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900074b0:	9805      	ldr	r0, [sp, #20]
900074b2:	221e      	movs	r2, #30
    textArea7.setTypedText(touchgfx::TypedText(T___SINGLEUSE_42B1));
900074b4:	f10d 0e68 	add.w	lr, sp, #104	@ 0x68
900074b8:	f100 033c 	add.w	r3, r0, #60	@ 0x3c
900074bc:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
900074c0:	f8ad 206c 	strh.w	r2, [sp, #108]	@ 0x6c
900074c4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900074c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
900074cc:	4671      	mov	r1, lr
900074ce:	9805      	ldr	r0, [sp, #20]
900074d0:	f010 fbf2 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900074d4:	9905      	ldr	r1, [sp, #20]
900074d6:	9803      	ldr	r0, [sp, #12]
900074d8:	f00d fa80 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
900074dc:	4b6b      	ldr	r3, [pc, #428]	@ (9000768c <_ZN15Screen1ViewBaseC1Ev+0x1240>)
900074de:	9906      	ldr	r1, [sp, #24]
900074e0:	4628      	mov	r0, r5
900074e2:	f8c4 3624 	str.w	r3, [r4, #1572]	@ 0x624
        color = newColor;
900074e6:	f8c4 a650 	str.w	sl, [r4, #1616]	@ 0x650
        linespace = space;
900074ea:	f8a4 6654 	strh.w	r6, [r4, #1620]	@ 0x654
        boundingArea = calculateBoundingArea();
900074ee:	f010 f949 	bl	90017784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900074f2:	9806      	ldr	r0, [sp, #24]
900074f4:	221d      	movs	r2, #29
    textArea8.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YIJ6));
900074f6:	f10d 0e68 	add.w	lr, sp, #104	@ 0x68
900074fa:	f100 033c 	add.w	r3, r0, #60	@ 0x3c
900074fe:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
90007502:	f8ad 206c 	strh.w	r2, [sp, #108]	@ 0x6c
90007506:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000750a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
9000750e:	4671      	mov	r1, lr
90007510:	9806      	ldr	r0, [sp, #24]
90007512:	f010 fbd1 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007516:	9906      	ldr	r1, [sp, #24]
90007518:	9803      	ldr	r0, [sp, #12]
9000751a:	f00d fa5f 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000751e:	4b5c      	ldr	r3, [pc, #368]	@ (90007690 <_ZN15Screen1ViewBaseC1Ev+0x1244>)
90007520:	9907      	ldr	r1, [sp, #28]
90007522:	4628      	mov	r0, r5
90007524:	f8c4 366c 	str.w	r3, [r4, #1644]	@ 0x66c
        color = newColor;
90007528:	f8c4 a698 	str.w	sl, [r4, #1688]	@ 0x698
        linespace = space;
9000752c:	f8a4 669c 	strh.w	r6, [r4, #1692]	@ 0x69c
        boundingArea = calculateBoundingArea();
90007530:	f010 f928 	bl	90017784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90007534:	9807      	ldr	r0, [sp, #28]
90007536:	221c      	movs	r2, #28
    textArea9.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QYFX));
90007538:	f10d 0e68 	add.w	lr, sp, #104	@ 0x68
9000753c:	f100 033c 	add.w	r3, r0, #60	@ 0x3c
90007540:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
90007544:	f8ad 206c 	strh.w	r2, [sp, #108]	@ 0x6c
90007548:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000754c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90007550:	4671      	mov	r1, lr
90007552:	9807      	ldr	r0, [sp, #28]
90007554:	f010 fbb0 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007558:	9907      	ldr	r1, [sp, #28]
9000755a:	9803      	ldr	r0, [sp, #12]
9000755c:	f00d fa3e 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007560:	4b4c      	ldr	r3, [pc, #304]	@ (90007694 <_ZN15Screen1ViewBaseC1Ev+0x1248>)
90007562:	9908      	ldr	r1, [sp, #32]
90007564:	4628      	mov	r0, r5
90007566:	f8c4 36b4 	str.w	r3, [r4, #1716]	@ 0x6b4
        color = newColor;
9000756a:	f8c4 a6e0 	str.w	sl, [r4, #1760]	@ 0x6e0
        linespace = space;
9000756e:	f8a4 66e4 	strh.w	r6, [r4, #1764]	@ 0x6e4
        boundingArea = calculateBoundingArea();
90007572:	f010 f907 	bl	90017784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90007576:	9808      	ldr	r0, [sp, #32]
90007578:	221b      	movs	r2, #27
    textArea10.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BWDK));
9000757a:	f10d 0e68 	add.w	lr, sp, #104	@ 0x68
9000757e:	f100 033c 	add.w	r3, r0, #60	@ 0x3c
90007582:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
90007586:	f8ad 206c 	strh.w	r2, [sp, #108]	@ 0x6c
9000758a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000758e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90007592:	4671      	mov	r1, lr
90007594:	9808      	ldr	r0, [sp, #32]
90007596:	f010 fb8f 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
9000759a:	9908      	ldr	r1, [sp, #32]
9000759c:	9803      	ldr	r0, [sp, #12]
9000759e:	f00d fa1d 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
900075a2:	4b3d      	ldr	r3, [pc, #244]	@ (90007698 <_ZN15Screen1ViewBaseC1Ev+0x124c>)
900075a4:	9909      	ldr	r1, [sp, #36]	@ 0x24
900075a6:	4628      	mov	r0, r5
900075a8:	f8c4 36fc 	str.w	r3, [r4, #1788]	@ 0x6fc
        color = newColor;
900075ac:	f8c4 a728 	str.w	sl, [r4, #1832]	@ 0x728
        linespace = space;
900075b0:	f8a4 672c 	strh.w	r6, [r4, #1836]	@ 0x72c
        boundingArea = calculateBoundingArea();
900075b4:	f010 f8e6 	bl	90017784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900075b8:	9809      	ldr	r0, [sp, #36]	@ 0x24
900075ba:	221a      	movs	r2, #26
    textArea11.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U5AC));
900075bc:	f10d 0e68 	add.w	lr, sp, #104	@ 0x68
900075c0:	f100 033c 	add.w	r3, r0, #60	@ 0x3c
900075c4:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
900075c8:	f8ad 206c 	strh.w	r2, [sp, #108]	@ 0x6c
900075cc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900075d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
900075d4:	4671      	mov	r1, lr
900075d6:	9809      	ldr	r0, [sp, #36]	@ 0x24
900075d8:	f010 fb6e 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900075dc:	9909      	ldr	r1, [sp, #36]	@ 0x24
900075de:	9803      	ldr	r0, [sp, #12]
900075e0:	f00d f9fc 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
900075e4:	4b2d      	ldr	r3, [pc, #180]	@ (9000769c <_ZN15Screen1ViewBaseC1Ev+0x1250>)
900075e6:	990a      	ldr	r1, [sp, #40]	@ 0x28
900075e8:	4628      	mov	r0, r5
900075ea:	f8c4 3744 	str.w	r3, [r4, #1860]	@ 0x744
        color = newColor;
900075ee:	f8c4 a770 	str.w	sl, [r4, #1904]	@ 0x770
        linespace = space;
900075f2:	f8a4 6774 	strh.w	r6, [r4, #1908]	@ 0x774
        boundingArea = calculateBoundingArea();
900075f6:	f010 f8c5 	bl	90017784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900075fa:	f04f 0c19 	mov.w	ip, #25
900075fe:	980a      	ldr	r0, [sp, #40]	@ 0x28
    textArea12.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DMSH));
90007600:	f10d 0e68 	add.w	lr, sp, #104	@ 0x68
90007604:	f8ad c06c 	strh.w	ip, [sp, #108]	@ 0x6c
90007608:	f100 033c 	add.w	r3, r0, #60	@ 0x3c
9000760c:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
90007610:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007614:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90007618:	4671      	mov	r1, lr
9000761a:	980a      	ldr	r0, [sp, #40]	@ 0x28
9000761c:	f010 fb4c 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007620:	990a      	ldr	r1, [sp, #40]	@ 0x28
90007622:	9803      	ldr	r0, [sp, #12]
90007624:	f00d f9da 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007628:	4b1d      	ldr	r3, [pc, #116]	@ (900076a0 <_ZN15Screen1ViewBaseC1Ev+0x1254>)
9000762a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9000762c:	4628      	mov	r0, r5
9000762e:	f8c4 378c 	str.w	r3, [r4, #1932]	@ 0x78c
        color = newColor;
90007632:	f8c4 a7b8 	str.w	sl, [r4, #1976]	@ 0x7b8
        linespace = space;
90007636:	f8a4 67bc 	strh.w	r6, [r4, #1980]	@ 0x7bc
        boundingArea = calculateBoundingArea();
9000763a:	f010 f8a3 	bl	90017784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
9000763e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
    textArea13.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CGL1));
90007640:	f10d 0e68 	add.w	lr, sp, #104	@ 0x68
90007644:	f8ad 906c 	strh.w	r9, [sp, #108]	@ 0x6c
90007648:	f100 033c 	add.w	r3, r0, #60	@ 0x3c
9000764c:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
90007650:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007654:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90007658:	4671      	mov	r1, lr
9000765a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9000765c:	f010 fb2c 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007660:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90007662:	9803      	ldr	r0, [sp, #12]
90007664:	f00d f9ba 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90007668:	e01c      	b.n	900076a4 <_ZN15Screen1ViewBaseC1Ev+0x1258>
9000766a:	bf00      	nop
9000766c:	004800af 	.word	0x004800af
90007670:	24027ef4 	.word	0x24027ef4
90007674:	24027ef8 	.word	0x24027ef8
90007678:	24027f00 	.word	0x24027f00
9000767c:	9002eeb4 	.word	0x9002eeb4
90007680:	00480151 	.word	0x00480151
90007684:	006e0011 	.word	0x006e0011
90007688:	006e00c3 	.word	0x006e00c3
9000768c:	009f0167 	.word	0x009f0167
90007690:	00d10024 	.word	0x00d10024
90007694:	00d100c8 	.word	0x00d100c8
90007698:	006e015f 	.word	0x006e015f
9000769c:	009f0020 	.word	0x009f0020
900076a0:	009f00af 	.word	0x009f00af
900076a4:	4bdd      	ldr	r3, [pc, #884]	@ (90007a1c <_ZN15Screen1ViewBaseC1Ev+0x15d0>)
900076a6:	990c      	ldr	r1, [sp, #48]	@ 0x30
900076a8:	4628      	mov	r0, r5
900076aa:	f8c4 37d4 	str.w	r3, [r4, #2004]	@ 0x7d4
        color = newColor;
900076ae:	f8c4 a800 	str.w	sl, [r4, #2048]	@ 0x800
        linespace = space;
900076b2:	f8a4 6804 	strh.w	r6, [r4, #2052]	@ 0x804
        boundingArea = calculateBoundingArea();
900076b6:	f010 f865 	bl	90017784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900076ba:	980c      	ldr	r0, [sp, #48]	@ 0x30
900076bc:	2217      	movs	r2, #23
    textArea14.setTypedText(touchgfx::TypedText(T___SINGLEUSE_R1TQ));
900076be:	f10d 0e68 	add.w	lr, sp, #104	@ 0x68
900076c2:	f100 033c 	add.w	r3, r0, #60	@ 0x3c
900076c6:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
900076ca:	f8ad 206c 	strh.w	r2, [sp, #108]	@ 0x6c
900076ce:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900076d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
900076d6:	4671      	mov	r1, lr
900076d8:	980c      	ldr	r0, [sp, #48]	@ 0x30
900076da:	f010 faed 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900076de:	990c      	ldr	r1, [sp, #48]	@ 0x30
900076e0:	9803      	ldr	r0, [sp, #12]
900076e2:	f00d f97b 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
900076e6:	4bce      	ldr	r3, [pc, #824]	@ (90007a20 <_ZN15Screen1ViewBaseC1Ev+0x15d4>)
        boundingArea = calculateBoundingArea();
900076e8:	4641      	mov	r1, r8
900076ea:	4628      	mov	r0, r5
900076ec:	f8c4 381c 	str.w	r3, [r4, #2076]	@ 0x81c
        rect.width = width;
900076f0:	237e      	movs	r3, #126	@ 0x7e
900076f2:	f8a4 3820 	strh.w	r3, [r4, #2080]	@ 0x820
900076f6:	f7fe fd9d 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
900076fa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900076fe:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90007702:	4641      	mov	r1, r8
90007704:	4628      	mov	r0, r5
        rect.height = height;
90007706:	f8a4 9822 	strh.w	r9, [r4, #2082]	@ 0x822
9000770a:	f7fe fd93 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000770e:	4ac5      	ldr	r2, [pc, #788]	@ (90007a24 <_ZN15Screen1ViewBaseC1Ev+0x15d8>)
90007710:	6813      	ldr	r3, [r2, #0]
90007712:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007716:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        color = newColor;
9000771a:	f8c4 a848 	str.w	sl, [r4, #2120]	@ 0x848
        linespace = space;
9000771e:	f8a4 684c 	strh.w	r6, [r4, #2124]	@ 0x84c
        boundingArea = calculateBoundingArea();
90007722:	f8c4 6854 	str.w	r6, [r4, #2132]	@ 0x854
90007726:	f8c4 a858 	str.w	sl, [r4, #2136]	@ 0x858
9000772a:	f8c4 685c 	str.w	r6, [r4, #2140]	@ 0x85c
9000772e:	2b00      	cmp	r3, #0
90007730:	f000 82fc 	beq.w	90007d2c <_ZN15Screen1ViewBaseC1Ev+0x18e0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90007734:	49bc      	ldr	r1, [pc, #752]	@ (90007a28 <_ZN15Screen1ViewBaseC1Ev+0x15dc>)
90007736:	880b      	ldrh	r3, [r1, #0]
90007738:	2b15      	cmp	r3, #21
9000773a:	f240 82f1 	bls.w	90007d20 <_ZN15Screen1ViewBaseC1Ev+0x18d4>
        return texts->getText(typedTextId);
9000773e:	4bbb      	ldr	r3, [pc, #748]	@ (90007a2c <_ZN15Screen1ViewBaseC1Ev+0x15e0>)
90007740:	2115      	movs	r1, #21
        boundingArea = calculateBoundingArea();
90007742:	f504 690a 	add.w	r9, r4, #2208	@ 0x8a0
90007746:	6818      	ldr	r0, [r3, #0]
90007748:	f001 fab8 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(textCoolTempBuffer, TEXTCOOLTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VWCY).getText());
9000774c:	9f04      	ldr	r7, [sp, #16]
9000774e:	4ab8      	ldr	r2, [pc, #736]	@ (90007a30 <_ZN15Screen1ViewBaseC1Ev+0x15e4>)
90007750:	4603      	mov	r3, r0
90007752:	210a      	movs	r1, #10
90007754:	4638      	mov	r0, r7
90007756:	f016 fbcd 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textCoolTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5GX5));
9000775a:	f10d 0e68 	add.w	lr, sp, #104	@ 0x68
        : typedTextId(id)
9000775e:	2316      	movs	r3, #22
90007760:	4640      	mov	r0, r8
90007762:	4671      	mov	r1, lr
90007764:	f8c4 7860 	str.w	r7, [r4, #2144]	@ 0x860
        rect.width = width;
90007768:	f04f 0783 	mov.w	r7, #131	@ 0x83
9000776c:	f8ad 306c 	strh.w	r3, [sp, #108]	@ 0x6c
90007770:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
90007774:	f010 faa0 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007778:	4641      	mov	r1, r8
9000777a:	9803      	ldr	r0, [sp, #12]
9000777c:	f00d f92e 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90007780:	4bac      	ldr	r3, [pc, #688]	@ (90007a34 <_ZN15Screen1ViewBaseC1Ev+0x15e8>)
        rect.width = width;
90007782:	f8a4 786c 	strh.w	r7, [r4, #2156]	@ 0x86c
    textIntakeTemp.setPosition(175, 121, 131, 25);
90007786:	f604 0764 	addw	r7, r4, #2148	@ 0x864
        rect.x = x;
9000778a:	f8c4 3868 	str.w	r3, [r4, #2152]	@ 0x868
9000778e:	4628      	mov	r0, r5
90007790:	4639      	mov	r1, r7
    Unicode::snprintf(textIntakeTempBuffer, TEXTINTAKETEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PGXL).getText());
90007792:	f604 383a 	addw	r8, r4, #2874	@ 0xb3a
90007796:	f7fe fd4d 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        rect.height = height;
9000779a:	f04f 0c19 	mov.w	ip, #25
9000779e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900077a2:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
900077a6:	4639      	mov	r1, r7
900077a8:	4628      	mov	r0, r5
900077aa:	f8a4 c86e 	strh.w	ip, [r4, #2158]	@ 0x86e
900077ae:	f7fe fd41 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900077b2:	4a9c      	ldr	r2, [pc, #624]	@ (90007a24 <_ZN15Screen1ViewBaseC1Ev+0x15d8>)
900077b4:	6813      	ldr	r3, [r2, #0]
900077b6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900077ba:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        color = newColor;
900077be:	f8c4 a894 	str.w	sl, [r4, #2196]	@ 0x894
        boundingArea = calculateBoundingArea();
900077c2:	f8c4 a8a4 	str.w	sl, [r4, #2212]	@ 0x8a4
        linespace = space;
900077c6:	f8a4 6898 	strh.w	r6, [r4, #2200]	@ 0x898
        boundingArea = calculateBoundingArea();
900077ca:	f8c4 68a0 	str.w	r6, [r4, #2208]	@ 0x8a0
900077ce:	f8c4 68a8 	str.w	r6, [r4, #2216]	@ 0x8a8
900077d2:	2b00      	cmp	r3, #0
900077d4:	f000 82aa 	beq.w	90007d2c <_ZN15Screen1ViewBaseC1Ev+0x18e0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900077d8:	4993      	ldr	r1, [pc, #588]	@ (90007a28 <_ZN15Screen1ViewBaseC1Ev+0x15dc>)
900077da:	880b      	ldrh	r3, [r1, #0]
900077dc:	2b13      	cmp	r3, #19
900077de:	f240 829f 	bls.w	90007d20 <_ZN15Screen1ViewBaseC1Ev+0x18d4>
        return texts->getText(typedTextId);
900077e2:	4b92      	ldr	r3, [pc, #584]	@ (90007a2c <_ZN15Screen1ViewBaseC1Ev+0x15e0>)
900077e4:	2113      	movs	r1, #19
    textIntakeTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8SKY));
900077e6:	ae1a      	add	r6, sp, #104	@ 0x68
        boundingArea = calculateBoundingArea();
900077e8:	f604 0aec 	addw	sl, r4, #2284	@ 0x8ec
900077ec:	6818      	ldr	r0, [r3, #0]
    Unicode::snprintf(textAmbientTempBuffer, TEXTAMBIENTTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TJJR).getText());
900077ee:	f604 394e 	addw	r9, r4, #2894	@ 0xb4e
900077f2:	f001 fa63 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(textIntakeTempBuffer, TEXTINTAKETEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PGXL).getText());
900077f6:	4a8e      	ldr	r2, [pc, #568]	@ (90007a30 <_ZN15Screen1ViewBaseC1Ev+0x15e4>)
900077f8:	4603      	mov	r3, r0
900077fa:	210a      	movs	r1, #10
900077fc:	4640      	mov	r0, r8
900077fe:	f016 fb79 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
90007802:	2314      	movs	r3, #20
    textIntakeTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8SKY));
90007804:	4631      	mov	r1, r6
90007806:	4638      	mov	r0, r7
90007808:	f8c4 88ac 	str.w	r8, [r4, #2220]	@ 0x8ac
        rect.width = width;
9000780c:	f04f 067f 	mov.w	r6, #127	@ 0x7f
90007810:	f8ad 306c 	strh.w	r3, [sp, #108]	@ 0x6c
    textAmbientTemp.setPosition(337, 121, 127, 25);
90007814:	f504 680b 	add.w	r8, r4, #2224	@ 0x8b0
90007818:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
    textIntakeTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8SKY));
9000781c:	f010 fa4c 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007820:	4639      	mov	r1, r7
90007822:	9803      	ldr	r0, [sp, #12]
90007824:	f00d f8da 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90007828:	4b83      	ldr	r3, [pc, #524]	@ (90007a38 <_ZN15Screen1ViewBaseC1Ev+0x15ec>)
9000782a:	4641      	mov	r1, r8
9000782c:	4628      	mov	r0, r5
9000782e:	f8c4 38b4 	str.w	r3, [r4, #2228]	@ 0x8b4
        color = newColor;
90007832:	f04f 37ff 	mov.w	r7, #4294967295
        rect.width = width;
90007836:	f8a4 68b8 	strh.w	r6, [r4, #2232]	@ 0x8b8
        linespace = space;
9000783a:	2600      	movs	r6, #0
        boundingArea = calculateBoundingArea();
9000783c:	f7fe fcfa 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        rect.height = height;
90007840:	f04f 0c19 	mov.w	ip, #25
90007844:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007848:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
9000784c:	4641      	mov	r1, r8
9000784e:	4628      	mov	r0, r5
90007850:	f8a4 c8ba 	strh.w	ip, [r4, #2234]	@ 0x8ba
90007854:	f7fe fcee 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90007858:	4a72      	ldr	r2, [pc, #456]	@ (90007a24 <_ZN15Screen1ViewBaseC1Ev+0x15d8>)
9000785a:	6813      	ldr	r3, [r2, #0]
9000785c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007860:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        color = newColor;
90007864:	f8c4 78e0 	str.w	r7, [r4, #2272]	@ 0x8e0
        linespace = space;
90007868:	f8a4 68e4 	strh.w	r6, [r4, #2276]	@ 0x8e4
        boundingArea = calculateBoundingArea();
9000786c:	f8c4 68ec 	str.w	r6, [r4, #2284]	@ 0x8ec
90007870:	f8c4 78f0 	str.w	r7, [r4, #2288]	@ 0x8f0
90007874:	f8c4 68f4 	str.w	r6, [r4, #2292]	@ 0x8f4
90007878:	2b00      	cmp	r3, #0
9000787a:	f000 8257 	beq.w	90007d2c <_ZN15Screen1ViewBaseC1Ev+0x18e0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000787e:	496a      	ldr	r1, [pc, #424]	@ (90007a28 <_ZN15Screen1ViewBaseC1Ev+0x15dc>)
90007880:	880b      	ldrh	r3, [r1, #0]
90007882:	2b11      	cmp	r3, #17
90007884:	f240 824c 	bls.w	90007d20 <_ZN15Screen1ViewBaseC1Ev+0x18d4>
        return texts->getText(typedTextId);
90007888:	4b68      	ldr	r3, [pc, #416]	@ (90007a2c <_ZN15Screen1ViewBaseC1Ev+0x15e0>)
9000788a:	2111      	movs	r1, #17
        boundingArea = calculateBoundingArea();
9000788c:	f604 1a38 	addw	sl, r4, #2360	@ 0x938
90007890:	6818      	ldr	r0, [r3, #0]
90007892:	f001 fa13 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(textAmbientTempBuffer, TEXTAMBIENTTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TJJR).getText());
90007896:	4a66      	ldr	r2, [pc, #408]	@ (90007a30 <_ZN15Screen1ViewBaseC1Ev+0x15e4>)
90007898:	4603      	mov	r3, r0
9000789a:	210a      	movs	r1, #10
9000789c:	4648      	mov	r0, r9
9000789e:	f016 fb29 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
900078a2:	f8c4 98f8 	str.w	r9, [r4, #2296]	@ 0x8f8
    textAmbientTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3B5Y));
900078a6:	f10d 0968 	add.w	r9, sp, #104	@ 0x68
        : typedTextId(id)
900078aa:	2312      	movs	r3, #18
900078ac:	4640      	mov	r0, r8
900078ae:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
900078b2:	4649      	mov	r1, r9
900078b4:	f8ad 306c 	strh.w	r3, [sp, #108]	@ 0x6c
900078b8:	f010 f9fe 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900078bc:	4641      	mov	r1, r8
900078be:	9803      	ldr	r0, [sp, #12]
    textMAFrate.setPosition(17, 172, 123, 25);
900078c0:	f604 08fc 	addw	r8, r4, #2300	@ 0x8fc
900078c4:	f00d f88a 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
900078c8:	4b5c      	ldr	r3, [pc, #368]	@ (90007a3c <_ZN15Screen1ViewBaseC1Ev+0x15f0>)
900078ca:	4641      	mov	r1, r8
900078cc:	4628      	mov	r0, r5
900078ce:	f8c4 3900 	str.w	r3, [r4, #2304]	@ 0x900
        rect.width = width;
900078d2:	237b      	movs	r3, #123	@ 0x7b
    Unicode::snprintf(textMAFrateBuffer, TEXTMAFRATE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_6SOY).getText());
900078d4:	f604 3962 	addw	r9, r4, #2914	@ 0xb62
900078d8:	f8a4 3904 	strh.w	r3, [r4, #2308]	@ 0x904
900078dc:	f7fe fcaa 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        rect.height = height;
900078e0:	f04f 0c19 	mov.w	ip, #25
900078e4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900078e8:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
900078ec:	4641      	mov	r1, r8
900078ee:	4628      	mov	r0, r5
900078f0:	f8a4 c906 	strh.w	ip, [r4, #2310]	@ 0x906
900078f4:	f7fe fc9e 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900078f8:	4a4a      	ldr	r2, [pc, #296]	@ (90007a24 <_ZN15Screen1ViewBaseC1Ev+0x15d8>)
900078fa:	6813      	ldr	r3, [r2, #0]
900078fc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007900:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        color = newColor;
90007904:	f8c4 792c 	str.w	r7, [r4, #2348]	@ 0x92c
        linespace = space;
90007908:	f8a4 6930 	strh.w	r6, [r4, #2352]	@ 0x930
        boundingArea = calculateBoundingArea();
9000790c:	f8c4 6938 	str.w	r6, [r4, #2360]	@ 0x938
90007910:	f8c4 793c 	str.w	r7, [r4, #2364]	@ 0x93c
90007914:	f8c4 6940 	str.w	r6, [r4, #2368]	@ 0x940
90007918:	2b00      	cmp	r3, #0
9000791a:	f000 8207 	beq.w	90007d2c <_ZN15Screen1ViewBaseC1Ev+0x18e0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000791e:	4942      	ldr	r1, [pc, #264]	@ (90007a28 <_ZN15Screen1ViewBaseC1Ev+0x15dc>)
90007920:	880b      	ldrh	r3, [r1, #0]
90007922:	2b0f      	cmp	r3, #15
90007924:	f240 81fc 	bls.w	90007d20 <_ZN15Screen1ViewBaseC1Ev+0x18d4>
        return texts->getText(typedTextId);
90007928:	4b40      	ldr	r3, [pc, #256]	@ (90007a2c <_ZN15Screen1ViewBaseC1Ev+0x15e0>)
9000792a:	210f      	movs	r1, #15
        boundingArea = calculateBoundingArea();
9000792c:	f604 1a84 	addw	sl, r4, #2436	@ 0x984
90007930:	6818      	ldr	r0, [r3, #0]
90007932:	f001 f9c3 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
90007936:	4a3e      	ldr	r2, [pc, #248]	@ (90007a30 <_ZN15Screen1ViewBaseC1Ev+0x15e4>)
90007938:	4603      	mov	r3, r0
9000793a:	2107      	movs	r1, #7
9000793c:	4648      	mov	r0, r9
9000793e:	f016 fad9 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
90007942:	f8c4 9944 	str.w	r9, [r4, #2372]	@ 0x944
    textMAFrate.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J4ZS));
90007946:	f10d 0968 	add.w	r9, sp, #104	@ 0x68
        : typedTextId(id)
9000794a:	2310      	movs	r3, #16
9000794c:	4640      	mov	r0, r8
9000794e:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
90007952:	4649      	mov	r1, r9
90007954:	f8ad 306c 	strh.w	r3, [sp, #108]	@ 0x6c
90007958:	f010 f9ae 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
9000795c:	4641      	mov	r1, r8
9000795e:	9803      	ldr	r0, [sp, #12]
    textManifoldPress.setPosition(175, 172, 131, 25);
90007960:	f604 1848 	addw	r8, r4, #2376	@ 0x948
90007964:	f00d f83a 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90007968:	4b35      	ldr	r3, [pc, #212]	@ (90007a40 <_ZN15Screen1ViewBaseC1Ev+0x15f4>)
9000796a:	4641      	mov	r1, r8
9000796c:	4628      	mov	r0, r5
9000796e:	f8c4 394c 	str.w	r3, [r4, #2380]	@ 0x94c
        rect.width = width;
90007972:	2383      	movs	r3, #131	@ 0x83
    Unicode::snprintf(textManifoldPressBuffer, TEXTMANIFOLDPRESS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9IZ8).getText());
90007974:	f504 6937 	add.w	r9, r4, #2928	@ 0xb70
90007978:	f8a4 3950 	strh.w	r3, [r4, #2384]	@ 0x950
9000797c:	f7fe fc5a 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        rect.height = height;
90007980:	f04f 0c19 	mov.w	ip, #25
90007984:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007988:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
9000798c:	4641      	mov	r1, r8
9000798e:	4628      	mov	r0, r5
90007990:	f8a4 c952 	strh.w	ip, [r4, #2386]	@ 0x952
90007994:	f7fe fc4e 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90007998:	4a22      	ldr	r2, [pc, #136]	@ (90007a24 <_ZN15Screen1ViewBaseC1Ev+0x15d8>)
9000799a:	6813      	ldr	r3, [r2, #0]
9000799c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900079a0:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        color = newColor;
900079a4:	f8c4 7978 	str.w	r7, [r4, #2424]	@ 0x978
        linespace = space;
900079a8:	f8a4 697c 	strh.w	r6, [r4, #2428]	@ 0x97c
        boundingArea = calculateBoundingArea();
900079ac:	f8c4 6984 	str.w	r6, [r4, #2436]	@ 0x984
900079b0:	f8c4 7988 	str.w	r7, [r4, #2440]	@ 0x988
900079b4:	f8c4 698c 	str.w	r6, [r4, #2444]	@ 0x98c
900079b8:	2b00      	cmp	r3, #0
900079ba:	f000 81b7 	beq.w	90007d2c <_ZN15Screen1ViewBaseC1Ev+0x18e0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900079be:	491a      	ldr	r1, [pc, #104]	@ (90007a28 <_ZN15Screen1ViewBaseC1Ev+0x15dc>)
900079c0:	880b      	ldrh	r3, [r1, #0]
900079c2:	2b0d      	cmp	r3, #13
900079c4:	f240 81ac 	bls.w	90007d20 <_ZN15Screen1ViewBaseC1Ev+0x18d4>
        return texts->getText(typedTextId);
900079c8:	4b18      	ldr	r3, [pc, #96]	@ (90007a2c <_ZN15Screen1ViewBaseC1Ev+0x15e0>)
900079ca:	210d      	movs	r1, #13
        boundingArea = calculateBoundingArea();
900079cc:	f504 6a1d 	add.w	sl, r4, #2512	@ 0x9d0
900079d0:	6818      	ldr	r0, [r3, #0]
900079d2:	f001 f973 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
900079d6:	4a16      	ldr	r2, [pc, #88]	@ (90007a30 <_ZN15Screen1ViewBaseC1Ev+0x15e4>)
900079d8:	4603      	mov	r3, r0
900079da:	210a      	movs	r1, #10
900079dc:	4648      	mov	r0, r9
900079de:	f016 fa89 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
900079e2:	f8c4 9990 	str.w	r9, [r4, #2448]	@ 0x990
    textManifoldPress.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EZ15));
900079e6:	f10d 0968 	add.w	r9, sp, #104	@ 0x68
        : typedTextId(id)
900079ea:	230e      	movs	r3, #14
900079ec:	4640      	mov	r0, r8
900079ee:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
900079f2:	4649      	mov	r1, r9
900079f4:	f8ad 306c 	strh.w	r3, [sp, #108]	@ 0x6c
900079f8:	f010 f95e 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900079fc:	4641      	mov	r1, r8
900079fe:	9803      	ldr	r0, [sp, #12]
    textFuelPress.setPosition(337, 172, 127, 25);
90007a00:	f604 1894 	addw	r8, r4, #2452	@ 0x994
90007a04:	f00c ffea 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90007a08:	4b0e      	ldr	r3, [pc, #56]	@ (90007a44 <_ZN15Screen1ViewBaseC1Ev+0x15f8>)
        rect.width = width;
90007a0a:	f04f 0e7f 	mov.w	lr, #127	@ 0x7f
90007a0e:	4641      	mov	r1, r8
        rect.x = x;
90007a10:	f8c4 3998 	str.w	r3, [r4, #2456]	@ 0x998
90007a14:	4628      	mov	r0, r5
        rect.width = width;
90007a16:	f8a4 e99c 	strh.w	lr, [r4, #2460]	@ 0x99c
90007a1a:	e015      	b.n	90007a48 <_ZN15Screen1ViewBaseC1Ev+0x15fc>
90007a1c:	00d1015f 	.word	0x00d1015f
90007a20:	007a0011 	.word	0x007a0011
90007a24:	24027ef4 	.word	0x24027ef4
90007a28:	24027ef8 	.word	0x24027ef8
90007a2c:	24027f00 	.word	0x24027f00
90007a30:	9002eeb4 	.word	0x9002eeb4
90007a34:	007900af 	.word	0x007900af
90007a38:	00790151 	.word	0x00790151
90007a3c:	00ac0011 	.word	0x00ac0011
90007a40:	00ac00af 	.word	0x00ac00af
90007a44:	00ac0151 	.word	0x00ac0151
    Unicode::snprintf(textFuelPressBuffer, TEXTFUELPRESS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_C425).getText());
90007a48:	f604 3984 	addw	r9, r4, #2948	@ 0xb84
90007a4c:	f7fe fbf2 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        rect.height = height;
90007a50:	f04f 0c19 	mov.w	ip, #25
90007a54:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007a58:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90007a5c:	4641      	mov	r1, r8
90007a5e:	4628      	mov	r0, r5
90007a60:	f8a4 c99e 	strh.w	ip, [r4, #2462]	@ 0x99e
90007a64:	f7fe fbe6 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90007a68:	4ab3      	ldr	r2, [pc, #716]	@ (90007d38 <_ZN15Screen1ViewBaseC1Ev+0x18ec>)
90007a6a:	6813      	ldr	r3, [r2, #0]
90007a6c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007a70:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        color = newColor;
90007a74:	f8c4 79c4 	str.w	r7, [r4, #2500]	@ 0x9c4
        linespace = space;
90007a78:	f8a4 69c8 	strh.w	r6, [r4, #2504]	@ 0x9c8
        boundingArea = calculateBoundingArea();
90007a7c:	f8c4 69d0 	str.w	r6, [r4, #2512]	@ 0x9d0
90007a80:	f8c4 79d4 	str.w	r7, [r4, #2516]	@ 0x9d4
90007a84:	f8c4 69d8 	str.w	r6, [r4, #2520]	@ 0x9d8
90007a88:	2b00      	cmp	r3, #0
90007a8a:	f000 814f 	beq.w	90007d2c <_ZN15Screen1ViewBaseC1Ev+0x18e0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90007a8e:	49ab      	ldr	r1, [pc, #684]	@ (90007d3c <_ZN15Screen1ViewBaseC1Ev+0x18f0>)
90007a90:	880b      	ldrh	r3, [r1, #0]
90007a92:	2b0b      	cmp	r3, #11
90007a94:	f240 8144 	bls.w	90007d20 <_ZN15Screen1ViewBaseC1Ev+0x18d4>
        return texts->getText(typedTextId);
90007a98:	4ba9      	ldr	r3, [pc, #676]	@ (90007d40 <_ZN15Screen1ViewBaseC1Ev+0x18f4>)
90007a9a:	210b      	movs	r1, #11
        boundingArea = calculateBoundingArea();
90007a9c:	f604 2a1c 	addw	sl, r4, #2588	@ 0xa1c
90007aa0:	6818      	ldr	r0, [r3, #0]
90007aa2:	f001 f90b 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
90007aa6:	4aa7      	ldr	r2, [pc, #668]	@ (90007d44 <_ZN15Screen1ViewBaseC1Ev+0x18f8>)
90007aa8:	4603      	mov	r3, r0
90007aaa:	210d      	movs	r1, #13
90007aac:	4648      	mov	r0, r9
90007aae:	f016 fa21 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textFuelPress.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3LEU));
90007ab2:	f10d 0c68 	add.w	ip, sp, #104	@ 0x68
        : typedTextId(id)
90007ab6:	230c      	movs	r3, #12
90007ab8:	4640      	mov	r0, r8
90007aba:	4661      	mov	r1, ip
90007abc:	f8c4 99dc 	str.w	r9, [r4, #2524]	@ 0x9dc
90007ac0:	f8ad 306c 	strh.w	r3, [sp, #108]	@ 0x6c
    Unicode::snprintf(textBaroPressBuffer, TEXTBAROPRESS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_656V).getText());
90007ac4:	f604 399e 	addw	r9, r4, #2974	@ 0xb9e
90007ac8:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
    textFuelPress.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3LEU));
90007acc:	f010 f8f4 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007ad0:	4641      	mov	r1, r8
90007ad2:	9803      	ldr	r0, [sp, #12]
90007ad4:	f00c ff82 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90007ad8:	4b9b      	ldr	r3, [pc, #620]	@ (90007d48 <_ZN15Screen1ViewBaseC1Ev+0x18fc>)
    textBaroPress.setPosition(17, 222, 126, 26);
90007ada:	f504 681e 	add.w	r8, r4, #2528	@ 0x9e0
90007ade:	4628      	mov	r0, r5
90007ae0:	f8c4 39e4 	str.w	r3, [r4, #2532]	@ 0x9e4
        rect.width = width;
90007ae4:	237e      	movs	r3, #126	@ 0x7e
90007ae6:	4641      	mov	r1, r8
90007ae8:	f8a4 39e8 	strh.w	r3, [r4, #2536]	@ 0x9e8
90007aec:	f7fe fba2 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        rect.height = height;
90007af0:	231a      	movs	r3, #26
90007af2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007af6:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90007afa:	4641      	mov	r1, r8
90007afc:	4628      	mov	r0, r5
90007afe:	f8a4 39ea 	strh.w	r3, [r4, #2538]	@ 0x9ea
90007b02:	f7fe fb97 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90007b06:	4a8c      	ldr	r2, [pc, #560]	@ (90007d38 <_ZN15Screen1ViewBaseC1Ev+0x18ec>)
90007b08:	6813      	ldr	r3, [r2, #0]
90007b0a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007b0e:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        color = newColor;
90007b12:	f8c4 7a10 	str.w	r7, [r4, #2576]	@ 0xa10
        boundingArea = calculateBoundingArea();
90007b16:	f8c4 7a20 	str.w	r7, [r4, #2592]	@ 0xa20
        linespace = space;
90007b1a:	f8a4 6a14 	strh.w	r6, [r4, #2580]	@ 0xa14
        boundingArea = calculateBoundingArea();
90007b1e:	f8c4 6a1c 	str.w	r6, [r4, #2588]	@ 0xa1c
90007b22:	f8c4 6a24 	str.w	r6, [r4, #2596]	@ 0xa24
90007b26:	2b00      	cmp	r3, #0
90007b28:	f000 8100 	beq.w	90007d2c <_ZN15Screen1ViewBaseC1Ev+0x18e0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90007b2c:	4983      	ldr	r1, [pc, #524]	@ (90007d3c <_ZN15Screen1ViewBaseC1Ev+0x18f0>)
90007b2e:	880b      	ldrh	r3, [r1, #0]
90007b30:	2b09      	cmp	r3, #9
90007b32:	f240 80f5 	bls.w	90007d20 <_ZN15Screen1ViewBaseC1Ev+0x18d4>
        return texts->getText(typedTextId);
90007b36:	4b82      	ldr	r3, [pc, #520]	@ (90007d40 <_ZN15Screen1ViewBaseC1Ev+0x18f4>)
90007b38:	2109      	movs	r1, #9
    textBaroPress.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S97P));
90007b3a:	ae1a      	add	r6, sp, #104	@ 0x68
        boundingArea = calculateBoundingArea();
90007b3c:	f604 2a68 	addw	sl, r4, #2664	@ 0xa68
90007b40:	6818      	ldr	r0, [r3, #0]
90007b42:	f001 f8bb 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(textBaroPressBuffer, TEXTBAROPRESS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_656V).getText());
90007b46:	4a7f      	ldr	r2, [pc, #508]	@ (90007d44 <_ZN15Screen1ViewBaseC1Ev+0x18f8>)
90007b48:	4603      	mov	r3, r0
90007b4a:	210a      	movs	r1, #10
90007b4c:	4648      	mov	r0, r9
90007b4e:	f016 f9d1 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
90007b52:	230a      	movs	r3, #10
    textBaroPress.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S97P));
90007b54:	4631      	mov	r1, r6
90007b56:	4640      	mov	r0, r8
90007b58:	f8c4 9a28 	str.w	r9, [r4, #2600]	@ 0xa28
        linespace = space;
90007b5c:	2600      	movs	r6, #0
90007b5e:	f8ad 306c 	strh.w	r3, [sp, #108]	@ 0x6c
    Unicode::snprintf(textCatalystTempBuffer, TEXTCATALYSTTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_6T1P).getText());
90007b62:	f604 39b2 	addw	r9, r4, #2994	@ 0xbb2
90007b66:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
    textBaroPress.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S97P));
90007b6a:	f010 f8a5 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007b6e:	4641      	mov	r1, r8
90007b70:	9803      	ldr	r0, [sp, #12]
90007b72:	f00c ff33 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90007b76:	4b75      	ldr	r3, [pc, #468]	@ (90007d4c <_ZN15Screen1ViewBaseC1Ev+0x1900>)
    textCatalystTemp.setPosition(175, 222, 131, 26);
90007b78:	f604 282c 	addw	r8, r4, #2604	@ 0xa2c
        boundingArea = calculateBoundingArea();
90007b7c:	4628      	mov	r0, r5
90007b7e:	f8c4 3a30 	str.w	r3, [r4, #2608]	@ 0xa30
        rect.width = width;
90007b82:	2383      	movs	r3, #131	@ 0x83
90007b84:	4641      	mov	r1, r8
90007b86:	f8a4 3a34 	strh.w	r3, [r4, #2612]	@ 0xa34
90007b8a:	f7fe fb53 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        rect.height = height;
90007b8e:	231a      	movs	r3, #26
90007b90:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007b94:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90007b98:	4641      	mov	r1, r8
90007b9a:	4628      	mov	r0, r5
90007b9c:	f8a4 3a36 	strh.w	r3, [r4, #2614]	@ 0xa36
90007ba0:	f7fe fb48 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90007ba4:	4a64      	ldr	r2, [pc, #400]	@ (90007d38 <_ZN15Screen1ViewBaseC1Ev+0x18ec>)
90007ba6:	6813      	ldr	r3, [r2, #0]
90007ba8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007bac:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        color = newColor;
90007bb0:	f8c4 7a5c 	str.w	r7, [r4, #2652]	@ 0xa5c
        linespace = space;
90007bb4:	f8a4 6a60 	strh.w	r6, [r4, #2656]	@ 0xa60
        boundingArea = calculateBoundingArea();
90007bb8:	f8c4 6a68 	str.w	r6, [r4, #2664]	@ 0xa68
90007bbc:	f8c4 7a6c 	str.w	r7, [r4, #2668]	@ 0xa6c
90007bc0:	f8c4 6a70 	str.w	r6, [r4, #2672]	@ 0xa70
90007bc4:	2b00      	cmp	r3, #0
90007bc6:	f000 80b1 	beq.w	90007d2c <_ZN15Screen1ViewBaseC1Ev+0x18e0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90007bca:	495c      	ldr	r1, [pc, #368]	@ (90007d3c <_ZN15Screen1ViewBaseC1Ev+0x18f0>)
90007bcc:	880b      	ldrh	r3, [r1, #0]
90007bce:	2b07      	cmp	r3, #7
90007bd0:	f240 80a6 	bls.w	90007d20 <_ZN15Screen1ViewBaseC1Ev+0x18d4>
        return texts->getText(typedTextId);
90007bd4:	4b5a      	ldr	r3, [pc, #360]	@ (90007d40 <_ZN15Screen1ViewBaseC1Ev+0x18f4>)
90007bd6:	2107      	movs	r1, #7
90007bd8:	6818      	ldr	r0, [r3, #0]
90007bda:	f001 f86f 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(textCatalystTempBuffer, TEXTCATALYSTTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_6T1P).getText());
90007bde:	4a59      	ldr	r2, [pc, #356]	@ (90007d44 <_ZN15Screen1ViewBaseC1Ev+0x18f8>)
90007be0:	4603      	mov	r3, r0
90007be2:	2107      	movs	r1, #7
90007be4:	4648      	mov	r0, r9
90007be6:	f016 f985 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textCatalystTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6FV0));
90007bea:	f10d 0c68 	add.w	ip, sp, #104	@ 0x68
90007bee:	f8c4 9a74 	str.w	r9, [r4, #2676]	@ 0xa74
        : typedTextId(id)
90007bf2:	f04f 0908 	mov.w	r9, #8
90007bf6:	4661      	mov	r1, ip
90007bf8:	4640      	mov	r0, r8
90007bfa:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
90007bfe:	f8ad 906c 	strh.w	r9, [sp, #108]	@ 0x6c
90007c02:	f010 f859 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007c06:	4641      	mov	r1, r8
90007c08:	9803      	ldr	r0, [sp, #12]
90007c0a:	f00c fee7 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90007c0e:	4b50      	ldr	r3, [pc, #320]	@ (90007d50 <_ZN15Screen1ViewBaseC1Ev+0x1904>)
    textOXYSensor1.setPosition(328, 228, 145, 20);
90007c10:	f604 2878 	addw	r8, r4, #2680	@ 0xa78
        boundingArea = calculateBoundingArea();
90007c14:	4628      	mov	r0, r5
90007c16:	f8c4 3a7c 	str.w	r3, [r4, #2684]	@ 0xa7c
        rect.width = width;
90007c1a:	2391      	movs	r3, #145	@ 0x91
90007c1c:	4641      	mov	r1, r8
90007c1e:	f8a4 3a80 	strh.w	r3, [r4, #2688]	@ 0xa80
90007c22:	f7fe fb07 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
    touchgfx::Unicode::snprintf(textOXYSensor1Buffer1, TEXTOXYSENSOR1BUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_O2LU).getText());
90007c26:	f504 603c 	add.w	r0, r4, #3008	@ 0xbc0
90007c2a:	f604 2cb4 	addw	ip, r4, #2740	@ 0xab4
        rect.height = height;
90007c2e:	2314      	movs	r3, #20
90007c30:	9004      	str	r0, [sp, #16]
90007c32:	46e2      	mov	sl, ip
90007c34:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007c38:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90007c3c:	4641      	mov	r1, r8
90007c3e:	4628      	mov	r0, r5
90007c40:	f8a4 3a82 	strh.w	r3, [r4, #2690]	@ 0xa82
90007c44:	f7fe faf6 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90007c48:	4a3b      	ldr	r2, [pc, #236]	@ (90007d38 <_ZN15Screen1ViewBaseC1Ev+0x18ec>)
90007c4a:	6813      	ldr	r3, [r2, #0]
90007c4c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007c50:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        color = newColor;
90007c54:	f8c4 7aa8 	str.w	r7, [r4, #2728]	@ 0xaa8
        boundingArea = calculateBoundingArea();
90007c58:	f8c4 7ab8 	str.w	r7, [r4, #2744]	@ 0xab8
        linespace = space;
90007c5c:	f8a4 6aac 	strh.w	r6, [r4, #2732]	@ 0xaac
        boundingArea = calculateBoundingArea();
90007c60:	f8c4 6ab4 	str.w	r6, [r4, #2740]	@ 0xab4
90007c64:	f8c4 6abc 	str.w	r6, [r4, #2748]	@ 0xabc
90007c68:	2b00      	cmp	r3, #0
90007c6a:	d05f      	beq.n	90007d2c <_ZN15Screen1ViewBaseC1Ev+0x18e0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90007c6c:	4933      	ldr	r1, [pc, #204]	@ (90007d3c <_ZN15Screen1ViewBaseC1Ev+0x18f0>)
90007c6e:	880b      	ldrh	r3, [r1, #0]
90007c70:	2b05      	cmp	r3, #5
90007c72:	d955      	bls.n	90007d20 <_ZN15Screen1ViewBaseC1Ev+0x18d4>
        return texts->getText(typedTextId);
90007c74:	4f32      	ldr	r7, [pc, #200]	@ (90007d40 <_ZN15Screen1ViewBaseC1Ev+0x18f4>)
90007c76:	2105      	movs	r1, #5
    touchgfx::Unicode::snprintf(textOXYSensor1Buffer2, TEXTOXYSENSOR1BUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M65H).getText());
90007c78:	f604 35ce 	addw	r5, r4, #3022	@ 0xbce
90007c7c:	6838      	ldr	r0, [r7, #0]
90007c7e:	f001 f81d 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
    touchgfx::Unicode::snprintf(textOXYSensor1Buffer1, TEXTOXYSENSOR1BUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_O2LU).getText());
90007c82:	f8dd a010 	ldr.w	sl, [sp, #16]
90007c86:	4603      	mov	r3, r0
90007c88:	4a2e      	ldr	r2, [pc, #184]	@ (90007d44 <_ZN15Screen1ViewBaseC1Ev+0x18f8>)
90007c8a:	2107      	movs	r1, #7
90007c8c:	4650      	mov	r0, sl
90007c8e:	f016 f931 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90007c92:	4a29      	ldr	r2, [pc, #164]	@ (90007d38 <_ZN15Screen1ViewBaseC1Ev+0x18ec>)
        wc1 = value;
90007c94:	f8c4 aac0 	str.w	sl, [r4, #2752]	@ 0xac0
90007c98:	6813      	ldr	r3, [r2, #0]
90007c9a:	2b00      	cmp	r3, #0
90007c9c:	d046      	beq.n	90007d2c <_ZN15Screen1ViewBaseC1Ev+0x18e0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90007c9e:	4927      	ldr	r1, [pc, #156]	@ (90007d3c <_ZN15Screen1ViewBaseC1Ev+0x18f0>)
90007ca0:	880b      	ldrh	r3, [r1, #0]
90007ca2:	2b04      	cmp	r3, #4
90007ca4:	d93c      	bls.n	90007d20 <_ZN15Screen1ViewBaseC1Ev+0x18d4>
        return texts->getText(typedTextId);
90007ca6:	6838      	ldr	r0, [r7, #0]
90007ca8:	2104      	movs	r1, #4
90007caa:	f001 f807 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
    touchgfx::Unicode::snprintf(textOXYSensor1Buffer2, TEXTOXYSENSOR1BUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M65H).getText());
90007cae:	4a25      	ldr	r2, [pc, #148]	@ (90007d44 <_ZN15Screen1ViewBaseC1Ev+0x18f8>)
90007cb0:	4603      	mov	r3, r0
90007cb2:	2106      	movs	r1, #6
90007cb4:	4628      	mov	r0, r5
90007cb6:	f016 f91d 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
90007cba:	2306      	movs	r3, #6
    textOXYSensor1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EVU0));
90007cbc:	a91a      	add	r1, sp, #104	@ 0x68
90007cbe:	4640      	mov	r0, r8
        wc2 = value;
90007cc0:	f8c4 5ac4 	str.w	r5, [r4, #2756]	@ 0xac4
90007cc4:	f8ad 306c 	strh.w	r3, [sp, #108]	@ 0x6c
90007cc8:	f8cd b068 	str.w	fp, [sp, #104]	@ 0x68
90007ccc:	f00f fff4 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007cd0:	9d03      	ldr	r5, [sp, #12]
90007cd2:	4641      	mov	r1, r8
90007cd4:	4628      	mov	r0, r5
90007cd6:	f00c fe81 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_LOGO_FRI_EN2_03_ID));
90007cda:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90007cdc:	a91a      	add	r1, sp, #104	@ 0x68
90007cde:	f8ad 9068 	strh.w	r9, [sp, #104]	@ 0x68
90007ce2:	4638      	mov	r0, r7
90007ce4:	f010 fbad 	bl	90018442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
90007ce8:	4b1a      	ldr	r3, [pc, #104]	@ (90007d54 <_ZN15Screen1ViewBaseC1Ev+0x1908>)
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007cea:	4631      	mov	r1, r6
90007cec:	4638      	mov	r0, r7
90007cee:	f8c4 3ad0 	str.w	r3, [r4, #2768]	@ 0xad0
90007cf2:	f8c4 6acc 	str.w	r6, [r4, #2764]	@ 0xacc
90007cf6:	f00f fa37 	bl	90017168 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007cfa:	4628      	mov	r0, r5
90007cfc:	4639      	mov	r1, r7
90007cfe:	f00c fe6d 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90007d02:	4620      	mov	r0, r4
90007d04:	b01d      	add	sp, #116	@ 0x74
90007d06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90007d0a:	4641      	mov	r1, r8
90007d0c:	4628      	mov	r0, r5
90007d0e:	4798      	blx	r3
90007d10:	f504 638b 	add.w	r3, r4, #1112	@ 0x458
90007d14:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90007d18:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90007d1c:	f7ff ba56 	b.w	900071cc <_ZN15Screen1ViewBaseC1Ev+0xd80>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90007d20:	4b0d      	ldr	r3, [pc, #52]	@ (90007d58 <_ZN15Screen1ViewBaseC1Ev+0x190c>)
90007d22:	2161      	movs	r1, #97	@ 0x61
90007d24:	4a0d      	ldr	r2, [pc, #52]	@ (90007d5c <_ZN15Screen1ViewBaseC1Ev+0x1910>)
90007d26:	480e      	ldr	r0, [pc, #56]	@ (90007d60 <_ZN15Screen1ViewBaseC1Ev+0x1914>)
90007d28:	f023 fdca 	bl	9002b8c0 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90007d2c:	4b0d      	ldr	r3, [pc, #52]	@ (90007d64 <_ZN15Screen1ViewBaseC1Ev+0x1918>)
90007d2e:	2160      	movs	r1, #96	@ 0x60
90007d30:	4a0a      	ldr	r2, [pc, #40]	@ (90007d5c <_ZN15Screen1ViewBaseC1Ev+0x1910>)
90007d32:	480b      	ldr	r0, [pc, #44]	@ (90007d60 <_ZN15Screen1ViewBaseC1Ev+0x1914>)
90007d34:	f023 fdc4 	bl	9002b8c0 <__assert_func>
90007d38:	24027ef4 	.word	0x24027ef4
90007d3c:	24027ef8 	.word	0x24027ef8
90007d40:	24027f00 	.word	0x24027f00
90007d44:	9002eeb4 	.word	0x9002eeb4
90007d48:	00de0011 	.word	0x00de0011
90007d4c:	00de00af 	.word	0x00de00af
90007d50:	00e40148 	.word	0x00e40148
90007d54:	002d0078 	.word	0x002d0078
90007d58:	9002ee28 	.word	0x9002ee28
90007d5c:	9002ee68 	.word	0x9002ee68
90007d60:	9002ede0 	.word	0x9002ede0
90007d64:	9002ed60 	.word	0x9002ed60

90007d68 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
     * @see setCenter
     */
    virtual void getCenter(int& x, int& y) const
    {
        x = gaugeCenterX;
        y = gaugeCenterY;
90007d68:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	@ 0x152
    virtual void getCenter(int& x, int& y) const
90007d6c:	b410      	push	{r4}
        x = gaugeCenterX;
90007d6e:	f9b0 4150 	ldrsh.w	r4, [r0, #336]	@ 0x150
90007d72:	600c      	str	r4, [r1, #0]
    }
90007d74:	f85d 4b04 	ldr.w	r4, [sp], #4
        y = gaugeCenterY;
90007d78:	6013      	str	r3, [r2, #0]
    }
90007d7a:	4770      	bx	lr

90007d7c <_ZN15Screen2ViewBase11setupScreenEv>:
}

void Screen2ViewBase::setupScreen()
{

}
90007d7c:	4770      	bx	lr
90007d7e:	bf00      	nop

90007d80 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90007d80:	4770      	bx	lr
90007d82:	bf00      	nop

90007d84 <_ZN8touchgfx13ClickListenerINS_5GaugeEED1Ev>:
 * receives a click event.
 *
 * @tparam T specifies the type to extend with the ClickListener behavior.
 */
template <class T>
class ClickListener : public T
90007d84:	4770      	bx	lr
90007d86:	bf00      	nop

90007d88 <_ZN8touchgfx13ClickListenerINS_5ImageEED1Ev>:
90007d88:	4770      	bx	lr
90007d8a:	bf00      	nop

90007d8c <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90007d8c:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90007d8e:	68c3      	ldr	r3, [r0, #12]
90007d90:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90007d94:	f013 0f01 	tst.w	r3, #1
90007d98:	eb04 0063 	add.w	r0, r4, r3, asr #1
90007d9c:	d004      	beq.n	90007da8 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
90007d9e:	ea4f 0c63 	mov.w	ip, r3, asr #1
90007da2:	f854 300c 	ldr.w	r3, [r4, ip]
90007da6:	589a      	ldr	r2, [r3, r2]
    }
90007da8:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90007dac:	4710      	bx	r2
90007dae:	bf00      	nop

90007db0 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90007db0:	6843      	ldr	r3, [r0, #4]
90007db2:	b13b      	cbz	r3, 90007dc4 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90007db4:	6883      	ldr	r3, [r0, #8]
90007db6:	b10b      	cbz	r3, 90007dbc <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90007db8:	2001      	movs	r0, #1
    }
90007dba:	4770      	bx	lr
90007dbc:	68c0      	ldr	r0, [r0, #12]
90007dbe:	f000 0001 	and.w	r0, r0, #1
90007dc2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90007dc4:	4618      	mov	r0, r3
90007dc6:	4770      	bx	lr

90007dc8 <_ZN8touchgfx13ClickListenerINS_5ImageEED0Ev>:
90007dc8:	b510      	push	{r4, lr}
90007dca:	4604      	mov	r4, r0
90007dcc:	2130      	movs	r1, #48	@ 0x30
90007dce:	f023 fb9a 	bl	9002b506 <_ZdlPvj>
90007dd2:	4620      	mov	r0, r4
90007dd4:	bd10      	pop	{r4, pc}
90007dd6:	bf00      	nop

90007dd8 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90007dd8:	b510      	push	{r4, lr}
90007dda:	4604      	mov	r4, r0
90007ddc:	2110      	movs	r1, #16
90007dde:	f023 fb92 	bl	9002b506 <_ZdlPvj>
90007de2:	4620      	mov	r0, r4
90007de4:	bd10      	pop	{r4, pc}
90007de6:	bf00      	nop

90007de8 <_ZN8touchgfx13ClickListenerINS_5GaugeEED0Ev>:
90007de8:	b510      	push	{r4, lr}
90007dea:	4604      	mov	r4, r0
90007dec:	f44f 71d2 	mov.w	r1, #420	@ 0x1a4
90007df0:	f023 fb89 	bl	9002b506 <_ZdlPvj>
90007df4:	4620      	mov	r0, r4
90007df6:	bd10      	pop	{r4, pc}

90007df8 <_ZN15Screen2ViewBaseD1Ev>:
Screen2ViewBase::~Screen2ViewBase()
90007df8:	4b03      	ldr	r3, [pc, #12]	@ (90007e08 <_ZN15Screen2ViewBaseD1Ev+0x10>)
90007dfa:	b510      	push	{r4, lr}
90007dfc:	4604      	mov	r4, r0
90007dfe:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90007e00:	f011 fa1a 	bl	90019238 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90007e04:	4620      	mov	r0, r4
90007e06:	bd10      	pop	{r4, pc}
90007e08:	9002f298 	.word	0x9002f298

90007e0c <_ZN15Screen2ViewBaseD0Ev>:
Screen2ViewBase::~Screen2ViewBase()
90007e0c:	4b06      	ldr	r3, [pc, #24]	@ (90007e28 <_ZN15Screen2ViewBaseD0Ev+0x1c>)
90007e0e:	b510      	push	{r4, lr}
90007e10:	4604      	mov	r4, r0
90007e12:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90007e14:	f011 fa10 	bl	90019238 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90007e18:	f242 3198 	movw	r1, #9112	@ 0x2398
90007e1c:	4620      	mov	r0, r4
90007e1e:	f023 fb72 	bl	9002b506 <_ZdlPvj>
90007e22:	4620      	mov	r0, r4
90007e24:	bd10      	pop	{r4, pc}
90007e26:	bf00      	nop
90007e28:	9002f298 	.word	0x9002f298

90007e2c <_ZNK8touchgfx5Image17invalidateContentEv>:

    virtual Rect getSolidRect() const;

    virtual void invalidateContent() const
    {
        if (alpha > 0)
90007e2c:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
90007e30:	b12a      	cbz	r2, 90007e3e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
        if (visible)
90007e32:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90007e36:	b112      	cbz	r2, 90007e3e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
            invalidate();
90007e38:	6803      	ldr	r3, [r0, #0]
90007e3a:	695b      	ldr	r3, [r3, #20]
90007e3c:	4718      	bx	r3
        {
            Widget::invalidateContent();
        }
    }
90007e3e:	4770      	bx	lr

90007e40 <_ZN8touchgfx13ClickListenerINS_5GaugeEE16handleClickEventERKNS_10ClickEventE>:
     * Ensures that the clickEvent is propagated to the super class T and to the clickAction
     * listener.
     *
     * @param  event Information about the click.
     */
    virtual void handleClickEvent(const ClickEvent& event)
90007e40:	b570      	push	{r4, r5, r6, lr}
90007e42:	4604      	mov	r4, r0
    {
        T::handleClickEvent(event);
        if (clickAction && clickAction->isValid())
90007e44:	f8d0 01a0 	ldr.w	r0, [r0, #416]	@ 0x1a0
90007e48:	b168      	cbz	r0, 90007e66 <_ZN8touchgfx13ClickListenerINS_5GaugeEE16handleClickEventERKNS_10ClickEventE+0x26>
90007e4a:	6803      	ldr	r3, [r0, #0]
90007e4c:	460d      	mov	r5, r1
90007e4e:	68db      	ldr	r3, [r3, #12]
90007e50:	4798      	blx	r3
90007e52:	b140      	cbz	r0, 90007e66 <_ZN8touchgfx13ClickListenerINS_5GaugeEE16handleClickEventERKNS_10ClickEventE+0x26>
        {
            clickAction->execute(*this, event);
90007e54:	f8d4 01a0 	ldr.w	r0, [r4, #416]	@ 0x1a0
90007e58:	462a      	mov	r2, r5
90007e5a:	4621      	mov	r1, r4
90007e5c:	6803      	ldr	r3, [r0, #0]
        }
    }
90007e5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            clickAction->execute(*this, event);
90007e62:	689b      	ldr	r3, [r3, #8]
90007e64:	4718      	bx	r3
    }
90007e66:	bd70      	pop	{r4, r5, r6, pc}

90007e68 <_ZN8touchgfx13ClickListenerINS_5ImageEE16handleClickEventERKNS_10ClickEventE>:
    virtual void handleClickEvent(const ClickEvent& event)
90007e68:	b570      	push	{r4, r5, r6, lr}
90007e6a:	4604      	mov	r4, r0
        if (clickAction && clickAction->isValid())
90007e6c:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
90007e6e:	b160      	cbz	r0, 90007e8a <_ZN8touchgfx13ClickListenerINS_5ImageEE16handleClickEventERKNS_10ClickEventE+0x22>
90007e70:	6803      	ldr	r3, [r0, #0]
90007e72:	460d      	mov	r5, r1
90007e74:	68db      	ldr	r3, [r3, #12]
90007e76:	4798      	blx	r3
90007e78:	b138      	cbz	r0, 90007e8a <_ZN8touchgfx13ClickListenerINS_5ImageEE16handleClickEventERKNS_10ClickEventE+0x22>
            clickAction->execute(*this, event);
90007e7a:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90007e7c:	462a      	mov	r2, r5
90007e7e:	4621      	mov	r1, r4
90007e80:	6803      	ldr	r3, [r0, #0]
    }
90007e82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            clickAction->execute(*this, event);
90007e86:	689b      	ldr	r3, [r3, #8]
90007e88:	4718      	bx	r3
    }
90007e8a:	bd70      	pop	{r4, r5, r6, pc}

90007e8c <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithIcon1)
90007e8c:	30e4      	adds	r0, #228	@ 0xe4
90007e8e:	4288      	cmp	r0, r1
90007e90:	d000      	beq.n	90007e94 <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x8>
90007e92:	4770      	bx	lr
{
90007e94:	b508      	push	{r3, lr}
    virtual ~Screen2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90007e96:	f012 feb1 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithIcon1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenCoverTransitionEast();
    }
}
90007e9a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenCoverTransitionEast();
90007e9e:	f7fe b901 	b.w	900060a4 <_ZN23FrontendApplicationBase36gotoScreen1ScreenCoverTransitionEastEv>
90007ea2:	bf00      	nop

90007ea4 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
     */
    virtual void setAlpha(uint8_t newAlpha);

    virtual void invalidateContent() const
    {
        if (getAlpha() > 0)
90007ea4:	6803      	ldr	r3, [r0, #0]
    virtual void invalidateContent() const
90007ea6:	b510      	push	{r4, lr}
        if (getAlpha() > 0)
90007ea8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
    virtual void invalidateContent() const
90007eac:	4604      	mov	r4, r0
        if (getAlpha() > 0)
90007eae:	4798      	blx	r3
90007eb0:	b900      	cbnz	r0, 90007eb4 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x10>
        {
            AbstractProgressIndicator::invalidateContent();
        }
    }
90007eb2:	bd10      	pop	{r4, pc}

    virtual void handleTickEvent();

    virtual void invalidateContent() const
    {
        if (getAlpha() > 0)
90007eb4:	6823      	ldr	r3, [r4, #0]
90007eb6:	4620      	mov	r0, r4
90007eb8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
90007ebc:	4798      	blx	r3
90007ebe:	2800      	cmp	r0, #0
90007ec0:	d0f7      	beq.n	90007eb2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0xe>
        if (visible)
90007ec2:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90007ec6:	2b00      	cmp	r3, #0
90007ec8:	d0f3      	beq.n	90007eb2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0xe>
            invalidate();
90007eca:	6823      	ldr	r3, [r4, #0]
90007ecc:	4620      	mov	r0, r4
90007ece:	695b      	ldr	r3, [r3, #20]
90007ed0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90007ed4:	4718      	bx	r3
90007ed6:	bf00      	nop

90007ed8 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase() :
90007ed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90007edc:	b099      	sub	sp, #100	@ 0x64
90007ede:	4604      	mov	r4, r0
90007ee0:	f014 fad8 	bl	9001c494 <_ZN8touchgfx6ScreenC1Ev>
        : Widget(), alpha(255), color(0)
90007ee4:	4b4a      	ldr	r3, [pc, #296]	@ (90008010 <_ZN15Screen2ViewBaseC1Ev+0x138>)
90007ee6:	2500      	movs	r5, #0
    buttonCallback(this, &Screen2ViewBase::buttonCallbackHandler)
90007ee8:	4a4a      	ldr	r2, [pc, #296]	@ (90008014 <_ZN15Screen2ViewBaseC1Ev+0x13c>)
90007eea:	6423      	str	r3, [r4, #64]	@ 0x40
        : T(), clickAction(0)
90007eec:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
90007ef0:	f64f 76ff 	movw	r6, #65535	@ 0xffff
          touchable(false),
90007ef4:	f44f 7880 	mov.w	r8, #256	@ 0x100
90007ef8:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90007efc:	4618      	mov	r0, r3
90007efe:	9308      	str	r3, [sp, #32]
        Image::setBitmap(bmp);
90007f00:	a916      	add	r1, sp, #88	@ 0x58
        : Widget(), bitmap(bmp), alpha(255)
90007f02:	4b45      	ldr	r3, [pc, #276]	@ (90008018 <_ZN15Screen2ViewBaseC1Ev+0x140>)
        touchable = touch;
90007f04:	2701      	movs	r7, #1
90007f06:	6022      	str	r2, [r4, #0]
90007f08:	f884 9066 	strb.w	r9, [r4, #102]	@ 0x66
90007f0c:	f8a4 6092 	strh.w	r6, [r4, #146]	@ 0x92
90007f10:	f884 6094 	strb.w	r6, [r4, #148]	@ 0x94
90007f14:	66e3      	str	r3, [r4, #108]	@ 0x6c
90007f16:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : x(0), y(0), width(0), height(0)
90007f18:	6465      	str	r5, [r4, #68]	@ 0x44
          cachedAbsX(0),
90007f1a:	6625      	str	r5, [r4, #96]	@ 0x60
          touchable(false),
90007f1c:	f8a4 8064 	strh.w	r8, [r4, #100]	@ 0x64
        : color(col)
90007f20:	66a5      	str	r5, [r4, #104]	@ 0x68
        : x(0), y(0), width(0), height(0)
90007f22:	6725      	str	r5, [r4, #112]	@ 0x70
          cachedAbsX(0),
90007f24:	f8c4 508c 	str.w	r5, [r4, #140]	@ 0x8c
          touchable(false),
90007f28:	f8a4 8090 	strh.w	r8, [r4, #144]	@ 0x90
90007f2c:	f8ad 6058 	strh.w	r6, [sp, #88]	@ 0x58
90007f30:	e9c4 5512 	strd	r5, r5, [r4, #72]	@ 0x48
          parent(0),
90007f34:	e9c4 5514 	strd	r5, r5, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
90007f38:	e9c4 5516 	strd	r5, r5, [r4, #88]	@ 0x58
90007f3c:	e9c4 551d 	strd	r5, r5, [r4, #116]	@ 0x74
          parent(0),
90007f40:	e9c4 551f 	strd	r5, r5, [r4, #124]	@ 0x7c
          nextDrawChainElement(0),
90007f44:	e9c4 5521 	strd	r5, r5, [r4, #132]	@ 0x84
        Image::setBitmap(bmp);
90007f48:	f010 fa7b 	bl	90018442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90007f4c:	4b33      	ldr	r3, [pc, #204]	@ (9000801c <_ZN15Screen2ViewBaseC1Ev+0x144>)
        : typedTextId(id)
90007f4e:	f8a4 60c8 	strh.w	r6, [r4, #200]	@ 0xc8
90007f52:	f504 7690 	add.w	r6, r4, #288	@ 0x120
90007f56:	66e3      	str	r3, [r4, #108]	@ 0x6c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90007f58:	4b31      	ldr	r3, [pc, #196]	@ (90008020 <_ZN15Screen2ViewBaseC1Ev+0x148>)
90007f5a:	f8c4 90d2 	str.w	r9, [r4, #210]	@ 0xd2
90007f5e:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
90007f62:	4b30      	ldr	r3, [pc, #192]	@ (90008024 <_ZN15Screen2ViewBaseC1Ev+0x14c>)
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90007f64:	f8df 90d8 	ldr.w	r9, [pc, #216]	@ 90008040 <_ZN15Screen2ViewBaseC1Ev+0x168>
90007f68:	f8c4 30c4 	str.w	r3, [r4, #196]	@ 0xc4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90007f6c:	f04f 33ff 	mov.w	r3, #4294967295
          touchable(false),
90007f70:	f8a4 80c0 	strh.w	r8, [r4, #192]	@ 0xc0
90007f74:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
90007f78:	f104 03e4 	add.w	r3, r4, #228	@ 0xe4
90007f7c:	f8c4 5098 	str.w	r5, [r4, #152]	@ 0x98
90007f80:	4618      	mov	r0, r3
        touchable = touch;
90007f82:	f884 7090 	strb.w	r7, [r4, #144]	@ 0x90
        : color(col)
90007f86:	f8c4 50cc 	str.w	r5, [r4, #204]	@ 0xcc
90007f8a:	f8a4 50d0 	strh.w	r5, [r4, #208]	@ 0xd0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90007f8e:	f8c4 50d8 	str.w	r5, [r4, #216]	@ 0xd8
              text(0)
90007f92:	f8c4 50e0 	str.w	r5, [r4, #224]	@ 0xe0
90007f96:	9304      	str	r3, [sp, #16]
        : x(0), y(0), width(0), height(0)
90007f98:	e9c4 5528 	strd	r5, r5, [r4, #160]	@ 0xa0
90007f9c:	e9c4 552a 	strd	r5, r5, [r4, #168]	@ 0xa8
          nextSibling(0),
90007fa0:	e9c4 552c 	strd	r5, r5, [r4, #176]	@ 0xb0
          cachedAbsX(0),
90007fa4:	e9c4 552e 	strd	r5, r5, [r4, #184]	@ 0xb8
90007fa8:	f010 fa24 	bl	900183f4 <_ZN8touchgfx14ButtonWithIconC1Ev>
90007fac:	4630      	mov	r0, r6
90007fae:	f00f ff1d 	bl	90017dec <_ZN8touchgfx5GaugeC1Ev>
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90007fb2:	491d      	ldr	r1, [pc, #116]	@ (90008028 <_ZN15Screen2ViewBaseC1Ev+0x150>)
90007fb4:	f104 009c 	add.w	r0, r4, #156	@ 0x9c
90007fb8:	f8d9 3000 	ldr.w	r3, [r9]
90007fbc:	4a1b      	ldr	r2, [pc, #108]	@ (9000802c <_ZN15Screen2ViewBaseC1Ev+0x154>)
90007fbe:	f8c4 12c4 	str.w	r1, [r4, #708]	@ 0x2c4
90007fc2:	9003      	str	r0, [sp, #12]
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
90007fc4:	f504 7031 	add.w	r0, r4, #708	@ 0x2c4
90007fc8:	f893 1076 	ldrb.w	r1, [r3, #118]	@ 0x76
90007fcc:	f8c4 52c0 	str.w	r5, [r4, #704]	@ 0x2c0
        : widgetWidth(0)
90007fd0:	f8a4 52c8 	strh.w	r5, [r4, #712]	@ 0x2c8
        touchable = touch;
90007fd4:	f884 7144 	strb.w	r7, [r4, #324]	@ 0x144
90007fd8:	f8c4 2120 	str.w	r2, [r4, #288]	@ 0x120
90007fdc:	9007      	str	r0, [sp, #28]
90007fde:	b389      	cbz	r1, 90008044 <_ZN15Screen2ViewBaseC1Ev+0x16c>
90007fe0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90007fe2:	2800      	cmp	r0, #0
90007fe4:	f000 83fa 	beq.w	900087dc <_ZN15Screen2ViewBaseC1Ev+0x904>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90007fe8:	6803      	ldr	r3, [r0, #0]
90007fea:	4d11      	ldr	r5, [pc, #68]	@ (90008030 <_ZN15Screen2ViewBaseC1Ev+0x158>)
90007fec:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
90007fee:	42a9      	cmp	r1, r5
90007ff0:	d035      	beq.n	9000805e <_ZN15Screen2ViewBaseC1Ev+0x186>
90007ff2:	4788      	blx	r1
        return auxiliaryLCD;
90007ff4:	f8d9 3000 	ldr.w	r3, [r9]
90007ff8:	fab0 f780 	clz	r7, r0
90007ffc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90007ffe:	097f      	lsrs	r7, r7, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90008000:	bb40      	cbnz	r0, 90008054 <_ZN15Screen2ViewBaseC1Ev+0x17c>
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90008002:	bb67      	cbnz	r7, 9000805e <_ZN15Screen2ViewBaseC1Ev+0x186>
90008004:	4b0b      	ldr	r3, [pc, #44]	@ (90008034 <_ZN15Screen2ViewBaseC1Ev+0x15c>)
90008006:	212c      	movs	r1, #44	@ 0x2c
90008008:	4a0b      	ldr	r2, [pc, #44]	@ (90008038 <_ZN15Screen2ViewBaseC1Ev+0x160>)
9000800a:	480c      	ldr	r0, [pc, #48]	@ (9000803c <_ZN15Screen2ViewBaseC1Ev+0x164>)
9000800c:	f023 fc58 	bl	9002b8c0 <__assert_func>
90008010:	90030394 	.word	0x90030394
90008014:	9002f298 	.word	0x9002f298
90008018:	900305c4 	.word	0x900305c4
9000801c:	9002f12c 	.word	0x9002f12c
90008020:	90030304 	.word	0x90030304
90008024:	9002e6fc 	.word	0x9002e6fc
90008028:	9002e298 	.word	0x9002e298
9000802c:	9002f198 	.word	0x9002f198
90008030:	90003921 	.word	0x90003921
90008034:	9002f024 	.word	0x9002f024
90008038:	9002f084 	.word	0x9002f084
9000803c:	9002f0c0 	.word	0x9002f0c0
90008040:	24027e9c 	.word	0x24027e9c
        return instance->lcdRef;
90008044:	6898      	ldr	r0, [r3, #8]
90008046:	4dd2      	ldr	r5, [pc, #840]	@ (90008390 <_ZN15Screen2ViewBaseC1Ev+0x4b8>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90008048:	6801      	ldr	r1, [r0, #0]
9000804a:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
9000804c:	42a9      	cmp	r1, r5
9000804e:	d1d0      	bne.n	90007ff2 <_ZN15Screen2ViewBaseC1Ev+0x11a>
        return auxiliaryLCD;
90008050:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90008052:	b120      	cbz	r0, 9000805e <_ZN15Screen2ViewBaseC1Ev+0x186>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90008054:	6803      	ldr	r3, [r0, #0]
90008056:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90008058:	42ab      	cmp	r3, r5
9000805a:	f040 8440 	bne.w	900088de <_ZN15Screen2ViewBaseC1Ev+0xa06>
9000805e:	f8df 835c 	ldr.w	r8, [pc, #860]	@ 900083bc <_ZN15Screen2ViewBaseC1Ev+0x4e4>
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
90008062:	2300      	movs	r3, #0
90008064:	f504 7b36 	add.w	fp, r4, #728	@ 0x2d8
90008068:	f504 776f 	add.w	r7, r4, #956	@ 0x3bc
9000806c:	f108 0a24 	add.w	sl, r8, #36	@ 0x24
90008070:	f8c4 32d0 	str.w	r3, [r4, #720]	@ 0x2d0
90008074:	f504 63ac 	add.w	r3, r4, #1376	@ 0x560
90008078:	4658      	mov	r0, fp
9000807a:	f8c4 82c4 	str.w	r8, [r4, #708]	@ 0x2c4
9000807e:	f8c4 a2cc 	str.w	sl, [r4, #716]	@ 0x2cc
90008082:	930a      	str	r3, [sp, #40]	@ 0x28
90008084:	f00c fa70 	bl	90014568 <_ZN8touchgfx11BoxProgressC1Ev>
90008088:	4638      	mov	r0, r7
9000808a:	f00f feaf 	bl	90017dec <_ZN8touchgfx5GaugeC1Ev>
9000808e:	2300      	movs	r3, #0
90008090:	4ac0      	ldr	r2, [pc, #768]	@ (90008394 <_ZN15Screen2ViewBaseC1Ev+0x4bc>)
90008092:	f8c4 355c 	str.w	r3, [r4, #1372]	@ 0x55c
90008096:	f8c4 23bc 	str.w	r2, [r4, #956]	@ 0x3bc
        : widgetWidth(0)
9000809a:	f8a4 3564 	strh.w	r3, [r4, #1380]	@ 0x564
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000809e:	f8d9 2000 	ldr.w	r2, [r9]
        : AbstractPainter()
900080a2:	4bbd      	ldr	r3, [pc, #756]	@ (90008398 <_ZN15Screen2ViewBaseC1Ev+0x4c0>)
900080a4:	f892 1076 	ldrb.w	r1, [r2, #118]	@ 0x76
900080a8:	f8c4 3560 	str.w	r3, [r4, #1376]	@ 0x560
900080ac:	2301      	movs	r3, #1
900080ae:	f884 33e0 	strb.w	r3, [r4, #992]	@ 0x3e0
900080b2:	2900      	cmp	r1, #0
900080b4:	f000 839a 	beq.w	900087ec <_ZN15Screen2ViewBaseC1Ev+0x914>
900080b8:	6cd0      	ldr	r0, [r2, #76]	@ 0x4c
900080ba:	b900      	cbnz	r0, 900080be <_ZN15Screen2ViewBaseC1Ev+0x1e6>
        return instance->lcdRef;
900080bc:	6890      	ldr	r0, [r2, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
900080be:	6803      	ldr	r3, [r0, #0]
900080c0:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
900080c2:	42a9      	cmp	r1, r5
900080c4:	f040 83e3 	bne.w	9000888e <_ZN15Screen2ViewBaseC1Ev+0x9b6>
900080c8:	2300      	movs	r3, #0
900080ca:	f204 5074 	addw	r0, r4, #1396	@ 0x574
900080ce:	f8c4 8560 	str.w	r8, [r4, #1376]	@ 0x560
900080d2:	f8c4 356c 	str.w	r3, [r4, #1388]	@ 0x56c
900080d6:	f204 53e4 	addw	r3, r4, #1508	@ 0x5e4
900080da:	f8c4 a568 	str.w	sl, [r4, #1384]	@ 0x568
900080de:	9309      	str	r3, [sp, #36]	@ 0x24
900080e0:	9005      	str	r0, [sp, #20]
900080e2:	f00e fdb7 	bl	90016c54 <_ZN8touchgfx4LineC1Ev>
        : widgetWidth(0)
900080e6:	2300      	movs	r3, #0
900080e8:	f8a4 35e8 	strh.w	r3, [r4, #1512]	@ 0x5e8
900080ec:	4baa      	ldr	r3, [pc, #680]	@ (90008398 <_ZN15Screen2ViewBaseC1Ev+0x4c0>)
900080ee:	f8c4 35e4 	str.w	r3, [r4, #1508]	@ 0x5e4
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900080f2:	f8d9 3000 	ldr.w	r3, [r9]
900080f6:	f893 2076 	ldrb.w	r2, [r3, #118]	@ 0x76
900080fa:	2a00      	cmp	r2, #0
900080fc:	f000 8390 	beq.w	90008820 <_ZN15Screen2ViewBaseC1Ev+0x948>
90008100:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90008102:	b900      	cbnz	r0, 90008106 <_ZN15Screen2ViewBaseC1Ev+0x22e>
        return instance->lcdRef;
90008104:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90008106:	6803      	ldr	r3, [r0, #0]
90008108:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000810a:	42aa      	cmp	r2, r5
9000810c:	f040 83cd 	bne.w	900088aa <_ZN15Screen2ViewBaseC1Ev+0x9d2>
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90008110:	f04f 32ff 	mov.w	r2, #4294967295
90008114:	4ba1      	ldr	r3, [pc, #644]	@ (9000839c <_ZN15Screen2ViewBaseC1Ev+0x4c4>)
90008116:	a916      	add	r1, sp, #88	@ 0x58
90008118:	f8c4 85e4 	str.w	r8, [r4, #1508]	@ 0x5e4
9000811c:	f8c4 2638 	str.w	r2, [r4, #1592]	@ 0x638
90008120:	f8ad 2058 	strh.w	r2, [sp, #88]	@ 0x58
          touchable(false),
90008124:	f44f 7280 	mov.w	r2, #256	@ 0x100
90008128:	f8c4 3620 	str.w	r3, [r4, #1568]	@ 0x620
9000812c:	2300      	movs	r3, #0
9000812e:	f8a4 261c 	strh.w	r2, [r4, #1564]	@ 0x61c
90008132:	f64f 72ff 	movw	r2, #65535	@ 0xffff
90008136:	f8c4 35f0 	str.w	r3, [r4, #1520]	@ 0x5f0
9000813a:	f8a4 2624 	strh.w	r2, [r4, #1572]	@ 0x624
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000813e:	22ff      	movs	r2, #255	@ 0xff
        : x(0), y(0), width(0), height(0)
90008140:	f8c4 35fc 	str.w	r3, [r4, #1532]	@ 0x5fc
90008144:	f8c4 262e 	str.w	r2, [r4, #1582]	@ 0x62e
        : TextAreaWithWildcardBase(), wc1(0)
90008148:	4a95      	ldr	r2, [pc, #596]	@ (900083a0 <_ZN15Screen2ViewBaseC1Ev+0x4c8>)
9000814a:	f8c4 3600 	str.w	r3, [r4, #1536]	@ 0x600
9000814e:	f8c4 3604 	str.w	r3, [r4, #1540]	@ 0x604
90008152:	f8c4 3608 	str.w	r3, [r4, #1544]	@ 0x608
          parent(0),
90008156:	f8c4 360c 	str.w	r3, [r4, #1548]	@ 0x60c
          nextSibling(0),
9000815a:	f8c4 3610 	str.w	r3, [r4, #1552]	@ 0x610
          nextDrawChainElement(0),
9000815e:	f8c4 3614 	str.w	r3, [r4, #1556]	@ 0x614
          cachedAbsX(0),
90008162:	f8c4 3618 	str.w	r3, [r4, #1560]	@ 0x618
        : color(col)
90008166:	f8c4 3628 	str.w	r3, [r4, #1576]	@ 0x628
9000816a:	f8a4 362c 	strh.w	r3, [r4, #1580]	@ 0x62c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000816e:	f8c4 3634 	str.w	r3, [r4, #1588]	@ 0x634
              text(0)
90008172:	f8c4 363c 	str.w	r3, [r4, #1596]	@ 0x63c
90008176:	f8c4 3640 	str.w	r3, [r4, #1600]	@ 0x640
9000817a:	f204 6344 	addw	r3, r4, #1604	@ 0x644
9000817e:	f8c4 25f8 	str.w	r2, [r4, #1528]	@ 0x5f8
90008182:	f504 62ce 	add.w	r2, r4, #1648	@ 0x670
90008186:	4618      	mov	r0, r3
90008188:	f8c4 a5ec 	str.w	sl, [r4, #1516]	@ 0x5ec
9000818c:	930b      	str	r3, [sp, #44]	@ 0x2c
9000818e:	9206      	str	r2, [sp, #24]
90008190:	f00f f824 	bl	900171dc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90008194:	9806      	ldr	r0, [sp, #24]
90008196:	f00d fe4b 	bl	90015e30 <_ZN8touchgfx6CircleC1Ev>
        : widgetWidth(0)
9000819a:	2300      	movs	r3, #0
9000819c:	f504 62d7 	add.w	r2, r4, #1720	@ 0x6b8
900081a0:	f8a4 36bc 	strh.w	r3, [r4, #1724]	@ 0x6bc
900081a4:	4b7c      	ldr	r3, [pc, #496]	@ (90008398 <_ZN15Screen2ViewBaseC1Ev+0x4c0>)
900081a6:	920c      	str	r2, [sp, #48]	@ 0x30
900081a8:	f8c4 36b8 	str.w	r3, [r4, #1720]	@ 0x6b8
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900081ac:	f8d9 3000 	ldr.w	r3, [r9]
900081b0:	4a7b      	ldr	r2, [pc, #492]	@ (900083a0 <_ZN15Screen2ViewBaseC1Ev+0x4c8>)
900081b2:	f893 1076 	ldrb.w	r1, [r3, #118]	@ 0x76
900081b6:	2900      	cmp	r1, #0
900081b8:	f000 834d 	beq.w	90008856 <_ZN15Screen2ViewBaseC1Ev+0x97e>
900081bc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900081be:	b900      	cbnz	r0, 900081c2 <_ZN15Screen2ViewBaseC1Ev+0x2ea>
        return instance->lcdRef;
900081c0:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
900081c2:	6803      	ldr	r3, [r0, #0]
900081c4:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
900081c6:	42a9      	cmp	r1, r5
900081c8:	f040 837b 	bne.w	900088c2 <_ZN15Screen2ViewBaseC1Ev+0x9ea>
900081cc:	4b73      	ldr	r3, [pc, #460]	@ (9000839c <_ZN15Screen2ViewBaseC1Ev+0x4c4>)
900081ce:	2500      	movs	r5, #0
900081d0:	f8c4 86b8 	str.w	r8, [r4, #1720]	@ 0x6b8
900081d4:	f04f 38ff 	mov.w	r8, #4294967295
900081d8:	f8c4 36f4 	str.w	r3, [r4, #1780]	@ 0x6f4
          touchable(false),
900081dc:	f44f 7380 	mov.w	r3, #256	@ 0x100
900081e0:	f504 60e3 	add.w	r0, r4, #1816	@ 0x718
900081e4:	a916      	add	r1, sp, #88	@ 0x58
900081e6:	f8a4 36f0 	strh.w	r3, [r4, #1776]	@ 0x6f0
900081ea:	f64f 73ff 	movw	r3, #65535	@ 0xffff
900081ee:	f8c4 a6c0 	str.w	sl, [r4, #1728]	@ 0x6c0
900081f2:	f104 0904 	add.w	r9, r4, #4
900081f6:	f8a4 36f8 	strh.w	r3, [r4, #1784]	@ 0x6f8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900081fa:	23ff      	movs	r3, #255	@ 0xff
900081fc:	f8c4 26cc 	str.w	r2, [r4, #1740]	@ 0x6cc
90008200:	f8c4 870c 	str.w	r8, [r4, #1804]	@ 0x70c
90008204:	f8c4 3702 	str.w	r3, [r4, #1794]	@ 0x702
90008208:	f8c4 56c4 	str.w	r5, [r4, #1732]	@ 0x6c4
        : x(0), y(0), width(0), height(0)
9000820c:	f8c4 56d0 	str.w	r5, [r4, #1744]	@ 0x6d0
90008210:	f8c4 56d4 	str.w	r5, [r4, #1748]	@ 0x6d4
90008214:	f8c4 56d8 	str.w	r5, [r4, #1752]	@ 0x6d8
90008218:	f8c4 56dc 	str.w	r5, [r4, #1756]	@ 0x6dc
          parent(0),
9000821c:	f8c4 56e0 	str.w	r5, [r4, #1760]	@ 0x6e0
          nextSibling(0),
90008220:	f8c4 56e4 	str.w	r5, [r4, #1764]	@ 0x6e4
          nextDrawChainElement(0),
90008224:	f8c4 56e8 	str.w	r5, [r4, #1768]	@ 0x6e8
          cachedAbsX(0),
90008228:	f8c4 56ec 	str.w	r5, [r4, #1772]	@ 0x6ec
        : color(col)
9000822c:	f8c4 56fc 	str.w	r5, [r4, #1788]	@ 0x6fc
90008230:	f8a4 5700 	strh.w	r5, [r4, #1792]	@ 0x700
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90008234:	f8c4 5708 	str.w	r5, [r4, #1800]	@ 0x708
              text(0)
90008238:	f8c4 5710 	str.w	r5, [r4, #1808]	@ 0x710
9000823c:	f8c4 5714 	str.w	r5, [r4, #1812]	@ 0x714
90008240:	f8ad 8058 	strh.w	r8, [sp, #88]	@ 0x58
90008244:	900d      	str	r0, [sp, #52]	@ 0x34
90008246:	f00e ffc9 	bl	900171dc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pobject(pObject), pmemfun(pmemfun_1)
9000824a:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
9000824e:	4a55      	ldr	r2, [pc, #340]	@ (900083a4 <_ZN15Screen2ViewBaseC1Ev+0x4cc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
90008250:	f44f 51e1 	mov.w	r1, #7200	@ 0x1c20
90008254:	f504 60ed 	add.w	r0, r4, #1896	@ 0x768
90008258:	f8c3 2388 	str.w	r2, [r3, #904]	@ 0x388
9000825c:	4a52      	ldr	r2, [pc, #328]	@ (900083a8 <_ZN15Screen2ViewBaseC1Ev+0x4d0>)
9000825e:	f8c3 438c 	str.w	r4, [r3, #908]	@ 0x38c
90008262:	f8c3 2390 	str.w	r2, [r3, #912]	@ 0x390
90008266:	f8c3 5394 	str.w	r5, [r3, #916]	@ 0x394
9000826a:	f010 ffdb 	bl	90019224 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        rect.x = x;
9000826e:	4b4f      	ldr	r3, [pc, #316]	@ (900083ac <_ZN15Screen2ViewBaseC1Ev+0x4d4>)
90008270:	f104 0140 	add.w	r1, r4, #64	@ 0x40
90008274:	4648      	mov	r0, r9
90008276:	64a3      	str	r3, [r4, #72]	@ 0x48
        color = newColor;
90008278:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
9000827c:	6465      	str	r5, [r4, #68]	@ 0x44
9000827e:	66a3      	str	r3, [r4, #104]	@ 0x68
90008280:	f00c fbac 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_WAVES_ID));
90008284:	f8dd a020 	ldr.w	sl, [sp, #32]
90008288:	a916      	add	r1, sp, #88	@ 0x58
9000828a:	6725      	str	r5, [r4, #112]	@ 0x70
9000828c:	4650      	mov	r0, sl
9000828e:	f8ad 5058 	strh.w	r5, [sp, #88]	@ 0x58
90008292:	f010 f8d6 	bl	90018442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90008296:	4651      	mov	r1, sl
90008298:	4648      	mov	r0, r9
9000829a:	f00c fb9f 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        boundingArea = calculateBoundingArea();
9000829e:	f8dd a00c 	ldr.w	sl, [sp, #12]
900082a2:	4b43      	ldr	r3, [pc, #268]	@ (900083b0 <_ZN15Screen2ViewBaseC1Ev+0x4d8>)
        color = newColor;
900082a4:	f8c4 80cc 	str.w	r8, [r4, #204]	@ 0xcc
        boundingArea = calculateBoundingArea();
900082a8:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
900082ac:	4651      	mov	r1, sl
900082ae:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
900082b2:	4640      	mov	r0, r8
        linespace = space;
900082b4:	f8a4 50d0 	strh.w	r5, [r4, #208]	@ 0xd0
        boundingArea = calculateBoundingArea();
900082b8:	f00f fa64 	bl	90017784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900082bc:	4b37      	ldr	r3, [pc, #220]	@ (9000839c <_ZN15Screen2ViewBaseC1Ev+0x4c4>)
900082be:	2229      	movs	r2, #41	@ 0x29
900082c0:	46d4      	mov	ip, sl
900082c2:	9316      	str	r3, [sp, #88]	@ 0x58
900082c4:	4653      	mov	r3, sl
900082c6:	f8ad 205c 	strh.w	r2, [sp, #92]	@ 0x5c
900082ca:	f04f 0a01 	mov.w	sl, #1
900082ce:	333c      	adds	r3, #60	@ 0x3c
900082d0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
900082d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_34L5));
900082d8:	4660      	mov	r0, ip
900082da:	a916      	add	r1, sp, #88	@ 0x58
900082dc:	f8cd c00c 	str.w	ip, [sp, #12]
900082e0:	f00f fcea 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900082e4:	9903      	ldr	r1, [sp, #12]
900082e6:	4648      	mov	r0, r9
900082e8:	f00c fb78 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_SWITCH_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_SWITCH_RIGHT_50_50_E8F6FB_SVG_ID));
900082ec:	ab16      	add	r3, sp, #88	@ 0x58
900082ee:	aa14      	add	r2, sp, #80	@ 0x50
900082f0:	a913      	add	r1, sp, #76	@ 0x4c
900082f2:	9300      	str	r3, [sp, #0]
900082f4:	f04f 0305 	mov.w	r3, #5
900082f8:	9804      	ldr	r0, [sp, #16]
900082fa:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
900082fe:	f8ad 3058 	strh.w	r3, [sp, #88]	@ 0x58
90008302:	f44f 73be 	mov.w	r3, #380	@ 0x17c
90008306:	f8c4 30e8 	str.w	r3, [r4, #232]	@ 0xe8
9000830a:	2302      	movs	r3, #2
9000830c:	f8ad 304c 	strh.w	r3, [sp, #76]	@ 0x4c
90008310:	f8ad 3050 	strh.w	r3, [sp, #80]	@ 0x50
90008314:	ab15      	add	r3, sp, #84	@ 0x54
90008316:	f00f ffc7 	bl	900182a8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1.setAction(buttonCallback);
9000831a:	f242 3388 	movw	r3, #9096	@ 0x2388
9000831e:	9904      	ldr	r1, [sp, #16]
90008320:	4648      	mov	r0, r9
90008322:	4423      	add	r3, r4
90008324:	f8c4 310c 	str.w	r3, [r4, #268]	@ 0x10c
90008328:	4b22      	ldr	r3, [pc, #136]	@ (900083b4 <_ZN15Screen2ViewBaseC1Ev+0x4dc>)
9000832a:	f8c4 311c 	str.w	r3, [r4, #284]	@ 0x11c
9000832e:	f00c fb55 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90008332:	2306      	movs	r3, #6
    gaugeRPM.setBackground(touchgfx::Bitmap(BITMAP_IMAGE_RPMS_ID));
90008334:	4630      	mov	r0, r6
90008336:	a916      	add	r1, sp, #88	@ 0x58
90008338:	f8ad 3058 	strh.w	r3, [sp, #88]	@ 0x58
9000833c:	f00c fae0 	bl	90014900 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
90008340:	4a1d      	ldr	r2, [pc, #116]	@ (900083b8 <_ZN15Screen2ViewBaseC1Ev+0x4e0>)
        setWidth(width);
90008342:	4630      	mov	r0, r6
        setX(x);
90008344:	f8d4 3120 	ldr.w	r3, [r4, #288]	@ 0x120
        setWidth(width);
90008348:	21f0      	movs	r1, #240	@ 0xf0
9000834a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
        rect.x = x;
9000834c:	f8c4 2124 	str.w	r2, [r4, #292]	@ 0x124
        setWidth(width);
90008350:	4798      	blx	r3
        setHeight(height);
90008352:	f8d4 3120 	ldr.w	r3, [r4, #288]	@ 0x120
90008356:	4630      	mov	r0, r6
90008358:	21f0      	movs	r1, #240	@ 0xf0
9000835a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9000835c:	4798      	blx	r3
    gaugeRPM.setCenter(120, 120);
9000835e:	2278      	movs	r2, #120	@ 0x78
90008360:	4630      	mov	r0, r6
90008362:	4611      	mov	r1, r2
90008364:	f00f fdf3 	bl	90017f4e <_ZN8touchgfx5Gauge9setCenterEii>
    gaugeRPM.setStartEndAngle(-113, 112);
90008368:	4630      	mov	r0, r6
9000836a:	2270      	movs	r2, #112	@ 0x70
9000836c:	f06f 0170 	mvn.w	r1, #112	@ 0x70
90008370:	f00f fe72 	bl	90018058 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gaugeRPM.setRange(0, 5000);
90008374:	462b      	mov	r3, r5
90008376:	f241 3288 	movw	r2, #5000	@ 0x1388
9000837a:	4630      	mov	r0, r6
9000837c:	4629      	mov	r1, r5
9000837e:	9500      	str	r5, [sp, #0]
90008380:	f00c f96a 	bl	90014658 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gaugeRPM.setValue(0);
90008384:	4630      	mov	r0, r6
90008386:	4629      	mov	r1, r5
90008388:	f00f fe10 	bl	90017fac <_ZN8touchgfx5Gauge8setValueEi>
    gaugeRPM.setEasingEquation(touchgfx::EasingEquations::cubicEaseInOut);
9000838c:	4630      	mov	r0, r6
9000838e:	e017      	b.n	900083c0 <_ZN15Screen2ViewBaseC1Ev+0x4e8>
90008390:	90003921 	.word	0x90003921
90008394:	9002f198 	.word	0x9002f198
90008398:	9002e298 	.word	0x9002e298
9000839c:	9002e6fc 	.word	0x9002e6fc
900083a0:	9002eec0 	.word	0x9002eec0
900083a4:	9002f280 	.word	0x9002f280
900083a8:	90007e8d 	.word	0x90007e8d
900083ac:	011001e0 	.word	0x011001e0
900083b0:	010300c7 	.word	0x010300c7
900083b4:	fff90019 	.word	0xfff90019
900083b8:	002000f0 	.word	0x002000f0
900083bc:	9002ff6c 	.word	0x9002ff6c
900083c0:	49e1      	ldr	r1, [pc, #900]	@ (90008748 <_ZN15Screen2ViewBaseC1Ev+0x870>)
900083c2:	f00c f983 	bl	900146cc <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>
    gaugeRPM.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_MEDIUM_NEEDLES_SMOOTH_ID, 7, 67);
900083c6:	2207      	movs	r2, #7
900083c8:	2343      	movs	r3, #67	@ 0x43
900083ca:	4630      	mov	r0, r6
900083cc:	2103      	movs	r1, #3
900083ce:	f00f fda9 	bl	90017f24 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gaugeRPM.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
900083d2:	4630      	mov	r0, r6
900083d4:	4651      	mov	r1, sl
900083d6:	f00f fd41 	bl	90017e5c <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gaugeRPM.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
900083da:	4630      	mov	r0, r6
900083dc:	4651      	mov	r1, sl
900083de:	f00f fd40 	bl	90017e62 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gaugeRPM.setArcVisible();
900083e2:	4651      	mov	r1, sl
900083e4:	4630      	mov	r0, r6
900083e6:	f00f fd3f 	bl	90017e68 <_ZN8touchgfx5Gauge13setArcVisibleEb>
900083ea:	4bd8      	ldr	r3, [pc, #864]	@ (9000874c <_ZN15Screen2ViewBaseC1Ev+0x874>)
    gaugeRPM.getArc().setPainter(gaugeRPMPainter);
900083ec:	4630      	mov	r0, r6
900083ee:	f8c4 32d0 	str.w	r3, [r4, #720]	@ 0x2d0
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
900083f2:	f64e 63c1 	movw	r3, #61121	@ 0xeec1
900083f6:	f8a4 32d4 	strh.w	r3, [r4, #724]	@ 0x2d4
900083fa:	f00f fd38 	bl	90017e6e <_ZN8touchgfx5Gauge6getArcEv>
        canvasPainter = &painter;
900083fe:	9b07      	ldr	r3, [sp, #28]
90008400:	6283      	str	r3, [r0, #40]	@ 0x28
    gaugeRPM.getArc().setRadius(103);
90008402:	4630      	mov	r0, r6
90008404:	f00f fd33 	bl	90017e6e <_ZN8touchgfx5Gauge6getArcEv>
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
90008408:	f44f 634e 	mov.w	r3, #3296	@ 0xce0
9000840c:	6343      	str	r3, [r0, #52]	@ 0x34
    gaugeRPM.getArc().setLineWidth(7);
9000840e:	4630      	mov	r0, r6
90008410:	f00f fd2d 	bl	90017e6e <_ZN8touchgfx5Gauge6getArcEv>
     *       before updating the width to ensure that the old circle is completely erased.
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
90008414:	23e0      	movs	r3, #224	@ 0xe0
90008416:	6403      	str	r3, [r0, #64]	@ 0x40
    gaugeRPM.getArc().setCapPrecision(10);
90008418:	4630      	mov	r0, r6
9000841a:	f00f fd28 	bl	90017e6e <_ZN8touchgfx5Gauge6getArcEv>
9000841e:	210a      	movs	r1, #10
90008420:	f00d fd1e 	bl	90015e60 <_ZN8touchgfx6Circle15setCapPrecisionEi>
90008424:	4631      	mov	r1, r6
90008426:	4648      	mov	r0, r9
90008428:	f00c fad8 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxProgressTemp.setProgressIndicatorPosition(0, 0, 100, 10);
9000842c:	230a      	movs	r3, #10
9000842e:	462a      	mov	r2, r5
90008430:	4629      	mov	r1, r5
90008432:	9300      	str	r3, [sp, #0]
90008434:	4658      	mov	r0, fp
        rect.x = x;
90008436:	4bc6      	ldr	r3, [pc, #792]	@ (90008750 <_ZN15Screen2ViewBaseC1Ev+0x878>)
90008438:	f8c4 32dc 	str.w	r3, [r4, #732]	@ 0x2dc
9000843c:	2364      	movs	r3, #100	@ 0x64
9000843e:	f00b ffed 	bl	9001441c <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    boxProgressTemp.setRange(0, 180);
90008442:	22b4      	movs	r2, #180	@ 0xb4
90008444:	462b      	mov	r3, r5
90008446:	4629      	mov	r1, r5
90008448:	4658      	mov	r0, fp
9000844a:	9500      	str	r5, [sp, #0]
9000844c:	f00c f904 	bl	90014658 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    boxProgressTemp.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
90008450:	4629      	mov	r1, r5
90008452:	4658      	mov	r0, fp
90008454:	f00c f8df 	bl	90014616 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
    boxProgressTemp.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BOXPROGRESS_NORMAL_TINY_ID));
90008458:	a916      	add	r1, sp, #88	@ 0x58
9000845a:	4658      	mov	r0, fp
9000845c:	f8ad a058 	strh.w	sl, [sp, #88]	@ 0x58
90008460:	f00c fa4e 	bl	90014900 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    boxProgressTemp.setColor(touchgfx::Color::getColorFromRGB(78, 252, 25));
90008464:	49bb      	ldr	r1, [pc, #748]	@ (90008754 <_ZN15Screen2ViewBaseC1Ev+0x87c>)
90008466:	4658      	mov	r0, fp
90008468:	f00b ffa7 	bl	900143ba <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    boxProgressTemp.setValue(5);
9000846c:	2105      	movs	r1, #5
9000846e:	4658      	mov	r0, fp
90008470:	f00b ffec 	bl	9001444c <_ZN8touchgfx11BoxProgress8setValueEi>
90008474:	4659      	mov	r1, fp
90008476:	4648      	mov	r0, r9
90008478:	f00c fab0 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000847c:	f04f 0307 	mov.w	r3, #7
    gaugeSpeed.setBackground(touchgfx::Bitmap(BITMAP_IMAGE_SPEED_ID));
90008480:	a916      	add	r1, sp, #88	@ 0x58
90008482:	4638      	mov	r0, r7
90008484:	f8ad 3058 	strh.w	r3, [sp, #88]	@ 0x58
90008488:	f00c fa3a 	bl	90014900 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
9000848c:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
        setX(x);
90008490:	f8d4 33bc 	ldr.w	r3, [r4, #956]	@ 0x3bc
        setWidth(width);
90008494:	21f0      	movs	r1, #240	@ 0xf0
90008496:	4638      	mov	r0, r7
90008498:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
        rect.x = x;
9000849a:	f8c4 23c0 	str.w	r2, [r4, #960]	@ 0x3c0
        setWidth(width);
9000849e:	4798      	blx	r3
        setHeight(height);
900084a0:	f8d4 33bc 	ldr.w	r3, [r4, #956]	@ 0x3bc
900084a4:	21f0      	movs	r1, #240	@ 0xf0
900084a6:	4638      	mov	r0, r7
900084a8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900084aa:	4798      	blx	r3
    gaugeSpeed.setCenter(120, 120);
900084ac:	2278      	movs	r2, #120	@ 0x78
900084ae:	4638      	mov	r0, r7
900084b0:	4611      	mov	r1, r2
900084b2:	f00f fd4c 	bl	90017f4e <_ZN8touchgfx5Gauge9setCenterEii>
    gaugeSpeed.setStartEndAngle(-113, 112);
900084b6:	2270      	movs	r2, #112	@ 0x70
900084b8:	f06f 0170 	mvn.w	r1, #112	@ 0x70
900084bc:	4638      	mov	r0, r7
900084be:	f00f fdcb 	bl	90018058 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gaugeSpeed.setRange(0, 200);
900084c2:	462b      	mov	r3, r5
900084c4:	22c8      	movs	r2, #200	@ 0xc8
900084c6:	4629      	mov	r1, r5
900084c8:	4638      	mov	r0, r7
900084ca:	9500      	str	r5, [sp, #0]
900084cc:	f00c f8c4 	bl	90014658 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gaugeSpeed.setValue(0);
900084d0:	4629      	mov	r1, r5
900084d2:	4638      	mov	r0, r7
900084d4:	f00f fd6a 	bl	90017fac <_ZN8touchgfx5Gauge8setValueEi>
    gaugeSpeed.setEasingEquation(touchgfx::EasingEquations::cubicEaseInOut);
900084d8:	499b      	ldr	r1, [pc, #620]	@ (90008748 <_ZN15Screen2ViewBaseC1Ev+0x870>)
900084da:	4638      	mov	r0, r7
900084dc:	f00c f8f6 	bl	900146cc <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>
    gaugeSpeed.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_MEDIUM_NEEDLES_SMOOTH_ID, 7, 67);
900084e0:	2207      	movs	r2, #7
900084e2:	2343      	movs	r3, #67	@ 0x43
900084e4:	2103      	movs	r1, #3
900084e6:	4638      	mov	r0, r7
900084e8:	f00f fd1c 	bl	90017f24 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gaugeSpeed.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
900084ec:	4651      	mov	r1, sl
900084ee:	4638      	mov	r0, r7
900084f0:	f00f fcb4 	bl	90017e5c <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gaugeSpeed.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
900084f4:	4651      	mov	r1, sl
900084f6:	4638      	mov	r0, r7
900084f8:	f00f fcb3 	bl	90017e62 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gaugeSpeed.setArcVisible();
900084fc:	4651      	mov	r1, sl
900084fe:	4638      	mov	r0, r7
90008500:	f00f fcb2 	bl	90017e68 <_ZN8touchgfx5Gauge13setArcVisibleEb>
90008504:	4b94      	ldr	r3, [pc, #592]	@ (90008758 <_ZN15Screen2ViewBaseC1Ev+0x880>)
    gaugeSpeed.getArc().setPainter(gaugeSpeedPainter);
90008506:	4638      	mov	r0, r7
90008508:	f8c4 356c 	str.w	r3, [r4, #1388]	@ 0x56c
9000850c:	f641 63a7 	movw	r3, #7847	@ 0x1ea7
90008510:	f8a4 3570 	strh.w	r3, [r4, #1392]	@ 0x570
90008514:	f00f fcab 	bl	90017e6e <_ZN8touchgfx5Gauge6getArcEv>
90008518:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9000851a:	6283      	str	r3, [r0, #40]	@ 0x28
    gaugeSpeed.getArc().setRadius(103);
9000851c:	4638      	mov	r0, r7
9000851e:	f00f fca6 	bl	90017e6e <_ZN8touchgfx5Gauge6getArcEv>
        this->circleRadius = CWRUtil::toQ5(r);
90008522:	f44f 634e 	mov.w	r3, #3296	@ 0xce0
90008526:	6343      	str	r3, [r0, #52]	@ 0x34
    gaugeSpeed.getArc().setLineWidth(7);
90008528:	4638      	mov	r0, r7
9000852a:	f00f fca0 	bl	90017e6e <_ZN8touchgfx5Gauge6getArcEv>
        this->circleLineWidth = CWRUtil::toQ5(width);
9000852e:	23e0      	movs	r3, #224	@ 0xe0
90008530:	6403      	str	r3, [r0, #64]	@ 0x40
    gaugeSpeed.getArc().setCapPrecision(10);
90008532:	4638      	mov	r0, r7
90008534:	f00f fc9b 	bl	90017e6e <_ZN8touchgfx5Gauge6getArcEv>
90008538:	210a      	movs	r1, #10
9000853a:	f00d fc91 	bl	90015e60 <_ZN8touchgfx6Circle15setCapPrecisionEi>
9000853e:	4639      	mov	r1, r7
90008540:	4648      	mov	r0, r9
90008542:	f00c fa4b 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90008546:	9b09      	ldr	r3, [sp, #36]	@ 0x24
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90008548:	9e05      	ldr	r6, [sp, #20]
9000854a:	462a      	mov	r2, r5
9000854c:	f8c4 359c 	str.w	r3, [r4, #1436]	@ 0x59c
90008550:	4629      	mov	r1, r5
        rect.x = x;
90008552:	4b82      	ldr	r3, [pc, #520]	@ (9000875c <_ZN15Screen2ViewBaseC1Ev+0x884>)
90008554:	4630      	mov	r0, r6
90008556:	f8c4 3578 	str.w	r3, [r4, #1400]	@ 0x578
9000855a:	f04f 130a 	mov.w	r3, #655370	@ 0xa000a
9000855e:	f8c4 357c 	str.w	r3, [r4, #1404]	@ 0x57c
90008562:	4b7f      	ldr	r3, [pc, #508]	@ (90008760 <_ZN15Screen2ViewBaseC1Ev+0x888>)
90008564:	f8c4 35f0 	str.w	r3, [r4, #1520]	@ 0x5f0
90008568:	f24f 5301 	movw	r3, #62721	@ 0xf501
9000856c:	f8a4 35f4 	strh.w	r3, [r4, #1524]	@ 0x5f4
90008570:	f00e fc86 	bl	90016e80 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90008574:	4629      	mov	r1, r5
90008576:	f44f 7290 	mov.w	r2, #288	@ 0x120
9000857a:	4630      	mov	r0, r6
9000857c:	f00e fc8b 	bl	90016e96 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
90008580:	f8d4 35b0 	ldr.w	r3, [r4, #1456]	@ 0x5b0
90008584:	2b60      	cmp	r3, #96	@ 0x60
90008586:	d005      	beq.n	90008594 <_ZN15Screen2ViewBaseC1Ev+0x6bc>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
90008588:	2360      	movs	r3, #96	@ 0x60

        updateCachedShape();
9000858a:	4630      	mov	r0, r6
        lineWidthQ5 = widthQ5;
9000858c:	f8c4 35b0 	str.w	r3, [r4, #1456]	@ 0x5b0
        updateCachedShape();
90008590:	f00e fb80 	bl	90016c94 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90008594:	9d05      	ldr	r5, [sp, #20]
90008596:	2101      	movs	r1, #1
    textAmbientTemp.setPosition(0, 0, 72, 23);
90008598:	f504 66bf 	add.w	r6, r4, #1528	@ 0x5f8
        boundingArea = calculateBoundingArea();
9000859c:	f204 6734 	addw	r7, r4, #1588	@ 0x634
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
900085a0:	4628      	mov	r0, r5
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900085a2:	f8df b1e0 	ldr.w	fp, [pc, #480]	@ 90008784 <_ZN15Screen2ViewBaseC1Ev+0x8ac>
900085a6:	f00e fc81 	bl	90016eac <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
900085aa:	4629      	mov	r1, r5
900085ac:	4648      	mov	r0, r9
900085ae:	2500      	movs	r5, #0
900085b0:	f00c fa14 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.width = width;
900085b4:	2348      	movs	r3, #72	@ 0x48
900085b6:	4631      	mov	r1, r6
900085b8:	4640      	mov	r0, r8
900085ba:	f8a4 3600 	strh.w	r3, [r4, #1536]	@ 0x600
    Unicode::snprintf(textAmbientTempBuffer, TEXTAMBIENTTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_2F84).getText());
900085be:	f204 7a44 	addw	sl, r4, #1860	@ 0x744
        rect.x = x;
900085c2:	f8c4 55fc 	str.w	r5, [r4, #1532]	@ 0x5fc
900085c6:	f7fd fe35 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        rect.height = height;
900085ca:	2317      	movs	r3, #23
900085cc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
900085d0:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
900085d4:	4631      	mov	r1, r6
900085d6:	4640      	mov	r0, r8
900085d8:	f8a4 3602 	strh.w	r3, [r4, #1538]	@ 0x602
900085dc:	f7fd fe2a 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
900085e0:	f8db 3000 	ldr.w	r3, [fp]
900085e4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
900085e8:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        color = newColor;
900085ec:	f04f 32ff 	mov.w	r2, #4294967295
        linespace = space;
900085f0:	f8a4 562c 	strh.w	r5, [r4, #1580]	@ 0x62c
        boundingArea = calculateBoundingArea();
900085f4:	f8c4 5634 	str.w	r5, [r4, #1588]	@ 0x634
        color = newColor;
900085f8:	f8c4 2628 	str.w	r2, [r4, #1576]	@ 0x628
        boundingArea = calculateBoundingArea();
900085fc:	f8c4 2638 	str.w	r2, [r4, #1592]	@ 0x638
90008600:	f8c4 563c 	str.w	r5, [r4, #1596]	@ 0x63c
90008604:	2b00      	cmp	r3, #0
90008606:	f000 817a 	beq.w	900088fe <_ZN15Screen2ViewBaseC1Ev+0xa26>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000860a:	4b56      	ldr	r3, [pc, #344]	@ (90008764 <_ZN15Screen2ViewBaseC1Ev+0x88c>)
9000860c:	881b      	ldrh	r3, [r3, #0]
9000860e:	2b00      	cmp	r3, #0
90008610:	f000 816f 	beq.w	900088f2 <_ZN15Screen2ViewBaseC1Ev+0xa1a>
        return texts->getText(typedTextId);
90008614:	4b54      	ldr	r3, [pc, #336]	@ (90008768 <_ZN15Screen2ViewBaseC1Ev+0x890>)
90008616:	4629      	mov	r1, r5
    textSpeed.setPosition(72, 128, 97, 48);
90008618:	f204 67cc 	addw	r7, r4, #1740	@ 0x6cc
9000861c:	6818      	ldr	r0, [r3, #0]
9000861e:	f000 fb4d 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(textAmbientTempBuffer, TEXTAMBIENTTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_2F84).getText());
90008622:	4a52      	ldr	r2, [pc, #328]	@ (9000876c <_ZN15Screen2ViewBaseC1Ev+0x894>)
90008624:	4603      	mov	r3, r0
90008626:	2108      	movs	r1, #8
90008628:	4650      	mov	r0, sl
9000862a:	f015 fc63 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
9000862e:	4a50      	ldr	r2, [pc, #320]	@ (90008770 <_ZN15Screen2ViewBaseC1Ev+0x898>)
90008630:	2301      	movs	r3, #1
    textAmbientTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U82J));
90008632:	4630      	mov	r0, r6
90008634:	a916      	add	r1, sp, #88	@ 0x58
        wc1 = value;
90008636:	f8c4 a640 	str.w	sl, [r4, #1600]	@ 0x640
9000863a:	9216      	str	r2, [sp, #88]	@ 0x58
        boundingArea = calculateBoundingArea();
9000863c:	f504 6ae1 	add.w	sl, r4, #1800	@ 0x708
90008640:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
90008644:	f00f fb38 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90008648:	4631      	mov	r1, r6
9000864a:	4648      	mov	r0, r9
9000864c:	f00c f9c6 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_LOGO_FRI_EN2_03_ID));
90008650:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
90008652:	2308      	movs	r3, #8
90008654:	a916      	add	r1, sp, #88	@ 0x58
90008656:	4630      	mov	r0, r6
90008658:	f8ad 3058 	strh.w	r3, [sp, #88]	@ 0x58
9000865c:	f00f fef1 	bl	90018442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
90008660:	23b4      	movs	r3, #180	@ 0xb4
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90008662:	4630      	mov	r0, r6
90008664:	4629      	mov	r1, r5
90008666:	f8c4 3648 	str.w	r3, [r4, #1608]	@ 0x648
9000866a:	4b42      	ldr	r3, [pc, #264]	@ (90008774 <_ZN15Screen2ViewBaseC1Ev+0x89c>)
9000866c:	f8c4 364c 	str.w	r3, [r4, #1612]	@ 0x64c
90008670:	f00e fd7a 	bl	90017168 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90008674:	4631      	mov	r1, r6
90008676:	4648      	mov	r0, r9
    Unicode::snprintf(textSpeedBuffer, TEXTSPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_C3A7).getText());
90008678:	f204 7654 	addw	r6, r4, #1876	@ 0x754
9000867c:	f00c f9ae 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        this->circleCenterX = CWRUtil::toQ5(x);
90008680:	f44f 63c8 	mov.w	r3, #1600	@ 0x640
90008684:	990c      	ldr	r1, [sp, #48]	@ 0x30
90008686:	4648      	mov	r0, r9
90008688:	f8c4 369c 	str.w	r3, [r4, #1692]	@ 0x69c
        this->circleCenterY = CWRUtil::toQ5(y);
9000868c:	f8c4 36a0 	str.w	r3, [r4, #1696]	@ 0x6a0
        this->circleRadius = CWRUtil::toQ5(r);
90008690:	f8c4 36a4 	str.w	r3, [r4, #1700]	@ 0x6a4
90008694:	4b38      	ldr	r3, [pc, #224]	@ (90008778 <_ZN15Screen2ViewBaseC1Ev+0x8a0>)
90008696:	f8c4 1698 	str.w	r1, [r4, #1688]	@ 0x698
9000869a:	f8c4 3674 	str.w	r3, [r4, #1652]	@ 0x674
9000869e:	f04f 1364 	mov.w	r3, #6553700	@ 0x640064
900086a2:	9906      	ldr	r1, [sp, #24]
900086a4:	f8c4 3678 	str.w	r3, [r4, #1656]	@ 0x678
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
900086a8:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
        this->circleLineWidth = CWRUtil::toQ5(width);
900086ac:	f8c4 56b0 	str.w	r5, [r4, #1712]	@ 0x6b0
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
900086b0:	f8c4 36ac 	str.w	r3, [r4, #1708]	@ 0x6ac
900086b4:	4b31      	ldr	r3, [pc, #196]	@ (9000877c <_ZN15Screen2ViewBaseC1Ev+0x8a4>)
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
900086b6:	f8c4 56a8 	str.w	r5, [r4, #1704]	@ 0x6a8
900086ba:	f8c4 36c4 	str.w	r3, [r4, #1732]	@ 0x6c4
900086be:	f24b 633a 	movw	r3, #46650	@ 0xb63a
900086c2:	f8a4 36c8 	strh.w	r3, [r4, #1736]	@ 0x6c8
900086c6:	f00c f989 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
900086ca:	4b2d      	ldr	r3, [pc, #180]	@ (90008780 <_ZN15Screen2ViewBaseC1Ev+0x8a8>)
900086cc:	4639      	mov	r1, r7
900086ce:	4640      	mov	r0, r8
900086d0:	f8c4 36d0 	str.w	r3, [r4, #1744]	@ 0x6d0
        rect.width = width;
900086d4:	2361      	movs	r3, #97	@ 0x61
900086d6:	f8a4 36d4 	strh.w	r3, [r4, #1748]	@ 0x6d4
900086da:	f7fd fdab 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        rect.height = height;
900086de:	2330      	movs	r3, #48	@ 0x30
900086e0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
900086e4:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
900086e8:	4639      	mov	r1, r7
900086ea:	4640      	mov	r0, r8
900086ec:	f8a4 36d6 	strh.w	r3, [r4, #1750]	@ 0x6d6
900086f0:	f7fd fda0 	bl	90006234 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        color = newColor;
900086f4:	f8df c090 	ldr.w	ip, [pc, #144]	@ 90008788 <_ZN15Screen2ViewBaseC1Ev+0x8b0>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900086f8:	f8db 3000 	ldr.w	r3, [fp]
        boundingArea = calculateBoundingArea();
900086fc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
90008700:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90008704:	f04f 31ff 	mov.w	r1, #4294967295
        color = newColor;
90008708:	f8c4 c6fc 	str.w	ip, [r4, #1788]	@ 0x6fc
        linespace = space;
9000870c:	f8a4 5700 	strh.w	r5, [r4, #1792]	@ 0x700
        boundingArea = calculateBoundingArea();
90008710:	f8c4 170c 	str.w	r1, [r4, #1804]	@ 0x70c
90008714:	f8c4 5708 	str.w	r5, [r4, #1800]	@ 0x708
90008718:	f8c4 5710 	str.w	r5, [r4, #1808]	@ 0x710
9000871c:	2b00      	cmp	r3, #0
9000871e:	f000 80ee 	beq.w	900088fe <_ZN15Screen2ViewBaseC1Ev+0xa26>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90008722:	4910      	ldr	r1, [pc, #64]	@ (90008764 <_ZN15Screen2ViewBaseC1Ev+0x88c>)
90008724:	880b      	ldrh	r3, [r1, #0]
90008726:	2b02      	cmp	r3, #2
90008728:	f240 80e3 	bls.w	900088f2 <_ZN15Screen2ViewBaseC1Ev+0xa1a>
        return texts->getText(typedTextId);
9000872c:	4b0e      	ldr	r3, [pc, #56]	@ (90008768 <_ZN15Screen2ViewBaseC1Ev+0x890>)
9000872e:	2102      	movs	r1, #2
90008730:	6818      	ldr	r0, [r3, #0]
90008732:	f000 fac3 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
90008736:	4a0d      	ldr	r2, [pc, #52]	@ (9000876c <_ZN15Screen2ViewBaseC1Ev+0x894>)
90008738:	4603      	mov	r3, r0
9000873a:	210a      	movs	r1, #10
9000873c:	4630      	mov	r0, r6
9000873e:	f015 fbd9 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
90008742:	4a0b      	ldr	r2, [pc, #44]	@ (90008770 <_ZN15Screen2ViewBaseC1Ev+0x898>)
90008744:	2303      	movs	r3, #3
90008746:	e021      	b.n	9000878c <_ZN15Screen2ViewBaseC1Ev+0x8b4>
90008748:	9001c85f 	.word	0x9001c85f
9000874c:	ffeddb0e 	.word	0xffeddb0e
90008750:	00dd0136 	.word	0x00dd0136
90008754:	ff4efc19 	.word	0xff4efc19
90008758:	ff18d63b 	.word	0xff18d63b
9000875c:	00dd0168 	.word	0x00dd0168
90008760:	fff0a00c 	.word	0xfff0a00c
90008764:	24027ef8 	.word	0x24027ef8
90008768:	24027f00 	.word	0x24027f00
9000876c:	9002eeb4 	.word	0x9002eeb4
90008770:	9002e6fc 	.word	0x9002e6fc
90008774:	002d0078 	.word	0x002d0078
90008778:	00660046 	.word	0x00660046
9000877c:	ffb0c7d6 	.word	0xffb0c7d6
90008780:	00800048 	.word	0x00800048
90008784:	24027ef4 	.word	0x24027ef4
90008788:	ff034157 	.word	0xff034157
    textSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EZPO));
9000878c:	a916      	add	r1, sp, #88	@ 0x58
9000878e:	4638      	mov	r0, r7
90008790:	f8c4 6714 	str.w	r6, [r4, #1812]	@ 0x714
90008794:	9216      	str	r2, [sp, #88]	@ 0x58
90008796:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
9000879a:	f00f fa8d 	bl	90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
9000879e:	4639      	mov	r1, r7
900087a0:	4648      	mov	r0, r9
900087a2:	f00c f91b 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_TERMOMETER2_ID));
900087a6:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
900087a8:	230b      	movs	r3, #11
900087aa:	a916      	add	r1, sp, #88	@ 0x58
900087ac:	4630      	mov	r0, r6
900087ae:	f8ad 3058 	strh.w	r3, [sp, #88]	@ 0x58
900087b2:	f00f fe46 	bl	90018442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
900087b6:	4b55      	ldr	r3, [pc, #340]	@ (9000890c <_ZN15Screen2ViewBaseC1Ev+0xa34>)
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900087b8:	4629      	mov	r1, r5
900087ba:	4630      	mov	r0, r6
900087bc:	f8c4 371c 	str.w	r3, [r4, #1820]	@ 0x71c
900087c0:	f04f 1314 	mov.w	r3, #1310740	@ 0x140014
900087c4:	f8c4 3720 	str.w	r3, [r4, #1824]	@ 0x720
900087c8:	f00e fcce 	bl	90017168 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900087cc:	4648      	mov	r0, r9
900087ce:	4631      	mov	r1, r6
900087d0:	f00c f904 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900087d4:	4620      	mov	r0, r4
900087d6:	b019      	add	sp, #100	@ 0x64
900087d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900087dc:	6898      	ldr	r0, [r3, #8]
900087de:	4d4c      	ldr	r5, [pc, #304]	@ (90008910 <_ZN15Screen2ViewBaseC1Ev+0xa38>)
900087e0:	6803      	ldr	r3, [r0, #0]
900087e2:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
900087e4:	42a9      	cmp	r1, r5
900087e6:	f43f ac3a 	beq.w	9000805e <_ZN15Screen2ViewBaseC1Ev+0x186>
900087ea:	e402      	b.n	90007ff2 <_ZN15Screen2ViewBaseC1Ev+0x11a>
900087ec:	6890      	ldr	r0, [r2, #8]
900087ee:	6801      	ldr	r1, [r0, #0]
900087f0:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
900087f2:	42a9      	cmp	r1, r5
900087f4:	d14b      	bne.n	9000888e <_ZN15Screen2ViewBaseC1Ev+0x9b6>
        return auxiliaryLCD;
900087f6:	6cd0      	ldr	r0, [r2, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900087f8:	2800      	cmp	r0, #0
900087fa:	f43f ac65 	beq.w	900080c8 <_ZN15Screen2ViewBaseC1Ev+0x1f0>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900087fe:	6802      	ldr	r2, [r0, #0]
90008800:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90008802:	42aa      	cmp	r2, r5
90008804:	f43f ac60 	beq.w	900080c8 <_ZN15Screen2ViewBaseC1Ev+0x1f0>
90008808:	9305      	str	r3, [sp, #20]
9000880a:	4790      	blx	r2
9000880c:	9b05      	ldr	r3, [sp, #20]
9000880e:	2800      	cmp	r0, #0
90008810:	bf08      	it	eq
90008812:	f043 0301 	orreq.w	r3, r3, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90008816:	2b00      	cmp	r3, #0
90008818:	f47f ac56 	bne.w	900080c8 <_ZN15Screen2ViewBaseC1Ev+0x1f0>
9000881c:	f7ff bbf2 	b.w	90008004 <_ZN15Screen2ViewBaseC1Ev+0x12c>
        return instance->lcdRef;
90008820:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90008822:	6802      	ldr	r2, [r0, #0]
90008824:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90008826:	42aa      	cmp	r2, r5
90008828:	d13f      	bne.n	900088aa <_ZN15Screen2ViewBaseC1Ev+0x9d2>
        return auxiliaryLCD;
9000882a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
9000882c:	2800      	cmp	r0, #0
9000882e:	f43f ac6f 	beq.w	90008110 <_ZN15Screen2ViewBaseC1Ev+0x238>
        bool compat = HAL::lcd().framebufferFormat() == format;
90008832:	6803      	ldr	r3, [r0, #0]
90008834:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90008836:	2301      	movs	r3, #1
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90008838:	42aa      	cmp	r2, r5
9000883a:	f43f ac69 	beq.w	90008110 <_ZN15Screen2ViewBaseC1Ev+0x238>
9000883e:	9306      	str	r3, [sp, #24]
90008840:	4790      	blx	r2
90008842:	9b06      	ldr	r3, [sp, #24]
90008844:	2800      	cmp	r0, #0
90008846:	bf08      	it	eq
90008848:	f043 0301 	orreq.w	r3, r3, #1
9000884c:	2b00      	cmp	r3, #0
9000884e:	f47f ac5f 	bne.w	90008110 <_ZN15Screen2ViewBaseC1Ev+0x238>
90008852:	f7ff bbd7 	b.w	90008004 <_ZN15Screen2ViewBaseC1Ev+0x12c>
        return instance->lcdRef;
90008856:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90008858:	6801      	ldr	r1, [r0, #0]
9000885a:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
9000885c:	42a9      	cmp	r1, r5
9000885e:	d130      	bne.n	900088c2 <_ZN15Screen2ViewBaseC1Ev+0x9ea>
        return auxiliaryLCD;
90008860:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90008862:	2800      	cmp	r0, #0
90008864:	f43f acb2 	beq.w	900081cc <_ZN15Screen2ViewBaseC1Ev+0x2f4>
        bool compat = HAL::lcd().framebufferFormat() == format;
90008868:	6803      	ldr	r3, [r0, #0]
9000886a:	f04f 0901 	mov.w	r9, #1
9000886e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90008870:	42ab      	cmp	r3, r5
90008872:	f43f acab 	beq.w	900081cc <_ZN15Screen2ViewBaseC1Ev+0x2f4>
90008876:	4798      	blx	r3
90008878:	4a26      	ldr	r2, [pc, #152]	@ (90008914 <_ZN15Screen2ViewBaseC1Ev+0xa3c>)
9000887a:	2800      	cmp	r0, #0
9000887c:	bf08      	it	eq
9000887e:	f049 0901 	orreq.w	r9, r9, #1
90008882:	f1b9 0f00 	cmp.w	r9, #0
90008886:	f47f aca1 	bne.w	900081cc <_ZN15Screen2ViewBaseC1Ev+0x2f4>
9000888a:	f7ff bbbb 	b.w	90008004 <_ZN15Screen2ViewBaseC1Ev+0x12c>
        bool compat = HAL::lcd().framebufferFormat() == format;
9000888e:	4788      	blx	r1
90008890:	f8d9 2000 	ldr.w	r2, [r9]
90008894:	fab0 f380 	clz	r3, r0
90008898:	6cd0      	ldr	r0, [r2, #76]	@ 0x4c
9000889a:	095b      	lsrs	r3, r3, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
9000889c:	2800      	cmp	r0, #0
9000889e:	d1ae      	bne.n	900087fe <_ZN15Screen2ViewBaseC1Ev+0x926>
900088a0:	2b00      	cmp	r3, #0
900088a2:	f47f ac11 	bne.w	900080c8 <_ZN15Screen2ViewBaseC1Ev+0x1f0>
900088a6:	f7ff bbad 	b.w	90008004 <_ZN15Screen2ViewBaseC1Ev+0x12c>
        bool compat = HAL::lcd().framebufferFormat() == format;
900088aa:	4790      	blx	r2
900088ac:	f8d9 2000 	ldr.w	r2, [r9]
900088b0:	fab0 f380 	clz	r3, r0
900088b4:	6cd0      	ldr	r0, [r2, #76]	@ 0x4c
900088b6:	095b      	lsrs	r3, r3, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900088b8:	2800      	cmp	r0, #0
900088ba:	d0c7      	beq.n	9000884c <_ZN15Screen2ViewBaseC1Ev+0x974>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900088bc:	6802      	ldr	r2, [r0, #0]
900088be:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900088c0:	e7ba      	b.n	90008838 <_ZN15Screen2ViewBaseC1Ev+0x960>
        bool compat = HAL::lcd().framebufferFormat() == format;
900088c2:	4788      	blx	r1
900088c4:	f8d9 3000 	ldr.w	r3, [r9]
900088c8:	fab0 f980 	clz	r9, r0
        if (HAL::getInstance()->getAuxiliaryLCD())
900088cc:	4a11      	ldr	r2, [pc, #68]	@ (90008914 <_ZN15Screen2ViewBaseC1Ev+0xa3c>)
900088ce:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        bool compat = HAL::lcd().framebufferFormat() == format;
900088d0:	ea4f 1959 	mov.w	r9, r9, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900088d4:	2800      	cmp	r0, #0
900088d6:	d0d4      	beq.n	90008882 <_ZN15Screen2ViewBaseC1Ev+0x9aa>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900088d8:	6803      	ldr	r3, [r0, #0]
900088da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900088dc:	e7c8      	b.n	90008870 <_ZN15Screen2ViewBaseC1Ev+0x998>
900088de:	4798      	blx	r3
900088e0:	2800      	cmp	r0, #0
900088e2:	bf08      	it	eq
900088e4:	f047 0701 	orreq.w	r7, r7, #1
900088e8:	2f00      	cmp	r7, #0
900088ea:	f47f abb8 	bne.w	9000805e <_ZN15Screen2ViewBaseC1Ev+0x186>
900088ee:	f7ff bb89 	b.w	90008004 <_ZN15Screen2ViewBaseC1Ev+0x12c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900088f2:	4b09      	ldr	r3, [pc, #36]	@ (90008918 <_ZN15Screen2ViewBaseC1Ev+0xa40>)
900088f4:	2161      	movs	r1, #97	@ 0x61
900088f6:	4a09      	ldr	r2, [pc, #36]	@ (9000891c <_ZN15Screen2ViewBaseC1Ev+0xa44>)
900088f8:	4809      	ldr	r0, [pc, #36]	@ (90008920 <_ZN15Screen2ViewBaseC1Ev+0xa48>)
900088fa:	f022 ffe1 	bl	9002b8c0 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900088fe:	4b09      	ldr	r3, [pc, #36]	@ (90008924 <_ZN15Screen2ViewBaseC1Ev+0xa4c>)
90008900:	2160      	movs	r1, #96	@ 0x60
90008902:	4a06      	ldr	r2, [pc, #24]	@ (9000891c <_ZN15Screen2ViewBaseC1Ev+0xa44>)
90008904:	4806      	ldr	r0, [pc, #24]	@ (90008920 <_ZN15Screen2ViewBaseC1Ev+0xa48>)
90008906:	f022 ffdb 	bl	9002b8c0 <__assert_func>
9000890a:	bf00      	nop
9000890c:	00ea0160 	.word	0x00ea0160
90008910:	90003921 	.word	0x90003921
90008914:	9002eec0 	.word	0x9002eec0
90008918:	9002ee28 	.word	0x9002ee28
9000891c:	9002ee68 	.word	0x9002ee68
90008920:	9002ede0 	.word	0x9002ede0
90008924:	9002ed60 	.word	0x9002ed60

90008928 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 39, 11, 10, 0, 0, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90008928:	4770      	bx	lr
9000892a:	bf00      	nop

9000892c <_Z23getFont_verdana_10_4bppv>:
{
9000892c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 39, 11, 10, 0, 0, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000892e:	4d19      	ldr	r5, [pc, #100]	@ (90008994 <_Z23getFont_verdana_10_4bppv+0x68>)
{
90008930:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 39, 11, 10, 0, 0, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90008932:	682c      	ldr	r4, [r5, #0]
90008934:	f3bf 8f5b 	dmb	ish
90008938:	f014 0401 	ands.w	r4, r4, #1
9000893c:	d002      	beq.n	90008944 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
9000893e:	4816      	ldr	r0, [pc, #88]	@ (90008998 <_Z23getFont_verdana_10_4bppv+0x6c>)
90008940:	b00f      	add	sp, #60	@ 0x3c
90008942:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 39, 11, 10, 0, 0, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90008944:	4628      	mov	r0, r5
90008946:	f022 fde0 	bl	9002b50a <__cxa_guard_acquire>
9000894a:	2800      	cmp	r0, #0
9000894c:	d0f7      	beq.n	9000893e <_Z23getFont_verdana_10_4bppv+0x12>
9000894e:	213f      	movs	r1, #63	@ 0x3f
90008950:	4a12      	ldr	r2, [pc, #72]	@ (9000899c <_Z23getFont_verdana_10_4bppv+0x70>)
90008952:	2301      	movs	r3, #1
90008954:	200a      	movs	r0, #10
90008956:	9208      	str	r2, [sp, #32]
90008958:	2204      	movs	r2, #4
9000895a:	9304      	str	r3, [sp, #16]
9000895c:	9000      	str	r0, [sp, #0]
9000895e:	9401      	str	r4, [sp, #4]
90008960:	480d      	ldr	r0, [pc, #52]	@ (90008998 <_Z23getFont_verdana_10_4bppv+0x6c>)
90008962:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90008966:	490e      	ldr	r1, [pc, #56]	@ (900089a0 <_Z23getFont_verdana_10_4bppv+0x74>)
90008968:	e9cd 4305 	strd	r4, r3, [sp, #20]
9000896c:	9107      	str	r1, [sp, #28]
9000896e:	230b      	movs	r3, #11
90008970:	490c      	ldr	r1, [pc, #48]	@ (900089a4 <_Z23getFont_verdana_10_4bppv+0x78>)
90008972:	e9cd 4202 	strd	r4, r2, [sp, #8]
90008976:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
9000897a:	2227      	movs	r2, #39	@ 0x27
9000897c:	f7fd fbe8 	bl	90006150 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90008980:	4809      	ldr	r0, [pc, #36]	@ (900089a8 <_Z23getFont_verdana_10_4bppv+0x7c>)
90008982:	f022 ffbb 	bl	9002b8fc <atexit>
90008986:	4628      	mov	r0, r5
90008988:	f022 fdcb 	bl	9002b522 <__cxa_guard_release>
}
9000898c:	4802      	ldr	r0, [pc, #8]	@ (90008998 <_Z23getFont_verdana_10_4bppv+0x6c>)
9000898e:	b00f      	add	sp, #60	@ 0x3c
90008990:	bd30      	pop	{r4, r5, pc}
90008992:	bf00      	nop
90008994:	2400d590 	.word	0x2400d590
90008998:	2400d594 	.word	0x2400d594
9000899c:	90030d24 	.word	0x90030d24
900089a0:	90030d48 	.word	0x90030d48
900089a4:	90202004 	.word	0x90202004
900089a8:	90008929 	.word	0x90008929

900089ac <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_16_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_16_4bpp();

touchgfx::GeneratedFont& getFont_verdana_16_4bpp()
{
    static touchgfx::GeneratedFont verdana_16_4bpp(glyphs_verdana_16_4bpp, 18, 16, 16, 0, 0, 4, 1, 0, 0, unicodes_verdana_16_4bpp, kerning_verdana_16_4bpp, 63, 0, 0, 0);
900089ac:	4770      	bx	lr
900089ae:	bf00      	nop

900089b0 <_Z23getFont_verdana_16_4bppv>:
{
900089b0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_16_4bpp(glyphs_verdana_16_4bpp, 18, 16, 16, 0, 0, 4, 1, 0, 0, unicodes_verdana_16_4bpp, kerning_verdana_16_4bpp, 63, 0, 0, 0);
900089b2:	4d18      	ldr	r5, [pc, #96]	@ (90008a14 <_Z23getFont_verdana_16_4bppv+0x64>)
{
900089b4:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_16_4bpp(glyphs_verdana_16_4bpp, 18, 16, 16, 0, 0, 4, 1, 0, 0, unicodes_verdana_16_4bpp, kerning_verdana_16_4bpp, 63, 0, 0, 0);
900089b6:	682c      	ldr	r4, [r5, #0]
900089b8:	f3bf 8f5b 	dmb	ish
900089bc:	f014 0401 	ands.w	r4, r4, #1
900089c0:	d002      	beq.n	900089c8 <_Z23getFont_verdana_16_4bppv+0x18>
    return verdana_16_4bpp;
}
900089c2:	4815      	ldr	r0, [pc, #84]	@ (90008a18 <_Z23getFont_verdana_16_4bppv+0x68>)
900089c4:	b00f      	add	sp, #60	@ 0x3c
900089c6:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_16_4bpp(glyphs_verdana_16_4bpp, 18, 16, 16, 0, 0, 4, 1, 0, 0, unicodes_verdana_16_4bpp, kerning_verdana_16_4bpp, 63, 0, 0, 0);
900089c8:	4628      	mov	r0, r5
900089ca:	f022 fd9e 	bl	9002b50a <__cxa_guard_acquire>
900089ce:	2800      	cmp	r0, #0
900089d0:	d0f7      	beq.n	900089c2 <_Z23getFont_verdana_16_4bppv+0x12>
900089d2:	4a12      	ldr	r2, [pc, #72]	@ (90008a1c <_Z23getFont_verdana_16_4bppv+0x6c>)
900089d4:	213f      	movs	r1, #63	@ 0x3f
900089d6:	2310      	movs	r3, #16
900089d8:	480f      	ldr	r0, [pc, #60]	@ (90008a18 <_Z23getFont_verdana_16_4bppv+0x68>)
900089da:	9208      	str	r2, [sp, #32]
900089dc:	2201      	movs	r2, #1
900089de:	9300      	str	r3, [sp, #0]
900089e0:	9204      	str	r2, [sp, #16]
900089e2:	2204      	movs	r2, #4
900089e4:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
900089e8:	490d      	ldr	r1, [pc, #52]	@ (90008a20 <_Z23getFont_verdana_16_4bppv+0x70>)
900089ea:	9203      	str	r2, [sp, #12]
900089ec:	2212      	movs	r2, #18
900089ee:	9107      	str	r1, [sp, #28]
900089f0:	490c      	ldr	r1, [pc, #48]	@ (90008a24 <_Z23getFont_verdana_16_4bppv+0x74>)
900089f2:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
900089f6:	e9cd 4405 	strd	r4, r4, [sp, #20]
900089fa:	e9cd 4401 	strd	r4, r4, [sp, #4]
900089fe:	f7fd fba7 	bl	90006150 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90008a02:	4809      	ldr	r0, [pc, #36]	@ (90008a28 <_Z23getFont_verdana_16_4bppv+0x78>)
90008a04:	f022 ff7a 	bl	9002b8fc <atexit>
90008a08:	4628      	mov	r0, r5
90008a0a:	f022 fd8a 	bl	9002b522 <__cxa_guard_release>
}
90008a0e:	4802      	ldr	r0, [pc, #8]	@ (90008a18 <_Z23getFont_verdana_16_4bppv+0x68>)
90008a10:	b00f      	add	sp, #60	@ 0x3c
90008a12:	bd30      	pop	{r4, r5, pc}
90008a14:	2400d5c0 	.word	0x2400d5c0
90008a18:	2400d5c4 	.word	0x2400d5c4
90008a1c:	90030d28 	.word	0x90030d28
90008a20:	90030d4c 	.word	0x90030d4c
90008a24:	90202228 	.word	0x90202228
90008a28:	900089ad 	.word	0x900089ad

90008a2c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 39, 24, 20, 0, 0, 4, 1, 1, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90008a2c:	4770      	bx	lr
90008a2e:	bf00      	nop

90008a30 <_Z23getFont_verdana_20_4bppv>:
{
90008a30:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 39, 24, 20, 0, 0, 4, 1, 1, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90008a32:	4d19      	ldr	r5, [pc, #100]	@ (90008a98 <_Z23getFont_verdana_20_4bppv+0x68>)
{
90008a34:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 39, 24, 20, 0, 0, 4, 1, 1, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90008a36:	682c      	ldr	r4, [r5, #0]
90008a38:	f3bf 8f5b 	dmb	ish
90008a3c:	f014 0401 	ands.w	r4, r4, #1
90008a40:	d002      	beq.n	90008a48 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
90008a42:	4816      	ldr	r0, [pc, #88]	@ (90008a9c <_Z23getFont_verdana_20_4bppv+0x6c>)
90008a44:	b00f      	add	sp, #60	@ 0x3c
90008a46:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 39, 24, 20, 0, 0, 4, 1, 1, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90008a48:	4628      	mov	r0, r5
90008a4a:	f022 fd5e 	bl	9002b50a <__cxa_guard_acquire>
90008a4e:	2800      	cmp	r0, #0
90008a50:	d0f7      	beq.n	90008a42 <_Z23getFont_verdana_20_4bppv+0x12>
90008a52:	213f      	movs	r1, #63	@ 0x3f
90008a54:	4a12      	ldr	r2, [pc, #72]	@ (90008aa0 <_Z23getFont_verdana_20_4bppv+0x70>)
90008a56:	2301      	movs	r3, #1
90008a58:	2014      	movs	r0, #20
90008a5a:	9208      	str	r2, [sp, #32]
90008a5c:	2204      	movs	r2, #4
90008a5e:	9304      	str	r3, [sp, #16]
90008a60:	9000      	str	r0, [sp, #0]
90008a62:	9401      	str	r4, [sp, #4]
90008a64:	480d      	ldr	r0, [pc, #52]	@ (90008a9c <_Z23getFont_verdana_20_4bppv+0x6c>)
90008a66:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90008a6a:	490e      	ldr	r1, [pc, #56]	@ (90008aa4 <_Z23getFont_verdana_20_4bppv+0x74>)
90008a6c:	e9cd 3405 	strd	r3, r4, [sp, #20]
90008a70:	9107      	str	r1, [sp, #28]
90008a72:	2318      	movs	r3, #24
90008a74:	490c      	ldr	r1, [pc, #48]	@ (90008aa8 <_Z23getFont_verdana_20_4bppv+0x78>)
90008a76:	e9cd 4202 	strd	r4, r2, [sp, #8]
90008a7a:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90008a7e:	2227      	movs	r2, #39	@ 0x27
90008a80:	f7fd fb66 	bl	90006150 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90008a84:	4809      	ldr	r0, [pc, #36]	@ (90008aac <_Z23getFont_verdana_20_4bppv+0x7c>)
90008a86:	f022 ff39 	bl	9002b8fc <atexit>
90008a8a:	4628      	mov	r0, r5
90008a8c:	f022 fd49 	bl	9002b522 <__cxa_guard_release>
}
90008a90:	4802      	ldr	r0, [pc, #8]	@ (90008a9c <_Z23getFont_verdana_20_4bppv+0x6c>)
90008a92:	b00f      	add	sp, #60	@ 0x3c
90008a94:	bd30      	pop	{r4, r5, pc}
90008a96:	bf00      	nop
90008a98:	2400d5f0 	.word	0x2400d5f0
90008a9c:	2400d5f4 	.word	0x2400d5f4
90008aa0:	90030d30 	.word	0x90030d30
90008aa4:	90030d50 	.word	0x90030d50
90008aa8:	90202324 	.word	0x90202324
90008aac:	90008a2d 	.word	0x90008a2d

90008ab0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90008ab0:	4770      	bx	lr
90008ab2:	bf00      	nop

90008ab4 <_Z23getFont_verdana_40_4bppv>:
{
90008ab4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90008ab6:	4d19      	ldr	r5, [pc, #100]	@ (90008b1c <_Z23getFont_verdana_40_4bppv+0x68>)
{
90008ab8:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90008aba:	682c      	ldr	r4, [r5, #0]
90008abc:	f3bf 8f5b 	dmb	ish
90008ac0:	f014 0401 	ands.w	r4, r4, #1
90008ac4:	d002      	beq.n	90008acc <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
90008ac6:	4816      	ldr	r0, [pc, #88]	@ (90008b20 <_Z23getFont_verdana_40_4bppv+0x6c>)
90008ac8:	b00f      	add	sp, #60	@ 0x3c
90008aca:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90008acc:	4628      	mov	r0, r5
90008ace:	f022 fd1c 	bl	9002b50a <__cxa_guard_acquire>
90008ad2:	2800      	cmp	r0, #0
90008ad4:	d0f7      	beq.n	90008ac6 <_Z23getFont_verdana_40_4bppv+0x12>
90008ad6:	223f      	movs	r2, #63	@ 0x3f
90008ad8:	4b12      	ldr	r3, [pc, #72]	@ (90008b24 <_Z23getFont_verdana_40_4bppv+0x70>)
90008ada:	4913      	ldr	r1, [pc, #76]	@ (90008b28 <_Z23getFont_verdana_40_4bppv+0x74>)
90008adc:	2028      	movs	r0, #40	@ 0x28
90008ade:	9308      	str	r3, [sp, #32]
90008ae0:	2301      	movs	r3, #1
90008ae2:	9000      	str	r0, [sp, #0]
90008ae4:	9401      	str	r4, [sp, #4]
90008ae6:	480e      	ldr	r0, [pc, #56]	@ (90008b20 <_Z23getFont_verdana_40_4bppv+0x6c>)
90008ae8:	e9cd 2409 	strd	r2, r4, [sp, #36]	@ 0x24
90008aec:	2204      	movs	r2, #4
90008aee:	e9cd 4106 	strd	r4, r1, [sp, #24]
90008af2:	e9cd 3404 	strd	r3, r4, [sp, #16]
90008af6:	490d      	ldr	r1, [pc, #52]	@ (90008b2c <_Z23getFont_verdana_40_4bppv+0x78>)
90008af8:	2329      	movs	r3, #41	@ 0x29
90008afa:	e9cd 4202 	strd	r4, r2, [sp, #8]
90008afe:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90008b02:	220b      	movs	r2, #11
90008b04:	f7fd fb24 	bl	90006150 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90008b08:	4809      	ldr	r0, [pc, #36]	@ (90008b30 <_Z23getFont_verdana_40_4bppv+0x7c>)
90008b0a:	f022 fef7 	bl	9002b8fc <atexit>
90008b0e:	4628      	mov	r0, r5
90008b10:	f022 fd07 	bl	9002b522 <__cxa_guard_release>
}
90008b14:	4802      	ldr	r0, [pc, #8]	@ (90008b20 <_Z23getFont_verdana_40_4bppv+0x6c>)
90008b16:	b00f      	add	sp, #60	@ 0x3c
90008b18:	bd30      	pop	{r4, r5, pc}
90008b1a:	bf00      	nop
90008b1c:	2400d620 	.word	0x2400d620
90008b20:	2400d624 	.word	0x2400d624
90008b24:	90030d44 	.word	0x90030d44
90008b28:	90030d54 	.word	0x90030d54
90008b2c:	90202548 	.word	0x90202548
90008b30:	90008ab1 	.word	0x90008ab1

90008b34 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
90008b34:	2000      	movs	r0, #0
90008b36:	4770      	bx	lr

90008b38 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
90008b38:	2000      	movs	r0, #0
90008b3a:	4770      	bx	lr

90008b3c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90008b3c:	b40e      	push	{r1, r2, r3}
90008b3e:	b500      	push	{lr}
90008b40:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90008b42:	2100      	movs	r1, #0
{
90008b44:	ab03      	add	r3, sp, #12
90008b46:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
90008b4a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90008b4c:	f012 ffe2 	bl	9001bb14 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90008b50:	b002      	add	sp, #8
90008b52:	f85d eb04 	ldr.w	lr, [sp], #4
90008b56:	b003      	add	sp, #12
90008b58:	4770      	bx	lr
90008b5a:	bf00      	nop

90008b5c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90008b5c:	b40c      	push	{r2, r3}
90008b5e:	b500      	push	{lr}
90008b60:	b083      	sub	sp, #12
90008b62:	ab04      	add	r3, sp, #16
90008b64:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
90008b68:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
90008b6a:	f012 ffd3 	bl	9001bb14 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90008b6e:	b003      	add	sp, #12
90008b70:	f85d eb04 	ldr.w	lr, [sp], #4
90008b74:	b002      	add	sp, #8
90008b76:	4770      	bx	lr

90008b78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90008b78:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
90008b7a:	b510      	push	{r4, lr}
90008b7c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
90008b7e:	b133      	cbz	r3, 90008b8e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
90008b80:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
90008b82:	b39b      	cbz	r3, 90008bec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90008b84:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90008b86:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90008b8a:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
90008b8c:	b923      	cbnz	r3, 90008b98 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
90008b8e:	4620      	mov	r0, r4
}
90008b90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90008b94:	f014 bb02 	b.w	9001d19c <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90008b98:	f014 fbfe 	bl	9001d398 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90008b9c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90008b9e:	2b01      	cmp	r3, #1
90008ba0:	d92a      	bls.n	90008bf8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
90008ba2:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90008ba4:	1c53      	adds	r3, r2, #1
90008ba6:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90008ba8:	2b09      	cmp	r3, #9
90008baa:	d812      	bhi.n	90008bd2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90008bac:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90008bb0:	f640 103f 	movw	r0, #2367	@ 0x93f
90008bb4:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
90008bb6:	4281      	cmp	r1, r0
90008bb8:	d1e9      	bne.n	90008b8e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90008bba:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90008bbe:	0052      	lsls	r2, r2, #1
90008bc0:	8c48      	ldrh	r0, [r1, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
90008bc2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90008bc6:	4422      	add	r2, r4
90008bc8:	f640 113f 	movw	r1, #2367	@ 0x93f
            buffer[index < size ? index : 0] = newChar;
90008bcc:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
90008bce:	8451      	strh	r1, [r2, #34]	@ 0x22
        }
90008bd0:	e7dd      	b.n	90008b8e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
90008bd2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90008bd6:	f640 113f 	movw	r1, #2367	@ 0x93f
90008bda:	89db      	ldrh	r3, [r3, #14]
90008bdc:	428b      	cmp	r3, r1
90008bde:	d1d6      	bne.n	90008b8e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90008be0:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90008be4:	2300      	movs	r3, #0
90008be6:	0052      	lsls	r2, r2, #1
90008be8:	8c48      	ldrh	r0, [r1, #34]	@ 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
90008bea:	e7ea      	b.n	90008bc2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
90008bec:	4b05      	ldr	r3, [pc, #20]	@ (90008c04 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
90008bee:	21c5      	movs	r1, #197	@ 0xc5
90008bf0:	4a05      	ldr	r2, [pc, #20]	@ (90008c08 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
90008bf2:	4806      	ldr	r0, [pc, #24]	@ (90008c0c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90008bf4:	f022 fe64 	bl	9002b8c0 <__assert_func>
            assert(offset < used);
90008bf8:	4b05      	ldr	r3, [pc, #20]	@ (90008c10 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
90008bfa:	21cb      	movs	r1, #203	@ 0xcb
90008bfc:	4a05      	ldr	r2, [pc, #20]	@ (90008c14 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
90008bfe:	4803      	ldr	r0, [pc, #12]	@ (90008c0c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90008c00:	f022 fe5e 	bl	9002b8c0 <__assert_func>
90008c04:	9002f2c4 	.word	0x9002f2c4
90008c08:	9002f2d0 	.word	0x9002f2d0
90008c0c:	9002f37c 	.word	0x9002f37c
90008c10:	9002f3c8 	.word	0x9002f3c8
90008c14:	9002f3d8 	.word	0x9002f3d8

90008c18 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
90008c18:	f014 ba89 	b.w	9001d12e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90008c1c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
90008c1c:	b510      	push	{r4, lr}
90008c1e:	b086      	sub	sp, #24
90008c20:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
90008c24:	ac0a      	add	r4, sp, #40	@ 0x28
{
90008c26:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90008c2a:	461a      	mov	r2, r3
90008c2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90008c2e:	4661      	mov	r1, ip
90008c30:	9401      	str	r4, [sp, #4]
90008c32:	9300      	str	r3, [sp, #0]
90008c34:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
90008c36:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90008c38:	f011 fb80 	bl	9001a33c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90008c3c:	b006      	add	sp, #24
90008c3e:	bd10      	pop	{r4, pc}

90008c40 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90008c40:	b9e0      	cbnz	r0, 90008c7c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
90008c42:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
90008c44:	4b13      	ldr	r3, [pc, #76]	@ (90008c94 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
90008c46:	681b      	ldr	r3, [r3, #0]
90008c48:	b1cb      	cbz	r3, 90008c7e <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90008c4a:	4c13      	ldr	r4, [pc, #76]	@ (90008c98 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90008c4c:	4813      	ldr	r0, [pc, #76]	@ (90008c9c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90008c4e:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90008c52:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90008c54:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90008c56:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90008c58:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90008c5a:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90008c5c:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
90008c5e:	4b10      	ldr	r3, [pc, #64]	@ (90008ca0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90008c60:	2200      	movs	r2, #0
90008c62:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90008c64:	f000 f83a 	bl	90008cdc <_ZN17TypedTextDatabase8getFontsEv>
90008c68:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
90008c6a:	f000 f835 	bl	90008cd8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
90008c6e:	4b0d      	ldr	r3, [pc, #52]	@ (90008ca4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
90008c70:	4a0d      	ldr	r2, [pc, #52]	@ (90008ca8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
90008c72:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90008c74:	4b0d      	ldr	r3, [pc, #52]	@ (90008cac <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90008c76:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90008c78:	8018      	strh	r0, [r3, #0]
    }
}
90008c7a:	bd38      	pop	{r3, r4, r5, pc}
90008c7c:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
90008c7e:	4c0c      	ldr	r4, [pc, #48]	@ (90008cb0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
90008c80:	4905      	ldr	r1, [pc, #20]	@ (90008c98 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
90008c82:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90008c84:	480b      	ldr	r0, [pc, #44]	@ (90008cb4 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90008c86:	4b05      	ldr	r3, [pc, #20]	@ (90008c9c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90008c88:	4a0b      	ldr	r2, [pc, #44]	@ (90008cb8 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90008c8a:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90008c8c:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
90008c8e:	2c00      	cmp	r4, #0
90008c90:	d1e5      	bne.n	90008c5e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
90008c92:	bd38      	pop	{r3, r4, r5, pc}
90008c94:	2400d65c 	.word	0x2400d65c
90008c98:	2400d654 	.word	0x2400d654
90008c9c:	2400d650 	.word	0x2400d650
90008ca0:	2400d658 	.word	0x2400d658
90008ca4:	24027ef4 	.word	0x24027ef4
90008ca8:	24027efc 	.word	0x24027efc
90008cac:	24027ef8 	.word	0x24027ef8
90008cb0:	9020288c 	.word	0x9020288c
90008cb4:	90202694 	.word	0x90202694
90008cb8:	902025e4 	.word	0x902025e4

90008cbc <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90008cbc:	4a04      	ldr	r2, [pc, #16]	@ (90008cd0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
90008cbe:	4b05      	ldr	r3, [pc, #20]	@ (90008cd4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90008cc0:	6812      	ldr	r2, [r2, #0]
90008cc2:	681b      	ldr	r3, [r3, #0]
90008cc4:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90008cc8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90008ccc:	4770      	bx	lr
90008cce:	bf00      	nop
90008cd0:	2400d650 	.word	0x2400d650
90008cd4:	2400d654 	.word	0x2400d654

90008cd8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90008cd8:	202c      	movs	r0, #44	@ 0x2c
90008cda:	4770      	bx	lr

90008cdc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90008cdc:	4800      	ldr	r0, [pc, #0]	@ (90008ce0 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
90008cde:	4770      	bx	lr
90008ce0:	2400d660 	.word	0x2400d660

90008ce4 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_16_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90008ce4:	b510      	push	{r4, lr}
};
90008ce6:	4c07      	ldr	r4, [pc, #28]	@ (90008d04 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
    &(getFont_verdana_20_4bpp()),
90008ce8:	f7ff fea2 	bl	90008a30 <_Z23getFont_verdana_20_4bppv>
};
90008cec:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
90008cee:	f7ff fee1 	bl	90008ab4 <_Z23getFont_verdana_40_4bppv>
};
90008cf2:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
90008cf4:	f7ff fe1a 	bl	9000892c <_Z23getFont_verdana_10_4bppv>
};
90008cf8:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_16_4bpp())
90008cfa:	f7ff fe59 	bl	900089b0 <_Z23getFont_verdana_16_4bppv>
};
90008cfe:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
90008d00:	bd10      	pop	{r4, pc}
90008d02:	bf00      	nop
90008d04:	2400d660 	.word	0x2400d660

90008d08 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90008d08:	4770      	bx	lr
90008d0a:	bf00      	nop

90008d0c <_ZN19FrontendApplicationD0Ev>:
90008d0c:	b510      	push	{r4, lr}
90008d0e:	4604      	mov	r4, r0
90008d10:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90008d14:	f022 fbf7 	bl	9002b506 <_ZdlPvj>
90008d18:	4620      	mov	r0, r4
90008d1a:	bd10      	pop	{r4, pc}

90008d1c <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90008d1c:	b510      	push	{r4, lr}
90008d1e:	4604      	mov	r4, r0
    {
        model.tick();
90008d20:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
90008d24:	f000 f824 	bl	90008d70 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90008d28:	4620      	mov	r0, r4
    }
90008d2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90008d2e:	f012 b829 	b.w	9001ad84 <_ZN8touchgfx11Application15handleTickEventEv>
90008d32:	bf00      	nop

90008d34 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90008d34:	b510      	push	{r4, lr}
90008d36:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90008d38:	f7fd f964 	bl	90006004 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90008d3c:	4b01      	ldr	r3, [pc, #4]	@ (90008d44 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90008d3e:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90008d40:	6023      	str	r3, [r4, #0]
}
90008d42:	bd10      	pop	{r4, pc}
90008d44:	9002f4b4 	.word	0x9002f4b4

90008d48 <_ZN13ModelListener14setNewOBD2DataEP17OBDQueueElement_t>:
    }

    virtual void setNewSpeed(unsigned int uwSpeed) {}
    virtual void setNewOBD2Data(OBDQueueElement_t* pOBD2Data) {}
90008d48:	4770      	bx	lr
90008d4a:	bf00      	nop

90008d4c <_ZN13ModelListener15setNewGaugeDataEP17OBDQueueElement_t>:
    virtual void setNewGaugeData(OBDQueueElement_t* pOBD2Data) {}
90008d4c:	4770      	bx	lr
90008d4e:	bf00      	nop

90008d50 <_ZN5ModelC1Ev>:
	osMessageQueueId_t mid_MODELMsgQueue;                // message queue
}

OBDQueueElement_t OBD2Data;

Model::Model() : modelListener(0)
90008d50:	b510      	push	{r4, lr}
90008d52:	2200      	movs	r2, #0
90008d54:	4604      	mov	r4, r0
{
	// create a message queue:
	mid_MODELMsgQueue = osMessageQueueNew(10, sizeof(OBDQueueElement_t), NULL);
90008d56:	210c      	movs	r1, #12
90008d58:	200a      	movs	r0, #10
Model::Model() : modelListener(0)
90008d5a:	6022      	str	r2, [r4, #0]
	mid_MODELMsgQueue = osMessageQueueNew(10, sizeof(OBDQueueElement_t), NULL);
90008d5c:	f008 fd92 	bl	90011884 <osMessageQueueNew>
90008d60:	4b02      	ldr	r3, [pc, #8]	@ (90008d6c <_ZN5ModelC1Ev+0x1c>)
90008d62:	4602      	mov	r2, r0
	if (mid_MODELMsgQueue == NULL) {
		// Message Queue object not created, handle failure
	}
}
90008d64:	4620      	mov	r0, r4
	mid_MODELMsgQueue = osMessageQueueNew(10, sizeof(OBDQueueElement_t), NULL);
90008d66:	601a      	str	r2, [r3, #0]
}
90008d68:	bd10      	pop	{r4, pc}
90008d6a:	bf00      	nop
90008d6c:	2400d67c 	.word	0x2400d67c

90008d70 <_ZN5Model4tickEv>:

void Model::tick()
{
90008d70:	b510      	push	{r4, lr}
	// check if a new message has arrived - do not wait for it, just check :
	if (osMessageQueueGet(mid_MODELMsgQueue, &OBD2Data, NULL, 0U) == osOK)   // wait for message
90008d72:	2300      	movs	r3, #0
90008d74:	4c10      	ldr	r4, [pc, #64]	@ (90008db8 <_ZN5Model4tickEv+0x48>)
{
90008d76:	4684      	mov	ip, r0
	if (osMessageQueueGet(mid_MODELMsgQueue, &OBD2Data, NULL, 0U) == osOK)   // wait for message
90008d78:	4910      	ldr	r1, [pc, #64]	@ (90008dbc <_ZN5Model4tickEv+0x4c>)
90008d7a:	6820      	ldr	r0, [r4, #0]
90008d7c:	461a      	mov	r2, r3
{
90008d7e:	4664      	mov	r4, ip
	if (osMessageQueueGet(mid_MODELMsgQueue, &OBD2Data, NULL, 0U) == osOK)   // wait for message
90008d80:	f008 fdf8 	bl	90011974 <osMessageQueueGet>
90008d84:	b948      	cbnz	r0, 90008d9a <_ZN5Model4tickEv+0x2a>
	{
		// process data
		//modelListener->setNewSpeed(OBD2Data.uwData);
		modelListener->setNewOBD2Data(&OBD2Data);
90008d86:	6820      	ldr	r0, [r4, #0]
90008d88:	490d      	ldr	r1, [pc, #52]	@ (90008dc0 <_ZN5Model4tickEv+0x50>)
90008d8a:	6803      	ldr	r3, [r0, #0]
90008d8c:	68da      	ldr	r2, [r3, #12]
90008d8e:	428a      	cmp	r2, r1
90008d90:	d108      	bne.n	90008da4 <_ZN5Model4tickEv+0x34>
		modelListener->setNewGaugeData(&OBD2Data);
90008d92:	691b      	ldr	r3, [r3, #16]
90008d94:	4a0b      	ldr	r2, [pc, #44]	@ (90008dc4 <_ZN5Model4tickEv+0x54>)
90008d96:	4293      	cmp	r3, r2
90008d98:	d100      	bne.n	90008d9c <_ZN5Model4tickEv+0x2c>
	}
}
90008d9a:	bd10      	pop	{r4, pc}
		modelListener->setNewGaugeData(&OBD2Data);
90008d9c:	4907      	ldr	r1, [pc, #28]	@ (90008dbc <_ZN5Model4tickEv+0x4c>)
}
90008d9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		modelListener->setNewGaugeData(&OBD2Data);
90008da2:	4718      	bx	r3
		modelListener->setNewOBD2Data(&OBD2Data);
90008da4:	4905      	ldr	r1, [pc, #20]	@ (90008dbc <_ZN5Model4tickEv+0x4c>)
90008da6:	4790      	blx	r2
		modelListener->setNewGaugeData(&OBD2Data);
90008da8:	6820      	ldr	r0, [r4, #0]
90008daa:	4a06      	ldr	r2, [pc, #24]	@ (90008dc4 <_ZN5Model4tickEv+0x54>)
90008dac:	6803      	ldr	r3, [r0, #0]
90008dae:	691b      	ldr	r3, [r3, #16]
90008db0:	4293      	cmp	r3, r2
90008db2:	d0f2      	beq.n	90008d9a <_ZN5Model4tickEv+0x2a>
90008db4:	e7f2      	b.n	90008d9c <_ZN5Model4tickEv+0x2c>
90008db6:	bf00      	nop
90008db8:	2400d67c 	.word	0x2400d67c
90008dbc:	2400d670 	.word	0x2400d670
90008dc0:	90008d49 	.word	0x90008d49
90008dc4:	90008d4d 	.word	0x90008d4d

90008dc8 <_ZN5Model9saveSpeedEm>:

void Model::saveSpeed(uint32_t speed)
{
	savedSpeed = speed;
90008dc8:	6041      	str	r1, [r0, #4]
}
90008dca:	4770      	bx	lr

90008dcc <_ZN5Model7saveRPMEm>:

void Model::saveRPM(uint32_t rpm)
{
	savedRPM = rpm;
90008dcc:	6081      	str	r1, [r0, #8]
}
90008dce:	4770      	bx	lr

90008dd0 <_ZN5Model15saveAmbientTempEm>:

void Model::saveAmbientTemp(uint32_t temp)
{
	savedAmbientTemp = temp;
90008dd0:	60c1      	str	r1, [r0, #12]
}
90008dd2:	4770      	bx	lr

90008dd4 <_ZN5Model15saveCoolantTempEm>:

void Model::saveCoolantTemp(uint32_t temp)
{
	savedCoolantTemp = temp;
90008dd4:	6101      	str	r1, [r0, #16]
}
90008dd6:	4770      	bx	lr

90008dd8 <_ZN5Model13getSavedSpeedEv>:

uint32_t Model::getSavedSpeed()
{
	return savedSpeed;
}
90008dd8:	6840      	ldr	r0, [r0, #4]
90008dda:	4770      	bx	lr

90008ddc <_ZN5Model11getSavedRPMEv>:

uint32_t Model::getSavedRPM()
{
	return savedRPM;
}
90008ddc:	6880      	ldr	r0, [r0, #8]
90008dde:	4770      	bx	lr

90008de0 <_ZN5Model19getSavedAmbientTempEv>:

uint32_t Model::getSavedAmbientTemp()
{
	return savedAmbientTemp;
}
90008de0:	68c0      	ldr	r0, [r0, #12]
90008de2:	4770      	bx	lr

90008de4 <_ZN5Model19getSavedCoolantTempEv>:

uint32_t Model::getSavedCoolantTemp()
{
	return savedCoolantTemp;
}
90008de4:	6900      	ldr	r0, [r0, #16]
90008de6:	4770      	bx	lr

90008de8 <_ZN13ModelListener11setNewSpeedEj>:
    virtual void setNewSpeed(unsigned int uwSpeed) {}
90008de8:	4770      	bx	lr
90008dea:	bf00      	nop

90008dec <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
90008dec:	4770      	bx	lr
90008dee:	bf00      	nop

90008df0 <_ZThn4_N16Screen1PresenterD1Ev>:
90008df0:	3804      	subs	r0, #4
90008df2:	4770      	bx	lr

90008df4 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
90008df4:	4770      	bx	lr
90008df6:	bf00      	nop

90008df8 <_ZN16Screen1PresenterD0Ev>:
90008df8:	b510      	push	{r4, lr}
90008dfa:	4604      	mov	r4, r0
90008dfc:	2110      	movs	r1, #16
90008dfe:	f022 fb82 	bl	9002b506 <_ZdlPvj>
90008e02:	4620      	mov	r0, r4
90008e04:	bd10      	pop	{r4, pc}
90008e06:	bf00      	nop

90008e08 <_ZThn4_N16Screen1PresenterD0Ev>:
90008e08:	b510      	push	{r4, lr}
90008e0a:	1f04      	subs	r4, r0, #4
90008e0c:	2110      	movs	r1, #16
90008e0e:	4620      	mov	r0, r4
90008e10:	f022 fb79 	bl	9002b506 <_ZdlPvj>
90008e14:	4620      	mov	r0, r4
90008e16:	bd10      	pop	{r4, pc}

90008e18 <_ZN16Screen1Presenter14setNewOBD2DataEP17OBDQueueElement_t>:
	view.updateSpeed(uwSpeed);
}

void Screen1Presenter::setNewOBD2Data(OBDQueueElement_t* pOBD2Data)
{
	switch(pOBD2Data->pid){
90008e18:	780b      	ldrb	r3, [r1, #0]
90008e1a:	3b04      	subs	r3, #4
90008e1c:	2b42      	cmp	r3, #66	@ 0x42
90008e1e:	d823      	bhi.n	90008e68 <_ZN16Screen1Presenter14setNewOBD2DataEP17OBDQueueElement_t+0x50>
90008e20:	e8df f003 	tbb	[pc, r3]
90008e24:	22222823 	.word	0x22222823
90008e28:	302c2222 	.word	0x302c2222
90008e2c:	3c223834 	.word	0x3c223834
90008e30:	22222240 	.word	0x22222240
90008e34:	22222245 	.word	0x22222245
90008e38:	22222222 	.word	0x22222222
90008e3c:	22222222 	.word	0x22222222
90008e40:	22222222 	.word	0x22222222
90008e44:	22222222 	.word	0x22222222
90008e48:	22222222 	.word	0x22222222
90008e4c:	22222222 	.word	0x22222222
90008e50:	4b222222 	.word	0x4b222222
90008e54:	22222222 	.word	0x22222222
90008e58:	22222222 	.word	0x22222222
90008e5c:	2222224f 	.word	0x2222224f
90008e60:	22222222 	.word	0x22222222
90008e64:	2222      	.short	0x2222
90008e66:	54          	.byte	0x54
90008e67:	00          	.byte	0x00
			break;

		default:
			break;
	}
}
90008e68:	4770      	bx	lr
			view.updateEngineLoad(pOBD2Data->fData);
90008e6a:	ed91 0a02 	vldr	s0, [r1, #8]
90008e6e:	68c0      	ldr	r0, [r0, #12]
90008e70:	f000 b98c 	b.w	9000918c <_ZN11Screen1View16updateEngineLoadEf>
			view.updateCoolantTemp(pOBD2Data->uwData);
90008e74:	6849      	ldr	r1, [r1, #4]
90008e76:	68c0      	ldr	r0, [r0, #12]
90008e78:	f000 b9a2 	b.w	900091c0 <_ZN11Screen1View17updateCoolantTempEm>
			view.updateFuelPressure(pOBD2Data->uwData);
90008e7c:	6849      	ldr	r1, [r1, #4]
90008e7e:	68c0      	ldr	r0, [r0, #12]
90008e80:	f000 ba18 	b.w	900092b4 <_ZN11Screen1View18updateFuelPressureEm>
			view.updateManifoldPressure(pOBD2Data->uwData);
90008e84:	6849      	ldr	r1, [r1, #4]
90008e86:	68c0      	ldr	r0, [r0, #12]
90008e88:	f000 b9fe 	b.w	90009288 <_ZN11Screen1View22updateManifoldPressureEm>
			view.updateRPMs(pOBD2Data->uwData);
90008e8c:	6849      	ldr	r1, [r1, #4]
90008e8e:	68c0      	ldr	r0, [r0, #12]
90008e90:	f000 b962 	b.w	90009158 <_ZN11Screen1View10updateRPMsEm>
			view.updateSpeed(pOBD2Data->uwData);
90008e94:	6849      	ldr	r1, [r1, #4]
90008e96:	68c0      	ldr	r0, [r0, #12]
90008e98:	f000 b944 	b.w	90009124 <_ZN11Screen1View11updateSpeedEm>
			view.updateIntakeAirTemp(pOBD2Data->uwData);
90008e9c:	6849      	ldr	r1, [r1, #4]
90008e9e:	68c0      	ldr	r0, [r0, #12]
90008ea0:	f000 b9a8 	b.w	900091f4 <_ZN11Screen1View19updateIntakeAirTempEm>
			view.updateMAFRate(pOBD2Data->fData);
90008ea4:	ed91 0a02 	vldr	s0, [r1, #8]
90008ea8:	68c0      	ldr	r0, [r0, #12]
90008eaa:	f000 b9d3 	b.w	90009254 <_ZN11Screen1View13updateMAFRateEf>
			view.updateOxySensor1(pOBD2Data->uwData, pOBD2Data->fData);
90008eae:	ed91 0a02 	vldr	s0, [r1, #8]
90008eb2:	68c0      	ldr	r0, [r0, #12]
90008eb4:	6849      	ldr	r1, [r1, #4]
90008eb6:	f000 ba43 	b.w	90009340 <_ZN11Screen1View16updateOxySensor1Emf>
			view.updateAbsBaroPressure(pOBD2Data->uwData);
90008eba:	6849      	ldr	r1, [r1, #4]
90008ebc:	68c0      	ldr	r0, [r0, #12]
90008ebe:	f000 ba29 	b.w	90009314 <_ZN11Screen1View21updateAbsBaroPressureEm>
			view.updateCatalystTemp(pOBD2Data->fData);
90008ec2:	ed91 0a02 	vldr	s0, [r1, #8]
90008ec6:	68c0      	ldr	r0, [r0, #12]
90008ec8:	f000 ba0a 	b.w	900092e0 <_ZN11Screen1View18updateCatalystTempEf>
			view.updateAmbientAirTemp(pOBD2Data->uwData);
90008ecc:	6849      	ldr	r1, [r1, #4]
90008ece:	68c0      	ldr	r0, [r0, #12]
90008ed0:	f000 b9a6 	b.w	90009220 <_ZN11Screen1View20updateAmbientAirTempEm>

90008ed4 <_ZThn4_N16Screen1Presenter14setNewOBD2DataEP17OBDQueueElement_t>:

    void setNewSpeed(uint32_t uwSpeed);	// OBSOLETE - do not use!!

    // Methods to transfer OBD2 data from Model -> Presenter -> View:
    void setNewOBD2Data(OBDQueueElement_t* pOBD2Data);
90008ed4:	780b      	ldrb	r3, [r1, #0]
90008ed6:	3b04      	subs	r3, #4
90008ed8:	2b42      	cmp	r3, #66	@ 0x42
90008eda:	d823      	bhi.n	90008f24 <_ZThn4_N16Screen1Presenter14setNewOBD2DataEP17OBDQueueElement_t+0x50>
90008edc:	e8df f003 	tbb	[pc, r3]
90008ee0:	22222823 	.word	0x22222823
90008ee4:	302c2222 	.word	0x302c2222
90008ee8:	3c223834 	.word	0x3c223834
90008eec:	22222240 	.word	0x22222240
90008ef0:	22222245 	.word	0x22222245
90008ef4:	22222222 	.word	0x22222222
90008ef8:	22222222 	.word	0x22222222
90008efc:	22222222 	.word	0x22222222
90008f00:	22222222 	.word	0x22222222
90008f04:	22222222 	.word	0x22222222
90008f08:	22222222 	.word	0x22222222
90008f0c:	4b222222 	.word	0x4b222222
90008f10:	22222222 	.word	0x22222222
90008f14:	22222222 	.word	0x22222222
90008f18:	2222224f 	.word	0x2222224f
90008f1c:	22222222 	.word	0x22222222
90008f20:	2222      	.short	0x2222
90008f22:	54          	.byte	0x54
90008f23:	00          	.byte	0x00
90008f24:	4770      	bx	lr
90008f26:	ed91 0a02 	vldr	s0, [r1, #8]
90008f2a:	6880      	ldr	r0, [r0, #8]
90008f2c:	f000 b92e 	b.w	9000918c <_ZN11Screen1View16updateEngineLoadEf>
90008f30:	6849      	ldr	r1, [r1, #4]
90008f32:	6880      	ldr	r0, [r0, #8]
90008f34:	f000 b944 	b.w	900091c0 <_ZN11Screen1View17updateCoolantTempEm>
90008f38:	6849      	ldr	r1, [r1, #4]
90008f3a:	6880      	ldr	r0, [r0, #8]
90008f3c:	f000 b9ba 	b.w	900092b4 <_ZN11Screen1View18updateFuelPressureEm>
90008f40:	6849      	ldr	r1, [r1, #4]
90008f42:	6880      	ldr	r0, [r0, #8]
90008f44:	f000 b9a0 	b.w	90009288 <_ZN11Screen1View22updateManifoldPressureEm>
90008f48:	6849      	ldr	r1, [r1, #4]
90008f4a:	6880      	ldr	r0, [r0, #8]
90008f4c:	f000 b904 	b.w	90009158 <_ZN11Screen1View10updateRPMsEm>
90008f50:	6849      	ldr	r1, [r1, #4]
90008f52:	6880      	ldr	r0, [r0, #8]
90008f54:	f000 b8e6 	b.w	90009124 <_ZN11Screen1View11updateSpeedEm>
90008f58:	6849      	ldr	r1, [r1, #4]
90008f5a:	6880      	ldr	r0, [r0, #8]
90008f5c:	f000 b94a 	b.w	900091f4 <_ZN11Screen1View19updateIntakeAirTempEm>
90008f60:	ed91 0a02 	vldr	s0, [r1, #8]
90008f64:	6880      	ldr	r0, [r0, #8]
90008f66:	f000 b975 	b.w	90009254 <_ZN11Screen1View13updateMAFRateEf>
90008f6a:	ed91 0a02 	vldr	s0, [r1, #8]
90008f6e:	6880      	ldr	r0, [r0, #8]
90008f70:	6849      	ldr	r1, [r1, #4]
90008f72:	f000 b9e5 	b.w	90009340 <_ZN11Screen1View16updateOxySensor1Emf>
90008f76:	6849      	ldr	r1, [r1, #4]
90008f78:	6880      	ldr	r0, [r0, #8]
90008f7a:	f000 b9cb 	b.w	90009314 <_ZN11Screen1View21updateAbsBaroPressureEm>
90008f7e:	ed91 0a02 	vldr	s0, [r1, #8]
90008f82:	6880      	ldr	r0, [r0, #8]
90008f84:	f000 b9ac 	b.w	900092e0 <_ZN11Screen1View18updateCatalystTempEf>
90008f88:	6849      	ldr	r1, [r1, #4]
90008f8a:	6880      	ldr	r0, [r0, #8]
90008f8c:	f000 b948 	b.w	90009220 <_ZN11Screen1View20updateAmbientAirTempEm>

90008f90 <_ZN16Screen1PresenterC1ER11Screen1View>:
    : view(v)
90008f90:	4a05      	ldr	r2, [pc, #20]	@ (90008fa8 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
90008f92:	60c1      	str	r1, [r0, #12]
90008f94:	6002      	str	r2, [r0, #0]
Screen1Presenter::Screen1Presenter(Screen1View& v)
90008f96:	b410      	push	{r4}
    ModelListener() : model(0) {}
90008f98:	2400      	movs	r4, #0
90008f9a:	6084      	str	r4, [r0, #8]
    : view(v)
90008f9c:	f102 041c 	add.w	r4, r2, #28
90008fa0:	6044      	str	r4, [r0, #4]
}
90008fa2:	f85d 4b04 	ldr.w	r4, [sp], #4
90008fa6:	4770      	bx	lr
90008fa8:	9002f500 	.word	0x9002f500

90008fac <_ZN16Screen1Presenter9saveSpeedEm>:
	model->saveSpeed(uwSpeed);
90008fac:	6880      	ldr	r0, [r0, #8]
90008fae:	f7ff bf0b 	b.w	90008dc8 <_ZN5Model9saveSpeedEm>
90008fb2:	bf00      	nop

90008fb4 <_ZN16Screen1Presenter7saveRPMEm>:
	model->saveRPM(uwRPM);
90008fb4:	6880      	ldr	r0, [r0, #8]
90008fb6:	f7ff bf09 	b.w	90008dcc <_ZN5Model7saveRPMEm>
90008fba:	bf00      	nop

90008fbc <_ZN16Screen1Presenter15saveAmbientTempEm>:
	model->saveAmbientTemp(temp);
90008fbc:	6880      	ldr	r0, [r0, #8]
90008fbe:	f7ff bf07 	b.w	90008dd0 <_ZN5Model15saveAmbientTempEm>
90008fc2:	bf00      	nop

90008fc4 <_ZN16Screen1Presenter15saveCoolantTempEm>:
	model->saveCoolantTemp(temp);
90008fc4:	6880      	ldr	r0, [r0, #8]
90008fc6:	f7ff bf05 	b.w	90008dd4 <_ZN5Model15saveCoolantTempEm>
90008fca:	bf00      	nop

90008fcc <_ZN16Screen1Presenter13getSavedSpeedEv>:
	return model->getSavedSpeed();
90008fcc:	6880      	ldr	r0, [r0, #8]
90008fce:	f7ff bf03 	b.w	90008dd8 <_ZN5Model13getSavedSpeedEv>
90008fd2:	bf00      	nop

90008fd4 <_ZN16Screen1Presenter11getSavedRPMEv>:
	return model->getSavedRPM();
90008fd4:	6880      	ldr	r0, [r0, #8]
90008fd6:	f7ff bf01 	b.w	90008ddc <_ZN5Model11getSavedRPMEv>
90008fda:	bf00      	nop

90008fdc <_ZN16Screen1Presenter19getSavedAmbientTempEv>:
	return model->getSavedAmbientTemp();
90008fdc:	6880      	ldr	r0, [r0, #8]
90008fde:	f7ff beff 	b.w	90008de0 <_ZN5Model19getSavedAmbientTempEv>
90008fe2:	bf00      	nop

90008fe4 <_ZN16Screen1Presenter19getSavedCoolantTempEv>:
	return model->getSavedCoolantTemp();
90008fe4:	6880      	ldr	r0, [r0, #8]
90008fe6:	f7ff befd 	b.w	90008de4 <_ZN5Model19getSavedCoolantTempEv>
90008fea:	bf00      	nop

90008fec <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
90008fec:	4770      	bx	lr
90008fee:	bf00      	nop

90008ff0 <_ZN8touchgfx8CallbackI11Screen1ViewRKNS_5ImageERKNS_10ClickEventEvED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
90008ff0:	4770      	bx	lr
90008ff2:	bf00      	nop

90008ff4 <_ZN8touchgfx8CallbackI11Screen1ViewRKNS_5ImageERKNS_10ClickEventEvE7executeES4_S7_>:
    virtual void execute(T1 t1, T2 t2)
90008ff4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1, t2);
90008ff6:	68c3      	ldr	r3, [r0, #12]
90008ff8:	e9d0 5401 	ldrd	r5, r4, [r0, #4]
90008ffc:	f013 0f01 	tst.w	r3, #1
90009000:	eb05 0063 	add.w	r0, r5, r3, asr #1
90009004:	d004      	beq.n	90009010 <_ZN8touchgfx8CallbackI11Screen1ViewRKNS_5ImageERKNS_10ClickEventEvE7executeES4_S7_+0x1c>
90009006:	ea4f 0c63 	mov.w	ip, r3, asr #1
9000900a:	f855 300c 	ldr.w	r3, [r5, ip]
9000900e:	591c      	ldr	r4, [r3, r4]
90009010:	4623      	mov	r3, r4
    }
90009012:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1, t2);
90009014:	4718      	bx	r3
90009016:	bf00      	nop

90009018 <_ZNK8touchgfx8CallbackI11Screen1ViewRKNS_5ImageERKNS_10ClickEventEvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90009018:	6843      	ldr	r3, [r0, #4]
9000901a:	b13b      	cbz	r3, 9000902c <_ZNK8touchgfx8CallbackI11Screen1ViewRKNS_5ImageERKNS_10ClickEventEvE7isValidEv+0x14>
9000901c:	6883      	ldr	r3, [r0, #8]
9000901e:	b10b      	cbz	r3, 90009024 <_ZNK8touchgfx8CallbackI11Screen1ViewRKNS_5ImageERKNS_10ClickEventEvE7isValidEv+0xc>
90009020:	2001      	movs	r0, #1
    }
90009022:	4770      	bx	lr
90009024:	68c0      	ldr	r0, [r0, #12]
90009026:	f000 0001 	and.w	r0, r0, #1
9000902a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
9000902c:	4618      	mov	r0, r3
9000902e:	4770      	bx	lr

90009030 <_ZN8touchgfx8CallbackI11Screen1ViewRKNS_5ImageERKNS_10ClickEventEvED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
90009030:	b510      	push	{r4, lr}
90009032:	4604      	mov	r4, r0
90009034:	2110      	movs	r1, #16
90009036:	f022 fa66 	bl	9002b506 <_ZdlPvj>
9000903a:	4620      	mov	r0, r4
9000903c:	bd10      	pop	{r4, pc}
9000903e:	bf00      	nop

90009040 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
90009040:	4b03      	ldr	r3, [pc, #12]	@ (90009050 <_ZN11Screen1ViewD1Ev+0x10>)
90009042:	b510      	push	{r4, lr}
90009044:	4604      	mov	r4, r0
90009046:	6003      	str	r3, [r0, #0]
90009048:	f7fd f902 	bl	90006250 <_ZN15Screen1ViewBaseD1Ev>
9000904c:	4620      	mov	r0, r4
9000904e:	bd10      	pop	{r4, pc}
90009050:	9002f55c 	.word	0x9002f55c

90009054 <_ZN11Screen1ViewD0Ev>:
90009054:	4b06      	ldr	r3, [pc, #24]	@ (90009070 <_ZN11Screen1ViewD0Ev+0x1c>)
90009056:	b510      	push	{r4, lr}
90009058:	4604      	mov	r4, r0
9000905a:	6003      	str	r3, [r0, #0]
9000905c:	f7fd f8f8 	bl	90006250 <_ZN15Screen1ViewBaseD1Ev>
90009060:	f640 31fc 	movw	r1, #3068	@ 0xbfc
90009064:	4620      	mov	r0, r4
90009066:	f022 fa4e 	bl	9002b506 <_ZdlPvj>
9000906a:	4620      	mov	r0, r4
9000906c:	bd10      	pop	{r4, pc}
9000906e:	bf00      	nop
90009070:	9002f55c 	.word	0x9002f55c

90009074 <_ZN11Screen1View22backgroundClickHandlerERKN8touchgfx5ImageERKNS0_10ClickEventE>:



void Screen1View::backgroundClickHandler(const Image& image, const ClickEvent& event)
{
    if (&image == &image1)
90009074:	306c      	adds	r0, #108	@ 0x6c
90009076:	4288      	cmp	r0, r1
90009078:	d000      	beq.n	9000907c <_ZN11Screen1View22backgroundClickHandlerERKN8touchgfx5ImageERKNS0_10ClickEventE+0x8>
9000907a:	4770      	bx	lr
{
9000907c:	b508      	push	{r3, lr}
9000907e:	f011 fdbd 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Implement what should happen when 'image' is touched/clicked here.
    	//Go to Screen1 with screen transition towards East
    	application().gotoScreen1ScreenCoverTransitionEast();
    }
}
90009082:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    	application().gotoScreen1ScreenCoverTransitionEast();
90009086:	f7fd b80d 	b.w	900060a4 <_ZN23FrontendApplicationBase36gotoScreen1ScreenCoverTransitionEastEv>
9000908a:	bf00      	nop

9000908c <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
9000908c:	b510      	push	{r4, lr}
9000908e:	4604      	mov	r4, r0
: backgroundClickedCallback(this, &Screen1View::backgroundClickHandler)
90009090:	f7fd f9dc 	bl	9000644c <_ZN15Screen1ViewBaseC1Ev>
90009094:	4807      	ldr	r0, [pc, #28]	@ (900090b4 <_ZN11Screen1ViewC1Ev+0x28>)
        : pobject(pObject), pmemfun(pmemfun_2)
90009096:	2300      	movs	r3, #0
90009098:	4907      	ldr	r1, [pc, #28]	@ (900090b8 <_ZN11Screen1ViewC1Ev+0x2c>)
9000909a:	4a08      	ldr	r2, [pc, #32]	@ (900090bc <_ZN11Screen1ViewC1Ev+0x30>)
9000909c:	6020      	str	r0, [r4, #0]
}
9000909e:	4620      	mov	r0, r4
900090a0:	f8c4 1bec 	str.w	r1, [r4, #3052]	@ 0xbec
900090a4:	f8c4 4bf0 	str.w	r4, [r4, #3056]	@ 0xbf0
900090a8:	f8c4 2bf4 	str.w	r2, [r4, #3060]	@ 0xbf4
900090ac:	f8c4 3bf8 	str.w	r3, [r4, #3064]	@ 0xbf8
900090b0:	bd10      	pop	{r4, pc}
900090b2:	bf00      	nop
900090b4:	9002f55c 	.word	0x9002f55c
900090b8:	9002f544 	.word	0x9002f544
900090bc:	90009075 	.word	0x90009075

900090c0 <_ZN11Screen1View11setupScreenEv>:
{
900090c0:	b570      	push	{r4, r5, r6, lr}
900090c2:	4604      	mov	r4, r0
    Unicode::snprintf(textSpeedBuffer, TEXTSPEED_SIZE, "%d", presenter->getSavedSpeed());
900090c4:	4d16      	ldr	r5, [pc, #88]	@ (90009120 <_ZN11Screen1View11setupScreenEv+0x60>)
    Screen1ViewBase::setupScreen();
900090c6:	f7fd f8c5 	bl	90006254 <_ZN15Screen1ViewBase11setupScreenEv>
    Unicode::snprintf(textSpeedBuffer, TEXTSPEED_SIZE, "%d", presenter->getSavedSpeed());
900090ca:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
900090cc:	f7ff ff7e 	bl	90008fcc <_ZN16Screen1Presenter13getSavedSpeedEv>
900090d0:	462a      	mov	r2, r5
900090d2:	4603      	mov	r3, r0
900090d4:	2105      	movs	r1, #5
900090d6:	f604 20f4 	addw	r0, r4, #2804	@ 0xaf4
900090da:	f014 ff0b 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    Unicode::snprintf(textRPMsBuffer, TEXTRPMS_SIZE, "%d", presenter->getSavedRPM());
900090de:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
900090e0:	f7ff ff78 	bl	90008fd4 <_ZN16Screen1Presenter11getSavedRPMEv>
900090e4:	462a      	mov	r2, r5
900090e6:	4603      	mov	r3, r0
900090e8:	210a      	movs	r1, #10
900090ea:	f604 20fe 	addw	r0, r4, #2814	@ 0xafe
900090ee:	f014 ff01 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    Unicode::snprintf(textAmbientTempBuffer, TEXTAMBIENTTEMP_SIZE, "%d", presenter->getSavedAmbientTemp());
900090f2:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
900090f4:	f7ff ff72 	bl	90008fdc <_ZN16Screen1Presenter19getSavedAmbientTempEv>
900090f8:	462a      	mov	r2, r5
900090fa:	4603      	mov	r3, r0
900090fc:	210a      	movs	r1, #10
900090fe:	f604 304e 	addw	r0, r4, #2894	@ 0xb4e
90009102:	f014 fef7 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    Unicode::snprintf(textCoolTempBuffer, TEXTCOOLTEMP_SIZE, "%d", presenter->getSavedCoolantTemp());
90009106:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90009108:	f7ff ff6c 	bl	90008fe4 <_ZN16Screen1Presenter19getSavedCoolantTempEv>
9000910c:	462a      	mov	r2, r5
9000910e:	4603      	mov	r3, r0
90009110:	210a      	movs	r1, #10
90009112:	f604 3026 	addw	r0, r4, #2854	@ 0xb26
}
90009116:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    Unicode::snprintf(textCoolTempBuffer, TEXTCOOLTEMP_SIZE, "%d", presenter->getSavedCoolantTemp());
9000911a:	f014 beeb 	b.w	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
9000911e:	bf00      	nop
90009120:	9002f530 	.word	0x9002f530

90009124 <_ZN11Screen1View11updateSpeedEm>:



// update speed:
void Screen1View::updateSpeed(uint32_t uwSpeed)
{
90009124:	b570      	push	{r4, r5, r6, lr}
90009126:	4604      	mov	r4, r0
90009128:	460d      	mov	r5, r1
	Unicode::snprintf(textSpeedBuffer, TEXTSPEED_SIZE, "%d", uwSpeed);
9000912a:	4a0a      	ldr	r2, [pc, #40]	@ (90009154 <_ZN11Screen1View11updateSpeedEm+0x30>)
9000912c:	2105      	movs	r1, #5
	textSpeed.resizeHeightToCurrentText();
9000912e:	f204 461c 	addw	r6, r4, #1052	@ 0x41c
	Unicode::snprintf(textSpeedBuffer, TEXTSPEED_SIZE, "%d", uwSpeed);
90009132:	462b      	mov	r3, r5
90009134:	f600 20f4 	addw	r0, r0, #2804	@ 0xaf4
90009138:	f014 fedc 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textSpeed.resizeHeightToCurrentText();
9000913c:	4630      	mov	r0, r6
9000913e:	f00e fdd7 	bl	90017cf0 <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv>
	textSpeed.invalidate();
90009142:	4630      	mov	r0, r6
90009144:	f012 fe11 	bl	9001bd6a <_ZNK8touchgfx8Drawable10invalidateEv>
	presenter->saveSpeed(uwSpeed);
90009148:	4629      	mov	r1, r5
9000914a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
}
9000914c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	presenter->saveSpeed(uwSpeed);
90009150:	f7ff bf2c 	b.w	90008fac <_ZN16Screen1Presenter9saveSpeedEm>
90009154:	9002f530 	.word	0x9002f530

90009158 <_ZN11Screen1View10updateRPMsEm>:

// update RPMs:
void Screen1View::updateRPMs(uint32_t uwRPMs)
{
90009158:	b570      	push	{r4, r5, r6, lr}
9000915a:	4604      	mov	r4, r0
9000915c:	460d      	mov	r5, r1
	Unicode::snprintf(textRPMsBuffer, TEXTRPMS_SIZE, "%d", uwRPMs);
9000915e:	4a0a      	ldr	r2, [pc, #40]	@ (90009188 <_ZN11Screen1View10updateRPMsEm+0x30>)
90009160:	210a      	movs	r1, #10
	textRPMs.resizeHeightToCurrentText();
90009162:	f504 669f 	add.w	r6, r4, #1272	@ 0x4f8
	Unicode::snprintf(textRPMsBuffer, TEXTRPMS_SIZE, "%d", uwRPMs);
90009166:	462b      	mov	r3, r5
90009168:	f600 20fe 	addw	r0, r0, #2814	@ 0xafe
9000916c:	f014 fec2 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textRPMs.resizeHeightToCurrentText();
90009170:	4630      	mov	r0, r6
90009172:	f00e fdbd 	bl	90017cf0 <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv>
	textRPMs.invalidate();
90009176:	4630      	mov	r0, r6
90009178:	f012 fdf7 	bl	9001bd6a <_ZNK8touchgfx8Drawable10invalidateEv>
	presenter->saveRPM(uwRPMs);
9000917c:	4629      	mov	r1, r5
9000917e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
}
90009180:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	presenter->saveRPM(uwRPMs);
90009184:	f7ff bf16 	b.w	90008fb4 <_ZN16Screen1Presenter7saveRPMEm>
90009188:	9002f530 	.word	0x9002f530

9000918c <_ZN11Screen1View16updateEngineLoadEf>:

// update Engine Loads:
void Screen1View::updateEngineLoad(float fEngLoad)
{
9000918c:	b510      	push	{r4, lr}
9000918e:	4604      	mov	r4, r0
90009190:	b082      	sub	sp, #8
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
90009192:	4a0a      	ldr	r2, [pc, #40]	@ (900091bc <_ZN11Screen1View16updateEngineLoadEf+0x30>)
90009194:	210a      	movs	r1, #10
	Unicode::snprintfFloat(textEngLoadBuffer, TEXTENGLOAD_SIZE, "%3.1f", fEngLoad);
	textEngLoad.resizeHeightToCurrentText();
90009196:	f204 5444 	addw	r4, r4, #1348	@ 0x544
9000919a:	ab01      	add	r3, sp, #4
9000919c:	f600 3012 	addw	r0, r0, #2834	@ 0xb12
900091a0:	ed8d 0a01 	vstr	s0, [sp, #4]
900091a4:	f015 f862 	bl	9001e26c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
900091a8:	4620      	mov	r0, r4
900091aa:	f00e fda1 	bl	90017cf0 <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv>
	textEngLoad.invalidate();
900091ae:	4620      	mov	r0, r4
}
900091b0:	b002      	add	sp, #8
900091b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textEngLoad.invalidate();
900091b6:	f012 bdd8 	b.w	9001bd6a <_ZNK8touchgfx8Drawable10invalidateEv>
900091ba:	bf00      	nop
900091bc:	9002f534 	.word	0x9002f534

900091c0 <_ZN11Screen1View17updateCoolantTempEm>:

void Screen1View::updateCoolantTemp(uint32_t uwCoolTemp)
{
900091c0:	b570      	push	{r4, r5, r6, lr}
900091c2:	4604      	mov	r4, r0
900091c4:	460d      	mov	r5, r1
	Unicode::snprintf(textCoolTempBuffer, TEXTCOOLTEMP_SIZE, "%d", uwCoolTemp);
900091c6:	4a0a      	ldr	r2, [pc, #40]	@ (900091f0 <_ZN11Screen1View17updateCoolantTempEm+0x30>)
900091c8:	210a      	movs	r1, #10
	textCoolTemp.resizeHeightToCurrentText();
900091ca:	f604 0618 	addw	r6, r4, #2072	@ 0x818
	Unicode::snprintf(textCoolTempBuffer, TEXTCOOLTEMP_SIZE, "%d", uwCoolTemp);
900091ce:	462b      	mov	r3, r5
900091d0:	f600 3026 	addw	r0, r0, #2854	@ 0xb26
900091d4:	f014 fe8e 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textCoolTemp.resizeHeightToCurrentText();
900091d8:	4630      	mov	r0, r6
900091da:	f00e fd89 	bl	90017cf0 <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv>
	textCoolTemp.invalidate();
900091de:	4630      	mov	r0, r6
900091e0:	f012 fdc3 	bl	9001bd6a <_ZNK8touchgfx8Drawable10invalidateEv>
	presenter->saveCoolantTemp(uwCoolTemp);
900091e4:	4629      	mov	r1, r5
900091e6:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
}
900091e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	presenter->saveCoolantTemp(uwCoolTemp);
900091ec:	f7ff beea 	b.w	90008fc4 <_ZN16Screen1Presenter15saveCoolantTempEm>
900091f0:	9002f530 	.word	0x9002f530

900091f4 <_ZN11Screen1View19updateIntakeAirTempEm>:

void Screen1View::updateIntakeAirTemp(uint32_t uwIntakeAirTemp)
{
900091f4:	b510      	push	{r4, lr}
900091f6:	4604      	mov	r4, r0
900091f8:	460b      	mov	r3, r1
	Unicode::snprintf(textIntakeTempBuffer, TEXTINTAKETEMP_SIZE, "%d", uwIntakeAirTemp);
900091fa:	4a08      	ldr	r2, [pc, #32]	@ (9000921c <_ZN11Screen1View19updateIntakeAirTempEm+0x28>)
900091fc:	210a      	movs	r1, #10
	textIntakeTemp.resizeHeightToCurrentText();
900091fe:	f604 0464 	addw	r4, r4, #2148	@ 0x864
	Unicode::snprintf(textIntakeTempBuffer, TEXTINTAKETEMP_SIZE, "%d", uwIntakeAirTemp);
90009202:	f600 303a 	addw	r0, r0, #2874	@ 0xb3a
90009206:	f014 fe75 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textIntakeTemp.resizeHeightToCurrentText();
9000920a:	4620      	mov	r0, r4
9000920c:	f00e fd70 	bl	90017cf0 <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv>
	textIntakeTemp.invalidate();
90009210:	4620      	mov	r0, r4
}
90009212:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textIntakeTemp.invalidate();
90009216:	f012 bda8 	b.w	9001bd6a <_ZNK8touchgfx8Drawable10invalidateEv>
9000921a:	bf00      	nop
9000921c:	9002f530 	.word	0x9002f530

90009220 <_ZN11Screen1View20updateAmbientAirTempEm>:

void Screen1View::updateAmbientAirTemp(uint32_t uwAmbientAirTemp)
{
90009220:	b570      	push	{r4, r5, r6, lr}
90009222:	4604      	mov	r4, r0
90009224:	460d      	mov	r5, r1
	Unicode::snprintf(textAmbientTempBuffer, TEXTAMBIENTTEMP_SIZE, "%d", uwAmbientAirTemp);
90009226:	4a0a      	ldr	r2, [pc, #40]	@ (90009250 <_ZN11Screen1View20updateAmbientAirTempEm+0x30>)
90009228:	210a      	movs	r1, #10
	textAmbientTemp.resizeHeightToCurrentText();
9000922a:	f504 660b 	add.w	r6, r4, #2224	@ 0x8b0
	Unicode::snprintf(textAmbientTempBuffer, TEXTAMBIENTTEMP_SIZE, "%d", uwAmbientAirTemp);
9000922e:	462b      	mov	r3, r5
90009230:	f600 304e 	addw	r0, r0, #2894	@ 0xb4e
90009234:	f014 fe5e 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textAmbientTemp.resizeHeightToCurrentText();
90009238:	4630      	mov	r0, r6
9000923a:	f00e fd59 	bl	90017cf0 <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv>
	textAmbientTemp.invalidate();
9000923e:	4630      	mov	r0, r6
90009240:	f012 fd93 	bl	9001bd6a <_ZNK8touchgfx8Drawable10invalidateEv>
	presenter->saveAmbientTemp(uwAmbientAirTemp);
90009244:	4629      	mov	r1, r5
90009246:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
}
90009248:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	presenter->saveAmbientTemp(uwAmbientAirTemp);
9000924c:	f7ff beb6 	b.w	90008fbc <_ZN16Screen1Presenter15saveAmbientTempEm>
90009250:	9002f530 	.word	0x9002f530

90009254 <_ZN11Screen1View13updateMAFRateEf>:

void Screen1View::updateMAFRate(float fMAFRate)
{
90009254:	b510      	push	{r4, lr}
90009256:	4604      	mov	r4, r0
90009258:	b082      	sub	sp, #8
9000925a:	4a0a      	ldr	r2, [pc, #40]	@ (90009284 <_ZN11Screen1View13updateMAFRateEf+0x30>)
9000925c:	2107      	movs	r1, #7
	Unicode::snprintfFloat(textMAFrateBuffer, TEXTMAFRATE_SIZE, "%3.1f", fMAFRate);
	textMAFrate.resizeHeightToCurrentText();
9000925e:	f604 04fc 	addw	r4, r4, #2300	@ 0x8fc
90009262:	ab01      	add	r3, sp, #4
90009264:	f600 3062 	addw	r0, r0, #2914	@ 0xb62
90009268:	ed8d 0a01 	vstr	s0, [sp, #4]
9000926c:	f014 fffe 	bl	9001e26c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
90009270:	4620      	mov	r0, r4
90009272:	f00e fd3d 	bl	90017cf0 <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv>
	textMAFrate.invalidate();
90009276:	4620      	mov	r0, r4
}
90009278:	b002      	add	sp, #8
9000927a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textMAFrate.invalidate();
9000927e:	f012 bd74 	b.w	9001bd6a <_ZNK8touchgfx8Drawable10invalidateEv>
90009282:	bf00      	nop
90009284:	9002f534 	.word	0x9002f534

90009288 <_ZN11Screen1View22updateManifoldPressureEm>:

void Screen1View::updateManifoldPressure(uint32_t uwManifoldPress)
{
90009288:	b510      	push	{r4, lr}
9000928a:	4604      	mov	r4, r0
9000928c:	460b      	mov	r3, r1
	Unicode::snprintf(textManifoldPressBuffer, TEXTMANIFOLDPRESS_SIZE, "%d", uwManifoldPress);
9000928e:	4a08      	ldr	r2, [pc, #32]	@ (900092b0 <_ZN11Screen1View22updateManifoldPressureEm+0x28>)
90009290:	210a      	movs	r1, #10
	textManifoldPress.resizeHeightToCurrentText();
90009292:	f604 1448 	addw	r4, r4, #2376	@ 0x948
	Unicode::snprintf(textManifoldPressBuffer, TEXTMANIFOLDPRESS_SIZE, "%d", uwManifoldPress);
90009296:	f500 6037 	add.w	r0, r0, #2928	@ 0xb70
9000929a:	f014 fe2b 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textManifoldPress.resizeHeightToCurrentText();
9000929e:	4620      	mov	r0, r4
900092a0:	f00e fd26 	bl	90017cf0 <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv>
	textManifoldPress.invalidate();
900092a4:	4620      	mov	r0, r4
}
900092a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textManifoldPress.invalidate();
900092aa:	f012 bd5e 	b.w	9001bd6a <_ZNK8touchgfx8Drawable10invalidateEv>
900092ae:	bf00      	nop
900092b0:	9002f530 	.word	0x9002f530

900092b4 <_ZN11Screen1View18updateFuelPressureEm>:

void Screen1View::updateFuelPressure(uint32_t uwFuelPress)
{
900092b4:	b510      	push	{r4, lr}
900092b6:	4604      	mov	r4, r0
900092b8:	460b      	mov	r3, r1
	Unicode::snprintf(textFuelPressBuffer, TEXTFUELPRESS_SIZE, "%d", uwFuelPress);
900092ba:	4a08      	ldr	r2, [pc, #32]	@ (900092dc <_ZN11Screen1View18updateFuelPressureEm+0x28>)
900092bc:	210d      	movs	r1, #13
	textFuelPress.resizeHeightToCurrentText();
900092be:	f604 1494 	addw	r4, r4, #2452	@ 0x994
	Unicode::snprintf(textFuelPressBuffer, TEXTFUELPRESS_SIZE, "%d", uwFuelPress);
900092c2:	f600 3084 	addw	r0, r0, #2948	@ 0xb84
900092c6:	f014 fe15 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textFuelPress.resizeHeightToCurrentText();
900092ca:	4620      	mov	r0, r4
900092cc:	f00e fd10 	bl	90017cf0 <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv>
	textFuelPress.invalidate();
900092d0:	4620      	mov	r0, r4
}
900092d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textFuelPress.invalidate();
900092d6:	f012 bd48 	b.w	9001bd6a <_ZNK8touchgfx8Drawable10invalidateEv>
900092da:	bf00      	nop
900092dc:	9002f530 	.word	0x9002f530

900092e0 <_ZN11Screen1View18updateCatalystTempEf>:

void Screen1View::updateCatalystTemp(float fval)
{
900092e0:	b510      	push	{r4, lr}
900092e2:	4604      	mov	r4, r0
900092e4:	b082      	sub	sp, #8
900092e6:	4a0a      	ldr	r2, [pc, #40]	@ (90009310 <_ZN11Screen1View18updateCatalystTempEf+0x30>)
900092e8:	2107      	movs	r1, #7
	Unicode::snprintfFloat(textCatalystTempBuffer, TEXTCATALYSTTEMP_SIZE, "%3.1f", fval);
	textCatalystTemp.resizeHeightToCurrentText();
900092ea:	f604 242c 	addw	r4, r4, #2604	@ 0xa2c
900092ee:	ab01      	add	r3, sp, #4
900092f0:	f600 30b2 	addw	r0, r0, #2994	@ 0xbb2
900092f4:	ed8d 0a01 	vstr	s0, [sp, #4]
900092f8:	f014 ffb8 	bl	9001e26c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
900092fc:	4620      	mov	r0, r4
900092fe:	f00e fcf7 	bl	90017cf0 <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv>
	textCatalystTemp.invalidate();
90009302:	4620      	mov	r0, r4
}
90009304:	b002      	add	sp, #8
90009306:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textCatalystTemp.invalidate();
9000930a:	f012 bd2e 	b.w	9001bd6a <_ZNK8touchgfx8Drawable10invalidateEv>
9000930e:	bf00      	nop
90009310:	9002f534 	.word	0x9002f534

90009314 <_ZN11Screen1View21updateAbsBaroPressureEm>:

void Screen1View::updateAbsBaroPressure(uint32_t uwval)
{
90009314:	b510      	push	{r4, lr}
90009316:	4604      	mov	r4, r0
90009318:	460b      	mov	r3, r1
	Unicode::snprintf(textBaroPressBuffer, TEXTBAROPRESS_SIZE, "%d", uwval);
9000931a:	4a08      	ldr	r2, [pc, #32]	@ (9000933c <_ZN11Screen1View21updateAbsBaroPressureEm+0x28>)
9000931c:	210a      	movs	r1, #10
	textBaroPress.resizeHeightToCurrentText();
9000931e:	f504 641e 	add.w	r4, r4, #2528	@ 0x9e0
	Unicode::snprintf(textBaroPressBuffer, TEXTBAROPRESS_SIZE, "%d", uwval);
90009322:	f600 309e 	addw	r0, r0, #2974	@ 0xb9e
90009326:	f014 fde5 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textBaroPress.resizeHeightToCurrentText();
9000932a:	4620      	mov	r0, r4
9000932c:	f00e fce0 	bl	90017cf0 <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv>
	textBaroPress.invalidate();
90009330:	4620      	mov	r0, r4
}
90009332:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textBaroPress.invalidate();
90009336:	f012 bd18 	b.w	9001bd6a <_ZNK8touchgfx8Drawable10invalidateEv>
9000933a:	bf00      	nop
9000933c:	9002f530 	.word	0x9002f530

90009340 <_ZN11Screen1View16updateOxySensor1Emf>:

void Screen1View::updateOxySensor1(uint32_t uwval, float fval)
{
90009340:	b530      	push	{r4, r5, lr}
	Unicode::snprintf(textOXYSensor1Buffer1, TEXTOXYSENSOR1BUFFER1_SIZE, "%d", "%3.1f", uwval, fval);
90009342:	eeb7 0ac0 	vcvt.f64.f32	d0, s0
{
90009346:	4604      	mov	r4, r0
90009348:	b085      	sub	sp, #20
9000934a:	460d      	mov	r5, r1
	textOXYSensor1.resizeHeightToCurrentText();
9000934c:	f604 2478 	addw	r4, r4, #2680	@ 0xa78
	Unicode::snprintf(textOXYSensor1Buffer1, TEXTOXYSENSOR1BUFFER1_SIZE, "%d", "%3.1f", uwval, fval);
90009350:	4b09      	ldr	r3, [pc, #36]	@ (90009378 <_ZN11Screen1View16updateOxySensor1Emf+0x38>)
90009352:	4a0a      	ldr	r2, [pc, #40]	@ (9000937c <_ZN11Screen1View16updateOxySensor1Emf+0x3c>)
90009354:	2107      	movs	r1, #7
90009356:	9500      	str	r5, [sp, #0]
90009358:	f500 603c 	add.w	r0, r0, #3008	@ 0xbc0
9000935c:	ed8d 0b02 	vstr	d0, [sp, #8]
90009360:	f014 fdc8 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textOXYSensor1.resizeHeightToCurrentText();
90009364:	4620      	mov	r0, r4
90009366:	f00e fcc3 	bl	90017cf0 <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv>
	textOXYSensor1.invalidate();
9000936a:	4620      	mov	r0, r4
}
9000936c:	b005      	add	sp, #20
9000936e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	textOXYSensor1.invalidate();
90009372:	f012 bcfa 	b.w	9001bd6a <_ZNK8touchgfx8Drawable10invalidateEv>
90009376:	bf00      	nop
90009378:	9002f534 	.word	0x9002f534
9000937c:	9002f530 	.word	0x9002f530

90009380 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {};
90009380:	4770      	bx	lr
90009382:	bf00      	nop

90009384 <_ZThn4_N16Screen2PresenterD1Ev>:
90009384:	3804      	subs	r0, #4
90009386:	4770      	bx	lr

90009388 <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
90009388:	4770      	bx	lr
9000938a:	bf00      	nop

9000938c <_ZN16Screen2PresenterD0Ev>:
9000938c:	b510      	push	{r4, lr}
9000938e:	4604      	mov	r4, r0
90009390:	2110      	movs	r1, #16
90009392:	f022 f8b8 	bl	9002b506 <_ZdlPvj>
90009396:	4620      	mov	r0, r4
90009398:	bd10      	pop	{r4, pc}
9000939a:	bf00      	nop

9000939c <_ZThn4_N16Screen2PresenterD0Ev>:
9000939c:	b510      	push	{r4, lr}
9000939e:	1f04      	subs	r4, r0, #4
900093a0:	2110      	movs	r1, #16
900093a2:	4620      	mov	r0, r4
900093a4:	f022 f8af 	bl	9002b506 <_ZdlPvj>
900093a8:	4620      	mov	r0, r4
900093aa:	bd10      	pop	{r4, pc}

900093ac <_ZN16Screen2Presenter15setNewGaugeDataEP17OBDQueueElement_t>:
	return model->getSavedCoolantTemp();
}

void Screen2Presenter::setNewGaugeData(OBDQueueElement_t* pOBD2Data)
{
	switch(pOBD2Data->pid){
900093ac:	780b      	ldrb	r3, [r1, #0]
900093ae:	2b0d      	cmp	r3, #13
900093b0:	d013      	beq.n	900093da <_ZN16Screen2Presenter15setNewGaugeDataEP17OBDQueueElement_t+0x2e>
900093b2:	d807      	bhi.n	900093c4 <_ZN16Screen2Presenter15setNewGaugeDataEP17OBDQueueElement_t+0x18>
900093b4:	2b05      	cmp	r3, #5
900093b6:	d00c      	beq.n	900093d2 <_ZN16Screen2Presenter15setNewGaugeDataEP17OBDQueueElement_t+0x26>
900093b8:	2b0c      	cmp	r3, #12
900093ba:	d112      	bne.n	900093e2 <_ZN16Screen2Presenter15setNewGaugeDataEP17OBDQueueElement_t+0x36>
		case OBD2_PID_VEHICLE_SPEED:
			view.updateSpeed(pOBD2Data->uwData);
			break;

		case OBD2_PID_ENGINE_SPEED:
			view.updateRPMs(pOBD2Data->uwData);
900093bc:	6849      	ldr	r1, [r1, #4]
900093be:	68c0      	ldr	r0, [r0, #12]
900093c0:	f000 b954 	b.w	9000966c <_ZN11Screen2View10updateRPMsEm>
	switch(pOBD2Data->pid){
900093c4:	2b46      	cmp	r3, #70	@ 0x46
900093c6:	d103      	bne.n	900093d0 <_ZN16Screen2Presenter15setNewGaugeDataEP17OBDQueueElement_t+0x24>
		case OBD2_PID_ENGINE_COOLANT_TEMP:
			view.updateCoolantTemp(pOBD2Data->uwData);
			break;

		case OBD2_PID_AMBIENT_AIR_TEMP:
			view.updateAmbientAirTemp(pOBD2Data->uwData);
900093c8:	6849      	ldr	r1, [r1, #4]
900093ca:	68c0      	ldr	r0, [r0, #12]
900093cc:	f000 b98c 	b.w	900096e8 <_ZN11Screen2View20updateAmbientAirTempEm>
900093d0:	4770      	bx	lr
			view.updateCoolantTemp(pOBD2Data->uwData);
900093d2:	6849      	ldr	r1, [r1, #4]
900093d4:	68c0      	ldr	r0, [r0, #12]
900093d6:	f000 b8f9 	b.w	900095cc <_ZN11Screen2View17updateCoolantTempEm>
			view.updateSpeed(pOBD2Data->uwData);
900093da:	6849      	ldr	r1, [r1, #4]
900093dc:	68c0      	ldr	r0, [r0, #12]
900093de:	f000 b969 	b.w	900096b4 <_ZN11Screen2View11updateSpeedEm>
900093e2:	4770      	bx	lr

900093e4 <_ZThn4_N16Screen2Presenter15setNewGaugeDataEP17OBDQueueElement_t>:

    // Methods to transfer OBD2 data from Model -> Presenter -> View:
    void setNewGaugeData(OBDQueueElement_t* pOBD2Data);
900093e4:	780b      	ldrb	r3, [r1, #0]
900093e6:	2b0d      	cmp	r3, #13
900093e8:	d013      	beq.n	90009412 <_ZThn4_N16Screen2Presenter15setNewGaugeDataEP17OBDQueueElement_t+0x2e>
900093ea:	d807      	bhi.n	900093fc <_ZThn4_N16Screen2Presenter15setNewGaugeDataEP17OBDQueueElement_t+0x18>
900093ec:	2b05      	cmp	r3, #5
900093ee:	d00c      	beq.n	9000940a <_ZThn4_N16Screen2Presenter15setNewGaugeDataEP17OBDQueueElement_t+0x26>
900093f0:	2b0c      	cmp	r3, #12
900093f2:	d112      	bne.n	9000941a <_ZThn4_N16Screen2Presenter15setNewGaugeDataEP17OBDQueueElement_t+0x36>
900093f4:	6849      	ldr	r1, [r1, #4]
900093f6:	6880      	ldr	r0, [r0, #8]
900093f8:	f000 b938 	b.w	9000966c <_ZN11Screen2View10updateRPMsEm>
900093fc:	2b46      	cmp	r3, #70	@ 0x46
900093fe:	d103      	bne.n	90009408 <_ZThn4_N16Screen2Presenter15setNewGaugeDataEP17OBDQueueElement_t+0x24>
90009400:	6849      	ldr	r1, [r1, #4]
90009402:	6880      	ldr	r0, [r0, #8]
90009404:	f000 b970 	b.w	900096e8 <_ZN11Screen2View20updateAmbientAirTempEm>
90009408:	4770      	bx	lr
9000940a:	6849      	ldr	r1, [r1, #4]
9000940c:	6880      	ldr	r0, [r0, #8]
9000940e:	f000 b8dd 	b.w	900095cc <_ZN11Screen2View17updateCoolantTempEm>
90009412:	6849      	ldr	r1, [r1, #4]
90009414:	6880      	ldr	r0, [r0, #8]
90009416:	f000 b94d 	b.w	900096b4 <_ZN11Screen2View11updateSpeedEm>
9000941a:	4770      	bx	lr

9000941c <_ZN16Screen2PresenterC1ER11Screen2View>:
    : view(v)
9000941c:	4a05      	ldr	r2, [pc, #20]	@ (90009434 <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
9000941e:	60c1      	str	r1, [r0, #12]
90009420:	6002      	str	r2, [r0, #0]
Screen2Presenter::Screen2Presenter(Screen2View& v)
90009422:	b410      	push	{r4}
90009424:	2400      	movs	r4, #0
90009426:	6084      	str	r4, [r0, #8]
    : view(v)
90009428:	f102 041c 	add.w	r4, r2, #28
9000942c:	6044      	str	r4, [r0, #4]
}
9000942e:	f85d 4b04 	ldr.w	r4, [sp], #4
90009432:	4770      	bx	lr
90009434:	9002f590 	.word	0x9002f590

90009438 <_ZN16Screen2Presenter9saveSpeedEm>:
	model->saveSpeed(uwSpeed);
90009438:	6880      	ldr	r0, [r0, #8]
9000943a:	f7ff bcc5 	b.w	90008dc8 <_ZN5Model9saveSpeedEm>
9000943e:	bf00      	nop

90009440 <_ZN16Screen2Presenter7saveRPMEm>:
	model->saveRPM(uwRPM);
90009440:	6880      	ldr	r0, [r0, #8]
90009442:	f7ff bcc3 	b.w	90008dcc <_ZN5Model7saveRPMEm>
90009446:	bf00      	nop

90009448 <_ZN16Screen2Presenter15saveAmbientTempEm>:
	model->saveAmbientTemp(temp);
90009448:	6880      	ldr	r0, [r0, #8]
9000944a:	f7ff bcc1 	b.w	90008dd0 <_ZN5Model15saveAmbientTempEm>
9000944e:	bf00      	nop

90009450 <_ZN16Screen2Presenter15saveCoolantTempEm>:
	model->saveCoolantTemp(temp);
90009450:	6880      	ldr	r0, [r0, #8]
90009452:	f7ff bcbf 	b.w	90008dd4 <_ZN5Model15saveCoolantTempEm>
90009456:	bf00      	nop

90009458 <_ZN16Screen2Presenter13getSavedSpeedEv>:
	return model->getSavedSpeed();
90009458:	6880      	ldr	r0, [r0, #8]
9000945a:	f7ff bcbd 	b.w	90008dd8 <_ZN5Model13getSavedSpeedEv>
9000945e:	bf00      	nop

90009460 <_ZN16Screen2Presenter11getSavedRPMEv>:
	return model->getSavedRPM();
90009460:	6880      	ldr	r0, [r0, #8]
90009462:	f7ff bcbb 	b.w	90008ddc <_ZN5Model11getSavedRPMEv>
90009466:	bf00      	nop

90009468 <_ZN16Screen2Presenter19getSavedAmbientTempEv>:
	return model->getSavedAmbientTemp();
90009468:	6880      	ldr	r0, [r0, #8]
9000946a:	f7ff bcb9 	b.w	90008de0 <_ZN5Model19getSavedAmbientTempEv>
9000946e:	bf00      	nop

90009470 <_ZN16Screen2Presenter19getSavedCoolantTempEv>:
	return model->getSavedCoolantTemp();
90009470:	6880      	ldr	r0, [r0, #8]
90009472:	f7ff bcb7 	b.w	90008de4 <_ZN5Model19getSavedCoolantTempEv>
90009476:	bf00      	nop

90009478 <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_5GaugeERKNS_10ClickEventEvED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
90009478:	4770      	bx	lr
9000947a:	bf00      	nop

9000947c <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_5ImageERKNS_10ClickEventEvED1Ev>:
9000947c:	4770      	bx	lr
9000947e:	bf00      	nop

90009480 <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_5GaugeERKNS_10ClickEventEvE7executeES4_S7_>:
    virtual void execute(T1 t1, T2 t2)
90009480:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1, t2);
90009482:	68c3      	ldr	r3, [r0, #12]
90009484:	e9d0 5401 	ldrd	r5, r4, [r0, #4]
90009488:	f013 0f01 	tst.w	r3, #1
9000948c:	eb05 0063 	add.w	r0, r5, r3, asr #1
90009490:	d004      	beq.n	9000949c <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_5GaugeERKNS_10ClickEventEvE7executeES4_S7_+0x1c>
90009492:	ea4f 0c63 	mov.w	ip, r3, asr #1
90009496:	f855 300c 	ldr.w	r3, [r5, ip]
9000949a:	591c      	ldr	r4, [r3, r4]
9000949c:	4623      	mov	r3, r4
    }
9000949e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1, t2);
900094a0:	4718      	bx	r3
900094a2:	bf00      	nop

900094a4 <_ZNK8touchgfx8CallbackI11Screen2ViewRKNS_5GaugeERKNS_10ClickEventEvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900094a4:	6843      	ldr	r3, [r0, #4]
900094a6:	b13b      	cbz	r3, 900094b8 <_ZNK8touchgfx8CallbackI11Screen2ViewRKNS_5GaugeERKNS_10ClickEventEvE7isValidEv+0x14>
900094a8:	6883      	ldr	r3, [r0, #8]
900094aa:	b10b      	cbz	r3, 900094b0 <_ZNK8touchgfx8CallbackI11Screen2ViewRKNS_5GaugeERKNS_10ClickEventEvE7isValidEv+0xc>
900094ac:	2001      	movs	r0, #1
    }
900094ae:	4770      	bx	lr
900094b0:	68c0      	ldr	r0, [r0, #12]
900094b2:	f000 0001 	and.w	r0, r0, #1
900094b6:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900094b8:	4618      	mov	r0, r3
900094ba:	4770      	bx	lr

900094bc <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_5ImageERKNS_10ClickEventEvE7executeES4_S7_>:
    virtual void execute(T1 t1, T2 t2)
900094bc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1, t2);
900094be:	68c3      	ldr	r3, [r0, #12]
900094c0:	e9d0 5401 	ldrd	r5, r4, [r0, #4]
900094c4:	f013 0f01 	tst.w	r3, #1
900094c8:	eb05 0063 	add.w	r0, r5, r3, asr #1
900094cc:	d004      	beq.n	900094d8 <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_5ImageERKNS_10ClickEventEvE7executeES4_S7_+0x1c>
900094ce:	ea4f 0c63 	mov.w	ip, r3, asr #1
900094d2:	f855 300c 	ldr.w	r3, [r5, ip]
900094d6:	591c      	ldr	r4, [r3, r4]
900094d8:	4623      	mov	r3, r4
    }
900094da:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1, t2);
900094dc:	4718      	bx	r3
900094de:	bf00      	nop

900094e0 <_ZNK8touchgfx8CallbackI11Screen2ViewRKNS_5ImageERKNS_10ClickEventEvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900094e0:	6843      	ldr	r3, [r0, #4]
900094e2:	b13b      	cbz	r3, 900094f4 <_ZNK8touchgfx8CallbackI11Screen2ViewRKNS_5ImageERKNS_10ClickEventEvE7isValidEv+0x14>
900094e4:	6883      	ldr	r3, [r0, #8]
900094e6:	b10b      	cbz	r3, 900094ec <_ZNK8touchgfx8CallbackI11Screen2ViewRKNS_5ImageERKNS_10ClickEventEvE7isValidEv+0xc>
900094e8:	2001      	movs	r0, #1
    }
900094ea:	4770      	bx	lr
900094ec:	68c0      	ldr	r0, [r0, #12]
900094ee:	f000 0001 	and.w	r0, r0, #1
900094f2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900094f4:	4618      	mov	r0, r3
900094f6:	4770      	bx	lr

900094f8 <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_5ImageERKNS_10ClickEventEvED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
900094f8:	b510      	push	{r4, lr}
900094fa:	4604      	mov	r4, r0
900094fc:	2110      	movs	r1, #16
900094fe:	f022 f802 	bl	9002b506 <_ZdlPvj>
90009502:	4620      	mov	r0, r4
90009504:	bd10      	pop	{r4, pc}
90009506:	bf00      	nop

90009508 <_ZN8touchgfx8CallbackI11Screen2ViewRKNS_5GaugeERKNS_10ClickEventEvED0Ev>:
90009508:	b510      	push	{r4, lr}
9000950a:	4604      	mov	r4, r0
9000950c:	2110      	movs	r1, #16
9000950e:	f021 fffa 	bl	9002b506 <_ZdlPvj>
90009512:	4620      	mov	r0, r4
90009514:	bd10      	pop	{r4, pc}
90009516:	bf00      	nop

90009518 <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
90009518:	4b03      	ldr	r3, [pc, #12]	@ (90009528 <_ZN11Screen2ViewD1Ev+0x10>)
9000951a:	b510      	push	{r4, lr}
9000951c:	4604      	mov	r4, r0
9000951e:	6003      	str	r3, [r0, #0]
90009520:	f7fe fc6a 	bl	90007df8 <_ZN15Screen2ViewBaseD1Ev>
90009524:	4620      	mov	r0, r4
90009526:	bd10      	pop	{r4, pc}
90009528:	9002f5f8 	.word	0x9002f5f8

9000952c <_ZN11Screen2ViewD0Ev>:
9000952c:	4b06      	ldr	r3, [pc, #24]	@ (90009548 <_ZN11Screen2ViewD0Ev+0x1c>)
9000952e:	b510      	push	{r4, lr}
90009530:	4604      	mov	r4, r0
90009532:	6003      	str	r3, [r0, #0]
90009534:	f7fe fc60 	bl	90007df8 <_ZN15Screen2ViewBaseD1Ev>
90009538:	f242 31c4 	movw	r1, #9156	@ 0x23c4
9000953c:	4620      	mov	r0, r4
9000953e:	f021 ffe2 	bl	9002b506 <_ZdlPvj>
90009542:	4620      	mov	r0, r4
90009544:	bd10      	pop	{r4, pc}
90009546:	bf00      	nop
90009548:	9002f5f8 	.word	0x9002f5f8

9000954c <_ZN11Screen2View17gaugeClickHandlerERKN8touchgfx5GaugeERKNS0_10ClickEventE>:
    	application().gotoScreen1ScreenCoverTransitionEast();
    }
}

void Screen2View::gaugeClickHandler(const Gauge& gauge, const ClickEvent& event)
{
9000954c:	b508      	push	{r3, lr}
    if (&gauge == &gaugeSpeed)
9000954e:	f500 736f 	add.w	r3, r0, #956	@ 0x3bc
90009552:	4299      	cmp	r1, r3
90009554:	d004      	beq.n	90009560 <_ZN11Screen2View17gaugeClickHandlerERKN8touchgfx5GaugeERKNS0_10ClickEventE+0x14>
    {
        //Implement what should happen when 'gauge' is touched/clicked here.
    	//Go to Screen1 with screen transition towards East
    	application().gotoScreen1ScreenCoverTransitionEast();
    }
    else if (&gauge == &gaugeRPM)
90009556:	f500 7090 	add.w	r0, r0, #288	@ 0x120
9000955a:	4281      	cmp	r1, r0
9000955c:	d000      	beq.n	90009560 <_ZN11Screen2View17gaugeClickHandlerERKN8touchgfx5GaugeERKNS0_10ClickEventE+0x14>
    {
        //Implement what should happen when 'gauge' is touched/clicked here.
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenCoverTransitionEast();
    }
}
9000955e:	bd08      	pop	{r3, pc}
90009560:	f011 fb4c 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
90009564:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    	application().gotoScreen1ScreenCoverTransitionEast();
90009568:	f7fc bd9c 	b.w	900060a4 <_ZN23FrontendApplicationBase36gotoScreen1ScreenCoverTransitionEastEv>

9000956c <_ZN11Screen2View22backgroundClickHandlerERKN8touchgfx5ImageERKNS0_10ClickEventE>:
    if (&image == &image1)
9000956c:	306c      	adds	r0, #108	@ 0x6c
9000956e:	4288      	cmp	r0, r1
90009570:	d000      	beq.n	90009574 <_ZN11Screen2View22backgroundClickHandlerERKN8touchgfx5ImageERKNS0_10ClickEventE+0x8>
90009572:	4770      	bx	lr
{
90009574:	b508      	push	{r3, lr}
90009576:	f011 fb41 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
}
9000957a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    	application().gotoScreen1ScreenCoverTransitionEast();
9000957e:	f7fc bd91 	b.w	900060a4 <_ZN23FrontendApplicationBase36gotoScreen1ScreenCoverTransitionEastEv>
90009582:	bf00      	nop

90009584 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View():
90009584:	b510      	push	{r4, lr}
90009586:	4604      	mov	r4, r0
	gaugeClickedCallback(this, &Screen2View::gaugeClickHandler)
90009588:	f7fe fca6 	bl	90007ed8 <_ZN15Screen2ViewBaseC1Ev>
9000958c:	480a      	ldr	r0, [pc, #40]	@ (900095b8 <_ZN11Screen2ViewC1Ev+0x34>)
        : pobject(pObject), pmemfun(pmemfun_2)
9000958e:	2200      	movs	r2, #0
90009590:	f504 5300 	add.w	r3, r4, #8192	@ 0x2000
90009594:	4909      	ldr	r1, [pc, #36]	@ (900095bc <_ZN11Screen2ViewC1Ev+0x38>)
90009596:	6020      	str	r0, [r4, #0]
90009598:	f8c3 13a4 	str.w	r1, [r3, #932]	@ 0x3a4
9000959c:	4908      	ldr	r1, [pc, #32]	@ (900095c0 <_ZN11Screen2ViewC1Ev+0x3c>)
9000959e:	4809      	ldr	r0, [pc, #36]	@ (900095c4 <_ZN11Screen2ViewC1Ev+0x40>)
900095a0:	f8c3 43b8 	str.w	r4, [r3, #952]	@ 0x3b8
900095a4:	e9c3 21ec 	strd	r2, r1, [r3, #944]	@ 0x3b0
900095a8:	4907      	ldr	r1, [pc, #28]	@ (900095c8 <_ZN11Screen2ViewC1Ev+0x44>)
900095aa:	e9c3 40ea 	strd	r4, r0, [r3, #936]	@ 0x3a8
900095ae:	e9c3 12ef 	strd	r1, r2, [r3, #956]	@ 0x3bc
}
900095b2:	4620      	mov	r0, r4
900095b4:	bd10      	pop	{r4, pc}
900095b6:	bf00      	nop
900095b8:	9002f5f8 	.word	0x9002f5f8
900095bc:	9002f5c8 	.word	0x9002f5c8
900095c0:	9002f5e0 	.word	0x9002f5e0
900095c4:	9000956d 	.word	0x9000956d
900095c8:	9000954d 	.word	0x9000954d

900095cc <_ZN11Screen2View17updateCoolantTempEm>:
{
	gaugeRPM.setValue(uwRPMs);
}

void Screen2View::updateCoolantTemp(uint32_t uwCoolTemp)
{
900095cc:	b538      	push	{r3, r4, r5, lr}
900095ce:	4604      	mov	r4, r0
900095d0:	460d      	mov	r5, r1
	boxProgressTemp.setValue(uwCoolTemp);
900095d2:	f500 7036 	add.w	r0, r0, #728	@ 0x2d8
900095d6:	f00a ff39 	bl	9001444c <_ZN8touchgfx11BoxProgress8setValueEi>
	presenter->saveCoolantTemp(uwCoolTemp);
900095da:	4629      	mov	r1, r5
900095dc:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
}
900095de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	presenter->saveCoolantTemp(uwCoolTemp);
900095e2:	f7ff bf35 	b.w	90009450 <_ZN16Screen2Presenter15saveCoolantTempEm>
900095e6:	bf00      	nop

900095e8 <_ZN11Screen2View11setupScreenEv>:
{
900095e8:	b570      	push	{r4, r5, r6, lr}
900095ea:	4604      	mov	r4, r0
    Screen2ViewBase::setupScreen();
900095ec:	f7fe fbc6 	bl	90007d7c <_ZN15Screen2ViewBase11setupScreenEv>
    image1.setClickAction(backgroundClickedCallback);
900095f0:	f242 32a4 	movw	r2, #9124	@ 0x23a4
    gaugeRPM.setClickAction(gaugeClickedCallback);
900095f4:	f242 33b4 	movw	r3, #9140	@ 0x23b4
    boxProgressTemp.setValue(presenter->getSavedCoolantTemp());
900095f8:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
    gaugeRPM.setClickAction(gaugeClickedCallback);
900095fa:	4423      	add	r3, r4
    image1.setClickAction(backgroundClickedCallback);
900095fc:	4422      	add	r2, r4
    Unicode::snprintf(textSpeedBuffer, TEXTSPEED_SIZE, "%d", presenter->getSavedSpeed());
900095fe:	4d1a      	ldr	r5, [pc, #104]	@ (90009668 <_ZN11Screen2View11setupScreenEv+0x80>)
     * @param  callback The callback to be executed. The callback will be given a reference
     *                  to T.
     */
    void setClickAction(GenericCallback<const T&, const ClickEvent&>& callback)
    {
        clickAction = &callback;
90009600:	f8c4 32c0 	str.w	r3, [r4, #704]	@ 0x2c0
90009604:	f8c4 2098 	str.w	r2, [r4, #152]	@ 0x98
90009608:	f8c4 355c 	str.w	r3, [r4, #1372]	@ 0x55c
    boxProgressTemp.setValue(presenter->getSavedCoolantTemp());
9000960c:	f7ff ff30 	bl	90009470 <_ZN16Screen2Presenter19getSavedCoolantTempEv>
90009610:	4601      	mov	r1, r0
90009612:	f504 7036 	add.w	r0, r4, #728	@ 0x2d8
90009616:	f00a ff19 	bl	9001444c <_ZN8touchgfx11BoxProgress8setValueEi>
    gaugeRPM.setValue(presenter->getSavedRPM());
9000961a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
9000961c:	f7ff ff20 	bl	90009460 <_ZN16Screen2Presenter11getSavedRPMEv>
90009620:	4601      	mov	r1, r0
90009622:	f504 7090 	add.w	r0, r4, #288	@ 0x120
90009626:	f00e fcc1 	bl	90017fac <_ZN8touchgfx5Gauge8setValueEi>
    gaugeSpeed.setValue(presenter->getSavedSpeed());
9000962a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
9000962c:	f7ff ff14 	bl	90009458 <_ZN16Screen2Presenter13getSavedSpeedEv>
90009630:	4601      	mov	r1, r0
90009632:	f504 706f 	add.w	r0, r4, #956	@ 0x3bc
90009636:	f00e fcb9 	bl	90017fac <_ZN8touchgfx5Gauge8setValueEi>
    Unicode::snprintf(textSpeedBuffer, TEXTSPEED_SIZE, "%d", presenter->getSavedSpeed());
9000963a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
9000963c:	f7ff ff0c 	bl	90009458 <_ZN16Screen2Presenter13getSavedSpeedEv>
90009640:	462a      	mov	r2, r5
90009642:	4603      	mov	r3, r0
90009644:	210a      	movs	r1, #10
90009646:	f204 7054 	addw	r0, r4, #1876	@ 0x754
9000964a:	f014 fc53 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    Unicode::snprintf(textAmbientTempBuffer, TEXTAMBIENTTEMP_SIZE, "%d", presenter->getSavedAmbientTemp());
9000964e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90009650:	f7ff ff0a 	bl	90009468 <_ZN16Screen2Presenter19getSavedAmbientTempEv>
90009654:	462a      	mov	r2, r5
90009656:	4603      	mov	r3, r0
90009658:	2108      	movs	r1, #8
9000965a:	f204 7044 	addw	r0, r4, #1860	@ 0x744
}
9000965e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    Unicode::snprintf(textAmbientTempBuffer, TEXTAMBIENTTEMP_SIZE, "%d", presenter->getSavedAmbientTemp());
90009662:	f014 bc47 	b.w	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
90009666:	bf00      	nop
90009668:	9002f530 	.word	0x9002f530

9000966c <_ZN11Screen2View10updateRPMsEm>:
	gaugeRPM.setValue(uwRPMs);
9000966c:	f500 7090 	add.w	r0, r0, #288	@ 0x120
90009670:	f00e bc9c 	b.w	90017fac <_ZN8touchgfx5Gauge8setValueEi>

90009674 <_ZN11Screen2View14tearDownScreenEv>:
{
90009674:	b538      	push	{r3, r4, r5, lr}
    presenter->saveSpeed(gaugeRPM.getValue());
90009676:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
{
90009678:	4604      	mov	r4, r0
    presenter->saveSpeed(gaugeRPM.getValue());
9000967a:	f500 7090 	add.w	r0, r0, #288	@ 0x120
9000967e:	f00b f828 	bl	900146d2 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
90009682:	4601      	mov	r1, r0
90009684:	4628      	mov	r0, r5
90009686:	f7ff fed7 	bl	90009438 <_ZN16Screen2Presenter9saveSpeedEm>
    presenter->saveRPM(gaugeSpeed.getValue());
9000968a:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
9000968c:	f504 706f 	add.w	r0, r4, #956	@ 0x3bc
90009690:	f00b f81f 	bl	900146d2 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
90009694:	4601      	mov	r1, r0
90009696:	4628      	mov	r0, r5
90009698:	f7ff fed2 	bl	90009440 <_ZN16Screen2Presenter7saveRPMEm>
    presenter->saveRPM(boxProgressTemp.getValue());
9000969c:	6be5      	ldr	r5, [r4, #60]	@ 0x3c
9000969e:	f504 7036 	add.w	r0, r4, #728	@ 0x2d8
900096a2:	f00b f816 	bl	900146d2 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
900096a6:	4601      	mov	r1, r0
900096a8:	4628      	mov	r0, r5
}
900096aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    presenter->saveRPM(boxProgressTemp.getValue());
900096ae:	f7ff bec7 	b.w	90009440 <_ZN16Screen2Presenter7saveRPMEm>
900096b2:	bf00      	nop

900096b4 <_ZN11Screen2View11updateSpeedEm>:
{
900096b4:	b538      	push	{r3, r4, r5, lr}
900096b6:	4604      	mov	r4, r0
900096b8:	460d      	mov	r5, r1
	gaugeSpeed.setValue(uwSpeed);
900096ba:	f500 706f 	add.w	r0, r0, #956	@ 0x3bc
900096be:	f00e fc75 	bl	90017fac <_ZN8touchgfx5Gauge8setValueEi>
	Unicode::snprintf(textSpeedBuffer, TEXTSPEED_SIZE, "%d", uwSpeed);
900096c2:	f204 7054 	addw	r0, r4, #1876	@ 0x754
	textSpeed.resizeHeightToCurrentText();
900096c6:	f204 64cc 	addw	r4, r4, #1740	@ 0x6cc
	Unicode::snprintf(textSpeedBuffer, TEXTSPEED_SIZE, "%d", uwSpeed);
900096ca:	462b      	mov	r3, r5
900096cc:	4a05      	ldr	r2, [pc, #20]	@ (900096e4 <_ZN11Screen2View11updateSpeedEm+0x30>)
900096ce:	210a      	movs	r1, #10
900096d0:	f014 fc10 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textSpeed.resizeHeightToCurrentText();
900096d4:	4620      	mov	r0, r4
900096d6:	f00e fb0b 	bl	90017cf0 <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv>
	textSpeed.invalidate();
900096da:	4620      	mov	r0, r4
}
900096dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	textSpeed.invalidate();
900096e0:	f012 bb43 	b.w	9001bd6a <_ZNK8touchgfx8Drawable10invalidateEv>
900096e4:	9002f530 	.word	0x9002f530

900096e8 <_ZN11Screen2View20updateAmbientAirTempEm>:

void Screen2View::updateAmbientAirTemp(uint32_t uwAmbientAirTemp)
{
900096e8:	b570      	push	{r4, r5, r6, lr}
900096ea:	4604      	mov	r4, r0
900096ec:	460d      	mov	r5, r1
	Unicode::snprintf(textAmbientTempBuffer, TEXTAMBIENTTEMP_SIZE, "%d", uwAmbientAirTemp);
900096ee:	4a0a      	ldr	r2, [pc, #40]	@ (90009718 <_ZN11Screen2View20updateAmbientAirTempEm+0x30>)
900096f0:	2108      	movs	r1, #8
	textAmbientTemp.resizeHeightToCurrentText();
900096f2:	f504 66bf 	add.w	r6, r4, #1528	@ 0x5f8
	Unicode::snprintf(textAmbientTempBuffer, TEXTAMBIENTTEMP_SIZE, "%d", uwAmbientAirTemp);
900096f6:	462b      	mov	r3, r5
900096f8:	f200 7044 	addw	r0, r0, #1860	@ 0x744
900096fc:	f014 fbfa 	bl	9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textAmbientTemp.resizeHeightToCurrentText();
90009700:	4630      	mov	r0, r6
90009702:	f00e faf5 	bl	90017cf0 <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv>
	textAmbientTemp.invalidate();
90009706:	4630      	mov	r0, r6
90009708:	f012 fb2f 	bl	9001bd6a <_ZNK8touchgfx8Drawable10invalidateEv>
	presenter->saveAmbientTemp(uwAmbientAirTemp);
9000970c:	4629      	mov	r1, r5
9000970e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
}
90009710:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	presenter->saveAmbientTemp(uwAmbientAirTemp);
90009714:	f7ff be98 	b.w	90009448 <_ZN16Screen2Presenter15saveAmbientTempEm>
90009718:	9002f530 	.word	0x9002f530

9000971c <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
9000971c:	f240 1c01 	movw	ip, #257	@ 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90009720:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90009722:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90009726:	f44f 7388 	mov.w	r3, #272	@ 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
9000972a:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
9000972c:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
9000972e:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90009732:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90009736:	4770      	bx	lr

90009738 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90009738:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
9000973c:	2b01      	cmp	r3, #1
9000973e:	d102      	bne.n	90009746 <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90009740:	2300      	movs	r3, #0
90009742:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
  }

  return ret;
}
90009746:	2000      	movs	r0, #0
90009748:	4770      	bx	lr
9000974a:	bf00      	nop

9000974c <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
9000974c:	2000      	movs	r0, #0
9000974e:	4770      	bx	lr

90009750 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90009750:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90009752:	6904      	ldr	r4, [r0, #16]
90009754:	8900      	ldrh	r0, [r0, #8]
90009756:	46a4      	mov	ip, r4
}
90009758:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
9000975c:	4760      	bx	ip
9000975e:	bf00      	nop

90009760 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90009760:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90009762:	68c4      	ldr	r4, [r0, #12]
90009764:	8900      	ldrh	r0, [r0, #8]
90009766:	46a4      	mov	ip, r4
}
90009768:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
9000976c:	4760      	bx	ip
9000976e:	bf00      	nop

90009770 <FT5336_GestureConfig>:
{
90009770:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90009772:	f100 0518 	add.w	r5, r0, #24
{
90009776:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90009778:	7809      	ldrb	r1, [r1, #0]
9000977a:	4628      	mov	r0, r5
9000977c:	f000 f96c 	bl	90009a58 <ft5336_radian_value>
90009780:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90009782:	7931      	ldrb	r1, [r6, #4]
90009784:	4628      	mov	r0, r5
90009786:	f000 f975 	bl	90009a74 <ft5336_offset_left_right>
9000978a:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
9000978c:	7a31      	ldrb	r1, [r6, #8]
9000978e:	4628      	mov	r0, r5
90009790:	f000 f97e 	bl	90009a90 <ft5336_offset_up_down>
90009794:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90009796:	7b31      	ldrb	r1, [r6, #12]
90009798:	4628      	mov	r0, r5
9000979a:	f000 f987 	bl	90009aac <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000979e:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
900097a0:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
900097a2:	4628      	mov	r0, r5
900097a4:	f000 f990 	bl	90009ac8 <ft5336_distance_up_down>
900097a8:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
900097aa:	7d31      	ldrb	r1, [r6, #20]
900097ac:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
900097ae:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
900097b0:	f000 f998 	bl	90009ae4 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
900097b4:	42c4      	cmn	r4, r0
}
900097b6:	bf14      	ite	ne
900097b8:	f04f 30ff 	movne.w	r0, #4294967295
900097bc:	2000      	moveq	r0, #0
900097be:	bd70      	pop	{r4, r5, r6, pc}

900097c0 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
900097c0:	3018      	adds	r0, #24
900097c2:	f000 b9ab 	b.w	90009b1c <ft5336_chip_id>
900097c6:	bf00      	nop

900097c8 <FT5336_GetState>:
{
900097c8:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900097ca:	f100 0518 	add.w	r5, r0, #24
{
900097ce:	b083      	sub	sp, #12
900097d0:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900097d2:	4628      	mov	r0, r5
900097d4:	a901      	add	r1, sp, #4
900097d6:	f000 f931 	bl	90009a3c <ft5336_td_status>
900097da:	bb10      	cbnz	r0, 90009822 <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
900097dc:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900097e0:	2b05      	cmp	r3, #5
900097e2:	bf94      	ite	ls
900097e4:	4619      	movls	r1, r3
900097e6:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900097e8:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900097ea:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900097ec:	4628      	mov	r0, r5
900097ee:	2103      	movs	r1, #3
900097f0:	eb0d 0203 	add.w	r2, sp, r3
900097f4:	f000 f910 	bl	90009a18 <ft5336_read_reg>
900097f8:	b9b0      	cbnz	r0, 90009828 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900097fa:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900097fe:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90009802:	0212      	lsls	r2, r2, #8
90009804:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90009808:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
9000980a:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
9000980e:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90009812:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90009814:	f89d 1007 	ldrb.w	r1, [sp, #7]
90009818:	430b      	orrs	r3, r1
9000981a:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
9000981e:	b003      	add	sp, #12
90009820:	bd30      	pop	{r4, r5, pc}
90009822:	f04f 31ff 	mov.w	r1, #4294967295
90009826:	e7df      	b.n	900097e8 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90009828:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
9000982c:	e7f7      	b.n	9000981e <FT5336_GetState+0x56>
9000982e:	bf00      	nop

90009830 <FT5336_GetMultiTouchState>:
{
90009830:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90009832:	f100 0518 	add.w	r5, r0, #24
{
90009836:	b088      	sub	sp, #32
90009838:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000983a:	4628      	mov	r0, r5
9000983c:	4669      	mov	r1, sp
9000983e:	f000 f8fd 	bl	90009a3c <ft5336_td_status>
90009842:	2800      	cmp	r0, #0
90009844:	f040 809a 	bne.w	9000997c <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90009848:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
9000984c:	2b05      	cmp	r3, #5
9000984e:	bf94      	ite	ls
90009850:	4619      	movls	r1, r3
90009852:	2100      	movhi	r1, #0
90009854:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90009856:	231e      	movs	r3, #30
90009858:	466a      	mov	r2, sp
9000985a:	4628      	mov	r0, r5
9000985c:	2103      	movs	r1, #3
9000985e:	f000 f8db 	bl	90009a18 <ft5336_read_reg>
90009862:	2800      	cmp	r0, #0
90009864:	f040 808d 	bne.w	90009982 <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009868:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000986c:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009870:	020a      	lsls	r2, r1, #8
90009872:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009876:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009878:	f89d c007 	ldrb.w	ip, [sp, #7]
9000987c:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009880:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009882:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009886:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000988a:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000988c:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009890:	6421      	str	r1, [r4, #64]	@ 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009892:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009894:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009896:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009898:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000989c:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000989e:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900098a2:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900098a6:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900098a8:	62e2      	str	r2, [r4, #44]	@ 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900098aa:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900098ae:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900098b0:	6563      	str	r3, [r4, #84]	@ 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900098b2:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900098b4:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900098b8:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900098ba:	6461      	str	r1, [r4, #68]	@ 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900098bc:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900098c0:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900098c4:	65a2      	str	r2, [r4, #88]	@ 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900098c6:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900098c8:	6321      	str	r1, [r4, #48]	@ 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900098ca:	ea45 050c 	orr.w	r5, r5, ip
900098ce:	f402 6170 	and.w	r1, r2, #3840	@ 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900098d2:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900098d6:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900098d8:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900098da:	0212      	lsls	r2, r2, #8
900098dc:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900098e0:	64a3      	str	r3, [r4, #72]	@ 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900098e2:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900098e6:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900098ea:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900098ec:	6363      	str	r3, [r4, #52]	@ 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900098ee:	f89d 300e 	ldrb.w	r3, [sp, #14]
900098f2:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900098f4:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900098f8:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900098fa:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900098fc:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009900:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009902:	f89d 200f 	ldrb.w	r2, [sp, #15]
90009906:	4313      	orrs	r3, r2
90009908:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000990a:	65e6      	str	r6, [r4, #92]	@ 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000990c:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009910:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009914:	020a      	lsls	r2, r1, #8
90009916:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000991a:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000991c:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009920:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009922:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009926:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009928:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000992c:	64e1      	str	r1, [r4, #76]	@ 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000992e:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009930:	f89d 1018 	ldrb.w	r1, [sp, #24]
90009934:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009936:	6263      	str	r3, [r4, #36]	@ 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009938:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000993a:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000993e:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009940:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009944:	63a2      	str	r2, [r4, #56]	@ 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009946:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000994a:	f89d 301d 	ldrb.w	r3, [sp, #29]
9000994e:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009950:	6521      	str	r1, [r4, #80]	@ 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009952:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009954:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009958:	6625      	str	r5, [r4, #96]	@ 0x60
9000995a:	6663      	str	r3, [r4, #100]	@ 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000995c:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009960:	63e1      	str	r1, [r4, #60]	@ 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009962:	021b      	lsls	r3, r3, #8
90009964:	f89d 101b 	ldrb.w	r1, [sp, #27]
90009968:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
9000996c:	430b      	orrs	r3, r1
9000996e:	62a3      	str	r3, [r4, #40]	@ 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009970:	f89d 3019 	ldrb.w	r3, [sp, #25]
90009974:	4313      	orrs	r3, r2
90009976:	6163      	str	r3, [r4, #20]
}
90009978:	b008      	add	sp, #32
9000997a:	bd70      	pop	{r4, r5, r6, pc}
9000997c:	f04f 31ff 	mov.w	r1, #4294967295
90009980:	e768      	b.n	90009854 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90009982:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90009986:	e7f7      	b.n	90009978 <FT5336_GetMultiTouchState+0x148>

90009988 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90009988:	3018      	adds	r0, #24
9000998a:	f000 b84d 	b.w	90009a28 <ft5336_gest_id>
9000998e:	bf00      	nop

90009990 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90009990:	2101      	movs	r1, #1
90009992:	3018      	adds	r0, #24
90009994:	f000 b8b4 	b.w	90009b00 <ft5336_g_mode>

90009998 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90009998:	2100      	movs	r1, #0
9000999a:	3018      	adds	r0, #24
9000999c:	f000 b8b0 	b.w	90009b00 <ft5336_g_mode>

900099a0 <FT5336_Init>:
{
900099a0:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
900099a2:	f890 5024 	ldrb.w	r5, [r0, #36]	@ 0x24
900099a6:	b98d      	cbnz	r5, 900099cc <FT5336_Init+0x2c>
    pObj->IO.Init();
900099a8:	4606      	mov	r6, r0
900099aa:	4604      	mov	r4, r0
900099ac:	f856 3b18 	ldr.w	r3, [r6], #24
900099b0:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
900099b2:	4629      	mov	r1, r5
900099b4:	4630      	mov	r0, r6
900099b6:	f000 f8a3 	bl	90009b00 <ft5336_g_mode>
  if(ret != FT5336_OK)
900099ba:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
900099bc:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
900099c0:	bf18      	it	ne
900099c2:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
900099c4:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  if(ret != FT5336_OK)
900099c8:	4240      	negs	r0, r0
}
900099ca:	bd70      	pop	{r4, r5, r6, pc}
    ret += FT5336_DisableIT(pObj);
900099cc:	2000      	movs	r0, #0
}
900099ce:	bd70      	pop	{r4, r5, r6, pc}

900099d0 <FT5336_ClearIT>:
int32_t FT5336_ClearIT(FT5336_Object_t *pObj)
900099d0:	2000      	movs	r0, #0
900099d2:	4770      	bx	lr

900099d4 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
900099d4:	b1c0      	cbz	r0, 90009a08 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
900099d6:	890a      	ldrh	r2, [r1, #8]
{
900099d8:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
900099da:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
900099de:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
900099e0:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
900099e4:	694a      	ldr	r2, [r1, #20]
900099e6:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
900099ea:	4909      	ldr	r1, [pc, #36]	@ (90009a10 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
900099ec:	60c5      	str	r5, [r0, #12]
900099ee:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
900099f2:	4a08      	ldr	r2, [pc, #32]	@ (90009a14 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
900099f4:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
900099f8:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
900099fa:	b10b      	cbz	r3, 90009a00 <FT5336_RegisterBusIO+0x2c>
}
900099fc:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
900099fe:	4718      	bx	r3
}
90009a00:	f04f 30ff 	mov.w	r0, #4294967295
90009a04:	bc30      	pop	{r4, r5}
90009a06:	4770      	bx	lr
90009a08:	f04f 30ff 	mov.w	r0, #4294967295
90009a0c:	4770      	bx	lr
90009a0e:	bf00      	nop
90009a10:	90009751 	.word	0x90009751
90009a14:	90009761 	.word	0x90009761

90009a18 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90009a18:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009a1a:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90009a1e:	46a4      	mov	ip, r4
}
90009a20:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009a24:	4760      	bx	ip
90009a26:	bf00      	nop

90009a28 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90009a28:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009a2a:	2301      	movs	r3, #1
{
90009a2c:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009a2e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90009a32:	4619      	mov	r1, r3
90009a34:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
90009a36:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009a3a:	4760      	bx	ip

90009a3c <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90009a3c:	b538      	push	{r3, r4, r5, lr}
90009a3e:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009a40:	2301      	movs	r3, #1
90009a42:	2102      	movs	r1, #2
90009a44:	4622      	mov	r2, r4
90009a46:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
90009a4a:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90009a4c:	b918      	cbnz	r0, 90009a56 <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90009a4e:	7823      	ldrb	r3, [r4, #0]
90009a50:	f003 030f 	and.w	r3, r3, #15
90009a54:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90009a56:	bd38      	pop	{r3, r4, r5, pc}

90009a58 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90009a58:	b510      	push	{r4, lr}
90009a5a:	460c      	mov	r4, r1
90009a5c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009a5e:	2301      	movs	r3, #1
90009a60:	2191      	movs	r1, #145	@ 0x91
{
90009a62:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009a66:	f10d 0207 	add.w	r2, sp, #7
90009a6a:	6804      	ldr	r4, [r0, #0]
90009a6c:	6880      	ldr	r0, [r0, #8]
90009a6e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90009a70:	b002      	add	sp, #8
90009a72:	bd10      	pop	{r4, pc}

90009a74 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90009a74:	b510      	push	{r4, lr}
90009a76:	460c      	mov	r4, r1
90009a78:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009a7a:	2301      	movs	r3, #1
90009a7c:	2192      	movs	r1, #146	@ 0x92
{
90009a7e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009a82:	f10d 0207 	add.w	r2, sp, #7
90009a86:	6804      	ldr	r4, [r0, #0]
90009a88:	6880      	ldr	r0, [r0, #8]
90009a8a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90009a8c:	b002      	add	sp, #8
90009a8e:	bd10      	pop	{r4, pc}

90009a90 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90009a90:	b510      	push	{r4, lr}
90009a92:	460c      	mov	r4, r1
90009a94:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009a96:	2301      	movs	r3, #1
90009a98:	2193      	movs	r1, #147	@ 0x93
{
90009a9a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009a9e:	f10d 0207 	add.w	r2, sp, #7
90009aa2:	6804      	ldr	r4, [r0, #0]
90009aa4:	6880      	ldr	r0, [r0, #8]
90009aa6:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90009aa8:	b002      	add	sp, #8
90009aaa:	bd10      	pop	{r4, pc}

90009aac <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90009aac:	b510      	push	{r4, lr}
90009aae:	460c      	mov	r4, r1
90009ab0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009ab2:	2301      	movs	r3, #1
90009ab4:	2194      	movs	r1, #148	@ 0x94
{
90009ab6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009aba:	f10d 0207 	add.w	r2, sp, #7
90009abe:	6804      	ldr	r4, [r0, #0]
90009ac0:	6880      	ldr	r0, [r0, #8]
90009ac2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90009ac4:	b002      	add	sp, #8
90009ac6:	bd10      	pop	{r4, pc}

90009ac8 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90009ac8:	b510      	push	{r4, lr}
90009aca:	460c      	mov	r4, r1
90009acc:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009ace:	2301      	movs	r3, #1
90009ad0:	2195      	movs	r1, #149	@ 0x95
{
90009ad2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009ad6:	f10d 0207 	add.w	r2, sp, #7
90009ada:	6804      	ldr	r4, [r0, #0]
90009adc:	6880      	ldr	r0, [r0, #8]
90009ade:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90009ae0:	b002      	add	sp, #8
90009ae2:	bd10      	pop	{r4, pc}

90009ae4 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90009ae4:	b510      	push	{r4, lr}
90009ae6:	460c      	mov	r4, r1
90009ae8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009aea:	2301      	movs	r3, #1
90009aec:	2196      	movs	r1, #150	@ 0x96
{
90009aee:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009af2:	f10d 0207 	add.w	r2, sp, #7
90009af6:	6804      	ldr	r4, [r0, #0]
90009af8:	6880      	ldr	r0, [r0, #8]
90009afa:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90009afc:	b002      	add	sp, #8
90009afe:	bd10      	pop	{r4, pc}

90009b00 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90009b00:	b510      	push	{r4, lr}
90009b02:	460c      	mov	r4, r1
90009b04:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009b06:	2301      	movs	r3, #1
90009b08:	21a4      	movs	r1, #164	@ 0xa4
{
90009b0a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009b0e:	f10d 0207 	add.w	r2, sp, #7
90009b12:	6804      	ldr	r4, [r0, #0]
90009b14:	6880      	ldr	r0, [r0, #8]
90009b16:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90009b18:	b002      	add	sp, #8
90009b1a:	bd10      	pop	{r4, pc}

90009b1c <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90009b1c:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009b1e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90009b22:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009b24:	2301      	movs	r3, #1
90009b26:	46a4      	mov	ip, r4
90009b28:	21a8      	movs	r1, #168	@ 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90009b2a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009b2e:	4760      	bx	ip

90009b30 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90009b30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90009b32:	680b      	ldr	r3, [r1, #0]
{
90009b34:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90009b36:	4c2a      	ldr	r4, [pc, #168]	@ (90009be0 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009b38:	f64f 72ff 	movw	r2, #65535	@ 0xffff
{
90009b3c:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90009b3e:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90009b40:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009b42:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
90009b44:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90009b46:	2301      	movs	r3, #1
90009b48:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
90009b4a:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009b4c:	f006 fcca 	bl	900104e4 <HAL_SDRAM_SendCommand>
90009b50:	2800      	cmp	r0, #0
90009b52:	d142      	bne.n	90009bda <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90009b54:	f000 ff60 	bl	9000aa18 <HAL_GetTick>
90009b58:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
90009b5a:	f000 ff5d 	bl	9000aa18 <HAL_GetTick>
90009b5e:	4286      	cmp	r6, r0
90009b60:	d0fb      	beq.n	90009b5a <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90009b62:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90009b64:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
90009b66:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009b68:	491d      	ldr	r1, [pc, #116]	@ (90009be0 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90009b6a:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90009b6c:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90009b6e:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009b70:	4638      	mov	r0, r7
90009b72:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 1;
90009b76:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90009b78:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009b7a:	f006 fcb3 	bl	900104e4 <HAL_SDRAM_SendCommand>
90009b7e:	bb60      	cbnz	r0, 90009bda <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009b80:	4917      	ldr	r1, [pc, #92]	@ (90009be0 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90009b82:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
90009b86:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009b88:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90009b8a:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90009b8e:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009b90:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
90009b94:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009b96:	f006 fca5 	bl	900104e4 <HAL_SDRAM_SendCommand>
90009b9a:	b9f0      	cbnz	r0, 90009bda <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009b9c:	4910      	ldr	r1, [pc, #64]	@ (90009be0 <MT48LC4M32B2_Init+0xb0>)
90009b9e:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90009ba0:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90009ba4:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90009ba6:	696a      	ldr	r2, [r5, #20]
90009ba8:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90009baa:	69aa      	ldr	r2, [r5, #24]
90009bac:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90009bae:	69ea      	ldr	r2, [r5, #28]
90009bb0:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90009bb2:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90009bb4:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90009bb6:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90009bb8:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009bbc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90009bc0:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009bc2:	f006 fc8f 	bl	900104e4 <HAL_SDRAM_SendCommand>
90009bc6:	b940      	cbnz	r0, 90009bda <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90009bc8:	68a9      	ldr	r1, [r5, #8]
90009bca:	4638      	mov	r0, r7
90009bcc:	f006 fcaa 	bl	90010524 <HAL_SDRAM_ProgramRefreshRate>
90009bd0:	3800      	subs	r0, #0
90009bd2:	bf18      	it	ne
90009bd4:	2001      	movne	r0, #1
90009bd6:	4240      	negs	r0, r0
}
90009bd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90009bda:	f04f 30ff 	mov.w	r0, #4294967295
}
90009bde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90009be0:	2400d680 	.word	0x2400d680

90009be4 <BSP_LED_On>:
  *            @arg  LED1
  *            @arg  LED2
  * @retval BSP status
  */
int32_t BSP_LED_On(Led_TypeDef Led)
{
90009be4:	4603      	mov	r3, r0
  int32_t ret = BSP_ERROR_NONE;

  HAL_GPIO_WritePin (LED_PORT [Led], (uint16_t)LED_PIN [Led], GPIO_PIN_RESET);
90009be6:	4906      	ldr	r1, [pc, #24]	@ (90009c00 <BSP_LED_On+0x1c>)
90009be8:	2200      	movs	r2, #0
90009bea:	f831 1023 	ldrh.w	r1, [r1, r3, lsl #2]
{
90009bee:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin (LED_PORT [Led], (uint16_t)LED_PIN [Led], GPIO_PIN_RESET);
90009bf0:	4c04      	ldr	r4, [pc, #16]	@ (90009c04 <BSP_LED_On+0x20>)
90009bf2:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
90009bf6:	f002 f8b7 	bl	9000bd68 <HAL_GPIO_WritePin>
  return ret;
}
90009bfa:	2000      	movs	r0, #0
90009bfc:	bd10      	pop	{r4, pc}
90009bfe:	bf00      	nop
90009c00:	9002f624 	.word	0x9002f624
90009c04:	9002f62c 	.word	0x9002f62c

90009c08 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90009c08:	4a10      	ldr	r2, [pc, #64]	@ (90009c4c <BSP_I2C4_DeInit+0x44>)
{
90009c0a:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90009c0c:	6813      	ldr	r3, [r2, #0]
90009c0e:	3b01      	subs	r3, #1
90009c10:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
90009c12:	b10b      	cbz	r3, 90009c18 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90009c14:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
90009c16:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90009c18:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
90009c1c:	480c      	ldr	r0, [pc, #48]	@ (90009c50 <BSP_I2C4_DeInit+0x48>)
90009c1e:	f001 ffd3 	bl	9000bbc8 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
90009c22:	480b      	ldr	r0, [pc, #44]	@ (90009c50 <BSP_I2C4_DeInit+0x48>)
90009c24:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90009c28:	f001 ffce 	bl	9000bbc8 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90009c2c:	4a09      	ldr	r2, [pc, #36]	@ (90009c54 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90009c2e:	480a      	ldr	r0, [pc, #40]	@ (90009c58 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90009c30:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
90009c34:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90009c38:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90009c3c:	f002 fa66 	bl	9000c10c <HAL_I2C_DeInit>
90009c40:	2800      	cmp	r0, #0
90009c42:	d0e7      	beq.n	90009c14 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
90009c44:	f06f 0007 	mvn.w	r0, #7
}
90009c48:	bd08      	pop	{r3, pc}
90009c4a:	bf00      	nop
90009c4c:	2400e0e8 	.word	0x2400e0e8
90009c50:	58020c00 	.word	0x58020c00
90009c54:	58024400 	.word	0x58024400
90009c58:	2400d690 	.word	0x2400d690

90009c5c <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90009c5c:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
90009c5e:	2201      	movs	r2, #1
{
90009c60:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90009c62:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
90009c66:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
90009c6a:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
90009c6e:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90009c72:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90009c74:	f002 f9f2 	bl	9000c05c <HAL_I2C_Init>
90009c78:	b108      	cbz	r0, 90009c7e <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
90009c7a:	2001      	movs	r0, #1
}
90009c7c:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90009c7e:	4601      	mov	r1, r0
90009c80:	4620      	mov	r0, r4
90009c82:	f002 fcd1 	bl	9000c628 <HAL_I2CEx_ConfigAnalogFilter>
90009c86:	2800      	cmp	r0, #0
90009c88:	d1f7      	bne.n	90009c7a <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
90009c8a:	4601      	mov	r1, r0
90009c8c:	4620      	mov	r0, r4
90009c8e:	f002 fcf5 	bl	9000c67c <HAL_I2CEx_ConfigDigitalFilter>
90009c92:	3800      	subs	r0, #0
90009c94:	bf18      	it	ne
90009c96:	2001      	movne	r0, #1
}
90009c98:	bd10      	pop	{r4, pc}
90009c9a:	bf00      	nop

90009c9c <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90009c9c:	4b9b      	ldr	r3, [pc, #620]	@ (90009f0c <BSP_I2C4_Init+0x270>)
  hbus_i2c4.Instance = BUS_I2C4;
90009c9e:	489c      	ldr	r0, [pc, #624]	@ (90009f10 <BSP_I2C4_Init+0x274>)
90009ca0:	4a9c      	ldr	r2, [pc, #624]	@ (90009f14 <BSP_I2C4_Init+0x278>)
{
90009ca2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
90009ca6:	681c      	ldr	r4, [r3, #0]
{
90009ca8:	b09d      	sub	sp, #116	@ 0x74
  hbus_i2c4.Instance = BUS_I2C4;
90009caa:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90009cac:	b11c      	cbz	r4, 90009cb6 <BSP_I2C4_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
90009cae:	2000      	movs	r0, #0
}
90009cb0:	b01d      	add	sp, #116	@ 0x74
90009cb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90009cb6:	2201      	movs	r2, #1
90009cb8:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
90009cba:	f002 fcaf 	bl	9000c61c <HAL_I2C_GetState>
90009cbe:	2800      	cmp	r0, #0
90009cc0:	d1f5      	bne.n	90009cae <BSP_I2C4_Init+0x12>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90009cc2:	4d95      	ldr	r5, [pc, #596]	@ (90009f18 <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009cc4:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
90009cc8:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90009cca:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90009ccc:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009cd0:	f04f 0800 	mov.w	r8, #0
90009cd4:	f04f 0902 	mov.w	r9, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90009cd8:	f043 0308 	orr.w	r3, r3, #8
90009cdc:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90009ce0:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90009ce4:	f003 0308 	and.w	r3, r3, #8
90009ce8:	9313      	str	r3, [sp, #76]	@ 0x4c
90009cea:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90009cec:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90009cf0:	f043 0308 	orr.w	r3, r3, #8
90009cf4:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90009cf8:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90009cfc:	961a      	str	r6, [sp, #104]	@ 0x68
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90009cfe:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009d02:	e9cd 0116 	strd	r0, r1, [sp, #88]	@ 0x58
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90009d06:	9314      	str	r3, [sp, #80]	@ 0x50
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90009d08:	a916      	add	r1, sp, #88	@ 0x58
90009d0a:	4884      	ldr	r0, [pc, #528]	@ (90009f1c <BSP_I2C4_Init+0x280>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90009d0c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009d0e:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90009d12:	f001 fe17 	bl	9000b944 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90009d16:	2312      	movs	r3, #18
90009d18:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90009d1c:	a916      	add	r1, sp, #88	@ 0x58
90009d1e:	487f      	ldr	r0, [pc, #508]	@ (90009f1c <BSP_I2C4_Init+0x280>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90009d20:	961a      	str	r6, [sp, #104]	@ 0x68
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90009d22:	e9cd 2316 	strd	r2, r3, [sp, #88]	@ 0x58
90009d26:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90009d2a:	f001 fe0b 	bl	9000b944 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90009d2e:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90009d32:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90009d36:	f8c5 30f4 	str.w	r3, [r5, #244]	@ 0xf4
90009d3a:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90009d3e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90009d42:	9315      	str	r3, [sp, #84]	@ 0x54
90009d44:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  BUS_I2C4_FORCE_RESET();
90009d46:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
90009d4a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90009d4e:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
  BUS_I2C4_RELEASE_RESET();
90009d52:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
90009d56:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90009d5a:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90009d5e:	f005 f991 	bl	9000f084 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90009d62:	2800      	cmp	r0, #0
90009d64:	f000 81ff 	beq.w	9000a166 <BSP_I2C4_Init+0x4ca>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009d68:	4b6d      	ldr	r3, [pc, #436]	@ (90009f20 <BSP_I2C4_Init+0x284>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90009d6a:	f06f 011d 	mvn.w	r1, #29
  if (tsdadel_max <= 0)
90009d6e:	4625      	mov	r5, r4
  uint32_t prev_presc = I2C_PRESC_MAX;
90009d70:	f04f 0a10 	mov.w	sl, #16
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009d74:	eb03 0350 	add.w	r3, r3, r0, lsr #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d78:	4e6a      	ldr	r6, [pc, #424]	@ (90009f24 <BSP_I2C4_Init+0x288>)
90009d7a:	9401      	str	r4, [sp, #4]
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009d7c:	fbb3 f7f0 	udiv	r7, r3, r0
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009d80:	f640 13f6 	movw	r3, #2550	@ 0x9f6
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90009d84:	eb07 0247 	add.w	r2, r7, r7, lsl #1
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009d88:	9700      	str	r7, [sp, #0]
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009d8a:	eba3 0c87 	sub.w	ip, r3, r7, lsl #2
90009d8e:	4b66      	ldr	r3, [pc, #408]	@ (90009f28 <BSP_I2C4_Init+0x28c>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90009d90:	eba1 0e02 	sub.w	lr, r1, r2
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90009d94:	007a      	lsls	r2, r7, #1
90009d96:	6819      	ldr	r1, [r3, #0]
  if (tsdadel_max <= 0)
90009d98:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
90009d9c:	9202      	str	r2, [sp, #8]
  if (tsdadel_min <= 0)
90009d9e:	ea2e 7eee 	bic.w	lr, lr, lr, asr #31
  if (tsdadel_max <= 0)
90009da2:	4689      	mov	r9, r1
90009da4:	4622      	mov	r2, r4
90009da6:	9111      	str	r1, [sp, #68]	@ 0x44
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009da8:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
90009dac:	46b8      	mov	r8, r7
90009dae:	eb07 0347 	add.w	r3, r7, r7, lsl #1
90009db2:	bf2c      	ite	cs
90009db4:	2001      	movcs	r0, #1
90009db6:	2000      	movcc	r0, #0
90009db8:	ebbe 0f47 	cmp.w	lr, r7, lsl #1
90009dbc:	f000 0001 	and.w	r0, r0, #1
90009dc0:	eb07 0187 	add.w	r1, r7, r7, lsl #2
90009dc4:	bf88      	it	hi
90009dc6:	2000      	movhi	r0, #0
90009dc8:	459e      	cmp	lr, r3
90009dca:	eb07 0483 	add.w	r4, r7, r3, lsl #2
90009dce:	9004      	str	r0, [sp, #16]
90009dd0:	bf8c      	ite	hi
90009dd2:	2000      	movhi	r0, #0
90009dd4:	2001      	movls	r0, #1
90009dd6:	459c      	cmp	ip, r3
90009dd8:	940f      	str	r4, [sp, #60]	@ 0x3c
90009dda:	ebc7 0bc7 	rsb	fp, r7, r7, lsl #3
90009dde:	bf38      	it	cc
90009de0:	2000      	movcc	r0, #0
90009de2:	ebbe 0f87 	cmp.w	lr, r7, lsl #2
90009de6:	9006      	str	r0, [sp, #24]
90009de8:	eb07 0041 	add.w	r0, r7, r1, lsl #1
90009dec:	9005      	str	r0, [sp, #20]
90009dee:	bf94      	ite	ls
90009df0:	2001      	movls	r0, #1
90009df2:	2000      	movhi	r0, #0
90009df4:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
90009df8:	f000 0401 	and.w	r4, r0, #1
90009dfc:	bf38      	it	cc
90009dfe:	2400      	movcc	r4, #0
90009e00:	458e      	cmp	lr, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90009e02:	f04f 0000 	mov.w	r0, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009e06:	9407      	str	r4, [sp, #28]
90009e08:	bf8c      	ite	hi
90009e0a:	2400      	movhi	r4, #0
90009e0c:	2401      	movls	r4, #1
90009e0e:	458c      	cmp	ip, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90009e10:	9003      	str	r0, [sp, #12]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009e12:	bf38      	it	cc
90009e14:	2400      	movcc	r4, #0
90009e16:	ebbe 0f43 	cmp.w	lr, r3, lsl #1
90009e1a:	bf98      	it	ls
90009e1c:	2001      	movls	r0, #1
90009e1e:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
90009e22:	9408      	str	r4, [sp, #32]
90009e24:	465c      	mov	r4, fp
90009e26:	f000 0001 	and.w	r0, r0, #1
90009e2a:	bf38      	it	cc
90009e2c:	2000      	movcc	r0, #0
90009e2e:	45de      	cmp	lr, fp
90009e30:	9009      	str	r0, [sp, #36]	@ 0x24
90009e32:	4658      	mov	r0, fp
90009e34:	bf8c      	ite	hi
90009e36:	2000      	movhi	r0, #0
90009e38:	2001      	movls	r0, #1
90009e3a:	45dc      	cmp	ip, fp
90009e3c:	bf38      	it	cc
90009e3e:	2000      	movcc	r0, #0
90009e40:	ebbe 0fc7 	cmp.w	lr, r7, lsl #3
90009e44:	4683      	mov	fp, r0
90009e46:	bf94      	ite	ls
90009e48:	f04f 0b01 	movls.w	fp, #1
90009e4c:	f04f 0b00 	movhi.w	fp, #0
90009e50:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
90009e54:	900a      	str	r0, [sp, #40]	@ 0x28
90009e56:	f00b 0b01 	and.w	fp, fp, #1
90009e5a:	bf38      	it	cc
90009e5c:	f04f 0b00 	movcc.w	fp, #0
90009e60:	4658      	mov	r0, fp
90009e62:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
90009e66:	eb07 0bc7 	add.w	fp, r7, r7, lsl #3
90009e6a:	45de      	cmp	lr, fp
90009e6c:	bf8c      	ite	hi
90009e6e:	2000      	movhi	r0, #0
90009e70:	2001      	movls	r0, #1
90009e72:	45dc      	cmp	ip, fp
90009e74:	bf38      	it	cc
90009e76:	2000      	movcc	r0, #0
90009e78:	ebbe 0f41 	cmp.w	lr, r1, lsl #1
90009e7c:	900c      	str	r0, [sp, #48]	@ 0x30
90009e7e:	bf98      	it	ls
90009e80:	f04f 0b01 	movls.w	fp, #1
90009e84:	9805      	ldr	r0, [sp, #20]
90009e86:	bf88      	it	hi
90009e88:	f04f 0b00 	movhi.w	fp, #0
90009e8c:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
90009e90:	f00b 0b01 	and.w	fp, fp, #1
90009e94:	4601      	mov	r1, r0
90009e96:	bf38      	it	cc
90009e98:	f04f 0b00 	movcc.w	fp, #0
90009e9c:	4586      	cmp	lr, r0
90009e9e:	bf8c      	ite	hi
90009ea0:	2100      	movhi	r1, #0
90009ea2:	2101      	movls	r1, #1
90009ea4:	4584      	cmp	ip, r0
90009ea6:	4620      	mov	r0, r4
90009ea8:	bf38      	it	cc
90009eaa:	2100      	movcc	r1, #0
90009eac:	ebbe 0f83 	cmp.w	lr, r3, lsl #2
90009eb0:	910d      	str	r1, [sp, #52]	@ 0x34
90009eb2:	bf94      	ite	ls
90009eb4:	2101      	movls	r1, #1
90009eb6:	2100      	movhi	r1, #0
90009eb8:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
90009ebc:	f001 0101 	and.w	r1, r1, #1
90009ec0:	bf38      	it	cc
90009ec2:	2100      	movcc	r1, #0
90009ec4:	910e      	str	r1, [sp, #56]	@ 0x38
90009ec6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90009ec8:	4571      	cmp	r1, lr
90009eca:	460b      	mov	r3, r1
90009ecc:	bf34      	ite	cc
90009ece:	2300      	movcc	r3, #0
90009ed0:	2301      	movcs	r3, #1
90009ed2:	4561      	cmp	r1, ip
90009ed4:	bf88      	it	hi
90009ed6:	2300      	movhi	r3, #0
90009ed8:	ebbe 0f44 	cmp.w	lr, r4, lsl #1
90009edc:	930f      	str	r3, [sp, #60]	@ 0x3c
90009ede:	bf94      	ite	ls
90009ee0:	2301      	movls	r3, #1
90009ee2:	2300      	movhi	r3, #0
90009ee4:	ebbc 0f44 	cmp.w	ip, r4, lsl #1
90009ee8:	f04f 0400 	mov.w	r4, #0
90009eec:	f003 0301 	and.w	r3, r3, #1
90009ef0:	bf38      	it	cc
90009ef2:	2300      	movcc	r3, #0
90009ef4:	9310      	str	r3, [sp, #64]	@ 0x40
90009ef6:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
90009efa:	459e      	cmp	lr, r3
90009efc:	bf8c      	ite	hi
90009efe:	2100      	movhi	r1, #0
90009f00:	2101      	movls	r1, #1
90009f02:	459c      	cmp	ip, r3
90009f04:	bf38      	it	cc
90009f06:	2100      	movcc	r1, #0
90009f08:	9105      	str	r1, [sp, #20]
90009f0a:	e013      	b.n	90009f34 <BSP_I2C4_Init+0x298>
90009f0c:	2400e0e8 	.word	0x2400e0e8
90009f10:	2400d690 	.word	0x2400d690
90009f14:	58001c00 	.word	0x58001c00
90009f18:	58024400 	.word	0x58024400
90009f1c:	58020c00 	.word	0x58020c00
90009f20:	3b9aca00 	.word	0x3b9aca00
90009f24:	2400d6e8 	.word	0x2400d6e8
90009f28:	2400d6e4 	.word	0x2400d6e4
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90009f2c:	2c10      	cmp	r4, #16
90009f2e:	44b8      	add	r8, r7
90009f30:	f000 8276 	beq.w	9000a420 <BSP_I2C4_Init+0x784>
      if (tscldel >= (uint32_t)tscldel_min)
90009f34:	f240 3179 	movw	r1, #889	@ 0x379
90009f38:	4623      	mov	r3, r4
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90009f3a:	3401      	adds	r4, #1
      if (tscldel >= (uint32_t)tscldel_min)
90009f3c:	4588      	cmp	r8, r1
90009f3e:	d9f5      	bls.n	90009f2c <BSP_I2C4_Init+0x290>
            if(presc != prev_presc)
90009f40:	ebba 0105 	subs.w	r1, sl, r5
90009f44:	bf18      	it	ne
90009f46:	2101      	movne	r1, #1
90009f48:	f1be 0f00 	cmp.w	lr, #0
90009f4c:	bf18      	it	ne
90009f4e:	2100      	movne	r1, #0
90009f50:	2900      	cmp	r1, #0
90009f52:	f040 8253 	bne.w	9000a3fc <BSP_I2C4_Init+0x760>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009f56:	45bc      	cmp	ip, r7
90009f58:	bf34      	ite	cc
90009f5a:	2100      	movcc	r1, #0
90009f5c:	2101      	movcs	r1, #1
90009f5e:	45be      	cmp	lr, r7
90009f60:	bf88      	it	hi
90009f62:	2100      	movhi	r1, #0
            if(presc != prev_presc)
90009f64:	45aa      	cmp	sl, r5
90009f66:	bf0c      	ite	eq
90009f68:	2100      	moveq	r1, #0
90009f6a:	f001 0101 	andne.w	r1, r1, #1
90009f6e:	2900      	cmp	r1, #0
90009f70:	f000 8103 	beq.w	9000a17a <BSP_I2C4_Init+0x4de>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f74:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009f78:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f7c:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f7e:	46b2      	mov	sl, r6
90009f80:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f84:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f88:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009f8c:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f8e:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f90:	f200 81aa 	bhi.w	9000a2e8 <BSP_I2C4_Init+0x64c>
90009f94:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90009f96:	9a06      	ldr	r2, [sp, #24]
90009f98:	45aa      	cmp	sl, r5
90009f9a:	bf0c      	ite	eq
90009f9c:	2200      	moveq	r2, #0
90009f9e:	f002 0201 	andne.w	r2, r2, #1
90009fa2:	2a00      	cmp	r2, #0
90009fa4:	f000 8105 	beq.w	9000a1b2 <BSP_I2C4_Init+0x516>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fa8:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009fac:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009fb0:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fb2:	46b2      	mov	sl, r6
90009fb4:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009fb8:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fbc:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009fc0:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009fc2:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009fc4:	f200 8190 	bhi.w	9000a2e8 <BSP_I2C4_Init+0x64c>
90009fc8:	4611      	mov	r1, r2
90009fca:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90009fcc:	9a08      	ldr	r2, [sp, #32]
90009fce:	45aa      	cmp	sl, r5
90009fd0:	bf0c      	ite	eq
90009fd2:	2200      	moveq	r2, #0
90009fd4:	f002 0201 	andne.w	r2, r2, #1
90009fd8:	2a00      	cmp	r2, #0
90009fda:	f000 8105 	beq.w	9000a1e8 <BSP_I2C4_Init+0x54c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fde:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009fe2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009fe6:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fe8:	46b2      	mov	sl, r6
90009fea:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009fee:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009ff2:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009ff6:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009ff8:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009ffa:	f200 8175 	bhi.w	9000a2e8 <BSP_I2C4_Init+0x64c>
90009ffe:	4611      	mov	r1, r2
9000a000:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000a002:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9000a004:	45aa      	cmp	sl, r5
9000a006:	bf0c      	ite	eq
9000a008:	2200      	moveq	r2, #0
9000a00a:	f002 0201 	andne.w	r2, r2, #1
9000a00e:	2a00      	cmp	r2, #0
9000a010:	f000 8104 	beq.w	9000a21c <BSP_I2C4_Init+0x580>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a014:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a018:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a01c:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a01e:	46b2      	mov	sl, r6
9000a020:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a024:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a028:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a02c:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a02e:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a030:	f200 815a 	bhi.w	9000a2e8 <BSP_I2C4_Init+0x64c>
9000a034:	4611      	mov	r1, r2
9000a036:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000a038:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9000a03a:	45aa      	cmp	sl, r5
9000a03c:	bf0c      	ite	eq
9000a03e:	2200      	moveq	r2, #0
9000a040:	f002 0201 	andne.w	r2, r2, #1
9000a044:	2a00      	cmp	r2, #0
9000a046:	f000 8103 	beq.w	9000a250 <BSP_I2C4_Init+0x5b4>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a04a:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a04e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a052:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a054:	46b2      	mov	sl, r6
9000a056:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a05a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a05e:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a062:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a064:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a066:	f200 813f 	bhi.w	9000a2e8 <BSP_I2C4_Init+0x64c>
9000a06a:	4611      	mov	r1, r2
9000a06c:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000a06e:	980d      	ldr	r0, [sp, #52]	@ 0x34
9000a070:	4555      	cmp	r5, sl
9000a072:	bf0c      	ite	eq
9000a074:	2000      	moveq	r0, #0
9000a076:	f000 0001 	andne.w	r0, r0, #1
9000a07a:	2800      	cmp	r0, #0
9000a07c:	f000 8101 	beq.w	9000a282 <BSP_I2C4_Init+0x5e6>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a080:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a084:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a088:	210b      	movs	r1, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a08a:	46b2      	mov	sl, r6
9000a08c:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a090:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a094:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a098:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a09a:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a09c:	f200 8124 	bhi.w	9000a2e8 <BSP_I2C4_Init+0x64c>
9000a0a0:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000a0a2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9000a0a4:	4555      	cmp	r5, sl
9000a0a6:	bf0c      	ite	eq
9000a0a8:	2200      	moveq	r2, #0
9000a0aa:	f002 0201 	andne.w	r2, r2, #1
9000a0ae:	2a00      	cmp	r2, #0
9000a0b0:	f000 8100 	beq.w	9000a2b4 <BSP_I2C4_Init+0x618>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a0b4:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a0b8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a0bc:	200d      	movs	r0, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a0be:	46b2      	mov	sl, r6
9000a0c0:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a0c4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a0c8:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a0cc:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a0ce:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a0d0:	f200 810a 	bhi.w	9000a2e8 <BSP_I2C4_Init+0x64c>
9000a0d4:	4610      	mov	r0, r2
9000a0d6:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000a0d8:	9a05      	ldr	r2, [sp, #20]
9000a0da:	4555      	cmp	r5, sl
9000a0dc:	bf0c      	ite	eq
9000a0de:	2200      	moveq	r2, #0
9000a0e0:	f002 0201 	andne.w	r2, r2, #1
9000a0e4:	2a00      	cmp	r2, #0
9000a0e6:	f000 8185 	beq.w	9000a3f4 <BSP_I2C4_Init+0x758>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a0ea:	eb09 0189 	add.w	r1, r9, r9, lsl #2
9000a0ee:	f8df a368 	ldr.w	sl, [pc, #872]	@ 9000a458 <BSP_I2C4_Init+0x7bc>
              I2c_valid_timing_nbr ++;
9000a0f2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a0f6:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
9000a0fa:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a0fe:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a102:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a104:	f04f 030f 	mov.w	r3, #15
9000a108:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a10a:	f200 80ed 	bhi.w	9000a2e8 <BSP_I2C4_Init+0x64c>
9000a10e:	46aa      	mov	sl, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
9000a110:	e70c      	b.n	90009f2c <BSP_I2C4_Init+0x290>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
9000a112:	9a06      	ldr	r2, [sp, #24]
9000a114:	4661      	mov	r1, ip
9000a116:	f109 0914 	add.w	r9, r9, #20
9000a11a:	3201      	adds	r2, #1
9000a11c:	e9dd e40a 	ldrd	lr, r4, [sp, #40]	@ 0x28
9000a120:	e9dd c30c 	ldrd	ip, r3, [sp, #48]	@ 0x30
9000a124:	4572      	cmp	r2, lr
9000a126:	9206      	str	r2, [sp, #24]
9000a128:	f040 8105 	bne.w	9000a336 <BSP_I2C4_Init+0x69a>
        if (idx < I2C_VALID_TIMING_NBR)
9000a12c:	9b01      	ldr	r3, [sp, #4]
9000a12e:	2b7f      	cmp	r3, #127	@ 0x7f
9000a130:	e9dd 4008 	ldrd	r4, r0, [sp, #32]
9000a134:	d817      	bhi.n	9000a166 <BSP_I2C4_Init+0x4ca>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000a136:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000a13a:	eb00 0283 	add.w	r2, r0, r3, lsl #2
9000a13e:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000a142:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
9000a144:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000a146:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000a148:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000a14c:	f400 0070 	and.w	r0, r0, #15728640	@ 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
9000a150:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000a154:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
9000a156:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
9000a158:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
9000a15a:	f401 2170 	and.w	r1, r1, #983040	@ 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
9000a15e:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000a160:	430b      	orrs	r3, r1
9000a162:	ea43 0402 	orr.w	r4, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
9000a166:	4621      	mov	r1, r4
9000a168:	48b8      	ldr	r0, [pc, #736]	@ (9000a44c <BSP_I2C4_Init+0x7b0>)
9000a16a:	f7ff fd77 	bl	90009c5c <MX_I2C4_Init>
9000a16e:	2800      	cmp	r0, #0
9000a170:	f43f ad9d 	beq.w	90009cae <BSP_I2C4_Init+0x12>
          ret = BSP_ERROR_BUS_FAILURE;
9000a174:	f06f 0007 	mvn.w	r0, #7
  return ret;
9000a178:	e59a      	b.n	90009cb0 <BSP_I2C4_Init+0x14>
            if(presc != prev_presc)
9000a17a:	4611      	mov	r1, r2
9000a17c:	9a04      	ldr	r2, [sp, #16]
9000a17e:	45aa      	cmp	sl, r5
9000a180:	bf0c      	ite	eq
9000a182:	2200      	moveq	r2, #0
9000a184:	f002 0201 	andne.w	r2, r2, #1
9000a188:	2a00      	cmp	r2, #0
9000a18a:	f43f af04 	beq.w	90009f96 <BSP_I2C4_Init+0x2fa>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a18e:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a192:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a196:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a198:	46b2      	mov	sl, r6
9000a19a:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a19e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a1a2:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a1a6:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a1a8:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a1aa:	f200 809d 	bhi.w	9000a2e8 <BSP_I2C4_Init+0x64c>
9000a1ae:	4611      	mov	r1, r2
9000a1b0:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000a1b2:	9a07      	ldr	r2, [sp, #28]
9000a1b4:	45aa      	cmp	sl, r5
9000a1b6:	bf0c      	ite	eq
9000a1b8:	2200      	moveq	r2, #0
9000a1ba:	f002 0201 	andne.w	r2, r2, #1
9000a1be:	2a00      	cmp	r2, #0
9000a1c0:	f43f af04 	beq.w	90009fcc <BSP_I2C4_Init+0x330>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a1c4:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a1c8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a1cc:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a1ce:	46b2      	mov	sl, r6
9000a1d0:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a1d4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a1d8:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a1dc:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a1de:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a1e0:	f200 8082 	bhi.w	9000a2e8 <BSP_I2C4_Init+0x64c>
9000a1e4:	4611      	mov	r1, r2
9000a1e6:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000a1e8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9000a1ea:	45aa      	cmp	sl, r5
9000a1ec:	bf0c      	ite	eq
9000a1ee:	2200      	moveq	r2, #0
9000a1f0:	f002 0201 	andne.w	r2, r2, #1
9000a1f4:	2a00      	cmp	r2, #0
9000a1f6:	f43f af04 	beq.w	9000a002 <BSP_I2C4_Init+0x366>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a1fa:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a1fe:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a202:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a204:	46b2      	mov	sl, r6
9000a206:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a20a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a20e:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a212:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a214:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a216:	d867      	bhi.n	9000a2e8 <BSP_I2C4_Init+0x64c>
9000a218:	4611      	mov	r1, r2
9000a21a:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000a21c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9000a21e:	45aa      	cmp	sl, r5
9000a220:	bf0c      	ite	eq
9000a222:	2200      	moveq	r2, #0
9000a224:	f002 0201 	andne.w	r2, r2, #1
9000a228:	2a00      	cmp	r2, #0
9000a22a:	f43f af05 	beq.w	9000a038 <BSP_I2C4_Init+0x39c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a22e:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a232:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a236:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a238:	46b2      	mov	sl, r6
9000a23a:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a23e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a242:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a246:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a248:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a24a:	d84d      	bhi.n	9000a2e8 <BSP_I2C4_Init+0x64c>
9000a24c:	4611      	mov	r1, r2
9000a24e:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000a250:	45aa      	cmp	sl, r5
9000a252:	bf0c      	ite	eq
9000a254:	2200      	moveq	r2, #0
9000a256:	f00b 0201 	andne.w	r2, fp, #1
9000a25a:	2a00      	cmp	r2, #0
9000a25c:	f43f af07 	beq.w	9000a06e <BSP_I2C4_Init+0x3d2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a260:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a264:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a268:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a26a:	46b2      	mov	sl, r6
9000a26c:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a270:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a274:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a278:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a27a:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a27c:	d834      	bhi.n	9000a2e8 <BSP_I2C4_Init+0x64c>
9000a27e:	4611      	mov	r1, r2
9000a280:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000a282:	980e      	ldr	r0, [sp, #56]	@ 0x38
9000a284:	4555      	cmp	r5, sl
9000a286:	bf0c      	ite	eq
9000a288:	2000      	moveq	r0, #0
9000a28a:	f000 0001 	andne.w	r0, r0, #1
9000a28e:	2800      	cmp	r0, #0
9000a290:	f000 80b2 	beq.w	9000a3f8 <BSP_I2C4_Init+0x75c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a294:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a298:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a29c:	210c      	movs	r1, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a29e:	46b2      	mov	sl, r6
9000a2a0:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a2a4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a2a8:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a2ac:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a2ae:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a2b0:	d81a      	bhi.n	9000a2e8 <BSP_I2C4_Init+0x64c>
9000a2b2:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000a2b4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9000a2b6:	4555      	cmp	r5, sl
9000a2b8:	bf0c      	ite	eq
9000a2ba:	2200      	moveq	r2, #0
9000a2bc:	f002 0201 	andne.w	r2, r2, #1
9000a2c0:	2a00      	cmp	r2, #0
9000a2c2:	f43f af09 	beq.w	9000a0d8 <BSP_I2C4_Init+0x43c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a2c6:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a2ca:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a2ce:	46b2      	mov	sl, r6
9000a2d0:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
9000a2d4:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a2d8:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a2dc:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a2de:	f04f 030e 	mov.w	r3, #14
9000a2e2:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a2e4:	f67f af13 	bls.w	9000a10e <BSP_I2C4_Init+0x472>
9000a2e8:	4b59      	ldr	r3, [pc, #356]	@ (9000a450 <BSP_I2C4_Init+0x7b4>)
9000a2ea:	4650      	mov	r0, sl
9000a2ec:	9c01      	ldr	r4, [sp, #4]
              I2c_valid_timing_nbr ++;
9000a2ee:	4649      	mov	r1, r9
9000a2f0:	9a02      	ldr	r2, [sp, #8]
9000a2f2:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
9000a2f6:	9f00      	ldr	r7, [sp, #0]
9000a2f8:	f640 769f 	movw	r6, #3999	@ 0xf9f
9000a2fc:	f241 230c 	movw	r3, #4620	@ 0x120c
9000a300:	4d54      	ldr	r5, [pc, #336]	@ (9000a454 <BSP_I2C4_Init+0x7b8>)
9000a302:	42be      	cmp	r6, r7
9000a304:	f102 0c32 	add.w	ip, r2, #50	@ 0x32
9000a308:	eba3 0302 	sub.w	r3, r3, r2
9000a30c:	4415      	add	r5, r2
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000a30e:	f04f 0200 	mov.w	r2, #0
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000a312:	468e      	mov	lr, r1
9000a314:	9408      	str	r4, [sp, #32]
9000a316:	bf38      	it	cc
9000a318:	463e      	movcc	r6, r7
9000a31a:	461c      	mov	r4, r3
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000a31c:	9206      	str	r2, [sp, #24]
9000a31e:	f8df 9138 	ldr.w	r9, [pc, #312]	@ 9000a458 <BSP_I2C4_Init+0x7bc>
9000a322:	f04f 32ff 	mov.w	r2, #4294967295
9000a326:	f242 7b10 	movw	fp, #10000	@ 0x2710
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000a32a:	f241 0a47 	movw	sl, #4167	@ 0x1047
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000a32e:	4639      	mov	r1, r7
9000a330:	462b      	mov	r3, r5
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000a332:	9201      	str	r2, [sp, #4]
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000a334:	9009      	str	r0, [sp, #36]	@ 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
9000a336:	f8d9 0000 	ldr.w	r0, [r9]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
9000a33a:	2500      	movs	r5, #0
9000a33c:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
9000a340:	fb00 1001 	mla	r0, r0, r1, r1
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
9000a344:	930d      	str	r3, [sp, #52]	@ 0x34
9000a346:	1a22      	subs	r2, r4, r0
9000a348:	eb0c 0700 	add.w	r7, ip, r0
9000a34c:	468c      	mov	ip, r1
9000a34e:	ea4f 0842 	mov.w	r8, r2, lsl #1
9000a352:	181a      	adds	r2, r3, r0
9000a354:	e9cd e40a 	strd	lr, r4, [sp, #40]	@ 0x28
9000a358:	9207      	str	r2, [sp, #28]
9000a35a:	e006      	b.n	9000a36a <BSP_I2C4_Init+0x6ce>
9000a35c:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
9000a360:	4407      	add	r7, r0
9000a362:	eba8 0800 	sub.w	r8, r8, r0
9000a366:	f43f aed4 	beq.w	9000a112 <BSP_I2C4_Init+0x476>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000a36a:	f241 235c 	movw	r3, #4700	@ 0x125c
9000a36e:	9500      	str	r5, [sp, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000a370:	3501      	adds	r5, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000a372:	429f      	cmp	r7, r3
9000a374:	d9f2      	bls.n	9000a35c <BSP_I2C4_Init+0x6c0>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000a376:	f1a7 0332 	sub.w	r3, r7, #50	@ 0x32
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000a37a:	ebbc 0f93 	cmp.w	ip, r3, lsr #2
9000a37e:	d2ed      	bcs.n	9000a35c <BSP_I2C4_Init+0x6c0>
9000a380:	f242 4e4a 	movw	lr, #9290	@ 0x244a
9000a384:	4644      	mov	r4, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000a386:	2200      	movs	r2, #0
9000a388:	ebae 0e03 	sub.w	lr, lr, r3
9000a38c:	9b07      	ldr	r3, [sp, #28]
9000a38e:	e9cd 5c02 	strd	r5, ip, [sp, #8]
9000a392:	e9cd 7804 	strd	r7, r8, [sp, #16]
9000a396:	443b      	add	r3, r7
9000a398:	f8dd c004 	ldr.w	ip, [sp, #4]
9000a39c:	f8dd 8018 	ldr.w	r8, [sp, #24]
9000a3a0:	e005      	b.n	9000a3ae <BSP_I2C4_Init+0x712>
9000a3a2:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000a3a6:	4403      	add	r3, r0
9000a3a8:	eba4 0400 	sub.w	r4, r4, r0
9000a3ac:	d01a      	beq.n	9000a3e4 <BSP_I2C4_Init+0x748>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000a3ae:	eb0e 0103 	add.w	r1, lr, r3
9000a3b2:	4617      	mov	r7, r2
9000a3b4:	f203 6583 	addw	r5, r3, #1667	@ 0x683
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
9000a3b8:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000a3ba:	42b1      	cmp	r1, r6
9000a3bc:	d9f1      	bls.n	9000a3a2 <BSP_I2C4_Init+0x706>
9000a3be:	4555      	cmp	r5, sl
9000a3c0:	d8ef      	bhi.n	9000a3a2 <BSP_I2C4_Init+0x706>
            if (error < 0)
9000a3c2:	ea33 0123 	bics.w	r1, r3, r3, asr #32
9000a3c6:	bf28      	it	cs
9000a3c8:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
9000a3ca:	458b      	cmp	fp, r1
9000a3cc:	d9e9      	bls.n	9000a3a2 <BSP_I2C4_Init+0x706>
              I2c_valid_timing[count].sclh = sclh;
9000a3ce:	468b      	mov	fp, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000a3d0:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
              I2c_valid_timing[count].scll = scll;
9000a3d4:	9900      	ldr	r1, [sp, #0]
              I2c_valid_timing[count].sclh = sclh;
9000a3d6:	46c4      	mov	ip, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000a3d8:	4403      	add	r3, r0
9000a3da:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
9000a3de:	e9c9 7103 	strd	r7, r1, [r9, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000a3e2:	d1e4      	bne.n	9000a3ae <BSP_I2C4_Init+0x712>
9000a3e4:	f8cd c004 	str.w	ip, [sp, #4]
9000a3e8:	9d02      	ldr	r5, [sp, #8]
9000a3ea:	f8dd 8014 	ldr.w	r8, [sp, #20]
9000a3ee:	e9dd c703 	ldrd	ip, r7, [sp, #12]
9000a3f2:	e7b3      	b.n	9000a35c <BSP_I2C4_Init+0x6c0>
9000a3f4:	4602      	mov	r2, r0
9000a3f6:	e599      	b.n	90009f2c <BSP_I2C4_Init+0x290>
            if(presc != prev_presc)
9000a3f8:	4608      	mov	r0, r1
9000a3fa:	e652      	b.n	9000a0a2 <BSP_I2C4_Init+0x406>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a3fc:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a400:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a404:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a406:	46b2      	mov	sl, r6
9000a408:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a40c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a410:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a414:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a416:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a418:	f63f af66 	bhi.w	9000a2e8 <BSP_I2C4_Init+0x64c>
9000a41c:	46aa      	mov	sl, r5
9000a41e:	e6ad      	b.n	9000a17c <BSP_I2C4_Init+0x4e0>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
9000a420:	3501      	adds	r5, #1
9000a422:	9b00      	ldr	r3, [sp, #0]
9000a424:	2d10      	cmp	r5, #16
9000a426:	441f      	add	r7, r3
9000a428:	f47f acbe 	bne.w	90009da8 <BSP_I2C4_Init+0x10c>
9000a42c:	4693      	mov	fp, r2
9000a42e:	9c01      	ldr	r4, [sp, #4]
9000a430:	9911      	ldr	r1, [sp, #68]	@ 0x44
9000a432:	9a02      	ldr	r2, [sp, #8]
9000a434:	f1bb 0f00 	cmp.w	fp, #0
9000a438:	d003      	beq.n	9000a442 <BSP_I2C4_Init+0x7a6>
9000a43a:	4b05      	ldr	r3, [pc, #20]	@ (9000a450 <BSP_I2C4_Init+0x7b4>)
9000a43c:	4649      	mov	r1, r9
9000a43e:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
9000a442:	2900      	cmp	r1, #0
9000a444:	f43f ae8f 	beq.w	9000a166 <BSP_I2C4_Init+0x4ca>
9000a448:	4803      	ldr	r0, [pc, #12]	@ (9000a458 <BSP_I2C4_Init+0x7bc>)
9000a44a:	e754      	b.n	9000a2f6 <BSP_I2C4_Init+0x65a>
9000a44c:	2400d690 	.word	0x2400d690
9000a450:	2400d6e4 	.word	0x2400d6e4
9000a454:	ffffdbb6 	.word	0xffffdbb6
9000a458:	2400d6e8 	.word	0x2400d6e8

9000a45c <BSP_I2C4_WriteReg>:
{
9000a45c:	b530      	push	{r4, r5, lr}
9000a45e:	4614      	mov	r4, r2
9000a460:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000a462:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
9000a466:	460a      	mov	r2, r1
9000a468:	9301      	str	r3, [sp, #4]
9000a46a:	4601      	mov	r1, r0
9000a46c:	2301      	movs	r3, #1
9000a46e:	4809      	ldr	r0, [pc, #36]	@ (9000a494 <BSP_I2C4_WriteReg+0x38>)
9000a470:	9502      	str	r5, [sp, #8]
9000a472:	9400      	str	r4, [sp, #0]
9000a474:	f001 fe64 	bl	9000c140 <HAL_I2C_Mem_Write>
9000a478:	b908      	cbnz	r0, 9000a47e <BSP_I2C4_WriteReg+0x22>
}
9000a47a:	b005      	add	sp, #20
9000a47c:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000a47e:	4805      	ldr	r0, [pc, #20]	@ (9000a494 <BSP_I2C4_WriteReg+0x38>)
9000a480:	f002 f8d0 	bl	9000c624 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
9000a484:	2804      	cmp	r0, #4
9000a486:	bf14      	ite	ne
9000a488:	f06f 0003 	mvnne.w	r0, #3
9000a48c:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
9000a490:	e7f3      	b.n	9000a47a <BSP_I2C4_WriteReg+0x1e>
9000a492:	bf00      	nop
9000a494:	2400d690 	.word	0x2400d690

9000a498 <BSP_I2C4_ReadReg>:
{
9000a498:	b530      	push	{r4, r5, lr}
9000a49a:	4614      	mov	r4, r2
9000a49c:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000a49e:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
9000a4a2:	460a      	mov	r2, r1
9000a4a4:	9301      	str	r3, [sp, #4]
9000a4a6:	4601      	mov	r1, r0
9000a4a8:	2301      	movs	r3, #1
9000a4aa:	4809      	ldr	r0, [pc, #36]	@ (9000a4d0 <BSP_I2C4_ReadReg+0x38>)
9000a4ac:	9502      	str	r5, [sp, #8]
9000a4ae:	9400      	str	r4, [sp, #0]
9000a4b0:	f001 ff74 	bl	9000c39c <HAL_I2C_Mem_Read>
9000a4b4:	b908      	cbnz	r0, 9000a4ba <BSP_I2C4_ReadReg+0x22>
}
9000a4b6:	b005      	add	sp, #20
9000a4b8:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000a4ba:	4805      	ldr	r0, [pc, #20]	@ (9000a4d0 <BSP_I2C4_ReadReg+0x38>)
9000a4bc:	f002 f8b2 	bl	9000c624 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
9000a4c0:	2804      	cmp	r0, #4
9000a4c2:	bf14      	ite	ne
9000a4c4:	f06f 0003 	mvnne.w	r0, #3
9000a4c8:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
9000a4cc:	e7f3      	b.n	9000a4b6 <BSP_I2C4_ReadReg+0x1e>
9000a4ce:	bf00      	nop
9000a4d0:	2400d690 	.word	0x2400d690

9000a4d4 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
9000a4d4:	f000 baa0 	b.w	9000aa18 <HAL_GetTick>

9000a4d8 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
9000a4d8:	b970      	cbnz	r0, 9000a4f8 <BSP_SDRAM_DeInit+0x20>
{
9000a4da:	b510      	push	{r4, lr}
9000a4dc:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
9000a4de:	4808      	ldr	r0, [pc, #32]	@ (9000a500 <BSP_SDRAM_DeInit+0x28>)
9000a4e0:	f005 fff2 	bl	900104c8 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
9000a4e4:	207a      	movs	r0, #122	@ 0x7a
9000a4e6:	f000 faff 	bl	9000aae8 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000a4ea:	4b06      	ldr	r3, [pc, #24]	@ (9000a504 <BSP_SDRAM_DeInit+0x2c>)
9000a4ec:	4806      	ldr	r0, [pc, #24]	@ (9000a508 <BSP_SDRAM_DeInit+0x30>)
9000a4ee:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
9000a4f0:	f003 fe6c 	bl	9000e1cc <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
9000a4f4:	4620      	mov	r0, r4
}
9000a4f6:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000a4f8:	f06f 0001 	mvn.w	r0, #1
}
9000a4fc:	4770      	bx	lr
9000a4fe:	bf00      	nop
9000a500:	2400e1e4 	.word	0x2400e1e4
9000a504:	52000040 	.word	0x52000040
9000a508:	2400e0ec 	.word	0x2400e0ec

9000a50c <MX_SDRAM_BANK2_Init>:
{
9000a50c:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
9000a50e:	6102      	str	r2, [r0, #16]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000a510:	2200      	movs	r2, #0
{
9000a512:	b089      	sub	sp, #36	@ 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
9000a514:	4c13      	ldr	r4, [pc, #76]	@ (9000a564 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000a516:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000a518:	2540      	movs	r5, #64	@ 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
9000a51a:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
9000a51c:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
9000a51e:	6282      	str	r2, [r0, #40]	@ 0x28
  sdram_timing.LoadToActiveDelay    = 2;
9000a520:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
9000a522:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
9000a524:	f44f 71c0 	mov.w	r1, #384	@ 0x180
  sdram_timing.LoadToActiveDelay    = 2;
9000a528:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
9000a52a:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000a52c:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
9000a52e:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000a530:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000a532:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000a536:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000a538:	f44f 6500 	mov.w	r5, #2048	@ 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
9000a53c:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000a53e:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000a540:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
9000a544:	2204      	movs	r2, #4
9000a546:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
9000a54a:	2202      	movs	r2, #2
9000a54c:	2302      	movs	r3, #2
9000a54e:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
9000a552:	4b05      	ldr	r3, [pc, #20]	@ (9000a568 <MX_SDRAM_BANK2_Init+0x5c>)
9000a554:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000a556:	f005 ff8d 	bl	90010474 <HAL_SDRAM_Init>
}
9000a55a:	3800      	subs	r0, #0
9000a55c:	bf18      	it	ne
9000a55e:	2001      	movne	r0, #1
9000a560:	b009      	add	sp, #36	@ 0x24
9000a562:	bd30      	pop	{r4, r5, pc}
9000a564:	2400e1e4 	.word	0x2400e1e4
9000a568:	52004140 	.word	0x52004140

9000a56c <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
9000a56c:	2800      	cmp	r0, #0
9000a56e:	f040 80cd 	bne.w	9000a70c <BSP_SDRAM_Init+0x1a0>
  __HAL_RCC_FMC_CLK_ENABLE();
9000a572:	4b69      	ldr	r3, [pc, #420]	@ (9000a718 <BSP_SDRAM_Init+0x1ac>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
9000a574:	2101      	movs	r1, #1
  __HAL_RCC_FMC_CLK_ENABLE();
9000a576:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
9000a57a:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
{
9000a57e:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
9000a580:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
{
9000a584:	b08d      	sub	sp, #52	@ 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
9000a586:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
9000a58a:	4605      	mov	r5, r0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
9000a58c:	2002      	movs	r0, #2
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
9000a58e:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
9000a590:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000a594:	4c61      	ldr	r4, [pc, #388]	@ (9000a71c <BSP_SDRAM_Init+0x1b0>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000a596:	4e62      	ldr	r6, [pc, #392]	@ (9000a720 <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000a598:	9200      	str	r2, [sp, #0]
9000a59a:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
9000a59c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
9000a5a0:	430a      	orrs	r2, r1
9000a5a2:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
9000a5a6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
9000a5aa:	400a      	ands	r2, r1
9000a5ac:	9201      	str	r2, [sp, #4]
9000a5ae:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
9000a5b0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000a5b4:	f042 0208 	orr.w	r2, r2, #8
9000a5b8:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000a5bc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000a5c0:	f002 0208 	and.w	r2, r2, #8
9000a5c4:	9202      	str	r2, [sp, #8]
9000a5c6:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
9000a5c8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000a5cc:	f042 0210 	orr.w	r2, r2, #16
9000a5d0:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000a5d4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000a5d8:	f002 0210 	and.w	r2, r2, #16
9000a5dc:	9203      	str	r2, [sp, #12]
9000a5de:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
9000a5e0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000a5e4:	f042 0220 	orr.w	r2, r2, #32
9000a5e8:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000a5ec:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000a5f0:	f002 0220 	and.w	r2, r2, #32
9000a5f4:	9204      	str	r2, [sp, #16]
9000a5f6:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
9000a5f8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000a5fc:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000a600:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000a604:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000a608:	f002 0240 	and.w	r2, r2, #64	@ 0x40
9000a60c:	9205      	str	r2, [sp, #20]
9000a60e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000a610:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000a614:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
9000a618:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
9000a61c:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000a61e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
9000a622:	9008      	str	r0, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000a624:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
9000a628:	483e      	ldr	r0, [pc, #248]	@ (9000a724 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
9000a62a:	9109      	str	r1, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000a62c:	9306      	str	r3, [sp, #24]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000a62e:	f24c 7303 	movw	r3, #50947	@ 0xc703
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000a632:	9906      	ldr	r1, [sp, #24]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
9000a634:	a907      	add	r1, sp, #28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000a636:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
9000a638:	e9cd 720a 	strd	r7, r2, [sp, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
9000a63c:	f001 f982 	bl	9000b944 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
9000a640:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
9000a644:	a907      	add	r1, sp, #28
9000a646:	4838      	ldr	r0, [pc, #224]	@ (9000a728 <BSP_SDRAM_Init+0x1bc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
9000a648:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
9000a64a:	f001 f97b 	bl	9000b944 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
9000a64e:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
9000a652:	a907      	add	r1, sp, #28
9000a654:	4835      	ldr	r0, [pc, #212]	@ (9000a72c <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
9000a656:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
9000a658:	f001 f974 	bl	9000b944 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
9000a65c:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
9000a660:	a907      	add	r1, sp, #28
9000a662:	4833      	ldr	r0, [pc, #204]	@ (9000a730 <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
9000a664:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
9000a666:	f001 f96d 	bl	9000b944 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
9000a66a:	23e0      	movs	r3, #224	@ 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
9000a66c:	a907      	add	r1, sp, #28
9000a66e:	4831      	ldr	r0, [pc, #196]	@ (9000a734 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
9000a670:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
9000a672:	f001 f967 	bl	9000b944 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
9000a676:	2380      	movs	r3, #128	@ 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000a678:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
9000a67c:	f240 2102 	movw	r1, #514	@ 0x202
  HAL_MDMA_DeInit(&mdma_handle);
9000a680:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
9000a682:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
9000a684:	62a3      	str	r3, [r4, #40]	@ 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000a686:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
9000a688:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
9000a68c:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
9000a68e:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000a690:	4a29      	ldr	r2, [pc, #164]	@ (9000a738 <BSP_SDRAM_Init+0x1cc>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000a692:	6334      	str	r4, [r6, #48]	@ 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000a694:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000a696:	6426      	str	r6, [r4, #64]	@ 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
9000a698:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
9000a69c:	f640 0308 	movw	r3, #2056	@ 0x808
9000a6a0:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000a6a2:	2320      	movs	r3, #32
9000a6a4:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000a6a6:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
9000a6aa:	e9c4 550b 	strd	r5, r5, [r4, #44]	@ 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000a6ae:	6263      	str	r3, [r4, #36]	@ 0x24
  mdma_handle.Init.SourceBlockAddressOffset = 0;
9000a6b0:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  HAL_MDMA_DeInit(&mdma_handle);
9000a6b4:	f003 fd8a 	bl	9000e1cc <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
9000a6b8:	4620      	mov	r0, r4
9000a6ba:	f003 fd0d 	bl	9000e0d8 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
9000a6be:	462a      	mov	r2, r5
9000a6c0:	210f      	movs	r1, #15
9000a6c2:	207a      	movs	r0, #122	@ 0x7a
9000a6c4:	f000 f9c6 	bl	9000aa54 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
9000a6c8:	207a      	movs	r0, #122	@ 0x7a
9000a6ca:	f000 f9ff 	bl	9000aacc <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
9000a6ce:	2210      	movs	r2, #16
9000a6d0:	2104      	movs	r1, #4
9000a6d2:	4630      	mov	r0, r6
9000a6d4:	f7ff ff1a 	bl	9000a50c <MX_SDRAM_BANK2_Init>
9000a6d8:	4603      	mov	r3, r0
9000a6da:	b9d0      	cbnz	r0, 9000a712 <BSP_SDRAM_Init+0x1a6>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000a6dc:	4917      	ldr	r1, [pc, #92]	@ (9000a73c <BSP_SDRAM_Init+0x1d0>)
9000a6de:	2208      	movs	r2, #8
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
9000a6e0:	2430      	movs	r4, #48	@ 0x30
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000a6e2:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000a6e4:	600a      	str	r2, [r1, #0]
      pRegMode.RefreshRate     = REFRESH_COUNT;
9000a6e6:	f240 6203 	movw	r2, #1539	@ 0x603
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
9000a6ea:	604f      	str	r7, [r1, #4]
      pRegMode.RefreshRate     = REFRESH_COUNT;
9000a6ec:	e9c1 2302 	strd	r2, r3, [r1, #8]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
9000a6f0:	f44f 7200 	mov.w	r2, #512	@ 0x200
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
9000a6f4:	e9c1 3404 	strd	r3, r4, [r1, #16]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
9000a6f8:	e9c1 3206 	strd	r3, r2, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000a6fc:	f7ff fa18 	bl	90009b30 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
9000a700:	2800      	cmp	r0, #0
9000a702:	bf18      	it	ne
9000a704:	f06f 0004 	mvnne.w	r0, #4
}
9000a708:	b00d      	add	sp, #52	@ 0x34
9000a70a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000a70c:	f06f 0001 	mvn.w	r0, #1
}
9000a710:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
9000a712:	f04f 30ff 	mov.w	r0, #4294967295
9000a716:	e7f7      	b.n	9000a708 <BSP_SDRAM_Init+0x19c>
9000a718:	58024400 	.word	0x58024400
9000a71c:	2400e158 	.word	0x2400e158
9000a720:	2400e1e4 	.word	0x2400e1e4
9000a724:	58020c00 	.word	0x58020c00
9000a728:	58021000 	.word	0x58021000
9000a72c:	58021400 	.word	0x58021400
9000a730:	58021800 	.word	0x58021800
9000a734:	58021c00 	.word	0x58021c00
9000a738:	52000040 	.word	0x52000040
9000a73c:	2400e1c4 	.word	0x2400e1c4

9000a740 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
9000a740:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000a744:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
9000a746:	2800      	cmp	r0, #0
9000a748:	d16b      	bne.n	9000a822 <BSP_TS_Init+0xe2>
9000a74a:	680b      	ldr	r3, [r1, #0]
9000a74c:	460d      	mov	r5, r1
9000a74e:	1e5a      	subs	r2, r3, #1
9000a750:	f5b2 7ff0 	cmp.w	r2, #480	@ 0x1e0
9000a754:	d265      	bcs.n	9000a822 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000a756:	684a      	ldr	r2, [r1, #4]
9000a758:	1e51      	subs	r1, r2, #1
9000a75a:	f5b1 7f88 	cmp.w	r1, #272	@ 0x110
9000a75e:	d260      	bcs.n	9000a822 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
9000a760:	4293      	cmp	r3, r2
9000a762:	bf28      	it	cs
9000a764:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000a766:	68ea      	ldr	r2, [r5, #12]
9000a768:	429a      	cmp	r2, r3
9000a76a:	d85a      	bhi.n	9000a822 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
9000a76c:	2270      	movs	r2, #112	@ 0x70
  IOCtx.Init        = BSP_I2C4_Init;
9000a76e:	4b31      	ldr	r3, [pc, #196]	@ (9000a834 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000a770:	4c31      	ldr	r4, [pc, #196]	@ (9000a838 <BSP_TS_Init+0xf8>)
9000a772:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
9000a774:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
9000a778:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
9000a77a:	4a30      	ldr	r2, [pc, #192]	@ (9000a83c <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
9000a77c:	4b30      	ldr	r3, [pc, #192]	@ (9000a840 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
9000a77e:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
9000a780:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
9000a782:	4a30      	ldr	r2, [pc, #192]	@ (9000a844 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
9000a784:	4b30      	ldr	r3, [pc, #192]	@ (9000a848 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
9000a786:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000a788:	4620      	mov	r0, r4
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
9000a78a:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
9000a78c:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000a78e:	f7ff f921 	bl	900099d4 <FT5336_RegisterBusIO>
9000a792:	2800      	cmp	r0, #0
9000a794:	d14b      	bne.n	9000a82e <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
9000a796:	a901      	add	r1, sp, #4
9000a798:	4620      	mov	r0, r4
9000a79a:	f7ff f811 	bl	900097c0 <FT5336_ReadID>
9000a79e:	2800      	cmp	r0, #0
9000a7a0:	d145      	bne.n	9000a82e <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
9000a7a2:	9b01      	ldr	r3, [sp, #4]
9000a7a4:	2b51      	cmp	r3, #81	@ 0x51
9000a7a6:	d142      	bne.n	9000a82e <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000a7a8:	4b28      	ldr	r3, [pc, #160]	@ (9000a84c <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
9000a7aa:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
9000a7ac:	4f28      	ldr	r7, [pc, #160]	@ (9000a850 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000a7ae:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 9000a858 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
9000a7b2:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000a7b4:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
9000a7b8:	681b      	ldr	r3, [r3, #0]
9000a7ba:	4798      	blx	r3
9000a7bc:	4606      	mov	r6, r0
9000a7be:	2800      	cmp	r0, #0
9000a7c0:	d135      	bne.n	9000a82e <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000a7c2:	4c24      	ldr	r4, [pc, #144]	@ (9000a854 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000a7c4:	a902      	add	r1, sp, #8
9000a7c6:	6838      	ldr	r0, [r7, #0]
9000a7c8:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000a7cc:	e9d5 7200 	ldrd	r7, r2, [r5]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000a7d0:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000a7d2:	e9c4 7200 	strd	r7, r2, [r4]
9000a7d6:	68aa      	ldr	r2, [r5, #8]
9000a7d8:	60a2      	str	r2, [r4, #8]
9000a7da:	68ea      	ldr	r2, [r5, #12]
9000a7dc:	60e2      	str	r2, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000a7de:	4798      	blx	r3
9000a7e0:	2800      	cmp	r0, #0
9000a7e2:	db18      	blt.n	9000a816 <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
9000a7e4:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
9000a7e8:	e9c4 3204 	strd	r3, r2, [r4, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a7ec:	68eb      	ldr	r3, [r5, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a7ee:	e9d5 2100 	ldrd	r2, r1, [r5]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a7f2:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a7f4:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a7f6:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a7f8:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a7fa:	e9c4 2206 	strd	r2, r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a7fe:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a802:	e9c4 2208 	strd	r2, r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a806:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a80a:	62a2      	str	r2, [r4, #40]	@ 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a80c:	63e3      	str	r3, [r4, #60]	@ 0x3c
}
9000a80e:	4630      	mov	r0, r6
9000a810:	b008      	add	sp, #32
9000a812:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
9000a816:	f06f 0604 	mvn.w	r6, #4
}
9000a81a:	4630      	mov	r0, r6
9000a81c:	b008      	add	sp, #32
9000a81e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
9000a822:	f06f 0601 	mvn.w	r6, #1
}
9000a826:	4630      	mov	r0, r6
9000a828:	b008      	add	sp, #32
9000a82a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
9000a82e:	f04f 36ff 	mov.w	r6, #4294967295
9000a832:	e7ec      	b.n	9000a80e <BSP_TS_Init+0xce>
9000a834:	90009c9d 	.word	0x90009c9d
9000a838:	2400e218 	.word	0x2400e218
9000a83c:	90009c09 	.word	0x90009c09
9000a840:	9000a499 	.word	0x9000a499
9000a844:	9000a45d 	.word	0x9000a45d
9000a848:	9000a4d5 	.word	0x9000a4d5
9000a84c:	24000024 	.word	0x24000024
9000a850:	2400e280 	.word	0x2400e280
9000a854:	2400e240 	.word	0x2400e240
9000a858:	2400e284 	.word	0x2400e284

9000a85c <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
9000a85c:	2800      	cmp	r0, #0
9000a85e:	d154      	bne.n	9000a90a <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
9000a860:	4b2b      	ldr	r3, [pc, #172]	@ (9000a910 <BSP_TS_GetState+0xb4>)
9000a862:	4a2c      	ldr	r2, [pc, #176]	@ (9000a914 <BSP_TS_GetState+0xb8>)
9000a864:	681b      	ldr	r3, [r3, #0]
9000a866:	6810      	ldr	r0, [r2, #0]
9000a868:	691b      	ldr	r3, [r3, #16]
{
9000a86a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000a86e:	b084      	sub	sp, #16
9000a870:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
9000a872:	a901      	add	r1, sp, #4
9000a874:	4798      	blx	r3
9000a876:	2800      	cmp	r0, #0
9000a878:	db3f      	blt.n	9000a8fa <BSP_TS_GetState+0x9e>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
9000a87a:	4b27      	ldr	r3, [pc, #156]	@ (9000a918 <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
9000a87c:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
9000a87e:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
9000a880:	6add      	ldr	r5, [r3, #44]	@ 0x2c
    else if(state.TouchDetected != 0U)
9000a882:	b930      	cbnz	r0, 9000a892 <BSP_TS_GetState+0x36>
      TS_State->TouchDetected = 0U;
9000a884:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
9000a886:	e9c4 6501 	strd	r6, r5, [r4, #4]
  int32_t ret = BSP_ERROR_NONE;
9000a88a:	2000      	movs	r0, #0
}
9000a88c:	b004      	add	sp, #16
9000a88e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000a892:	689f      	ldr	r7, [r3, #8]
9000a894:	073a      	lsls	r2, r7, #28
      y_oriented = state.TouchY;
9000a896:	e9dd c802 	ldrd	ip, r8, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000a89a:	d433      	bmi.n	9000a904 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
9000a89c:	4641      	mov	r1, r8
      x_oriented = state.TouchX;
9000a89e:	4662      	mov	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
9000a8a0:	f017 0f02 	tst.w	r7, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
9000a8a4:	f8d3 e010 	ldr.w	lr, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
9000a8a8:	d003      	beq.n	9000a8b2 <BSP_TS_GetState+0x56>
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
9000a8aa:	f10e 32ff 	add.w	r2, lr, #4294967295
9000a8ae:	eba2 020c 	sub.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
9000a8b2:	f8d3 c014 	ldr.w	ip, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
9000a8b6:	077f      	lsls	r7, r7, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000a8b8:	681f      	ldr	r7, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
9000a8ba:	bf48      	it	mi
9000a8bc:	ebac 0108 	submi.w	r1, ip, r8
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000a8c0:	fb07 f202 	mul.w	r2, r7, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000a8c4:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
9000a8c6:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000a8c8:	fb07 f101 	mul.w	r1, r7, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000a8cc:	fbb2 f2fe 	udiv	r2, r2, lr
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000a8d0:	fbb1 f1fc 	udiv	r1, r1, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
9000a8d4:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000a8d6:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000a8d8:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
9000a8da:	bf8c      	ite	hi
9000a8dc:	1b90      	subhi	r0, r2, r6
9000a8de:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
9000a8e0:	42a9      	cmp	r1, r5
9000a8e2:	bf8c      	ite	hi
9000a8e4:	1b4f      	subhi	r7, r1, r5
9000a8e6:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
9000a8e8:	42b8      	cmp	r0, r7
9000a8ea:	bf38      	it	cc
9000a8ec:	4638      	movcc	r0, r7
9000a8ee:	68df      	ldr	r7, [r3, #12]
9000a8f0:	4287      	cmp	r7, r0
9000a8f2:	d2c8      	bcs.n	9000a886 <BSP_TS_GetState+0x2a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
9000a8f4:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
9000a8f6:	62d9      	str	r1, [r3, #44]	@ 0x2c
9000a8f8:	e7c7      	b.n	9000a88a <BSP_TS_GetState+0x2e>
      ret = BSP_ERROR_COMPONENT_FAILURE;
9000a8fa:	f06f 0004 	mvn.w	r0, #4
}
9000a8fe:	b004      	add	sp, #16
9000a900:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        y_oriented = state.TouchX;
9000a904:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
9000a906:	4642      	mov	r2, r8
9000a908:	e7ca      	b.n	9000a8a0 <BSP_TS_GetState+0x44>
    ret = BSP_ERROR_WRONG_PARAM;
9000a90a:	f06f 0001 	mvn.w	r0, #1
}
9000a90e:	4770      	bx	lr
9000a910:	2400e284 	.word	0x2400e284
9000a914:	2400e280 	.word	0x2400e280
9000a918:	2400e240 	.word	0x2400e240

9000a91c <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
9000a91c:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000a91e:	4c19      	ldr	r4, [pc, #100]	@ (9000a984 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
9000a920:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
9000a922:	4b19      	ldr	r3, [pc, #100]	@ (9000a988 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000a924:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
9000a928:	4818      	ldr	r0, [pc, #96]	@ (9000a98c <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000a92a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000a92e:	f8c4 1088 	str.w	r1, [r4, #136]	@ 0x88
  RCC->CR |= RCC_CR_HSION;
9000a932:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000a934:	4c16      	ldr	r4, [pc, #88]	@ (9000a990 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
9000a936:	f041 0101 	orr.w	r1, r1, #1
9000a93a:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
9000a93c:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
9000a93e:	6819      	ldr	r1, [r3, #0]
9000a940:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000a942:	4914      	ldr	r1, [pc, #80]	@ (9000a994 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
9000a944:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
9000a946:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
9000a948:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
9000a94a:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
9000a94c:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLLCFGR = 0x00000000;
9000a94e:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC->PLL1DIVR = 0x00000000;
9000a950:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC->PLL1FRACR = 0x00000000;
9000a952:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->PLL2DIVR = 0x00000000;
9000a954:	639a      	str	r2, [r3, #56]	@ 0x38
  RCC->PLL2FRACR = 0x00000000;
9000a956:	63da      	str	r2, [r3, #60]	@ 0x3c
  RCC->PLL3DIVR = 0x00000000;
9000a958:	641a      	str	r2, [r3, #64]	@ 0x40
  RCC->PLL3FRACR = 0x00000000;
9000a95a:	645a      	str	r2, [r3, #68]	@ 0x44
  RCC->CR &= 0xFFFBFFFFU;
9000a95c:	6818      	ldr	r0, [r3, #0]
9000a95e:	f420 2080 	bic.w	r0, r0, #262144	@ 0x40000
9000a962:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
9000a964:	661a      	str	r2, [r3, #96]	@ 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000a966:	6823      	ldr	r3, [r4, #0]
9000a968:	4019      	ands	r1, r3
9000a96a:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000a96e:	d203      	bcs.n	9000a978 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
9000a970:	4b09      	ldr	r3, [pc, #36]	@ (9000a998 <SystemInit+0x7c>)
9000a972:	2201      	movs	r2, #1
9000a974:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
9000a978:	4a08      	ldr	r2, [pc, #32]	@ (9000a99c <SystemInit+0x80>)
9000a97a:	4b02      	ldr	r3, [pc, #8]	@ (9000a984 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
9000a97c:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
9000a980:	609a      	str	r2, [r3, #8]
}
9000a982:	4770      	bx	lr
9000a984:	e000ed00 	.word	0xe000ed00
9000a988:	58024400 	.word	0x58024400
9000a98c:	eaf6ed7f 	.word	0xeaf6ed7f
9000a990:	5c001000 	.word	0x5c001000
9000a994:	ffff0000 	.word	0xffff0000
9000a998:	51008000 	.word	0x51008000
9000a99c:	90000000 	.word	0x90000000

9000a9a0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
9000a9a0:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000a9a2:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a9a4:	4c12      	ldr	r4, [pc, #72]	@ (9000a9f0 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000a9a6:	f000 f843 	bl	9000aa30 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a9aa:	f004 f92b 	bl	9000ec04 <HAL_RCC_GetSysClockFreq>
9000a9ae:	4b11      	ldr	r3, [pc, #68]	@ (9000a9f4 <HAL_Init+0x54>)
9000a9b0:	4911      	ldr	r1, [pc, #68]	@ (9000a9f8 <HAL_Init+0x58>)
9000a9b2:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a9b4:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a9b6:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a9ba:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a9be:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a9c0:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a9c2:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000a9c6:	490d      	ldr	r1, [pc, #52]	@ (9000a9fc <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a9c8:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a9cc:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a9ce:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
9000a9d2:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
9000a9d4:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a9d6:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
9000a9d8:	f7f6 ff0a 	bl	900017f0 <HAL_InitTick>
9000a9dc:	b110      	cbz	r0, 9000a9e4 <HAL_Init+0x44>
  {
    return HAL_ERROR;
9000a9de:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
9000a9e0:	4620      	mov	r0, r4
9000a9e2:	bd10      	pop	{r4, pc}
9000a9e4:	4604      	mov	r4, r0
  HAL_MspInit();
9000a9e6:	f7f6 fc51 	bl	9000128c <HAL_MspInit>
}
9000a9ea:	4620      	mov	r0, r4
9000a9ec:	bd10      	pop	{r4, pc}
9000a9ee:	bf00      	nop
9000a9f0:	24000054 	.word	0x24000054
9000a9f4:	58024400 	.word	0x58024400
9000a9f8:	9002f634 	.word	0x9002f634
9000a9fc:	24000058 	.word	0x24000058

9000aa00 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
9000aa00:	4a03      	ldr	r2, [pc, #12]	@ (9000aa10 <HAL_IncTick+0x10>)
9000aa02:	4b04      	ldr	r3, [pc, #16]	@ (9000aa14 <HAL_IncTick+0x14>)
9000aa04:	6811      	ldr	r1, [r2, #0]
9000aa06:	781b      	ldrb	r3, [r3, #0]
9000aa08:	440b      	add	r3, r1
9000aa0a:	6013      	str	r3, [r2, #0]
}
9000aa0c:	4770      	bx	lr
9000aa0e:	bf00      	nop
9000aa10:	2400e288 	.word	0x2400e288
9000aa14:	2400005c 	.word	0x2400005c

9000aa18 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
9000aa18:	4b01      	ldr	r3, [pc, #4]	@ (9000aa20 <HAL_GetTick+0x8>)
9000aa1a:	6818      	ldr	r0, [r3, #0]
}
9000aa1c:	4770      	bx	lr
9000aa1e:	bf00      	nop
9000aa20:	2400e288 	.word	0x2400e288

9000aa24 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
9000aa24:	4b01      	ldr	r3, [pc, #4]	@ (9000aa2c <HAL_GetREVID+0x8>)
9000aa26:	6818      	ldr	r0, [r3, #0]
}
9000aa28:	0c00      	lsrs	r0, r0, #16
9000aa2a:	4770      	bx	lr
9000aa2c:	5c001000 	.word	0x5c001000

9000aa30 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
9000aa30:	4906      	ldr	r1, [pc, #24]	@ (9000aa4c <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
9000aa32:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
9000aa36:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
9000aa38:	4b05      	ldr	r3, [pc, #20]	@ (9000aa50 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
9000aa3a:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
9000aa3c:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
9000aa40:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
9000aa44:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
9000aa46:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
9000aa48:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
9000aa4a:	4770      	bx	lr
9000aa4c:	e000ed00 	.word	0xe000ed00
9000aa50:	05fa0000 	.word	0x05fa0000

9000aa54 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
9000aa54:	4b1a      	ldr	r3, [pc, #104]	@ (9000aac0 <HAL_NVIC_SetPriority+0x6c>)
9000aa56:	68db      	ldr	r3, [r3, #12]
9000aa58:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
9000aa5c:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
9000aa5e:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000aa62:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
9000aa66:	f1be 0f04 	cmp.w	lr, #4
9000aa6a:	bf28      	it	cs
9000aa6c:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000aa70:	f1bc 0f06 	cmp.w	ip, #6
9000aa74:	d91a      	bls.n	9000aaac <HAL_NVIC_SetPriority+0x58>
9000aa76:	f1a3 0c03 	sub.w	ip, r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
9000aa7a:	f04f 33ff 	mov.w	r3, #4294967295
9000aa7e:	fa03 f30c 	lsl.w	r3, r3, ip
9000aa82:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000aa86:	f04f 33ff 	mov.w	r3, #4294967295
  if ((int32_t)(IRQn) >= 0)
9000aa8a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000aa8c:	fa03 f30e 	lsl.w	r3, r3, lr
9000aa90:	ea21 0303 	bic.w	r3, r1, r3
9000aa94:	fa03 f30c 	lsl.w	r3, r3, ip
9000aa98:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000aa9c:	ea4f 1303 	mov.w	r3, r3, lsl #4
9000aaa0:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
9000aaa2:	db06      	blt.n	9000aab2 <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000aaa4:	4a07      	ldr	r2, [pc, #28]	@ (9000aac4 <HAL_NVIC_SetPriority+0x70>)
9000aaa6:	5413      	strb	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
9000aaa8:	f85d fb04 	ldr.w	pc, [sp], #4
9000aaac:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000aaae:	4694      	mov	ip, r2
9000aab0:	e7e9      	b.n	9000aa86 <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000aab2:	f000 000f 	and.w	r0, r0, #15
9000aab6:	4a04      	ldr	r2, [pc, #16]	@ (9000aac8 <HAL_NVIC_SetPriority+0x74>)
9000aab8:	5413      	strb	r3, [r2, r0]
9000aaba:	f85d fb04 	ldr.w	pc, [sp], #4
9000aabe:	bf00      	nop
9000aac0:	e000ed00 	.word	0xe000ed00
9000aac4:	e000e400 	.word	0xe000e400
9000aac8:	e000ed14 	.word	0xe000ed14

9000aacc <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
9000aacc:	2800      	cmp	r0, #0
9000aace:	db07      	blt.n	9000aae0 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000aad0:	2301      	movs	r3, #1
9000aad2:	f000 011f 	and.w	r1, r0, #31
9000aad6:	4a03      	ldr	r2, [pc, #12]	@ (9000aae4 <HAL_NVIC_EnableIRQ+0x18>)
9000aad8:	0940      	lsrs	r0, r0, #5
9000aada:	408b      	lsls	r3, r1
9000aadc:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
9000aae0:	4770      	bx	lr
9000aae2:	bf00      	nop
9000aae4:	e000e100 	.word	0xe000e100

9000aae8 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
9000aae8:	2800      	cmp	r0, #0
9000aaea:	db0c      	blt.n	9000ab06 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000aaec:	0943      	lsrs	r3, r0, #5
9000aaee:	2201      	movs	r2, #1
9000aaf0:	f000 001f 	and.w	r0, r0, #31
9000aaf4:	4904      	ldr	r1, [pc, #16]	@ (9000ab08 <HAL_NVIC_DisableIRQ+0x20>)
9000aaf6:	3320      	adds	r3, #32
9000aaf8:	4082      	lsls	r2, r0
9000aafa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
9000aafe:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000ab02:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
9000ab06:	4770      	bx	lr
9000ab08:	e000e100 	.word	0xe000e100

9000ab0c <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
9000ab0c:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000ab10:	4b04      	ldr	r3, [pc, #16]	@ (9000ab24 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
9000ab12:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000ab14:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000ab16:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000ab1a:	625a      	str	r2, [r3, #36]	@ 0x24
  MPU->CTRL = 0;
9000ab1c:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
}
9000ab20:	4770      	bx	lr
9000ab22:	bf00      	nop
9000ab24:	e000ed00 	.word	0xe000ed00

9000ab28 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
9000ab28:	4b06      	ldr	r3, [pc, #24]	@ (9000ab44 <HAL_MPU_Enable+0x1c>)
9000ab2a:	f040 0001 	orr.w	r0, r0, #1
9000ab2e:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
9000ab32:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000ab34:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000ab38:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
9000ab3a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000ab3e:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
9000ab42:	4770      	bx	lr
9000ab44:	e000ed00 	.word	0xe000ed00

9000ab48 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
9000ab48:	4a17      	ldr	r2, [pc, #92]	@ (9000aba8 <HAL_MPU_ConfigRegion+0x60>)
9000ab4a:	7843      	ldrb	r3, [r0, #1]
9000ab4c:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  if ((MPU_Init->Enable) != 0UL)
9000ab50:	7801      	ldrb	r1, [r0, #0]
9000ab52:	b321      	cbz	r1, 9000ab9e <HAL_MPU_ConfigRegion+0x56>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
9000ab54:	6843      	ldr	r3, [r0, #4]
{
9000ab56:	b500      	push	{lr}
    MPU->RBAR = MPU_Init->BaseAddress;
9000ab58:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9000ab5c:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000ab5e:	f890 c00c 	ldrb.w	ip, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9000ab62:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
9000ab64:	f890 e00f 	ldrb.w	lr, [r0, #15]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000ab68:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
9000ab6c:	f890 c00a 	ldrb.w	ip, [r0, #10]
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000ab70:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
9000ab72:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000ab74:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
9000ab78:	f890 c00d 	ldrb.w	ip, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000ab7c:	ea43 438c 	orr.w	r3, r3, ip, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
9000ab80:	f890 c009 	ldrb.w	ip, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000ab84:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
9000ab88:	7a01      	ldrb	r1, [r0, #8]
9000ab8a:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
9000ab8e:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000ab92:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000ab96:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
9000ab9a:	f85d fb04 	ldr.w	pc, [sp], #4
    MPU->RBAR = 0x00;
9000ab9e:	f8c2 109c 	str.w	r1, [r2, #156]	@ 0x9c
    MPU->RASR = 0x00;
9000aba2:	f8c2 10a0 	str.w	r1, [r2, #160]	@ 0xa0
9000aba6:	4770      	bx	lr
9000aba8:	e000ed00 	.word	0xe000ed00

9000abac <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
9000abac:	2800      	cmp	r0, #0
9000abae:	d036      	beq.n	9000ac1e <HAL_CRC_Init+0x72>
{
9000abb0:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
9000abb2:	7f43      	ldrb	r3, [r0, #29]
9000abb4:	4604      	mov	r4, r0
9000abb6:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000abba:	b363      	cbz	r3, 9000ac16 <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
9000abbc:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000abbe:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
9000abc0:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000abc2:	b9f3      	cbnz	r3, 9000ac02 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
9000abc4:	6823      	ldr	r3, [r4, #0]
9000abc6:	4a17      	ldr	r2, [pc, #92]	@ (9000ac24 <HAL_CRC_Init+0x78>)
9000abc8:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
9000abca:	689a      	ldr	r2, [r3, #8]
9000abcc:	f022 0218 	bic.w	r2, r2, #24
9000abd0:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
9000abd2:	7962      	ldrb	r2, [r4, #5]
9000abd4:	b18a      	cbz	r2, 9000abfa <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
9000abd6:	6922      	ldr	r2, [r4, #16]
9000abd8:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000abda:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000abdc:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000abe0:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9000abe4:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
9000abe6:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000abe8:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000abea:	689a      	ldr	r2, [r3, #8]
9000abec:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000abf0:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
9000abf2:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000abf4:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
9000abf6:	7761      	strb	r1, [r4, #29]
}
9000abf8:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000abfa:	f04f 32ff 	mov.w	r2, #4294967295
9000abfe:	611a      	str	r2, [r3, #16]
9000ac00:	e7eb      	b.n	9000abda <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
9000ac02:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
9000ac06:	4620      	mov	r0, r4
9000ac08:	f000 f80e 	bl	9000ac28 <HAL_CRCEx_Polynomial_Set>
9000ac0c:	b908      	cbnz	r0, 9000ac12 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000ac0e:	6823      	ldr	r3, [r4, #0]
9000ac10:	e7df      	b.n	9000abd2 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
9000ac12:	2001      	movs	r0, #1
}
9000ac14:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
9000ac16:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
9000ac18:	f7f6 fb52 	bl	900012c0 <HAL_CRC_MspInit>
9000ac1c:	e7ce      	b.n	9000abbc <HAL_CRC_Init+0x10>
    return HAL_ERROR;
9000ac1e:	2001      	movs	r0, #1
}
9000ac20:	4770      	bx	lr
9000ac22:	bf00      	nop
9000ac24:	04c11db7 	.word	0x04c11db7

9000ac28 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
9000ac28:	07cb      	lsls	r3, r1, #31
9000ac2a:	d51a      	bpl.n	9000ac62 <HAL_CRCEx_Polynomial_Set+0x3a>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
9000ac2c:	231f      	movs	r3, #31
{
9000ac2e:	b410      	push	{r4}
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
9000ac30:	3b01      	subs	r3, #1
9000ac32:	1c5c      	adds	r4, r3, #1
9000ac34:	fa21 fc03 	lsr.w	ip, r1, r3
9000ac38:	d015      	beq.n	9000ac66 <HAL_CRCEx_Polynomial_Set+0x3e>
9000ac3a:	f01c 0f01 	tst.w	ip, #1
9000ac3e:	d0f7      	beq.n	9000ac30 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
9000ac40:	2a18      	cmp	r2, #24
9000ac42:	d811      	bhi.n	9000ac68 <HAL_CRCEx_Polynomial_Set+0x40>
9000ac44:	e8df f002 	tbb	[pc, r2]
9000ac48:	10101016 	.word	0x10101016
9000ac4c:	10101010 	.word	0x10101010
9000ac50:	10101024 	.word	0x10101024
9000ac54:	10101010 	.word	0x10101010
9000ac58:	10101021 	.word	0x10101021
9000ac5c:	10101010 	.word	0x10101010
9000ac60:	14          	.byte	0x14
9000ac61:	00          	.byte	0x00
9000ac62:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
9000ac64:	4770      	bx	lr
    switch (PolyLength)
9000ac66:	b12a      	cbz	r2, 9000ac74 <HAL_CRCEx_Polynomial_Set+0x4c>
9000ac68:	2001      	movs	r0, #1
}
9000ac6a:	f85d 4b04 	ldr.w	r4, [sp], #4
9000ac6e:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
9000ac70:	2b06      	cmp	r3, #6
9000ac72:	d8f9      	bhi.n	9000ac68 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
9000ac74:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000ac76:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
9000ac78:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000ac7a:	68a3      	ldr	r3, [r4, #8]
9000ac7c:	f023 0318 	bic.w	r3, r3, #24
9000ac80:	4313      	orrs	r3, r2
9000ac82:	60a3      	str	r3, [r4, #8]
}
9000ac84:	f85d 4b04 	ldr.w	r4, [sp], #4
9000ac88:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
9000ac8a:	2b07      	cmp	r3, #7
9000ac8c:	d9f2      	bls.n	9000ac74 <HAL_CRCEx_Polynomial_Set+0x4c>
9000ac8e:	e7eb      	b.n	9000ac68 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
9000ac90:	2b0f      	cmp	r3, #15
9000ac92:	d9ef      	bls.n	9000ac74 <HAL_CRCEx_Polynomial_Set+0x4c>
9000ac94:	e7e8      	b.n	9000ac68 <HAL_CRCEx_Polynomial_Set+0x40>
9000ac96:	bf00      	nop

9000ac98 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
9000ac98:	b570      	push	{r4, r5, r6, lr}
9000ac9a:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs_dma;
  BDMA_Base_Registers *regs_bdma;
  const __IO uint32_t *enableRegister;

  uint32_t tickstart = HAL_GetTick();
9000ac9c:	f7ff febc 	bl	9000aa18 <HAL_GetTick>

 /* Check the DMA peripheral handle */
  if(hdma == NULL)
9000aca0:	2c00      	cmp	r4, #0
9000aca2:	d06b      	beq.n	9000ad7c <HAL_DMA_Abort+0xe4>
  {
    return HAL_ERROR;
  }

  /* Check the DMA peripheral state */
  if(hdma->State != HAL_DMA_STATE_BUSY)
9000aca4:	f894 3035 	ldrb.w	r3, [r4, #53]	@ 0x35
9000aca8:	2b02      	cmp	r3, #2
9000acaa:	d162      	bne.n	9000ad72 <HAL_DMA_Abort+0xda>
    return HAL_ERROR;
  }
  else
  {
    /* Disable all the transfer interrupts */
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
9000acac:	6825      	ldr	r5, [r4, #0]
9000acae:	4606      	mov	r6, r0
9000acb0:	4ba2      	ldr	r3, [pc, #648]	@ (9000af3c <HAL_DMA_Abort+0x2a4>)
9000acb2:	429d      	cmp	r5, r3
9000acb4:	d064      	beq.n	9000ad80 <HAL_DMA_Abort+0xe8>
9000acb6:	3318      	adds	r3, #24
9000acb8:	429d      	cmp	r5, r3
9000acba:	d061      	beq.n	9000ad80 <HAL_DMA_Abort+0xe8>
9000acbc:	3318      	adds	r3, #24
9000acbe:	429d      	cmp	r5, r3
9000acc0:	f000 80f1 	beq.w	9000aea6 <HAL_DMA_Abort+0x20e>
9000acc4:	3318      	adds	r3, #24
9000acc6:	429d      	cmp	r5, r3
9000acc8:	f000 8118 	beq.w	9000aefc <HAL_DMA_Abort+0x264>
9000accc:	3318      	adds	r3, #24
9000acce:	429d      	cmp	r5, r3
9000acd0:	f000 8123 	beq.w	9000af1a <HAL_DMA_Abort+0x282>
9000acd4:	3318      	adds	r3, #24
9000acd6:	429d      	cmp	r5, r3
9000acd8:	f000 80fd 	beq.w	9000aed6 <HAL_DMA_Abort+0x23e>
9000acdc:	3318      	adds	r3, #24
9000acde:	429d      	cmp	r5, r3
9000ace0:	f000 8138 	beq.w	9000af54 <HAL_DMA_Abort+0x2bc>
9000ace4:	3318      	adds	r3, #24
9000ace6:	429d      	cmp	r5, r3
9000ace8:	f000 8147 	beq.w	9000af7a <HAL_DMA_Abort+0x2e2>
9000acec:	f503 7356 	add.w	r3, r3, #856	@ 0x358
9000acf0:	429d      	cmp	r5, r3
9000acf2:	f000 8155 	beq.w	9000afa0 <HAL_DMA_Abort+0x308>
9000acf6:	3318      	adds	r3, #24
9000acf8:	429d      	cmp	r5, r3
9000acfa:	f000 8160 	beq.w	9000afbe <HAL_DMA_Abort+0x326>
9000acfe:	3318      	adds	r3, #24
9000ad00:	429d      	cmp	r5, r3
9000ad02:	f000 816b 	beq.w	9000afdc <HAL_DMA_Abort+0x344>
9000ad06:	3318      	adds	r3, #24
9000ad08:	429d      	cmp	r5, r3
9000ad0a:	f000 8169 	beq.w	9000afe0 <HAL_DMA_Abort+0x348>
9000ad0e:	3318      	adds	r3, #24
9000ad10:	429d      	cmp	r5, r3
9000ad12:	f000 8167 	beq.w	9000afe4 <HAL_DMA_Abort+0x34c>
9000ad16:	3318      	adds	r3, #24
9000ad18:	429d      	cmp	r5, r3
9000ad1a:	f000 8165 	beq.w	9000afe8 <HAL_DMA_Abort+0x350>
9000ad1e:	3318      	adds	r3, #24
9000ad20:	429d      	cmp	r5, r3
9000ad22:	f000 8165 	beq.w	9000aff0 <HAL_DMA_Abort+0x358>
9000ad26:	3318      	adds	r3, #24
9000ad28:	429d      	cmp	r5, r3
9000ad2a:	f000 815f 	beq.w	9000afec <HAL_DMA_Abort+0x354>
      enableRegister = (__IO uint32_t *)(&(((DMA_Stream_TypeDef   *)hdma->Instance)->CR));
    }
    else /* BDMA channel */
    {
      /* Disable DMA All Interrupts */
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
9000ad2e:	682b      	ldr	r3, [r5, #0]

      enableRegister = (__IO uint32_t *)(&(((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR));
    }

    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
9000ad30:	4a83      	ldr	r2, [pc, #524]	@ (9000af40 <HAL_DMA_Abort+0x2a8>)
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
9000ad32:	f023 030e 	bic.w	r3, r3, #14
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
9000ad36:	4295      	cmp	r5, r2
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
9000ad38:	602b      	str	r3, [r5, #0]
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
9000ad3a:	d014      	beq.n	9000ad66 <HAL_DMA_Abort+0xce>
9000ad3c:	4b81      	ldr	r3, [pc, #516]	@ (9000af44 <HAL_DMA_Abort+0x2ac>)
9000ad3e:	429d      	cmp	r5, r3
9000ad40:	d011      	beq.n	9000ad66 <HAL_DMA_Abort+0xce>
9000ad42:	3314      	adds	r3, #20
9000ad44:	429d      	cmp	r5, r3
9000ad46:	d00e      	beq.n	9000ad66 <HAL_DMA_Abort+0xce>
9000ad48:	3314      	adds	r3, #20
9000ad4a:	429d      	cmp	r5, r3
9000ad4c:	d00b      	beq.n	9000ad66 <HAL_DMA_Abort+0xce>
9000ad4e:	3314      	adds	r3, #20
9000ad50:	429d      	cmp	r5, r3
9000ad52:	d008      	beq.n	9000ad66 <HAL_DMA_Abort+0xce>
9000ad54:	3314      	adds	r3, #20
9000ad56:	429d      	cmp	r5, r3
9000ad58:	d005      	beq.n	9000ad66 <HAL_DMA_Abort+0xce>
9000ad5a:	3314      	adds	r3, #20
9000ad5c:	429d      	cmp	r5, r3
9000ad5e:	d002      	beq.n	9000ad66 <HAL_DMA_Abort+0xce>
9000ad60:	3314      	adds	r3, #20
9000ad62:	429d      	cmp	r5, r3
9000ad64:	d119      	bne.n	9000ad9a <HAL_DMA_Abort+0x102>
    {
      /* disable the DMAMUX sync overrun IT */
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000ad66:	6e22      	ldr	r2, [r4, #96]	@ 0x60
9000ad68:	6813      	ldr	r3, [r2, #0]
9000ad6a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000ad6e:	6013      	str	r3, [r2, #0]
    }

    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
9000ad70:	e013      	b.n	9000ad9a <HAL_DMA_Abort+0x102>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
9000ad72:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hdma);
9000ad74:	2300      	movs	r3, #0
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
9000ad76:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hdma);
9000ad78:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
    return HAL_ERROR;
9000ad7c:	2001      	movs	r0, #1
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
  }

  return HAL_OK;
}
9000ad7e:	bd70      	pop	{r4, r5, r6, pc}
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
9000ad80:	682b      	ldr	r3, [r5, #0]
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000ad82:	6e22      	ldr	r2, [r4, #96]	@ 0x60
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
9000ad84:	f023 031e 	bic.w	r3, r3, #30
9000ad88:	602b      	str	r3, [r5, #0]
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
9000ad8a:	696b      	ldr	r3, [r5, #20]
9000ad8c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000ad90:	616b      	str	r3, [r5, #20]
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000ad92:	6813      	ldr	r3, [r2, #0]
9000ad94:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000ad98:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
9000ad9a:	682b      	ldr	r3, [r5, #0]
9000ad9c:	f023 0301 	bic.w	r3, r3, #1
9000ada0:	602b      	str	r3, [r5, #0]
9000ada2:	e005      	b.n	9000adb0 <HAL_DMA_Abort+0x118>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
9000ada4:	f7ff fe38 	bl	9000aa18 <HAL_GetTick>
9000ada8:	1b83      	subs	r3, r0, r6
9000adaa:	2b05      	cmp	r3, #5
9000adac:	f200 808a 	bhi.w	9000aec4 <HAL_DMA_Abort+0x22c>
    while(((*enableRegister) & DMA_SxCR_EN) != 0U)
9000adb0:	682b      	ldr	r3, [r5, #0]
9000adb2:	07db      	lsls	r3, r3, #31
9000adb4:	d4f6      	bmi.n	9000ada4 <HAL_DMA_Abort+0x10c>
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
9000adb6:	6823      	ldr	r3, [r4, #0]
9000adb8:	4960      	ldr	r1, [pc, #384]	@ (9000af3c <HAL_DMA_Abort+0x2a4>)
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
9000adba:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
9000adbc:	428b      	cmp	r3, r1
      regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
9000adbe:	6da0      	ldr	r0, [r4, #88]	@ 0x58
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
9000adc0:	f002 021f 	and.w	r2, r2, #31
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
9000adc4:	d05e      	beq.n	9000ae84 <HAL_DMA_Abort+0x1ec>
9000adc6:	3118      	adds	r1, #24
9000adc8:	428b      	cmp	r3, r1
9000adca:	d05b      	beq.n	9000ae84 <HAL_DMA_Abort+0x1ec>
9000adcc:	3118      	adds	r1, #24
9000adce:	428b      	cmp	r3, r1
9000add0:	d058      	beq.n	9000ae84 <HAL_DMA_Abort+0x1ec>
9000add2:	3118      	adds	r1, #24
9000add4:	428b      	cmp	r3, r1
9000add6:	d055      	beq.n	9000ae84 <HAL_DMA_Abort+0x1ec>
9000add8:	3118      	adds	r1, #24
9000adda:	428b      	cmp	r3, r1
9000addc:	d052      	beq.n	9000ae84 <HAL_DMA_Abort+0x1ec>
9000adde:	3118      	adds	r1, #24
9000ade0:	428b      	cmp	r3, r1
9000ade2:	d04f      	beq.n	9000ae84 <HAL_DMA_Abort+0x1ec>
9000ade4:	3118      	adds	r1, #24
9000ade6:	428b      	cmp	r3, r1
9000ade8:	d04c      	beq.n	9000ae84 <HAL_DMA_Abort+0x1ec>
9000adea:	3118      	adds	r1, #24
9000adec:	428b      	cmp	r3, r1
9000adee:	d049      	beq.n	9000ae84 <HAL_DMA_Abort+0x1ec>
9000adf0:	f501 7156 	add.w	r1, r1, #856	@ 0x358
9000adf4:	428b      	cmp	r3, r1
9000adf6:	d045      	beq.n	9000ae84 <HAL_DMA_Abort+0x1ec>
9000adf8:	3118      	adds	r1, #24
9000adfa:	428b      	cmp	r3, r1
9000adfc:	d042      	beq.n	9000ae84 <HAL_DMA_Abort+0x1ec>
9000adfe:	3118      	adds	r1, #24
9000ae00:	428b      	cmp	r3, r1
9000ae02:	d03f      	beq.n	9000ae84 <HAL_DMA_Abort+0x1ec>
9000ae04:	3118      	adds	r1, #24
9000ae06:	428b      	cmp	r3, r1
9000ae08:	d03c      	beq.n	9000ae84 <HAL_DMA_Abort+0x1ec>
9000ae0a:	3118      	adds	r1, #24
9000ae0c:	428b      	cmp	r3, r1
9000ae0e:	d039      	beq.n	9000ae84 <HAL_DMA_Abort+0x1ec>
9000ae10:	3118      	adds	r1, #24
9000ae12:	428b      	cmp	r3, r1
9000ae14:	d036      	beq.n	9000ae84 <HAL_DMA_Abort+0x1ec>
9000ae16:	3118      	adds	r1, #24
9000ae18:	428b      	cmp	r3, r1
9000ae1a:	d033      	beq.n	9000ae84 <HAL_DMA_Abort+0x1ec>
9000ae1c:	3118      	adds	r1, #24
9000ae1e:	428b      	cmp	r3, r1
9000ae20:	d030      	beq.n	9000ae84 <HAL_DMA_Abort+0x1ec>
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
9000ae22:	2101      	movs	r1, #1
9000ae24:	4091      	lsls	r1, r2
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
9000ae26:	4a47      	ldr	r2, [pc, #284]	@ (9000af44 <HAL_DMA_Abort+0x2ac>)
      regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
9000ae28:	6041      	str	r1, [r0, #4]
    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
9000ae2a:	4845      	ldr	r0, [pc, #276]	@ (9000af40 <HAL_DMA_Abort+0x2a8>)
9000ae2c:	4946      	ldr	r1, [pc, #280]	@ (9000af48 <HAL_DMA_Abort+0x2b0>)
9000ae2e:	4283      	cmp	r3, r0
9000ae30:	bf18      	it	ne
9000ae32:	4293      	cmpne	r3, r2
9000ae34:	f100 003c 	add.w	r0, r0, #60	@ 0x3c
9000ae38:	bf0c      	ite	eq
9000ae3a:	2201      	moveq	r2, #1
9000ae3c:	2200      	movne	r2, #0
9000ae3e:	428b      	cmp	r3, r1
9000ae40:	bf08      	it	eq
9000ae42:	f042 0201 	orreq.w	r2, r2, #1
9000ae46:	3128      	adds	r1, #40	@ 0x28
9000ae48:	4283      	cmp	r3, r0
9000ae4a:	bf08      	it	eq
9000ae4c:	f042 0201 	orreq.w	r2, r2, #1
9000ae50:	3028      	adds	r0, #40	@ 0x28
9000ae52:	428b      	cmp	r3, r1
9000ae54:	bf08      	it	eq
9000ae56:	f042 0201 	orreq.w	r2, r2, #1
9000ae5a:	3128      	adds	r1, #40	@ 0x28
9000ae5c:	4283      	cmp	r3, r0
9000ae5e:	bf08      	it	eq
9000ae60:	f042 0201 	orreq.w	r2, r2, #1
9000ae64:	428b      	cmp	r3, r1
9000ae66:	bf08      	it	eq
9000ae68:	f042 0201 	orreq.w	r2, r2, #1
9000ae6c:	b96a      	cbnz	r2, 9000ae8a <HAL_DMA_Abort+0x1f2>
9000ae6e:	4a37      	ldr	r2, [pc, #220]	@ (9000af4c <HAL_DMA_Abort+0x2b4>)
9000ae70:	4293      	cmp	r3, r2
9000ae72:	d00a      	beq.n	9000ae8a <HAL_DMA_Abort+0x1f2>
    __HAL_UNLOCK(hdma);
9000ae74:	2300      	movs	r3, #0
    hdma->State = HAL_DMA_STATE_READY;
9000ae76:	2201      	movs	r2, #1
  return HAL_OK;
9000ae78:	4618      	mov	r0, r3
    hdma->State = HAL_DMA_STATE_READY;
9000ae7a:	f884 2035 	strb.w	r2, [r4, #53]	@ 0x35
    __HAL_UNLOCK(hdma);
9000ae7e:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
}
9000ae82:	bd70      	pop	{r4, r5, r6, pc}
      regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
9000ae84:	233f      	movs	r3, #63	@ 0x3f
9000ae86:	4093      	lsls	r3, r2
9000ae88:	6083      	str	r3, [r0, #8]
      if(hdma->DMAmuxRequestGen != 0U)
9000ae8a:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
      hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
9000ae8c:	e9d4 2119 	ldrd	r2, r1, [r4, #100]	@ 0x64
9000ae90:	6051      	str	r1, [r2, #4]
      if(hdma->DMAmuxRequestGen != 0U)
9000ae92:	2b00      	cmp	r3, #0
9000ae94:	d0ee      	beq.n	9000ae74 <HAL_DMA_Abort+0x1dc>
        hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
9000ae96:	681a      	ldr	r2, [r3, #0]
        hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
9000ae98:	e9d4 101c 	ldrd	r1, r0, [r4, #112]	@ 0x70
        hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
9000ae9c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000aea0:	601a      	str	r2, [r3, #0]
        hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
9000aea2:	6048      	str	r0, [r1, #4]
9000aea4:	e7e6      	b.n	9000ae74 <HAL_DMA_Abort+0x1dc>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
9000aea6:	4b2a      	ldr	r3, [pc, #168]	@ (9000af50 <HAL_DMA_Abort+0x2b8>)
9000aea8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
9000aeaa:	f022 021e 	bic.w	r2, r2, #30
9000aeae:	641a      	str	r2, [r3, #64]	@ 0x40
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
9000aeb0:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
9000aeb2:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000aeb6:	655a      	str	r2, [r3, #84]	@ 0x54
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000aeb8:	6e22      	ldr	r2, [r4, #96]	@ 0x60
9000aeba:	6813      	ldr	r3, [r2, #0]
9000aebc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000aec0:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
9000aec2:	e76a      	b.n	9000ad9a <HAL_DMA_Abort+0x102>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
9000aec4:	2120      	movs	r1, #32
        hdma->State = HAL_DMA_STATE_ERROR;
9000aec6:	2203      	movs	r2, #3
        __HAL_UNLOCK(hdma);
9000aec8:	2300      	movs	r3, #0
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
9000aeca:	6561      	str	r1, [r4, #84]	@ 0x54
        __HAL_UNLOCK(hdma);
9000aecc:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
        hdma->State = HAL_DMA_STATE_ERROR;
9000aed0:	f884 2035 	strb.w	r2, [r4, #53]	@ 0x35
        return HAL_ERROR;
9000aed4:	e752      	b.n	9000ad7c <HAL_DMA_Abort+0xe4>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
9000aed6:	4b1e      	ldr	r3, [pc, #120]	@ (9000af50 <HAL_DMA_Abort+0x2b8>)
9000aed8:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
9000aedc:	f022 021e 	bic.w	r2, r2, #30
9000aee0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
9000aee4:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
9000aee8:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000aeec:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000aef0:	6e22      	ldr	r2, [r4, #96]	@ 0x60
9000aef2:	6813      	ldr	r3, [r2, #0]
9000aef4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000aef8:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
9000aefa:	e74e      	b.n	9000ad9a <HAL_DMA_Abort+0x102>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
9000aefc:	4b14      	ldr	r3, [pc, #80]	@ (9000af50 <HAL_DMA_Abort+0x2b8>)
9000aefe:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
9000af00:	f022 021e 	bic.w	r2, r2, #30
9000af04:	659a      	str	r2, [r3, #88]	@ 0x58
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
9000af06:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
9000af08:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000af0c:	66da      	str	r2, [r3, #108]	@ 0x6c
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000af0e:	6e22      	ldr	r2, [r4, #96]	@ 0x60
9000af10:	6813      	ldr	r3, [r2, #0]
9000af12:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000af16:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
9000af18:	e73f      	b.n	9000ad9a <HAL_DMA_Abort+0x102>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
9000af1a:	4b0d      	ldr	r3, [pc, #52]	@ (9000af50 <HAL_DMA_Abort+0x2b8>)
9000af1c:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000af1e:	f022 021e 	bic.w	r2, r2, #30
9000af22:	671a      	str	r2, [r3, #112]	@ 0x70
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
9000af24:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
9000af28:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000af2c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000af30:	6e22      	ldr	r2, [r4, #96]	@ 0x60
9000af32:	6813      	ldr	r3, [r2, #0]
9000af34:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000af38:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
9000af3a:	e72e      	b.n	9000ad9a <HAL_DMA_Abort+0x102>
9000af3c:	40020010 	.word	0x40020010
9000af40:	58025408 	.word	0x58025408
9000af44:	5802541c 	.word	0x5802541c
9000af48:	58025430 	.word	0x58025430
9000af4c:	58025494 	.word	0x58025494
9000af50:	40020000 	.word	0x40020000
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
9000af54:	4b27      	ldr	r3, [pc, #156]	@ (9000aff4 <HAL_DMA_Abort+0x35c>)
9000af56:	f8d3 20a0 	ldr.w	r2, [r3, #160]	@ 0xa0
9000af5a:	f022 021e 	bic.w	r2, r2, #30
9000af5e:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
9000af62:	f8d3 20b4 	ldr.w	r2, [r3, #180]	@ 0xb4
9000af66:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000af6a:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000af6e:	6e22      	ldr	r2, [r4, #96]	@ 0x60
9000af70:	6813      	ldr	r3, [r2, #0]
9000af72:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000af76:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
9000af78:	e70f      	b.n	9000ad9a <HAL_DMA_Abort+0x102>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
9000af7a:	4b1e      	ldr	r3, [pc, #120]	@ (9000aff4 <HAL_DMA_Abort+0x35c>)
9000af7c:	f8d3 20b8 	ldr.w	r2, [r3, #184]	@ 0xb8
9000af80:	f022 021e 	bic.w	r2, r2, #30
9000af84:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
9000af88:	f8d3 20cc 	ldr.w	r2, [r3, #204]	@ 0xcc
9000af8c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000af90:	f8c3 20cc 	str.w	r2, [r3, #204]	@ 0xcc
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000af94:	6e22      	ldr	r2, [r4, #96]	@ 0x60
9000af96:	6813      	ldr	r3, [r2, #0]
9000af98:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000af9c:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
9000af9e:	e6fc      	b.n	9000ad9a <HAL_DMA_Abort+0x102>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
9000afa0:	4b15      	ldr	r3, [pc, #84]	@ (9000aff8 <HAL_DMA_Abort+0x360>)
9000afa2:	691a      	ldr	r2, [r3, #16]
9000afa4:	f022 021e 	bic.w	r2, r2, #30
9000afa8:	611a      	str	r2, [r3, #16]
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
9000afaa:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000afac:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000afb0:	625a      	str	r2, [r3, #36]	@ 0x24
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000afb2:	6e22      	ldr	r2, [r4, #96]	@ 0x60
9000afb4:	6813      	ldr	r3, [r2, #0]
9000afb6:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000afba:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
9000afbc:	e6ed      	b.n	9000ad9a <HAL_DMA_Abort+0x102>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
9000afbe:	4b0e      	ldr	r3, [pc, #56]	@ (9000aff8 <HAL_DMA_Abort+0x360>)
9000afc0:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000afc2:	f022 021e 	bic.w	r2, r2, #30
9000afc6:	629a      	str	r2, [r3, #40]	@ 0x28
      ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
9000afc8:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9000afca:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000afce:	63da      	str	r2, [r3, #60]	@ 0x3c
      hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000afd0:	6e22      	ldr	r2, [r4, #96]	@ 0x60
9000afd2:	6813      	ldr	r3, [r2, #0]
9000afd4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000afd8:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
9000afda:	e6de      	b.n	9000ad9a <HAL_DMA_Abort+0x102>
      ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT);
9000afdc:	4b06      	ldr	r3, [pc, #24]	@ (9000aff8 <HAL_DMA_Abort+0x360>)
9000afde:	e763      	b.n	9000aea8 <HAL_DMA_Abort+0x210>
9000afe0:	4b05      	ldr	r3, [pc, #20]	@ (9000aff8 <HAL_DMA_Abort+0x360>)
9000afe2:	e78c      	b.n	9000aefe <HAL_DMA_Abort+0x266>
9000afe4:	4b04      	ldr	r3, [pc, #16]	@ (9000aff8 <HAL_DMA_Abort+0x360>)
9000afe6:	e799      	b.n	9000af1c <HAL_DMA_Abort+0x284>
9000afe8:	4b03      	ldr	r3, [pc, #12]	@ (9000aff8 <HAL_DMA_Abort+0x360>)
9000afea:	e775      	b.n	9000aed8 <HAL_DMA_Abort+0x240>
9000afec:	4b02      	ldr	r3, [pc, #8]	@ (9000aff8 <HAL_DMA_Abort+0x360>)
9000afee:	e7c5      	b.n	9000af7c <HAL_DMA_Abort+0x2e4>
9000aff0:	4b01      	ldr	r3, [pc, #4]	@ (9000aff8 <HAL_DMA_Abort+0x360>)
9000aff2:	e7b0      	b.n	9000af56 <HAL_DMA_Abort+0x2be>
9000aff4:	40020000 	.word	0x40020000
9000aff8:	40020400 	.word	0x40020400

9000affc <HAL_DMA_Abort_IT>:
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
9000affc:	2800      	cmp	r0, #0
9000affe:	f000 8096 	beq.w	9000b12e <HAL_DMA_Abort_IT+0x132>
{
9000b002:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if(hdma->State != HAL_DMA_STATE_BUSY)
9000b004:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
9000b008:	2b02      	cmp	r3, #2
9000b00a:	f040 8083 	bne.w	9000b114 <HAL_DMA_Abort_IT+0x118>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
    return HAL_ERROR;
  }
  else
  {
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
9000b00e:	6803      	ldr	r3, [r0, #0]
9000b010:	4a48      	ldr	r2, [pc, #288]	@ (9000b134 <HAL_DMA_Abort_IT+0x138>)
9000b012:	4293      	cmp	r3, r2
9000b014:	f000 8082 	beq.w	9000b11c <HAL_DMA_Abort_IT+0x120>
9000b018:	3218      	adds	r2, #24
9000b01a:	4293      	cmp	r3, r2
9000b01c:	d07e      	beq.n	9000b11c <HAL_DMA_Abort_IT+0x120>
9000b01e:	3218      	adds	r2, #24
9000b020:	4293      	cmp	r3, r2
9000b022:	d07b      	beq.n	9000b11c <HAL_DMA_Abort_IT+0x120>
9000b024:	3218      	adds	r2, #24
9000b026:	4293      	cmp	r3, r2
9000b028:	d078      	beq.n	9000b11c <HAL_DMA_Abort_IT+0x120>
9000b02a:	3218      	adds	r2, #24
9000b02c:	4293      	cmp	r3, r2
9000b02e:	d075      	beq.n	9000b11c <HAL_DMA_Abort_IT+0x120>
9000b030:	3218      	adds	r2, #24
9000b032:	4293      	cmp	r3, r2
9000b034:	d072      	beq.n	9000b11c <HAL_DMA_Abort_IT+0x120>
9000b036:	3218      	adds	r2, #24
9000b038:	4293      	cmp	r3, r2
9000b03a:	d06f      	beq.n	9000b11c <HAL_DMA_Abort_IT+0x120>
9000b03c:	3218      	adds	r2, #24
9000b03e:	4293      	cmp	r3, r2
9000b040:	d06c      	beq.n	9000b11c <HAL_DMA_Abort_IT+0x120>
9000b042:	f502 7256 	add.w	r2, r2, #856	@ 0x358
9000b046:	4293      	cmp	r3, r2
9000b048:	d068      	beq.n	9000b11c <HAL_DMA_Abort_IT+0x120>
9000b04a:	3218      	adds	r2, #24
9000b04c:	4293      	cmp	r3, r2
9000b04e:	d065      	beq.n	9000b11c <HAL_DMA_Abort_IT+0x120>
9000b050:	3218      	adds	r2, #24
9000b052:	4293      	cmp	r3, r2
9000b054:	d062      	beq.n	9000b11c <HAL_DMA_Abort_IT+0x120>
9000b056:	3218      	adds	r2, #24
9000b058:	4293      	cmp	r3, r2
9000b05a:	d05f      	beq.n	9000b11c <HAL_DMA_Abort_IT+0x120>
9000b05c:	3218      	adds	r2, #24
9000b05e:	4293      	cmp	r3, r2
9000b060:	d05c      	beq.n	9000b11c <HAL_DMA_Abort_IT+0x120>
9000b062:	3218      	adds	r2, #24
9000b064:	4293      	cmp	r3, r2
9000b066:	d059      	beq.n	9000b11c <HAL_DMA_Abort_IT+0x120>
9000b068:	3218      	adds	r2, #24
9000b06a:	4293      	cmp	r3, r2
9000b06c:	d056      	beq.n	9000b11c <HAL_DMA_Abort_IT+0x120>
9000b06e:	3218      	adds	r2, #24
9000b070:	4293      	cmp	r3, r2
9000b072:	d053      	beq.n	9000b11c <HAL_DMA_Abort_IT+0x120>
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);

      /* Disable the channel */
      __HAL_DMA_DISABLE(hdma);

      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
9000b074:	4a30      	ldr	r2, [pc, #192]	@ (9000b138 <HAL_DMA_Abort_IT+0x13c>)
9000b076:	4d31      	ldr	r5, [pc, #196]	@ (9000b13c <HAL_DMA_Abort_IT+0x140>)
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
9000b078:	6819      	ldr	r1, [r3, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
9000b07a:	42ab      	cmp	r3, r5
9000b07c:	bf18      	it	ne
9000b07e:	4293      	cmpne	r3, r2
9000b080:	4c2f      	ldr	r4, [pc, #188]	@ (9000b140 <HAL_DMA_Abort_IT+0x144>)
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
9000b082:	f021 010e 	bic.w	r1, r1, #14
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
9000b086:	f105 053c 	add.w	r5, r5, #60	@ 0x3c
9000b08a:	bf0c      	ite	eq
9000b08c:	2201      	moveq	r2, #1
9000b08e:	2200      	movne	r2, #0
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
9000b090:	6019      	str	r1, [r3, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
9000b092:	42a3      	cmp	r3, r4
9000b094:	bf08      	it	eq
9000b096:	f042 0201 	orreq.w	r2, r2, #1
      __HAL_DMA_DISABLE(hdma);
9000b09a:	6819      	ldr	r1, [r3, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
9000b09c:	3428      	adds	r4, #40	@ 0x28
9000b09e:	42ab      	cmp	r3, r5
9000b0a0:	bf08      	it	eq
9000b0a2:	f042 0201 	orreq.w	r2, r2, #1
      __HAL_DMA_DISABLE(hdma);
9000b0a6:	f021 0101 	bic.w	r1, r1, #1
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
9000b0aa:	42a3      	cmp	r3, r4
9000b0ac:	bf08      	it	eq
9000b0ae:	f042 0201 	orreq.w	r2, r2, #1
9000b0b2:	3414      	adds	r4, #20
      __HAL_DMA_DISABLE(hdma);
9000b0b4:	6019      	str	r1, [r3, #0]
      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
9000b0b6:	42a3      	cmp	r3, r4
9000b0b8:	bf08      	it	eq
9000b0ba:	f042 0201 	orreq.w	r2, r2, #1
9000b0be:	4921      	ldr	r1, [pc, #132]	@ (9000b144 <HAL_DMA_Abort_IT+0x148>)
9000b0c0:	428b      	cmp	r3, r1
9000b0c2:	bf08      	it	eq
9000b0c4:	f042 0201 	orreq.w	r2, r2, #1
9000b0c8:	b912      	cbnz	r2, 9000b0d0 <HAL_DMA_Abort_IT+0xd4>
9000b0ca:	4a1f      	ldr	r2, [pc, #124]	@ (9000b148 <HAL_DMA_Abort_IT+0x14c>)
9000b0cc:	4293      	cmp	r3, r2
9000b0ce:	d117      	bne.n	9000b100 <HAL_DMA_Abort_IT+0x104>
        /* disable the DMAMUX sync overrun IT */
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;

        /* Clear all flags */
        regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
9000b0d0:	2301      	movs	r3, #1
        regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
9000b0d2:	6d84      	ldr	r4, [r0, #88]	@ 0x58
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
9000b0d4:	e9d0 1517 	ldrd	r1, r5, [r0, #92]	@ 0x5c
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000b0d8:	682a      	ldr	r2, [r5, #0]
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
9000b0da:	f001 011f 	and.w	r1, r1, #31
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000b0de:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
9000b0e2:	408b      	lsls	r3, r1
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
9000b0e4:	602a      	str	r2, [r5, #0]
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
9000b0e6:	6063      	str	r3, [r4, #4]

        /* Clear the DMAMUX synchro overrun flag */
        hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;

        if(hdma->DMAmuxRequestGen != 0U)
9000b0e8:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
        hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
9000b0ea:	e9d0 2119 	ldrd	r2, r1, [r0, #100]	@ 0x64
9000b0ee:	6051      	str	r1, [r2, #4]
        if(hdma->DMAmuxRequestGen != 0U)
9000b0f0:	b133      	cbz	r3, 9000b100 <HAL_DMA_Abort_IT+0x104>
        {
          /* if using DMAMUX request generator, disable the DMAMUX request generator overrun IT*/
          /* disable the request gen overrun IT */
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
9000b0f2:	681a      	ldr	r2, [r3, #0]

          /* Clear the DMAMUX request generator overrun flag */
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
9000b0f4:	e9d0 141c 	ldrd	r1, r4, [r0, #112]	@ 0x70
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
9000b0f8:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000b0fc:	601a      	str	r2, [r3, #0]
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
9000b0fe:	604c      	str	r4, [r1, #4]
        }
      }

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
9000b100:	2101      	movs	r1, #1

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
9000b102:	2200      	movs	r2, #0

      /* Call User Abort callback */
      if(hdma->XferAbortCallback != NULL)
9000b104:	6d03      	ldr	r3, [r0, #80]	@ 0x50
      hdma->State = HAL_DMA_STATE_READY;
9000b106:	f880 1035 	strb.w	r1, [r0, #53]	@ 0x35
      __HAL_UNLOCK(hdma);
9000b10a:	f880 2034 	strb.w	r2, [r0, #52]	@ 0x34
      if(hdma->XferAbortCallback != NULL)
9000b10e:	b163      	cbz	r3, 9000b12a <HAL_DMA_Abort_IT+0x12e>
      {
        hdma->XferAbortCallback(hdma);
9000b110:	4798      	blx	r3
9000b112:	e00a      	b.n	9000b12a <HAL_DMA_Abort_IT+0x12e>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
9000b114:	2380      	movs	r3, #128	@ 0x80
9000b116:	6543      	str	r3, [r0, #84]	@ 0x54
    return HAL_ERROR;
9000b118:	2001      	movs	r0, #1
      }
    }
  }

  return HAL_OK;
}
9000b11a:	bd38      	pop	{r3, r4, r5, pc}
      hdma->State = HAL_DMA_STATE_ABORT;
9000b11c:	2204      	movs	r2, #4
9000b11e:	f880 2035 	strb.w	r2, [r0, #53]	@ 0x35
      __HAL_DMA_DISABLE(hdma);
9000b122:	681a      	ldr	r2, [r3, #0]
9000b124:	f022 0201 	bic.w	r2, r2, #1
9000b128:	601a      	str	r2, [r3, #0]
  return HAL_OK;
9000b12a:	2000      	movs	r0, #0
}
9000b12c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000b12e:	2001      	movs	r0, #1
}
9000b130:	4770      	bx	lr
9000b132:	bf00      	nop
9000b134:	40020010 	.word	0x40020010
9000b138:	5802541c 	.word	0x5802541c
9000b13c:	58025408 	.word	0x58025408
9000b140:	58025430 	.word	0x58025430
9000b144:	58025480 	.word	0x58025480
9000b148:	58025494 	.word	0x58025494

9000b14c <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
9000b14c:	2800      	cmp	r0, #0
9000b14e:	d035      	beq.n	9000b1bc <HAL_DMA2D_Init+0x70>
{
9000b150:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
9000b152:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
9000b156:	4604      	mov	r4, r0
9000b158:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000b15c:	b34b      	cbz	r3, 9000b1b2 <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000b15e:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000b160:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000b162:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000b164:	f884 0061 	strb.w	r0, [r4, #97]	@ 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000b168:	69e1      	ldr	r1, [r4, #28]
9000b16a:	681d      	ldr	r5, [r3, #0]
9000b16c:	4814      	ldr	r0, [pc, #80]	@ (9000b1c0 <HAL_DMA2D_Init+0x74>)
9000b16e:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000b170:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000b172:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000b174:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000b176:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000b178:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000b17a:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000b17c:	4302      	orrs	r2, r0
9000b17e:	6b59      	ldr	r1, [r3, #52]	@ 0x34
9000b180:	4810      	ldr	r0, [pc, #64]	@ (9000b1c4 <HAL_DMA2D_Init+0x78>)
9000b182:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000b184:	4910      	ldr	r1, [pc, #64]	@ (9000b1c8 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000b186:	4302      	orrs	r2, r0
9000b188:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000b18a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
9000b18c:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000b18e:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000b192:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000b194:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000b196:	6419      	str	r1, [r3, #64]	@ 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000b198:	6b59      	ldr	r1, [r3, #52]	@ 0x34
9000b19a:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000b19e:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000b1a0:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000b1a4:	430a      	orrs	r2, r1
9000b1a6:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
9000b1a8:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000b1aa:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
9000b1ac:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
9000b1b0:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
9000b1b2:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    HAL_DMA2D_MspInit(hdma2d);
9000b1b6:	f7f6 f89b 	bl	900012f0 <HAL_DMA2D_MspInit>
9000b1ba:	e7d0      	b.n	9000b15e <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
9000b1bc:	2001      	movs	r0, #1
}
9000b1be:	4770      	bx	lr
9000b1c0:	fff8ffbf 	.word	0xfff8ffbf
9000b1c4:	fffffef8 	.word	0xfffffef8
9000b1c8:	ffff0000 	.word	0xffff0000

9000b1cc <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
9000b1cc:	4770      	bx	lr
9000b1ce:	bf00      	nop

9000b1d0 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
9000b1d0:	4770      	bx	lr
9000b1d2:	bf00      	nop

9000b1d4 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000b1d4:	6803      	ldr	r3, [r0, #0]
{
9000b1d6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000b1d8:	685d      	ldr	r5, [r3, #4]
{
9000b1da:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
9000b1dc:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
9000b1de:	07ea      	lsls	r2, r5, #31
9000b1e0:	d501      	bpl.n	9000b1e6 <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
9000b1e2:	05f1      	lsls	r1, r6, #23
9000b1e4:	d456      	bmi.n	9000b294 <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
9000b1e6:	06aa      	lsls	r2, r5, #26
9000b1e8:	d501      	bpl.n	9000b1ee <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
9000b1ea:	04b3      	lsls	r3, r6, #18
9000b1ec:	d43b      	bmi.n	9000b266 <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
9000b1ee:	0728      	lsls	r0, r5, #28
9000b1f0:	d501      	bpl.n	9000b1f6 <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
9000b1f2:	0531      	lsls	r1, r6, #20
9000b1f4:	d421      	bmi.n	9000b23a <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
9000b1f6:	076a      	lsls	r2, r5, #29
9000b1f8:	d501      	bpl.n	9000b1fe <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
9000b1fa:	0573      	lsls	r3, r6, #21
9000b1fc:	d472      	bmi.n	9000b2e4 <HAL_DMA2D_IRQHandler+0x110>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
9000b1fe:	07a8      	lsls	r0, r5, #30
9000b200:	d501      	bpl.n	9000b206 <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
9000b202:	05b1      	lsls	r1, r6, #22
9000b204:	d404      	bmi.n	9000b210 <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
9000b206:	06ea      	lsls	r2, r5, #27
9000b208:	d501      	bpl.n	9000b20e <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
9000b20a:	04f3      	lsls	r3, r6, #19
9000b20c:	d457      	bmi.n	9000b2be <HAL_DMA2D_IRQHandler+0xea>
}
9000b20e:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
9000b210:	6823      	ldr	r3, [r4, #0]
9000b212:	681a      	ldr	r2, [r3, #0]
9000b214:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
9000b218:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
9000b21a:	2202      	movs	r2, #2
9000b21c:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000b21e:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000b220:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9000b222:	6663      	str	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
9000b224:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000b226:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
9000b22a:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
9000b22e:	6a23      	ldr	r3, [r4, #32]
9000b230:	2b00      	cmp	r3, #0
9000b232:	d0e8      	beq.n	9000b206 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
9000b234:	4620      	mov	r0, r4
9000b236:	4798      	blx	r3
9000b238:	e7e5      	b.n	9000b206 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
9000b23a:	6823      	ldr	r3, [r4, #0]
9000b23c:	681a      	ldr	r2, [r3, #0]
9000b23e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
9000b242:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
9000b244:	2208      	movs	r2, #8
9000b246:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000b248:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
9000b24a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9000b24c:	4313      	orrs	r3, r2
9000b24e:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000b250:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
9000b254:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000b256:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
9000b258:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000b25c:	2b00      	cmp	r3, #0
9000b25e:	d0ca      	beq.n	9000b1f6 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
9000b260:	4620      	mov	r0, r4
9000b262:	4798      	blx	r3
9000b264:	e7c7      	b.n	9000b1f6 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
9000b266:	6823      	ldr	r3, [r4, #0]
9000b268:	681a      	ldr	r2, [r3, #0]
9000b26a:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
9000b26e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
9000b270:	2220      	movs	r2, #32
9000b272:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000b274:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
9000b276:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9000b278:	f043 0302 	orr.w	r3, r3, #2
9000b27c:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000b27e:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
9000b282:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000b284:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
9000b286:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000b28a:	2b00      	cmp	r3, #0
9000b28c:	d0af      	beq.n	9000b1ee <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
9000b28e:	4620      	mov	r0, r4
9000b290:	4798      	blx	r3
9000b292:	e7ac      	b.n	9000b1ee <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
9000b294:	681a      	ldr	r2, [r3, #0]
9000b296:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000b29a:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
9000b29c:	6e42      	ldr	r2, [r0, #100]	@ 0x64
9000b29e:	f042 0201 	orr.w	r2, r2, #1
9000b2a2:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
9000b2a4:	2201      	movs	r2, #1
9000b2a6:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000b2a8:	2304      	movs	r3, #4
9000b2aa:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
9000b2ae:	2300      	movs	r3, #0
9000b2b0:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000b2b4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9000b2b6:	2b00      	cmp	r3, #0
9000b2b8:	d095      	beq.n	9000b1e6 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
9000b2ba:	4798      	blx	r3
9000b2bc:	e793      	b.n	9000b1e6 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000b2be:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
9000b2c0:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000b2c2:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
9000b2c4:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000b2c6:	681a      	ldr	r2, [r3, #0]
9000b2c8:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
9000b2cc:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
9000b2ce:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000b2d0:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000b2d2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
9000b2d4:	f884 5060 	strb.w	r5, [r4, #96]	@ 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000b2d8:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000b2da:	f884 1061 	strb.w	r1, [r4, #97]	@ 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000b2de:	f7ff ff77 	bl	9000b1d0 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
9000b2e2:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000b2e4:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000b2e6:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000b2e8:	681a      	ldr	r2, [r3, #0]
9000b2ea:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
9000b2ee:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
9000b2f0:	2204      	movs	r2, #4
9000b2f2:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000b2f4:	f7ff ff6a 	bl	9000b1cc <HAL_DMA2D_LineEventCallback>
9000b2f8:	e781      	b.n	9000b1fe <HAL_DMA2D_IRQHandler+0x2a>
9000b2fa:	bf00      	nop

9000b2fc <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
9000b2fc:	f890 2060 	ldrb.w	r2, [r0, #96]	@ 0x60
9000b300:	2a01      	cmp	r2, #1
9000b302:	d05f      	beq.n	9000b3c4 <HAL_DMA2D_ConfigLayer+0xc8>
9000b304:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000b306:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000b30a:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000b30c:	ea4f 0cc1 	mov.w	ip, r1, lsl #3
9000b310:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
9000b314:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
9000b316:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000b318:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61
  __HAL_LOCK(hdma2d);
9000b31c:	f883 4060 	strb.w	r4, [r3, #96]	@ 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000b320:	6b82      	ldr	r2, [r0, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000b322:	6b04      	ldr	r4, [r0, #48]	@ 0x30
9000b324:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000b326:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
9000b328:	6b46      	ldr	r6, [r0, #52]	@ 0x34
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000b32a:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000b32e:	f1a5 0e09 	sub.w	lr, r5, #9
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000b332:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000b334:	432a      	orrs	r2, r5
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000b336:	f1be 0f01 	cmp.w	lr, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000b33a:	ea42 5244 	orr.w	r2, r2, r4, lsl #21

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000b33e:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000b340:	d923      	bls.n	9000b38a <HAL_DMA2D_ConfigLayer+0x8e>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
9000b342:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000b346:	b971      	cbnz	r1, 9000b366 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000b348:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000b34a:	491f      	ldr	r1, [pc, #124]	@ (9000b3c8 <HAL_DMA2D_ConfigLayer+0xcc>)
9000b34c:	4001      	ands	r1, r0

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000b34e:	6a98      	ldr	r0, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000b350:	4311      	orrs	r1, r2
9000b352:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000b354:	61a0      	str	r0, [r4, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
9000b356:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000b358:	2101      	movs	r1, #1

  return HAL_OK;
9000b35a:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000b35c:	f883 1061 	strb.w	r1, [r3, #97]	@ 0x61
  __HAL_UNLOCK(hdma2d);
9000b360:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
}
9000b364:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000b366:	2d0b      	cmp	r5, #11
9000b368:	d12a      	bne.n	9000b3c0 <HAL_DMA2D_ConfigLayer+0xc4>
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
9000b36a:	6c00      	ldr	r0, [r0, #64]	@ 0x40
9000b36c:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
9000b370:	4816      	ldr	r0, [pc, #88]	@ (9000b3cc <HAL_DMA2D_ConfigLayer+0xd0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000b372:	ebac 0c01 	sub.w	ip, ip, r1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000b376:	69e1      	ldr	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000b378:	eb03 0c8c 	add.w	ip, r3, ip, lsl #2
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000b37c:	4001      	ands	r1, r0
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000b37e:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000b382:	430a      	orrs	r2, r1
9000b384:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000b386:	6125      	str	r5, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000b388:	e7e5      	b.n	9000b356 <HAL_DMA2D_ConfigLayer+0x5a>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
9000b38a:	f006 457f 	and.w	r5, r6, #4278190080	@ 0xff000000
9000b38e:	432a      	orrs	r2, r5
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000b390:	b959      	cbnz	r1, 9000b3aa <HAL_DMA2D_ConfigLayer+0xae>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000b392:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000b394:	490c      	ldr	r1, [pc, #48]	@ (9000b3c8 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000b396:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000b398:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000b39a:	6b58      	ldr	r0, [r3, #52]	@ 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000b39c:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000b39e:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000b3a2:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000b3a4:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000b3a6:	62a0      	str	r0, [r4, #40]	@ 0x28
9000b3a8:	e7d5      	b.n	9000b356 <HAL_DMA2D_ConfigLayer+0x5a>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000b3aa:	69e5      	ldr	r5, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
9000b3ac:	f026 467f 	bic.w	r6, r6, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000b3b0:	4905      	ldr	r1, [pc, #20]	@ (9000b3c8 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000b3b2:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000b3b4:	4029      	ands	r1, r5
9000b3b6:	4311      	orrs	r1, r2
9000b3b8:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000b3ba:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
9000b3bc:	6226      	str	r6, [r4, #32]
9000b3be:	e7ca      	b.n	9000b356 <HAL_DMA2D_ConfigLayer+0x5a>
9000b3c0:	4801      	ldr	r0, [pc, #4]	@ (9000b3c8 <HAL_DMA2D_ConfigLayer+0xcc>)
9000b3c2:	e7d6      	b.n	9000b372 <HAL_DMA2D_ConfigLayer+0x76>
  __HAL_LOCK(hdma2d);
9000b3c4:	2002      	movs	r0, #2
}
9000b3c6:	4770      	bx	lr
9000b3c8:	00ccfff0 	.word	0x00ccfff0
9000b3cc:	00c0fff0 	.word	0x00c0fff0

9000b3d0 <HAL_FDCAN_GetRxMessage>:
  * @param  pRxHeader pointer to a FDCAN_RxHeaderTypeDef structure.
  * @param  pRxData pointer to a buffer where the payload of the Rx frame will be stored.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_FDCAN_GetRxMessage(FDCAN_HandleTypeDef *hfdcan, uint32_t RxLocation, FDCAN_RxHeaderTypeDef *pRxHeader, uint8_t *pRxData)
{
9000b3d0:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t *RxAddress;
  uint8_t  *pData;
  uint32_t ByteCounter;
  uint32_t GetIndex = 0;
  HAL_FDCAN_StateTypeDef state = hfdcan->State;
9000b3d2:	f890 4098 	ldrb.w	r4, [r0, #152]	@ 0x98

  if (state == HAL_FDCAN_STATE_BUSY)
9000b3d6:	2c02      	cmp	r4, #2
9000b3d8:	d15f      	bne.n	9000b49a <HAL_FDCAN_GetRxMessage+0xca>
  {
    if (RxLocation == FDCAN_RX_FIFO0) /* Rx element is assigned to the Rx FIFO 0 */
9000b3da:	2940      	cmp	r1, #64	@ 0x40
9000b3dc:	d064      	beq.n	9000b4a8 <HAL_FDCAN_GetRxMessage+0xd8>

        /* Calculate Rx FIFO 0 element address */
        RxAddress = (uint32_t *)(hfdcan->msgRam.RxFIFO0SA + (GetIndex * hfdcan->Init.RxFifo0ElmtSize * 4U));
      }
    }
    else if (RxLocation == FDCAN_RX_FIFO1) /* Rx element is assigned to the Rx FIFO 1 */
9000b3de:	2941      	cmp	r1, #65	@ 0x41
9000b3e0:	d07d      	beq.n	9000b4de <HAL_FDCAN_GetRxMessage+0x10e>
      }
    }
    else /* Rx element is assigned to a dedicated Rx buffer */
    {
      /* Check that the selected buffer has an allocated area into the RAM */
      if (RxLocation >= hfdcan->Init.RxBuffersNbr)
9000b3e2:	6d04      	ldr	r4, [r0, #80]	@ 0x50
9000b3e4:	428c      	cmp	r4, r1
9000b3e6:	d950      	bls.n	9000b48a <HAL_FDCAN_GetRxMessage+0xba>
        return HAL_ERROR;
      }
      else
      {
        /* Calculate Rx buffer address */
        RxAddress = (uint32_t *)(hfdcan->msgRam.RxBufferSA + (RxLocation * hfdcan->Init.RxBufferSize * 4U));
9000b3e8:	6d44      	ldr	r4, [r0, #84]	@ 0x54
  uint32_t GetIndex = 0;
9000b3ea:	2700      	movs	r7, #0
        RxAddress = (uint32_t *)(hfdcan->msgRam.RxBufferSA + (RxLocation * hfdcan->Init.RxBufferSize * 4U));
9000b3ec:	6fc5      	ldr	r5, [r0, #124]	@ 0x7c
9000b3ee:	fb01 f404 	mul.w	r4, r1, r4
9000b3f2:	eb05 0584 	add.w	r5, r5, r4, lsl #2
      }
    }

    /* Retrieve IdType */
    pRxHeader->IdType = *RxAddress & FDCAN_ELEMENT_MASK_XTD;
9000b3f6:	682c      	ldr	r4, [r5, #0]
9000b3f8:	f004 4480 	and.w	r4, r4, #1073741824	@ 0x40000000
9000b3fc:	6054      	str	r4, [r2, #4]

    /* Retrieve Identifier */
    if (pRxHeader->IdType == FDCAN_STANDARD_ID) /* Standard ID element */
9000b3fe:	2c00      	cmp	r4, #0
9000b400:	f040 808f 	bne.w	9000b522 <HAL_FDCAN_GetRxMessage+0x152>
    {
      pRxHeader->Identifier = ((*RxAddress & FDCAN_ELEMENT_MASK_STDID) >> 18);
9000b404:	682c      	ldr	r4, [r5, #0]
9000b406:	f3c4 448a 	ubfx	r4, r4, #18, #11
9000b40a:	6014      	str	r4, [r2, #0]
    {
      pRxHeader->Identifier = (*RxAddress & FDCAN_ELEMENT_MASK_EXTID);
    }

    /* Retrieve RxFrameType */
    pRxHeader->RxFrameType = (*RxAddress & FDCAN_ELEMENT_MASK_RTR);
9000b40c:	682c      	ldr	r4, [r5, #0]
9000b40e:	f004 5400 	and.w	r4, r4, #536870912	@ 0x20000000
9000b412:	6094      	str	r4, [r2, #8]

    /* Retrieve ErrorStateIndicator */
    pRxHeader->ErrorStateIndicator = (*RxAddress & FDCAN_ELEMENT_MASK_ESI);
9000b414:	682c      	ldr	r4, [r5, #0]
9000b416:	f004 4400 	and.w	r4, r4, #2147483648	@ 0x80000000
9000b41a:	6114      	str	r4, [r2, #16]

    /* Increment RxAddress pointer to second word of Rx FIFO element */
    RxAddress++;

    /* Retrieve RxTimestamp */
    pRxHeader->RxTimestamp = (*RxAddress & FDCAN_ELEMENT_MASK_TS);
9000b41c:	88ac      	ldrh	r4, [r5, #4]
9000b41e:	61d4      	str	r4, [r2, #28]

    /* Retrieve DataLength */
    pRxHeader->DataLength = (*RxAddress & FDCAN_ELEMENT_MASK_DLC);
9000b420:	686c      	ldr	r4, [r5, #4]
9000b422:	f404 2470 	and.w	r4, r4, #983040	@ 0xf0000
9000b426:	60d4      	str	r4, [r2, #12]
    /* Increment RxAddress pointer to payload of Rx FIFO element */
    RxAddress++;

    /* Retrieve Rx payload */
    pData = (uint8_t *)RxAddress;
    for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength >> 16]; ByteCounter++)
9000b428:	0c24      	lsrs	r4, r4, #16
    pRxHeader->BitRateSwitch = (*RxAddress & FDCAN_ELEMENT_MASK_BRS);
9000b42a:	686e      	ldr	r6, [r5, #4]
9000b42c:	f406 1680 	and.w	r6, r6, #1048576	@ 0x100000
9000b430:	6156      	str	r6, [r2, #20]
    pRxHeader->FDFormat = (*RxAddress & FDCAN_ELEMENT_MASK_FDF);
9000b432:	686e      	ldr	r6, [r5, #4]
9000b434:	f406 1600 	and.w	r6, r6, #2097152	@ 0x200000
9000b438:	6196      	str	r6, [r2, #24]
    pRxHeader->FilterIndex = ((*RxAddress & FDCAN_ELEMENT_MASK_FIDX) >> 24);
9000b43a:	79ee      	ldrb	r6, [r5, #7]
9000b43c:	f006 067f 	and.w	r6, r6, #127	@ 0x7f
9000b440:	6216      	str	r6, [r2, #32]
    for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength >> 16]; ByteCounter++)
9000b442:	4e41      	ldr	r6, [pc, #260]	@ (9000b548 <HAL_FDCAN_GetRxMessage+0x178>)
9000b444:	f816 c004 	ldrb.w	ip, [r6, r4]
    pRxHeader->IsFilterMatchingFrame = ((*RxAddress & FDCAN_ELEMENT_MASK_ANMF) >> 31);
9000b448:	686c      	ldr	r4, [r5, #4]
9000b44a:	0fe4      	lsrs	r4, r4, #31
9000b44c:	6254      	str	r4, [r2, #36]	@ 0x24
    for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength >> 16]; ByteCounter++)
9000b44e:	f1bc 0f00 	cmp.w	ip, #0
9000b452:	d00e      	beq.n	9000b472 <HAL_FDCAN_GetRxMessage+0xa2>
9000b454:	3b01      	subs	r3, #1
9000b456:	f105 0e07 	add.w	lr, r5, #7
9000b45a:	f1ae 0c06 	sub.w	ip, lr, #6
    {
      pRxData[ByteCounter] = pData[ByteCounter];
9000b45e:	f81e 4f01 	ldrb.w	r4, [lr, #1]!
9000b462:	f803 4f01 	strb.w	r4, [r3, #1]!
    for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength >> 16]; ByteCounter++)
9000b466:	ebac 0c05 	sub.w	ip, ip, r5
9000b46a:	89d4      	ldrh	r4, [r2, #14]
9000b46c:	5d34      	ldrb	r4, [r6, r4]
9000b46e:	4564      	cmp	r4, ip
9000b470:	d8f3      	bhi.n	9000b45a <HAL_FDCAN_GetRxMessage+0x8a>
    }

    if (RxLocation == FDCAN_RX_FIFO0) /* Rx element is assigned to the Rx FIFO 0 */
9000b472:	2940      	cmp	r1, #64	@ 0x40
    {
      /* Acknowledge the Rx FIFO 0 that the oldest element is read so that it increments the GetIndex */
      hfdcan->Instance->RXF0A = GetIndex;
9000b474:	6803      	ldr	r3, [r0, #0]
    if (RxLocation == FDCAN_RX_FIFO0) /* Rx element is assigned to the Rx FIFO 0 */
9000b476:	d058      	beq.n	9000b52a <HAL_FDCAN_GetRxMessage+0x15a>
    }
    else if (RxLocation == FDCAN_RX_FIFO1) /* Rx element is assigned to the Rx FIFO 1 */
9000b478:	2941      	cmp	r1, #65	@ 0x41
9000b47a:	d061      	beq.n	9000b540 <HAL_FDCAN_GetRxMessage+0x170>
      hfdcan->Instance->RXF1A = GetIndex;
    }
    else /* Rx element is assigned to a dedicated Rx buffer */
    {
      /* Clear the New Data flag of the current Rx buffer */
      if (RxLocation < FDCAN_RX_BUFFER32)
9000b47c:	291f      	cmp	r1, #31
9000b47e:	d858      	bhi.n	9000b532 <HAL_FDCAN_GetRxMessage+0x162>
      {
        hfdcan->Instance->NDAT1 = ((uint32_t)1 << RxLocation);
9000b480:	2201      	movs	r2, #1
9000b482:	408a      	lsls	r2, r1
9000b484:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
9000b488:	e051      	b.n	9000b52e <HAL_FDCAN_GetRxMessage+0x15e>
        hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
9000b48a:	f8d0 309c 	ldr.w	r3, [r0, #156]	@ 0x9c
9000b48e:	f043 0320 	orr.w	r3, r3, #32
9000b492:	f8c0 309c 	str.w	r3, [r0, #156]	@ 0x9c
        return HAL_ERROR;
9000b496:	2001      	movs	r0, #1
    /* Update error code */
    hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;

    return HAL_ERROR;
  }
}
9000b498:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
9000b49a:	f8d0 309c 	ldr.w	r3, [r0, #156]	@ 0x9c
9000b49e:	f043 0308 	orr.w	r3, r3, #8
9000b4a2:	f8c0 309c 	str.w	r3, [r0, #156]	@ 0x9c
    return HAL_ERROR;
9000b4a6:	e7f6      	b.n	9000b496 <HAL_FDCAN_GetRxMessage+0xc6>
      if ((hfdcan->Instance->RXF0C & FDCAN_RXF0C_F0S) == 0U)
9000b4a8:	6804      	ldr	r4, [r0, #0]
9000b4aa:	f8d4 50a0 	ldr.w	r5, [r4, #160]	@ 0xa0
9000b4ae:	f415 0ffe 	tst.w	r5, #8323072	@ 0x7f0000
9000b4b2:	d0ea      	beq.n	9000b48a <HAL_FDCAN_GetRxMessage+0xba>
      if ((hfdcan->Instance->RXF0S & FDCAN_RXF0S_F0FL) == 0U)
9000b4b4:	f8d4 50a4 	ldr.w	r5, [r4, #164]	@ 0xa4
9000b4b8:	066d      	lsls	r5, r5, #25
9000b4ba:	d02b      	beq.n	9000b514 <HAL_FDCAN_GetRxMessage+0x144>
        if(((hfdcan->Instance->RXF0S & FDCAN_RXF0S_F0F) >> FDCAN_RXF0S_F0F_Pos) == 1U)
9000b4bc:	f8d4 50a4 	ldr.w	r5, [r4, #164]	@ 0xa4
9000b4c0:	01ef      	lsls	r7, r5, #7
9000b4c2:	d501      	bpl.n	9000b4c8 <HAL_FDCAN_GetRxMessage+0xf8>
          if(((hfdcan->Instance->RXF0C & FDCAN_RXF0C_F0OM) >> FDCAN_RXF0C_F0OM_Pos) == FDCAN_RX_FIFO_OVERWRITE)
9000b4c4:	f8d4 50a0 	ldr.w	r5, [r4, #160]	@ 0xa0
        GetIndex += ((hfdcan->Instance->RXF0S & FDCAN_RXF0S_F0GI) >> FDCAN_RXF0S_F0GI_Pos);
9000b4c8:	f8d4 70a4 	ldr.w	r7, [r4, #164]	@ 0xa4
        RxAddress = (uint32_t *)(hfdcan->msgRam.RxFIFO0SA + (GetIndex * hfdcan->Init.RxFifo0ElmtSize * 4U));
9000b4cc:	6c44      	ldr	r4, [r0, #68]	@ 0x44
        GetIndex += ((hfdcan->Instance->RXF0S & FDCAN_RXF0S_F0GI) >> FDCAN_RXF0S_F0GI_Pos);
9000b4ce:	f3c7 2705 	ubfx	r7, r7, #8, #6
        RxAddress = (uint32_t *)(hfdcan->msgRam.RxFIFO0SA + (GetIndex * hfdcan->Init.RxFifo0ElmtSize * 4U));
9000b4d2:	6f45      	ldr	r5, [r0, #116]	@ 0x74
9000b4d4:	fb07 f404 	mul.w	r4, r7, r4
9000b4d8:	eb05 0584 	add.w	r5, r5, r4, lsl #2
9000b4dc:	e78b      	b.n	9000b3f6 <HAL_FDCAN_GetRxMessage+0x26>
      if ((hfdcan->Instance->RXF1C & FDCAN_RXF1C_F1S) == 0U)
9000b4de:	6804      	ldr	r4, [r0, #0]
9000b4e0:	f8d4 50b0 	ldr.w	r5, [r4, #176]	@ 0xb0
9000b4e4:	f415 0ffe 	tst.w	r5, #8323072	@ 0x7f0000
9000b4e8:	d0cf      	beq.n	9000b48a <HAL_FDCAN_GetRxMessage+0xba>
      if ((hfdcan->Instance->RXF1S & FDCAN_RXF1S_F1FL) == 0U)
9000b4ea:	f8d4 50b4 	ldr.w	r5, [r4, #180]	@ 0xb4
9000b4ee:	066e      	lsls	r6, r5, #25
9000b4f0:	d010      	beq.n	9000b514 <HAL_FDCAN_GetRxMessage+0x144>
        if(((hfdcan->Instance->RXF1S & FDCAN_RXF1S_F1F) >> FDCAN_RXF1S_F1F_Pos) == 1U)
9000b4f2:	f8d4 50b4 	ldr.w	r5, [r4, #180]	@ 0xb4
9000b4f6:	01ed      	lsls	r5, r5, #7
9000b4f8:	d501      	bpl.n	9000b4fe <HAL_FDCAN_GetRxMessage+0x12e>
          if(((hfdcan->Instance->RXF1C & FDCAN_RXF1C_F1OM) >> FDCAN_RXF1C_F1OM_Pos) == FDCAN_RX_FIFO_OVERWRITE)
9000b4fa:	f8d4 50b0 	ldr.w	r5, [r4, #176]	@ 0xb0
        GetIndex += ((hfdcan->Instance->RXF1S & FDCAN_RXF1S_F1GI) >> FDCAN_RXF1S_F1GI_Pos);
9000b4fe:	f8d4 70b4 	ldr.w	r7, [r4, #180]	@ 0xb4
        RxAddress = (uint32_t *)(hfdcan->msgRam.RxFIFO1SA + (GetIndex * hfdcan->Init.RxFifo1ElmtSize * 4U));
9000b502:	6cc4      	ldr	r4, [r0, #76]	@ 0x4c
        GetIndex += ((hfdcan->Instance->RXF1S & FDCAN_RXF1S_F1GI) >> FDCAN_RXF1S_F1GI_Pos);
9000b504:	f3c7 2705 	ubfx	r7, r7, #8, #6
        RxAddress = (uint32_t *)(hfdcan->msgRam.RxFIFO1SA + (GetIndex * hfdcan->Init.RxFifo1ElmtSize * 4U));
9000b508:	6f85      	ldr	r5, [r0, #120]	@ 0x78
9000b50a:	fb07 f404 	mul.w	r4, r7, r4
9000b50e:	eb05 0584 	add.w	r5, r5, r4, lsl #2
9000b512:	e770      	b.n	9000b3f6 <HAL_FDCAN_GetRxMessage+0x26>
        hfdcan->ErrorCode |= HAL_FDCAN_ERROR_FIFO_EMPTY;
9000b514:	f8d0 309c 	ldr.w	r3, [r0, #156]	@ 0x9c
9000b518:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000b51c:	f8c0 309c 	str.w	r3, [r0, #156]	@ 0x9c
        return HAL_ERROR;
9000b520:	e7b9      	b.n	9000b496 <HAL_FDCAN_GetRxMessage+0xc6>
      pRxHeader->Identifier = (*RxAddress & FDCAN_ELEMENT_MASK_EXTID);
9000b522:	682c      	ldr	r4, [r5, #0]
9000b524:	f024 4460 	bic.w	r4, r4, #3758096384	@ 0xe0000000
9000b528:	e76f      	b.n	9000b40a <HAL_FDCAN_GetRxMessage+0x3a>
      hfdcan->Instance->RXF0A = GetIndex;
9000b52a:	f8c3 70a8 	str.w	r7, [r3, #168]	@ 0xa8
    return HAL_OK;
9000b52e:	2000      	movs	r0, #0
}
9000b530:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hfdcan->Instance->NDAT2 = ((uint32_t)1 << (RxLocation & 0x1FU));
9000b532:	f001 011f 	and.w	r1, r1, #31
9000b536:	2201      	movs	r2, #1
9000b538:	408a      	lsls	r2, r1
9000b53a:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
9000b53e:	e7f6      	b.n	9000b52e <HAL_FDCAN_GetRxMessage+0x15e>
      hfdcan->Instance->RXF1A = GetIndex;
9000b540:	f8c3 70b8 	str.w	r7, [r3, #184]	@ 0xb8
9000b544:	e7f3      	b.n	9000b52e <HAL_FDCAN_GetRxMessage+0x15e>
9000b546:	bf00      	nop
9000b548:	9002f644 	.word	0x9002f644

9000b54c <HAL_FDCAN_ActivateNotification>:
  *           - FDCAN_IT_TX_COMPLETE
  *           - FDCAN_IT_TX_ABORT_COMPLETE
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_FDCAN_ActivateNotification(FDCAN_HandleTypeDef *hfdcan, uint32_t ActiveITs, uint32_t BufferIndexes)
{
9000b54c:	4603      	mov	r3, r0
  HAL_FDCAN_StateTypeDef state = hfdcan->State;
9000b54e:	f890 0098 	ldrb.w	r0, [r0, #152]	@ 0x98

  /* Check function parameters */
  assert_param(IS_FDCAN_IT(ActiveITs));

  if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
9000b552:	3801      	subs	r0, #1
9000b554:	2801      	cmp	r0, #1
9000b556:	d907      	bls.n	9000b568 <HAL_FDCAN_ActivateNotification+0x1c>
    return HAL_OK;
  }
  else
  {
    /* Update error code */
    hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
9000b558:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c

    return HAL_ERROR;
9000b55c:	2001      	movs	r0, #1
    hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
9000b55e:	f042 0202 	orr.w	r2, r2, #2
9000b562:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
  }
}
9000b566:	4770      	bx	lr
    if ((ActiveITs & hfdcan->Instance->ILS) == 0U)
9000b568:	6818      	ldr	r0, [r3, #0]
9000b56a:	6d83      	ldr	r3, [r0, #88]	@ 0x58
9000b56c:	420b      	tst	r3, r1
{
9000b56e:	b410      	push	{r4}
    if ((ActiveITs & hfdcan->Instance->ILS) == 0U)
9000b570:	d11f      	bne.n	9000b5b2 <HAL_FDCAN_ActivateNotification+0x66>
      SET_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE0);
9000b572:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000b574:	f043 0301 	orr.w	r3, r3, #1
9000b578:	65c3      	str	r3, [r0, #92]	@ 0x5c
    if ((ActiveITs & FDCAN_IT_TX_COMPLETE) != 0U)
9000b57a:	058c      	lsls	r4, r1, #22
9000b57c:	d504      	bpl.n	9000b588 <HAL_FDCAN_ActivateNotification+0x3c>
      SET_BIT(hfdcan->Instance->TXBTIE, BufferIndexes);
9000b57e:	f8d0 30e0 	ldr.w	r3, [r0, #224]	@ 0xe0
9000b582:	4313      	orrs	r3, r2
9000b584:	f8c0 30e0 	str.w	r3, [r0, #224]	@ 0xe0
    if ((ActiveITs & FDCAN_IT_TX_ABORT_COMPLETE) != 0U)
9000b588:	054b      	lsls	r3, r1, #21
9000b58a:	d504      	bpl.n	9000b596 <HAL_FDCAN_ActivateNotification+0x4a>
      SET_BIT(hfdcan->Instance->TXBCIE, BufferIndexes);
9000b58c:	f8d0 30e4 	ldr.w	r3, [r0, #228]	@ 0xe4
9000b590:	4313      	orrs	r3, r2
9000b592:	f8c0 30e4 	str.w	r3, [r0, #228]	@ 0xe4
    __HAL_FDCAN_ENABLE_IT(hfdcan, ActiveITs);
9000b596:	4b0d      	ldr	r3, [pc, #52]	@ (9000b5cc <HAL_FDCAN_ActivateNotification+0x80>)
9000b598:	6d44      	ldr	r4, [r0, #84]	@ 0x54
9000b59a:	400b      	ands	r3, r1
9000b59c:	4a0c      	ldr	r2, [pc, #48]	@ (9000b5d0 <HAL_FDCAN_ActivateNotification+0x84>)
9000b59e:	4323      	orrs	r3, r4
}
9000b5a0:	f85d 4b04 	ldr.w	r4, [sp], #4
    __HAL_FDCAN_ENABLE_IT(hfdcan, ActiveITs);
9000b5a4:	6543      	str	r3, [r0, #84]	@ 0x54
    return HAL_OK;
9000b5a6:	2000      	movs	r0, #0
    __HAL_FDCAN_ENABLE_IT(hfdcan, ActiveITs);
9000b5a8:	6953      	ldr	r3, [r2, #20]
9000b5aa:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
9000b5ae:	6153      	str	r3, [r2, #20]
}
9000b5b0:	4770      	bx	lr
    else if ((ActiveITs & hfdcan->Instance->ILS) == ActiveITs)
9000b5b2:	6d83      	ldr	r3, [r0, #88]	@ 0x58
9000b5b4:	ea31 0303 	bics.w	r3, r1, r3
9000b5b8:	d002      	beq.n	9000b5c0 <HAL_FDCAN_ActivateNotification+0x74>
      hfdcan->Instance->ILE = (FDCAN_INTERRUPT_LINE0 | FDCAN_INTERRUPT_LINE1);
9000b5ba:	2303      	movs	r3, #3
9000b5bc:	65c3      	str	r3, [r0, #92]	@ 0x5c
9000b5be:	e7dc      	b.n	9000b57a <HAL_FDCAN_ActivateNotification+0x2e>
      SET_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE1);
9000b5c0:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000b5c2:	f043 0302 	orr.w	r3, r3, #2
9000b5c6:	65c3      	str	r3, [r0, #92]	@ 0x5c
9000b5c8:	e7d7      	b.n	9000b57a <HAL_FDCAN_ActivateNotification+0x2e>
9000b5ca:	bf00      	nop
9000b5cc:	3fcfffff 	.word	0x3fcfffff
9000b5d0:	4000a800 	.word	0x4000a800

9000b5d4 <HAL_FDCAN_ClockCalibrationCallback>:
  UNUSED(ClkCalibrationITs);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_FDCAN_ClockCalibrationCallback could be implemented in the user file
   */
}
9000b5d4:	4770      	bx	lr
9000b5d6:	bf00      	nop

9000b5d8 <HAL_FDCAN_TxEventFifoCallback>:
  *         the configuration information for the specified FDCAN.
  * @param  TxEventFifoITs indicates which Tx Event FIFO interrupts are signaled.
  *         This parameter can be any combination of @arg FDCAN_Tx_Event_Fifo_Interrupts.
  * @retval None
  */
__weak void HAL_FDCAN_TxEventFifoCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t TxEventFifoITs)
9000b5d8:	4770      	bx	lr
9000b5da:	bf00      	nop

9000b5dc <HAL_FDCAN_RxFifo1Callback>:
  *         the configuration information for the specified FDCAN.
  * @param  RxFifo1ITs indicates which Rx FIFO 1 interrupts are signaled.
  *         This parameter can be any combination of @arg FDCAN_Rx_Fifo1_Interrupts.
  * @retval None
  */
__weak void HAL_FDCAN_RxFifo1Callback(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo1ITs)
9000b5dc:	4770      	bx	lr
9000b5de:	bf00      	nop

9000b5e0 <HAL_FDCAN_TxFifoEmptyCallback>:
  * @brief  Tx FIFO Empty callback.
  * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
  *         the configuration information for the specified FDCAN.
  * @retval None
  */
__weak void HAL_FDCAN_TxFifoEmptyCallback(FDCAN_HandleTypeDef *hfdcan)
9000b5e0:	4770      	bx	lr
9000b5e2:	bf00      	nop

9000b5e4 <HAL_FDCAN_TxBufferCompleteCallback>:
  *         the configuration information for the specified FDCAN.
  * @param  BufferIndexes Indexes of the transmitted buffers.
  *         This parameter can be any combination of @arg FDCAN_Tx_location.
  * @retval None
  */
__weak void HAL_FDCAN_TxBufferCompleteCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t BufferIndexes)
9000b5e4:	4770      	bx	lr
9000b5e6:	bf00      	nop

9000b5e8 <HAL_FDCAN_TxBufferAbortCallback>:
  *         the configuration information for the specified FDCAN.
  * @param  BufferIndexes Indexes of the aborted buffers.
  *         This parameter can be any combination of @arg FDCAN_Tx_location.
  * @retval None
  */
__weak void HAL_FDCAN_TxBufferAbortCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t BufferIndexes)
9000b5e8:	4770      	bx	lr
9000b5ea:	bf00      	nop

9000b5ec <HAL_FDCAN_RxBufferNewMessageCallback>:
  * @brief  Rx Buffer New Message callback.
  * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
  *         the configuration information for the specified FDCAN.
  * @retval None
  */
__weak void HAL_FDCAN_RxBufferNewMessageCallback(FDCAN_HandleTypeDef *hfdcan)
9000b5ec:	4770      	bx	lr
9000b5ee:	bf00      	nop

9000b5f0 <HAL_FDCAN_TimestampWraparoundCallback>:
  * @brief  Timestamp Wraparound callback.
  * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
  *         the configuration information for the specified FDCAN.
  * @retval None
  */
__weak void HAL_FDCAN_TimestampWraparoundCallback(FDCAN_HandleTypeDef *hfdcan)
9000b5f0:	4770      	bx	lr
9000b5f2:	bf00      	nop

9000b5f4 <HAL_FDCAN_TimeoutOccurredCallback>:
  * @brief  Timeout Occurred callback.
  * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
  *         the configuration information for the specified FDCAN.
  * @retval None
  */
__weak void HAL_FDCAN_TimeoutOccurredCallback(FDCAN_HandleTypeDef *hfdcan)
9000b5f4:	4770      	bx	lr
9000b5f6:	bf00      	nop

9000b5f8 <HAL_FDCAN_HighPriorityMessageCallback>:
  * @brief  High Priority Message callback.
  * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
  *         the configuration information for the specified FDCAN.
  * @retval None
  */
__weak void HAL_FDCAN_HighPriorityMessageCallback(FDCAN_HandleTypeDef *hfdcan)
9000b5f8:	4770      	bx	lr
9000b5fa:	bf00      	nop

9000b5fc <HAL_FDCAN_ErrorCallback>:
  * @brief  Error callback.
  * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
  *         the configuration information for the specified FDCAN.
  * @retval None
  */
__weak void HAL_FDCAN_ErrorCallback(FDCAN_HandleTypeDef *hfdcan)
9000b5fc:	4770      	bx	lr
9000b5fe:	bf00      	nop

9000b600 <HAL_FDCAN_ErrorStatusCallback>:
  *         the configuration information for the specified FDCAN.
  * @param  ErrorStatusITs indicates which Error Status interrupts are signaled.
  *         This parameter can be any combination of @arg FDCAN_Error_Status_Interrupts.
  * @retval None
  */
__weak void HAL_FDCAN_ErrorStatusCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t ErrorStatusITs)
9000b600:	4770      	bx	lr
9000b602:	bf00      	nop

9000b604 <HAL_FDCAN_TT_ScheduleSyncCallback>:
  *         the configuration information for the specified FDCAN.
  * @param  TTSchedSyncITs indicates which TT Schedule Synchronization interrupts are signaled.
  *         This parameter can be any combination of @arg FDCAN_TTScheduleSynchronization_Interrupts.
  * @retval None
  */
__weak void HAL_FDCAN_TT_ScheduleSyncCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t TTSchedSyncITs)
9000b604:	4770      	bx	lr
9000b606:	bf00      	nop

9000b608 <HAL_FDCAN_TT_TimeMarkCallback>:
  *         the configuration information for the specified FDCAN.
  * @param  TTTimeMarkITs indicates which TT Schedule Synchronization interrupts are signaled.
  *         This parameter can be any combination of @arg FDCAN_TTTimeMark_Interrupts.
  * @retval None
  */
__weak void HAL_FDCAN_TT_TimeMarkCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t TTTimeMarkITs)
9000b608:	4770      	bx	lr
9000b60a:	bf00      	nop

9000b60c <HAL_FDCAN_TT_StopWatchCallback>:
  UNUSED(SWCycleCount);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_FDCAN_TT_StopWatchCallback could be implemented in the user file
   */
}
9000b60c:	4770      	bx	lr
9000b60e:	bf00      	nop

9000b610 <HAL_FDCAN_TT_GlobalTimeCallback>:
  *         the configuration information for the specified FDCAN.
  * @param  TTGlobTimeITs indicates which TT Global Time interrupts are signaled.
  *         This parameter can be any combination of @arg FDCAN_TTGlobalTime_Interrupts.
  * @retval None
  */
__weak void HAL_FDCAN_TT_GlobalTimeCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t TTGlobTimeITs)
9000b610:	4770      	bx	lr
9000b612:	bf00      	nop

9000b614 <HAL_FDCAN_IRQHandler>:
  ClkCalibrationITs = (FDCAN_CCU->IR << 30);
9000b614:	49aa      	ldr	r1, [pc, #680]	@ (9000b8c0 <HAL_FDCAN_IRQHandler+0x2ac>)
9000b616:	690a      	ldr	r2, [r1, #16]
  ClkCalibrationITs &= (FDCAN_CCU->IE << 30);
9000b618:	694b      	ldr	r3, [r1, #20]
{
9000b61a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  ClkCalibrationITs &= (FDCAN_CCU->IE << 30);
9000b61e:	ea4f 7b83 	mov.w	fp, r3, lsl #30
  TxEventFifoITs = hfdcan->Instance->IR & FDCAN_TX_EVENT_FIFO_MASK;
9000b622:	6803      	ldr	r3, [r0, #0]
{
9000b624:	b083      	sub	sp, #12
9000b626:	4604      	mov	r4, r0
  ClkCalibrationITs &= (FDCAN_CCU->IE << 30);
9000b628:	ea0b 7b82 	and.w	fp, fp, r2, lsl #30
  TxEventFifoITs = hfdcan->Instance->IR & FDCAN_TX_EVENT_FIFO_MASK;
9000b62c:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
  TxEventFifoITs &= hfdcan->Instance->IE;
9000b62e:	6d5d      	ldr	r5, [r3, #84]	@ 0x54
9000b630:	ea02 0a05 	and.w	sl, r2, r5
  RxFifo0ITs = hfdcan->Instance->IR & FDCAN_RX_FIFO0_MASK;
9000b634:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
  RxFifo0ITs &= hfdcan->Instance->IE;
9000b636:	6d5d      	ldr	r5, [r3, #84]	@ 0x54
  TxEventFifoITs &= hfdcan->Instance->IE;
9000b638:	f40a 4a70 	and.w	sl, sl, #61440	@ 0xf000
  RxFifo0ITs &= hfdcan->Instance->IE;
9000b63c:	ea02 0905 	and.w	r9, r2, r5
  RxFifo1ITs = hfdcan->Instance->IR & FDCAN_RX_FIFO1_MASK;
9000b640:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
  RxFifo1ITs &= hfdcan->Instance->IE;
9000b642:	6d5d      	ldr	r5, [r3, #84]	@ 0x54
  Errors = hfdcan->Instance->IR & FDCAN_ERROR_MASK;
9000b644:	6d1e      	ldr	r6, [r3, #80]	@ 0x50
  RxFifo0ITs &= hfdcan->Instance->IE;
9000b646:	f009 090f 	and.w	r9, r9, #15
  RxFifo1ITs &= hfdcan->Instance->IE;
9000b64a:	ea02 0805 	and.w	r8, r2, r5
9000b64e:	f008 02f0 	and.w	r2, r8, #240	@ 0xf0
9000b652:	9201      	str	r2, [sp, #4]
  Errors &= hfdcan->Instance->IE;
9000b654:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
  ErrorStatusITs = hfdcan->Instance->IR & FDCAN_ERROR_STATUS_MASK;
9000b656:	6d1f      	ldr	r7, [r3, #80]	@ 0x50
  Errors &= hfdcan->Instance->IE;
9000b658:	4016      	ands	r6, r2
  ErrorStatusITs &= hfdcan->Instance->IE;
9000b65a:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
  itsourceIE = hfdcan->Instance->IE;
9000b65c:	6d5d      	ldr	r5, [r3, #84]	@ 0x54
  ErrorStatusITs &= hfdcan->Instance->IE;
9000b65e:	4017      	ands	r7, r2
  Errors &= hfdcan->Instance->IE;
9000b660:	f006 5671 	and.w	r6, r6, #1010827264	@ 0x3c400000
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_RX_HIGH_PRIORITY_MSG) != RESET)
9000b664:	05ea      	lsls	r2, r5, #23
  itflagIR = hfdcan->Instance->IR;
9000b666:	f8d3 8050 	ldr.w	r8, [r3, #80]	@ 0x50
  ErrorStatusITs &= hfdcan->Instance->IE;
9000b66a:	f007 7760 	and.w	r7, r7, #58720256	@ 0x3800000
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_RX_HIGH_PRIORITY_MSG) != RESET)
9000b66e:	d503      	bpl.n	9000b678 <HAL_FDCAN_IRQHandler+0x64>
    if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_RX_HIGH_PRIORITY_MSG) != RESET)
9000b670:	f418 7f80 	tst.w	r8, #256	@ 0x100
9000b674:	f040 80eb 	bne.w	9000b84e <HAL_FDCAN_IRQHandler+0x23a>
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TX_ABORT_COMPLETE) != RESET)
9000b678:	0569      	lsls	r1, r5, #21
9000b67a:	d503      	bpl.n	9000b684 <HAL_FDCAN_IRQHandler+0x70>
    if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TX_ABORT_COMPLETE) != RESET)
9000b67c:	f418 6f80 	tst.w	r8, #1024	@ 0x400
9000b680:	f040 80ee 	bne.w	9000b860 <HAL_FDCAN_IRQHandler+0x24c>
  if (ClkCalibrationITs != 0U)
9000b684:	f1bb 0f00 	cmp.w	fp, #0
9000b688:	d17a      	bne.n	9000b780 <HAL_FDCAN_IRQHandler+0x16c>
  if (TxEventFifoITs != 0U)
9000b68a:	f1ba 0f00 	cmp.w	sl, #0
9000b68e:	d153      	bne.n	9000b738 <HAL_FDCAN_IRQHandler+0x124>
  if (RxFifo0ITs != 0U)
9000b690:	f1b9 0f00 	cmp.w	r9, #0
9000b694:	d15d      	bne.n	9000b752 <HAL_FDCAN_IRQHandler+0x13e>
  if (RxFifo1ITs != 0U)
9000b696:	9a01      	ldr	r2, [sp, #4]
9000b698:	2a00      	cmp	r2, #0
9000b69a:	d167      	bne.n	9000b76c <HAL_FDCAN_IRQHandler+0x158>
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TX_FIFO_EMPTY) != RESET)
9000b69c:	052a      	lsls	r2, r5, #20
9000b69e:	d503      	bpl.n	9000b6a8 <HAL_FDCAN_IRQHandler+0x94>
    if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TX_FIFO_EMPTY) != RESET)
9000b6a0:	f418 6f00 	tst.w	r8, #2048	@ 0x800
9000b6a4:	f040 80f0 	bne.w	9000b888 <HAL_FDCAN_IRQHandler+0x274>
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TX_COMPLETE) != RESET)
9000b6a8:	05a8      	lsls	r0, r5, #22
9000b6aa:	d503      	bpl.n	9000b6b4 <HAL_FDCAN_IRQHandler+0xa0>
    if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TX_COMPLETE) != RESET)
9000b6ac:	f418 7f00 	tst.w	r8, #512	@ 0x200
9000b6b0:	f040 80f5 	bne.w	9000b89e <HAL_FDCAN_IRQHandler+0x28a>
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_RX_BUFFER_NEW_MESSAGE) != RESET)
9000b6b4:	0329      	lsls	r1, r5, #12
9000b6b6:	d503      	bpl.n	9000b6c0 <HAL_FDCAN_IRQHandler+0xac>
    if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_RX_BUFFER_NEW_MESSAGE) != RESET)
9000b6b8:	f418 2f00 	tst.w	r8, #524288	@ 0x80000
9000b6bc:	f040 8104 	bne.w	9000b8c8 <HAL_FDCAN_IRQHandler+0x2b4>
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TIMESTAMP_WRAPAROUND) != RESET)
9000b6c0:	03ea      	lsls	r2, r5, #15
9000b6c2:	d503      	bpl.n	9000b6cc <HAL_FDCAN_IRQHandler+0xb8>
    if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TIMESTAMP_WRAPAROUND) != RESET)
9000b6c4:	f418 3f80 	tst.w	r8, #65536	@ 0x10000
9000b6c8:	f040 8109 	bne.w	9000b8de <HAL_FDCAN_IRQHandler+0x2ca>
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TIMEOUT_OCCURRED) != RESET)
9000b6cc:	0368      	lsls	r0, r5, #13
9000b6ce:	d503      	bpl.n	9000b6d8 <HAL_FDCAN_IRQHandler+0xc4>
    if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TIMEOUT_OCCURRED) != RESET)
9000b6d0:	f418 2f80 	tst.w	r8, #262144	@ 0x40000
9000b6d4:	f040 80b0 	bne.w	9000b838 <HAL_FDCAN_IRQHandler+0x224>
  if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_RAM_ACCESS_FAILURE) != RESET)
9000b6d8:	03a9      	lsls	r1, r5, #14
9000b6da:	d50e      	bpl.n	9000b6fa <HAL_FDCAN_IRQHandler+0xe6>
    if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_RAM_ACCESS_FAILURE) != RESET)
9000b6dc:	f418 3f00 	tst.w	r8, #131072	@ 0x20000
9000b6e0:	d00b      	beq.n	9000b6fa <HAL_FDCAN_IRQHandler+0xe6>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_RAM_ACCESS_FAILURE);
9000b6e2:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
9000b6e6:	2100      	movs	r1, #0
9000b6e8:	651a      	str	r2, [r3, #80]	@ 0x50
9000b6ea:	4a75      	ldr	r2, [pc, #468]	@ (9000b8c0 <HAL_FDCAN_IRQHandler+0x2ac>)
9000b6ec:	6111      	str	r1, [r2, #16]
      hfdcan->ErrorCode |= HAL_FDCAN_ERROR_RAM_ACCESS;
9000b6ee:	f8d4 209c 	ldr.w	r2, [r4, #156]	@ 0x9c
9000b6f2:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
9000b6f6:	f8c4 209c 	str.w	r2, [r4, #156]	@ 0x9c
  if (ErrorStatusITs != 0U)
9000b6fa:	b99f      	cbnz	r7, 9000b724 <HAL_FDCAN_IRQHandler+0x110>
  if (Errors != 0U)
9000b6fc:	b146      	cbz	r6, 9000b710 <HAL_FDCAN_IRQHandler+0xfc>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, Errors);
9000b6fe:	4a70      	ldr	r2, [pc, #448]	@ (9000b8c0 <HAL_FDCAN_IRQHandler+0x2ac>)
9000b700:	2100      	movs	r1, #0
9000b702:	651e      	str	r6, [r3, #80]	@ 0x50
9000b704:	6111      	str	r1, [r2, #16]
    hfdcan->ErrorCode |= Errors;
9000b706:	f8d4 209c 	ldr.w	r2, [r4, #156]	@ 0x9c
9000b70a:	4332      	orrs	r2, r6
9000b70c:	f8c4 209c 	str.w	r2, [r4, #156]	@ 0x9c
  if (hfdcan->Instance == FDCAN1)
9000b710:	4a6c      	ldr	r2, [pc, #432]	@ (9000b8c4 <HAL_FDCAN_IRQHandler+0x2b0>)
9000b712:	4293      	cmp	r3, r2
9000b714:	d04a      	beq.n	9000b7ac <HAL_FDCAN_IRQHandler+0x198>
  if (hfdcan->ErrorCode != HAL_FDCAN_ERROR_NONE)
9000b716:	f8d4 309c 	ldr.w	r3, [r4, #156]	@ 0x9c
9000b71a:	2b00      	cmp	r3, #0
9000b71c:	d140      	bne.n	9000b7a0 <HAL_FDCAN_IRQHandler+0x18c>
}
9000b71e:	b003      	add	sp, #12
9000b720:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, ErrorStatusITs);
9000b724:	651f      	str	r7, [r3, #80]	@ 0x50
9000b726:	2300      	movs	r3, #0
9000b728:	4a65      	ldr	r2, [pc, #404]	@ (9000b8c0 <HAL_FDCAN_IRQHandler+0x2ac>)
    HAL_FDCAN_ErrorStatusCallback(hfdcan, ErrorStatusITs);
9000b72a:	4639      	mov	r1, r7
9000b72c:	4620      	mov	r0, r4
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, ErrorStatusITs);
9000b72e:	6113      	str	r3, [r2, #16]
    HAL_FDCAN_ErrorStatusCallback(hfdcan, ErrorStatusITs);
9000b730:	f7ff ff66 	bl	9000b600 <HAL_FDCAN_ErrorStatusCallback>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, Errors);
9000b734:	6823      	ldr	r3, [r4, #0]
9000b736:	e7e1      	b.n	9000b6fc <HAL_FDCAN_IRQHandler+0xe8>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, TxEventFifoITs);
9000b738:	f8c3 a050 	str.w	sl, [r3, #80]	@ 0x50
9000b73c:	2000      	movs	r0, #0
9000b73e:	4b60      	ldr	r3, [pc, #384]	@ (9000b8c0 <HAL_FDCAN_IRQHandler+0x2ac>)
    HAL_FDCAN_TxEventFifoCallback(hfdcan, TxEventFifoITs);
9000b740:	4651      	mov	r1, sl
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, TxEventFifoITs);
9000b742:	6118      	str	r0, [r3, #16]
    HAL_FDCAN_TxEventFifoCallback(hfdcan, TxEventFifoITs);
9000b744:	4620      	mov	r0, r4
9000b746:	f7ff ff47 	bl	9000b5d8 <HAL_FDCAN_TxEventFifoCallback>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, RxFifo0ITs);
9000b74a:	6823      	ldr	r3, [r4, #0]
  if (RxFifo0ITs != 0U)
9000b74c:	f1b9 0f00 	cmp.w	r9, #0
9000b750:	d0a1      	beq.n	9000b696 <HAL_FDCAN_IRQHandler+0x82>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, RxFifo0ITs);
9000b752:	f8c3 9050 	str.w	r9, [r3, #80]	@ 0x50
9000b756:	2000      	movs	r0, #0
9000b758:	4b59      	ldr	r3, [pc, #356]	@ (9000b8c0 <HAL_FDCAN_IRQHandler+0x2ac>)
    HAL_FDCAN_RxFifo0Callback(hfdcan, RxFifo0ITs);
9000b75a:	4649      	mov	r1, r9
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, RxFifo0ITs);
9000b75c:	6118      	str	r0, [r3, #16]
    HAL_FDCAN_RxFifo0Callback(hfdcan, RxFifo0ITs);
9000b75e:	4620      	mov	r0, r4
9000b760:	f7f5 fa56 	bl	90000c10 <HAL_FDCAN_RxFifo0Callback>
  if (RxFifo1ITs != 0U)
9000b764:	9a01      	ldr	r2, [sp, #4]
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, RxFifo1ITs);
9000b766:	6823      	ldr	r3, [r4, #0]
  if (RxFifo1ITs != 0U)
9000b768:	2a00      	cmp	r2, #0
9000b76a:	d097      	beq.n	9000b69c <HAL_FDCAN_IRQHandler+0x88>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, RxFifo1ITs);
9000b76c:	651a      	str	r2, [r3, #80]	@ 0x50
9000b76e:	2000      	movs	r0, #0
9000b770:	4b53      	ldr	r3, [pc, #332]	@ (9000b8c0 <HAL_FDCAN_IRQHandler+0x2ac>)
    HAL_FDCAN_RxFifo1Callback(hfdcan, RxFifo1ITs);
9000b772:	4611      	mov	r1, r2
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, RxFifo1ITs);
9000b774:	6118      	str	r0, [r3, #16]
    HAL_FDCAN_RxFifo1Callback(hfdcan, RxFifo1ITs);
9000b776:	4620      	mov	r0, r4
9000b778:	f7ff ff30 	bl	9000b5dc <HAL_FDCAN_RxFifo1Callback>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_FIFO_EMPTY);
9000b77c:	6823      	ldr	r3, [r4, #0]
9000b77e:	e78d      	b.n	9000b69c <HAL_FDCAN_IRQHandler+0x88>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, ClkCalibrationITs);
9000b780:	2100      	movs	r1, #0
9000b782:	ea4f 709b 	mov.w	r0, fp, lsr #30
9000b786:	6519      	str	r1, [r3, #80]	@ 0x50
    HAL_FDCAN_ClockCalibrationCallback(hfdcan, ClkCalibrationITs);
9000b788:	4659      	mov	r1, fp
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, ClkCalibrationITs);
9000b78a:	4b4d      	ldr	r3, [pc, #308]	@ (9000b8c0 <HAL_FDCAN_IRQHandler+0x2ac>)
9000b78c:	6118      	str	r0, [r3, #16]
    HAL_FDCAN_ClockCalibrationCallback(hfdcan, ClkCalibrationITs);
9000b78e:	4620      	mov	r0, r4
9000b790:	f7ff ff20 	bl	9000b5d4 <HAL_FDCAN_ClockCalibrationCallback>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, TxEventFifoITs);
9000b794:	6823      	ldr	r3, [r4, #0]
  if (TxEventFifoITs != 0U)
9000b796:	f1ba 0f00 	cmp.w	sl, #0
9000b79a:	f43f af79 	beq.w	9000b690 <HAL_FDCAN_IRQHandler+0x7c>
9000b79e:	e7cb      	b.n	9000b738 <HAL_FDCAN_IRQHandler+0x124>
    HAL_FDCAN_ErrorCallback(hfdcan);
9000b7a0:	4620      	mov	r0, r4
9000b7a2:	f7ff ff2b 	bl	9000b5fc <HAL_FDCAN_ErrorCallback>
}
9000b7a6:	b003      	add	sp, #12
9000b7a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != 0U)
9000b7ac:	6863      	ldr	r3, [r4, #4]
9000b7ae:	689a      	ldr	r2, [r3, #8]
9000b7b0:	0792      	lsls	r2, r2, #30
9000b7b2:	d0b0      	beq.n	9000b716 <HAL_FDCAN_IRQHandler+0x102>
      TTSchedSyncITs = hfdcan->ttcan->TTIR & FDCAN_TT_SCHEDULE_SYNC_MASK;
9000b7b4:	6a19      	ldr	r1, [r3, #32]
      TTSchedSyncITs &= hfdcan->ttcan->TTIE;
9000b7b6:	6a58      	ldr	r0, [r3, #36]	@ 0x24
      TTTimeMarkITs = hfdcan->ttcan->TTIR & FDCAN_TT_TIME_MARK_MASK;
9000b7b8:	6a1a      	ldr	r2, [r3, #32]
      TTSchedSyncITs &= hfdcan->ttcan->TTIE;
9000b7ba:	4001      	ands	r1, r0
      TTTimeMarkITs &= hfdcan->ttcan->TTIE;
9000b7bc:	6a58      	ldr	r0, [r3, #36]	@ 0x24
      TTGlobTimeITs = hfdcan->ttcan->TTIR & FDCAN_TT_GLOBAL_TIME_MASK;
9000b7be:	6a1f      	ldr	r7, [r3, #32]
      TTTimeMarkITs &= hfdcan->ttcan->TTIE;
9000b7c0:	ea02 0800 	and.w	r8, r2, r0
      TTGlobTimeITs &= hfdcan->ttcan->TTIE;
9000b7c4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
      TTDistErrors = hfdcan->ttcan->TTIR & FDCAN_TT_DISTURBING_ERROR_MASK;
9000b7c6:	6a1e      	ldr	r6, [r3, #32]
      if (TTSchedSyncITs != 0U)
9000b7c8:	f011 010f 	ands.w	r1, r1, #15
      TTGlobTimeITs &= hfdcan->ttcan->TTIE;
9000b7cc:	ea07 0702 	and.w	r7, r7, r2
      TTDistErrors &= hfdcan->ttcan->TTIE;
9000b7d0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
      TTFatalErrors = hfdcan->ttcan->TTIR & FDCAN_TT_FATAL_ERROR_MASK;
9000b7d2:	6a1d      	ldr	r5, [r3, #32]
      TTTimeMarkITs &= hfdcan->ttcan->TTIE;
9000b7d4:	f008 0830 	and.w	r8, r8, #48	@ 0x30
      TTDistErrors &= hfdcan->ttcan->TTIE;
9000b7d8:	ea06 0602 	and.w	r6, r6, r2
      TTFatalErrors &= hfdcan->ttcan->TTIE;
9000b7dc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
      TTGlobTimeITs &= hfdcan->ttcan->TTIE;
9000b7de:	f407 77c0 	and.w	r7, r7, #384	@ 0x180
      itsourceTTIE = hfdcan->ttcan->TTIE;
9000b7e2:	f8d3 9024 	ldr.w	r9, [r3, #36]	@ 0x24
      TTFatalErrors &= hfdcan->ttcan->TTIE;
9000b7e6:	ea05 0502 	and.w	r5, r5, r2
      TTDistErrors &= hfdcan->ttcan->TTIE;
9000b7ea:	f406 46fc 	and.w	r6, r6, #32256	@ 0x7e00
      itflagTTIR = hfdcan->ttcan->TTIR;
9000b7ee:	f8d3 a020 	ldr.w	sl, [r3, #32]
      TTFatalErrors &= hfdcan->ttcan->TTIE;
9000b7f2:	f405 25f0 	and.w	r5, r5, #491520	@ 0x78000
      if (TTSchedSyncITs != 0U)
9000b7f6:	f040 8084 	bne.w	9000b902 <HAL_FDCAN_IRQHandler+0x2ee>
      if (TTTimeMarkITs != 0U)
9000b7fa:	f1b8 0f00 	cmp.w	r8, #0
9000b7fe:	f040 8096 	bne.w	9000b92e <HAL_FDCAN_IRQHandler+0x31a>
      if (FDCAN_CHECK_IT_SOURCE(itsourceTTIE, FDCAN_TT_IT_STOP_WATCH) != RESET)
9000b802:	f019 0f40 	tst.w	r9, #64	@ 0x40
9000b806:	d002      	beq.n	9000b80e <HAL_FDCAN_IRQHandler+0x1fa>
        if (FDCAN_CHECK_FLAG(itflagTTIR, FDCAN_TT_FLAG_STOP_WATCH) != RESET)
9000b808:	f01a 0f40 	tst.w	sl, #64	@ 0x40
9000b80c:	d17e      	bne.n	9000b90c <HAL_FDCAN_IRQHandler+0x2f8>
      if (TTGlobTimeITs != 0U)
9000b80e:	2f00      	cmp	r7, #0
9000b810:	d170      	bne.n	9000b8f4 <HAL_FDCAN_IRQHandler+0x2e0>
      if (TTDistErrors != 0U)
9000b812:	b136      	cbz	r6, 9000b822 <HAL_FDCAN_IRQHandler+0x20e>
        __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTDistErrors);
9000b814:	6863      	ldr	r3, [r4, #4]
9000b816:	621e      	str	r6, [r3, #32]
        hfdcan->ErrorCode |= TTDistErrors;
9000b818:	f8d4 309c 	ldr.w	r3, [r4, #156]	@ 0x9c
9000b81c:	4333      	orrs	r3, r6
9000b81e:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
      if (TTFatalErrors != 0U)
9000b822:	2d00      	cmp	r5, #0
9000b824:	f43f af77 	beq.w	9000b716 <HAL_FDCAN_IRQHandler+0x102>
        __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTFatalErrors);
9000b828:	6863      	ldr	r3, [r4, #4]
9000b82a:	621d      	str	r5, [r3, #32]
        hfdcan->ErrorCode |= TTFatalErrors;
9000b82c:	f8d4 309c 	ldr.w	r3, [r4, #156]	@ 0x9c
9000b830:	432b      	orrs	r3, r5
9000b832:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
9000b836:	e76e      	b.n	9000b716 <HAL_FDCAN_IRQHandler+0x102>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TIMEOUT_OCCURRED);
9000b838:	f44f 2180 	mov.w	r1, #262144	@ 0x40000
      HAL_FDCAN_TimeoutOccurredCallback(hfdcan);
9000b83c:	4620      	mov	r0, r4
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TIMEOUT_OCCURRED);
9000b83e:	6519      	str	r1, [r3, #80]	@ 0x50
9000b840:	2100      	movs	r1, #0
9000b842:	4b1f      	ldr	r3, [pc, #124]	@ (9000b8c0 <HAL_FDCAN_IRQHandler+0x2ac>)
9000b844:	6119      	str	r1, [r3, #16]
      HAL_FDCAN_TimeoutOccurredCallback(hfdcan);
9000b846:	f7ff fed5 	bl	9000b5f4 <HAL_FDCAN_TimeoutOccurredCallback>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_RAM_ACCESS_FAILURE);
9000b84a:	6823      	ldr	r3, [r4, #0]
9000b84c:	e744      	b.n	9000b6d8 <HAL_FDCAN_IRQHandler+0xc4>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_RX_HIGH_PRIORITY_MSG);
9000b84e:	f44f 7280 	mov.w	r2, #256	@ 0x100
9000b852:	651a      	str	r2, [r3, #80]	@ 0x50
9000b854:	2300      	movs	r3, #0
9000b856:	610b      	str	r3, [r1, #16]
      HAL_FDCAN_HighPriorityMessageCallback(hfdcan);
9000b858:	f7ff fece 	bl	9000b5f8 <HAL_FDCAN_HighPriorityMessageCallback>
      AbortedBuffers = hfdcan->Instance->TXBCF;
9000b85c:	6823      	ldr	r3, [r4, #0]
9000b85e:	e70b      	b.n	9000b678 <HAL_FDCAN_IRQHandler+0x64>
9000b860:	f8d3 00dc 	ldr.w	r0, [r3, #220]	@ 0xdc
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_ABORT_COMPLETE);
9000b864:	f44f 6280 	mov.w	r2, #1024	@ 0x400
      AbortedBuffers &= hfdcan->Instance->TXBCIE;
9000b868:	f8d3 10e4 	ldr.w	r1, [r3, #228]	@ 0xe4
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_ABORT_COMPLETE);
9000b86c:	651a      	str	r2, [r3, #80]	@ 0x50
      HAL_FDCAN_TxBufferAbortCallback(hfdcan, AbortedBuffers);
9000b86e:	4001      	ands	r1, r0
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_ABORT_COMPLETE);
9000b870:	4b13      	ldr	r3, [pc, #76]	@ (9000b8c0 <HAL_FDCAN_IRQHandler+0x2ac>)
9000b872:	2000      	movs	r0, #0
9000b874:	6118      	str	r0, [r3, #16]
      HAL_FDCAN_TxBufferAbortCallback(hfdcan, AbortedBuffers);
9000b876:	4620      	mov	r0, r4
9000b878:	f7ff feb6 	bl	9000b5e8 <HAL_FDCAN_TxBufferAbortCallback>
    __HAL_FDCAN_CLEAR_FLAG(hfdcan, ClkCalibrationITs);
9000b87c:	6823      	ldr	r3, [r4, #0]
  if (ClkCalibrationITs != 0U)
9000b87e:	f1bb 0f00 	cmp.w	fp, #0
9000b882:	f43f af02 	beq.w	9000b68a <HAL_FDCAN_IRQHandler+0x76>
9000b886:	e77b      	b.n	9000b780 <HAL_FDCAN_IRQHandler+0x16c>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_FIFO_EMPTY);
9000b888:	f44f 6100 	mov.w	r1, #2048	@ 0x800
      HAL_FDCAN_TxFifoEmptyCallback(hfdcan);
9000b88c:	4620      	mov	r0, r4
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_FIFO_EMPTY);
9000b88e:	6519      	str	r1, [r3, #80]	@ 0x50
9000b890:	2100      	movs	r1, #0
9000b892:	4b0b      	ldr	r3, [pc, #44]	@ (9000b8c0 <HAL_FDCAN_IRQHandler+0x2ac>)
9000b894:	6119      	str	r1, [r3, #16]
      HAL_FDCAN_TxFifoEmptyCallback(hfdcan);
9000b896:	f7ff fea3 	bl	9000b5e0 <HAL_FDCAN_TxFifoEmptyCallback>
      TransmittedBuffers = hfdcan->Instance->TXBTO;
9000b89a:	6823      	ldr	r3, [r4, #0]
9000b89c:	e704      	b.n	9000b6a8 <HAL_FDCAN_IRQHandler+0x94>
9000b89e:	f8d3 00d8 	ldr.w	r0, [r3, #216]	@ 0xd8
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_COMPLETE);
9000b8a2:	f44f 7200 	mov.w	r2, #512	@ 0x200
      TransmittedBuffers &= hfdcan->Instance->TXBTIE;
9000b8a6:	f8d3 10e0 	ldr.w	r1, [r3, #224]	@ 0xe0
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_COMPLETE);
9000b8aa:	651a      	str	r2, [r3, #80]	@ 0x50
      HAL_FDCAN_TxBufferCompleteCallback(hfdcan, TransmittedBuffers);
9000b8ac:	4001      	ands	r1, r0
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_COMPLETE);
9000b8ae:	4b04      	ldr	r3, [pc, #16]	@ (9000b8c0 <HAL_FDCAN_IRQHandler+0x2ac>)
9000b8b0:	2000      	movs	r0, #0
9000b8b2:	6118      	str	r0, [r3, #16]
      HAL_FDCAN_TxBufferCompleteCallback(hfdcan, TransmittedBuffers);
9000b8b4:	4620      	mov	r0, r4
9000b8b6:	f7ff fe95 	bl	9000b5e4 <HAL_FDCAN_TxBufferCompleteCallback>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_RX_BUFFER_NEW_MESSAGE);
9000b8ba:	6823      	ldr	r3, [r4, #0]
9000b8bc:	e6fa      	b.n	9000b6b4 <HAL_FDCAN_IRQHandler+0xa0>
9000b8be:	bf00      	nop
9000b8c0:	4000a800 	.word	0x4000a800
9000b8c4:	4000a000 	.word	0x4000a000
9000b8c8:	f44f 2100 	mov.w	r1, #524288	@ 0x80000
      HAL_FDCAN_RxBufferNewMessageCallback(hfdcan);
9000b8cc:	4620      	mov	r0, r4
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_RX_BUFFER_NEW_MESSAGE);
9000b8ce:	6519      	str	r1, [r3, #80]	@ 0x50
9000b8d0:	2100      	movs	r1, #0
9000b8d2:	4b1b      	ldr	r3, [pc, #108]	@ (9000b940 <HAL_FDCAN_IRQHandler+0x32c>)
9000b8d4:	6119      	str	r1, [r3, #16]
      HAL_FDCAN_RxBufferNewMessageCallback(hfdcan);
9000b8d6:	f7ff fe89 	bl	9000b5ec <HAL_FDCAN_RxBufferNewMessageCallback>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TIMESTAMP_WRAPAROUND);
9000b8da:	6823      	ldr	r3, [r4, #0]
9000b8dc:	e6f0      	b.n	9000b6c0 <HAL_FDCAN_IRQHandler+0xac>
9000b8de:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
      HAL_FDCAN_TimestampWraparoundCallback(hfdcan);
9000b8e2:	4620      	mov	r0, r4
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TIMESTAMP_WRAPAROUND);
9000b8e4:	6519      	str	r1, [r3, #80]	@ 0x50
9000b8e6:	2100      	movs	r1, #0
9000b8e8:	4b15      	ldr	r3, [pc, #84]	@ (9000b940 <HAL_FDCAN_IRQHandler+0x32c>)
9000b8ea:	6119      	str	r1, [r3, #16]
      HAL_FDCAN_TimestampWraparoundCallback(hfdcan);
9000b8ec:	f7ff fe80 	bl	9000b5f0 <HAL_FDCAN_TimestampWraparoundCallback>
      __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TIMEOUT_OCCURRED);
9000b8f0:	6823      	ldr	r3, [r4, #0]
9000b8f2:	e6eb      	b.n	9000b6cc <HAL_FDCAN_IRQHandler+0xb8>
        __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTGlobTimeITs);
9000b8f4:	6863      	ldr	r3, [r4, #4]
        HAL_FDCAN_TT_GlobalTimeCallback(hfdcan, TTGlobTimeITs);
9000b8f6:	4639      	mov	r1, r7
9000b8f8:	4620      	mov	r0, r4
        __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTGlobTimeITs);
9000b8fa:	621f      	str	r7, [r3, #32]
        HAL_FDCAN_TT_GlobalTimeCallback(hfdcan, TTGlobTimeITs);
9000b8fc:	f7ff fe88 	bl	9000b610 <HAL_FDCAN_TT_GlobalTimeCallback>
9000b900:	e787      	b.n	9000b812 <HAL_FDCAN_IRQHandler+0x1fe>
        HAL_FDCAN_TT_ScheduleSyncCallback(hfdcan, TTSchedSyncITs);
9000b902:	4620      	mov	r0, r4
        __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTSchedSyncITs);
9000b904:	6219      	str	r1, [r3, #32]
        HAL_FDCAN_TT_ScheduleSyncCallback(hfdcan, TTSchedSyncITs);
9000b906:	f7ff fe7d 	bl	9000b604 <HAL_FDCAN_TT_ScheduleSyncCallback>
9000b90a:	e776      	b.n	9000b7fa <HAL_FDCAN_IRQHandler+0x1e6>
          SWTime = ((hfdcan->ttcan->TTCPT & FDCAN_TTCPT_SWV) >> FDCAN_TTCPT_SWV_Pos);
9000b90c:	6863      	ldr	r3, [r4, #4]
          __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, FDCAN_TT_FLAG_STOP_WATCH);
9000b90e:	f04f 0c40 	mov.w	ip, #64	@ 0x40
          HAL_FDCAN_TT_StopWatchCallback(hfdcan, SWTime, SWCycleCount);
9000b912:	4620      	mov	r0, r4
          SWTime = ((hfdcan->ttcan->TTCPT & FDCAN_TTCPT_SWV) >> FDCAN_TTCPT_SWV_Pos);
9000b914:	6bd9      	ldr	r1, [r3, #60]	@ 0x3c
          SWCycleCount = ((hfdcan->ttcan->TTCPT & FDCAN_TTCPT_CCV) >> FDCAN_TTCPT_CCV_Pos);
9000b916:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
          HAL_FDCAN_TT_StopWatchCallback(hfdcan, SWTime, SWCycleCount);
9000b918:	0c09      	lsrs	r1, r1, #16
          __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, FDCAN_TT_FLAG_STOP_WATCH);
9000b91a:	f8c3 c020 	str.w	ip, [r3, #32]
          HAL_FDCAN_TT_StopWatchCallback(hfdcan, SWTime, SWCycleCount);
9000b91e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9000b922:	f7ff fe73 	bl	9000b60c <HAL_FDCAN_TT_StopWatchCallback>
      if (TTGlobTimeITs != 0U)
9000b926:	2f00      	cmp	r7, #0
9000b928:	f43f af73 	beq.w	9000b812 <HAL_FDCAN_IRQHandler+0x1fe>
9000b92c:	e7e2      	b.n	9000b8f4 <HAL_FDCAN_IRQHandler+0x2e0>
        __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTTimeMarkITs);
9000b92e:	6863      	ldr	r3, [r4, #4]
        HAL_FDCAN_TT_TimeMarkCallback(hfdcan, TTTimeMarkITs);
9000b930:	4641      	mov	r1, r8
9000b932:	4620      	mov	r0, r4
        __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTTimeMarkITs);
9000b934:	f8c3 8020 	str.w	r8, [r3, #32]
        HAL_FDCAN_TT_TimeMarkCallback(hfdcan, TTTimeMarkITs);
9000b938:	f7ff fe66 	bl	9000b608 <HAL_FDCAN_TT_TimeMarkCallback>
9000b93c:	e761      	b.n	9000b802 <HAL_FDCAN_IRQHandler+0x1ee>
9000b93e:	bf00      	nop
9000b940:	4000a800 	.word	0x4000a800

9000b944 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
9000b944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000b948:	680c      	ldr	r4, [r1, #0]
{
9000b94a:	b085      	sub	sp, #20
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000b94c:	2c00      	cmp	r4, #0
9000b94e:	f000 80a5 	beq.w	9000ba9c <HAL_GPIO_Init+0x158>
  uint32_t position = 0x00U;
9000b952:	2300      	movs	r3, #0
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000b954:	f04f 0b01 	mov.w	fp, #1
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
9000b958:	f04f 4eb0 	mov.w	lr, #1476395008	@ 0x58000000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000b95c:	9100      	str	r1, [sp, #0]
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000b95e:	fa0b fc03 	lsl.w	ip, fp, r3
    if (iocurrent != 0x00U)
9000b962:	ea1c 0a04 	ands.w	sl, ip, r4
9000b966:	f000 8094 	beq.w	9000ba92 <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000b96a:	9900      	ldr	r1, [sp, #0]
9000b96c:	005f      	lsls	r7, r3, #1
9000b96e:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000b970:	2103      	movs	r1, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000b972:	f005 0203 	and.w	r2, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000b976:	fa01 f607 	lsl.w	r6, r1, r7
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000b97a:	f102 38ff 	add.w	r8, r2, #4294967295
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000b97e:	43f6      	mvns	r6, r6
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000b980:	f1b8 0f01 	cmp.w	r8, #1
9000b984:	f240 808d 	bls.w	9000baa2 <HAL_GPIO_Init+0x15e>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
9000b988:	2a03      	cmp	r2, #3
9000b98a:	f040 80cb 	bne.w	9000bb24 <HAL_GPIO_Init+0x1e0>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
9000b98e:	40ba      	lsls	r2, r7
      temp = GPIOx->MODER;
9000b990:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000b992:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
9000b996:	ea06 0607 	and.w	r6, r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
9000b99a:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
9000b99e:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000b9a0:	d077      	beq.n	9000ba92 <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000b9a2:	4e7f      	ldr	r6, [pc, #508]	@ (9000bba0 <HAL_GPIO_Init+0x25c>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000b9a4:	f003 0703 	and.w	r7, r3, #3
9000b9a8:	210f      	movs	r1, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000b9aa:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000b9ae:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000b9b0:	f042 0202 	orr.w	r2, r2, #2
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000b9b4:	fa01 fc07 	lsl.w	ip, r1, r7
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000b9b8:	497a      	ldr	r1, [pc, #488]	@ (9000bba4 <HAL_GPIO_Init+0x260>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000b9ba:	f8c6 20f4 	str.w	r2, [r6, #244]	@ 0xf4
9000b9be:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
9000b9c2:	f023 0603 	bic.w	r6, r3, #3
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000b9c6:	4288      	cmp	r0, r1
9000b9c8:	f106 46b0 	add.w	r6, r6, #1476395008	@ 0x58000000
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000b9cc:	f002 0202 	and.w	r2, r2, #2
9000b9d0:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
9000b9d4:	9203      	str	r2, [sp, #12]
9000b9d6:	9a03      	ldr	r2, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
9000b9d8:	68b2      	ldr	r2, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000b9da:	ea22 020c 	bic.w	r2, r2, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000b9de:	d031      	beq.n	9000ba44 <HAL_GPIO_Init+0x100>
9000b9e0:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000b9e4:	4288      	cmp	r0, r1
9000b9e6:	f000 80b0 	beq.w	9000bb4a <HAL_GPIO_Init+0x206>
9000b9ea:	496f      	ldr	r1, [pc, #444]	@ (9000bba8 <HAL_GPIO_Init+0x264>)
9000b9ec:	4288      	cmp	r0, r1
9000b9ee:	f000 80b2 	beq.w	9000bb56 <HAL_GPIO_Init+0x212>
9000b9f2:	f8df c1b8 	ldr.w	ip, [pc, #440]	@ 9000bbac <HAL_GPIO_Init+0x268>
9000b9f6:	4560      	cmp	r0, ip
9000b9f8:	f000 80a1 	beq.w	9000bb3e <HAL_GPIO_Init+0x1fa>
9000b9fc:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 9000bbb0 <HAL_GPIO_Init+0x26c>
9000ba00:	4560      	cmp	r0, ip
9000ba02:	f000 80b4 	beq.w	9000bb6e <HAL_GPIO_Init+0x22a>
9000ba06:	f8df c1ac 	ldr.w	ip, [pc, #428]	@ 9000bbb4 <HAL_GPIO_Init+0x270>
9000ba0a:	4560      	cmp	r0, ip
9000ba0c:	f000 80b5 	beq.w	9000bb7a <HAL_GPIO_Init+0x236>
9000ba10:	f8df c1a4 	ldr.w	ip, [pc, #420]	@ 9000bbb8 <HAL_GPIO_Init+0x274>
9000ba14:	4560      	cmp	r0, ip
9000ba16:	f000 80a4 	beq.w	9000bb62 <HAL_GPIO_Init+0x21e>
9000ba1a:	f8df c1a0 	ldr.w	ip, [pc, #416]	@ 9000bbbc <HAL_GPIO_Init+0x278>
9000ba1e:	4560      	cmp	r0, ip
9000ba20:	f000 80b1 	beq.w	9000bb86 <HAL_GPIO_Init+0x242>
9000ba24:	f8df c198 	ldr.w	ip, [pc, #408]	@ 9000bbc0 <HAL_GPIO_Init+0x27c>
9000ba28:	4560      	cmp	r0, ip
9000ba2a:	f000 80b2 	beq.w	9000bb92 <HAL_GPIO_Init+0x24e>
9000ba2e:	f8df c194 	ldr.w	ip, [pc, #404]	@ 9000bbc4 <HAL_GPIO_Init+0x280>
9000ba32:	4560      	cmp	r0, ip
9000ba34:	bf0c      	ite	eq
9000ba36:	f04f 0c09 	moveq.w	ip, #9
9000ba3a:	f04f 0c0a 	movne.w	ip, #10
9000ba3e:	fa0c f707 	lsl.w	r7, ip, r7
9000ba42:	433a      	orrs	r2, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
9000ba44:	60b2      	str	r2, [r6, #8]
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
9000ba46:	02ef      	lsls	r7, r5, #11
        temp = EXTI->RTSR1;
9000ba48:	f8de 2000 	ldr.w	r2, [lr]
        temp &= ~(iocurrent);
9000ba4c:	ea6f 060a 	mvn.w	r6, sl
        {
          temp |= iocurrent;
9000ba50:	bf4c      	ite	mi
9000ba52:	ea4a 0202 	orrmi.w	r2, sl, r2
        temp &= ~(iocurrent);
9000ba56:	4032      	andpl	r2, r6
        }
        EXTI->RTSR1 = temp;

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
9000ba58:	02a9      	lsls	r1, r5, #10
        EXTI->RTSR1 = temp;
9000ba5a:	f8ce 2000 	str.w	r2, [lr]
        temp = EXTI->FTSR1;
9000ba5e:	f8de 2004 	ldr.w	r2, [lr, #4]
        temp &= ~(iocurrent);
9000ba62:	bf54      	ite	pl
9000ba64:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
9000ba66:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI->FTSR1 = temp;

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
9000ba6a:	03af      	lsls	r7, r5, #14
        EXTI->FTSR1 = temp;
9000ba6c:	f8ce 2004 	str.w	r2, [lr, #4]
        temp = EXTI_CurrentCPU->EMR1;
9000ba70:	f8de 2084 	ldr.w	r2, [lr, #132]	@ 0x84
        temp &= ~(iocurrent);
9000ba74:	bf54      	ite	pl
9000ba76:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
9000ba78:	ea4a 0202 	orrmi.w	r2, sl, r2
        EXTI_CurrentCPU->EMR1 = temp;

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
9000ba7c:	03e9      	lsls	r1, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
9000ba7e:	f8ce 2084 	str.w	r2, [lr, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
9000ba82:	f8de 2080 	ldr.w	r2, [lr, #128]	@ 0x80
        temp &= ~(iocurrent);
9000ba86:	bf54      	ite	pl
9000ba88:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
9000ba8a:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI_CurrentCPU->IMR1 = temp;
9000ba8e:	f8ce 2080 	str.w	r2, [lr, #128]	@ 0x80
      }
    }

    position++;
9000ba92:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000ba94:	fa34 f203 	lsrs.w	r2, r4, r3
9000ba98:	f47f af61 	bne.w	9000b95e <HAL_GPIO_Init+0x1a>
  }
}
9000ba9c:	b005      	add	sp, #20
9000ba9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
9000baa2:	9900      	ldr	r1, [sp, #0]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000baa4:	2a02      	cmp	r2, #2
        temp = GPIOx->OSPEEDR;
9000baa6:	f8d0 9008 	ldr.w	r9, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
9000baaa:	68c9      	ldr	r1, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000baac:	ea09 0906 	and.w	r9, r9, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
9000bab0:	fa01 f807 	lsl.w	r8, r1, r7
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000bab4:	9900      	ldr	r1, [sp, #0]
        temp |= (GPIO_Init->Speed << (position * 2U));
9000bab6:	ea48 0809 	orr.w	r8, r8, r9
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000baba:	6889      	ldr	r1, [r1, #8]
        GPIOx->OSPEEDR = temp;
9000babc:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000bac0:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
9000bac4:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000bac8:	fa08 f803 	lsl.w	r8, r8, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
9000bacc:	ea29 0c0c 	bic.w	ip, r9, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000bad0:	ea48 0c0c 	orr.w	ip, r8, ip
        GPIOx->OTYPER = temp;
9000bad4:	f8c0 c004 	str.w	ip, [r0, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000bad8:	fa01 fc07 	lsl.w	ip, r1, r7
      temp = GPIOx->PUPDR;
9000badc:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000bae0:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000bae4:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
9000bae8:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000baec:	f47f af4f 	bne.w	9000b98e <HAL_GPIO_Init+0x4a>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000baf0:	f003 0c07 	and.w	ip, r3, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000baf4:	9900      	ldr	r1, [sp, #0]
        temp = GPIOx->AFR[position >> 3U];
9000baf6:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000bafa:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000bafe:	6909      	ldr	r1, [r1, #16]
9000bb00:	eb00 0888 	add.w	r8, r0, r8, lsl #2
9000bb04:	fa01 f10c 	lsl.w	r1, r1, ip
        temp = GPIOx->AFR[position >> 3U];
9000bb08:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000bb0c:	9101      	str	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000bb0e:	210f      	movs	r1, #15
9000bb10:	fa01 fc0c 	lsl.w	ip, r1, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000bb14:	9901      	ldr	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000bb16:	ea29 090c 	bic.w	r9, r9, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000bb1a:	ea41 0c09 	orr.w	ip, r1, r9
        GPIOx->AFR[position >> 3U] = temp;
9000bb1e:	f8c8 c020 	str.w	ip, [r8, #32]
9000bb22:	e734      	b.n	9000b98e <HAL_GPIO_Init+0x4a>
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000bb24:	9900      	ldr	r1, [sp, #0]
      temp = GPIOx->PUPDR;
9000bb26:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000bb2a:	6889      	ldr	r1, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000bb2c:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000bb30:	fa01 fc07 	lsl.w	ip, r1, r7
9000bb34:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
9000bb38:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000bb3c:	e727      	b.n	9000b98e <HAL_GPIO_Init+0x4a>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000bb3e:	f04f 0c03 	mov.w	ip, #3
9000bb42:	fa0c f707 	lsl.w	r7, ip, r7
9000bb46:	433a      	orrs	r2, r7
9000bb48:	e77c      	b.n	9000ba44 <HAL_GPIO_Init+0x100>
9000bb4a:	f04f 0c01 	mov.w	ip, #1
9000bb4e:	fa0c f707 	lsl.w	r7, ip, r7
9000bb52:	433a      	orrs	r2, r7
9000bb54:	e776      	b.n	9000ba44 <HAL_GPIO_Init+0x100>
9000bb56:	f04f 0c02 	mov.w	ip, #2
9000bb5a:	fa0c f707 	lsl.w	r7, ip, r7
9000bb5e:	433a      	orrs	r2, r7
9000bb60:	e770      	b.n	9000ba44 <HAL_GPIO_Init+0x100>
9000bb62:	f04f 0c06 	mov.w	ip, #6
9000bb66:	fa0c f707 	lsl.w	r7, ip, r7
9000bb6a:	433a      	orrs	r2, r7
9000bb6c:	e76a      	b.n	9000ba44 <HAL_GPIO_Init+0x100>
9000bb6e:	f04f 0c04 	mov.w	ip, #4
9000bb72:	fa0c f707 	lsl.w	r7, ip, r7
9000bb76:	433a      	orrs	r2, r7
9000bb78:	e764      	b.n	9000ba44 <HAL_GPIO_Init+0x100>
9000bb7a:	f04f 0c05 	mov.w	ip, #5
9000bb7e:	fa0c f707 	lsl.w	r7, ip, r7
9000bb82:	433a      	orrs	r2, r7
9000bb84:	e75e      	b.n	9000ba44 <HAL_GPIO_Init+0x100>
9000bb86:	f04f 0c07 	mov.w	ip, #7
9000bb8a:	fa0c f707 	lsl.w	r7, ip, r7
9000bb8e:	433a      	orrs	r2, r7
9000bb90:	e758      	b.n	9000ba44 <HAL_GPIO_Init+0x100>
9000bb92:	f04f 0c08 	mov.w	ip, #8
9000bb96:	fa0c f707 	lsl.w	r7, ip, r7
9000bb9a:	433a      	orrs	r2, r7
9000bb9c:	e752      	b.n	9000ba44 <HAL_GPIO_Init+0x100>
9000bb9e:	bf00      	nop
9000bba0:	58024400 	.word	0x58024400
9000bba4:	58020000 	.word	0x58020000
9000bba8:	58020800 	.word	0x58020800
9000bbac:	58020c00 	.word	0x58020c00
9000bbb0:	58021000 	.word	0x58021000
9000bbb4:	58021400 	.word	0x58021400
9000bbb8:	58021800 	.word	0x58021800
9000bbbc:	58021c00 	.word	0x58021c00
9000bbc0:	58022000 	.word	0x58022000
9000bbc4:	58022400 	.word	0x58022400

9000bbc8 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
9000bbc8:	2900      	cmp	r1, #0
9000bbca:	f000 80ac 	beq.w	9000bd26 <HAL_GPIO_DeInit+0x15e>
  uint32_t position = 0x00U;
9000bbce:	2300      	movs	r3, #0
{
9000bbd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  {
    /* Get current io position */
    iocurrent = GPIO_Pin & (1UL << position) ;
9000bbd4:	2601      	movs	r6, #1
{
9000bbd6:	b083      	sub	sp, #12
9000bbd8:	f8df a168 	ldr.w	sl, [pc, #360]	@ 9000bd44 <HAL_GPIO_DeInit+0x17c>
    if (iocurrent != 0x00U)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000bbdc:	f04f 080f 	mov.w	r8, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000bbe0:	f04f 0903 	mov.w	r9, #3
    iocurrent = GPIO_Pin & (1UL << position) ;
9000bbe4:	fa06 f203 	lsl.w	r2, r6, r3
    if (iocurrent != 0x00U)
9000bbe8:	ea12 0c01 	ands.w	ip, r2, r1
9000bbec:	d073      	beq.n	9000bcd6 <HAL_GPIO_DeInit+0x10e>
      tmp = SYSCFG->EXTICR[position >> 2U];
9000bbee:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000bbf2:	f003 0403 	and.w	r4, r3, #3
9000bbf6:	4455      	add	r5, sl
9000bbf8:	00a4      	lsls	r4, r4, #2
      tmp = SYSCFG->EXTICR[position >> 2U];
9000bbfa:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000bbfc:	fa08 fe04 	lsl.w	lr, r8, r4
9000bc00:	ea0e 0707 	and.w	r7, lr, r7
9000bc04:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000bc06:	4f4b      	ldr	r7, [pc, #300]	@ (9000bd34 <HAL_GPIO_DeInit+0x16c>)
9000bc08:	42b8      	cmp	r0, r7
9000bc0a:	d027      	beq.n	9000bc5c <HAL_GPIO_DeInit+0x94>
9000bc0c:	f507 6780 	add.w	r7, r7, #1024	@ 0x400
9000bc10:	42b8      	cmp	r0, r7
9000bc12:	d067      	beq.n	9000bce4 <HAL_GPIO_DeInit+0x11c>
9000bc14:	4f48      	ldr	r7, [pc, #288]	@ (9000bd38 <HAL_GPIO_DeInit+0x170>)
9000bc16:	42b8      	cmp	r0, r7
9000bc18:	d067      	beq.n	9000bcea <HAL_GPIO_DeInit+0x122>
9000bc1a:	4f48      	ldr	r7, [pc, #288]	@ (9000bd3c <HAL_GPIO_DeInit+0x174>)
9000bc1c:	42b8      	cmp	r0, r7
9000bc1e:	d06e      	beq.n	9000bcfe <HAL_GPIO_DeInit+0x136>
9000bc20:	4f47      	ldr	r7, [pc, #284]	@ (9000bd40 <HAL_GPIO_DeInit+0x178>)
9000bc22:	42b8      	cmp	r0, r7
9000bc24:	d070      	beq.n	9000bd08 <HAL_GPIO_DeInit+0x140>
9000bc26:	f8df b120 	ldr.w	fp, [pc, #288]	@ 9000bd48 <HAL_GPIO_DeInit+0x180>
9000bc2a:	4558      	cmp	r0, fp
9000bc2c:	d062      	beq.n	9000bcf4 <HAL_GPIO_DeInit+0x12c>
9000bc2e:	f8df b11c 	ldr.w	fp, [pc, #284]	@ 9000bd4c <HAL_GPIO_DeInit+0x184>
9000bc32:	4558      	cmp	r0, fp
9000bc34:	d072      	beq.n	9000bd1c <HAL_GPIO_DeInit+0x154>
9000bc36:	f8df b118 	ldr.w	fp, [pc, #280]	@ 9000bd50 <HAL_GPIO_DeInit+0x188>
9000bc3a:	4558      	cmp	r0, fp
9000bc3c:	d074      	beq.n	9000bd28 <HAL_GPIO_DeInit+0x160>
9000bc3e:	f8df b114 	ldr.w	fp, [pc, #276]	@ 9000bd54 <HAL_GPIO_DeInit+0x18c>
9000bc42:	4558      	cmp	r0, fp
9000bc44:	d065      	beq.n	9000bd12 <HAL_GPIO_DeInit+0x14a>
9000bc46:	f8df b110 	ldr.w	fp, [pc, #272]	@ 9000bd58 <HAL_GPIO_DeInit+0x190>
9000bc4a:	4558      	cmp	r0, fp
9000bc4c:	bf14      	ite	ne
9000bc4e:	f04f 0b0a 	movne.w	fp, #10
9000bc52:	f04f 0b09 	moveq.w	fp, #9
9000bc56:	fa0b f404 	lsl.w	r4, fp, r4
9000bc5a:	e000      	b.n	9000bc5e <HAL_GPIO_DeInit+0x96>
9000bc5c:	2400      	movs	r4, #0
9000bc5e:	9f01      	ldr	r7, [sp, #4]
9000bc60:	42a7      	cmp	r7, r4
9000bc62:	d119      	bne.n	9000bc98 <HAL_GPIO_DeInit+0xd0>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
9000bc64:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
9000bc68:	f8d4 7080 	ldr.w	r7, [r4, #128]	@ 0x80
9000bc6c:	ea27 070c 	bic.w	r7, r7, ip
9000bc70:	f8c4 7080 	str.w	r7, [r4, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
9000bc74:	f8d4 7084 	ldr.w	r7, [r4, #132]	@ 0x84
9000bc78:	ea27 070c 	bic.w	r7, r7, ip
9000bc7c:	f8c4 7084 	str.w	r7, [r4, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
9000bc80:	6867      	ldr	r7, [r4, #4]
9000bc82:	ea27 070c 	bic.w	r7, r7, ip
9000bc86:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
9000bc88:	6827      	ldr	r7, [r4, #0]
9000bc8a:	ea27 070c 	bic.w	r7, r7, ip
9000bc8e:	6027      	str	r7, [r4, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
9000bc90:	68ac      	ldr	r4, [r5, #8]
9000bc92:	ea24 040e 	bic.w	r4, r4, lr
9000bc96:	60ac      	str	r4, [r5, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000bc98:	005d      	lsls	r5, r3, #1
9000bc9a:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000bc9c:	08df      	lsrs	r7, r3, #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000bc9e:	fa09 f505 	lsl.w	r5, r9, r5
9000bca2:	eb00 0787 	add.w	r7, r0, r7, lsl #2
9000bca6:	432c      	orrs	r4, r5
9000bca8:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000bcaa:	f003 0407 	and.w	r4, r3, #7
9000bcae:	f8d7 c020 	ldr.w	ip, [r7, #32]
9000bcb2:	00a4      	lsls	r4, r4, #2
9000bcb4:	fa08 f404 	lsl.w	r4, r8, r4
9000bcb8:	ea2c 0404 	bic.w	r4, ip, r4
9000bcbc:	623c      	str	r4, [r7, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000bcbe:	68c4      	ldr	r4, [r0, #12]
9000bcc0:	ea24 0405 	bic.w	r4, r4, r5
9000bcc4:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
9000bcc6:	6844      	ldr	r4, [r0, #4]
9000bcc8:	ea24 0202 	bic.w	r2, r4, r2
9000bccc:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000bcce:	6882      	ldr	r2, [r0, #8]
9000bcd0:	ea22 0205 	bic.w	r2, r2, r5
9000bcd4:	6082      	str	r2, [r0, #8]
    }

    position++;
9000bcd6:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
9000bcd8:	fa31 f203 	lsrs.w	r2, r1, r3
9000bcdc:	d182      	bne.n	9000bbe4 <HAL_GPIO_DeInit+0x1c>
  }
}
9000bcde:	b003      	add	sp, #12
9000bce0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000bce4:	fa06 f404 	lsl.w	r4, r6, r4
9000bce8:	e7b9      	b.n	9000bc5e <HAL_GPIO_DeInit+0x96>
9000bcea:	f04f 0b02 	mov.w	fp, #2
9000bcee:	fa0b f404 	lsl.w	r4, fp, r4
9000bcf2:	e7b4      	b.n	9000bc5e <HAL_GPIO_DeInit+0x96>
9000bcf4:	f04f 0b05 	mov.w	fp, #5
9000bcf8:	fa0b f404 	lsl.w	r4, fp, r4
9000bcfc:	e7af      	b.n	9000bc5e <HAL_GPIO_DeInit+0x96>
9000bcfe:	f04f 0b03 	mov.w	fp, #3
9000bd02:	fa0b f404 	lsl.w	r4, fp, r4
9000bd06:	e7aa      	b.n	9000bc5e <HAL_GPIO_DeInit+0x96>
9000bd08:	f04f 0b04 	mov.w	fp, #4
9000bd0c:	fa0b f404 	lsl.w	r4, fp, r4
9000bd10:	e7a5      	b.n	9000bc5e <HAL_GPIO_DeInit+0x96>
9000bd12:	f04f 0b08 	mov.w	fp, #8
9000bd16:	fa0b f404 	lsl.w	r4, fp, r4
9000bd1a:	e7a0      	b.n	9000bc5e <HAL_GPIO_DeInit+0x96>
9000bd1c:	f04f 0b06 	mov.w	fp, #6
9000bd20:	fa0b f404 	lsl.w	r4, fp, r4
9000bd24:	e79b      	b.n	9000bc5e <HAL_GPIO_DeInit+0x96>
9000bd26:	4770      	bx	lr
9000bd28:	f04f 0b07 	mov.w	fp, #7
9000bd2c:	fa0b f404 	lsl.w	r4, fp, r4
9000bd30:	e795      	b.n	9000bc5e <HAL_GPIO_DeInit+0x96>
9000bd32:	bf00      	nop
9000bd34:	58020000 	.word	0x58020000
9000bd38:	58020800 	.word	0x58020800
9000bd3c:	58020c00 	.word	0x58020c00
9000bd40:	58021000 	.word	0x58021000
9000bd44:	58000400 	.word	0x58000400
9000bd48:	58021400 	.word	0x58021400
9000bd4c:	58021800 	.word	0x58021800
9000bd50:	58021c00 	.word	0x58021c00
9000bd54:	58022000 	.word	0x58022000
9000bd58:	58022400 	.word	0x58022400

9000bd5c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
9000bd5c:	6903      	ldr	r3, [r0, #16]
9000bd5e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
9000bd60:	bf14      	ite	ne
9000bd62:	2001      	movne	r0, #1
9000bd64:	2000      	moveq	r0, #0
9000bd66:	4770      	bx	lr

9000bd68 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
9000bd68:	b902      	cbnz	r2, 9000bd6c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
9000bd6a:	0409      	lsls	r1, r1, #16
9000bd6c:	6181      	str	r1, [r0, #24]
  }
}
9000bd6e:	4770      	bx	lr

9000bd70 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
9000bd70:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
9000bd72:	ea01 0203 	and.w	r2, r1, r3
9000bd76:	ea21 0103 	bic.w	r1, r1, r3
9000bd7a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000bd7e:	6181      	str	r1, [r0, #24]
}
9000bd80:	4770      	bx	lr
9000bd82:	bf00      	nop

9000bd84 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
9000bd84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9000bd88:	6803      	ldr	r3, [r0, #0]
{
9000bd8a:	4680      	mov	r8, r0
9000bd8c:	460d      	mov	r5, r1
9000bd8e:	4692      	mov	sl, r2
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000bd90:	2710      	movs	r7, #16
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9000bd92:	699c      	ldr	r4, [r3, #24]
9000bd94:	f014 0402 	ands.w	r4, r4, #2
9000bd98:	f040 80a5 	bne.w	9000bee6 <I2C_WaitOnTXISFlagUntilTimeout+0x162>
  uint32_t itflag   = hi2c->Instance->ISR;
9000bd9c:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000bd9e:	f012 0c10 	ands.w	ip, r2, #16
9000bda2:	d078      	beq.n	9000be96 <I2C_WaitOnTXISFlagUntilTimeout+0x112>
  uint32_t tickstart = Tickstart;
9000bda4:	46d1      	mov	r9, sl
  HAL_StatusTypeDef status = HAL_OK;
9000bda6:	4626      	mov	r6, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000bda8:	61df      	str	r7, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000bdaa:	1c68      	adds	r0, r5, #1
9000bdac:	d001      	beq.n	9000bdb2 <I2C_WaitOnTXISFlagUntilTimeout+0x2e>
9000bdae:	e041      	b.n	9000be34 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
9000bdb0:	b92e      	cbnz	r6, 9000bdbe <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
9000bdb2:	699a      	ldr	r2, [r3, #24]
9000bdb4:	0691      	lsls	r1, r2, #26
9000bdb6:	d5fb      	bpl.n	9000bdb0 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
9000bdb8:	b90e      	cbnz	r6, 9000bdbe <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000bdba:	2220      	movs	r2, #32
9000bdbc:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
9000bdbe:	699a      	ldr	r2, [r3, #24]
    error_code |= HAL_I2C_ERROR_AF;
9000bdc0:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
9000bdc4:	2101      	movs	r1, #1

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000bdc6:	05d0      	lsls	r0, r2, #23
9000bdc8:	d569      	bpl.n	9000be9e <I2C_WaitOnTXISFlagUntilTimeout+0x11a>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000bdca:	f44f 7180 	mov.w	r1, #256	@ 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000bdce:	0557      	lsls	r7, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000bdd0:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000bdd4:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000bdd6:	d504      	bpl.n	9000bde2 <I2C_WaitOnTXISFlagUntilTimeout+0x5e>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000bdd8:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
9000bddc:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000bde0:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000bde2:	0595      	lsls	r5, r2, #22
9000bde4:	d504      	bpl.n	9000bdf0 <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000bde6:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000bdea:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000bdee:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000bdf0:	699a      	ldr	r2, [r3, #24]
9000bdf2:	0790      	lsls	r0, r2, #30
9000bdf4:	d501      	bpl.n	9000bdfa <I2C_WaitOnTXISFlagUntilTimeout+0x76>
    hi2c->Instance->TXDR = 0x00U;
9000bdf6:	2200      	movs	r2, #0
9000bdf8:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000bdfa:	699a      	ldr	r2, [r3, #24]
9000bdfc:	07d1      	lsls	r1, r2, #31
9000bdfe:	d403      	bmi.n	9000be08 <I2C_WaitOnTXISFlagUntilTimeout+0x84>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000be00:	699a      	ldr	r2, [r3, #24]
9000be02:	f042 0201 	orr.w	r2, r2, #1
9000be06:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
9000be08:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
9000be0a:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
9000be0c:	4c37      	ldr	r4, [pc, #220]	@ (9000beec <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000be0e:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000be10:	4022      	ands	r2, r4
9000be12:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000be14:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
9000be18:	ea43 030c 	orr.w	r3, r3, ip
9000be1c:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000be20:	f888 0041 	strb.w	r0, [r8, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000be24:	f888 1042 	strb.w	r1, [r8, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
9000be28:	2300      	movs	r3, #0
      return HAL_ERROR;
9000be2a:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000be2c:	f888 3040 	strb.w	r3, [r8, #64]	@ 0x40
}
9000be30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000be34:	699a      	ldr	r2, [r3, #24]
9000be36:	0692      	lsls	r2, r2, #26
9000be38:	d4be      	bmi.n	9000bdb8 <I2C_WaitOnTXISFlagUntilTimeout+0x34>
9000be3a:	2e00      	cmp	r6, #0
9000be3c:	d1bf      	bne.n	9000bdbe <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000be3e:	f7fe fdeb 	bl	9000aa18 <HAL_GetTick>
9000be42:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000be46:	f8d8 3000 	ldr.w	r3, [r8]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000be4a:	4285      	cmp	r5, r0
9000be4c:	d301      	bcc.n	9000be52 <I2C_WaitOnTXISFlagUntilTimeout+0xce>
9000be4e:	2d00      	cmp	r5, #0
9000be50:	d1f0      	bne.n	9000be34 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000be52:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000be54:	f898 2042 	ldrb.w	r2, [r8, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000be58:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000be5a:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000be5c:	0409      	lsls	r1, r1, #16
9000be5e:	d50c      	bpl.n	9000be7a <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              (tmp1 != I2C_CR2_STOP) && \
9000be60:	0441      	lsls	r1, r0, #17
9000be62:	d40a      	bmi.n	9000be7a <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
9000be64:	2a20      	cmp	r2, #32
9000be66:	d008      	beq.n	9000be7a <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000be68:	685a      	ldr	r2, [r3, #4]
9000be6a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000be6e:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000be70:	f7fe fdd2 	bl	9000aa18 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000be74:	f8d8 3000 	ldr.w	r3, [r8]
            tickstart = HAL_GetTick();
9000be78:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000be7a:	699a      	ldr	r2, [r3, #24]
9000be7c:	0692      	lsls	r2, r2, #26
9000be7e:	d494      	bmi.n	9000bdaa <I2C_WaitOnTXISFlagUntilTimeout+0x26>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000be80:	f7fe fdca 	bl	9000aa18 <HAL_GetTick>
9000be84:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000be88:	f8d8 3000 	ldr.w	r3, [r8]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000be8c:	2819      	cmp	r0, #25
9000be8e:	d9f4      	bls.n	9000be7a <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000be90:	2420      	movs	r4, #32
              status = HAL_ERROR;
9000be92:	2601      	movs	r6, #1
9000be94:	e789      	b.n	9000bdaa <I2C_WaitOnTXISFlagUntilTimeout+0x26>
  itflag = hi2c->Instance->ISR;
9000be96:	699a      	ldr	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
9000be98:	4661      	mov	r1, ip
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000be9a:	05d0      	lsls	r0, r2, #23
9000be9c:	d495      	bmi.n	9000bdca <I2C_WaitOnTXISFlagUntilTimeout+0x46>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000be9e:	0556      	lsls	r6, r2, #21
9000bea0:	d49a      	bmi.n	9000bdd8 <I2C_WaitOnTXISFlagUntilTimeout+0x54>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000bea2:	0594      	lsls	r4, r2, #22
9000bea4:	d49f      	bmi.n	9000bde6 <I2C_WaitOnTXISFlagUntilTimeout+0x62>
  if (status != HAL_OK)
9000bea6:	2900      	cmp	r1, #0
9000bea8:	d1a2      	bne.n	9000bdf0 <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
    if (Timeout != HAL_MAX_DELAY)
9000beaa:	1c6a      	adds	r2, r5, #1
9000beac:	f43f af71 	beq.w	9000bd92 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000beb0:	f7fe fdb2 	bl	9000aa18 <HAL_GetTick>
9000beb4:	eba0 030a 	sub.w	r3, r0, sl
9000beb8:	42ab      	cmp	r3, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000beba:	f8d8 3000 	ldr.w	r3, [r8]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000bebe:	d802      	bhi.n	9000bec6 <I2C_WaitOnTXISFlagUntilTimeout+0x142>
9000bec0:	2d00      	cmp	r5, #0
9000bec2:	f47f af65 	bne.w	9000bd90 <I2C_WaitOnTXISFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000bec6:	699a      	ldr	r2, [r3, #24]
9000bec8:	f012 0202 	ands.w	r2, r2, #2
9000becc:	f47f af60 	bne.w	9000bd90 <I2C_WaitOnTXISFlagUntilTimeout+0xc>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000bed0:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000bed4:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000bed6:	430b      	orrs	r3, r1
9000bed8:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000bedc:	f888 1041 	strb.w	r1, [r8, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000bee0:	f888 2042 	strb.w	r2, [r8, #66]	@ 0x42
          return HAL_ERROR;
9000bee4:	e7a0      	b.n	9000be28 <I2C_WaitOnTXISFlagUntilTimeout+0xa4>
  return HAL_OK;
9000bee6:	2000      	movs	r0, #0
}
9000bee8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000beec:	fe00e800 	.word	0xfe00e800

9000bef0 <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000bef0:	6803      	ldr	r3, [r0, #0]
{
9000bef2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000bef6:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000bef8:	699a      	ldr	r2, [r3, #24]
9000befa:	0694      	lsls	r4, r2, #26
9000befc:	f100 8092 	bmi.w	9000c024 <I2C_WaitOnSTOPFlagUntilTimeout+0x134>
9000bf00:	4605      	mov	r5, r0
9000bf02:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000bf04:	f04f 0810 	mov.w	r8, #16
  uint32_t itflag   = hi2c->Instance->ISR;
9000bf08:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000bf0a:	f012 0c10 	ands.w	ip, r2, #16
9000bf0e:	f000 808c 	beq.w	9000c02a <I2C_WaitOnSTOPFlagUntilTimeout+0x13a>
  uint32_t error_code = 0;
9000bf12:	2400      	movs	r4, #0
  uint32_t tickstart = Tickstart;
9000bf14:	46b9      	mov	r9, r7
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000bf16:	f8c3 801c 	str.w	r8, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
9000bf1a:	46a2      	mov	sl, r4
9000bf1c:	1c70      	adds	r0, r6, #1
9000bf1e:	d003      	beq.n	9000bf28 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
9000bf20:	e043      	b.n	9000bfaa <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000bf22:	f1ba 0f00 	cmp.w	sl, #0
9000bf26:	d107      	bne.n	9000bf38 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
9000bf28:	699a      	ldr	r2, [r3, #24]
9000bf2a:	0691      	lsls	r1, r2, #26
9000bf2c:	d5f9      	bpl.n	9000bf22 <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
    if (status == HAL_OK)
9000bf2e:	f1ba 0f00 	cmp.w	sl, #0
9000bf32:	d101      	bne.n	9000bf38 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000bf34:	2220      	movs	r2, #32
9000bf36:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
9000bf38:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
9000bf3c:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
9000bf3e:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000bf40:	05d0      	lsls	r0, r2, #23
9000bf42:	d55a      	bpl.n	9000bffa <I2C_WaitOnSTOPFlagUntilTimeout+0x10a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000bf44:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000bf48:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000bf4a:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000bf4e:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000bf50:	d504      	bpl.n	9000bf5c <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000bf52:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
9000bf56:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000bf5a:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000bf5c:	0596      	lsls	r6, r2, #22
9000bf5e:	d504      	bpl.n	9000bf6a <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000bf60:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000bf64:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000bf68:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000bf6a:	699a      	ldr	r2, [r3, #24]
9000bf6c:	0790      	lsls	r0, r2, #30
9000bf6e:	d501      	bpl.n	9000bf74 <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
9000bf70:	2200      	movs	r2, #0
9000bf72:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000bf74:	699a      	ldr	r2, [r3, #24]
9000bf76:	07d1      	lsls	r1, r2, #31
9000bf78:	d403      	bmi.n	9000bf82 <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000bf7a:	699a      	ldr	r2, [r3, #24]
9000bf7c:	f042 0201 	orr.w	r2, r2, #1
9000bf80:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
9000bf82:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000bf84:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
9000bf86:	4c33      	ldr	r4, [pc, #204]	@ (9000c054 <I2C_WaitOnSTOPFlagUntilTimeout+0x164>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000bf88:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000bf8a:	4022      	ands	r2, r4
9000bf8c:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000bf8e:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
9000bf90:	ea43 030c 	orr.w	r3, r3, ip
9000bf94:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000bf96:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000bf9a:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
9000bf9e:	2300      	movs	r3, #0
      return HAL_ERROR;
9000bfa0:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
9000bfa2:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
9000bfa6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000bfaa:	699a      	ldr	r2, [r3, #24]
9000bfac:	0692      	lsls	r2, r2, #26
9000bfae:	d4be      	bmi.n	9000bf2e <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
9000bfb0:	f1ba 0f00 	cmp.w	sl, #0
9000bfb4:	d1c0      	bne.n	9000bf38 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000bfb6:	f7fe fd2f 	bl	9000aa18 <HAL_GetTick>
9000bfba:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000bfbe:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000bfc0:	4286      	cmp	r6, r0
9000bfc2:	d301      	bcc.n	9000bfc8 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
9000bfc4:	2e00      	cmp	r6, #0
9000bfc6:	d1f0      	bne.n	9000bfaa <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000bfc8:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000bfca:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000bfce:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000bfd0:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000bfd2:	0409      	lsls	r1, r1, #16
9000bfd4:	d503      	bpl.n	9000bfde <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              (tmp1 != I2C_CR2_STOP) && \
9000bfd6:	0441      	lsls	r1, r0, #17
9000bfd8:	d401      	bmi.n	9000bfde <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
9000bfda:	2a20      	cmp	r2, #32
9000bfdc:	d130      	bne.n	9000c040 <I2C_WaitOnSTOPFlagUntilTimeout+0x150>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000bfde:	699a      	ldr	r2, [r3, #24]
9000bfe0:	0692      	lsls	r2, r2, #26
9000bfe2:	d49b      	bmi.n	9000bf1c <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000bfe4:	f7fe fd18 	bl	9000aa18 <HAL_GetTick>
9000bfe8:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000bfec:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000bfee:	2819      	cmp	r0, #25
9000bff0:	d9f5      	bls.n	9000bfde <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000bff2:	2420      	movs	r4, #32
              status = HAL_ERROR;
9000bff4:	f04f 0a01 	mov.w	sl, #1
9000bff8:	e790      	b.n	9000bf1c <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000bffa:	0550      	lsls	r0, r2, #21
9000bffc:	d4a9      	bmi.n	9000bf52 <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000bffe:	0594      	lsls	r4, r2, #22
9000c000:	d4ae      	bmi.n	9000bf60 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
9000c002:	2900      	cmp	r1, #0
9000c004:	d1b1      	bne.n	9000bf6a <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000c006:	f7fe fd07 	bl	9000aa18 <HAL_GetTick>
9000c00a:	1bc0      	subs	r0, r0, r7
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
9000c00c:	682b      	ldr	r3, [r5, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000c00e:	42b0      	cmp	r0, r6
9000c010:	d800      	bhi.n	9000c014 <I2C_WaitOnSTOPFlagUntilTimeout+0x124>
9000c012:	b91e      	cbnz	r6, 9000c01c <I2C_WaitOnSTOPFlagUntilTimeout+0x12c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
9000c014:	699a      	ldr	r2, [r3, #24]
9000c016:	f012 0220 	ands.w	r2, r2, #32
9000c01a:	d008      	beq.n	9000c02e <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000c01c:	699a      	ldr	r2, [r3, #24]
9000c01e:	0692      	lsls	r2, r2, #26
9000c020:	f57f af72 	bpl.w	9000bf08 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
9000c024:	2000      	movs	r0, #0
}
9000c026:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
9000c02a:	4661      	mov	r1, ip
9000c02c:	e787      	b.n	9000bf3e <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000c02e:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
9000c030:	2120      	movs	r1, #32
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000c032:	430b      	orrs	r3, r1
9000c034:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
9000c036:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
9000c03a:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
        return HAL_ERROR;
9000c03e:	e7ae      	b.n	9000bf9e <I2C_WaitOnSTOPFlagUntilTimeout+0xae>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000c040:	685a      	ldr	r2, [r3, #4]
9000c042:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000c046:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000c048:	f7fe fce6 	bl	9000aa18 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000c04c:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
9000c04e:	4681      	mov	r9, r0
9000c050:	e7c5      	b.n	9000bfde <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
9000c052:	bf00      	nop
9000c054:	fe00e800 	.word	0xfe00e800

9000c058 <HAL_I2C_MspInit>:
}
9000c058:	4770      	bx	lr
9000c05a:	bf00      	nop

9000c05c <HAL_I2C_Init>:
  if (hi2c == NULL)
9000c05c:	2800      	cmp	r0, #0
9000c05e:	d04e      	beq.n	9000c0fe <HAL_I2C_Init+0xa2>
{
9000c060:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
9000c062:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
9000c066:	4604      	mov	r4, r0
9000c068:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000c06c:	2b00      	cmp	r3, #0
9000c06e:	d041      	beq.n	9000c0f4 <HAL_I2C_Init+0x98>
  __HAL_I2C_DISABLE(hi2c);
9000c070:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000c072:	2124      	movs	r1, #36	@ 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000c074:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000c076:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
9000c07a:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000c07c:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000c080:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
9000c082:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000c086:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
9000c088:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000c08a:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
9000c08c:	689a      	ldr	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000c08e:	68a1      	ldr	r1, [r4, #8]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
9000c090:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
9000c094:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000c096:	d029      	beq.n	9000c0ec <HAL_I2C_Init+0x90>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000c098:	f441 4104 	orr.w	r1, r1, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000c09c:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000c09e:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000c0a0:	d102      	bne.n	9000c0a8 <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
9000c0a2:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000c0a6:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000c0a8:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
9000c0aa:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000c0ae:	4915      	ldr	r1, [pc, #84]	@ (9000c104 <HAL_I2C_Init+0xa8>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000c0b0:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000c0b2:	4301      	orrs	r1, r0
9000c0b4:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
9000c0b6:	68d9      	ldr	r1, [r3, #12]
9000c0b8:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
9000c0bc:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
9000c0be:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000c0c2:	4302      	orrs	r2, r0
9000c0c4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000c0c8:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000c0cc:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000c0ce:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000c0d0:	4301      	orrs	r1, r0
  return HAL_OK;
9000c0d2:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000c0d4:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
9000c0d6:	6819      	ldr	r1, [r3, #0]
9000c0d8:	f041 0101 	orr.w	r1, r1, #1
9000c0dc:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000c0de:	6462      	str	r2, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
9000c0e0:	f884 c041 	strb.w	ip, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
9000c0e4:	6322      	str	r2, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000c0e6:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
}
9000c0ea:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000c0ec:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
9000c0f0:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000c0f2:	e7d9      	b.n	9000c0a8 <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
9000c0f4:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
9000c0f8:	f7ff ffae 	bl	9000c058 <HAL_I2C_MspInit>
9000c0fc:	e7b8      	b.n	9000c070 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
9000c0fe:	2001      	movs	r0, #1
}
9000c100:	4770      	bx	lr
9000c102:	bf00      	nop
9000c104:	02008000 	.word	0x02008000

9000c108 <HAL_I2C_MspDeInit>:
__weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
9000c108:	4770      	bx	lr
9000c10a:	bf00      	nop

9000c10c <HAL_I2C_DeInit>:
  if (hi2c == NULL)
9000c10c:	b1b0      	cbz	r0, 9000c13c <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
9000c10e:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000c110:	2324      	movs	r3, #36	@ 0x24
{
9000c112:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
9000c114:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
9000c118:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
9000c11a:	6813      	ldr	r3, [r2, #0]
9000c11c:	f023 0301 	bic.w	r3, r3, #1
9000c120:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
9000c122:	f7ff fff1 	bl	9000c108 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000c126:	2300      	movs	r3, #0
9000c128:	6463      	str	r3, [r4, #68]	@ 0x44
  return HAL_OK;
9000c12a:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
9000c12c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hi2c);
9000c130:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
9000c134:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000c136:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
}
9000c13a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
9000c13c:	2001      	movs	r0, #1
}
9000c13e:	4770      	bx	lr

9000c140 <HAL_I2C_Mem_Write>:
{
9000c140:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000c144:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000c146:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
9000c14a:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
9000c14e:	2b20      	cmp	r3, #32
{
9000c150:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
9000c152:	d130      	bne.n	9000c1b6 <HAL_I2C_Mem_Write+0x76>
    if ((pData == NULL) || (Size == 0U))
9000c154:	9b08      	ldr	r3, [sp, #32]
9000c156:	4604      	mov	r4, r0
9000c158:	b33b      	cbz	r3, 9000c1aa <HAL_I2C_Mem_Write+0x6a>
9000c15a:	f1ba 0f00 	cmp.w	sl, #0
9000c15e:	d024      	beq.n	9000c1aa <HAL_I2C_Mem_Write+0x6a>
    __HAL_LOCK(hi2c);
9000c160:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
9000c164:	2b01      	cmp	r3, #1
9000c166:	d026      	beq.n	9000c1b6 <HAL_I2C_Mem_Write+0x76>
9000c168:	2301      	movs	r3, #1
9000c16a:	460e      	mov	r6, r1
9000c16c:	4691      	mov	r9, r2
9000c16e:	f880 3040 	strb.w	r3, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
9000c172:	f7fe fc51 	bl	9000aa18 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000c176:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
9000c178:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000c17a:	699a      	ldr	r2, [r3, #24]
9000c17c:	0411      	lsls	r1, r2, #16
9000c17e:	d51d      	bpl.n	9000c1bc <HAL_I2C_Mem_Write+0x7c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000c180:	f7fe fc4a 	bl	9000aa18 <HAL_GetTick>
9000c184:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000c186:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000c188:	2819      	cmp	r0, #25
9000c18a:	d9f6      	bls.n	9000c17a <HAL_I2C_Mem_Write+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000c18c:	699a      	ldr	r2, [r3, #24]
9000c18e:	0412      	lsls	r2, r2, #16
9000c190:	d5f3      	bpl.n	9000c17a <HAL_I2C_Mem_Write+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000c192:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000c194:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000c196:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000c198:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000c19a:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000c19e:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000c1a0:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000c1a4:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
          return HAL_ERROR;
9000c1a8:	e002      	b.n	9000c1b0 <HAL_I2C_Mem_Write+0x70>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000c1aa:	f44f 7300 	mov.w	r3, #512	@ 0x200
9000c1ae:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
9000c1b0:	2001      	movs	r0, #1
}
9000c1b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    __HAL_LOCK(hi2c);
9000c1b6:	2002      	movs	r0, #2
}
9000c1b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
9000c1bc:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000c1be:	2121      	movs	r1, #33	@ 0x21
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000c1c0:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000c1c4:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000c1c6:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000c1ca:	2140      	movs	r1, #64	@ 0x40
    hi2c->pBuffPtr  = pData;
9000c1cc:	6262      	str	r2, [r4, #36]	@ 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000c1ce:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000c1d0:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
    hi2c->XferISR   = NULL;
9000c1d4:	6362      	str	r2, [r4, #52]	@ 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000c1d6:	6462      	str	r2, [r4, #68]	@ 0x44
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
9000c1d8:	496b      	ldr	r1, [pc, #428]	@ (9000c388 <HAL_I2C_Mem_Write+0x248>)
    hi2c->XferCount = Size;
9000c1da:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000c1de:	685a      	ldr	r2, [r3, #4]
9000c1e0:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000c1e2:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000c1e6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000c1ea:	4968      	ldr	r1, [pc, #416]	@ (9000c38c <HAL_I2C_Mem_Write+0x24c>)
9000c1ec:	4332      	orrs	r2, r6
9000c1ee:	4311      	orrs	r1, r2
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000c1f0:	462a      	mov	r2, r5
  MODIFY_REG(hi2c->Instance->CR2, \
9000c1f2:	6059      	str	r1, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000c1f4:	4639      	mov	r1, r7
9000c1f6:	f7ff fdc5 	bl	9000bd84 <I2C_WaitOnTXISFlagUntilTimeout>
9000c1fa:	2800      	cmp	r0, #0
9000c1fc:	d17e      	bne.n	9000c2fc <HAL_I2C_Mem_Write+0x1bc>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000c1fe:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000c202:	6822      	ldr	r2, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000c204:	f040 809a 	bne.w	9000c33c <HAL_I2C_Mem_Write+0x1fc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000c208:	fa5f f389 	uxtb.w	r3, r9
9000c20c:	6293      	str	r3, [r2, #40]	@ 0x28
9000c20e:	1c78      	adds	r0, r7, #1
9000c210:	d15d      	bne.n	9000c2ce <HAL_I2C_Mem_Write+0x18e>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000c212:	6993      	ldr	r3, [r2, #24]
9000c214:	0619      	lsls	r1, r3, #24
9000c216:	d5fc      	bpl.n	9000c212 <HAL_I2C_Mem_Write+0xd2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000c218:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
9000c21a:	b29b      	uxth	r3, r3
9000c21c:	2bff      	cmp	r3, #255	@ 0xff
9000c21e:	d97f      	bls.n	9000c320 <HAL_I2C_Mem_Write+0x1e0>
  MODIFY_REG(hi2c->Instance->CR2, \
9000c220:	6853      	ldr	r3, [r2, #4]
9000c222:	495b      	ldr	r1, [pc, #364]	@ (9000c390 <HAL_I2C_Mem_Write+0x250>)
9000c224:	400b      	ands	r3, r1
9000c226:	495b      	ldr	r1, [pc, #364]	@ (9000c394 <HAL_I2C_Mem_Write+0x254>)
9000c228:	4333      	orrs	r3, r6
9000c22a:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000c22c:	23ff      	movs	r3, #255	@ 0xff
9000c22e:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000c230:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
9000c232:	e004      	b.n	9000c23e <HAL_I2C_Mem_Write+0xfe>
    } while (hi2c->XferCount > 0U);
9000c234:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
9000c236:	b29b      	uxth	r3, r3
9000c238:	2b00      	cmp	r3, #0
9000c23a:	f000 808e 	beq.w	9000c35a <HAL_I2C_Mem_Write+0x21a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000c23e:	462a      	mov	r2, r5
9000c240:	4639      	mov	r1, r7
9000c242:	4620      	mov	r0, r4
9000c244:	f7ff fd9e 	bl	9000bd84 <I2C_WaitOnTXISFlagUntilTimeout>
9000c248:	2800      	cmp	r0, #0
9000c24a:	d1b1      	bne.n	9000c1b0 <HAL_I2C_Mem_Write+0x70>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000c24c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000c24e:	6821      	ldr	r1, [r4, #0]
9000c250:	f810 2b01 	ldrb.w	r2, [r0], #1
      hi2c->XferSize--;
9000c254:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000c256:	628a      	str	r2, [r1, #40]	@ 0x28
      hi2c->XferCount--;
9000c258:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
9000c25a:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
9000c25c:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
9000c25e:	3a01      	subs	r2, #1
      hi2c->XferSize--;
9000c260:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
9000c262:	b292      	uxth	r2, r2
      hi2c->XferSize--;
9000c264:	8523      	strh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
9000c266:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000c268:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
9000c26a:	b292      	uxth	r2, r2
9000c26c:	2a00      	cmp	r2, #0
9000c26e:	d0e1      	beq.n	9000c234 <HAL_I2C_Mem_Write+0xf4>
9000c270:	2b00      	cmp	r3, #0
9000c272:	d1df      	bne.n	9000c234 <HAL_I2C_Mem_Write+0xf4>
9000c274:	1c78      	adds	r0, r7, #1
9000c276:	d110      	bne.n	9000c29a <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000c278:	698b      	ldr	r3, [r1, #24]
9000c27a:	061a      	lsls	r2, r3, #24
9000c27c:	d5fc      	bpl.n	9000c278 <HAL_I2C_Mem_Write+0x138>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000c27e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
9000c280:	b29b      	uxth	r3, r3
9000c282:	2bff      	cmp	r3, #255	@ 0xff
9000c284:	d93e      	bls.n	9000c304 <HAL_I2C_Mem_Write+0x1c4>
  MODIFY_REG(hi2c->Instance->CR2, \
9000c286:	684b      	ldr	r3, [r1, #4]
9000c288:	4a41      	ldr	r2, [pc, #260]	@ (9000c390 <HAL_I2C_Mem_Write+0x250>)
9000c28a:	4013      	ands	r3, r2
9000c28c:	4a41      	ldr	r2, [pc, #260]	@ (9000c394 <HAL_I2C_Mem_Write+0x254>)
9000c28e:	4333      	orrs	r3, r6
9000c290:	431a      	orrs	r2, r3
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000c292:	23ff      	movs	r3, #255	@ 0xff
9000c294:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000c296:	604a      	str	r2, [r1, #4]
}
9000c298:	e7cc      	b.n	9000c234 <HAL_I2C_Mem_Write+0xf4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000c29a:	698b      	ldr	r3, [r1, #24]
9000c29c:	061b      	lsls	r3, r3, #24
9000c29e:	d4ee      	bmi.n	9000c27e <HAL_I2C_Mem_Write+0x13e>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000c2a0:	f7fe fbba 	bl	9000aa18 <HAL_GetTick>
9000c2a4:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000c2a6:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000c2a8:	4287      	cmp	r7, r0
9000c2aa:	d301      	bcc.n	9000c2b0 <HAL_I2C_Mem_Write+0x170>
9000c2ac:	2f00      	cmp	r7, #0
9000c2ae:	d1f4      	bne.n	9000c29a <HAL_I2C_Mem_Write+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000c2b0:	698b      	ldr	r3, [r1, #24]
9000c2b2:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
9000c2b6:	d1f0      	bne.n	9000c29a <HAL_I2C_Mem_Write+0x15a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000c2b8:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000c2ba:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
9000c2bc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000c2c0:	430a      	orrs	r2, r1
9000c2c2:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000c2c4:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000c2c8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
          return HAL_ERROR;
9000c2cc:	e770      	b.n	9000c1b0 <HAL_I2C_Mem_Write+0x70>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000c2ce:	6993      	ldr	r3, [r2, #24]
9000c2d0:	061b      	lsls	r3, r3, #24
9000c2d2:	d4a1      	bmi.n	9000c218 <HAL_I2C_Mem_Write+0xd8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000c2d4:	f7fe fba0 	bl	9000aa18 <HAL_GetTick>
9000c2d8:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000c2da:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000c2dc:	4287      	cmp	r7, r0
9000c2de:	d301      	bcc.n	9000c2e4 <HAL_I2C_Mem_Write+0x1a4>
9000c2e0:	2f00      	cmp	r7, #0
9000c2e2:	d1f4      	bne.n	9000c2ce <HAL_I2C_Mem_Write+0x18e>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000c2e4:	6993      	ldr	r3, [r2, #24]
9000c2e6:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
9000c2ea:	d1f0      	bne.n	9000c2ce <HAL_I2C_Mem_Write+0x18e>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000c2ec:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000c2ee:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000c2f0:	430a      	orrs	r2, r1
9000c2f2:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000c2f4:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000c2f8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      __HAL_UNLOCK(hi2c);
9000c2fc:	2300      	movs	r3, #0
9000c2fe:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
9000c302:	e755      	b.n	9000c1b0 <HAL_I2C_Mem_Write+0x70>
          hi2c->XferSize = hi2c->XferCount;
9000c304:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000c306:	4822      	ldr	r0, [pc, #136]	@ (9000c390 <HAL_I2C_Mem_Write+0x250>)
          hi2c->XferSize = hi2c->XferCount;
9000c308:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000c30a:	b2da      	uxtb	r2, r3
          hi2c->XferSize = hi2c->XferCount;
9000c30c:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000c30e:	684b      	ldr	r3, [r1, #4]
9000c310:	4003      	ands	r3, r0
9000c312:	4333      	orrs	r3, r6
9000c314:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000c318:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
9000c31c:	604b      	str	r3, [r1, #4]
}
9000c31e:	e789      	b.n	9000c234 <HAL_I2C_Mem_Write+0xf4>
      hi2c->XferSize = hi2c->XferCount;
9000c320:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000c322:	481b      	ldr	r0, [pc, #108]	@ (9000c390 <HAL_I2C_Mem_Write+0x250>)
      hi2c->XferSize = hi2c->XferCount;
9000c324:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000c326:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
9000c328:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000c32a:	6853      	ldr	r3, [r2, #4]
9000c32c:	4003      	ands	r3, r0
9000c32e:	4333      	orrs	r3, r6
9000c330:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000c334:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
9000c338:	6053      	str	r3, [r2, #4]
}
9000c33a:	e780      	b.n	9000c23e <HAL_I2C_Mem_Write+0xfe>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000c33c:	ea4f 2319 	mov.w	r3, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000c340:	4639      	mov	r1, r7
9000c342:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000c344:	6293      	str	r3, [r2, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000c346:	462a      	mov	r2, r5
9000c348:	f7ff fd1c 	bl	9000bd84 <I2C_WaitOnTXISFlagUntilTimeout>
9000c34c:	2800      	cmp	r0, #0
9000c34e:	d1d5      	bne.n	9000c2fc <HAL_I2C_Mem_Write+0x1bc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000c350:	fa5f f389 	uxtb.w	r3, r9
9000c354:	6822      	ldr	r2, [r4, #0]
9000c356:	6293      	str	r3, [r2, #40]	@ 0x28
9000c358:	e759      	b.n	9000c20e <HAL_I2C_Mem_Write+0xce>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000c35a:	462a      	mov	r2, r5
9000c35c:	4639      	mov	r1, r7
9000c35e:	4620      	mov	r0, r4
9000c360:	f7ff fdc6 	bl	9000bef0 <I2C_WaitOnSTOPFlagUntilTimeout>
9000c364:	2800      	cmp	r0, #0
9000c366:	f47f af23 	bne.w	9000c1b0 <HAL_I2C_Mem_Write+0x70>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000c36a:	6823      	ldr	r3, [r4, #0]
9000c36c:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000c36e:	4d0a      	ldr	r5, [pc, #40]	@ (9000c398 <HAL_I2C_Mem_Write+0x258>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000c370:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000c372:	685a      	ldr	r2, [r3, #4]
9000c374:	402a      	ands	r2, r5
9000c376:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000c378:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
9000c37c:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000c380:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
9000c384:	e715      	b.n	9000c1b2 <HAL_I2C_Mem_Write+0x72>
9000c386:	bf00      	nop
9000c388:	fc009800 	.word	0xfc009800
9000c38c:	01002000 	.word	0x01002000
9000c390:	fc009c00 	.word	0xfc009c00
9000c394:	01ff0000 	.word	0x01ff0000
9000c398:	fe00e800 	.word	0xfe00e800

9000c39c <HAL_I2C_Mem_Read>:
{
9000c39c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000c3a0:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000c3a2:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
9000c3a6:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
9000c3aa:	2b20      	cmp	r3, #32
{
9000c3ac:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
9000c3ae:	d130      	bne.n	9000c412 <HAL_I2C_Mem_Read+0x76>
    if ((pData == NULL) || (Size == 0U))
9000c3b0:	9b08      	ldr	r3, [sp, #32]
9000c3b2:	4604      	mov	r4, r0
9000c3b4:	b33b      	cbz	r3, 9000c406 <HAL_I2C_Mem_Read+0x6a>
9000c3b6:	f1ba 0f00 	cmp.w	sl, #0
9000c3ba:	d024      	beq.n	9000c406 <HAL_I2C_Mem_Read+0x6a>
    __HAL_LOCK(hi2c);
9000c3bc:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
9000c3c0:	2b01      	cmp	r3, #1
9000c3c2:	d026      	beq.n	9000c412 <HAL_I2C_Mem_Read+0x76>
9000c3c4:	2301      	movs	r3, #1
9000c3c6:	460f      	mov	r7, r1
9000c3c8:	4691      	mov	r9, r2
9000c3ca:	f880 3040 	strb.w	r3, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
9000c3ce:	f7fe fb23 	bl	9000aa18 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000c3d2:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
9000c3d4:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000c3d6:	699a      	ldr	r2, [r3, #24]
9000c3d8:	0411      	lsls	r1, r2, #16
9000c3da:	d51d      	bpl.n	9000c418 <HAL_I2C_Mem_Read+0x7c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000c3dc:	f7fe fb1c 	bl	9000aa18 <HAL_GetTick>
9000c3e0:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000c3e2:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000c3e4:	2819      	cmp	r0, #25
9000c3e6:	d9f6      	bls.n	9000c3d6 <HAL_I2C_Mem_Read+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000c3e8:	699a      	ldr	r2, [r3, #24]
9000c3ea:	0412      	lsls	r2, r2, #16
9000c3ec:	d5f3      	bpl.n	9000c3d6 <HAL_I2C_Mem_Read+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000c3ee:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000c3f0:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000c3f2:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000c3f4:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000c3f6:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000c3fa:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000c3fc:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000c400:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
          return HAL_ERROR;
9000c404:	e002      	b.n	9000c40c <HAL_I2C_Mem_Read+0x70>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000c406:	f44f 7300 	mov.w	r3, #512	@ 0x200
9000c40a:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
9000c40c:	2001      	movs	r0, #1
}
9000c40e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    __HAL_LOCK(hi2c);
9000c412:	2002      	movs	r0, #2
}
9000c414:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
9000c418:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000c41a:	2122      	movs	r1, #34	@ 0x22
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000c41c:	f3c7 0709 	ubfx	r7, r7, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000c420:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000c422:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000c426:	2140      	movs	r1, #64	@ 0x40
    hi2c->pBuffPtr  = pData;
9000c428:	6262      	str	r2, [r4, #36]	@ 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000c42a:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000c42c:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
    hi2c->XferISR   = NULL;
9000c430:	6362      	str	r2, [r4, #52]	@ 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000c432:	6462      	str	r2, [r4, #68]	@ 0x44
  MODIFY_REG(hi2c->Instance->CR2, \
9000c434:	4973      	ldr	r1, [pc, #460]	@ (9000c604 <HAL_I2C_Mem_Read+0x268>)
    hi2c->XferCount = Size;
9000c436:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000c43a:	685a      	ldr	r2, [r3, #4]
9000c43c:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000c43e:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000c442:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000c446:	4631      	mov	r1, r6
  MODIFY_REG(hi2c->Instance->CR2, \
9000c448:	433a      	orrs	r2, r7
9000c44a:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
9000c44e:	605a      	str	r2, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000c450:	462a      	mov	r2, r5
9000c452:	f7ff fc97 	bl	9000bd84 <I2C_WaitOnTXISFlagUntilTimeout>
9000c456:	2800      	cmp	r0, #0
9000c458:	d16a      	bne.n	9000c530 <HAL_I2C_Mem_Read+0x194>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000c45a:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000c45e:	6821      	ldr	r1, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000c460:	f040 80aa 	bne.w	9000c5b8 <HAL_I2C_Mem_Read+0x21c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000c464:	fa5f f389 	uxtb.w	r3, r9
9000c468:	628b      	str	r3, [r1, #40]	@ 0x28
9000c46a:	1c70      	adds	r0, r6, #1
9000c46c:	d149      	bne.n	9000c502 <HAL_I2C_Mem_Read+0x166>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000c46e:	698b      	ldr	r3, [r1, #24]
9000c470:	065a      	lsls	r2, r3, #25
9000c472:	d5fc      	bpl.n	9000c46e <HAL_I2C_Mem_Read+0xd2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000c474:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
9000c476:	b29b      	uxth	r3, r3
9000c478:	2bff      	cmp	r3, #255	@ 0xff
9000c47a:	f240 808f 	bls.w	9000c59c <HAL_I2C_Mem_Read+0x200>
  MODIFY_REG(hi2c->Instance->CR2, \
9000c47e:	684b      	ldr	r3, [r1, #4]
9000c480:	4a60      	ldr	r2, [pc, #384]	@ (9000c604 <HAL_I2C_Mem_Read+0x268>)
9000c482:	4013      	ands	r3, r2
9000c484:	4a60      	ldr	r2, [pc, #384]	@ (9000c608 <HAL_I2C_Mem_Read+0x26c>)
9000c486:	433b      	orrs	r3, r7
9000c488:	431a      	orrs	r2, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000c48a:	23ff      	movs	r3, #255	@ 0xff
9000c48c:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000c48e:	604a      	str	r2, [r1, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000c490:	1c70      	adds	r0, r6, #1
9000c492:	d11c      	bne.n	9000c4ce <HAL_I2C_Mem_Read+0x132>
9000c494:	698b      	ldr	r3, [r1, #24]
9000c496:	075a      	lsls	r2, r3, #29
9000c498:	d5fc      	bpl.n	9000c494 <HAL_I2C_Mem_Read+0xf8>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
9000c49a:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
9000c49c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000c49e:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
9000c4a0:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
9000c4a2:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
9000c4a4:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
9000c4a6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
      hi2c->XferSize--;
9000c4a8:	3b01      	subs	r3, #1
      hi2c->XferCount--;
9000c4aa:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
9000c4ac:	3101      	adds	r1, #1
      hi2c->XferSize--;
9000c4ae:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
9000c4b0:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000c4b2:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->pBuffPtr++;
9000c4b4:	6261      	str	r1, [r4, #36]	@ 0x24
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000c4b6:	b292      	uxth	r2, r2
      hi2c->XferSize--;
9000c4b8:	8523      	strh	r3, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000c4ba:	b90b      	cbnz	r3, 9000c4c0 <HAL_I2C_Mem_Read+0x124>
9000c4bc:	2a00      	cmp	r2, #0
9000c4be:	d13b      	bne.n	9000c538 <HAL_I2C_Mem_Read+0x19c>
    } while (hi2c->XferCount > 0U);
9000c4c0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
9000c4c2:	b29b      	uxth	r3, r3
9000c4c4:	2b00      	cmp	r3, #0
9000c4c6:	f000 8086 	beq.w	9000c5d6 <HAL_I2C_Mem_Read+0x23a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000c4ca:	6821      	ldr	r1, [r4, #0]
9000c4cc:	e7e0      	b.n	9000c490 <HAL_I2C_Mem_Read+0xf4>
9000c4ce:	698b      	ldr	r3, [r1, #24]
9000c4d0:	075b      	lsls	r3, r3, #29
9000c4d2:	d4e2      	bmi.n	9000c49a <HAL_I2C_Mem_Read+0xfe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000c4d4:	f7fe faa0 	bl	9000aa18 <HAL_GetTick>
9000c4d8:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000c4da:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000c4dc:	4286      	cmp	r6, r0
9000c4de:	d301      	bcc.n	9000c4e4 <HAL_I2C_Mem_Read+0x148>
9000c4e0:	2e00      	cmp	r6, #0
9000c4e2:	d1f4      	bne.n	9000c4ce <HAL_I2C_Mem_Read+0x132>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000c4e4:	698b      	ldr	r3, [r1, #24]
9000c4e6:	f013 0304 	ands.w	r3, r3, #4
9000c4ea:	d1f0      	bne.n	9000c4ce <HAL_I2C_Mem_Read+0x132>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000c4ec:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000c4ee:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
9000c4f0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000c4f4:	430a      	orrs	r2, r1
9000c4f6:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000c4f8:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000c4fc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
          return HAL_ERROR;
9000c500:	e784      	b.n	9000c40c <HAL_I2C_Mem_Read+0x70>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000c502:	698b      	ldr	r3, [r1, #24]
9000c504:	065b      	lsls	r3, r3, #25
9000c506:	d4b5      	bmi.n	9000c474 <HAL_I2C_Mem_Read+0xd8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000c508:	f7fe fa86 	bl	9000aa18 <HAL_GetTick>
9000c50c:	1b43      	subs	r3, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000c50e:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000c510:	429e      	cmp	r6, r3
9000c512:	d301      	bcc.n	9000c518 <HAL_I2C_Mem_Read+0x17c>
9000c514:	2e00      	cmp	r6, #0
9000c516:	d1f4      	bne.n	9000c502 <HAL_I2C_Mem_Read+0x166>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000c518:	698b      	ldr	r3, [r1, #24]
9000c51a:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
9000c51e:	d1f0      	bne.n	9000c502 <HAL_I2C_Mem_Read+0x166>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000c520:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000c522:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000c524:	430a      	orrs	r2, r1
9000c526:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000c528:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000c52c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      __HAL_UNLOCK(hi2c);
9000c530:	2300      	movs	r3, #0
9000c532:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
9000c536:	e769      	b.n	9000c40c <HAL_I2C_Mem_Read+0x70>
9000c538:	1c70      	adds	r0, r6, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000c53a:	6822      	ldr	r2, [r4, #0]
9000c53c:	d110      	bne.n	9000c560 <HAL_I2C_Mem_Read+0x1c4>
9000c53e:	6993      	ldr	r3, [r2, #24]
9000c540:	0619      	lsls	r1, r3, #24
9000c542:	d5fc      	bpl.n	9000c53e <HAL_I2C_Mem_Read+0x1a2>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000c544:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
9000c546:	b29b      	uxth	r3, r3
9000c548:	2bff      	cmp	r3, #255	@ 0xff
9000c54a:	d919      	bls.n	9000c580 <HAL_I2C_Mem_Read+0x1e4>
  MODIFY_REG(hi2c->Instance->CR2, \
9000c54c:	6853      	ldr	r3, [r2, #4]
9000c54e:	492f      	ldr	r1, [pc, #188]	@ (9000c60c <HAL_I2C_Mem_Read+0x270>)
9000c550:	400b      	ands	r3, r1
9000c552:	492f      	ldr	r1, [pc, #188]	@ (9000c610 <HAL_I2C_Mem_Read+0x274>)
9000c554:	433b      	orrs	r3, r7
9000c556:	4319      	orrs	r1, r3
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000c558:	23ff      	movs	r3, #255	@ 0xff
9000c55a:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000c55c:	6051      	str	r1, [r2, #4]
}
9000c55e:	e7af      	b.n	9000c4c0 <HAL_I2C_Mem_Read+0x124>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000c560:	6993      	ldr	r3, [r2, #24]
9000c562:	061b      	lsls	r3, r3, #24
9000c564:	d4ee      	bmi.n	9000c544 <HAL_I2C_Mem_Read+0x1a8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000c566:	f7fe fa57 	bl	9000aa18 <HAL_GetTick>
9000c56a:	1b43      	subs	r3, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000c56c:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000c56e:	429e      	cmp	r6, r3
9000c570:	d301      	bcc.n	9000c576 <HAL_I2C_Mem_Read+0x1da>
9000c572:	2e00      	cmp	r6, #0
9000c574:	d1f4      	bne.n	9000c560 <HAL_I2C_Mem_Read+0x1c4>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000c576:	6993      	ldr	r3, [r2, #24]
9000c578:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
9000c57c:	d1f0      	bne.n	9000c560 <HAL_I2C_Mem_Read+0x1c4>
9000c57e:	e7b5      	b.n	9000c4ec <HAL_I2C_Mem_Read+0x150>
          hi2c->XferSize = hi2c->XferCount;
9000c580:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000c582:	4822      	ldr	r0, [pc, #136]	@ (9000c60c <HAL_I2C_Mem_Read+0x270>)
          hi2c->XferSize = hi2c->XferCount;
9000c584:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000c586:	b2d9      	uxtb	r1, r3
          hi2c->XferSize = hi2c->XferCount;
9000c588:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000c58a:	6853      	ldr	r3, [r2, #4]
9000c58c:	4003      	ands	r3, r0
9000c58e:	433b      	orrs	r3, r7
9000c590:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000c594:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
9000c598:	6053      	str	r3, [r2, #4]
}
9000c59a:	e791      	b.n	9000c4c0 <HAL_I2C_Mem_Read+0x124>
      hi2c->XferSize = hi2c->XferCount;
9000c59c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000c59e:	4819      	ldr	r0, [pc, #100]	@ (9000c604 <HAL_I2C_Mem_Read+0x268>)
      hi2c->XferSize = hi2c->XferCount;
9000c5a0:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000c5a2:	b2da      	uxtb	r2, r3
      hi2c->XferSize = hi2c->XferCount;
9000c5a4:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000c5a6:	684b      	ldr	r3, [r1, #4]
9000c5a8:	4003      	ands	r3, r0
9000c5aa:	433b      	orrs	r3, r7
9000c5ac:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000c5b0:	4a18      	ldr	r2, [pc, #96]	@ (9000c614 <HAL_I2C_Mem_Read+0x278>)
9000c5b2:	431a      	orrs	r2, r3
9000c5b4:	604a      	str	r2, [r1, #4]
}
9000c5b6:	e76b      	b.n	9000c490 <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000c5b8:	ea4f 2319 	mov.w	r3, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000c5bc:	462a      	mov	r2, r5
9000c5be:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000c5c0:	628b      	str	r3, [r1, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000c5c2:	4631      	mov	r1, r6
9000c5c4:	f7ff fbde 	bl	9000bd84 <I2C_WaitOnTXISFlagUntilTimeout>
9000c5c8:	2800      	cmp	r0, #0
9000c5ca:	d1b1      	bne.n	9000c530 <HAL_I2C_Mem_Read+0x194>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000c5cc:	fa5f f389 	uxtb.w	r3, r9
9000c5d0:	6821      	ldr	r1, [r4, #0]
9000c5d2:	628b      	str	r3, [r1, #40]	@ 0x28
9000c5d4:	e749      	b.n	9000c46a <HAL_I2C_Mem_Read+0xce>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000c5d6:	462a      	mov	r2, r5
9000c5d8:	4631      	mov	r1, r6
9000c5da:	4620      	mov	r0, r4
9000c5dc:	f7ff fc88 	bl	9000bef0 <I2C_WaitOnSTOPFlagUntilTimeout>
9000c5e0:	2800      	cmp	r0, #0
9000c5e2:	f47f af13 	bne.w	9000c40c <HAL_I2C_Mem_Read+0x70>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000c5e6:	6823      	ldr	r3, [r4, #0]
9000c5e8:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000c5ea:	4d0b      	ldr	r5, [pc, #44]	@ (9000c618 <HAL_I2C_Mem_Read+0x27c>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000c5ec:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000c5ee:	685a      	ldr	r2, [r3, #4]
9000c5f0:	402a      	ands	r2, r5
9000c5f2:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000c5f4:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
9000c5f8:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000c5fc:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
9000c600:	e705      	b.n	9000c40e <HAL_I2C_Mem_Read+0x72>
9000c602:	bf00      	nop
9000c604:	fc009800 	.word	0xfc009800
9000c608:	01ff2400 	.word	0x01ff2400
9000c60c:	fc009c00 	.word	0xfc009c00
9000c610:	01ff0000 	.word	0x01ff0000
9000c614:	02002400 	.word	0x02002400
9000c618:	fe00e800 	.word	0xfe00e800

9000c61c <HAL_I2C_GetState>:
  return hi2c->State;
9000c61c:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
9000c620:	4770      	bx	lr
9000c622:	bf00      	nop

9000c624 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
9000c624:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
9000c626:	4770      	bx	lr

9000c628 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000c628:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
9000c62c:	2a20      	cmp	r2, #32
9000c62e:	d123      	bne.n	9000c678 <HAL_I2CEx_ConfigAnalogFilter+0x50>
9000c630:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000c634:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
9000c638:	4603      	mov	r3, r0
9000c63a:	2a01      	cmp	r2, #1
9000c63c:	d01c      	beq.n	9000c678 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000c63e:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000c640:	2024      	movs	r0, #36	@ 0x24
{
9000c642:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
9000c644:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000c648:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
9000c64c:	6810      	ldr	r0, [r2, #0]
9000c64e:	f020 0001 	bic.w	r0, r0, #1
9000c652:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
9000c654:	6810      	ldr	r0, [r2, #0]
9000c656:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
9000c65a:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
9000c65c:	6810      	ldr	r0, [r2, #0]
9000c65e:	4301      	orrs	r1, r0

    return HAL_OK;
9000c660:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
9000c662:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000c664:	6811      	ldr	r1, [r2, #0]
9000c666:	f041 0101 	orr.w	r1, r1, #1
9000c66a:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000c66c:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
9000c670:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000c674:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
9000c678:	2002      	movs	r0, #2
}
9000c67a:	4770      	bx	lr

9000c67c <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000c67c:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
9000c680:	2a20      	cmp	r2, #32
9000c682:	d122      	bne.n	9000c6ca <HAL_I2CEx_ConfigDigitalFilter+0x4e>
9000c684:	4603      	mov	r3, r0
{
9000c686:	b500      	push	{lr}
9000c688:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000c68c:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
9000c690:	2a01      	cmp	r2, #1
9000c692:	d01c      	beq.n	9000c6ce <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000c694:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000c696:	2024      	movs	r0, #36	@ 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000c698:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
9000c69c:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_DISABLE(hi2c);
9000c6a0:	6810      	ldr	r0, [r2, #0]
9000c6a2:	f020 0001 	bic.w	r0, r0, #1
9000c6a6:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
9000c6a8:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
9000c6aa:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
    tmpreg |= DigitalFilter << 8U;
9000c6ae:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
9000c6b2:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
9000c6b4:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000c6b6:	6811      	ldr	r1, [r2, #0]
9000c6b8:	f041 0101 	orr.w	r1, r1, #1
9000c6bc:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000c6be:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
9000c6c2:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000c6c6:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
9000c6ca:	2002      	movs	r0, #2
}
9000c6cc:	4770      	bx	lr
    __HAL_LOCK(hi2c);
9000c6ce:	2002      	movs	r0, #2
}
9000c6d0:	f85d fb04 	ldr.w	pc, [sp], #4

9000c6d4 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
9000c6d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000c6d8:	4699      	mov	r9, r3
9000c6da:	4680      	mov	r8, r0
9000c6dc:	460d      	mov	r5, r1
9000c6de:	4614      	mov	r4, r2

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
9000c6e0:	7803      	ldrb	r3, [r0, #0]
9000c6e2:	2601      	movs	r6, #1
  p = 0;
9000c6e4:	2700      	movs	r7, #0
9000c6e6:	e005      	b.n	9000c6f4 <JPEG_Bits_To_SizeCodes+0x20>
    i = (uint32_t)Bits[l];
9000c6e8:	f818 3f01 	ldrb.w	r3, [r8, #1]!
    if ((p + i) > 256UL)
9000c6ec:	19da      	adds	r2, r3, r7
9000c6ee:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000c6f2:	d83a      	bhi.n	9000c76a <JPEG_Bits_To_SizeCodes+0x96>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
9000c6f4:	19e8      	adds	r0, r5, r7
9000c6f6:	461a      	mov	r2, r3
9000c6f8:	4631      	mov	r1, r6
    while (i != 0UL)
9000c6fa:	b113      	cbz	r3, 9000c702 <JPEG_Bits_To_SizeCodes+0x2e>
      p++;
9000c6fc:	441f      	add	r7, r3
      Huffsize[p] = (uint8_t) l + 1U;
9000c6fe:	f01f fb7b 	bl	9002bdf8 <memset>
  for (l = 0; l < 16UL; l++)
9000c702:	2e10      	cmp	r6, #16
    if ((p + i) > 256UL)
9000c704:	f106 0601 	add.w	r6, r6, #1
  for (l = 0; l < 16UL; l++)
9000c708:	d1ee      	bne.n	9000c6e8 <JPEG_Bits_To_SizeCodes+0x14>
      i--;
    }
  }
  Huffsize[p] = 0;
9000c70a:	2300      	movs	r3, #0
9000c70c:	55eb      	strb	r3, [r5, r7]
  *LastK = p;
9000c70e:	f8c9 7000 	str.w	r7, [r9]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
9000c712:	7829      	ldrb	r1, [r5, #0]
9000c714:	460a      	mov	r2, r1
  p = 0;
  while (Huffsize[p] != 0U)
9000c716:	b329      	cbz	r1, 9000c764 <JPEG_Bits_To_SizeCodes+0x90>
  code = 0;
9000c718:	4699      	mov	r9, r3
9000c71a:	f06f 4840 	mvn.w	r8, #3221225472	@ 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000c71e:	2701      	movs	r7, #1
  p = 0;
9000c720:	461e      	mov	r6, r3
    while (((uint32_t) Huffsize[p]) == si)
9000c722:	4291      	cmp	r1, r2
9000c724:	d124      	bne.n	9000c770 <JPEG_Bits_To_SizeCodes+0x9c>
9000c726:	eb06 0008 	add.w	r0, r6, r8
9000c72a:	eb05 0c06 	add.w	ip, r5, r6
9000c72e:	464b      	mov	r3, r9
9000c730:	eb04 0080 	add.w	r0, r4, r0, lsl #2
      Huffcode[p] = code;
9000c734:	f840 3f04 	str.w	r3, [r0, #4]!
      code++;
9000c738:	4619      	mov	r1, r3
    while (((uint32_t) Huffsize[p]) == si)
9000c73a:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
9000c73e:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
9000c740:	4596      	cmp	lr, r2
9000c742:	d0f7      	beq.n	9000c734 <JPEG_Bits_To_SizeCodes+0x60>
9000c744:	3601      	adds	r6, #1
9000c746:	eba6 0609 	sub.w	r6, r6, r9
      p++;
9000c74a:	440e      	add	r6, r1
    if(si > 31UL)
9000c74c:	2a1f      	cmp	r2, #31
9000c74e:	d80c      	bhi.n	9000c76a <JPEG_Bits_To_SizeCodes+0x96>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000c750:	fa07 f102 	lsl.w	r1, r7, r2
9000c754:	4299      	cmp	r1, r3
9000c756:	d908      	bls.n	9000c76a <JPEG_Bits_To_SizeCodes+0x96>
  while (Huffsize[p] != 0U)
9000c758:	5da9      	ldrb	r1, [r5, r6]
    {
      return HAL_ERROR;
    }
    code <<= 1;
9000c75a:	ea4f 0943 	mov.w	r9, r3, lsl #1
    si++;
9000c75e:	3201      	adds	r2, #1
  while (Huffsize[p] != 0U)
9000c760:	2900      	cmp	r1, #0
9000c762:	d1de      	bne.n	9000c722 <JPEG_Bits_To_SizeCodes+0x4e>
  }
  /* Return function status */
  return HAL_OK;
9000c764:	2000      	movs	r0, #0
}
9000c766:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      return HAL_ERROR;
9000c76a:	2001      	movs	r0, #1
}
9000c76c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    while (((uint32_t) Huffsize[p]) == si)
9000c770:	464b      	mov	r3, r9
9000c772:	e7eb      	b.n	9000c74c <JPEG_Bits_To_SizeCodes+0x78>

9000c774 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
9000c774:	b5f0      	push	{r4, r5, r6, r7, lr}
9000c776:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
9000c77a:	460d      	mov	r5, r1
9000c77c:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000c77e:	ab01      	add	r3, sp, #4
9000c780:	aa43      	add	r2, sp, #268	@ 0x10c
9000c782:	a902      	add	r1, sp, #8
9000c784:	f7ff ffa6 	bl	9000c6d4 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000c788:	b9d0      	cbnz	r0, 9000c7c0 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
9000c78a:	9f01      	ldr	r7, [sp, #4]
9000c78c:	b1c7      	cbz	r7, 9000c7c0 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
9000c78e:	370f      	adds	r7, #15
9000c790:	f50d 7e86 	add.w	lr, sp, #268	@ 0x10c
9000c794:	a902      	add	r1, sp, #8
9000c796:	f104 0c0f 	add.w	ip, r4, #15
9000c79a:	4427      	add	r7, r4
9000c79c:	e009      	b.n	9000c7b2 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000c79e:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
9000c7a2:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000c7a4:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000c7a8:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000c7ac:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000c7ae:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
9000c7b0:	d006      	beq.n	9000c7c0 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
9000c7b2:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000c7b6:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000c7b8:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000c7bc:	d9ef      	bls.n	9000c79e <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000c7be:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000c7c0:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
9000c7c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000c7c6:	bf00      	nop

9000c7c8 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
9000c7c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000c7cc:	6804      	ldr	r4, [r0, #0]
{
9000c7ce:	b093      	sub	sp, #76	@ 0x4c
9000c7d0:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000c7d2:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
9000c7d6:	429a      	cmp	r2, r3
9000c7d8:	f000 809d 	beq.w	9000c916 <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
9000c7dc:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
9000c7e0:	429a      	cmp	r2, r3
9000c7e2:	d003      	beq.n	9000c7ec <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
9000c7e4:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000c7e6:	b013      	add	sp, #76	@ 0x4c
9000c7e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000c7ec:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
9000c7f0:	a903      	add	r1, sp, #12
9000c7f2:	f7ff ffbf 	bl	9000c774 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
9000c7f6:	2800      	cmp	r0, #0
9000c7f8:	d1f5      	bne.n	9000c7e6 <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
9000c7fa:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c7fe:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c802:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
9000c806:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c808:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
9000c80c:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c80e:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
9000c812:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c816:	f40a 6a70 	and.w	sl, sl, #3840	@ 0xf00
9000c81a:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c81e:	f40e 6e70 	and.w	lr, lr, #3840	@ 0xf00
9000c822:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c824:	f89d 9015 	ldrb.w	r9, [sp, #21]
9000c828:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c82c:	f89d c014 	ldrb.w	ip, [sp, #20]
9000c830:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c834:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c838:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c83c:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c840:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c842:	f409 6970 	and.w	r9, r9, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c846:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
9000c84a:	f40c 6c70 	and.w	ip, ip, #3840	@ 0xf00
9000c84e:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c852:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c856:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c85a:	f89d 7011 	ldrb.w	r7, [sp, #17]
9000c85e:	f408 6870 	and.w	r8, r8, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c862:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
9000c864:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c868:	f89d 2010 	ldrb.w	r2, [sp, #16]
9000c86c:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c870:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
9000c872:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c876:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c878:	f89d e03c 	ldrb.w	lr, [sp, #60]	@ 0x3c
9000c87c:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c880:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c884:	f89d 600f 	ldrb.w	r6, [sp, #15]
9000c888:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c88c:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c890:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c892:	9b01      	ldr	r3, [sp, #4]
9000c894:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c898:	f89d 500d 	ldrb.w	r5, [sp, #13]
9000c89c:	f406 6670 	and.w	r6, r6, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c8a0:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
9000c8a4:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c8a8:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
9000c8aa:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c8ae:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c8b2:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
9000c8b6:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c8ba:	f40b 6b70 	and.w	fp, fp, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c8be:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c8c2:	f89d c030 	ldrb.w	ip, [sp, #48]	@ 0x30
9000c8c6:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
9000c8ca:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
9000c8ce:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c8d2:	f89d 102c 	ldrb.w	r1, [sp, #44]	@ 0x2c
9000c8d6:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c8d8:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
9000c8dc:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
9000c8de:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
9000c8e2:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c8e6:	f89d 2024 	ldrb.w	r2, [sp, #36]	@ 0x24
9000c8ea:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c8ec:	f89d 2020 	ldrb.w	r2, [sp, #32]
9000c8f0:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
9000c8f2:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
9000c8f6:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c8fa:	f89d 301c 	ldrb.w	r3, [sp, #28]
9000c8fe:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000c900:	f89d 3018 	ldrb.w	r3, [sp, #24]
9000c904:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
9000c908:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000c90c:	f844 3c18 	str.w	r3, [r4, #-24]
}
9000c910:	b013      	add	sp, #76	@ 0x4c
9000c912:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000c916:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
  if (HuffTableDC != NULL)
9000c91a:	e769      	b.n	9000c7f0 <JPEG_Set_HuffDC_Mem+0x28>

9000c91c <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
9000c91c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000c920:	6804      	ldr	r4, [r0, #0]
{
9000c922:	f6ad 0d3c 	subw	sp, sp, #2108	@ 0x83c
9000c926:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000c928:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
9000c92c:	429a      	cmp	r2, r3
9000c92e:	d041      	beq.n	9000c9b4 <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
9000c930:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
9000c934:	429a      	cmp	r2, r3
9000c936:	d004      	beq.n	9000c942 <JPEG_Set_HuffAC_Mem+0x26>
  {
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
9000c938:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000c93a:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
9000c93e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000c942:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000c946:	4628      	mov	r0, r5
9000c948:	466b      	mov	r3, sp
9000c94a:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
9000c94e:	a901      	add	r1, sp, #4
9000c950:	f7ff fec0 	bl	9000c6d4 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000c954:	2800      	cmp	r0, #0
9000c956:	d1f0      	bne.n	9000c93a <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
9000c958:	9b00      	ldr	r3, [sp, #0]
9000c95a:	b373      	cbz	r3, 9000c9ba <JPEG_Set_HuffAC_Mem+0x9e>
9000c95c:	330f      	adds	r3, #15
9000c95e:	f20d 4c34 	addw	ip, sp, #1076	@ 0x434
9000c962:	af01      	add	r7, sp, #4
9000c964:	f105 020f 	add.w	r2, r5, #15
9000c968:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000c96c:	ae42      	add	r6, sp, #264	@ 0x108
9000c96e:	e011      	b.n	9000c994 <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
9000c970:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
9000c974:	2ba1      	cmp	r3, #161	@ 0xa1
9000c976:	d8df      	bhi.n	9000c938 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000c978:	f817 5b01 	ldrb.w	r5, [r7], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000c97c:	eb06 0883 	add.w	r8, r6, r3, lsl #2
9000c980:	f85c 1b04 	ldr.w	r1, [ip], #4
  while (k < lastK)
9000c984:	4572      	cmp	r2, lr
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000c986:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000c98a:	46b1      	mov	r9, r6
9000c98c:	f8c8 10a4 	str.w	r1, [r8, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000c990:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
9000c992:	d014      	beq.n	9000c9be <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
9000c994:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
9000c998:	23a0      	movs	r3, #160	@ 0xa0
    if (l == 0UL)
9000c99a:	2900      	cmp	r1, #0
9000c99c:	d0ec      	beq.n	9000c978 <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
9000c99e:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
9000c9a0:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000c9a4:	29f0      	cmp	r1, #240	@ 0xf0
      l = (msb * 10UL) + lsb - 1UL;
9000c9a6:	eb05 0585 	add.w	r5, r5, r5, lsl #2
9000c9aa:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000c9ae:	d1df      	bne.n	9000c970 <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
9000c9b0:	23a1      	movs	r3, #161	@ 0xa1
9000c9b2:	e7e1      	b.n	9000c978 <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000c9b4:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  if (HuffTableAC != NULL)
9000c9b8:	e7c5      	b.n	9000c946 <JPEG_Set_HuffAC_Mem+0x2a>
9000c9ba:	f50d 7984 	add.w	r9, sp, #264	@ 0x108
      *addressDef = 0x0FFF0FFF;
9000c9be:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
    *addressDef = 0x0FD10FD0;
9000c9c2:	4a1a      	ldr	r2, [pc, #104]	@ (9000ca2c <JPEG_Set_HuffAC_Mem+0x110>)
9000c9c4:	eba9 0c89 	sub.w	ip, r9, r9, lsl #2
9000c9c8:	4649      	mov	r1, r9
      *addressDef = 0x0FFF0FFF;
9000c9ca:	6023      	str	r3, [r4, #0]
9000c9cc:	f10d 0566 	add.w	r5, sp, #102	@ 0x66
9000c9d0:	6063      	str	r3, [r4, #4]
9000c9d2:	f50c 7e4a 	add.w	lr, ip, #808	@ 0x328
9000c9d6:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
9000c9d8:	f103 33d3 	add.w	r3, r3, #3553874899	@ 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
9000c9dc:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
9000c9de:	f50c 7c49 	add.w	ip, ip, #804	@ 0x324
9000c9e2:	f103 232c 	add.w	r3, r3, #738208768	@ 0x2c002c00
9000c9e6:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
9000c9e8:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
9000c9ec:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
9000c9ee:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
9000c9f2:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000c9f4:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000c9f8:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000c9fc:	0212      	lsls	r2, r2, #8
9000c9fe:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000ca02:	021b      	lsls	r3, r3, #8
9000ca04:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000ca08:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    while (i > 1UL)
9000ca0c:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000ca0e:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000ca12:	433a      	orrs	r2, r7
    while (i > 1UL)
9000ca14:	42a9      	cmp	r1, r5
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000ca16:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
9000ca1a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000ca1e:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
9000ca22:	d1e7      	bne.n	9000c9f4 <JPEG_Set_HuffAC_Mem+0xd8>
}
9000ca24:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
9000ca28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000ca2c:	0fd10fd0 	.word	0x0fd10fd0

9000ca30 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000ca30:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000ca32:	6803      	ldr	r3, [r0, #0]
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000ca34:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
9000ca38:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ca3a:	6d42      	ldr	r2, [r0, #84]	@ 0x54
9000ca3c:	f002 0203 	and.w	r2, r2, #3
9000ca40:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000ca42:	685a      	ldr	r2, [r3, #4]
9000ca44:	bf0c      	ite	eq
9000ca46:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000ca4a:	f022 0208 	bicne.w	r2, r2, #8
9000ca4e:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000ca50:	681a      	ldr	r2, [r3, #0]
9000ca52:	f022 0201 	bic.w	r2, r2, #1
9000ca56:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000ca58:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000ca5a:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000ca5e:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000ca60:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000ca62:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
9000ca66:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000ca68:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000ca6a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000ca6e:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000ca70:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000ca72:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000ca76:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
9000ca78:	681a      	ldr	r2, [r3, #0]
9000ca7a:	f042 0201 	orr.w	r2, r2, #1
9000ca7e:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000ca80:	6d42      	ldr	r2, [r0, #84]	@ 0x54
9000ca82:	f002 020c 	and.w	r2, r2, #12
9000ca86:	2a08      	cmp	r2, #8
9000ca88:	d00a      	beq.n	9000caa0 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000ca8a:	6d42      	ldr	r2, [r0, #84]	@ 0x54
9000ca8c:	f002 020c 	and.w	r2, r2, #12
9000ca90:	2a0c      	cmp	r2, #12
9000ca92:	d000      	beq.n	9000ca96 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
9000ca94:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000ca96:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000ca98:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000ca9c:	631a      	str	r2, [r3, #48]	@ 0x30
}
9000ca9e:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
9000caa0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000caa2:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
9000caa6:	631a      	str	r2, [r3, #48]	@ 0x30
9000caa8:	4770      	bx	lr
9000caaa:	bf00      	nop

9000caac <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000caac:	6b01      	ldr	r1, [r0, #48]	@ 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000caae:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
9000cab0:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000cab2:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
{
9000cab4:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000cab6:	42aa      	cmp	r2, r5
9000cab8:	d32a      	bcc.n	9000cb10 <JPEG_DMA_StartProcess+0x64>
9000caba:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000cabc:	6b40      	ldr	r0, [r0, #52]	@ 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000cabe:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000cac0:	6a86      	ldr	r6, [r0, #40]	@ 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000cac2:	42b3      	cmp	r3, r6
9000cac4:	d324      	bcc.n	9000cb10 <JPEG_DMA_StartProcess+0x64>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000cac6:	4f19      	ldr	r7, [pc, #100]	@ (9000cb2c <JPEG_DMA_StartProcess+0x80>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000cac8:	f8df c06c 	ldr.w	ip, [pc, #108]	@ 9000cb38 <JPEG_DMA_StartProcess+0x8c>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000cacc:	654f      	str	r7, [r1, #84]	@ 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000cace:	f8c1 c044 	str.w	ip, [r1, #68]	@ 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000cad2:	4917      	ldr	r1, [pc, #92]	@ (9000cb30 <JPEG_DMA_StartProcess+0x84>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
9000cad4:	6547      	str	r7, [r0, #84]	@ 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000cad6:	6441      	str	r1, [r0, #68]	@ 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
9000cad8:	4916      	ldr	r1, [pc, #88]	@ (9000cb34 <JPEG_DMA_StartProcess+0x88>)
9000cada:	6581      	str	r1, [r0, #88]	@ 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
9000cadc:	b1a5      	cbz	r5, 9000cb08 <JPEG_DMA_StartProcess+0x5c>
9000cade:	b19e      	cbz	r6, 9000cb08 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000cae0:	fbb2 f1f5 	udiv	r1, r2, r5
9000cae4:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000cae8:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000caea:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000caec:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000caee:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000caf0:	3144      	adds	r1, #68	@ 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
9000caf2:	fbb3 f2f6 	udiv	r2, r3, r6
9000caf6:	fb06 3212 	mls	r2, r6, r2, r3
9000cafa:	1a9b      	subs	r3, r3, r2
9000cafc:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000cafe:	9500      	str	r5, [sp, #0]
9000cb00:	69e2      	ldr	r2, [r4, #28]
9000cb02:	f001 fbb3 	bl	9000e26c <HAL_MDMA_Start_IT>
9000cb06:	b130      	cbz	r0, 9000cb16 <JPEG_DMA_StartProcess+0x6a>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000cb08:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000cb0a:	f043 0304 	orr.w	r3, r3, #4
9000cb0e:	6523      	str	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
9000cb10:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
9000cb12:	b003      	add	sp, #12
9000cb14:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000cb16:	6822      	ldr	r2, [r4, #0]
9000cb18:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000cb1a:	69a1      	ldr	r1, [r4, #24]
9000cb1c:	3240      	adds	r2, #64	@ 0x40
9000cb1e:	9500      	str	r5, [sp, #0]
9000cb20:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000cb22:	f001 fba3 	bl	9000e26c <HAL_MDMA_Start_IT>
9000cb26:	2800      	cmp	r0, #0
9000cb28:	d0f3      	beq.n	9000cb12 <JPEG_DMA_StartProcess+0x66>
9000cb2a:	e7ed      	b.n	9000cb08 <JPEG_DMA_StartProcess+0x5c>
9000cb2c:	9000d041 	.word	0x9000d041
9000cb30:	9000d2b5 	.word	0x9000d2b5
9000cb34:	9000d335 	.word	0x9000d335
9000cb38:	9000d06d 	.word	0x9000d06d

9000cb3c <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000cb3c:	6803      	ldr	r3, [r0, #0]
9000cb3e:	685a      	ldr	r2, [r3, #4]
9000cb40:	f002 0203 	and.w	r2, r2, #3
9000cb44:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
9000cb46:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000cb4a:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000cb4c:	d018      	beq.n	9000cb80 <HAL_JPEG_GetInfo.part.0+0x44>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000cb4e:	685a      	ldr	r2, [r3, #4]
9000cb50:	f012 0203 	ands.w	r2, r2, #3
9000cb54:	d10b      	bne.n	9000cb6e <HAL_JPEG_GetInfo.part.0+0x32>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000cb56:	6859      	ldr	r1, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000cb58:	f8c9 2000 	str.w	r2, [r9]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000cb5c:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000cb5e:	0c09      	lsrs	r1, r1, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000cb60:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000cb62:	f8c9 1008 	str.w	r1, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000cb66:	f8c9 200c 	str.w	r2, [r9, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000cb6a:	2100      	movs	r1, #0
9000cb6c:	e02f      	b.n	9000cbce <HAL_JPEG_GetInfo.part.0+0x92>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
9000cb6e:	685a      	ldr	r2, [r3, #4]
9000cb70:	f002 0203 	and.w	r2, r2, #3
9000cb74:	2a03      	cmp	r2, #3
9000cb76:	f000 8097 	beq.w	9000cca8 <HAL_JPEG_GetInfo.part.0+0x16c>
    return HAL_ERROR;
9000cb7a:	2001      	movs	r0, #1
}
9000cb7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000cb80:	2110      	movs	r1, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000cb82:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000cb84:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000cb88:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000cb8a:	68d9      	ldr	r1, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000cb8c:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000cb90:	0c09      	lsrs	r1, r1, #16
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000cb92:	691a      	ldr	r2, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000cb94:	695c      	ldr	r4, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000cb96:	f8c9 100c 	str.w	r1, [r9, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000cb9a:	0916      	lsrs	r6, r2, #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000cb9c:	6999      	ldr	r1, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000cb9e:	f014 0ff0 	tst.w	r4, #240	@ 0xf0
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000cba2:	f3c2 1203 	ubfx	r2, r2, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000cba6:	ea4f 1714 	mov.w	r7, r4, lsr #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000cbaa:	ea4f 1111 	mov.w	r1, r1, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000cbae:	d105      	bne.n	9000cbbc <HAL_JPEG_GetInfo.part.0+0x80>
9000cbb0:	2a01      	cmp	r2, #1
9000cbb2:	d103      	bne.n	9000cbbc <HAL_JPEG_GetInfo.part.0+0x80>
9000cbb4:	070d      	lsls	r5, r1, #28
9000cbb6:	d1d8      	bne.n	9000cb6a <HAL_JPEG_GetInfo.part.0+0x2e>
9000cbb8:	2102      	movs	r1, #2
9000cbba:	e008      	b.n	9000cbce <HAL_JPEG_GetInfo.part.0+0x92>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000cbbc:	433e      	orrs	r6, r7
9000cbbe:	0734      	lsls	r4, r6, #28
9000cbc0:	d0d3      	beq.n	9000cb6a <HAL_JPEG_GetInfo.part.0+0x2e>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000cbc2:	430f      	orrs	r7, r1
9000cbc4:	0739      	lsls	r1, r7, #28
9000cbc6:	d1d0      	bne.n	9000cb6a <HAL_JPEG_GetInfo.part.0+0x2e>
9000cbc8:	2a03      	cmp	r2, #3
9000cbca:	d1ce      	bne.n	9000cb6a <HAL_JPEG_GetInfo.part.0+0x2e>
9000cbcc:	2101      	movs	r1, #1
9000cbce:	4a42      	ldr	r2, [pc, #264]	@ (9000ccd8 <HAL_JPEG_GetInfo.part.0+0x19c>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
9000cbd0:	f103 0c50 	add.w	ip, r3, #80	@ 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
9000cbd4:	f8c9 1004 	str.w	r1, [r9, #4]
  uint32_t quality = 0;
9000cbd8:	2600      	movs	r6, #0
9000cbda:	f102 0440 	add.w	r4, r2, #64	@ 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000cbde:	f04f 0e64 	mov.w	lr, #100	@ 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
9000cbe2:	f241 3188 	movw	r1, #5000	@ 0x1388
9000cbe6:	e033      	b.n	9000cc50 <HAL_JPEG_GetInfo.part.0+0x114>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000cbe8:	f892 8001 	ldrb.w	r8, [r2, #1]
9000cbec:	fb0e f707 	mul.w	r7, lr, r7
9000cbf0:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000cbf2:	f815 8008 	ldrb.w	r8, [r5, r8]
9000cbf6:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000cbfa:	2f64      	cmp	r7, #100	@ 0x64
9000cbfc:	d958      	bls.n	9000ccb0 <HAL_JPEG_GetInfo.part.0+0x174>
          quality += 5000UL / scale;
9000cbfe:	fbb1 f7f7 	udiv	r7, r1, r7
9000cc02:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000cc04:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
9000cc08:	2f01      	cmp	r7, #1
9000cc0a:	d03d      	beq.n	9000cc88 <HAL_JPEG_GetInfo.part.0+0x14c>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000cc0c:	f892 8002 	ldrb.w	r8, [r2, #2]
9000cc10:	fb0e f707 	mul.w	r7, lr, r7
9000cc14:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000cc16:	f815 8008 	ldrb.w	r8, [r5, r8]
9000cc1a:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000cc1e:	2f64      	cmp	r7, #100	@ 0x64
9000cc20:	d955      	bls.n	9000ccce <HAL_JPEG_GetInfo.part.0+0x192>
          quality += 5000UL / scale;
9000cc22:	fbb1 f7f7 	udiv	r7, r1, r7
9000cc26:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000cc28:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
9000cc2a:	2b01      	cmp	r3, #1
9000cc2c:	d030      	beq.n	9000cc90 <HAL_JPEG_GetInfo.part.0+0x154>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000cc2e:	78d7      	ldrb	r7, [r2, #3]
9000cc30:	fb0e f303 	mul.w	r3, lr, r3
9000cc34:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000cc36:	5def      	ldrb	r7, [r5, r7]
9000cc38:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
9000cc3c:	2b64      	cmp	r3, #100	@ 0x64
9000cc3e:	d93c      	bls.n	9000ccba <HAL_JPEG_GetInfo.part.0+0x17e>
          quality += 5000UL / scale;
9000cc40:	fbb1 f3f3 	udiv	r3, r1, r3
9000cc44:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000cc46:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
9000cc48:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000cc4c:	4294      	cmp	r4, r2
9000cc4e:	d025      	beq.n	9000cc9c <HAL_JPEG_GetInfo.part.0+0x160>
    quantRow = *tableAddress;
9000cc50:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000cc54:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
9000cc56:	2f01      	cmp	r7, #1
9000cc58:	d028      	beq.n	9000ccac <HAL_JPEG_GetInfo.part.0+0x170>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000cc5a:	f892 8000 	ldrb.w	r8, [r2]
9000cc5e:	fb0e f707 	mul.w	r7, lr, r7
9000cc62:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000cc64:	f815 8008 	ldrb.w	r8, [r5, r8]
9000cc68:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000cc6c:	2f64      	cmp	r7, #100	@ 0x64
9000cc6e:	d929      	bls.n	9000ccc4 <HAL_JPEG_GetInfo.part.0+0x188>
          quality += 5000UL / scale;
9000cc70:	fbb1 f7f7 	udiv	r7, r1, r7
9000cc74:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000cc76:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
9000cc7a:	2f01      	cmp	r7, #1
9000cc7c:	d1b4      	bne.n	9000cbe8 <HAL_JPEG_GetInfo.part.0+0xac>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000cc7e:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
9000cc82:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
9000cc84:	2f01      	cmp	r7, #1
9000cc86:	d1c1      	bne.n	9000cc0c <HAL_JPEG_GetInfo.part.0+0xd0>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000cc88:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
9000cc8a:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
9000cc8c:	2b01      	cmp	r3, #1
9000cc8e:	d1ce      	bne.n	9000cc2e <HAL_JPEG_GetInfo.part.0+0xf2>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000cc90:	3204      	adds	r2, #4
        quality += 100UL;
9000cc92:	3664      	adds	r6, #100	@ 0x64
    tableAddress ++;
9000cc94:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000cc98:	4294      	cmp	r4, r2
9000cc9a:	d1d9      	bne.n	9000cc50 <HAL_JPEG_GetInfo.part.0+0x114>
  }

  return (quality / 64UL);
9000cc9c:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
9000cc9e:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
9000cca0:	f8c9 6010 	str.w	r6, [r9, #16]
}
9000cca4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000cca8:	2130      	movs	r1, #48	@ 0x30
9000ccaa:	e76a      	b.n	9000cb82 <HAL_JPEG_GetInfo.part.0+0x46>
        quality += 100UL;
9000ccac:	3664      	adds	r6, #100	@ 0x64
9000ccae:	e7e2      	b.n	9000cc76 <HAL_JPEG_GetInfo.part.0+0x13a>
          quality += (200UL - scale) / 2UL;
9000ccb0:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000ccb4:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000ccb8:	e7a4      	b.n	9000cc04 <HAL_JPEG_GetInfo.part.0+0xc8>
9000ccba:	f1c3 03c8 	rsb	r3, r3, #200	@ 0xc8
9000ccbe:	eb06 0653 	add.w	r6, r6, r3, lsr #1
9000ccc2:	e7c0      	b.n	9000cc46 <HAL_JPEG_GetInfo.part.0+0x10a>
9000ccc4:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000ccc8:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000cccc:	e7d3      	b.n	9000cc76 <HAL_JPEG_GetInfo.part.0+0x13a>
9000ccce:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000ccd2:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000ccd6:	e7a7      	b.n	9000cc28 <HAL_JPEG_GetInfo.part.0+0xec>
9000ccd8:	9002f6d4 	.word	0x9002f6d4

9000ccdc <HAL_JPEG_Init>:
  if (hjpeg == NULL)
9000ccdc:	2800      	cmp	r0, #0
9000ccde:	f000 8107 	beq.w	9000cef0 <HAL_JPEG_Init+0x214>
{
9000cce2:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
9000cce4:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
9000cce8:	4605      	mov	r5, r0
9000ccea:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000ccee:	2b00      	cmp	r3, #0
9000ccf0:	f000 80f9 	beq.w	9000cee6 <HAL_JPEG_Init+0x20a>
  __HAL_JPEG_ENABLE(hjpeg);
9000ccf4:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000ccf6:	2202      	movs	r2, #2
  hjpeg->QuantTable2 = NULL;
9000ccf8:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000ccfa:	497e      	ldr	r1, [pc, #504]	@ (9000cef4 <HAL_JPEG_Init+0x218>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000ccfc:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
9000cd00:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000cd02:	f042 0201 	orr.w	r2, r2, #1
9000cd06:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000cd08:	6822      	ldr	r2, [r4, #0]
9000cd0a:	f022 0201 	bic.w	r2, r2, #1
9000cd0e:	6022      	str	r2, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000cd10:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000cd12:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000cd16:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000cd18:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000cd1a:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
9000cd1e:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000cd20:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000cd22:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000cd26:	6322      	str	r2, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000cd28:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000cd2a:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000cd2e:	63a2      	str	r2, [r4, #56]	@ 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000cd30:	4a71      	ldr	r2, [pc, #452]	@ (9000cef8 <HAL_JPEG_Init+0x21c>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000cd32:	63e9      	str	r1, [r5, #60]	@ 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000cd34:	2101      	movs	r1, #1
  hjpeg->QuantTable2 = NULL;
9000cd36:	64ab      	str	r3, [r5, #72]	@ 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000cd38:	e9c5 2310 	strd	r2, r3, [r5, #64]	@ 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000cd3c:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
9000cd40:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
9000cd44:	4b6d      	ldr	r3, [pc, #436]	@ (9000cefc <HAL_JPEG_Init+0x220>)
9000cd46:	f8c4 1368 	str.w	r1, [r4, #872]	@ 0x368
9000cd4a:	f8c4 2364 	str.w	r2, [r4, #868]	@ 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000cd4e:	496c      	ldr	r1, [pc, #432]	@ (9000cf00 <HAL_JPEG_Init+0x224>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000cd50:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000cd54:	4b6b      	ldr	r3, [pc, #428]	@ (9000cf04 <HAL_JPEG_Init+0x228>)
9000cd56:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
9000cd5a:	4a6b      	ldr	r2, [pc, #428]	@ (9000cf08 <HAL_JPEG_Init+0x22c>)
9000cd5c:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000cd60:	4b6a      	ldr	r3, [pc, #424]	@ (9000cf0c <HAL_JPEG_Init+0x230>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000cd62:	f8c4 2370 	str.w	r2, [r4, #880]	@ 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000cd66:	496a      	ldr	r1, [pc, #424]	@ (9000cf10 <HAL_JPEG_Init+0x234>)
9000cd68:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
9000cd6c:	4a69      	ldr	r2, [pc, #420]	@ (9000cf14 <HAL_JPEG_Init+0x238>)
9000cd6e:	4b6a      	ldr	r3, [pc, #424]	@ (9000cf18 <HAL_JPEG_Init+0x23c>)
9000cd70:	f8c4 1384 	str.w	r1, [r4, #900]	@ 0x384
9000cd74:	f8c4 2380 	str.w	r2, [r4, #896]	@ 0x380
9000cd78:	f8c4 337c 	str.w	r3, [r4, #892]	@ 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000cd7c:	f64f 23f9 	movw	r3, #64249	@ 0xfaf9
  value = *address & 0xFFFF0000U;
9000cd80:	f8d4 142c 	ldr.w	r1, [r4, #1068]	@ 0x42c
9000cd84:	4a65      	ldr	r2, [pc, #404]	@ (9000cf1c <HAL_JPEG_Init+0x240>)
9000cd86:	400a      	ands	r2, r1
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
9000cd88:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000cd8c:	4313      	orrs	r3, r2
  *address = value;
9000cd8e:	4a64      	ldr	r2, [pc, #400]	@ (9000cf20 <HAL_JPEG_Init+0x244>)
9000cd90:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
9000cd94:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000cd98:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
  while (index > 3UL)
9000cd9c:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000cd9e:	f892 e0b3 	ldrb.w	lr, [r2, #179]	@ 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000cda2:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000cda4:	f892 c0b0 	ldrb.w	ip, [r2, #176]	@ 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000cda8:	f892 00b1 	ldrb.w	r0, [r2, #177]	@ 0xb1
  while (index > 3UL)
9000cdac:	4296      	cmp	r6, r2
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000cdae:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000cdb2:	ea43 030c 	orr.w	r3, r3, ip
9000cdb6:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000cdba:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
9000cdbe:	d1eb      	bne.n	9000cd98 <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
9000cdc0:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000cdc4:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
  value = *address & 0xFFFF0000U;
9000cdc8:	4954      	ldr	r1, [pc, #336]	@ (9000cf1c <HAL_JPEG_Init+0x240>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000cdca:	2001      	movs	r0, #1
  value = *address & 0x0000FFFFU;
9000cdcc:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
9000cdce:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
9000cdd2:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
9000cdd6:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
9000cdda:	400b      	ands	r3, r1
  *address = value;
9000cddc:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000cde0:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
9000cde4:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
9000cde8:	f8c4 2430 	str.w	r2, [r4, #1072]	@ 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000cdec:	f640 320a 	movw	r2, #2826	@ 0xb0a
  value = *address & 0x0000FFFFUL;
9000cdf0:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
9000cdf4:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
9000cdf6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
9000cdfa:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
9000cdfe:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
9000ce02:	400b      	ands	r3, r1
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000ce04:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000ce06:	4b47      	ldr	r3, [pc, #284]	@ (9000cf24 <HAL_JPEG_Init+0x248>)
  *address = value;
9000ce08:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000ce0c:	f247 7202 	movw	r2, #30466	@ 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000ce10:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
9000ce14:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
9000ce18:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
9000ce1c:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
9000ce20:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
9000ce22:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
9000ce26:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
9000ce2a:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
9000ce2e:	400b      	ands	r3, r1
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000ce30:	493d      	ldr	r1, [pc, #244]	@ (9000cf28 <HAL_JPEG_Init+0x24c>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000ce32:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000ce34:	4b3d      	ldr	r3, [pc, #244]	@ (9000cf2c <HAL_JPEG_Init+0x250>)
  *address = value;
9000ce36:	f8c4 2458 	str.w	r2, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000ce3a:	4a3d      	ldr	r2, [pc, #244]	@ (9000cf30 <HAL_JPEG_Init+0x254>)
9000ce3c:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
9000ce40:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000ce44:	f8c4 2450 	str.w	r2, [r4, #1104]	@ 0x450
9000ce48:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
9000ce4c:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000ce50:	4a38      	ldr	r2, [pc, #224]	@ (9000cf34 <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFUL;
9000ce52:	b29b      	uxth	r3, r3
9000ce54:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000ce58:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
9000ce5c:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000ce60:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
  while (index > 3UL)
9000ce64:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000ce66:	f892 e0b5 	ldrb.w	lr, [r2, #181]	@ 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000ce6a:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
9000ce6c:	f892 c0b2 	ldrb.w	ip, [r2, #178]	@ 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000ce70:	f892 00b3 	ldrb.w	r0, [r2, #179]	@ 0xb3
  while (index > 3UL)
9000ce74:	4296      	cmp	r6, r2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000ce76:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000ce7a:	ea43 030c 	orr.w	r3, r3, ip
9000ce7e:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000ce82:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
9000ce86:	d1eb      	bne.n	9000ce60 <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
9000ce88:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
9000ce8c:	4924      	ldr	r1, [pc, #144]	@ (9000cf20 <HAL_JPEG_Init+0x244>)
9000ce8e:	4628      	mov	r0, r5
9000ce90:	f7ff fd44 	bl	9000c91c <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000ce94:	b118      	cbz	r0, 9000ce9e <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000ce96:	2301      	movs	r3, #1
    return HAL_ERROR;
9000ce98:	2001      	movs	r0, #1
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000ce9a:	652b      	str	r3, [r5, #80]	@ 0x50
}
9000ce9c:	bd70      	pop	{r4, r5, r6, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
9000ce9e:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
9000cea2:	4924      	ldr	r1, [pc, #144]	@ (9000cf34 <HAL_JPEG_Init+0x258>)
9000cea4:	4628      	mov	r0, r5
9000cea6:	f7ff fd39 	bl	9000c91c <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000ceaa:	2800      	cmp	r0, #0
9000ceac:	d1f3      	bne.n	9000ce96 <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000ceae:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
9000ceb2:	4921      	ldr	r1, [pc, #132]	@ (9000cf38 <HAL_JPEG_Init+0x25c>)
9000ceb4:	4628      	mov	r0, r5
9000ceb6:	f7ff fc87 	bl	9000c7c8 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
9000ceba:	2800      	cmp	r0, #0
9000cebc:	d1eb      	bne.n	9000ce96 <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
9000cebe:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
9000cec2:	491e      	ldr	r1, [pc, #120]	@ (9000cf3c <HAL_JPEG_Init+0x260>)
9000cec4:	4628      	mov	r0, r5
9000cec6:	f7ff fc7f 	bl	9000c7c8 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
9000ceca:	2800      	cmp	r0, #0
9000cecc:	d1e3      	bne.n	9000ce96 <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000cece:	6863      	ldr	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
9000ced0:	2201      	movs	r2, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000ced2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000ced6:	6063      	str	r3, [r4, #4]
  hjpeg->JpegInCount = 0;
9000ced8:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
9000ceda:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
9000cedc:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
9000cee0:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
9000cee2:	6568      	str	r0, [r5, #84]	@ 0x54
}
9000cee4:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
9000cee6:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
9000ceea:	f7f4 fa25 	bl	90001338 <HAL_JPEG_MspInit>
9000ceee:	e701      	b.n	9000ccf4 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
9000cef0:	2001      	movs	r0, #1
}
9000cef2:	4770      	bx	lr
9000cef4:	9002f694 	.word	0x9002f694
9000cef8:	9002f654 	.word	0x9002f654
9000cefc:	01050100 	.word	0x01050100
9000cf00:	0b0a0908 	.word	0x0b0a0908
9000cf04:	07060504 	.word	0x07060504
9000cf08:	03020100 	.word	0x03020100
9000cf0c:	7d010000 	.word	0x7d010000
9000cf10:	04040505 	.word	0x04040505
9000cf14:	03040203 	.word	0x03040203
9000cf18:	03010200 	.word	0x03010200
9000cf1c:	ffff0000 	.word	0xffff0000
9000cf20:	9002f7c8 	.word	0x9002f7c8
9000cf24:	09080706 	.word	0x09080706
9000cf28:	01000404 	.word	0x01000404
9000cf2c:	04040201 	.word	0x04040201
9000cf30:	05070403 	.word	0x05070403
9000cf34:	9002f714 	.word	0x9002f714
9000cf38:	9002f898 	.word	0x9002f898
9000cf3c:	9002f87c 	.word	0x9002f87c

9000cf40 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000cf40:	2b00      	cmp	r3, #0
9000cf42:	bf18      	it	ne
9000cf44:	2900      	cmpne	r1, #0
9000cf46:	d036      	beq.n	9000cfb6 <HAL_JPEG_Decode_DMA+0x76>
{
9000cf48:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000cf4a:	fab0 f580 	clz	r5, r0
9000cf4e:	4604      	mov	r4, r0
9000cf50:	096d      	lsrs	r5, r5, #5
9000cf52:	b370      	cbz	r0, 9000cfb2 <HAL_JPEG_Decode_DMA+0x72>
  __HAL_LOCK(hjpeg);
9000cf54:	f890 c04c 	ldrb.w	ip, [r0, #76]	@ 0x4c
9000cf58:	f1bc 0f01 	cmp.w	ip, #1
9000cf5c:	d022      	beq.n	9000cfa4 <HAL_JPEG_Decode_DMA+0x64>
9000cf5e:	f04f 0c01 	mov.w	ip, #1
9000cf62:	f880 c04c 	strb.w	ip, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000cf66:	f890 c04d 	ldrb.w	ip, [r0, #77]	@ 0x4d
9000cf6a:	f1bc 0f01 	cmp.w	ip, #1
9000cf6e:	d117      	bne.n	9000cfa0 <HAL_JPEG_Decode_DMA+0x60>
    hjpeg->InDataLength = InDataLength;
9000cf70:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
9000cf72:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
9000cf76:	9b04      	ldr	r3, [sp, #16]
9000cf78:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
9000cf7a:	2304      	movs	r3, #4
9000cf7c:	f880 304d 	strb.w	r3, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
9000cf80:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000cf82:	f023 030f 	bic.w	r3, r3, #15
9000cf86:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
9000cf88:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000cf8a:	f043 030e 	orr.w	r3, r3, #14
9000cf8e:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
9000cf90:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
9000cf92:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
9000cf94:	f7ff fd4c 	bl	9000ca30 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
9000cf98:	f7ff fd88 	bl	9000caac <JPEG_DMA_StartProcess>
9000cf9c:	b920      	cbnz	r0, 9000cfa8 <HAL_JPEG_Decode_DMA+0x68>
}
9000cf9e:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
9000cfa0:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
9000cfa4:	2002      	movs	r0, #2
}
9000cfa6:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000cfa8:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
9000cfaa:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000cfae:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
9000cfb2:	2001      	movs	r0, #1
}
9000cfb4:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000cfb6:	2001      	movs	r0, #1
}
9000cfb8:	4770      	bx	lr
9000cfba:	bf00      	nop

9000cfbc <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000cfbc:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000cfbe:	f003 030c 	and.w	r3, r3, #12
9000cfc2:	2b0c      	cmp	r3, #12
9000cfc4:	d01a      	beq.n	9000cffc <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000cfc6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000cfc8:	f003 030c 	and.w	r3, r3, #12
9000cfcc:	2b08      	cmp	r3, #8
9000cfce:	d001      	beq.n	9000cfd4 <HAL_JPEG_Pause+0x18>
}
9000cfd0:	2000      	movs	r0, #0
9000cfd2:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000cfd4:	07ca      	lsls	r2, r1, #31
9000cfd6:	d41f      	bmi.n	9000d018 <HAL_JPEG_Pause+0x5c>
9000cfd8:	f04f 3cff 	mov.w	ip, #4294967295
9000cfdc:	f06f 0228 	mvn.w	r2, #40	@ 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000cfe0:	078b      	lsls	r3, r1, #30
9000cfe2:	d504      	bpl.n	9000cfee <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000cfe4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000cfe6:	4694      	mov	ip, r2
9000cfe8:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
9000cfec:	6543      	str	r3, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000cfee:	6802      	ldr	r2, [r0, #0]
}
9000cff0:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000cff2:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000cff4:	ea03 030c 	and.w	r3, r3, ip
9000cff8:	6313      	str	r3, [r2, #48]	@ 0x30
}
9000cffa:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000cffc:	07cb      	lsls	r3, r1, #31
9000cffe:	d503      	bpl.n	9000d008 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000d000:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000d002:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000d006:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000d008:	0789      	lsls	r1, r1, #30
9000d00a:	d5e1      	bpl.n	9000cfd0 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000d00c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000d00e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
9000d012:	6543      	str	r3, [r0, #84]	@ 0x54
}
9000d014:	2000      	movs	r0, #0
9000d016:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000d018:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000d01a:	f06f 0c06 	mvn.w	ip, #6
9000d01e:	f06f 022e 	mvn.w	r2, #46	@ 0x2e
9000d022:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000d026:	6543      	str	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000d028:	e7da      	b.n	9000cfe0 <HAL_JPEG_Pause+0x24>
9000d02a:	bf00      	nop

9000d02c <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
9000d02c:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
9000d02e:	6282      	str	r2, [r0, #40]	@ 0x28
}
9000d030:	4770      	bx	lr
9000d032:	bf00      	nop

9000d034 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000d034:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000d036:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
9000d038:	4770      	bx	lr
9000d03a:	bf00      	nop

9000d03c <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
9000d03c:	4770      	bx	lr
9000d03e:	bf00      	nop

9000d040 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000d040:	6c00      	ldr	r0, [r0, #64]	@ 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000d042:	2101      	movs	r1, #1
{
9000d044:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d046:	6803      	ldr	r3, [r0, #0]
9000d048:	681a      	ldr	r2, [r3, #0]
9000d04a:	f022 0201 	bic.w	r2, r2, #1
9000d04e:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000d050:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000d052:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000d056:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
9000d058:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000d05c:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000d05e:	f043 0304 	orr.w	r3, r3, #4
9000d062:	6503      	str	r3, [r0, #80]	@ 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
9000d064:	f7f5 fea2 	bl	90002dac <HAL_JPEG_ErrorCallback>
}
9000d068:	bd08      	pop	{r3, pc}
9000d06a:	bf00      	nop

9000d06c <JPEG_MDMAInCpltCallback>:
{
9000d06c:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000d06e:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000d070:	f248 010c 	movw	r1, #32780	@ 0x800c
{
9000d074:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000d076:	6822      	ldr	r2, [r4, #0]
9000d078:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000d07a:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
9000d07e:	6313      	str	r3, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000d080:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000d082:	400b      	ands	r3, r1
9000d084:	2b0c      	cmp	r3, #12
9000d086:	d001      	beq.n	9000d08c <JPEG_MDMAInCpltCallback+0x20>
}
9000d088:	b003      	add	sp, #12
9000d08a:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000d08c:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000d08e:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000d090:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000d092:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000d094:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000d096:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000d09a:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000d09c:	1a9b      	subs	r3, r3, r2
9000d09e:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000d0a0:	6a21      	ldr	r1, [r4, #32]
9000d0a2:	f7f5 fe21 	bl	90002ce8 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000d0a6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000d0a8:	42ab      	cmp	r3, r5
9000d0aa:	d311      	bcc.n	9000d0d0 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
9000d0ac:	b305      	cbz	r5, 9000d0f0 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000d0ae:	fbb3 f2f5 	udiv	r2, r3, r5
9000d0b2:	fb05 3212 	mls	r2, r5, r2, r3
9000d0b6:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000d0b8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000d0ba:	62a3      	str	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000d0bc:	04d1      	lsls	r1, r2, #19
9000d0be:	d400      	bmi.n	9000d0c2 <JPEG_MDMAInCpltCallback+0x56>
9000d0c0:	b963      	cbnz	r3, 9000d0dc <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000d0c2:	6822      	ldr	r2, [r4, #0]
9000d0c4:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000d0c6:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
9000d0ca:	6313      	str	r3, [r2, #48]	@ 0x30
}
9000d0cc:	b003      	add	sp, #12
9000d0ce:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
9000d0d0:	b1cb      	cbz	r3, 9000d106 <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000d0d2:	0798      	lsls	r0, r3, #30
9000d0d4:	d119      	bne.n	9000d10a <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000d0d6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000d0d8:	04d2      	lsls	r2, r2, #19
9000d0da:	d4f2      	bmi.n	9000d0c2 <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000d0dc:	6822      	ldr	r2, [r4, #0]
9000d0de:	2501      	movs	r5, #1
9000d0e0:	69a1      	ldr	r1, [r4, #24]
9000d0e2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000d0e4:	3240      	adds	r2, #64	@ 0x40
9000d0e6:	9500      	str	r5, [sp, #0]
9000d0e8:	f001 f8c0 	bl	9000e26c <HAL_MDMA_Start_IT>
9000d0ec:	2800      	cmp	r0, #0
9000d0ee:	d0e8      	beq.n	9000d0c2 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000d0f0:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000d0f2:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
9000d0f4:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000d0f6:	f043 0304 	orr.w	r3, r3, #4
9000d0fa:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000d0fc:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
9000d100:	f7f5 fe54 	bl	90002dac <HAL_JPEG_ErrorCallback>
        return;
9000d104:	e7c0      	b.n	9000d088 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000d106:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000d108:	e7db      	b.n	9000d0c2 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000d10a:	f023 0303 	bic.w	r3, r3, #3
9000d10e:	3304      	adds	r3, #4
9000d110:	e7d2      	b.n	9000d0b8 <JPEG_MDMAInCpltCallback+0x4c>
9000d112:	bf00      	nop

9000d114 <JPEG_DMA_PollResidualData>:
{
9000d114:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000d116:	6802      	ldr	r2, [r0, #0]
9000d118:	2610      	movs	r6, #16
{
9000d11a:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000d11c:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000d11e:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000d122:	d11d      	bne.n	9000d160 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000d124:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000d126:	06df      	lsls	r7, r3, #27
9000d128:	d51a      	bpl.n	9000d160 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000d12a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000d12c:	69e7      	ldr	r7, [r4, #28]
9000d12e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000d130:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000d132:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000d134:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000d136:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000d138:	6a67      	ldr	r7, [r4, #36]	@ 0x24
9000d13a:	69e2      	ldr	r2, [r4, #28]
9000d13c:	443a      	add	r2, r7
9000d13e:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000d140:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000d142:	69e2      	ldr	r2, [r4, #28]
9000d144:	4402      	add	r2, r0
9000d146:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000d148:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d14a:	69e2      	ldr	r2, [r4, #28]
9000d14c:	440a      	add	r2, r1
9000d14e:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
9000d150:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000d152:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hjpeg->JpegOutCount += 4UL;
9000d154:	3304      	adds	r3, #4
9000d156:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000d158:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d15a:	4293      	cmp	r3, r2
9000d15c:	d021      	beq.n	9000d1a2 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000d15e:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000d160:	3e01      	subs	r6, #1
9000d162:	d1db      	bne.n	9000d11c <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
9000d164:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000d166:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000d168:	06d8      	lsls	r0, r3, #27
9000d16a:	d501      	bpl.n	9000d170 <JPEG_DMA_PollResidualData+0x5c>
9000d16c:	048b      	lsls	r3, r1, #18
9000d16e:	d417      	bmi.n	9000d1a0 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d170:	6813      	ldr	r3, [r2, #0]
9000d172:	f023 0301 	bic.w	r3, r3, #1
9000d176:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
9000d178:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d17a:	b9eb      	cbnz	r3, 9000d1b8 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
9000d17c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000d17e:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d180:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000d182:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d184:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000d188:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d18c:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000d190:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d192:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d194:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000d196:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d19a:	d00a      	beq.n	9000d1b2 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000d19c:	f7ff ff4e 	bl	9000d03c <HAL_JPEG_EncodeCpltCallback>
}
9000d1a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d1a2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d1a4:	4620      	mov	r0, r4
9000d1a6:	69e1      	ldr	r1, [r4, #28]
9000d1a8:	f7f5 fdbe 	bl	90002d28 <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000d1ac:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000d1ae:	6265      	str	r5, [r4, #36]	@ 0x24
9000d1b0:	e7d6      	b.n	9000d160 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000d1b2:	f7f5 fdfd 	bl	90002db0 <HAL_JPEG_DecodeCpltCallback>
}
9000d1b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d1b8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d1ba:	4620      	mov	r0, r4
9000d1bc:	69e1      	ldr	r1, [r4, #28]
9000d1be:	f7f5 fdb3 	bl	90002d28 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000d1c2:	2300      	movs	r3, #0
9000d1c4:	6263      	str	r3, [r4, #36]	@ 0x24
9000d1c6:	e7d9      	b.n	9000d17c <JPEG_DMA_PollResidualData+0x68>

9000d1c8 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
9000d1c8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000d1ca:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
9000d1ce:	d06f      	beq.n	9000d2b0 <HAL_JPEG_Resume+0xe8>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000d1d0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000d1d2:	f003 030c 	and.w	r3, r3, #12
9000d1d6:	2b0c      	cmp	r3, #12
{
9000d1d8:	b530      	push	{r4, r5, lr}
9000d1da:	4604      	mov	r4, r0
9000d1dc:	b083      	sub	sp, #12
9000d1de:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000d1e0:	d007      	beq.n	9000d1f2 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000d1e2:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000d1e4:	f003 030c 	and.w	r3, r3, #12
9000d1e8:	2b08      	cmp	r3, #8
9000d1ea:	d035      	beq.n	9000d258 <HAL_JPEG_Resume+0x90>
  return HAL_OK;
9000d1ec:	2000      	movs	r0, #0
}
9000d1ee:	b003      	add	sp, #12
9000d1f0:	bd30      	pop	{r4, r5, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000d1f2:	07c8      	lsls	r0, r1, #31
9000d1f4:	d415      	bmi.n	9000d222 <HAL_JPEG_Resume+0x5a>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000d1f6:	07a9      	lsls	r1, r5, #30
9000d1f8:	d5f8      	bpl.n	9000d1ec <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000d1fa:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000d1fc:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
9000d200:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000d202:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000d204:	041a      	lsls	r2, r3, #16
9000d206:	d44f      	bmi.n	9000d2a8 <HAL_JPEG_Resume+0xe0>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000d208:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000d20a:	6a82      	ldr	r2, [r0, #40]	@ 0x28
        if (xfrSize == 0UL)
9000d20c:	2a00      	cmp	r2, #0
9000d20e:	d13a      	bne.n	9000d286 <HAL_JPEG_Resume+0xbe>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000d210:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000d212:	2206      	movs	r2, #6
    return HAL_ERROR;
9000d214:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000d216:	f043 0304 	orr.w	r3, r3, #4
9000d21a:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000d21c:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          return HAL_ERROR;
9000d220:	e7e5      	b.n	9000d1ee <HAL_JPEG_Resume+0x26>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000d222:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000d224:	6b20      	ldr	r0, [r4, #48]	@ 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000d226:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000d22a:	6a82      	ldr	r2, [r0, #40]	@ 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000d22c:	6563      	str	r3, [r4, #84]	@ 0x54
      if (xfrSize == 0UL)
9000d22e:	2a00      	cmp	r2, #0
9000d230:	d0ee      	beq.n	9000d210 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000d232:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000d234:	fbb3 f1f2 	udiv	r1, r3, r2
9000d238:	fb02 3211 	mls	r2, r2, r1, r3
9000d23c:	1a9b      	subs	r3, r3, r2
9000d23e:	62a3      	str	r3, [r4, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
9000d240:	2b00      	cmp	r3, #0
9000d242:	d0d8      	beq.n	9000d1f6 <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000d244:	6822      	ldr	r2, [r4, #0]
9000d246:	2101      	movs	r1, #1
9000d248:	3240      	adds	r2, #64	@ 0x40
9000d24a:	9100      	str	r1, [sp, #0]
9000d24c:	69a1      	ldr	r1, [r4, #24]
9000d24e:	f001 f80d 	bl	9000e26c <HAL_MDMA_Start_IT>
9000d252:	2800      	cmp	r0, #0
9000d254:	d0cf      	beq.n	9000d1f6 <HAL_JPEG_Resume+0x2e>
9000d256:	e7db      	b.n	9000d210 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000d258:	f011 0101 	ands.w	r1, r1, #1
9000d25c:	d011      	beq.n	9000d282 <HAL_JPEG_Resume+0xba>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000d25e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000d260:	222e      	movs	r2, #46	@ 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000d262:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000d264:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000d268:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000d26a:	07ab      	lsls	r3, r5, #30
9000d26c:	d504      	bpl.n	9000d278 <HAL_JPEG_Resume+0xb0>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000d26e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000d270:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000d272:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
9000d276:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000d278:	6822      	ldr	r2, [r4, #0]
9000d27a:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000d27c:	430b      	orrs	r3, r1
9000d27e:	6313      	str	r3, [r2, #48]	@ 0x30
9000d280:	e7b4      	b.n	9000d1ec <HAL_JPEG_Resume+0x24>
9000d282:	2228      	movs	r2, #40	@ 0x28
9000d284:	e7f1      	b.n	9000d26a <HAL_JPEG_Resume+0xa2>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000d286:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000d288:	fbb3 f1f2 	udiv	r1, r3, r2
9000d28c:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000d290:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000d292:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000d294:	2201      	movs	r2, #1
9000d296:	3144      	adds	r1, #68	@ 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000d298:	62e3      	str	r3, [r4, #44]	@ 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000d29a:	9200      	str	r2, [sp, #0]
9000d29c:	69e2      	ldr	r2, [r4, #28]
9000d29e:	f000 ffe5 	bl	9000e26c <HAL_MDMA_Start_IT>
9000d2a2:	2800      	cmp	r0, #0
9000d2a4:	d0a2      	beq.n	9000d1ec <HAL_JPEG_Resume+0x24>
9000d2a6:	e7b3      	b.n	9000d210 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000d2a8:	4620      	mov	r0, r4
9000d2aa:	f7ff ff33 	bl	9000d114 <JPEG_DMA_PollResidualData>
9000d2ae:	e79d      	b.n	9000d1ec <HAL_JPEG_Resume+0x24>
    return HAL_ERROR;
9000d2b0:	2001      	movs	r0, #1
}
9000d2b2:	4770      	bx	lr

9000d2b4 <JPEG_MDMAOutCpltCallback>:
{
9000d2b4:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000d2b6:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000d2b8:	f248 010c 	movw	r1, #32780	@ 0x800c
{
9000d2bc:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000d2be:	6823      	ldr	r3, [r4, #0]
9000d2c0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000d2c2:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000d2c6:	631a      	str	r2, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000d2c8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000d2ca:	400a      	ands	r2, r1
9000d2cc:	2a0c      	cmp	r2, #12
9000d2ce:	d001      	beq.n	9000d2d4 <JPEG_MDMAOutCpltCallback+0x20>
}
9000d2d0:	b003      	add	sp, #12
9000d2d2:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000d2d4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000d2d6:	0692      	lsls	r2, r2, #26
9000d2d8:	d505      	bpl.n	9000d2e6 <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000d2da:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000d2dc:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000d2e0:	631a      	str	r2, [r3, #48]	@ 0x30
}
9000d2e2:	b003      	add	sp, #12
9000d2e4:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000d2e6:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d2e8:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000d2ea:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000d2ec:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d2ee:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000d2f0:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000d2f4:	1a9b      	subs	r3, r3, r2
9000d2f6:	6263      	str	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d2f8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d2fa:	f7f5 fd15 	bl	90002d28 <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000d2fe:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000d300:	049b      	lsls	r3, r3, #18
9000d302:	d501      	bpl.n	9000d308 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000d304:	6823      	ldr	r3, [r4, #0]
9000d306:	e7e8      	b.n	9000d2da <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000d308:	6821      	ldr	r1, [r4, #0]
9000d30a:	2501      	movs	r5, #1
9000d30c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000d30e:	69e2      	ldr	r2, [r4, #28]
9000d310:	3144      	adds	r1, #68	@ 0x44
9000d312:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000d314:	9500      	str	r5, [sp, #0]
9000d316:	f000 ffa9 	bl	9000e26c <HAL_MDMA_Start_IT>
9000d31a:	2800      	cmp	r0, #0
9000d31c:	d0f2      	beq.n	9000d304 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000d31e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000d320:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000d322:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000d324:	f043 0304 	orr.w	r3, r3, #4
9000d328:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000d32a:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000d32e:	f7f5 fd3d 	bl	90002dac <HAL_JPEG_ErrorCallback>
          return;
9000d332:	e7cd      	b.n	9000d2d0 <JPEG_MDMAOutCpltCallback+0x1c>

9000d334 <JPEG_MDMAOutAbortCallback>:
{
9000d334:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000d336:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000d338:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000d33a:	041a      	lsls	r2, r3, #16
9000d33c:	d400      	bmi.n	9000d340 <JPEG_MDMAOutAbortCallback+0xc>
}
9000d33e:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000d340:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000d342:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000d344:	681b      	ldr	r3, [r3, #0]
9000d346:	695b      	ldr	r3, [r3, #20]
9000d348:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000d34c:	1ad3      	subs	r3, r2, r3
9000d34e:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000d350:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d352:	429a      	cmp	r2, r3
9000d354:	d025      	beq.n	9000d3a2 <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000d356:	6822      	ldr	r2, [r4, #0]
9000d358:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000d35a:	f015 0510 	ands.w	r5, r5, #16
9000d35e:	d118      	bne.n	9000d392 <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000d360:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d362:	bb4b      	cbnz	r3, 9000d3b8 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d364:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000d366:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000d368:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d36a:	f023 0301 	bic.w	r3, r3, #1
9000d36e:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000d370:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d372:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d374:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000d378:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d37c:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000d380:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d382:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d384:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000d386:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d38a:	d012      	beq.n	9000d3b2 <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000d38c:	f7ff fe56 	bl	9000d03c <HAL_JPEG_EncodeCpltCallback>
}
9000d390:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000d392:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000d394:	049b      	lsls	r3, r3, #18
9000d396:	d4d2      	bmi.n	9000d33e <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000d398:	4620      	mov	r0, r4
}
9000d39a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000d39e:	f7ff beb9 	b.w	9000d114 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d3a2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d3a4:	4620      	mov	r0, r4
9000d3a6:	69e1      	ldr	r1, [r4, #28]
9000d3a8:	f7f5 fcbe 	bl	90002d28 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000d3ac:	2300      	movs	r3, #0
9000d3ae:	6263      	str	r3, [r4, #36]	@ 0x24
9000d3b0:	e7d1      	b.n	9000d356 <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000d3b2:	f7f5 fcfd 	bl	90002db0 <HAL_JPEG_DecodeCpltCallback>
}
9000d3b6:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d3b8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d3ba:	4620      	mov	r0, r4
9000d3bc:	69e1      	ldr	r1, [r4, #28]
9000d3be:	f7f5 fcb3 	bl	90002d28 <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d3c2:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000d3c4:	6265      	str	r5, [r4, #36]	@ 0x24
9000d3c6:	e7cd      	b.n	9000d364 <JPEG_MDMAOutAbortCallback+0x30>

9000d3c8 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d3c8:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000d3ca:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d3cc:	f002 0203 	and.w	r2, r2, #3
9000d3d0:	2a02      	cmp	r2, #2
{
9000d3d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000d3d6:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d3d8:	d01e      	beq.n	9000d418 <JPEG_Process+0x50>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000d3da:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000d3dc:	04d7      	lsls	r7, r2, #19
9000d3de:	d407      	bmi.n	9000d3f0 <JPEG_Process+0x28>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000d3e0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000d3e2:	0796      	lsls	r6, r2, #30
9000d3e4:	f100 811b 	bmi.w	9000d61e <JPEG_Process+0x256>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000d3e8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000d3ea:	0750      	lsls	r0, r2, #29
9000d3ec:	f100 81cc 	bmi.w	9000d788 <JPEG_Process+0x3c0>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000d3f0:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000d3f2:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000d3f6:	d107      	bne.n	9000d408 <JPEG_Process+0x40>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000d3f8:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
9000d3fa:	f016 0608 	ands.w	r6, r6, #8
9000d3fe:	d14a      	bne.n	9000d496 <JPEG_Process+0xce>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000d400:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000d402:	06d2      	lsls	r2, r2, #27
9000d404:	f100 81fe 	bmi.w	9000d804 <JPEG_Process+0x43c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000d408:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000d40a:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000d40e:	2a20      	cmp	r2, #32
9000d410:	d019      	beq.n	9000d446 <JPEG_Process+0x7e>
  return JPEG_PROCESS_ONGOING;
9000d412:	2000      	movs	r0, #0
}
9000d414:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000d418:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000d41a:	0652      	lsls	r2, r2, #25
9000d41c:	d5dd      	bpl.n	9000d3da <JPEG_Process+0x12>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000d41e:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000d420:	4629      	mov	r1, r5
9000d422:	f7ff fb8b 	bl	9000cb3c <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000d426:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000d428:	4629      	mov	r1, r5
9000d42a:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000d42c:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000d42e:	f7f5 fc09 	bl	90002c44 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000d432:	6823      	ldr	r3, [r4, #0]
9000d434:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000d436:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000d43a:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000d43c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000d43e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000d442:	639a      	str	r2, [r3, #56]	@ 0x38
9000d444:	e7c9      	b.n	9000d3da <JPEG_Process+0x12>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d446:	681a      	ldr	r2, [r3, #0]
9000d448:	f022 0201 	bic.w	r2, r2, #1
9000d44c:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000d44e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000d450:	f002 020c 	and.w	r2, r2, #12
9000d454:	2a08      	cmp	r2, #8
9000d456:	f000 8201 	beq.w	9000d85c <JPEG_Process+0x494>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000d45a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000d45c:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000d460:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000d462:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d464:	2b00      	cmp	r3, #0
9000d466:	f040 81fe 	bne.w	9000d866 <JPEG_Process+0x49e>
    tmpContext = hjpeg->Context;
9000d46a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000d46c:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d46e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000d470:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d472:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000d476:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d47a:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000d47e:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d480:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d482:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000d484:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d488:	f000 81e5 	beq.w	9000d856 <JPEG_Process+0x48e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000d48c:	f7ff fdd6 	bl	9000d03c <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000d490:	2001      	movs	r0, #1
}
9000d492:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000d496:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d498:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000d49a:	3220      	adds	r2, #32
9000d49c:	4296      	cmp	r6, r2
9000d49e:	f0c0 8200 	bcc.w	9000d8a2 <JPEG_Process+0x4da>
      dataword = hjpeg->Instance->DOR;
9000d4a2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d4a4:	69e1      	ldr	r1, [r4, #28]
9000d4a6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d4a8:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000d4aa:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d4ac:	69e2      	ldr	r2, [r4, #28]
9000d4ae:	440a      	add	r2, r1
9000d4b0:	0a19      	lsrs	r1, r3, #8
9000d4b2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d4b4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d4b6:	69e2      	ldr	r2, [r4, #28]
9000d4b8:	440a      	add	r2, r1
9000d4ba:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d4bc:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d4be:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d4c0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d4c2:	69e2      	ldr	r2, [r4, #28]
9000d4c4:	440a      	add	r2, r1
9000d4c6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000d4c8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000d4ca:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000d4cc:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d4ce:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000d4d0:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000d4d2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d4d4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d4d6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000d4d8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d4da:	69e2      	ldr	r2, [r4, #28]
9000d4dc:	440a      	add	r2, r1
9000d4de:	0a19      	lsrs	r1, r3, #8
9000d4e0:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d4e2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d4e4:	69e2      	ldr	r2, [r4, #28]
9000d4e6:	440a      	add	r2, r1
9000d4e8:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d4ea:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d4ec:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d4ee:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d4f0:	69e2      	ldr	r2, [r4, #28]
9000d4f2:	440a      	add	r2, r1
9000d4f4:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000d4f6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000d4f8:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000d4fa:	3304      	adds	r3, #4
9000d4fc:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000d4fe:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d500:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d502:	69e1      	ldr	r1, [r4, #28]
9000d504:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000d506:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d508:	69e2      	ldr	r2, [r4, #28]
9000d50a:	440a      	add	r2, r1
9000d50c:	0a19      	lsrs	r1, r3, #8
9000d50e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d510:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d512:	69e2      	ldr	r2, [r4, #28]
9000d514:	440a      	add	r2, r1
9000d516:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d518:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d51a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d51c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d51e:	69e2      	ldr	r2, [r4, #28]
9000d520:	440a      	add	r2, r1
9000d522:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000d524:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000d526:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000d528:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d52a:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000d52c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000d52e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d530:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d532:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000d534:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d536:	69e2      	ldr	r2, [r4, #28]
9000d538:	440a      	add	r2, r1
9000d53a:	0a19      	lsrs	r1, r3, #8
9000d53c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d53e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d540:	69e2      	ldr	r2, [r4, #28]
9000d542:	440a      	add	r2, r1
9000d544:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d546:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d548:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d54a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d54c:	69e2      	ldr	r2, [r4, #28]
9000d54e:	440a      	add	r2, r1
9000d550:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000d552:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000d554:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000d556:	3304      	adds	r3, #4
9000d558:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000d55a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d55c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d55e:	69e1      	ldr	r1, [r4, #28]
9000d560:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000d562:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d564:	69e2      	ldr	r2, [r4, #28]
9000d566:	440a      	add	r2, r1
9000d568:	0a19      	lsrs	r1, r3, #8
9000d56a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d56c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d56e:	69e2      	ldr	r2, [r4, #28]
9000d570:	440a      	add	r2, r1
9000d572:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d574:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d576:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d578:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d57a:	69e2      	ldr	r2, [r4, #28]
9000d57c:	440a      	add	r2, r1
9000d57e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000d580:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000d582:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000d584:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d586:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000d588:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000d58a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d58c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d58e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000d590:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d592:	69e2      	ldr	r2, [r4, #28]
9000d594:	440a      	add	r2, r1
9000d596:	0a19      	lsrs	r1, r3, #8
9000d598:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d59a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d59c:	69e2      	ldr	r2, [r4, #28]
9000d59e:	440a      	add	r2, r1
9000d5a0:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d5a2:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d5a4:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d5a6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d5a8:	69e2      	ldr	r2, [r4, #28]
9000d5aa:	440a      	add	r2, r1
9000d5ac:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000d5ae:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000d5b0:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000d5b2:	3304      	adds	r3, #4
9000d5b4:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000d5b6:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d5b8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d5ba:	69e1      	ldr	r1, [r4, #28]
9000d5bc:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000d5be:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d5c0:	69e2      	ldr	r2, [r4, #28]
9000d5c2:	440a      	add	r2, r1
9000d5c4:	0a19      	lsrs	r1, r3, #8
9000d5c6:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d5c8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d5ca:	69e2      	ldr	r2, [r4, #28]
9000d5cc:	440a      	add	r2, r1
9000d5ce:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d5d0:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d5d2:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d5d4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d5d6:	69e2      	ldr	r2, [r4, #28]
9000d5d8:	440a      	add	r2, r1
9000d5da:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000d5dc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000d5de:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000d5e0:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d5e2:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000d5e4:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000d5e6:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d5e8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d5ea:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000d5ec:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d5ee:	69e2      	ldr	r2, [r4, #28]
9000d5f0:	440a      	add	r2, r1
9000d5f2:	0a19      	lsrs	r1, r3, #8
9000d5f4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d5f6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d5f8:	69e2      	ldr	r2, [r4, #28]
9000d5fa:	440a      	add	r2, r1
9000d5fc:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d5fe:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d600:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d602:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d604:	69e2      	ldr	r2, [r4, #28]
9000d606:	440a      	add	r2, r1
9000d608:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000d60a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d60c:	3304      	adds	r3, #4
9000d60e:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000d610:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d612:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000d614:	429a      	cmp	r2, r3
9000d616:	f000 8258 	beq.w	9000daca <JPEG_Process+0x702>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000d61a:	6823      	ldr	r3, [r4, #0]
9000d61c:	e6f4      	b.n	9000d408 <JPEG_Process+0x40>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000d61e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000d620:	2a00      	cmp	r2, #0
9000d622:	f000 8128 	beq.w	9000d876 <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000d626:	6a21      	ldr	r1, [r4, #32]
9000d628:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000d62a:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000d62c:	f240 81b9 	bls.w	9000d9a2 <JPEG_Process+0x5da>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000d630:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000d632:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000d634:	04cd      	lsls	r5, r1, #19
9000d636:	f53f aedb 	bmi.w	9000d3f0 <JPEG_Process+0x28>
9000d63a:	2a00      	cmp	r2, #0
9000d63c:	f43f aed8 	beq.w	9000d3f0 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000d640:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000d642:	ea4f 0092 	mov.w	r0, r2, lsr #2
    if (nb_words >= nbRequestWords)
9000d646:	f200 8248 	bhi.w	9000dada <JPEG_Process+0x712>
      if (nb_words > 0UL)
9000d64a:	2a03      	cmp	r2, #3
9000d64c:	f240 82c0 	bls.w	9000dbd0 <JPEG_Process+0x808>
          input_count = hjpeg->JpegInCount;
9000d650:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d652:	2801      	cmp	r0, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d654:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d656:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d65a:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d65c:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d65e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d660:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d664:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d666:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000d66a:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d66e:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d672:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000d674:	6a21      	ldr	r1, [r4, #32]
9000d676:	f101 0104 	add.w	r1, r1, #4
9000d67a:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d67c:	f43f aeb8 	beq.w	9000d3f0 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000d680:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d682:	2802      	cmp	r0, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d684:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d688:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d68a:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d68c:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d68e:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d692:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d694:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000d698:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d69c:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d6a0:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000d6a2:	6a21      	ldr	r1, [r4, #32]
9000d6a4:	f101 0104 	add.w	r1, r1, #4
9000d6a8:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d6aa:	f43f aea1 	beq.w	9000d3f0 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000d6ae:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d6b0:	2803      	cmp	r0, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d6b2:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d6b6:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d6b8:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d6ba:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d6bc:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d6c0:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d6c2:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000d6c6:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d6ca:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d6ce:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000d6d0:	6a21      	ldr	r1, [r4, #32]
9000d6d2:	f101 0104 	add.w	r1, r1, #4
9000d6d6:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d6d8:	f43f ae8a 	beq.w	9000d3f0 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000d6dc:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d6de:	2804      	cmp	r0, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d6e0:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d6e4:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d6e6:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d6e8:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d6ea:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d6ee:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d6f0:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000d6f4:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d6f8:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d6fc:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000d6fe:	6a21      	ldr	r1, [r4, #32]
9000d700:	f101 0104 	add.w	r1, r1, #4
9000d704:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d706:	f43f ae73 	beq.w	9000d3f0 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000d70a:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d70c:	2805      	cmp	r0, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d70e:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d712:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d714:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d716:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d718:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d71c:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d71e:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000d722:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d726:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d72a:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000d72c:	6a21      	ldr	r1, [r4, #32]
9000d72e:	f101 0104 	add.w	r1, r1, #4
9000d732:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d734:	f43f ae5c 	beq.w	9000d3f0 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000d738:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d73a:	2807      	cmp	r0, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d73c:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d740:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d742:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d744:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d746:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d74a:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d74c:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000d750:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d754:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d758:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000d75a:	6a21      	ldr	r1, [r4, #32]
9000d75c:	f101 0104 	add.w	r1, r1, #4
9000d760:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000d762:	f47f ae45 	bne.w	9000d3f0 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000d766:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d768:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d76a:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d76c:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000d76e:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d770:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000d772:	7849      	ldrb	r1, [r1, #1]
9000d774:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000d778:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000d77a:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d77e:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000d780:	6a22      	ldr	r2, [r4, #32]
9000d782:	3204      	adds	r2, #4
9000d784:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000d786:	e633      	b.n	9000d3f0 <JPEG_Process+0x28>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000d788:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000d78a:	2a00      	cmp	r2, #0
9000d78c:	d073      	beq.n	9000d876 <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000d78e:	6a21      	ldr	r1, [r4, #32]
9000d790:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000d792:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000d794:	f200 8182 	bhi.w	9000da9c <JPEG_Process+0x6d4>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000d798:	428a      	cmp	r2, r1
9000d79a:	f040 8104 	bne.w	9000d9a6 <JPEG_Process+0x5de>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000d79e:	6a21      	ldr	r1, [r4, #32]
9000d7a0:	4620      	mov	r0, r4
9000d7a2:	f7f5 faa1 	bl	90002ce8 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000d7a6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000d7a8:	2a04      	cmp	r2, #4
9000d7aa:	d902      	bls.n	9000d7b2 <JPEG_Process+0x3ea>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000d7ac:	f022 0203 	bic.w	r2, r2, #3
9000d7b0:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000d7b2:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d7b4:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000d7b6:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000d7b8:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000d7ba:	04c9      	lsls	r1, r1, #19
9000d7bc:	f53f ae18 	bmi.w	9000d3f0 <JPEG_Process+0x28>
9000d7c0:	2a00      	cmp	r2, #0
9000d7c2:	f43f ae15 	beq.w	9000d3f0 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000d7c6:	0891      	lsrs	r1, r2, #2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000d7c8:	69a0      	ldr	r0, [r4, #24]
    if (nb_words >= nbRequestWords)
9000d7ca:	f040 8177 	bne.w	9000dabc <JPEG_Process+0x6f4>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d7ce:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000d7d0:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000d7d2:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d7d4:	5c41      	ldrb	r1, [r0, r1]
          hjpeg->JpegInCount++;
9000d7d6:	f105 0501 	add.w	r5, r5, #1
9000d7da:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000d7dc:	d010      	beq.n	9000d800 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d7de:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000d7e0:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d7e2:	5d45      	ldrb	r5, [r0, r5]
9000d7e4:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
          hjpeg->JpegInCount++;
9000d7e8:	6a25      	ldr	r5, [r4, #32]
9000d7ea:	f105 0501 	add.w	r5, r5, #1
9000d7ee:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000d7f0:	d106      	bne.n	9000d800 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d7f2:	6a22      	ldr	r2, [r4, #32]
9000d7f4:	5c80      	ldrb	r0, [r0, r2]
          hjpeg->JpegInCount++;
9000d7f6:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000d7f8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000d7fc:	3201      	adds	r2, #1
9000d7fe:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000d800:	6419      	str	r1, [r3, #64]	@ 0x40
9000d802:	e5f5      	b.n	9000d3f0 <JPEG_Process+0x28>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000d804:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d806:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000d808:	3204      	adds	r2, #4
9000d80a:	4295      	cmp	r5, r2
9000d80c:	f0c0 80cd 	bcc.w	9000d9aa <JPEG_Process+0x5e2>
      dataword = hjpeg->Instance->DOR;
9000d810:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d812:	69e1      	ldr	r1, [r4, #28]
9000d814:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d816:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000d818:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d81a:	69e2      	ldr	r2, [r4, #28]
9000d81c:	440a      	add	r2, r1
9000d81e:	0a19      	lsrs	r1, r3, #8
9000d820:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d822:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d824:	69e2      	ldr	r2, [r4, #28]
9000d826:	440a      	add	r2, r1
9000d828:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d82a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d82c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d82e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d830:	69e2      	ldr	r2, [r4, #28]
9000d832:	440a      	add	r2, r1
9000d834:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000d836:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000d838:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
      hjpeg->JpegOutCount += 4UL;
9000d83a:	3304      	adds	r3, #4
9000d83c:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000d83e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d840:	429a      	cmp	r2, r3
9000d842:	f47f aeea 	bne.w	9000d61a <JPEG_Process+0x252>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d846:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d848:	4620      	mov	r0, r4
9000d84a:	69e1      	ldr	r1, [r4, #28]
9000d84c:	f7f5 fa6c 	bl	90002d28 <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000d850:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000d852:	6266      	str	r6, [r4, #36]	@ 0x24
9000d854:	e5d8      	b.n	9000d408 <JPEG_Process+0x40>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000d856:	f7f5 faab 	bl	90002db0 <HAL_JPEG_DecodeCpltCallback>
9000d85a:	e619      	b.n	9000d490 <JPEG_Process+0xc8>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000d85c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000d85e:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000d862:	631a      	str	r2, [r3, #48]	@ 0x30
9000d864:	e5f9      	b.n	9000d45a <JPEG_Process+0x92>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d866:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d868:	4620      	mov	r0, r4
9000d86a:	69e1      	ldr	r1, [r4, #28]
9000d86c:	f7f5 fa5c 	bl	90002d28 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000d870:	2300      	movs	r3, #0
9000d872:	6263      	str	r3, [r4, #36]	@ 0x24
9000d874:	e5f9      	b.n	9000d46a <JPEG_Process+0xa2>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000d876:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000d878:	f002 020c 	and.w	r2, r2, #12
9000d87c:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000d87e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000d880:	f000 811e 	beq.w	9000dac0 <JPEG_Process+0x6f8>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000d884:	f002 020c 	and.w	r2, r2, #12
9000d888:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000d88a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000d88c:	f47f adb0 	bne.w	9000d3f0 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000d890:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000d894:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000d896:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000d898:	f022 0206 	bic.w	r2, r2, #6
9000d89c:	631a      	str	r2, [r3, #48]	@ 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000d89e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000d8a0:	e5a6      	b.n	9000d3f0 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000d8a2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d8a4:	4296      	cmp	r6, r2
9000d8a6:	f67f adaf 	bls.w	9000d408 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000d8aa:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000d8ac:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000d8ae:	0880      	lsrs	r0, r0, #2
9000d8b0:	d020      	beq.n	9000d8f4 <JPEG_Process+0x52c>
9000d8b2:	4629      	mov	r1, r5
9000d8b4:	e000      	b.n	9000d8b8 <JPEG_Process+0x4f0>
      dataword = hjpeg->Instance->DOR;
9000d8b6:	6823      	ldr	r3, [r4, #0]
9000d8b8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000d8ba:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d8bc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d8be:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000d8c0:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d8c2:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000d8c4:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000d8c6:	69e2      	ldr	r2, [r4, #28]
9000d8c8:	4432      	add	r2, r6
9000d8ca:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000d8ce:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d8d0:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000d8d2:	69e2      	ldr	r2, [r4, #28]
9000d8d4:	4432      	add	r2, r6
9000d8d6:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d8da:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d8de:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d8e0:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000d8e2:	69e2      	ldr	r2, [r4, #28]
9000d8e4:	4432      	add	r2, r6
9000d8e6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000d8e8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d8ea:	f103 0304 	add.w	r3, r3, #4
9000d8ee:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000d8f0:	d1e1      	bne.n	9000d8b6 <JPEG_Process+0x4ee>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000d8f2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000d8f4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d8f6:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000d8f8:	429e      	cmp	r6, r3
9000d8fa:	f000 8161 	beq.w	9000dbc0 <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000d8fe:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000d902:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000d904:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000d908:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000d90a:	d00e      	beq.n	9000d92a <JPEG_Process+0x562>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000d90c:	f005 0303 	and.w	r3, r5, #3
9000d910:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000d912:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000d914:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000d916:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000d918:	fa27 f303 	lsr.w	r3, r7, r3
9000d91c:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000d91e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d920:	69e1      	ldr	r1, [r4, #28]
9000d922:	f103 0301 	add.w	r3, r3, #1
9000d926:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000d928:	d1f0      	bne.n	9000d90c <JPEG_Process+0x544>
      nb_bytes = 4UL - nb_bytes;
9000d92a:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d92e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d930:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000d932:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d936:	f7f5 f9f7 	bl	90002d28 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000d93a:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000d93c:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
9000d93e:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000d940:	f63f ae6b 	bhi.w	9000d61a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000d944:	ea4f 02c6 	mov.w	r2, r6, lsl #3
9000d948:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d94a:	69e0      	ldr	r0, [r4, #28]
9000d94c:	fa27 f502 	lsr.w	r5, r7, r2
9000d950:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000d952:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d954:	f101 0101 	add.w	r1, r1, #1
9000d958:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000d95a:	f43f ae5e 	beq.w	9000d61a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000d95e:	f102 0108 	add.w	r1, r2, #8
9000d962:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000d964:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000d966:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000d968:	fa27 f101 	lsr.w	r1, r7, r1
9000d96c:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000d96e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d970:	f101 0101 	add.w	r1, r1, #1
9000d974:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000d976:	f43f ae50 	beq.w	9000d61a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000d97a:	3210      	adds	r2, #16
9000d97c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000d97e:	69e0      	ldr	r0, [r4, #28]
9000d980:	fa27 f202 	lsr.w	r2, r7, r2
9000d984:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000d986:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d988:	3201      	adds	r2, #1
9000d98a:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000d98c:	2e00      	cmp	r6, #0
9000d98e:	f47f ae44 	bne.w	9000d61a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000d992:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d994:	0e3f      	lsrs	r7, r7, #24
9000d996:	69e2      	ldr	r2, [r4, #28]
9000d998:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000d99a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d99c:	3301      	adds	r3, #1
9000d99e:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000d9a0:	e63b      	b.n	9000d61a <JPEG_Process+0x252>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000d9a2:	428a      	cmp	r2, r1
9000d9a4:	d07c      	beq.n	9000daa0 <JPEG_Process+0x6d8>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000d9a6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000d9a8:	e522      	b.n	9000d3f0 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000d9aa:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d9ac:	4295      	cmp	r5, r2
9000d9ae:	f67f ad2b 	bls.w	9000d408 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000d9b2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000d9b4:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000d9b6:	0880      	lsrs	r0, r0, #2
9000d9b8:	d020      	beq.n	9000d9fc <JPEG_Process+0x634>
9000d9ba:	4631      	mov	r1, r6
9000d9bc:	e000      	b.n	9000d9c0 <JPEG_Process+0x5f8>
      dataword = hjpeg->Instance->DOR;
9000d9be:	6823      	ldr	r3, [r4, #0]
9000d9c0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000d9c2:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d9c4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000d9c6:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000d9c8:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000d9ca:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000d9cc:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000d9ce:	69e2      	ldr	r2, [r4, #28]
9000d9d0:	442a      	add	r2, r5
9000d9d2:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000d9d6:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d9d8:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000d9da:	69e2      	ldr	r2, [r4, #28]
9000d9dc:	442a      	add	r2, r5
9000d9de:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d9e2:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000d9e6:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000d9e8:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000d9ea:	69e2      	ldr	r2, [r4, #28]
9000d9ec:	442a      	add	r2, r5
9000d9ee:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000d9f0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d9f2:	f103 0304 	add.w	r3, r3, #4
9000d9f6:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000d9f8:	d1e1      	bne.n	9000d9be <JPEG_Process+0x5f6>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000d9fa:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000d9fc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d9fe:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000da00:	429d      	cmp	r5, r3
9000da02:	f000 80dd 	beq.w	9000dbc0 <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000da06:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000da0a:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000da0c:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000da10:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000da12:	d00e      	beq.n	9000da32 <JPEG_Process+0x66a>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000da14:	f006 0303 	and.w	r3, r6, #3
9000da18:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000da1a:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000da1c:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000da1e:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000da20:	fa27 f303 	lsr.w	r3, r7, r3
9000da24:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000da26:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000da28:	69e1      	ldr	r1, [r4, #28]
9000da2a:	f103 0301 	add.w	r3, r3, #1
9000da2e:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000da30:	d1f0      	bne.n	9000da14 <JPEG_Process+0x64c>
      nb_bytes = 4UL - nb_bytes;
9000da32:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000da36:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000da38:	4620      	mov	r0, r4
9000da3a:	f7f5 f975 	bl	90002d28 <HAL_JPEG_DataReadyCallback>
      nb_bytes = 4UL - nb_bytes;
9000da3e:	eba8 0305 	sub.w	r3, r8, r5
      hjpeg->JpegOutCount = 0;
9000da42:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000da44:	2b03      	cmp	r3, #3
      hjpeg->JpegOutCount = 0;
9000da46:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000da48:	f63f ade7 	bhi.w	9000d61a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000da4c:	ea4f 02c3 	mov.w	r2, r3, lsl #3
9000da50:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000da52:	69e0      	ldr	r0, [r4, #28]
9000da54:	fa27 f502 	lsr.w	r5, r7, r2
9000da58:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000da5a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000da5c:	f101 0101 	add.w	r1, r1, #1
9000da60:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000da62:	f43f adda 	beq.w	9000d61a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000da66:	f102 0108 	add.w	r1, r2, #8
9000da6a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000da6c:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000da6e:	2b02      	cmp	r3, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000da70:	fa27 f101 	lsr.w	r1, r7, r1
9000da74:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000da76:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000da78:	f101 0101 	add.w	r1, r1, #1
9000da7c:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000da7e:	f43f adcc 	beq.w	9000d61a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000da82:	3210      	adds	r2, #16
9000da84:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000da86:	69e0      	ldr	r0, [r4, #28]
9000da88:	fa27 f202 	lsr.w	r2, r7, r2
9000da8c:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000da8e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000da90:	3201      	adds	r2, #1
9000da92:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000da94:	2b00      	cmp	r3, #0
9000da96:	f43f af7c 	beq.w	9000d992 <JPEG_Process+0x5ca>
9000da9a:	e5be      	b.n	9000d61a <JPEG_Process+0x252>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000da9c:	1a52      	subs	r2, r2, r1
9000da9e:	e68b      	b.n	9000d7b8 <JPEG_Process+0x3f0>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000daa0:	6a21      	ldr	r1, [r4, #32]
9000daa2:	4620      	mov	r0, r4
9000daa4:	f7f5 f920 	bl	90002ce8 <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000daa8:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000daaa:	2a04      	cmp	r2, #4
9000daac:	d902      	bls.n	9000dab4 <JPEG_Process+0x6ec>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000daae:	f022 0203 	bic.w	r2, r2, #3
9000dab2:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000dab4:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000dab6:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000dab8:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000daba:	e5ba      	b.n	9000d632 <JPEG_Process+0x26a>
        input_count = hjpeg->JpegInCount;
9000dabc:	6a22      	ldr	r2, [r4, #32]
9000dabe:	e653      	b.n	9000d768 <JPEG_Process+0x3a0>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000dac0:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000dac4:	6562      	str	r2, [r4, #84]	@ 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000dac6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000dac8:	e492      	b.n	9000d3f0 <JPEG_Process+0x28>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000daca:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000dacc:	4620      	mov	r0, r4
9000dace:	69e1      	ldr	r1, [r4, #28]
9000dad0:	f7f5 f92a 	bl	90002d28 <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000dad4:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000dad6:	6265      	str	r5, [r4, #36]	@ 0x24
9000dad8:	e496      	b.n	9000d408 <JPEG_Process+0x40>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000dada:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
9000dadc:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000dade:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000dae0:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000dae2:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000dae4:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000dae6:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000dae8:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000daea:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000daee:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000daf0:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000daf4:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000daf6:	6a21      	ldr	r1, [r4, #32]
9000daf8:	3104      	adds	r1, #4
9000dafa:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000dafc:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000dafe:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000db00:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000db02:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000db04:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000db06:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000db08:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000db0a:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000db0e:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000db10:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000db14:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000db16:	6a21      	ldr	r1, [r4, #32]
9000db18:	3104      	adds	r1, #4
9000db1a:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000db1c:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000db1e:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000db20:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000db22:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000db24:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000db26:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000db28:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000db2a:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000db2e:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000db30:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000db34:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000db36:	6a21      	ldr	r1, [r4, #32]
9000db38:	3104      	adds	r1, #4
9000db3a:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000db3c:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000db3e:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000db40:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000db42:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000db44:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000db46:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000db48:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000db4a:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000db4e:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000db50:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000db54:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000db56:	6a21      	ldr	r1, [r4, #32]
9000db58:	3104      	adds	r1, #4
9000db5a:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000db5c:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000db5e:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000db60:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000db62:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000db64:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000db66:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000db68:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000db6a:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000db6e:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000db70:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000db74:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000db76:	6a21      	ldr	r1, [r4, #32]
9000db78:	3104      	adds	r1, #4
9000db7a:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000db7c:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000db7e:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000db80:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000db82:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000db84:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000db86:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000db88:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000db8a:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000db8e:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000db90:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000db94:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000db96:	6a21      	ldr	r1, [r4, #32]
9000db98:	3104      	adds	r1, #4
9000db9a:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000db9c:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000db9e:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000dba0:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000dba2:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000dba4:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000dba6:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000dba8:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000dbaa:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000dbae:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000dbb0:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000dbb4:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000dbb6:	6a21      	ldr	r1, [r4, #32]
9000dbb8:	3104      	adds	r1, #4
9000dbba:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000dbbc:	6a20      	ldr	r0, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000dbbe:	e5d3      	b.n	9000d768 <JPEG_Process+0x3a0>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000dbc0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000dbc2:	4620      	mov	r0, r4
9000dbc4:	f7f5 f8b0 	bl	90002d28 <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000dbc8:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000dbca:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000dbcc:	6262      	str	r2, [r4, #36]	@ 0x24
9000dbce:	e41b      	b.n	9000d408 <JPEG_Process+0x40>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000dbd0:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000dbd2:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000dbd4:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000dbd6:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000dbd8:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000dbdc:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000dbde:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000dbe0:	f43f ae0e 	beq.w	9000d800 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000dbe4:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000dbe6:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000dbe8:	5c28      	ldrb	r0, [r5, r0]
9000dbea:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000dbee:	6a20      	ldr	r0, [r4, #32]
9000dbf0:	f100 0001 	add.w	r0, r0, #1
9000dbf4:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000dbf6:	f47f ae03 	bne.w	9000d800 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000dbfa:	6a22      	ldr	r2, [r4, #32]
9000dbfc:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000dbfe:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000dc00:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000dc04:	3201      	adds	r2, #1
9000dc06:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000dc08:	e5fa      	b.n	9000d800 <JPEG_Process+0x438>
9000dc0a:	bf00      	nop

9000dc0c <HAL_JPEG_IRQHandler>:
{
9000dc0c:	b538      	push	{r3, r4, r5, lr}
  switch (hjpeg->State)
9000dc0e:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
9000dc12:	3b03      	subs	r3, #3
9000dc14:	2b01      	cmp	r3, #1
9000dc16:	d900      	bls.n	9000dc1a <HAL_JPEG_IRQHandler+0xe>
}
9000dc18:	bd38      	pop	{r3, r4, r5, pc}
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000dc1a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000dc1c:	4604      	mov	r4, r0
9000dc1e:	f003 030c 	and.w	r3, r3, #12
9000dc22:	2b08      	cmp	r3, #8
9000dc24:	d050      	beq.n	9000dcc8 <HAL_JPEG_IRQHandler+0xbc>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000dc26:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000dc28:	f003 030c 	and.w	r3, r3, #12
9000dc2c:	2b0c      	cmp	r3, #12
9000dc2e:	d1f3      	bne.n	9000dc18 <HAL_JPEG_IRQHandler+0xc>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000dc30:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000dc32:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000dc34:	f002 0203 	and.w	r2, r2, #3
9000dc38:	2a02      	cmp	r2, #2
9000dc3a:	d049      	beq.n	9000dcd0 <HAL_JPEG_IRQHandler+0xc4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000dc3c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000dc3e:	0692      	lsls	r2, r2, #26
9000dc40:	d5ea      	bpl.n	9000dc18 <HAL_JPEG_IRQHandler+0xc>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000dc42:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000dc44:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000dc46:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
9000dc4a:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000dc4c:	681a      	ldr	r2, [r3, #0]
9000dc4e:	f022 0201 	bic.w	r2, r2, #1
9000dc52:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000dc54:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000dc56:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000dc5a:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000dc5c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000dc5e:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000dc62:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000dc64:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000dc68:	2b02      	cmp	r3, #2
9000dc6a:	d054      	beq.n	9000dd16 <HAL_JPEG_IRQHandler+0x10a>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000dc6c:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000dc6e:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000dc72:	2b02      	cmp	r3, #2
9000dc74:	d043      	beq.n	9000dcfe <HAL_JPEG_IRQHandler+0xf2>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000dc76:	6803      	ldr	r3, [r0, #0]
9000dc78:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000dc7a:	695b      	ldr	r3, [r3, #20]
9000dc7c:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000dc80:	1ad3      	subs	r3, r2, r3
9000dc82:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000dc84:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000dc86:	429a      	cmp	r2, r3
9000dc88:	d048      	beq.n	9000dd1c <HAL_JPEG_IRQHandler+0x110>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000dc8a:	6822      	ldr	r2, [r4, #0]
9000dc8c:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000dc8e:	f015 0510 	ands.w	r5, r5, #16
9000dc92:	d138      	bne.n	9000dd06 <HAL_JPEG_IRQHandler+0xfa>
    if (hjpeg->JpegOutCount > 0UL)
9000dc94:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000dc96:	2b00      	cmp	r3, #0
9000dc98:	d14b      	bne.n	9000dd32 <HAL_JPEG_IRQHandler+0x126>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000dc9a:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000dc9c:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000dc9e:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000dca0:	f023 0301 	bic.w	r3, r3, #1
9000dca4:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000dca6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000dca8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000dcaa:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000dcae:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000dcb2:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000dcb6:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000dcb8:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000dcba:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000dcbc:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000dcc0:	d034      	beq.n	9000dd2c <HAL_JPEG_IRQHandler+0x120>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000dcc2:	f7ff f9bb 	bl	9000d03c <HAL_JPEG_EncodeCpltCallback>
}
9000dcc6:	bd38      	pop	{r3, r4, r5, pc}
9000dcc8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000dccc:	f7ff bb7c 	b.w	9000d3c8 <JPEG_Process>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000dcd0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000dcd2:	0651      	lsls	r1, r2, #25
9000dcd4:	d5b2      	bpl.n	9000dc3c <HAL_JPEG_IRQHandler+0x30>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000dcd6:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000dcd8:	4629      	mov	r1, r5
9000dcda:	f7fe ff2f 	bl	9000cb3c <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000dcde:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000dce0:	4629      	mov	r1, r5
9000dce2:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000dce4:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000dce6:	f7f4 ffad 	bl	90002c44 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000dcea:	6823      	ldr	r3, [r4, #0]
9000dcec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000dcee:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000dcf2:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000dcf4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000dcf6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000dcfa:	639a      	str	r2, [r3, #56]	@ 0x38
9000dcfc:	e79e      	b.n	9000dc3c <HAL_JPEG_IRQHandler+0x30>
}
9000dcfe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000dd02:	f000 bb25 	b.w	9000e350 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000dd06:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000dd08:	049b      	lsls	r3, r3, #18
9000dd0a:	d485      	bmi.n	9000dc18 <HAL_JPEG_IRQHandler+0xc>
    JPEG_DMA_PollResidualData(hjpeg);
9000dd0c:	4620      	mov	r0, r4
}
9000dd0e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000dd12:	f7ff b9ff 	b.w	9000d114 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000dd16:	f000 fb1b 	bl	9000e350 <HAL_MDMA_Abort_IT>
9000dd1a:	e7a7      	b.n	9000dc6c <HAL_JPEG_IRQHandler+0x60>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000dd1c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000dd1e:	4620      	mov	r0, r4
9000dd20:	69e1      	ldr	r1, [r4, #28]
9000dd22:	f7f5 f801 	bl	90002d28 <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000dd26:	2300      	movs	r3, #0
9000dd28:	6263      	str	r3, [r4, #36]	@ 0x24
9000dd2a:	e7ae      	b.n	9000dc8a <HAL_JPEG_IRQHandler+0x7e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000dd2c:	f7f5 f840 	bl	90002db0 <HAL_JPEG_DecodeCpltCallback>
}
9000dd30:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000dd32:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000dd34:	4620      	mov	r0, r4
9000dd36:	69e1      	ldr	r1, [r4, #28]
9000dd38:	f7f4 fff6 	bl	90002d28 <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000dd3c:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000dd3e:	6265      	str	r5, [r4, #36]	@ 0x24
9000dd40:	e7ab      	b.n	9000dc9a <HAL_JPEG_IRQHandler+0x8e>
9000dd42:	bf00      	nop

9000dd44 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000dd44:	2800      	cmp	r0, #0
9000dd46:	d067      	beq.n	9000de18 <HAL_LTDC_Init+0xd4>
{
9000dd48:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000dd4a:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
9000dd4e:	4604      	mov	r4, r0
9000dd50:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000dd54:	2b00      	cmp	r3, #0
9000dd56:	d05a      	beq.n	9000de0e <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000dd58:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000dd5a:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000dd5c:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000dd60:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000dd64:	4302      	orrs	r2, r0
9000dd66:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000dd68:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000dd6a:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000dd6c:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000dd6e:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000dd72:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000dd74:	4929      	ldr	r1, [pc, #164]	@ (9000de1c <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000dd76:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000dd78:	6998      	ldr	r0, [r3, #24]
9000dd7a:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000dd7c:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000dd7e:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000dd80:	689a      	ldr	r2, [r3, #8]
9000dd82:	400a      	ands	r2, r1
9000dd84:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000dd86:	689a      	ldr	r2, [r3, #8]
9000dd88:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000dd8c:	69a0      	ldr	r0, [r4, #24]
9000dd8e:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000dd90:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000dd92:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000dd94:	68da      	ldr	r2, [r3, #12]
9000dd96:	400a      	ands	r2, r1
9000dd98:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000dd9a:	68da      	ldr	r2, [r3, #12]
9000dd9c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000dda0:	6a20      	ldr	r0, [r4, #32]
9000dda2:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000dda4:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000dda6:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000dda8:	691a      	ldr	r2, [r3, #16]
9000ddaa:	400a      	ands	r2, r1
9000ddac:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000ddae:	691a      	ldr	r2, [r3, #16]
9000ddb0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000ddb4:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000ddb6:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000ddb8:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000ddba:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000ddbc:	695a      	ldr	r2, [r3, #20]
9000ddbe:	400a      	ands	r2, r1
9000ddc0:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000ddc2:	695a      	ldr	r2, [r3, #20]
9000ddc4:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9000ddc6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000ddca:	430a      	orrs	r2, r1
9000ddcc:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000ddce:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000ddd0:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000ddd4:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000ddd8:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000dddc:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000ddde:	6add      	ldr	r5, [r3, #44]	@ 0x2c
9000dde0:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
9000dde4:	432a      	orrs	r2, r5
9000dde6:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000ddea:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000ddec:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000ddf0:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000ddf2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ddf4:	f042 0206 	orr.w	r2, r2, #6
9000ddf8:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000ddfa:	699a      	ldr	r2, [r3, #24]
9000ddfc:	f042 0201 	orr.w	r2, r2, #1
9000de00:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000de02:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000de04:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000de08:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1

  return HAL_OK;
}
9000de0c:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000de0e:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
9000de12:	f7f3 fb1d 	bl	90001450 <HAL_LTDC_MspInit>
9000de16:	e79f      	b.n	9000dd58 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000de18:	2001      	movs	r0, #1
}
9000de1a:	4770      	bx	lr
9000de1c:	f000f800 	.word	0xf000f800

9000de20 <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
9000de20:	4770      	bx	lr
9000de22:	bf00      	nop

9000de24 <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
9000de24:	4770      	bx	lr
9000de26:	bf00      	nop

9000de28 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000de28:	6803      	ldr	r3, [r0, #0]
{
9000de2a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000de2c:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
{
9000de2e:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000de30:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000de32:	076a      	lsls	r2, r5, #29
9000de34:	d501      	bpl.n	9000de3a <HAL_LTDC_IRQHandler+0x12>
9000de36:	0771      	lsls	r1, r6, #29
9000de38:	d41d      	bmi.n	9000de76 <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000de3a:	07aa      	lsls	r2, r5, #30
9000de3c:	d501      	bpl.n	9000de42 <HAL_LTDC_IRQHandler+0x1a>
9000de3e:	07b3      	lsls	r3, r6, #30
9000de40:	d42d      	bmi.n	9000de9e <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000de42:	07e8      	lsls	r0, r5, #31
9000de44:	d501      	bpl.n	9000de4a <HAL_LTDC_IRQHandler+0x22>
9000de46:	07f1      	lsls	r1, r6, #31
9000de48:	d440      	bmi.n	9000decc <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000de4a:	072a      	lsls	r2, r5, #28
9000de4c:	d501      	bpl.n	9000de52 <HAL_LTDC_IRQHandler+0x2a>
9000de4e:	0733      	lsls	r3, r6, #28
9000de50:	d400      	bmi.n	9000de54 <HAL_LTDC_IRQHandler+0x2c>
}
9000de52:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000de54:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000de56:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000de58:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000de5a:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000de5c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000de5e:	f022 0208 	bic.w	r2, r2, #8
9000de62:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000de64:	63d8      	str	r0, [r3, #60]	@ 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000de66:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000de68:	f884 50a1 	strb.w	r5, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000de6c:	f884 10a0 	strb.w	r1, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000de70:	f7ff ffd8 	bl	9000de24 <HAL_LTDC_ReloadEventCallback>
}
9000de74:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000de76:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000de78:	f022 0204 	bic.w	r2, r2, #4
9000de7c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000de7e:	2204      	movs	r2, #4
9000de80:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000de82:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
9000de86:	f043 0301 	orr.w	r3, r3, #1
9000de8a:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000de8e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000de90:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000de94:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000de98:	f7ff ffc2 	bl	9000de20 <HAL_LTDC_ErrorCallback>
9000de9c:	e7cd      	b.n	9000de3a <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000de9e:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000dea0:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000dea2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000dea4:	f022 0202 	bic.w	r2, r2, #2
9000dea8:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000deaa:	2202      	movs	r2, #2
9000deac:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000deae:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000deb0:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
9000deb4:	f043 0302 	orr.w	r3, r3, #2
9000deb8:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000debc:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000debe:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000dec2:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000dec6:	f7ff ffab 	bl	9000de20 <HAL_LTDC_ErrorCallback>
9000deca:	e7ba      	b.n	9000de42 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000decc:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000dece:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000ded0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ded2:	f022 0201 	bic.w	r2, r2, #1
9000ded6:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000ded8:	2201      	movs	r2, #1
9000deda:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
9000dedc:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000dede:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000dee2:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000dee6:	f7f5 ff85 	bl	90003df4 <HAL_LTDC_LineEventCallback>
9000deea:	e7ae      	b.n	9000de4a <HAL_LTDC_IRQHandler+0x22>

9000deec <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000deec:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
9000def0:	2b01      	cmp	r3, #1
9000def2:	f000 80c6 	beq.w	9000e082 <HAL_LTDC_ConfigLayer+0x196>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000def6:	2302      	movs	r3, #2
{
9000def8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000defc:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000df00:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000df04:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
{
9000df08:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000df0a:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000df0e:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000df10:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000df14:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000df16:	f102 0684 	add.w	r6, r2, #132	@ 0x84
9000df1a:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000df1c:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000df20:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000df22:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000df26:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000df2a:	f8df a164 	ldr.w	sl, [pc, #356]	@ 9000e090 <HAL_LTDC_ConfigLayer+0x1a4>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000df2e:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000df32:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
9000df36:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000df38:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000df3a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000df3e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000df40:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000df42:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000df46:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000df48:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000df4c:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000df4e:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000df50:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000df54:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000df56:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000df58:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000df5c:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000df60:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000df62:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000df64:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000df68:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000df6c:	440b      	add	r3, r1
9000df6e:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000df72:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000df76:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000df7a:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000df7e:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000df82:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000df86:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000df88:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000df8c:	68ab      	ldr	r3, [r5, #8]
9000df8e:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000df92:	3301      	adds	r3, #1
9000df94:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000df98:	4403      	add	r3, r0
9000df9a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000df9e:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000dfa0:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000dfa4:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000dfa8:	f023 0307 	bic.w	r3, r3, #7
9000dfac:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000dfb0:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000dfb4:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000dfb8:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000dfba:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000dfbe:	f895 4031 	ldrb.w	r4, [r5, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000dfc2:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000dfc6:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
9000dfca:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000dfce:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000dfd2:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000dfd6:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000dfda:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000dfde:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
9000dfe2:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000dfe6:	696b      	ldr	r3, [r5, #20]
9000dfe8:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000dfec:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000dff0:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000dff2:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000dff6:	6a28      	ldr	r0, [r5, #32]
9000dff8:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000dffa:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000dffe:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000e002:	f8dc 3028 	ldr.w	r3, [ip, #40]	@ 0x28
9000e006:	2300      	movs	r3, #0
9000e008:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000e00c:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
9000e00e:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000e012:	b3a1      	cbz	r1, 9000e07e <HAL_LTDC_ConfigLayer+0x192>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000e014:	2901      	cmp	r1, #1
9000e016:	d036      	beq.n	9000e086 <HAL_LTDC_ConfigLayer+0x19a>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
9000e018:	1e8b      	subs	r3, r1, #2
9000e01a:	2907      	cmp	r1, #7
9000e01c:	bf18      	it	ne
9000e01e:	2b02      	cmpne	r3, #2
9000e020:	bf94      	ite	ls
9000e022:	2301      	movls	r3, #1
9000e024:	2300      	movhi	r3, #0
9000e026:	3301      	adds	r3, #1
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000e028:	1abf      	subs	r7, r7, r2
9000e02a:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
9000e02c:	fb03 f707 	mul.w	r7, r3, r7
9000e030:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000e034:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000e036:	3707      	adds	r7, #7
9000e038:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000e03c:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
9000e040:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
9000e044:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000e048:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000e04c:	4b0f      	ldr	r3, [pc, #60]	@ (9000e08c <HAL_LTDC_ConfigLayer+0x1a0>)
9000e04e:	f8dc 1030 	ldr.w	r1, [ip, #48]	@ 0x30
9000e052:	400b      	ands	r3, r1
9000e054:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000e058:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000e05c:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000e05e:	f859 3006 	ldr.w	r3, [r9, r6]
9000e062:	4313      	orrs	r3, r2
9000e064:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000e068:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000e06a:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  return HAL_OK;
9000e06e:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000e070:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
9000e074:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
9000e078:	b003      	add	sp, #12
9000e07a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    tmp = 4U;
9000e07e:	2304      	movs	r3, #4
9000e080:	e7d2      	b.n	9000e028 <HAL_LTDC_ConfigLayer+0x13c>
  __HAL_LOCK(hltdc);
9000e082:	2002      	movs	r0, #2
}
9000e084:	4770      	bx	lr
    tmp = 3U;
9000e086:	2303      	movs	r3, #3
9000e088:	e7ce      	b.n	9000e028 <HAL_LTDC_ConfigLayer+0x13c>
9000e08a:	bf00      	nop
9000e08c:	fffff800 	.word	0xfffff800
9000e090:	fffff8f8 	.word	0xfffff8f8

9000e094 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000e094:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
9000e098:	2a01      	cmp	r2, #1
9000e09a:	d019      	beq.n	9000e0d0 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000e09c:	6802      	ldr	r2, [r0, #0]
9000e09e:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000e0a0:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000e0a2:	f04f 0c00 	mov.w	ip, #0
{
9000e0a6:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000e0a8:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000e0ac:	6b50      	ldr	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000e0ae:	4c09      	ldr	r4, [pc, #36]	@ (9000e0d4 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000e0b0:	f020 0001 	bic.w	r0, r0, #1
9000e0b4:	6350      	str	r0, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000e0b6:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000e0b8:	6421      	str	r1, [r4, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000e0ba:	6b51      	ldr	r1, [r2, #52]	@ 0x34
9000e0bc:	4301      	orrs	r1, r0
9000e0be:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000e0c0:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  return HAL_OK;
9000e0c4:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000e0c6:	f883 c0a0 	strb.w	ip, [r3, #160]	@ 0xa0
}
9000e0ca:	f85d 4b04 	ldr.w	r4, [sp], #4
9000e0ce:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000e0d0:	2002      	movs	r0, #2
}
9000e0d2:	4770      	bx	lr
9000e0d4:	50001000 	.word	0x50001000

9000e0d8 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000e0d8:	b538      	push	{r3, r4, r5, lr}
9000e0da:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000e0dc:	f7fc fc9c 	bl	9000aa18 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000e0e0:	2c00      	cmp	r4, #0
9000e0e2:	d058      	beq.n	9000e196 <HAL_MDMA_Init+0xbe>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000e0e4:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000e0e6:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000e0e8:	2100      	movs	r1, #0
9000e0ea:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000e0ec:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(hmdma);
9000e0f0:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000e0f4:	68da      	ldr	r2, [r3, #12]
9000e0f6:	f022 0201 	bic.w	r2, r2, #1
9000e0fa:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000e0fc:	e005      	b.n	9000e10a <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000e0fe:	f7fc fc8b 	bl	9000aa18 <HAL_GetTick>
9000e102:	1b43      	subs	r3, r0, r5
9000e104:	2b05      	cmp	r3, #5
9000e106:	d841      	bhi.n	9000e18c <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000e108:	6823      	ldr	r3, [r4, #0]
9000e10a:	68da      	ldr	r2, [r3, #12]
9000e10c:	07d2      	lsls	r2, r2, #31
9000e10e:	d4f6      	bmi.n	9000e0fe <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000e110:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000e114:	69e0      	ldr	r0, [r4, #28]
9000e116:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000e118:	68e1      	ldr	r1, [r4, #12]
9000e11a:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000e11c:	4302      	orrs	r2, r0
9000e11e:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000e120:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000e122:	4302      	orrs	r2, r0
9000e124:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000e126:	4302      	orrs	r2, r0
9000e128:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000e12a:	4302      	orrs	r2, r0
9000e12c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000e12e:	4302      	orrs	r2, r0
9000e130:	68a0      	ldr	r0, [r4, #8]
9000e132:	4302      	orrs	r2, r0
9000e134:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000e136:	3801      	subs	r0, #1
9000e138:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000e13c:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000e13e:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000e140:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000e144:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000e146:	d103      	bne.n	9000e150 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000e148:	691a      	ldr	r2, [r3, #16]
9000e14a:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
9000e14e:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000e150:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000e152:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9000e154:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000e156:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000e158:	db1f      	blt.n	9000e19a <HAL_MDMA_Init+0xc2>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000e15a:	b292      	uxth	r2, r2
9000e15c:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000e15e:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000e160:	2a00      	cmp	r2, #0
9000e162:	db24      	blt.n	9000e1ae <HAL_MDMA_Init+0xd6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000e164:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000e166:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000e16a:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000e16e:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000e170:	d029      	beq.n	9000e1c6 <HAL_MDMA_Init+0xee>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000e172:	b2c0      	uxtb	r0, r0
9000e174:	6298      	str	r0, [r3, #40]	@ 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000e176:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000e178:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000e17a:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
9000e17c:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000e17e:	66a2      	str	r2, [r4, #104]	@ 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000e180:	6662      	str	r2, [r4, #100]	@ 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000e182:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
  hmdma->FirstLinkedListNodeAddress  = 0;
9000e186:	e9c4 2217 	strd	r2, r2, [r4, #92]	@ 0x5c
}
9000e18a:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000e18c:	2240      	movs	r2, #64	@ 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000e18e:	2303      	movs	r3, #3
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000e190:	66a2      	str	r2, [r4, #104]	@ 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000e192:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    return HAL_ERROR;
9000e196:	2001      	movs	r0, #1
}
9000e198:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000e19a:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000e19c:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000e19e:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000e1a2:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000e1a4:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000e1a6:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000e1a8:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000e1aa:	2a00      	cmp	r2, #0
9000e1ac:	dada      	bge.n	9000e164 <HAL_MDMA_Init+0x8c>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000e1ae:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000e1b0:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000e1b2:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000e1b6:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
9000e1ba:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000e1bc:	6a19      	ldr	r1, [r3, #32]
9000e1be:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000e1c2:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000e1c4:	d1d5      	bne.n	9000e172 <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000e1c6:	2200      	movs	r2, #0
9000e1c8:	629a      	str	r2, [r3, #40]	@ 0x28
9000e1ca:	e7d4      	b.n	9000e176 <HAL_MDMA_Init+0x9e>

9000e1cc <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000e1cc:	b1f8      	cbz	r0, 9000e20e <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000e1ce:	6802      	ldr	r2, [r0, #0]
9000e1d0:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000e1d2:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000e1d4:	68d0      	ldr	r0, [r2, #12]
{
9000e1d6:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000e1d8:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000e1dc:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000e1de:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000e1e0:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000e1e2:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000e1e4:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000e1e6:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000e1e8:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000e1ea:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000e1ec:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000e1ee:	6253      	str	r3, [r2, #36]	@ 0x24
  hmdma->Instance->CTBR = 0;
9000e1f0:	6293      	str	r3, [r2, #40]	@ 0x28
  hmdma->Instance->CMAR = 0;
9000e1f2:	6313      	str	r3, [r2, #48]	@ 0x30
  hmdma->Instance->CMDR = 0;
9000e1f4:	6353      	str	r3, [r2, #52]	@ 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000e1f6:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000e1f8:	668b      	str	r3, [r1, #104]	@ 0x68
  __HAL_UNLOCK(hmdma);
9000e1fa:	f881 303c 	strb.w	r3, [r1, #60]	@ 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000e1fe:	f881 303d 	strb.w	r3, [r1, #61]	@ 0x3d
}
9000e202:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000e206:	664b      	str	r3, [r1, #100]	@ 0x64
  hmdma->FirstLinkedListNodeAddress  = 0;
9000e208:	e9c1 3317 	strd	r3, r3, [r1, #92]	@ 0x5c
}
9000e20c:	4770      	bx	lr
    return HAL_ERROR;
9000e20e:	2001      	movs	r0, #1
}
9000e210:	4770      	bx	lr
9000e212:	bf00      	nop

9000e214 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000e214:	b308      	cbz	r0, 9000e25a <HAL_MDMA_ConfigPostRequestMask+0x46>
9000e216:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000e218:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
9000e21c:	2801      	cmp	r0, #1
9000e21e:	d01e      	beq.n	9000e25e <HAL_MDMA_ConfigPostRequestMask+0x4a>
{
9000e220:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000e222:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000e226:	f893 c03d 	ldrb.w	ip, [r3, #61]	@ 0x3d
9000e22a:	45f4      	cmp	ip, lr
9000e22c:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000e230:	f883 e03c 	strb.w	lr, [r3, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000e234:	d004      	beq.n	9000e240 <HAL_MDMA_ConfigPostRequestMask+0x2c>
      status =  HAL_ERROR;
9000e236:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000e238:	2200      	movs	r2, #0
9000e23a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
}
9000e23e:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000e240:	681c      	ldr	r4, [r3, #0]
9000e242:	6925      	ldr	r5, [r4, #16]
9000e244:	006d      	lsls	r5, r5, #1
9000e246:	d4f7      	bmi.n	9000e238 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000e248:	6321      	str	r1, [r4, #48]	@ 0x30
      hmdma->Instance->CMDR = MaskData;
9000e24a:	6362      	str	r2, [r4, #52]	@ 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000e24c:	6922      	ldr	r2, [r4, #16]
      if(MaskAddress == 0U)
9000e24e:	b941      	cbnz	r1, 9000e262 <HAL_MDMA_ConfigPostRequestMask+0x4e>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000e250:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
9000e254:	6122      	str	r2, [r4, #16]
  HAL_StatusTypeDef  status = HAL_OK;
9000e256:	2000      	movs	r0, #0
9000e258:	e7ee      	b.n	9000e238 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000e25a:	2001      	movs	r0, #1
9000e25c:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000e25e:	2002      	movs	r0, #2
}
9000e260:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000e262:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
9000e266:	6122      	str	r2, [r4, #16]
9000e268:	e7f5      	b.n	9000e256 <HAL_MDMA_ConfigPostRequestMask+0x42>
9000e26a:	bf00      	nop

9000e26c <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000e26c:	2800      	cmp	r0, #0
9000e26e:	d06b      	beq.n	9000e348 <HAL_MDMA_Start_IT+0xdc>
{
9000e270:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hmdma);
9000e272:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
9000e276:	2c01      	cmp	r4, #1
9000e278:	d009      	beq.n	9000e28e <HAL_MDMA_Start_IT+0x22>
9000e27a:	2401      	movs	r4, #1
9000e27c:	f880 403c 	strb.w	r4, [r0, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000e280:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
9000e284:	2c01      	cmp	r4, #1
9000e286:	d005      	beq.n	9000e294 <HAL_MDMA_Start_IT+0x28>
    __HAL_UNLOCK(hmdma);
9000e288:	2300      	movs	r3, #0
9000e28a:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  __HAL_LOCK(hmdma);
9000e28e:	2002      	movs	r0, #2
}
9000e290:	bc70      	pop	{r4, r5, r6}
9000e292:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000e294:	2402      	movs	r4, #2
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000e296:	9e03      	ldr	r6, [sp, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000e298:	4d2c      	ldr	r5, [pc, #176]	@ (9000e34c <HAL_MDMA_Start_IT+0xe0>)
9000e29a:	f3c3 0310 	ubfx	r3, r3, #0, #17
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000e29e:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000e2a2:	2400      	movs	r4, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000e2a4:	f106 3cff 	add.w	ip, r6, #4294967295
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000e2a8:	f011 4f5f 	tst.w	r1, #3741319168	@ 0xdf000000
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000e2ac:	6684      	str	r4, [r0, #104]	@ 0x68
    __HAL_MDMA_DISABLE(hmdma);
9000e2ae:	6804      	ldr	r4, [r0, #0]
9000e2b0:	68e6      	ldr	r6, [r4, #12]
9000e2b2:	f026 0601 	bic.w	r6, r6, #1
9000e2b6:	60e6      	str	r6, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000e2b8:	6966      	ldr	r6, [r4, #20]
9000e2ba:	ea05 0506 	and.w	r5, r5, r6
9000e2be:	ea45 0503 	orr.w	r5, r5, r3
9000e2c2:	6165      	str	r5, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000e2c4:	6963      	ldr	r3, [r4, #20]
9000e2c6:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000e2ca:	ea43 530c 	orr.w	r3, r3, ip, lsl #20
9000e2ce:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000e2d0:	f04f 031f 	mov.w	r3, #31
9000e2d4:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000e2d6:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000e2d8:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000e2da:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000e2dc:	bf0c      	ite	eq
9000e2de:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000e2e2:	f423 3380 	bicne.w	r3, r3, #65536	@ 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000e2e6:	f012 4f5f 	tst.w	r2, #3741319168	@ 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000e2ea:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000e2ec:	62a3      	str	r3, [r4, #40]	@ 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000e2ee:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000e2f0:	bf0c      	ite	eq
9000e2f2:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000e2f6:	f423 3300 	bicne.w	r3, r3, #131072	@ 0x20000
9000e2fa:	62a3      	str	r3, [r4, #40]	@ 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000e2fc:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000e2fe:	6263      	str	r3, [r4, #36]	@ 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000e300:	68e3      	ldr	r3, [r4, #12]
9000e302:	f043 0306 	orr.w	r3, r3, #6
9000e306:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000e308:	b11a      	cbz	r2, 9000e312 <HAL_MDMA_Start_IT+0xa6>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000e30a:	68e3      	ldr	r3, [r4, #12]
9000e30c:	f043 0310 	orr.w	r3, r3, #16
9000e310:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000e312:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000e314:	b11b      	cbz	r3, 9000e31e <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000e316:	68e3      	ldr	r3, [r4, #12]
9000e318:	f043 0308 	orr.w	r3, r3, #8
9000e31c:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000e31e:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9000e320:	b11b      	cbz	r3, 9000e32a <HAL_MDMA_Start_IT+0xbe>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000e322:	68e3      	ldr	r3, [r4, #12]
9000e324:	f043 0320 	orr.w	r3, r3, #32
9000e328:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000e32a:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000e32c:	6842      	ldr	r2, [r0, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000e32e:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000e332:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000e336:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000e338:	d103      	bne.n	9000e342 <HAL_MDMA_Start_IT+0xd6>
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000e33a:	68e3      	ldr	r3, [r4, #12]
9000e33c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000e340:	60e3      	str	r3, [r4, #12]
  return HAL_OK;
9000e342:	2000      	movs	r0, #0
}
9000e344:	bc70      	pop	{r4, r5, r6}
9000e346:	4770      	bx	lr
    return HAL_ERROR;
9000e348:	2001      	movs	r0, #1
}
9000e34a:	4770      	bx	lr
9000e34c:	fffe0000 	.word	0xfffe0000

9000e350 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000e350:	4603      	mov	r3, r0
9000e352:	b128      	cbz	r0, 9000e360 <HAL_MDMA_Abort_IT+0x10>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000e354:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
9000e358:	2a02      	cmp	r2, #2
9000e35a:	d003      	beq.n	9000e364 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000e35c:	2280      	movs	r2, #128	@ 0x80
9000e35e:	6682      	str	r2, [r0, #104]	@ 0x68
    return HAL_ERROR;
9000e360:	2001      	movs	r0, #1
9000e362:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000e364:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000e366:	2104      	movs	r1, #4
  return HAL_OK;
9000e368:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000e36a:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000e36e:	68d3      	ldr	r3, [r2, #12]
9000e370:	f023 0301 	bic.w	r3, r3, #1
9000e374:	60d3      	str	r3, [r2, #12]
}
9000e376:	4770      	bx	lr

9000e378 <HAL_MDMA_IRQHandler>:
{
9000e378:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000e37a:	2300      	movs	r3, #0
{
9000e37c:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000e37e:	f04f 45a4 	mov.w	r5, #1375731712	@ 0x52000000
{
9000e382:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000e384:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000e386:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000e388:	4b57      	ldr	r3, [pc, #348]	@ (9000e4e8 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000e38a:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000e38c:	4a57      	ldr	r2, [pc, #348]	@ (9000e4ec <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000e38e:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000e390:	6823      	ldr	r3, [r4, #0]
9000e392:	441a      	add	r2, r3
9000e394:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000e398:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000e39c:	4202      	tst	r2, r0
9000e39e:	f000 80a0 	beq.w	9000e4e2 <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000e3a2:	681a      	ldr	r2, [r3, #0]
9000e3a4:	07d1      	lsls	r1, r2, #31
9000e3a6:	d529      	bpl.n	9000e3fc <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000e3a8:	68da      	ldr	r2, [r3, #12]
9000e3aa:	0792      	lsls	r2, r2, #30
9000e3ac:	d526      	bpl.n	9000e3fc <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000e3ae:	68da      	ldr	r2, [r3, #12]
9000e3b0:	f022 0202 	bic.w	r2, r2, #2
9000e3b4:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000e3b6:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000e3b8:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000e3ba:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000e3bc:	bf54      	ite	pl
9000e3be:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000e3c2:	f041 0102 	orrmi.w	r1, r1, #2
9000e3c6:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000e3c8:	0591      	lsls	r1, r2, #22
9000e3ca:	d503      	bpl.n	9000e3d4 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000e3cc:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000e3ce:	f041 0104 	orr.w	r1, r1, #4
9000e3d2:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000e3d4:	05d0      	lsls	r0, r2, #23
9000e3d6:	d503      	bpl.n	9000e3e0 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000e3d8:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000e3da:	f041 0108 	orr.w	r1, r1, #8
9000e3de:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000e3e0:	0551      	lsls	r1, r2, #21
9000e3e2:	d503      	bpl.n	9000e3ec <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000e3e4:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000e3e6:	f041 0110 	orr.w	r1, r1, #16
9000e3ea:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000e3ec:	0510      	lsls	r0, r2, #20
9000e3ee:	d503      	bpl.n	9000e3f8 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000e3f0:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
9000e3f2:	f042 0220 	orr.w	r2, r2, #32
9000e3f6:	66a2      	str	r2, [r4, #104]	@ 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000e3f8:	2201      	movs	r2, #1
9000e3fa:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000e3fc:	681a      	ldr	r2, [r3, #0]
9000e3fe:	06d1      	lsls	r1, r2, #27
9000e400:	d509      	bpl.n	9000e416 <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000e402:	68da      	ldr	r2, [r3, #12]
9000e404:	0692      	lsls	r2, r2, #26
9000e406:	d506      	bpl.n	9000e416 <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000e408:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000e40a:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000e40c:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000e40e:	b112      	cbz	r2, 9000e416 <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000e410:	4620      	mov	r0, r4
9000e412:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000e414:	6823      	ldr	r3, [r4, #0]
9000e416:	681a      	ldr	r2, [r3, #0]
9000e418:	0710      	lsls	r0, r2, #28
9000e41a:	d509      	bpl.n	9000e430 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000e41c:	68da      	ldr	r2, [r3, #12]
9000e41e:	06d1      	lsls	r1, r2, #27
9000e420:	d506      	bpl.n	9000e430 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000e422:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000e424:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000e426:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000e428:	b112      	cbz	r2, 9000e430 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000e42a:	4620      	mov	r0, r4
9000e42c:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000e42e:	6823      	ldr	r3, [r4, #0]
9000e430:	681a      	ldr	r2, [r3, #0]
9000e432:	0752      	lsls	r2, r2, #29
9000e434:	d509      	bpl.n	9000e44a <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000e436:	68da      	ldr	r2, [r3, #12]
9000e438:	0710      	lsls	r0, r2, #28
9000e43a:	d506      	bpl.n	9000e44a <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000e43c:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000e43e:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000e440:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000e442:	b112      	cbz	r2, 9000e44a <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000e444:	4620      	mov	r0, r4
9000e446:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000e448:	6823      	ldr	r3, [r4, #0]
9000e44a:	681a      	ldr	r2, [r3, #0]
9000e44c:	0791      	lsls	r1, r2, #30
9000e44e:	d516      	bpl.n	9000e47e <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000e450:	68da      	ldr	r2, [r3, #12]
9000e452:	0752      	lsls	r2, r2, #29
9000e454:	d513      	bpl.n	9000e47e <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000e456:	68da      	ldr	r2, [r3, #12]
9000e458:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
9000e45c:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000e45e:	f894 203d 	ldrb.w	r2, [r4, #61]	@ 0x3d
9000e462:	2a04      	cmp	r2, #4
9000e464:	d034      	beq.n	9000e4d0 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000e466:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000e468:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000e46a:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000e46c:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000e46e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
      __HAL_UNLOCK(hmdma);
9000e470:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000e474:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000e478:	b10b      	cbz	r3, 9000e47e <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000e47a:	4620      	mov	r0, r4
9000e47c:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000e47e:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
9000e480:	2b00      	cmp	r3, #0
9000e482:	d02e      	beq.n	9000e4e2 <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000e484:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000e486:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000e488:	4b19      	ldr	r3, [pc, #100]	@ (9000e4f0 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000e48a:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000e48e:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000e492:	68cb      	ldr	r3, [r1, #12]
9000e494:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000e498:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000e49a:	60cb      	str	r3, [r1, #12]
9000e49c:	e002      	b.n	9000e4a4 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000e49e:	68cb      	ldr	r3, [r1, #12]
9000e4a0:	07d8      	lsls	r0, r3, #31
9000e4a2:	d504      	bpl.n	9000e4ae <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000e4a4:	9b01      	ldr	r3, [sp, #4]
9000e4a6:	3301      	adds	r3, #1
9000e4a8:	4293      	cmp	r3, r2
9000e4aa:	9301      	str	r3, [sp, #4]
9000e4ac:	d9f7      	bls.n	9000e49e <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000e4ae:	2300      	movs	r3, #0
9000e4b0:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000e4b4:	68cb      	ldr	r3, [r1, #12]
9000e4b6:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000e4b8:	bf4c      	ite	mi
9000e4ba:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000e4bc:	2301      	movpl	r3, #1
9000e4be:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000e4c2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000e4c4:	b16b      	cbz	r3, 9000e4e2 <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000e4c6:	4620      	mov	r0, r4
}
9000e4c8:	b003      	add	sp, #12
9000e4ca:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000e4ce:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000e4d0:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000e4d2:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000e4d4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
        __HAL_UNLOCK(hmdma);
9000e4d6:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000e4da:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000e4de:	2b00      	cmp	r3, #0
9000e4e0:	d1f1      	bne.n	9000e4c6 <HAL_MDMA_IRQHandler+0x14e>
}
9000e4e2:	b003      	add	sp, #12
9000e4e4:	bd30      	pop	{r4, r5, pc}
9000e4e6:	bf00      	nop
9000e4e8:	24000058 	.word	0x24000058
9000e4ec:	adffffc0 	.word	0xadffffc0
9000e4f0:	1b4e81b5 	.word	0x1b4e81b5

9000e4f4 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000e4f4:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000e4f6:	4c10      	ldr	r4, [pc, #64]	@ (9000e538 <HAL_PWREx_ConfigSupply+0x44>)
9000e4f8:	68e3      	ldr	r3, [r4, #12]
9000e4fa:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000e4fe:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000e500:	d105      	bne.n	9000e50e <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000e502:	f003 0307 	and.w	r3, r3, #7
9000e506:	1a18      	subs	r0, r3, r0
9000e508:	bf18      	it	ne
9000e50a:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000e50c:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000e50e:	f023 0307 	bic.w	r3, r3, #7
9000e512:	4303      	orrs	r3, r0
9000e514:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000e516:	f7fc fa7f 	bl	9000aa18 <HAL_GetTick>
9000e51a:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000e51c:	e005      	b.n	9000e52a <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000e51e:	f7fc fa7b 	bl	9000aa18 <HAL_GetTick>
9000e522:	1b40      	subs	r0, r0, r5
9000e524:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000e528:	d804      	bhi.n	9000e534 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000e52a:	6863      	ldr	r3, [r4, #4]
9000e52c:	049b      	lsls	r3, r3, #18
9000e52e:	d5f6      	bpl.n	9000e51e <HAL_PWREx_ConfigSupply+0x2a>
      return HAL_OK;
9000e530:	2000      	movs	r0, #0
}
9000e532:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000e534:	2001      	movs	r0, #1
}
9000e536:	bd38      	pop	{r3, r4, r5, pc}
9000e538:	58024800 	.word	0x58024800

9000e53c <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000e53c:	4b33      	ldr	r3, [pc, #204]	@ (9000e60c <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000e53e:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000e540:	6a99      	ldr	r1, [r3, #40]	@ 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000e542:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000e544:	6add      	ldr	r5, [r3, #44]	@ 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000e546:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000e54a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000e54c:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000e550:	d036      	beq.n	9000e5c0 <HAL_RCC_GetSysClockFreq.part.0+0x84>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000e552:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000e556:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000e55a:	f001 0103 	and.w	r1, r1, #3
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e55e:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000e562:	fb05 f202 	mul.w	r2, r5, r2
9000e566:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e568:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000e56c:	ee06 2a90 	vmov	s13, r2
9000e570:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000e574:	d002      	beq.n	9000e57c <HAL_RCC_GetSysClockFreq.part.0+0x40>
9000e576:	2902      	cmp	r1, #2
9000e578:	d042      	beq.n	9000e600 <HAL_RCC_GetSysClockFreq.part.0+0xc4>
9000e57a:	b319      	cbz	r1, 9000e5c4 <HAL_RCC_GetSysClockFreq.part.0+0x88>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e57c:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9000e610 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000e580:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000e584:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000e586:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000e58a:	ee07 3a90 	vmov	s15, r3
9000e58e:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000e592:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e596:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000e59a:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000e59e:	ee67 7a86 	vmul.f32	s15, s15, s12
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000e5a2:	4b1a      	ldr	r3, [pc, #104]	@ (9000e60c <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
9000e5a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000e5a6:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000e5aa:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000e5ac:	ee07 3a10 	vmov	s14, r3
9000e5b0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9000e5b4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000e5b8:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000e5bc:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000e5c0:	bc30      	pop	{r4, r5}
9000e5c2:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e5c4:	681a      	ldr	r2, [r3, #0]
9000e5c6:	0692      	lsls	r2, r2, #26
9000e5c8:	d51d      	bpl.n	9000e606 <HAL_RCC_GetSysClockFreq.part.0+0xca>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e5ca:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e5cc:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e5d0:	4a10      	ldr	r2, [pc, #64]	@ (9000e614 <HAL_RCC_GetSysClockFreq.part.0+0xd8>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e5d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e5d4:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e5d8:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e5dc:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e5de:	ee07 3a90 	vmov	s15, r3
9000e5e2:	ee06 2a10 	vmov	s12, r2
9000e5e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e5ea:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000e5ee:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000e5f2:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000e5f6:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000e5fa:	ee67 7a87 	vmul.f32	s15, s15, s14
9000e5fe:	e7d0      	b.n	9000e5a2 <HAL_RCC_GetSysClockFreq.part.0+0x66>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e600:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000e618 <HAL_RCC_GetSysClockFreq.part.0+0xdc>
9000e604:	e7bc      	b.n	9000e580 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e606:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000e61c <HAL_RCC_GetSysClockFreq.part.0+0xe0>
9000e60a:	e7b9      	b.n	9000e580 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000e60c:	58024400 	.word	0x58024400
9000e610:	4a742400 	.word	0x4a742400
9000e614:	03d09000 	.word	0x03d09000
9000e618:	4bbebc20 	.word	0x4bbebc20
9000e61c:	4c742400 	.word	0x4c742400

9000e620 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000e620:	2800      	cmp	r0, #0
9000e622:	f000 82e9 	beq.w	9000ebf8 <HAL_RCC_OscConfig+0x5d8>
{
9000e626:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000e628:	6803      	ldr	r3, [r0, #0]
9000e62a:	4604      	mov	r4, r0
9000e62c:	07d9      	lsls	r1, r3, #31
9000e62e:	d52e      	bpl.n	9000e68e <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000e630:	4997      	ldr	r1, [pc, #604]	@ (9000e890 <HAL_RCC_OscConfig+0x270>)
9000e632:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000e634:	6a89      	ldr	r1, [r1, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000e636:	f002 0238 	and.w	r2, r2, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000e63a:	2a10      	cmp	r2, #16
9000e63c:	f000 80ee 	beq.w	9000e81c <HAL_RCC_OscConfig+0x1fc>
9000e640:	2a18      	cmp	r2, #24
9000e642:	f000 80e6 	beq.w	9000e812 <HAL_RCC_OscConfig+0x1f2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000e646:	6863      	ldr	r3, [r4, #4]
9000e648:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000e64c:	f000 8111 	beq.w	9000e872 <HAL_RCC_OscConfig+0x252>
9000e650:	2b00      	cmp	r3, #0
9000e652:	f000 8167 	beq.w	9000e924 <HAL_RCC_OscConfig+0x304>
9000e656:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000e65a:	4b8d      	ldr	r3, [pc, #564]	@ (9000e890 <HAL_RCC_OscConfig+0x270>)
9000e65c:	681a      	ldr	r2, [r3, #0]
9000e65e:	f000 828a 	beq.w	9000eb76 <HAL_RCC_OscConfig+0x556>
9000e662:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000e666:	601a      	str	r2, [r3, #0]
9000e668:	681a      	ldr	r2, [r3, #0]
9000e66a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000e66e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000e670:	f7fc f9d2 	bl	9000aa18 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000e674:	4e86      	ldr	r6, [pc, #536]	@ (9000e890 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
9000e676:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000e678:	e005      	b.n	9000e686 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000e67a:	f7fc f9cd 	bl	9000aa18 <HAL_GetTick>
9000e67e:	1b40      	subs	r0, r0, r5
9000e680:	2864      	cmp	r0, #100	@ 0x64
9000e682:	f200 814d 	bhi.w	9000e920 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000e686:	6833      	ldr	r3, [r6, #0]
9000e688:	039b      	lsls	r3, r3, #14
9000e68a:	d5f6      	bpl.n	9000e67a <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000e68c:	6823      	ldr	r3, [r4, #0]
9000e68e:	079d      	lsls	r5, r3, #30
9000e690:	d470      	bmi.n	9000e774 <HAL_RCC_OscConfig+0x154>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000e692:	06d9      	lsls	r1, r3, #27
9000e694:	d533      	bpl.n	9000e6fe <HAL_RCC_OscConfig+0xde>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000e696:	4a7e      	ldr	r2, [pc, #504]	@ (9000e890 <HAL_RCC_OscConfig+0x270>)
9000e698:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000e69a:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000e69c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000e6a0:	2b08      	cmp	r3, #8
9000e6a2:	f000 80cb 	beq.w	9000e83c <HAL_RCC_OscConfig+0x21c>
9000e6a6:	2b18      	cmp	r3, #24
9000e6a8:	f000 80c3 	beq.w	9000e832 <HAL_RCC_OscConfig+0x212>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000e6ac:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000e6ae:	4d78      	ldr	r5, [pc, #480]	@ (9000e890 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000e6b0:	2b00      	cmp	r3, #0
9000e6b2:	f000 816f 	beq.w	9000e994 <HAL_RCC_OscConfig+0x374>
        __HAL_RCC_CSI_ENABLE();
9000e6b6:	682b      	ldr	r3, [r5, #0]
9000e6b8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000e6bc:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000e6be:	f7fc f9ab 	bl	9000aa18 <HAL_GetTick>
9000e6c2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000e6c4:	e005      	b.n	9000e6d2 <HAL_RCC_OscConfig+0xb2>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000e6c6:	f7fc f9a7 	bl	9000aa18 <HAL_GetTick>
9000e6ca:	1b80      	subs	r0, r0, r6
9000e6cc:	2802      	cmp	r0, #2
9000e6ce:	f200 8127 	bhi.w	9000e920 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000e6d2:	682b      	ldr	r3, [r5, #0]
9000e6d4:	05db      	lsls	r3, r3, #23
9000e6d6:	d5f6      	bpl.n	9000e6c6 <HAL_RCC_OscConfig+0xa6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000e6d8:	f7fc f9a4 	bl	9000aa24 <HAL_GetREVID>
9000e6dc:	f241 0303 	movw	r3, #4099	@ 0x1003
9000e6e0:	4298      	cmp	r0, r3
9000e6e2:	f200 8269 	bhi.w	9000ebb8 <HAL_RCC_OscConfig+0x598>
9000e6e6:	6a22      	ldr	r2, [r4, #32]
9000e6e8:	686b      	ldr	r3, [r5, #4]
9000e6ea:	2a20      	cmp	r2, #32
9000e6ec:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000e6f0:	bf0c      	ite	eq
9000e6f2:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
9000e6f6:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000e6fa:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000e6fc:	6823      	ldr	r3, [r4, #0]
9000e6fe:	071d      	lsls	r5, r3, #28
9000e700:	d516      	bpl.n	9000e730 <HAL_RCC_OscConfig+0x110>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000e702:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000e704:	4d62      	ldr	r5, [pc, #392]	@ (9000e890 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000e706:	2b00      	cmp	r3, #0
9000e708:	f000 8122 	beq.w	9000e950 <HAL_RCC_OscConfig+0x330>
      __HAL_RCC_LSI_ENABLE();
9000e70c:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000e70e:	f043 0301 	orr.w	r3, r3, #1
9000e712:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000e714:	f7fc f980 	bl	9000aa18 <HAL_GetTick>
9000e718:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000e71a:	e005      	b.n	9000e728 <HAL_RCC_OscConfig+0x108>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000e71c:	f7fc f97c 	bl	9000aa18 <HAL_GetTick>
9000e720:	1b80      	subs	r0, r0, r6
9000e722:	2802      	cmp	r0, #2
9000e724:	f200 80fc 	bhi.w	9000e920 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000e728:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000e72a:	0798      	lsls	r0, r3, #30
9000e72c:	d5f6      	bpl.n	9000e71c <HAL_RCC_OscConfig+0xfc>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000e72e:	6823      	ldr	r3, [r4, #0]
9000e730:	069a      	lsls	r2, r3, #26
9000e732:	d516      	bpl.n	9000e762 <HAL_RCC_OscConfig+0x142>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000e734:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000e736:	4d56      	ldr	r5, [pc, #344]	@ (9000e890 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000e738:	2b00      	cmp	r3, #0
9000e73a:	f000 811a 	beq.w	9000e972 <HAL_RCC_OscConfig+0x352>
      __HAL_RCC_HSI48_ENABLE();
9000e73e:	682b      	ldr	r3, [r5, #0]
9000e740:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000e744:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000e746:	f7fc f967 	bl	9000aa18 <HAL_GetTick>
9000e74a:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000e74c:	e005      	b.n	9000e75a <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000e74e:	f7fc f963 	bl	9000aa18 <HAL_GetTick>
9000e752:	1b80      	subs	r0, r0, r6
9000e754:	2802      	cmp	r0, #2
9000e756:	f200 80e3 	bhi.w	9000e920 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000e75a:	682b      	ldr	r3, [r5, #0]
9000e75c:	049f      	lsls	r7, r3, #18
9000e75e:	d5f6      	bpl.n	9000e74e <HAL_RCC_OscConfig+0x12e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000e760:	6823      	ldr	r3, [r4, #0]
9000e762:	0759      	lsls	r1, r3, #29
9000e764:	f100 808b 	bmi.w	9000e87e <HAL_RCC_OscConfig+0x25e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000e768:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000e76a:	2b00      	cmp	r3, #0
9000e76c:	f040 80bf 	bne.w	9000e8ee <HAL_RCC_OscConfig+0x2ce>
  return HAL_OK;
9000e770:	2000      	movs	r0, #0
}
9000e772:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000e774:	4a46      	ldr	r2, [pc, #280]	@ (9000e890 <HAL_RCC_OscConfig+0x270>)
9000e776:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000e778:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000e77a:	f013 0338 	ands.w	r3, r3, #56	@ 0x38
9000e77e:	d12d      	bne.n	9000e7dc <HAL_RCC_OscConfig+0x1bc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000e780:	4b43      	ldr	r3, [pc, #268]	@ (9000e890 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000e782:	68e2      	ldr	r2, [r4, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000e784:	681b      	ldr	r3, [r3, #0]
9000e786:	0759      	lsls	r1, r3, #29
9000e788:	d501      	bpl.n	9000e78e <HAL_RCC_OscConfig+0x16e>
9000e78a:	2a00      	cmp	r2, #0
9000e78c:	d04f      	beq.n	9000e82e <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000e78e:	4d40      	ldr	r5, [pc, #256]	@ (9000e890 <HAL_RCC_OscConfig+0x270>)
9000e790:	682b      	ldr	r3, [r5, #0]
9000e792:	f023 0319 	bic.w	r3, r3, #25
9000e796:	4313      	orrs	r3, r2
9000e798:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000e79a:	f7fc f93d 	bl	9000aa18 <HAL_GetTick>
9000e79e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000e7a0:	e005      	b.n	9000e7ae <HAL_RCC_OscConfig+0x18e>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000e7a2:	f7fc f939 	bl	9000aa18 <HAL_GetTick>
9000e7a6:	1b80      	subs	r0, r0, r6
9000e7a8:	2802      	cmp	r0, #2
9000e7aa:	f200 80b9 	bhi.w	9000e920 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000e7ae:	682b      	ldr	r3, [r5, #0]
9000e7b0:	075b      	lsls	r3, r3, #29
9000e7b2:	d5f6      	bpl.n	9000e7a2 <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000e7b4:	f7fc f936 	bl	9000aa24 <HAL_GetREVID>
9000e7b8:	f241 0303 	movw	r3, #4099	@ 0x1003
9000e7bc:	4298      	cmp	r0, r3
9000e7be:	f200 8110 	bhi.w	9000e9e2 <HAL_RCC_OscConfig+0x3c2>
9000e7c2:	6922      	ldr	r2, [r4, #16]
9000e7c4:	686b      	ldr	r3, [r5, #4]
9000e7c6:	2a40      	cmp	r2, #64	@ 0x40
9000e7c8:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000e7cc:	bf0c      	ite	eq
9000e7ce:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
9000e7d2:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000e7d6:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000e7d8:	6823      	ldr	r3, [r4, #0]
9000e7da:	e75a      	b.n	9000e692 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000e7dc:	2b18      	cmp	r3, #24
9000e7de:	f000 80fc 	beq.w	9000e9da <HAL_RCC_OscConfig+0x3ba>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000e7e2:	4d2b      	ldr	r5, [pc, #172]	@ (9000e890 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000e7e4:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000e7e6:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000e7e8:	2a00      	cmp	r2, #0
9000e7ea:	f000 80e5 	beq.w	9000e9b8 <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000e7ee:	f023 0319 	bic.w	r3, r3, #25
9000e7f2:	4313      	orrs	r3, r2
9000e7f4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000e7f6:	f7fc f90f 	bl	9000aa18 <HAL_GetTick>
9000e7fa:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000e7fc:	e005      	b.n	9000e80a <HAL_RCC_OscConfig+0x1ea>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000e7fe:	f7fc f90b 	bl	9000aa18 <HAL_GetTick>
9000e802:	1b80      	subs	r0, r0, r6
9000e804:	2802      	cmp	r0, #2
9000e806:	f200 808b 	bhi.w	9000e920 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000e80a:	682b      	ldr	r3, [r5, #0]
9000e80c:	075f      	lsls	r7, r3, #29
9000e80e:	d5f6      	bpl.n	9000e7fe <HAL_RCC_OscConfig+0x1de>
9000e810:	e7d0      	b.n	9000e7b4 <HAL_RCC_OscConfig+0x194>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000e812:	f001 0103 	and.w	r1, r1, #3
9000e816:	2902      	cmp	r1, #2
9000e818:	f47f af15 	bne.w	9000e646 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000e81c:	4a1c      	ldr	r2, [pc, #112]	@ (9000e890 <HAL_RCC_OscConfig+0x270>)
9000e81e:	6812      	ldr	r2, [r2, #0]
9000e820:	0392      	lsls	r2, r2, #14
9000e822:	f57f af34 	bpl.w	9000e68e <HAL_RCC_OscConfig+0x6e>
9000e826:	6862      	ldr	r2, [r4, #4]
9000e828:	2a00      	cmp	r2, #0
9000e82a:	f47f af30 	bne.w	9000e68e <HAL_RCC_OscConfig+0x6e>
    return HAL_ERROR;
9000e82e:	2001      	movs	r0, #1
}
9000e830:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000e832:	f002 0203 	and.w	r2, r2, #3
9000e836:	2a01      	cmp	r2, #1
9000e838:	f47f af38 	bne.w	9000e6ac <HAL_RCC_OscConfig+0x8c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000e83c:	4b14      	ldr	r3, [pc, #80]	@ (9000e890 <HAL_RCC_OscConfig+0x270>)
9000e83e:	681b      	ldr	r3, [r3, #0]
9000e840:	05da      	lsls	r2, r3, #23
9000e842:	d502      	bpl.n	9000e84a <HAL_RCC_OscConfig+0x22a>
9000e844:	69e3      	ldr	r3, [r4, #28]
9000e846:	2b80      	cmp	r3, #128	@ 0x80
9000e848:	d1f1      	bne.n	9000e82e <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000e84a:	f7fc f8eb 	bl	9000aa24 <HAL_GetREVID>
9000e84e:	f241 0303 	movw	r3, #4099	@ 0x1003
9000e852:	4298      	cmp	r0, r3
9000e854:	f200 80ce 	bhi.w	9000e9f4 <HAL_RCC_OscConfig+0x3d4>
9000e858:	6a22      	ldr	r2, [r4, #32]
9000e85a:	2a20      	cmp	r2, #32
9000e85c:	f000 81bb 	beq.w	9000ebd6 <HAL_RCC_OscConfig+0x5b6>
9000e860:	490b      	ldr	r1, [pc, #44]	@ (9000e890 <HAL_RCC_OscConfig+0x270>)
9000e862:	684b      	ldr	r3, [r1, #4]
9000e864:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000e868:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000e86c:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000e86e:	6823      	ldr	r3, [r4, #0]
9000e870:	e745      	b.n	9000e6fe <HAL_RCC_OscConfig+0xde>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000e872:	4a07      	ldr	r2, [pc, #28]	@ (9000e890 <HAL_RCC_OscConfig+0x270>)
9000e874:	6813      	ldr	r3, [r2, #0]
9000e876:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000e87a:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000e87c:	e6f8      	b.n	9000e670 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000e87e:	4d05      	ldr	r5, [pc, #20]	@ (9000e894 <HAL_RCC_OscConfig+0x274>)
9000e880:	682b      	ldr	r3, [r5, #0]
9000e882:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000e886:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000e888:	f7fc f8c6 	bl	9000aa18 <HAL_GetTick>
9000e88c:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000e88e:	e008      	b.n	9000e8a2 <HAL_RCC_OscConfig+0x282>
9000e890:	58024400 	.word	0x58024400
9000e894:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000e898:	f7fc f8be 	bl	9000aa18 <HAL_GetTick>
9000e89c:	1b80      	subs	r0, r0, r6
9000e89e:	2864      	cmp	r0, #100	@ 0x64
9000e8a0:	d83e      	bhi.n	9000e920 <HAL_RCC_OscConfig+0x300>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000e8a2:	682b      	ldr	r3, [r5, #0]
9000e8a4:	05da      	lsls	r2, r3, #23
9000e8a6:	d5f7      	bpl.n	9000e898 <HAL_RCC_OscConfig+0x278>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000e8a8:	68a3      	ldr	r3, [r4, #8]
9000e8aa:	2b01      	cmp	r3, #1
9000e8ac:	f000 818d 	beq.w	9000ebca <HAL_RCC_OscConfig+0x5aa>
9000e8b0:	2b00      	cmp	r3, #0
9000e8b2:	f000 8168 	beq.w	9000eb86 <HAL_RCC_OscConfig+0x566>
9000e8b6:	2b05      	cmp	r3, #5
9000e8b8:	4b85      	ldr	r3, [pc, #532]	@ (9000ead0 <HAL_RCC_OscConfig+0x4b0>)
9000e8ba:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000e8bc:	f000 8194 	beq.w	9000ebe8 <HAL_RCC_OscConfig+0x5c8>
9000e8c0:	f022 0201 	bic.w	r2, r2, #1
9000e8c4:	671a      	str	r2, [r3, #112]	@ 0x70
9000e8c6:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000e8c8:	f022 0204 	bic.w	r2, r2, #4
9000e8cc:	671a      	str	r2, [r3, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000e8ce:	f7fc f8a3 	bl	9000aa18 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000e8d2:	4e7f      	ldr	r6, [pc, #508]	@ (9000ead0 <HAL_RCC_OscConfig+0x4b0>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000e8d4:	f241 3788 	movw	r7, #5000	@ 0x1388
      tickstart = HAL_GetTick();
9000e8d8:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000e8da:	e004      	b.n	9000e8e6 <HAL_RCC_OscConfig+0x2c6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000e8dc:	f7fc f89c 	bl	9000aa18 <HAL_GetTick>
9000e8e0:	1b40      	subs	r0, r0, r5
9000e8e2:	42b8      	cmp	r0, r7
9000e8e4:	d81c      	bhi.n	9000e920 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000e8e6:	6f33      	ldr	r3, [r6, #112]	@ 0x70
9000e8e8:	079b      	lsls	r3, r3, #30
9000e8ea:	d5f7      	bpl.n	9000e8dc <HAL_RCC_OscConfig+0x2bc>
9000e8ec:	e73c      	b.n	9000e768 <HAL_RCC_OscConfig+0x148>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000e8ee:	4d78      	ldr	r5, [pc, #480]	@ (9000ead0 <HAL_RCC_OscConfig+0x4b0>)
9000e8f0:	692a      	ldr	r2, [r5, #16]
9000e8f2:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000e8f6:	2a18      	cmp	r2, #24
9000e8f8:	f000 80f0 	beq.w	9000eadc <HAL_RCC_OscConfig+0x4bc>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000e8fc:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
9000e8fe:	682b      	ldr	r3, [r5, #0]
9000e900:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000e904:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000e906:	d07f      	beq.n	9000ea08 <HAL_RCC_OscConfig+0x3e8>
        tickstart = HAL_GetTick();
9000e908:	f7fc f886 	bl	9000aa18 <HAL_GetTick>
9000e90c:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000e90e:	682b      	ldr	r3, [r5, #0]
9000e910:	019b      	lsls	r3, r3, #6
9000e912:	f57f af2d 	bpl.w	9000e770 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000e916:	f7fc f87f 	bl	9000aa18 <HAL_GetTick>
9000e91a:	1b00      	subs	r0, r0, r4
9000e91c:	2802      	cmp	r0, #2
9000e91e:	d9f6      	bls.n	9000e90e <HAL_RCC_OscConfig+0x2ee>
            return HAL_TIMEOUT;
9000e920:	2003      	movs	r0, #3
}
9000e922:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000e924:	4d6a      	ldr	r5, [pc, #424]	@ (9000ead0 <HAL_RCC_OscConfig+0x4b0>)
9000e926:	682b      	ldr	r3, [r5, #0]
9000e928:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000e92c:	602b      	str	r3, [r5, #0]
9000e92e:	682b      	ldr	r3, [r5, #0]
9000e930:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
9000e934:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000e936:	f7fc f86f 	bl	9000aa18 <HAL_GetTick>
9000e93a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000e93c:	e004      	b.n	9000e948 <HAL_RCC_OscConfig+0x328>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000e93e:	f7fc f86b 	bl	9000aa18 <HAL_GetTick>
9000e942:	1b80      	subs	r0, r0, r6
9000e944:	2864      	cmp	r0, #100	@ 0x64
9000e946:	d8eb      	bhi.n	9000e920 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000e948:	682b      	ldr	r3, [r5, #0]
9000e94a:	039f      	lsls	r7, r3, #14
9000e94c:	d4f7      	bmi.n	9000e93e <HAL_RCC_OscConfig+0x31e>
9000e94e:	e69d      	b.n	9000e68c <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000e950:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000e952:	f023 0301 	bic.w	r3, r3, #1
9000e956:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000e958:	f7fc f85e 	bl	9000aa18 <HAL_GetTick>
9000e95c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000e95e:	e004      	b.n	9000e96a <HAL_RCC_OscConfig+0x34a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000e960:	f7fc f85a 	bl	9000aa18 <HAL_GetTick>
9000e964:	1b80      	subs	r0, r0, r6
9000e966:	2802      	cmp	r0, #2
9000e968:	d8da      	bhi.n	9000e920 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000e96a:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000e96c:	0799      	lsls	r1, r3, #30
9000e96e:	d4f7      	bmi.n	9000e960 <HAL_RCC_OscConfig+0x340>
9000e970:	e6dd      	b.n	9000e72e <HAL_RCC_OscConfig+0x10e>
      __HAL_RCC_HSI48_DISABLE();
9000e972:	682b      	ldr	r3, [r5, #0]
9000e974:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000e978:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000e97a:	f7fc f84d 	bl	9000aa18 <HAL_GetTick>
9000e97e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000e980:	e004      	b.n	9000e98c <HAL_RCC_OscConfig+0x36c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000e982:	f7fc f849 	bl	9000aa18 <HAL_GetTick>
9000e986:	1b80      	subs	r0, r0, r6
9000e988:	2802      	cmp	r0, #2
9000e98a:	d8c9      	bhi.n	9000e920 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000e98c:	682b      	ldr	r3, [r5, #0]
9000e98e:	0498      	lsls	r0, r3, #18
9000e990:	d4f7      	bmi.n	9000e982 <HAL_RCC_OscConfig+0x362>
9000e992:	e6e5      	b.n	9000e760 <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_CSI_DISABLE();
9000e994:	682b      	ldr	r3, [r5, #0]
9000e996:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000e99a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000e99c:	f7fc f83c 	bl	9000aa18 <HAL_GetTick>
9000e9a0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000e9a2:	e004      	b.n	9000e9ae <HAL_RCC_OscConfig+0x38e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000e9a4:	f7fc f838 	bl	9000aa18 <HAL_GetTick>
9000e9a8:	1b80      	subs	r0, r0, r6
9000e9aa:	2802      	cmp	r0, #2
9000e9ac:	d8b8      	bhi.n	9000e920 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000e9ae:	682b      	ldr	r3, [r5, #0]
9000e9b0:	05df      	lsls	r7, r3, #23
9000e9b2:	d4f7      	bmi.n	9000e9a4 <HAL_RCC_OscConfig+0x384>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000e9b4:	6823      	ldr	r3, [r4, #0]
9000e9b6:	e6a2      	b.n	9000e6fe <HAL_RCC_OscConfig+0xde>
        __HAL_RCC_HSI_DISABLE();
9000e9b8:	f023 0301 	bic.w	r3, r3, #1
9000e9bc:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000e9be:	f7fc f82b 	bl	9000aa18 <HAL_GetTick>
9000e9c2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000e9c4:	e004      	b.n	9000e9d0 <HAL_RCC_OscConfig+0x3b0>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000e9c6:	f7fc f827 	bl	9000aa18 <HAL_GetTick>
9000e9ca:	1b80      	subs	r0, r0, r6
9000e9cc:	2802      	cmp	r0, #2
9000e9ce:	d8a7      	bhi.n	9000e920 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000e9d0:	682b      	ldr	r3, [r5, #0]
9000e9d2:	0758      	lsls	r0, r3, #29
9000e9d4:	d4f7      	bmi.n	9000e9c6 <HAL_RCC_OscConfig+0x3a6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000e9d6:	6823      	ldr	r3, [r4, #0]
9000e9d8:	e65b      	b.n	9000e692 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000e9da:	0790      	lsls	r0, r2, #30
9000e9dc:	f47f af01 	bne.w	9000e7e2 <HAL_RCC_OscConfig+0x1c2>
9000e9e0:	e6ce      	b.n	9000e780 <HAL_RCC_OscConfig+0x160>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000e9e2:	686b      	ldr	r3, [r5, #4]
9000e9e4:	6922      	ldr	r2, [r4, #16]
9000e9e6:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
9000e9ea:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000e9ee:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000e9f0:	6823      	ldr	r3, [r4, #0]
9000e9f2:	e64e      	b.n	9000e692 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000e9f4:	4a36      	ldr	r2, [pc, #216]	@ (9000ead0 <HAL_RCC_OscConfig+0x4b0>)
9000e9f6:	6a21      	ldr	r1, [r4, #32]
9000e9f8:	68d3      	ldr	r3, [r2, #12]
9000e9fa:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000e9fe:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000ea02:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ea04:	6823      	ldr	r3, [r4, #0]
9000ea06:	e67a      	b.n	9000e6fe <HAL_RCC_OscConfig+0xde>
        tickstart = HAL_GetTick();
9000ea08:	f7fc f806 	bl	9000aa18 <HAL_GetTick>
9000ea0c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000ea0e:	e004      	b.n	9000ea1a <HAL_RCC_OscConfig+0x3fa>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000ea10:	f7fc f802 	bl	9000aa18 <HAL_GetTick>
9000ea14:	1b80      	subs	r0, r0, r6
9000ea16:	2802      	cmp	r0, #2
9000ea18:	d882      	bhi.n	9000e920 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000ea1a:	682b      	ldr	r3, [r5, #0]
9000ea1c:	0199      	lsls	r1, r3, #6
9000ea1e:	d4f7      	bmi.n	9000ea10 <HAL_RCC_OscConfig+0x3f0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000ea20:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
9000ea22:	4b2c      	ldr	r3, [pc, #176]	@ (9000ead4 <HAL_RCC_OscConfig+0x4b4>)
9000ea24:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000ea26:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000ea28:	492b      	ldr	r1, [pc, #172]	@ (9000ead8 <HAL_RCC_OscConfig+0x4b8>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000ea2a:	4e29      	ldr	r6, [pc, #164]	@ (9000ead0 <HAL_RCC_OscConfig+0x4b0>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000ea2c:	4313      	orrs	r3, r2
9000ea2e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000ea30:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000ea34:	62ab      	str	r3, [r5, #40]	@ 0x28
9000ea36:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	@ 0x34
9000ea3a:	3b01      	subs	r3, #1
9000ea3c:	3a01      	subs	r2, #1
9000ea3e:	025b      	lsls	r3, r3, #9
9000ea40:	0412      	lsls	r2, r2, #16
9000ea42:	b29b      	uxth	r3, r3
9000ea44:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000ea48:	4313      	orrs	r3, r2
9000ea4a:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000ea4c:	3a01      	subs	r2, #1
9000ea4e:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000ea52:	4313      	orrs	r3, r2
9000ea54:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000ea56:	3a01      	subs	r2, #1
9000ea58:	0612      	lsls	r2, r2, #24
9000ea5a:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000ea5e:	4313      	orrs	r3, r2
9000ea60:	632b      	str	r3, [r5, #48]	@ 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000ea62:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ea64:	f023 0301 	bic.w	r3, r3, #1
9000ea68:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000ea6a:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
9000ea6c:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
9000ea6e:	4011      	ands	r1, r2
9000ea70:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000ea74:	6369      	str	r1, [r5, #52]	@ 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000ea76:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ea78:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000ea7a:	f023 030c 	bic.w	r3, r3, #12
9000ea7e:	4313      	orrs	r3, r2
9000ea80:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000ea82:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ea84:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000ea86:	f023 0302 	bic.w	r3, r3, #2
9000ea8a:	4313      	orrs	r3, r2
9000ea8c:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000ea8e:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ea90:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000ea94:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ea96:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ea98:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000ea9c:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000ea9e:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000eaa0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
9000eaa4:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000eaa6:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000eaa8:	f043 0301 	orr.w	r3, r3, #1
9000eaac:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_ENABLE();
9000eaae:	682b      	ldr	r3, [r5, #0]
9000eab0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000eab4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000eab6:	f7fb ffaf 	bl	9000aa18 <HAL_GetTick>
9000eaba:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000eabc:	6833      	ldr	r3, [r6, #0]
9000eabe:	019a      	lsls	r2, r3, #6
9000eac0:	f53f ae56 	bmi.w	9000e770 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000eac4:	f7fb ffa8 	bl	9000aa18 <HAL_GetTick>
9000eac8:	1b00      	subs	r0, r0, r4
9000eaca:	2802      	cmp	r0, #2
9000eacc:	d9f6      	bls.n	9000eabc <HAL_RCC_OscConfig+0x49c>
9000eace:	e727      	b.n	9000e920 <HAL_RCC_OscConfig+0x300>
9000ead0:	58024400 	.word	0x58024400
9000ead4:	fffffc0c 	.word	0xfffffc0c
9000ead8:	ffff0007 	.word	0xffff0007
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000eadc:	2b01      	cmp	r3, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000eade:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000eae0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000eae2:	f43f aea4 	beq.w	9000e82e <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000eae6:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000eaea:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000eaec:	428b      	cmp	r3, r1
9000eaee:	f47f ae9e 	bne.w	9000e82e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000eaf2:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000eaf6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000eaf8:	429a      	cmp	r2, r3
9000eafa:	f47f ae98 	bne.w	9000e82e <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000eafe:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000eb00:	f3c0 0208 	ubfx	r2, r0, #0, #9
9000eb04:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000eb06:	429a      	cmp	r2, r3
9000eb08:	f47f ae91 	bne.w	9000e82e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000eb0c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000eb0e:	f3c0 2246 	ubfx	r2, r0, #9, #7
9000eb12:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000eb14:	429a      	cmp	r2, r3
9000eb16:	f47f ae8a 	bne.w	9000e82e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000eb1a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000eb1c:	f3c0 4206 	ubfx	r2, r0, #16, #7
9000eb20:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000eb22:	429a      	cmp	r2, r3
9000eb24:	f47f ae83 	bne.w	9000e82e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000eb28:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000eb2a:	f3c0 6006 	ubfx	r0, r0, #24, #7
9000eb2e:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000eb30:	4298      	cmp	r0, r3
9000eb32:	f47f ae7c 	bne.w	9000e82e <HAL_RCC_OscConfig+0x20e>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000eb36:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000eb38:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000eb3a:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000eb3e:	429a      	cmp	r2, r3
9000eb40:	f43f ae16 	beq.w	9000e770 <HAL_RCC_OscConfig+0x150>
          __HAL_RCC_PLLFRACN_DISABLE();
9000eb44:	4a2d      	ldr	r2, [pc, #180]	@ (9000ebfc <HAL_RCC_OscConfig+0x5dc>)
9000eb46:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000eb48:	f023 0301 	bic.w	r3, r3, #1
9000eb4c:	62d3      	str	r3, [r2, #44]	@ 0x2c
          tickstart = HAL_GetTick();
9000eb4e:	f7fb ff63 	bl	9000aa18 <HAL_GetTick>
9000eb52:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000eb54:	f7fb ff60 	bl	9000aa18 <HAL_GetTick>
9000eb58:	42a8      	cmp	r0, r5
9000eb5a:	d0fb      	beq.n	9000eb54 <HAL_RCC_OscConfig+0x534>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000eb5c:	4a27      	ldr	r2, [pc, #156]	@ (9000ebfc <HAL_RCC_OscConfig+0x5dc>)
9000eb5e:	4b28      	ldr	r3, [pc, #160]	@ (9000ec00 <HAL_RCC_OscConfig+0x5e0>)
9000eb60:	6b50      	ldr	r0, [r2, #52]	@ 0x34
9000eb62:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000eb64:	4003      	ands	r3, r0
9000eb66:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000eb6a:	6353      	str	r3, [r2, #52]	@ 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000eb6c:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000eb6e:	f043 0301 	orr.w	r3, r3, #1
9000eb72:	62d3      	str	r3, [r2, #44]	@ 0x2c
9000eb74:	e5fc      	b.n	9000e770 <HAL_RCC_OscConfig+0x150>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000eb76:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000eb7a:	601a      	str	r2, [r3, #0]
9000eb7c:	681a      	ldr	r2, [r3, #0]
9000eb7e:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000eb82:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000eb84:	e574      	b.n	9000e670 <HAL_RCC_OscConfig+0x50>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000eb86:	4d1d      	ldr	r5, [pc, #116]	@ (9000ebfc <HAL_RCC_OscConfig+0x5dc>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000eb88:	f241 3788 	movw	r7, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000eb8c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000eb8e:	f023 0301 	bic.w	r3, r3, #1
9000eb92:	672b      	str	r3, [r5, #112]	@ 0x70
9000eb94:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000eb96:	f023 0304 	bic.w	r3, r3, #4
9000eb9a:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000eb9c:	f7fb ff3c 	bl	9000aa18 <HAL_GetTick>
9000eba0:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000eba2:	e005      	b.n	9000ebb0 <HAL_RCC_OscConfig+0x590>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000eba4:	f7fb ff38 	bl	9000aa18 <HAL_GetTick>
9000eba8:	1b80      	subs	r0, r0, r6
9000ebaa:	42b8      	cmp	r0, r7
9000ebac:	f63f aeb8 	bhi.w	9000e920 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000ebb0:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000ebb2:	0798      	lsls	r0, r3, #30
9000ebb4:	d4f6      	bmi.n	9000eba4 <HAL_RCC_OscConfig+0x584>
9000ebb6:	e5d7      	b.n	9000e768 <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ebb8:	68eb      	ldr	r3, [r5, #12]
9000ebba:	6a22      	ldr	r2, [r4, #32]
9000ebbc:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000ebc0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000ebc4:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ebc6:	6823      	ldr	r3, [r4, #0]
9000ebc8:	e599      	b.n	9000e6fe <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ebca:	4a0c      	ldr	r2, [pc, #48]	@ (9000ebfc <HAL_RCC_OscConfig+0x5dc>)
9000ebcc:	6f13      	ldr	r3, [r2, #112]	@ 0x70
9000ebce:	f043 0301 	orr.w	r3, r3, #1
9000ebd2:	6713      	str	r3, [r2, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000ebd4:	e67b      	b.n	9000e8ce <HAL_RCC_OscConfig+0x2ae>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ebd6:	4a09      	ldr	r2, [pc, #36]	@ (9000ebfc <HAL_RCC_OscConfig+0x5dc>)
9000ebd8:	6853      	ldr	r3, [r2, #4]
9000ebda:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000ebde:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000ebe2:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ebe4:	6823      	ldr	r3, [r4, #0]
9000ebe6:	e58a      	b.n	9000e6fe <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ebe8:	f042 0204 	orr.w	r2, r2, #4
9000ebec:	671a      	str	r2, [r3, #112]	@ 0x70
9000ebee:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000ebf0:	f042 0201 	orr.w	r2, r2, #1
9000ebf4:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000ebf6:	e66a      	b.n	9000e8ce <HAL_RCC_OscConfig+0x2ae>
    return HAL_ERROR;
9000ebf8:	2001      	movs	r0, #1
}
9000ebfa:	4770      	bx	lr
9000ebfc:	58024400 	.word	0x58024400
9000ec00:	ffff0007 	.word	0xffff0007

9000ec04 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ec04:	4a3f      	ldr	r2, [pc, #252]	@ (9000ed04 <HAL_RCC_GetSysClockFreq+0x100>)
9000ec06:	6913      	ldr	r3, [r2, #16]
9000ec08:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000ec0c:	2b10      	cmp	r3, #16
9000ec0e:	d004      	beq.n	9000ec1a <HAL_RCC_GetSysClockFreq+0x16>
9000ec10:	2b18      	cmp	r3, #24
9000ec12:	d00d      	beq.n	9000ec30 <HAL_RCC_GetSysClockFreq+0x2c>
9000ec14:	b11b      	cbz	r3, 9000ec1e <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000ec16:	483c      	ldr	r0, [pc, #240]	@ (9000ed08 <HAL_RCC_GetSysClockFreq+0x104>)
9000ec18:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ec1a:	483c      	ldr	r0, [pc, #240]	@ (9000ed0c <HAL_RCC_GetSysClockFreq+0x108>)
9000ec1c:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ec1e:	6813      	ldr	r3, [r2, #0]
9000ec20:	0699      	lsls	r1, r3, #26
9000ec22:	d548      	bpl.n	9000ecb6 <HAL_RCC_GetSysClockFreq+0xb2>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ec24:	6813      	ldr	r3, [r2, #0]
9000ec26:	483a      	ldr	r0, [pc, #232]	@ (9000ed10 <HAL_RCC_GetSysClockFreq+0x10c>)
9000ec28:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000ec2c:	40d8      	lsrs	r0, r3
9000ec2e:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ec30:	6a91      	ldr	r1, [r2, #40]	@ 0x28
{
9000ec32:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ec34:	6a94      	ldr	r4, [r2, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ec36:	6ad5      	ldr	r5, [r2, #44]	@ 0x2c
      if (pllm != 0U)
9000ec38:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ec3c:	6b53      	ldr	r3, [r2, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ec3e:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000ec42:	d036      	beq.n	9000ecb2 <HAL_RCC_GetSysClockFreq+0xae>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ec44:	f3c3 03cc 	ubfx	r3, r3, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ec48:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ec4c:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ec50:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ec54:	fb05 f303 	mul.w	r3, r5, r3
9000ec58:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ec5a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ec5e:	ee06 3a90 	vmov	s13, r3
9000ec62:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000ec66:	d002      	beq.n	9000ec6e <HAL_RCC_GetSysClockFreq+0x6a>
9000ec68:	2902      	cmp	r1, #2
9000ec6a:	d026      	beq.n	9000ecba <HAL_RCC_GetSysClockFreq+0xb6>
9000ec6c:	b341      	cbz	r1, 9000ecc0 <HAL_RCC_GetSysClockFreq+0xbc>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ec6e:	ed9f 7a29 	vldr	s14, [pc, #164]	@ 9000ed14 <HAL_RCC_GetSysClockFreq+0x110>
9000ec72:	ee87 6a27 	vdiv.f32	s12, s14, s15
9000ec76:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000ec78:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000ec7c:	ee07 3a10 	vmov	s14, r3
9000ec80:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000ec84:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000ec88:	ee37 7a26 	vadd.f32	s14, s14, s13
9000ec8c:	ee37 7a25 	vadd.f32	s14, s14, s11
9000ec90:	ee27 7a06 	vmul.f32	s14, s14, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000ec94:	4b1b      	ldr	r3, [pc, #108]	@ (9000ed04 <HAL_RCC_GetSysClockFreq+0x100>)
9000ec96:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000ec98:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000ec9c:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000ec9e:	ee07 3a90 	vmov	s15, r3
9000eca2:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9000eca6:	eec7 7a26 	vdiv.f32	s15, s14, s13
9000ecaa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000ecae:	ee17 0a90 	vmov	r0, s15
}
9000ecb2:	bc30      	pop	{r4, r5}
9000ecb4:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000ecb6:	4816      	ldr	r0, [pc, #88]	@ (9000ed10 <HAL_RCC_GetSysClockFreq+0x10c>)
}
9000ecb8:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ecba:	ed9f 7a17 	vldr	s14, [pc, #92]	@ 9000ed18 <HAL_RCC_GetSysClockFreq+0x114>
9000ecbe:	e7d8      	b.n	9000ec72 <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ecc0:	6813      	ldr	r3, [r2, #0]
9000ecc2:	069b      	lsls	r3, r3, #26
9000ecc4:	d51a      	bpl.n	9000ecfc <HAL_RCC_GetSysClockFreq+0xf8>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ecc6:	6810      	ldr	r0, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ecc8:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000eccc:	6b13      	ldr	r3, [r2, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ecce:	4910      	ldr	r1, [pc, #64]	@ (9000ed10 <HAL_RCC_GetSysClockFreq+0x10c>)
9000ecd0:	f3c0 02c1 	ubfx	r2, r0, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ecd4:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ecd8:	40d1      	lsrs	r1, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ecda:	ee07 3a10 	vmov	s14, r3
9000ecde:	ee06 1a10 	vmov	s12, r1
9000ece2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000ece6:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000ecea:	ee77 6a26 	vadd.f32	s13, s14, s13
9000ecee:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000ecf2:	ee76 7aa5 	vadd.f32	s15, s13, s11
9000ecf6:	ee27 7a27 	vmul.f32	s14, s14, s15
9000ecfa:	e7cb      	b.n	9000ec94 <HAL_RCC_GetSysClockFreq+0x90>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ecfc:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000ed1c <HAL_RCC_GetSysClockFreq+0x118>
9000ed00:	e7b7      	b.n	9000ec72 <HAL_RCC_GetSysClockFreq+0x6e>
9000ed02:	bf00      	nop
9000ed04:	58024400 	.word	0x58024400
9000ed08:	003d0900 	.word	0x003d0900
9000ed0c:	017d7840 	.word	0x017d7840
9000ed10:	03d09000 	.word	0x03d09000
9000ed14:	4a742400 	.word	0x4a742400
9000ed18:	4bbebc20 	.word	0x4bbebc20
9000ed1c:	4c742400 	.word	0x4c742400

9000ed20 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000ed20:	2800      	cmp	r0, #0
9000ed22:	f000 810e 	beq.w	9000ef42 <HAL_RCC_ClockConfig+0x222>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000ed26:	4a8d      	ldr	r2, [pc, #564]	@ (9000ef5c <HAL_RCC_ClockConfig+0x23c>)
9000ed28:	6813      	ldr	r3, [r2, #0]
9000ed2a:	f003 030f 	and.w	r3, r3, #15
9000ed2e:	428b      	cmp	r3, r1
{
9000ed30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ed34:	4604      	mov	r4, r0
9000ed36:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000ed38:	d20c      	bcs.n	9000ed54 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000ed3a:	6813      	ldr	r3, [r2, #0]
9000ed3c:	f023 030f 	bic.w	r3, r3, #15
9000ed40:	430b      	orrs	r3, r1
9000ed42:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000ed44:	6813      	ldr	r3, [r2, #0]
9000ed46:	f003 030f 	and.w	r3, r3, #15
9000ed4a:	428b      	cmp	r3, r1
9000ed4c:	d002      	beq.n	9000ed54 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000ed4e:	2001      	movs	r0, #1
}
9000ed50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000ed54:	6823      	ldr	r3, [r4, #0]
9000ed56:	0758      	lsls	r0, r3, #29
9000ed58:	d50b      	bpl.n	9000ed72 <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000ed5a:	4981      	ldr	r1, [pc, #516]	@ (9000ef60 <HAL_RCC_ClockConfig+0x240>)
9000ed5c:	6920      	ldr	r0, [r4, #16]
9000ed5e:	698a      	ldr	r2, [r1, #24]
9000ed60:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ed64:	4290      	cmp	r0, r2
9000ed66:	d904      	bls.n	9000ed72 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000ed68:	698a      	ldr	r2, [r1, #24]
9000ed6a:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ed6e:	4302      	orrs	r2, r0
9000ed70:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000ed72:	0719      	lsls	r1, r3, #28
9000ed74:	d50b      	bpl.n	9000ed8e <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000ed76:	497a      	ldr	r1, [pc, #488]	@ (9000ef60 <HAL_RCC_ClockConfig+0x240>)
9000ed78:	6960      	ldr	r0, [r4, #20]
9000ed7a:	69ca      	ldr	r2, [r1, #28]
9000ed7c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ed80:	4290      	cmp	r0, r2
9000ed82:	d904      	bls.n	9000ed8e <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000ed84:	69ca      	ldr	r2, [r1, #28]
9000ed86:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ed8a:	4302      	orrs	r2, r0
9000ed8c:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000ed8e:	06da      	lsls	r2, r3, #27
9000ed90:	d50b      	bpl.n	9000edaa <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000ed92:	4973      	ldr	r1, [pc, #460]	@ (9000ef60 <HAL_RCC_ClockConfig+0x240>)
9000ed94:	69a0      	ldr	r0, [r4, #24]
9000ed96:	69ca      	ldr	r2, [r1, #28]
9000ed98:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000ed9c:	4290      	cmp	r0, r2
9000ed9e:	d904      	bls.n	9000edaa <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000eda0:	69ca      	ldr	r2, [r1, #28]
9000eda2:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000eda6:	4302      	orrs	r2, r0
9000eda8:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000edaa:	069f      	lsls	r7, r3, #26
9000edac:	d50b      	bpl.n	9000edc6 <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000edae:	496c      	ldr	r1, [pc, #432]	@ (9000ef60 <HAL_RCC_ClockConfig+0x240>)
9000edb0:	69e0      	ldr	r0, [r4, #28]
9000edb2:	6a0a      	ldr	r2, [r1, #32]
9000edb4:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000edb8:	4290      	cmp	r0, r2
9000edba:	d904      	bls.n	9000edc6 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000edbc:	6a0a      	ldr	r2, [r1, #32]
9000edbe:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000edc2:	4302      	orrs	r2, r0
9000edc4:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000edc6:	079e      	lsls	r6, r3, #30
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000edc8:	f003 0201 	and.w	r2, r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000edcc:	f140 80ab 	bpl.w	9000ef26 <HAL_RCC_ClockConfig+0x206>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000edd0:	4e63      	ldr	r6, [pc, #396]	@ (9000ef60 <HAL_RCC_ClockConfig+0x240>)
9000edd2:	68e0      	ldr	r0, [r4, #12]
9000edd4:	69b1      	ldr	r1, [r6, #24]
9000edd6:	f001 010f 	and.w	r1, r1, #15
9000edda:	4288      	cmp	r0, r1
9000eddc:	d904      	bls.n	9000ede8 <HAL_RCC_ClockConfig+0xc8>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000edde:	69b1      	ldr	r1, [r6, #24]
9000ede0:	f021 010f 	bic.w	r1, r1, #15
9000ede4:	4301      	orrs	r1, r0
9000ede6:	61b1      	str	r1, [r6, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000ede8:	2a00      	cmp	r2, #0
9000edea:	d030      	beq.n	9000ee4e <HAL_RCC_ClockConfig+0x12e>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000edec:	4a5c      	ldr	r2, [pc, #368]	@ (9000ef60 <HAL_RCC_ClockConfig+0x240>)
9000edee:	68a1      	ldr	r1, [r4, #8]
9000edf0:	6993      	ldr	r3, [r2, #24]
9000edf2:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
9000edf6:	430b      	orrs	r3, r1
9000edf8:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000edfa:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000edfc:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000edfe:	2902      	cmp	r1, #2
9000ee00:	f000 80a1 	beq.w	9000ef46 <HAL_RCC_ClockConfig+0x226>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000ee04:	2903      	cmp	r1, #3
9000ee06:	f000 8098 	beq.w	9000ef3a <HAL_RCC_ClockConfig+0x21a>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000ee0a:	2901      	cmp	r1, #1
9000ee0c:	f000 80a1 	beq.w	9000ef52 <HAL_RCC_ClockConfig+0x232>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ee10:	075f      	lsls	r7, r3, #29
9000ee12:	d59c      	bpl.n	9000ed4e <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000ee14:	4e52      	ldr	r6, [pc, #328]	@ (9000ef60 <HAL_RCC_ClockConfig+0x240>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000ee16:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000ee1a:	6933      	ldr	r3, [r6, #16]
9000ee1c:	f023 0307 	bic.w	r3, r3, #7
9000ee20:	430b      	orrs	r3, r1
9000ee22:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000ee24:	f7fb fdf8 	bl	9000aa18 <HAL_GetTick>
9000ee28:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000ee2a:	e005      	b.n	9000ee38 <HAL_RCC_ClockConfig+0x118>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000ee2c:	f7fb fdf4 	bl	9000aa18 <HAL_GetTick>
9000ee30:	1bc0      	subs	r0, r0, r7
9000ee32:	4540      	cmp	r0, r8
9000ee34:	f200 808b 	bhi.w	9000ef4e <HAL_RCC_ClockConfig+0x22e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000ee38:	6933      	ldr	r3, [r6, #16]
9000ee3a:	6862      	ldr	r2, [r4, #4]
9000ee3c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000ee40:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000ee44:	d1f2      	bne.n	9000ee2c <HAL_RCC_ClockConfig+0x10c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000ee46:	6823      	ldr	r3, [r4, #0]
9000ee48:	079e      	lsls	r6, r3, #30
9000ee4a:	d506      	bpl.n	9000ee5a <HAL_RCC_ClockConfig+0x13a>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000ee4c:	68e0      	ldr	r0, [r4, #12]
9000ee4e:	4944      	ldr	r1, [pc, #272]	@ (9000ef60 <HAL_RCC_ClockConfig+0x240>)
9000ee50:	698a      	ldr	r2, [r1, #24]
9000ee52:	f002 020f 	and.w	r2, r2, #15
9000ee56:	4282      	cmp	r2, r0
9000ee58:	d869      	bhi.n	9000ef2e <HAL_RCC_ClockConfig+0x20e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000ee5a:	4940      	ldr	r1, [pc, #256]	@ (9000ef5c <HAL_RCC_ClockConfig+0x23c>)
9000ee5c:	680a      	ldr	r2, [r1, #0]
9000ee5e:	f002 020f 	and.w	r2, r2, #15
9000ee62:	42aa      	cmp	r2, r5
9000ee64:	d90a      	bls.n	9000ee7c <HAL_RCC_ClockConfig+0x15c>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000ee66:	680a      	ldr	r2, [r1, #0]
9000ee68:	f022 020f 	bic.w	r2, r2, #15
9000ee6c:	432a      	orrs	r2, r5
9000ee6e:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000ee70:	680a      	ldr	r2, [r1, #0]
9000ee72:	f002 020f 	and.w	r2, r2, #15
9000ee76:	42aa      	cmp	r2, r5
9000ee78:	f47f af69 	bne.w	9000ed4e <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000ee7c:	0758      	lsls	r0, r3, #29
9000ee7e:	d50b      	bpl.n	9000ee98 <HAL_RCC_ClockConfig+0x178>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000ee80:	4937      	ldr	r1, [pc, #220]	@ (9000ef60 <HAL_RCC_ClockConfig+0x240>)
9000ee82:	6920      	ldr	r0, [r4, #16]
9000ee84:	698a      	ldr	r2, [r1, #24]
9000ee86:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ee8a:	4290      	cmp	r0, r2
9000ee8c:	d204      	bcs.n	9000ee98 <HAL_RCC_ClockConfig+0x178>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000ee8e:	698a      	ldr	r2, [r1, #24]
9000ee90:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ee94:	4302      	orrs	r2, r0
9000ee96:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000ee98:	0719      	lsls	r1, r3, #28
9000ee9a:	d50b      	bpl.n	9000eeb4 <HAL_RCC_ClockConfig+0x194>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000ee9c:	4930      	ldr	r1, [pc, #192]	@ (9000ef60 <HAL_RCC_ClockConfig+0x240>)
9000ee9e:	6960      	ldr	r0, [r4, #20]
9000eea0:	69ca      	ldr	r2, [r1, #28]
9000eea2:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000eea6:	4290      	cmp	r0, r2
9000eea8:	d204      	bcs.n	9000eeb4 <HAL_RCC_ClockConfig+0x194>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000eeaa:	69ca      	ldr	r2, [r1, #28]
9000eeac:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000eeb0:	4302      	orrs	r2, r0
9000eeb2:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000eeb4:	06da      	lsls	r2, r3, #27
9000eeb6:	d50b      	bpl.n	9000eed0 <HAL_RCC_ClockConfig+0x1b0>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000eeb8:	4929      	ldr	r1, [pc, #164]	@ (9000ef60 <HAL_RCC_ClockConfig+0x240>)
9000eeba:	69a0      	ldr	r0, [r4, #24]
9000eebc:	69ca      	ldr	r2, [r1, #28]
9000eebe:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000eec2:	4290      	cmp	r0, r2
9000eec4:	d204      	bcs.n	9000eed0 <HAL_RCC_ClockConfig+0x1b0>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000eec6:	69ca      	ldr	r2, [r1, #28]
9000eec8:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000eecc:	4302      	orrs	r2, r0
9000eece:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000eed0:	069b      	lsls	r3, r3, #26
9000eed2:	d50b      	bpl.n	9000eeec <HAL_RCC_ClockConfig+0x1cc>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000eed4:	4a22      	ldr	r2, [pc, #136]	@ (9000ef60 <HAL_RCC_ClockConfig+0x240>)
9000eed6:	69e1      	ldr	r1, [r4, #28]
9000eed8:	6a13      	ldr	r3, [r2, #32]
9000eeda:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000eede:	4299      	cmp	r1, r3
9000eee0:	d204      	bcs.n	9000eeec <HAL_RCC_ClockConfig+0x1cc>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000eee2:	6a13      	ldr	r3, [r2, #32]
9000eee4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
9000eee8:	430b      	orrs	r3, r1
9000eeea:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000eeec:	f7ff fe8a 	bl	9000ec04 <HAL_RCC_GetSysClockFreq>
9000eef0:	4a1b      	ldr	r2, [pc, #108]	@ (9000ef60 <HAL_RCC_ClockConfig+0x240>)
9000eef2:	4603      	mov	r3, r0
9000eef4:	481b      	ldr	r0, [pc, #108]	@ (9000ef64 <HAL_RCC_ClockConfig+0x244>)
9000eef6:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000eef8:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000eefa:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000eefe:	4d1a      	ldr	r5, [pc, #104]	@ (9000ef68 <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ef00:	f002 020f 	and.w	r2, r2, #15
9000ef04:	4c19      	ldr	r4, [pc, #100]	@ (9000ef6c <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000ef06:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ef08:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000ef0a:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000ef0e:	4818      	ldr	r0, [pc, #96]	@ (9000ef70 <HAL_RCC_ClockConfig+0x250>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ef10:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000ef14:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000ef16:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000ef18:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ef1a:	40d3      	lsrs	r3, r2
9000ef1c:	6023      	str	r3, [r4, #0]
}
9000ef1e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000ef22:	f7f2 bc65 	b.w	900017f0 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000ef26:	2a00      	cmp	r2, #0
9000ef28:	f47f af60 	bne.w	9000edec <HAL_RCC_ClockConfig+0xcc>
9000ef2c:	e795      	b.n	9000ee5a <HAL_RCC_ClockConfig+0x13a>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000ef2e:	698a      	ldr	r2, [r1, #24]
9000ef30:	f022 020f 	bic.w	r2, r2, #15
9000ef34:	4302      	orrs	r2, r0
9000ef36:	618a      	str	r2, [r1, #24]
9000ef38:	e78f      	b.n	9000ee5a <HAL_RCC_ClockConfig+0x13a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000ef3a:	019a      	lsls	r2, r3, #6
9000ef3c:	f53f af6a 	bmi.w	9000ee14 <HAL_RCC_ClockConfig+0xf4>
9000ef40:	e705      	b.n	9000ed4e <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000ef42:	2001      	movs	r0, #1
}
9000ef44:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000ef46:	0398      	lsls	r0, r3, #14
9000ef48:	f53f af64 	bmi.w	9000ee14 <HAL_RCC_ClockConfig+0xf4>
9000ef4c:	e6ff      	b.n	9000ed4e <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000ef4e:	2003      	movs	r0, #3
9000ef50:	e6fe      	b.n	9000ed50 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000ef52:	05db      	lsls	r3, r3, #23
9000ef54:	f53f af5e 	bmi.w	9000ee14 <HAL_RCC_ClockConfig+0xf4>
9000ef58:	e6f9      	b.n	9000ed4e <HAL_RCC_ClockConfig+0x2e>
9000ef5a:	bf00      	nop
9000ef5c:	52002000 	.word	0x52002000
9000ef60:	58024400 	.word	0x58024400
9000ef64:	9002f634 	.word	0x9002f634
9000ef68:	24000058 	.word	0x24000058
9000ef6c:	24000054 	.word	0x24000054
9000ef70:	24000060 	.word	0x24000060

9000ef74 <HAL_RCC_GetHCLKFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ef74:	4a18      	ldr	r2, [pc, #96]	@ (9000efd8 <HAL_RCC_GetHCLKFreq+0x64>)
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
9000ef76:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ef78:	6913      	ldr	r3, [r2, #16]
9000ef7a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000ef7e:	2b10      	cmp	r3, #16
9000ef80:	d019      	beq.n	9000efb6 <HAL_RCC_GetHCLKFreq+0x42>
9000ef82:	2b18      	cmp	r3, #24
9000ef84:	d022      	beq.n	9000efcc <HAL_RCC_GetHCLKFreq+0x58>
9000ef86:	b1c3      	cbz	r3, 9000efba <HAL_RCC_GetHCLKFreq+0x46>
      sysclockfreq = CSI_VALUE;
9000ef88:	4b14      	ldr	r3, [pc, #80]	@ (9000efdc <HAL_RCC_GetHCLKFreq+0x68>)
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000ef8a:	4913      	ldr	r1, [pc, #76]	@ (9000efd8 <HAL_RCC_GetHCLKFreq+0x64>)
9000ef8c:	4814      	ldr	r0, [pc, #80]	@ (9000efe0 <HAL_RCC_GetHCLKFreq+0x6c>)
9000ef8e:	698a      	ldr	r2, [r1, #24]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ef90:	6989      	ldr	r1, [r1, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000ef92:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ef96:	4c13      	ldr	r4, [pc, #76]	@ (9000efe4 <HAL_RCC_GetHCLKFreq+0x70>)
9000ef98:	f001 010f 	and.w	r1, r1, #15
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000ef9c:	4d12      	ldr	r5, [pc, #72]	@ (9000efe8 <HAL_RCC_GetHCLKFreq+0x74>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000ef9e:	5c82      	ldrb	r2, [r0, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000efa0:	5c40      	ldrb	r0, [r0, r1]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000efa2:	f002 021f 	and.w	r2, r2, #31
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000efa6:	f000 001f 	and.w	r0, r0, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000efaa:	40d3      	lsrs	r3, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000efac:	fa23 f000 	lsr.w	r0, r3, r0
  SystemCoreClock = common_system_clock;
9000efb0:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000efb2:	6020      	str	r0, [r4, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
9000efb4:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000efb6:	4b0d      	ldr	r3, [pc, #52]	@ (9000efec <HAL_RCC_GetHCLKFreq+0x78>)
9000efb8:	e7e7      	b.n	9000ef8a <HAL_RCC_GetHCLKFreq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000efba:	6813      	ldr	r3, [r2, #0]
9000efbc:	069b      	lsls	r3, r3, #26
9000efbe:	d509      	bpl.n	9000efd4 <HAL_RCC_GetHCLKFreq+0x60>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000efc0:	6812      	ldr	r2, [r2, #0]
9000efc2:	4b0b      	ldr	r3, [pc, #44]	@ (9000eff0 <HAL_RCC_GetHCLKFreq+0x7c>)
9000efc4:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000efc8:	40d3      	lsrs	r3, r2
9000efca:	e7de      	b.n	9000ef8a <HAL_RCC_GetHCLKFreq+0x16>
9000efcc:	f7ff fab6 	bl	9000e53c <HAL_RCC_GetSysClockFreq.part.0>
9000efd0:	4603      	mov	r3, r0
9000efd2:	e7da      	b.n	9000ef8a <HAL_RCC_GetHCLKFreq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000efd4:	4b06      	ldr	r3, [pc, #24]	@ (9000eff0 <HAL_RCC_GetHCLKFreq+0x7c>)
9000efd6:	e7d8      	b.n	9000ef8a <HAL_RCC_GetHCLKFreq+0x16>
9000efd8:	58024400 	.word	0x58024400
9000efdc:	003d0900 	.word	0x003d0900
9000efe0:	9002f634 	.word	0x9002f634
9000efe4:	24000054 	.word	0x24000054
9000efe8:	24000058 	.word	0x24000058
9000efec:	017d7840 	.word	0x017d7840
9000eff0:	03d09000 	.word	0x03d09000

9000eff4 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000eff4:	4a1c      	ldr	r2, [pc, #112]	@ (9000f068 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000eff6:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000eff8:	6913      	ldr	r3, [r2, #16]
9000effa:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000effe:	2b10      	cmp	r3, #16
9000f000:	d020      	beq.n	9000f044 <HAL_RCC_GetPCLK1Freq+0x50>
9000f002:	2b18      	cmp	r3, #24
9000f004:	d029      	beq.n	9000f05a <HAL_RCC_GetPCLK1Freq+0x66>
9000f006:	b1fb      	cbz	r3, 9000f048 <HAL_RCC_GetPCLK1Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000f008:	4b18      	ldr	r3, [pc, #96]	@ (9000f06c <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000f00a:	4a17      	ldr	r2, [pc, #92]	@ (9000f068 <HAL_RCC_GetPCLK1Freq+0x74>)
9000f00c:	4918      	ldr	r1, [pc, #96]	@ (9000f070 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000f00e:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000f010:	4d18      	ldr	r5, [pc, #96]	@ (9000f074 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000f012:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000f016:	4c18      	ldr	r4, [pc, #96]	@ (9000f078 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000f018:	5c08      	ldrb	r0, [r1, r0]
9000f01a:	f000 001f 	and.w	r0, r0, #31
9000f01e:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000f020:	6990      	ldr	r0, [r2, #24]
9000f022:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000f026:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000f028:	5c08      	ldrb	r0, [r1, r0]
9000f02a:	f000 001f 	and.w	r0, r0, #31
9000f02e:	40c3      	lsrs	r3, r0
9000f030:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000f032:	69d2      	ldr	r2, [r2, #28]
9000f034:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000f038:	5c88      	ldrb	r0, [r1, r2]
9000f03a:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000f03e:	fa23 f000 	lsr.w	r0, r3, r0
9000f042:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000f044:	4b0d      	ldr	r3, [pc, #52]	@ (9000f07c <HAL_RCC_GetPCLK1Freq+0x88>)
9000f046:	e7e0      	b.n	9000f00a <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000f048:	6813      	ldr	r3, [r2, #0]
9000f04a:	069b      	lsls	r3, r3, #26
9000f04c:	d509      	bpl.n	9000f062 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000f04e:	6812      	ldr	r2, [r2, #0]
9000f050:	4b0b      	ldr	r3, [pc, #44]	@ (9000f080 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000f052:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000f056:	40d3      	lsrs	r3, r2
9000f058:	e7d7      	b.n	9000f00a <HAL_RCC_GetPCLK1Freq+0x16>
9000f05a:	f7ff fa6f 	bl	9000e53c <HAL_RCC_GetSysClockFreq.part.0>
9000f05e:	4603      	mov	r3, r0
9000f060:	e7d3      	b.n	9000f00a <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000f062:	4b07      	ldr	r3, [pc, #28]	@ (9000f080 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000f064:	e7d1      	b.n	9000f00a <HAL_RCC_GetPCLK1Freq+0x16>
9000f066:	bf00      	nop
9000f068:	58024400 	.word	0x58024400
9000f06c:	003d0900 	.word	0x003d0900
9000f070:	9002f634 	.word	0x9002f634
9000f074:	24000058 	.word	0x24000058
9000f078:	24000054 	.word	0x24000054
9000f07c:	017d7840 	.word	0x017d7840
9000f080:	03d09000 	.word	0x03d09000

9000f084 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000f084:	4a1c      	ldr	r2, [pc, #112]	@ (9000f0f8 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000f086:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000f088:	6913      	ldr	r3, [r2, #16]
9000f08a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000f08e:	2b10      	cmp	r3, #16
9000f090:	d020      	beq.n	9000f0d4 <HAL_RCC_GetPCLK2Freq+0x50>
9000f092:	2b18      	cmp	r3, #24
9000f094:	d029      	beq.n	9000f0ea <HAL_RCC_GetPCLK2Freq+0x66>
9000f096:	b1fb      	cbz	r3, 9000f0d8 <HAL_RCC_GetPCLK2Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000f098:	4b18      	ldr	r3, [pc, #96]	@ (9000f0fc <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000f09a:	4a17      	ldr	r2, [pc, #92]	@ (9000f0f8 <HAL_RCC_GetPCLK2Freq+0x74>)
9000f09c:	4918      	ldr	r1, [pc, #96]	@ (9000f100 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000f09e:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000f0a0:	4d18      	ldr	r5, [pc, #96]	@ (9000f104 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000f0a2:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000f0a6:	4c18      	ldr	r4, [pc, #96]	@ (9000f108 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000f0a8:	5c08      	ldrb	r0, [r1, r0]
9000f0aa:	f000 001f 	and.w	r0, r0, #31
9000f0ae:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000f0b0:	6990      	ldr	r0, [r2, #24]
9000f0b2:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000f0b6:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000f0b8:	5c08      	ldrb	r0, [r1, r0]
9000f0ba:	f000 001f 	and.w	r0, r0, #31
9000f0be:	40c3      	lsrs	r3, r0
9000f0c0:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000f0c2:	69d2      	ldr	r2, [r2, #28]
9000f0c4:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000f0c8:	5c88      	ldrb	r0, [r1, r2]
9000f0ca:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000f0ce:	fa23 f000 	lsr.w	r0, r3, r0
9000f0d2:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000f0d4:	4b0d      	ldr	r3, [pc, #52]	@ (9000f10c <HAL_RCC_GetPCLK2Freq+0x88>)
9000f0d6:	e7e0      	b.n	9000f09a <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000f0d8:	6813      	ldr	r3, [r2, #0]
9000f0da:	069b      	lsls	r3, r3, #26
9000f0dc:	d509      	bpl.n	9000f0f2 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000f0de:	6812      	ldr	r2, [r2, #0]
9000f0e0:	4b0b      	ldr	r3, [pc, #44]	@ (9000f110 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000f0e2:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000f0e6:	40d3      	lsrs	r3, r2
9000f0e8:	e7d7      	b.n	9000f09a <HAL_RCC_GetPCLK2Freq+0x16>
9000f0ea:	f7ff fa27 	bl	9000e53c <HAL_RCC_GetSysClockFreq.part.0>
9000f0ee:	4603      	mov	r3, r0
9000f0f0:	e7d3      	b.n	9000f09a <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000f0f2:	4b07      	ldr	r3, [pc, #28]	@ (9000f110 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000f0f4:	e7d1      	b.n	9000f09a <HAL_RCC_GetPCLK2Freq+0x16>
9000f0f6:	bf00      	nop
9000f0f8:	58024400 	.word	0x58024400
9000f0fc:	003d0900 	.word	0x003d0900
9000f100:	9002f634 	.word	0x9002f634
9000f104:	24000058 	.word	0x24000058
9000f108:	24000054 	.word	0x24000054
9000f10c:	017d7840 	.word	0x017d7840
9000f110:	03d09000 	.word	0x03d09000

9000f114 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000f114:	4b13      	ldr	r3, [pc, #76]	@ (9000f164 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000f116:	223f      	movs	r2, #63	@ 0x3f
9000f118:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000f11a:	691a      	ldr	r2, [r3, #16]
9000f11c:	f002 0207 	and.w	r2, r2, #7
9000f120:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000f122:	699a      	ldr	r2, [r3, #24]
9000f124:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
9000f128:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000f12a:	699a      	ldr	r2, [r3, #24]
9000f12c:	f002 020f 	and.w	r2, r2, #15
9000f130:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000f132:	699a      	ldr	r2, [r3, #24]
9000f134:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000f138:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000f13a:	69da      	ldr	r2, [r3, #28]
9000f13c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000f140:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000f142:	69da      	ldr	r2, [r3, #28]
9000f144:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000f148:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000f14a:	6a1b      	ldr	r3, [r3, #32]
{
9000f14c:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000f14e:	f003 0370 	and.w	r3, r3, #112	@ 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000f152:	4c05      	ldr	r4, [pc, #20]	@ (9000f168 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000f154:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000f156:	6823      	ldr	r3, [r4, #0]
}
9000f158:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000f15c:	f003 030f 	and.w	r3, r3, #15
9000f160:	600b      	str	r3, [r1, #0]
}
9000f162:	4770      	bx	lr
9000f164:	58024400 	.word	0x58024400
9000f168:	52002000 	.word	0x52002000

9000f16c <RCCEx_PLL2_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000f16c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000f16e:	4c36      	ldr	r4, [pc, #216]	@ (9000f248 <RCCEx_PLL2_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000f170:	4606      	mov	r6, r0
9000f172:	460f      	mov	r7, r1
    __HAL_RCC_PLL2_DISABLE();
9000f174:	6823      	ldr	r3, [r4, #0]
9000f176:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
9000f17a:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000f17c:	f7fb fc4c 	bl	9000aa18 <HAL_GetTick>
9000f180:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000f182:	e004      	b.n	9000f18e <RCCEx_PLL2_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000f184:	f7fb fc48 	bl	9000aa18 <HAL_GetTick>
9000f188:	1b40      	subs	r0, r0, r5
9000f18a:	2802      	cmp	r0, #2
9000f18c:	d856      	bhi.n	9000f23c <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000f18e:	6823      	ldr	r3, [r4, #0]
9000f190:	011a      	lsls	r2, r3, #4
9000f192:	d4f7      	bmi.n	9000f184 <RCCEx_PLL2_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000f194:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000f196:	6832      	ldr	r2, [r6, #0]
9000f198:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000f19c:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000f1a0:	62a3      	str	r3, [r4, #40]	@ 0x28
9000f1a2:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000f1a6:	3b01      	subs	r3, #1
9000f1a8:	3a01      	subs	r2, #1
9000f1aa:	025b      	lsls	r3, r3, #9
9000f1ac:	0412      	lsls	r2, r2, #16
9000f1ae:	b29b      	uxth	r3, r3
9000f1b0:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000f1b4:	4313      	orrs	r3, r2
9000f1b6:	6872      	ldr	r2, [r6, #4]
9000f1b8:	3a01      	subs	r2, #1
9000f1ba:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000f1be:	4313      	orrs	r3, r2
9000f1c0:	6932      	ldr	r2, [r6, #16]
9000f1c2:	3a01      	subs	r2, #1
9000f1c4:	0612      	lsls	r2, r2, #24
9000f1c6:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000f1ca:	4313      	orrs	r3, r2
9000f1cc:	63a3      	str	r3, [r4, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000f1ce:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000f1d0:	6972      	ldr	r2, [r6, #20]
9000f1d2:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000f1d6:	4313      	orrs	r3, r2
9000f1d8:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000f1da:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000f1dc:	69b3      	ldr	r3, [r6, #24]
9000f1de:	f022 0220 	bic.w	r2, r2, #32
9000f1e2:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000f1e4:	4b19      	ldr	r3, [pc, #100]	@ (9000f24c <RCCEx_PLL2_Config.part.0+0xe0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000f1e6:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000f1e8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000f1ea:	f022 0210 	bic.w	r2, r2, #16
9000f1ee:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000f1f0:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
9000f1f2:	69f2      	ldr	r2, [r6, #28]
9000f1f4:	400b      	ands	r3, r1
9000f1f6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000f1fa:	63e3      	str	r3, [r4, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000f1fc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000f1fe:	f043 0310 	orr.w	r3, r3, #16
9000f202:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000f204:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000f206:	b1df      	cbz	r7, 9000f240 <RCCEx_PLL2_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000f208:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000f20a:	bf0c      	ite	eq
9000f20c:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000f210:	f443 1300 	orrne.w	r3, r3, #2097152	@ 0x200000
9000f214:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000f216:	4c0c      	ldr	r4, [pc, #48]	@ (9000f248 <RCCEx_PLL2_Config.part.0+0xdc>)
9000f218:	6823      	ldr	r3, [r4, #0]
9000f21a:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
9000f21e:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000f220:	f7fb fbfa 	bl	9000aa18 <HAL_GetTick>
9000f224:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000f226:	e004      	b.n	9000f232 <RCCEx_PLL2_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000f228:	f7fb fbf6 	bl	9000aa18 <HAL_GetTick>
9000f22c:	1b40      	subs	r0, r0, r5
9000f22e:	2802      	cmp	r0, #2
9000f230:	d804      	bhi.n	9000f23c <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000f232:	6823      	ldr	r3, [r4, #0]
9000f234:	011b      	lsls	r3, r3, #4
9000f236:	d5f7      	bpl.n	9000f228 <RCCEx_PLL2_Config.part.0+0xbc>
    }

  }


  return status;
9000f238:	2000      	movs	r0, #0
}
9000f23a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000f23c:	2003      	movs	r0, #3
}
9000f23e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000f240:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
9000f244:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000f246:	e7e6      	b.n	9000f216 <RCCEx_PLL2_Config.part.0+0xaa>
9000f248:	58024400 	.word	0x58024400
9000f24c:	ffff0007 	.word	0xffff0007

9000f250 <RCCEx_PLL3_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000f250:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000f252:	4c36      	ldr	r4, [pc, #216]	@ (9000f32c <RCCEx_PLL3_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000f254:	4606      	mov	r6, r0
9000f256:	460f      	mov	r7, r1
    __HAL_RCC_PLL3_DISABLE();
9000f258:	6823      	ldr	r3, [r4, #0]
9000f25a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
9000f25e:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000f260:	f7fb fbda 	bl	9000aa18 <HAL_GetTick>
9000f264:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000f266:	e004      	b.n	9000f272 <RCCEx_PLL3_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000f268:	f7fb fbd6 	bl	9000aa18 <HAL_GetTick>
9000f26c:	1b40      	subs	r0, r0, r5
9000f26e:	2802      	cmp	r0, #2
9000f270:	d856      	bhi.n	9000f320 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000f272:	6823      	ldr	r3, [r4, #0]
9000f274:	009a      	lsls	r2, r3, #2
9000f276:	d4f7      	bmi.n	9000f268 <RCCEx_PLL3_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000f278:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000f27a:	6832      	ldr	r2, [r6, #0]
9000f27c:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
9000f280:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000f284:	62a3      	str	r3, [r4, #40]	@ 0x28
9000f286:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000f28a:	3b01      	subs	r3, #1
9000f28c:	3a01      	subs	r2, #1
9000f28e:	025b      	lsls	r3, r3, #9
9000f290:	0412      	lsls	r2, r2, #16
9000f292:	b29b      	uxth	r3, r3
9000f294:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000f298:	4313      	orrs	r3, r2
9000f29a:	6872      	ldr	r2, [r6, #4]
9000f29c:	3a01      	subs	r2, #1
9000f29e:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000f2a2:	4313      	orrs	r3, r2
9000f2a4:	6932      	ldr	r2, [r6, #16]
9000f2a6:	3a01      	subs	r2, #1
9000f2a8:	0612      	lsls	r2, r2, #24
9000f2aa:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000f2ae:	4313      	orrs	r3, r2
9000f2b0:	6423      	str	r3, [r4, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000f2b2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000f2b4:	6972      	ldr	r2, [r6, #20]
9000f2b6:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
9000f2ba:	4313      	orrs	r3, r2
9000f2bc:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000f2be:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000f2c0:	69b3      	ldr	r3, [r6, #24]
9000f2c2:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
9000f2c6:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000f2c8:	4b19      	ldr	r3, [pc, #100]	@ (9000f330 <RCCEx_PLL3_Config.part.0+0xe0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000f2ca:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000f2cc:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000f2ce:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000f2d2:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000f2d4:	6c61      	ldr	r1, [r4, #68]	@ 0x44
9000f2d6:	69f2      	ldr	r2, [r6, #28]
9000f2d8:	400b      	ands	r3, r1
9000f2da:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000f2de:	6463      	str	r3, [r4, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000f2e0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000f2e2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000f2e6:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000f2e8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000f2ea:	b1df      	cbz	r7, 9000f324 <RCCEx_PLL3_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000f2ec:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000f2ee:	bf0c      	ite	eq
9000f2f0:	f443 0300 	orreq.w	r3, r3, #8388608	@ 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000f2f4:	f043 7380 	orrne.w	r3, r3, #16777216	@ 0x1000000
9000f2f8:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000f2fa:	4c0c      	ldr	r4, [pc, #48]	@ (9000f32c <RCCEx_PLL3_Config.part.0+0xdc>)
9000f2fc:	6823      	ldr	r3, [r4, #0]
9000f2fe:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000f302:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000f304:	f7fb fb88 	bl	9000aa18 <HAL_GetTick>
9000f308:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000f30a:	e004      	b.n	9000f316 <RCCEx_PLL3_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000f30c:	f7fb fb84 	bl	9000aa18 <HAL_GetTick>
9000f310:	1b40      	subs	r0, r0, r5
9000f312:	2802      	cmp	r0, #2
9000f314:	d804      	bhi.n	9000f320 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000f316:	6823      	ldr	r3, [r4, #0]
9000f318:	009b      	lsls	r3, r3, #2
9000f31a:	d5f7      	bpl.n	9000f30c <RCCEx_PLL3_Config.part.0+0xbc>
    }

  }


  return status;
9000f31c:	2000      	movs	r0, #0
}
9000f31e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000f320:	2003      	movs	r0, #3
}
9000f322:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000f324:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
9000f328:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000f32a:	e7e6      	b.n	9000f2fa <RCCEx_PLL3_Config.part.0+0xaa>
9000f32c:	58024400 	.word	0x58024400
9000f330:	ffff0007 	.word	0xffff0007

9000f334 <HAL_RCCEx_PeriphCLKConfig>:
{
9000f334:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000f338:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000f33c:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000f33e:	011d      	lsls	r5, r3, #4
9000f340:	f003 6600 	and.w	r6, r3, #134217728	@ 0x8000000
9000f344:	d525      	bpl.n	9000f392 <HAL_RCCEx_PeriphCLKConfig+0x5e>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000f346:	6e81      	ldr	r1, [r0, #104]	@ 0x68
9000f348:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000f34c:	f000 8660 	beq.w	90010010 <HAL_RCCEx_PeriphCLKConfig+0xcdc>
9000f350:	d814      	bhi.n	9000f37c <HAL_RCCEx_PeriphCLKConfig+0x48>
9000f352:	2900      	cmp	r1, #0
9000f354:	f000 86fa 	beq.w	9001014c <HAL_RCCEx_PeriphCLKConfig+0xe18>
9000f358:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000f35c:	f040 8466 	bne.w	9000fc2c <HAL_RCCEx_PeriphCLKConfig+0x8f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000f360:	49ad      	ldr	r1, [pc, #692]	@ (9000f618 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000f362:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000f364:	f001 0103 	and.w	r1, r1, #3
9000f368:	2903      	cmp	r1, #3
9000f36a:	f000 845f 	beq.w	9000fc2c <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000f36e:	2102      	movs	r1, #2
9000f370:	3008      	adds	r0, #8
9000f372:	f7ff fefb 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000f376:	4606      	mov	r6, r0
        break;
9000f378:	f000 be56 	b.w	90010028 <HAL_RCCEx_PeriphCLKConfig+0xcf4>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000f37c:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000f380:	f040 8454 	bne.w	9000fc2c <HAL_RCCEx_PeriphCLKConfig+0x8f8>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000f384:	4da4      	ldr	r5, [pc, #656]	@ (9000f618 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
9000f386:	2600      	movs	r6, #0
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000f388:	6d28      	ldr	r0, [r5, #80]	@ 0x50
9000f38a:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
9000f38e:	4301      	orrs	r1, r0
9000f390:	6529      	str	r1, [r5, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000f392:	05d8      	lsls	r0, r3, #23
9000f394:	d50a      	bpl.n	9000f3ac <HAL_RCCEx_PeriphCLKConfig+0x78>
    switch (PeriphClkInit->Sai1ClockSelection)
9000f396:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000f398:	2904      	cmp	r1, #4
9000f39a:	d806      	bhi.n	9000f3aa <HAL_RCCEx_PeriphCLKConfig+0x76>
9000f39c:	e8df f011 	tbh	[pc, r1, lsl #1]
9000f3a0:	064c04a8 	.word	0x064c04a8
9000f3a4:	04ad0661 	.word	0x04ad0661
9000f3a8:	04ad      	.short	0x04ad
9000f3aa:	2601      	movs	r6, #1
9000f3ac:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000f3ae:	0599      	lsls	r1, r3, #22
9000f3b0:	d524      	bpl.n	9000f3fc <HAL_RCCEx_PeriphCLKConfig+0xc8>
    switch (PeriphClkInit->Sai23ClockSelection)
9000f3b2:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
9000f3b4:	2980      	cmp	r1, #128	@ 0x80
9000f3b6:	f000 8664 	beq.w	90010082 <HAL_RCCEx_PeriphCLKConfig+0xd4e>
9000f3ba:	f200 8122 	bhi.w	9000f602 <HAL_RCCEx_PeriphCLKConfig+0x2ce>
9000f3be:	2900      	cmp	r1, #0
9000f3c0:	f000 84ac 	beq.w	9000fd1c <HAL_RCCEx_PeriphCLKConfig+0x9e8>
9000f3c4:	2940      	cmp	r1, #64	@ 0x40
9000f3c6:	f040 8123 	bne.w	9000f610 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000f3ca:	4993      	ldr	r1, [pc, #588]	@ (9000f618 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000f3cc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000f3ce:	f001 0103 	and.w	r1, r1, #3
9000f3d2:	2903      	cmp	r1, #3
9000f3d4:	f000 811c 	beq.w	9000f610 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000f3d8:	2100      	movs	r1, #0
9000f3da:	f104 0008 	add.w	r0, r4, #8
9000f3de:	f7ff fec5 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000f3e2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000f3e4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f3e8:	2d00      	cmp	r5, #0
9000f3ea:	f040 851b 	bne.w	9000fe24 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000f3ee:	4f8a      	ldr	r7, [pc, #552]	@ (9000f618 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000f3f0:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000f3f2:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000f3f4:	f421 71e0 	bic.w	r1, r1, #448	@ 0x1c0
9000f3f8:	4301      	orrs	r1, r0
9000f3fa:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000f3fc:	055f      	lsls	r7, r3, #21
9000f3fe:	d528      	bpl.n	9000f452 <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4AClockSelection)
9000f400:	f8d4 10a8 	ldr.w	r1, [r4, #168]	@ 0xa8
9000f404:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
9000f408:	f000 864f 	beq.w	900100aa <HAL_RCCEx_PeriphCLKConfig+0xd76>
9000f40c:	f200 8106 	bhi.w	9000f61c <HAL_RCCEx_PeriphCLKConfig+0x2e8>
9000f410:	2900      	cmp	r1, #0
9000f412:	f000 8463 	beq.w	9000fcdc <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000f416:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000f41a:	f040 8107 	bne.w	9000f62c <HAL_RCCEx_PeriphCLKConfig+0x2f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000f41e:	497e      	ldr	r1, [pc, #504]	@ (9000f618 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000f420:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000f422:	f001 0103 	and.w	r1, r1, #3
9000f426:	2903      	cmp	r1, #3
9000f428:	f000 8100 	beq.w	9000f62c <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000f42c:	2100      	movs	r1, #0
9000f42e:	f104 0008 	add.w	r0, r4, #8
9000f432:	f7ff fe9b 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000f436:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000f438:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f43c:	2d00      	cmp	r5, #0
9000f43e:	f040 84f4 	bne.w	9000fe2a <HAL_RCCEx_PeriphCLKConfig+0xaf6>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000f442:	4f75      	ldr	r7, [pc, #468]	@ (9000f618 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000f444:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
9000f448:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000f44a:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
9000f44e:	4301      	orrs	r1, r0
9000f450:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000f452:	0518      	lsls	r0, r3, #20
9000f454:	d528      	bpl.n	9000f4a8 <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->Sai4BClockSelection)
9000f456:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
9000f45a:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
9000f45e:	f000 85ac 	beq.w	9000ffba <HAL_RCCEx_PeriphCLKConfig+0xc86>
9000f462:	f200 80e6 	bhi.w	9000f632 <HAL_RCCEx_PeriphCLKConfig+0x2fe>
9000f466:	2900      	cmp	r1, #0
9000f468:	f000 8425 	beq.w	9000fcb6 <HAL_RCCEx_PeriphCLKConfig+0x982>
9000f46c:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
9000f470:	f040 80e7 	bne.w	9000f642 <HAL_RCCEx_PeriphCLKConfig+0x30e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000f474:	4968      	ldr	r1, [pc, #416]	@ (9000f618 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000f476:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000f478:	f001 0103 	and.w	r1, r1, #3
9000f47c:	2903      	cmp	r1, #3
9000f47e:	f000 80e0 	beq.w	9000f642 <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000f482:	2100      	movs	r1, #0
9000f484:	f104 0008 	add.w	r0, r4, #8
9000f488:	f7ff fe70 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000f48c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000f48e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f492:	2d00      	cmp	r5, #0
9000f494:	f040 84cc 	bne.w	9000fe30 <HAL_RCCEx_PeriphCLKConfig+0xafc>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000f498:	4f5f      	ldr	r7, [pc, #380]	@ (9000f618 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000f49a:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
9000f49e:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000f4a0:	f021 61e0 	bic.w	r1, r1, #117440512	@ 0x7000000
9000f4a4:	4301      	orrs	r1, r0
9000f4a6:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000f4a8:	0199      	lsls	r1, r3, #6
9000f4aa:	d518      	bpl.n	9000f4de <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->QspiClockSelection)
9000f4ac:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
9000f4ae:	2920      	cmp	r1, #32
9000f4b0:	f000 84ff 	beq.w	9000feb2 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
9000f4b4:	f200 80c8 	bhi.w	9000f648 <HAL_RCCEx_PeriphCLKConfig+0x314>
9000f4b8:	b139      	cbz	r1, 9000f4ca <HAL_RCCEx_PeriphCLKConfig+0x196>
9000f4ba:	2910      	cmp	r1, #16
9000f4bc:	f040 80c7 	bne.w	9000f64e <HAL_RCCEx_PeriphCLKConfig+0x31a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f4c0:	4855      	ldr	r0, [pc, #340]	@ (9000f618 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000f4c2:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000f4c4:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000f4c8:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000f4ca:	2d00      	cmp	r5, #0
9000f4cc:	f040 849f 	bne.w	9000fe0e <HAL_RCCEx_PeriphCLKConfig+0xada>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000f4d0:	4f51      	ldr	r7, [pc, #324]	@ (9000f618 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000f4d2:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000f4d4:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000f4d6:	f021 0130 	bic.w	r1, r1, #48	@ 0x30
9000f4da:	4301      	orrs	r1, r0
9000f4dc:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000f4de:	04df      	lsls	r7, r3, #19
9000f4e0:	d526      	bpl.n	9000f530 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi123ClockSelection)
9000f4e2:	6e21      	ldr	r1, [r4, #96]	@ 0x60
9000f4e4:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000f4e8:	f000 857b 	beq.w	9000ffe2 <HAL_RCCEx_PeriphCLKConfig+0xcae>
9000f4ec:	f200 80b2 	bhi.w	9000f654 <HAL_RCCEx_PeriphCLKConfig+0x320>
9000f4f0:	2900      	cmp	r1, #0
9000f4f2:	f000 83ea 	beq.w	9000fcca <HAL_RCCEx_PeriphCLKConfig+0x996>
9000f4f6:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
9000f4fa:	f040 80b3 	bne.w	9000f664 <HAL_RCCEx_PeriphCLKConfig+0x330>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000f4fe:	4946      	ldr	r1, [pc, #280]	@ (9000f618 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000f500:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000f502:	f001 0103 	and.w	r1, r1, #3
9000f506:	2903      	cmp	r1, #3
9000f508:	f000 80ac 	beq.w	9000f664 <HAL_RCCEx_PeriphCLKConfig+0x330>
9000f50c:	2100      	movs	r1, #0
9000f50e:	f104 0008 	add.w	r0, r4, #8
9000f512:	f7ff fe2b 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000f516:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000f518:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f51c:	2d00      	cmp	r5, #0
9000f51e:	f040 848a 	bne.w	9000fe36 <HAL_RCCEx_PeriphCLKConfig+0xb02>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000f522:	4f3d      	ldr	r7, [pc, #244]	@ (9000f618 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000f524:	6e20      	ldr	r0, [r4, #96]	@ 0x60
9000f526:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000f528:	f421 41e0 	bic.w	r1, r1, #28672	@ 0x7000
9000f52c:	4301      	orrs	r1, r0
9000f52e:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000f530:	0498      	lsls	r0, r3, #18
9000f532:	d524      	bpl.n	9000f57e <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi45ClockSelection)
9000f534:	6e61      	ldr	r1, [r4, #100]	@ 0x64
9000f536:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000f53a:	f000 8516 	beq.w	9000ff6a <HAL_RCCEx_PeriphCLKConfig+0xc36>
9000f53e:	f200 8094 	bhi.w	9000f66a <HAL_RCCEx_PeriphCLKConfig+0x336>
9000f542:	b191      	cbz	r1, 9000f56a <HAL_RCCEx_PeriphCLKConfig+0x236>
9000f544:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000f548:	f040 8099 	bne.w	9000f67e <HAL_RCCEx_PeriphCLKConfig+0x34a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000f54c:	4932      	ldr	r1, [pc, #200]	@ (9000f618 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000f54e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000f550:	f001 0103 	and.w	r1, r1, #3
9000f554:	2903      	cmp	r1, #3
9000f556:	f000 8092 	beq.w	9000f67e <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000f55a:	2101      	movs	r1, #1
9000f55c:	f104 0008 	add.w	r0, r4, #8
9000f560:	f7ff fe04 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000f564:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000f566:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f56a:	2d00      	cmp	r5, #0
9000f56c:	f040 8476 	bne.w	9000fe5c <HAL_RCCEx_PeriphCLKConfig+0xb28>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000f570:	4f29      	ldr	r7, [pc, #164]	@ (9000f618 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000f572:	6e60      	ldr	r0, [r4, #100]	@ 0x64
9000f574:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000f576:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
9000f57a:	4301      	orrs	r1, r0
9000f57c:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000f57e:	0459      	lsls	r1, r3, #17
9000f580:	d523      	bpl.n	9000f5ca <HAL_RCCEx_PeriphCLKConfig+0x296>
    switch (PeriphClkInit->Spi6ClockSelection)
9000f582:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
9000f586:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000f58a:	f000 8502 	beq.w	9000ff92 <HAL_RCCEx_PeriphCLKConfig+0xc5e>
9000f58e:	d879      	bhi.n	9000f684 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000f590:	b181      	cbz	r1, 9000f5b4 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000f592:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000f596:	d17d      	bne.n	9000f694 <HAL_RCCEx_PeriphCLKConfig+0x360>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000f598:	491f      	ldr	r1, [pc, #124]	@ (9000f618 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000f59a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000f59c:	f001 0103 	and.w	r1, r1, #3
9000f5a0:	2903      	cmp	r1, #3
9000f5a2:	d077      	beq.n	9000f694 <HAL_RCCEx_PeriphCLKConfig+0x360>
9000f5a4:	2101      	movs	r1, #1
9000f5a6:	f104 0008 	add.w	r0, r4, #8
9000f5aa:	f7ff fddf 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000f5ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000f5b0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f5b4:	2d00      	cmp	r5, #0
9000f5b6:	f040 8454 	bne.w	9000fe62 <HAL_RCCEx_PeriphCLKConfig+0xb2e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000f5ba:	4f17      	ldr	r7, [pc, #92]	@ (9000f618 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000f5bc:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9000f5c0:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000f5c2:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000f5c6:	4301      	orrs	r1, r0
9000f5c8:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000f5ca:	041f      	lsls	r7, r3, #16
9000f5cc:	d50d      	bpl.n	9000f5ea <HAL_RCCEx_PeriphCLKConfig+0x2b6>
    switch (PeriphClkInit->FdcanClockSelection)
9000f5ce:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000f5d0:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000f5d4:	f000 82e2 	beq.w	9000fb9c <HAL_RCCEx_PeriphCLKConfig+0x868>
9000f5d8:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000f5dc:	f000 83f0 	beq.w	9000fdc0 <HAL_RCCEx_PeriphCLKConfig+0xa8c>
9000f5e0:	2900      	cmp	r1, #0
9000f5e2:	f000 82e0 	beq.w	9000fba6 <HAL_RCCEx_PeriphCLKConfig+0x872>
9000f5e6:	2601      	movs	r6, #1
9000f5e8:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000f5ea:	01d8      	lsls	r0, r3, #7
9000f5ec:	d55e      	bpl.n	9000f6ac <HAL_RCCEx_PeriphCLKConfig+0x378>
    switch (PeriphClkInit->FmcClockSelection)
9000f5ee:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000f5f0:	2903      	cmp	r1, #3
9000f5f2:	f200 85cd 	bhi.w	90010190 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000f5f6:	e8df f011 	tbh	[pc, r1, lsl #1]
9000f5fa:	0055      	.short	0x0055
9000f5fc:	04930050 	.word	0x04930050
9000f600:	0055      	.short	0x0055
    switch (PeriphClkInit->Sai23ClockSelection)
9000f602:	29c0      	cmp	r1, #192	@ 0xc0
9000f604:	f43f aef0 	beq.w	9000f3e8 <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000f608:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000f60c:	f43f aeec 	beq.w	9000f3e8 <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000f610:	2601      	movs	r6, #1
9000f612:	4635      	mov	r5, r6
9000f614:	e6f2      	b.n	9000f3fc <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000f616:	bf00      	nop
9000f618:	58024400 	.word	0x58024400
    switch (PeriphClkInit->Sai4AClockSelection)
9000f61c:	f5b1 0fc0 	cmp.w	r1, #6291456	@ 0x600000
9000f620:	f43f af0c 	beq.w	9000f43c <HAL_RCCEx_PeriphCLKConfig+0x108>
9000f624:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
9000f628:	f43f af08 	beq.w	9000f43c <HAL_RCCEx_PeriphCLKConfig+0x108>
9000f62c:	2601      	movs	r6, #1
9000f62e:	4635      	mov	r5, r6
9000f630:	e70f      	b.n	9000f452 <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4BClockSelection)
9000f632:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
9000f636:	f43f af2c 	beq.w	9000f492 <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000f63a:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
9000f63e:	f43f af28 	beq.w	9000f492 <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000f642:	2601      	movs	r6, #1
9000f644:	4635      	mov	r5, r6
9000f646:	e72f      	b.n	9000f4a8 <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->QspiClockSelection)
9000f648:	2930      	cmp	r1, #48	@ 0x30
9000f64a:	f43f af3e 	beq.w	9000f4ca <HAL_RCCEx_PeriphCLKConfig+0x196>
9000f64e:	2601      	movs	r6, #1
9000f650:	4635      	mov	r5, r6
9000f652:	e744      	b.n	9000f4de <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->Spi123ClockSelection)
9000f654:	f5b1 5f40 	cmp.w	r1, #12288	@ 0x3000
9000f658:	f43f af60 	beq.w	9000f51c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000f65c:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000f660:	f43f af5c 	beq.w	9000f51c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000f664:	2601      	movs	r6, #1
9000f666:	4635      	mov	r5, r6
9000f668:	e762      	b.n	9000f530 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi45ClockSelection)
9000f66a:	f421 3080 	bic.w	r0, r1, #65536	@ 0x10000
9000f66e:	f5b0 2f80 	cmp.w	r0, #262144	@ 0x40000
9000f672:	f43f af7a 	beq.w	9000f56a <HAL_RCCEx_PeriphCLKConfig+0x236>
9000f676:	f5b1 3f40 	cmp.w	r1, #196608	@ 0x30000
9000f67a:	f43f af76 	beq.w	9000f56a <HAL_RCCEx_PeriphCLKConfig+0x236>
9000f67e:	2601      	movs	r6, #1
9000f680:	4635      	mov	r5, r6
9000f682:	e77c      	b.n	9000f57e <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi6ClockSelection)
9000f684:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000f688:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000f68c:	d092      	beq.n	9000f5b4 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000f68e:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000f692:	d08f      	beq.n	9000f5b4 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000f694:	2601      	movs	r6, #1
9000f696:	4635      	mov	r5, r6
9000f698:	e797      	b.n	9000f5ca <HAL_RCCEx_PeriphCLKConfig+0x296>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f69a:	4837      	ldr	r0, [pc, #220]	@ (9000f778 <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000f69c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000f69e:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000f6a2:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000f6a4:	2d00      	cmp	r5, #0
9000f6a6:	f000 83b5 	beq.w	9000fe14 <HAL_RCCEx_PeriphCLKConfig+0xae0>
9000f6aa:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000f6ac:	0259      	lsls	r1, r3, #9
9000f6ae:	f100 82c0 	bmi.w	9000fc32 <HAL_RCCEx_PeriphCLKConfig+0x8fe>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000f6b2:	07df      	lsls	r7, r3, #31
9000f6b4:	d52f      	bpl.n	9000f716 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
    switch (PeriphClkInit->Usart16ClockSelection)
9000f6b6:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
9000f6b8:	2928      	cmp	r1, #40	@ 0x28
9000f6ba:	d82a      	bhi.n	9000f712 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000f6bc:	e8df f011 	tbh	[pc, r1, lsl #1]
9000f6c0:	002902ab 	.word	0x002902ab
9000f6c4:	00290029 	.word	0x00290029
9000f6c8:	00290029 	.word	0x00290029
9000f6cc:	00290029 	.word	0x00290029
9000f6d0:	0029029c 	.word	0x0029029c
9000f6d4:	00290029 	.word	0x00290029
9000f6d8:	00290029 	.word	0x00290029
9000f6dc:	00290029 	.word	0x00290029
9000f6e0:	0029052d 	.word	0x0029052d
9000f6e4:	00290029 	.word	0x00290029
9000f6e8:	00290029 	.word	0x00290029
9000f6ec:	00290029 	.word	0x00290029
9000f6f0:	002902ab 	.word	0x002902ab
9000f6f4:	00290029 	.word	0x00290029
9000f6f8:	00290029 	.word	0x00290029
9000f6fc:	00290029 	.word	0x00290029
9000f700:	002902ab 	.word	0x002902ab
9000f704:	00290029 	.word	0x00290029
9000f708:	00290029 	.word	0x00290029
9000f70c:	00290029 	.word	0x00290029
9000f710:	02ab      	.short	0x02ab
9000f712:	2601      	movs	r6, #1
9000f714:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000f716:	0798      	lsls	r0, r3, #30
9000f718:	d51e      	bpl.n	9000f758 <HAL_RCCEx_PeriphCLKConfig+0x424>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000f71a:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
9000f71c:	2905      	cmp	r1, #5
9000f71e:	f200 851c 	bhi.w	9001015a <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000f722:	e8df f011 	tbh	[pc, r1, lsl #1]
9000f726:	0015      	.short	0x0015
9000f728:	04e80006 	.word	0x04e80006
9000f72c:	00150015 	.word	0x00150015
9000f730:	0015      	.short	0x0015
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000f732:	4911      	ldr	r1, [pc, #68]	@ (9000f778 <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000f734:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000f736:	f001 0103 	and.w	r1, r1, #3
9000f73a:	2903      	cmp	r1, #3
9000f73c:	f000 850d 	beq.w	9001015a <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000f740:	2101      	movs	r1, #1
9000f742:	f104 0008 	add.w	r0, r4, #8
9000f746:	f7ff fd11 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000f74a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000f74c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f750:	2d00      	cmp	r5, #0
9000f752:	f000 837b 	beq.w	9000fe4c <HAL_RCCEx_PeriphCLKConfig+0xb18>
9000f756:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000f758:	0759      	lsls	r1, r3, #29
9000f75a:	d522      	bpl.n	9000f7a2 <HAL_RCCEx_PeriphCLKConfig+0x46e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000f75c:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
9000f760:	2905      	cmp	r1, #5
9000f762:	f200 84fe 	bhi.w	90010162 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000f766:	e8df f011 	tbh	[pc, r1, lsl #1]
9000f76a:	0018      	.short	0x0018
9000f76c:	04b40009 	.word	0x04b40009
9000f770:	00180018 	.word	0x00180018
9000f774:	0018      	.short	0x0018
9000f776:	bf00      	nop
9000f778:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000f77c:	49b0      	ldr	r1, [pc, #704]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f77e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000f780:	f001 0103 	and.w	r1, r1, #3
9000f784:	2903      	cmp	r1, #3
9000f786:	f000 84ec 	beq.w	90010162 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000f78a:	2101      	movs	r1, #1
9000f78c:	f104 0008 	add.w	r0, r4, #8
9000f790:	f7ff fcec 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000f794:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000f796:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f79a:	2d00      	cmp	r5, #0
9000f79c:	f000 8364 	beq.w	9000fe68 <HAL_RCCEx_PeriphCLKConfig+0xb34>
9000f7a0:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000f7a2:	069f      	lsls	r7, r3, #26
9000f7a4:	d526      	bpl.n	9000f7f4 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000f7a6:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
9000f7aa:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000f7ae:	f000 836e 	beq.w	9000fe8e <HAL_RCCEx_PeriphCLKConfig+0xb5a>
9000f7b2:	f200 8194 	bhi.w	9000fade <HAL_RCCEx_PeriphCLKConfig+0x7aa>
9000f7b6:	b191      	cbz	r1, 9000f7de <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000f7b8:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000f7bc:	f040 8199 	bne.w	9000faf2 <HAL_RCCEx_PeriphCLKConfig+0x7be>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000f7c0:	499f      	ldr	r1, [pc, #636]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f7c2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000f7c4:	f001 0103 	and.w	r1, r1, #3
9000f7c8:	2903      	cmp	r1, #3
9000f7ca:	f000 8192 	beq.w	9000faf2 <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000f7ce:	2100      	movs	r1, #0
9000f7d0:	f104 0008 	add.w	r0, r4, #8
9000f7d4:	f7ff fcca 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000f7d8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000f7da:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f7de:	2d00      	cmp	r5, #0
9000f7e0:	f040 834b 	bne.w	9000fe7a <HAL_RCCEx_PeriphCLKConfig+0xb46>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000f7e4:	4f96      	ldr	r7, [pc, #600]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f7e6:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000f7ea:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000f7ec:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000f7f0:	4301      	orrs	r1, r0
9000f7f2:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000f7f4:	0658      	lsls	r0, r3, #25
9000f7f6:	d526      	bpl.n	9000f846 <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000f7f8:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9000f7fc:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
9000f800:	f000 83a1 	beq.w	9000ff46 <HAL_RCCEx_PeriphCLKConfig+0xc12>
9000f804:	f200 8178 	bhi.w	9000faf8 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
9000f808:	b191      	cbz	r1, 9000f830 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000f80a:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
9000f80e:	f040 817d 	bne.w	9000fb0c <HAL_RCCEx_PeriphCLKConfig+0x7d8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000f812:	498b      	ldr	r1, [pc, #556]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f814:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000f816:	f001 0103 	and.w	r1, r1, #3
9000f81a:	2903      	cmp	r1, #3
9000f81c:	f000 8176 	beq.w	9000fb0c <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000f820:	2100      	movs	r1, #0
9000f822:	f104 0008 	add.w	r0, r4, #8
9000f826:	f7ff fca1 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000f82a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000f82c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f830:	2d00      	cmp	r5, #0
9000f832:	f040 8328 	bne.w	9000fe86 <HAL_RCCEx_PeriphCLKConfig+0xb52>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000f836:	4f82      	ldr	r7, [pc, #520]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f838:	f8d4 009c 	ldr.w	r0, [r4, #156]	@ 0x9c
9000f83c:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000f83e:	f421 51e0 	bic.w	r1, r1, #7168	@ 0x1c00
9000f842:	4301      	orrs	r1, r0
9000f844:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000f846:	0619      	lsls	r1, r3, #24
9000f848:	d526      	bpl.n	9000f898 <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000f84a:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
9000f84e:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000f852:	f000 8353 	beq.w	9000fefc <HAL_RCCEx_PeriphCLKConfig+0xbc8>
9000f856:	f200 815c 	bhi.w	9000fb12 <HAL_RCCEx_PeriphCLKConfig+0x7de>
9000f85a:	b191      	cbz	r1, 9000f882 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000f85c:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000f860:	f040 8161 	bne.w	9000fb26 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000f864:	4976      	ldr	r1, [pc, #472]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f866:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000f868:	f001 0103 	and.w	r1, r1, #3
9000f86c:	2903      	cmp	r1, #3
9000f86e:	f000 815a 	beq.w	9000fb26 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000f872:	2100      	movs	r1, #0
9000f874:	f104 0008 	add.w	r0, r4, #8
9000f878:	f7ff fc78 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000f87c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000f87e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f882:	2d00      	cmp	r5, #0
9000f884:	f040 82fb 	bne.w	9000fe7e <HAL_RCCEx_PeriphCLKConfig+0xb4a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000f888:	4f6d      	ldr	r7, [pc, #436]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f88a:	f8d4 00a0 	ldr.w	r0, [r4, #160]	@ 0xa0
9000f88e:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000f890:	f421 4160 	bic.w	r1, r1, #57344	@ 0xe000
9000f894:	4301      	orrs	r1, r0
9000f896:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000f898:	071f      	lsls	r7, r3, #28
9000f89a:	d50b      	bpl.n	9000f8b4 <HAL_RCCEx_PeriphCLKConfig+0x580>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000f89c:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
9000f8a0:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000f8a4:	f000 8250 	beq.w	9000fd48 <HAL_RCCEx_PeriphCLKConfig+0xa14>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000f8a8:	4f65      	ldr	r7, [pc, #404]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f8aa:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000f8ac:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
9000f8b0:	4301      	orrs	r1, r0
9000f8b2:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000f8b4:	06d8      	lsls	r0, r3, #27
9000f8b6:	d50b      	bpl.n	9000f8d0 <HAL_RCCEx_PeriphCLKConfig+0x59c>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000f8b8:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
9000f8bc:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9000f8c0:	f000 8257 	beq.w	9000fd72 <HAL_RCCEx_PeriphCLKConfig+0xa3e>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000f8c4:	4f5e      	ldr	r7, [pc, #376]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f8c6:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000f8c8:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
9000f8cc:	4301      	orrs	r1, r0
9000f8ce:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000f8d0:	0319      	lsls	r1, r3, #12
9000f8d2:	d50e      	bpl.n	9000f8f2 <HAL_RCCEx_PeriphCLKConfig+0x5be>
    switch (PeriphClkInit->AdcClockSelection)
9000f8d4:	f8d4 10a4 	ldr.w	r1, [r4, #164]	@ 0xa4
9000f8d8:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000f8dc:	f000 816e 	beq.w	9000fbbc <HAL_RCCEx_PeriphCLKConfig+0x888>
9000f8e0:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000f8e4:	f000 8179 	beq.w	9000fbda <HAL_RCCEx_PeriphCLKConfig+0x8a6>
9000f8e8:	2900      	cmp	r1, #0
9000f8ea:	f000 827a 	beq.w	9000fde2 <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000f8ee:	2601      	movs	r6, #1
9000f8f0:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000f8f2:	035f      	lsls	r7, r3, #13
9000f8f4:	d50f      	bpl.n	9000f916 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
    switch (PeriphClkInit->UsbClockSelection)
9000f8f6:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
9000f8fa:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000f8fe:	f000 82eb 	beq.w	9000fed8 <HAL_RCCEx_PeriphCLKConfig+0xba4>
9000f902:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000f906:	f000 813d 	beq.w	9000fb84 <HAL_RCCEx_PeriphCLKConfig+0x850>
9000f90a:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000f90e:	f000 8134 	beq.w	9000fb7a <HAL_RCCEx_PeriphCLKConfig+0x846>
9000f912:	2601      	movs	r6, #1
9000f914:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000f916:	03d8      	lsls	r0, r3, #15
9000f918:	d520      	bpl.n	9000f95c <HAL_RCCEx_PeriphCLKConfig+0x628>
    switch (PeriphClkInit->SdmmcClockSelection)
9000f91a:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000f91c:	2900      	cmp	r1, #0
9000f91e:	f000 8245 	beq.w	9000fdac <HAL_RCCEx_PeriphCLKConfig+0xa78>
9000f922:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000f926:	f040 8125 	bne.w	9000fb74 <HAL_RCCEx_PeriphCLKConfig+0x840>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000f92a:	4945      	ldr	r1, [pc, #276]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f92c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000f92e:	f001 0103 	and.w	r1, r1, #3
9000f932:	2903      	cmp	r1, #3
9000f934:	f000 811e 	beq.w	9000fb74 <HAL_RCCEx_PeriphCLKConfig+0x840>
9000f938:	2102      	movs	r1, #2
9000f93a:	f104 0008 	add.w	r0, r4, #8
9000f93e:	f7ff fc15 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000f942:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000f944:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f948:	2d00      	cmp	r5, #0
9000f94a:	f040 8237 	bne.w	9000fdbc <HAL_RCCEx_PeriphCLKConfig+0xa88>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000f94e:	4f3c      	ldr	r7, [pc, #240]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f950:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000f952:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000f954:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
9000f958:	4301      	orrs	r1, r0
9000f95a:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000f95c:	0099      	lsls	r1, r3, #2
9000f95e:	d50e      	bpl.n	9000f97e <HAL_RCCEx_PeriphCLKConfig+0x64a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000f960:	4937      	ldr	r1, [pc, #220]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f962:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000f964:	f001 0103 	and.w	r1, r1, #3
9000f968:	2903      	cmp	r1, #3
9000f96a:	d007      	beq.n	9000f97c <HAL_RCCEx_PeriphCLKConfig+0x648>
9000f96c:	2102      	movs	r1, #2
9000f96e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000f972:	f7ff fc6d 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000f976:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000f97a:	b100      	cbz	r0, 9000f97e <HAL_RCCEx_PeriphCLKConfig+0x64a>
      status = HAL_ERROR;
9000f97c:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000f97e:	039f      	lsls	r7, r3, #14
9000f980:	f140 80e0 	bpl.w	9000fb44 <HAL_RCCEx_PeriphCLKConfig+0x810>
    switch (PeriphClkInit->RngClockSelection)
9000f984:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
9000f988:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000f98c:	f000 8205 	beq.w	9000fd9a <HAL_RCCEx_PeriphCLKConfig+0xa66>
9000f990:	f240 80cc 	bls.w	9000fb2c <HAL_RCCEx_PeriphCLKConfig+0x7f8>
9000f994:	f421 7080 	bic.w	r0, r1, #256	@ 0x100
9000f998:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
9000f99c:	f000 80c9 	beq.w	9000fb32 <HAL_RCCEx_PeriphCLKConfig+0x7fe>
9000f9a0:	2501      	movs	r5, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000f9a2:	02d8      	lsls	r0, r3, #11
9000f9a4:	d506      	bpl.n	9000f9b4 <HAL_RCCEx_PeriphCLKConfig+0x680>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000f9a6:	4826      	ldr	r0, [pc, #152]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f9a8:	6f66      	ldr	r6, [r4, #116]	@ 0x74
9000f9aa:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000f9ac:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
9000f9b0:	4331      	orrs	r1, r6
9000f9b2:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000f9b4:	00d9      	lsls	r1, r3, #3
9000f9b6:	d507      	bpl.n	9000f9c8 <HAL_RCCEx_PeriphCLKConfig+0x694>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000f9b8:	4821      	ldr	r0, [pc, #132]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f9ba:	f8d4 60b8 	ldr.w	r6, [r4, #184]	@ 0xb8
9000f9be:	6901      	ldr	r1, [r0, #16]
9000f9c0:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
9000f9c4:	4331      	orrs	r1, r6
9000f9c6:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000f9c8:	029f      	lsls	r7, r3, #10
9000f9ca:	d506      	bpl.n	9000f9da <HAL_RCCEx_PeriphCLKConfig+0x6a6>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000f9cc:	481c      	ldr	r0, [pc, #112]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f9ce:	6ee6      	ldr	r6, [r4, #108]	@ 0x6c
9000f9d0:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000f9d2:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
9000f9d6:	4331      	orrs	r1, r6
9000f9d8:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000f9da:	005e      	lsls	r6, r3, #1
9000f9dc:	d509      	bpl.n	9000f9f2 <HAL_RCCEx_PeriphCLKConfig+0x6be>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000f9de:	4918      	ldr	r1, [pc, #96]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f9e0:	6908      	ldr	r0, [r1, #16]
9000f9e2:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
9000f9e6:	6108      	str	r0, [r1, #16]
9000f9e8:	6908      	ldr	r0, [r1, #16]
9000f9ea:	f8d4 60bc 	ldr.w	r6, [r4, #188]	@ 0xbc
9000f9ee:	4330      	orrs	r0, r6
9000f9f0:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000f9f2:	2b00      	cmp	r3, #0
9000f9f4:	da06      	bge.n	9000fa04 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000f9f6:	4812      	ldr	r0, [pc, #72]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000f9f8:	6d66      	ldr	r6, [r4, #84]	@ 0x54
9000f9fa:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000f9fc:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000fa00:	4331      	orrs	r1, r6
9000fa02:	64c1      	str	r1, [r0, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000fa04:	0218      	lsls	r0, r3, #8
9000fa06:	d507      	bpl.n	9000fa18 <HAL_RCCEx_PeriphCLKConfig+0x6e4>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000fa08:	490d      	ldr	r1, [pc, #52]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000fa0a:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
9000fa0e:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
9000fa10:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
9000fa14:	4303      	orrs	r3, r0
9000fa16:	654b      	str	r3, [r1, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000fa18:	07d1      	lsls	r1, r2, #31
9000fa1a:	d513      	bpl.n	9000fa44 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000fa1c:	4b08      	ldr	r3, [pc, #32]	@ (9000fa40 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000fa1e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000fa20:	f003 0303 	and.w	r3, r3, #3
9000fa24:	2b03      	cmp	r3, #3
9000fa26:	f000 818d 	beq.w	9000fd44 <HAL_RCCEx_PeriphCLKConfig+0xa10>
9000fa2a:	2100      	movs	r1, #0
9000fa2c:	f104 0008 	add.w	r0, r4, #8
9000fa30:	f7ff fb9c 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000fa34:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000fa36:	2800      	cmp	r0, #0
9000fa38:	f040 8204 	bne.w	9000fe44 <HAL_RCCEx_PeriphCLKConfig+0xb10>
9000fa3c:	e002      	b.n	9000fa44 <HAL_RCCEx_PeriphCLKConfig+0x710>
9000fa3e:	bf00      	nop
9000fa40:	58024400 	.word	0x58024400
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000fa44:	0793      	lsls	r3, r2, #30
9000fa46:	d50f      	bpl.n	9000fa68 <HAL_RCCEx_PeriphCLKConfig+0x734>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000fa48:	4bb2      	ldr	r3, [pc, #712]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fa4a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000fa4c:	f003 0303 	and.w	r3, r3, #3
9000fa50:	2b03      	cmp	r3, #3
9000fa52:	f000 816c 	beq.w	9000fd2e <HAL_RCCEx_PeriphCLKConfig+0x9fa>
9000fa56:	2101      	movs	r1, #1
9000fa58:	f104 0008 	add.w	r0, r4, #8
9000fa5c:	f7ff fb86 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000fa60:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000fa62:	2800      	cmp	r0, #0
9000fa64:	f040 81f0 	bne.w	9000fe48 <HAL_RCCEx_PeriphCLKConfig+0xb14>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000fa68:	0757      	lsls	r7, r2, #29
9000fa6a:	d50f      	bpl.n	9000fa8c <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000fa6c:	4ba9      	ldr	r3, [pc, #676]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fa6e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000fa70:	f003 0303 	and.w	r3, r3, #3
9000fa74:	2b03      	cmp	r3, #3
9000fa76:	f000 815c 	beq.w	9000fd32 <HAL_RCCEx_PeriphCLKConfig+0x9fe>
9000fa7a:	2102      	movs	r1, #2
9000fa7c:	f104 0008 	add.w	r0, r4, #8
9000fa80:	f7ff fb74 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000fa84:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000fa86:	2800      	cmp	r0, #0
9000fa88:	f040 81d8 	bne.w	9000fe3c <HAL_RCCEx_PeriphCLKConfig+0xb08>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000fa8c:	0716      	lsls	r6, r2, #28
9000fa8e:	d50f      	bpl.n	9000fab0 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000fa90:	4ba0      	ldr	r3, [pc, #640]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fa92:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000fa94:	f003 0303 	and.w	r3, r3, #3
9000fa98:	2b03      	cmp	r3, #3
9000fa9a:	f000 814c 	beq.w	9000fd36 <HAL_RCCEx_PeriphCLKConfig+0xa02>
9000fa9e:	2100      	movs	r1, #0
9000faa0:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000faa4:	f7ff fbd4 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000faa8:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000faaa:	2800      	cmp	r0, #0
9000faac:	f040 81c8 	bne.w	9000fe40 <HAL_RCCEx_PeriphCLKConfig+0xb0c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000fab0:	06d0      	lsls	r0, r2, #27
9000fab2:	d54a      	bpl.n	9000fb4a <HAL_RCCEx_PeriphCLKConfig+0x816>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000fab4:	4b97      	ldr	r3, [pc, #604]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000fab6:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000faba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000fabc:	f003 0303 	and.w	r3, r3, #3
9000fac0:	2b03      	cmp	r3, #3
9000fac2:	f000 813a 	beq.w	9000fd3a <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000fac6:	2101      	movs	r1, #1
9000fac8:	4630      	mov	r0, r6
9000faca:	f7ff fbc1 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000face:	2800      	cmp	r0, #0
9000fad0:	d03a      	beq.n	9000fb48 <HAL_RCCEx_PeriphCLKConfig+0x814>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000fad2:	6863      	ldr	r3, [r4, #4]
9000fad4:	069a      	lsls	r2, r3, #26
9000fad6:	f140 808c 	bpl.w	9000fbf2 <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000fada:	4605      	mov	r5, r0
9000fadc:	e039      	b.n	9000fb52 <HAL_RCCEx_PeriphCLKConfig+0x81e>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000fade:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000fae2:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000fae6:	f43f ae7a 	beq.w	9000f7de <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000faea:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000faee:	f43f ae76 	beq.w	9000f7de <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000faf2:	2601      	movs	r6, #1
9000faf4:	4635      	mov	r5, r6
9000faf6:	e67d      	b.n	9000f7f4 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000faf8:	f421 6080 	bic.w	r0, r1, #1024	@ 0x400
9000fafc:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000fb00:	f43f ae96 	beq.w	9000f830 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000fb04:	f5b1 6f40 	cmp.w	r1, #3072	@ 0xc00
9000fb08:	f43f ae92 	beq.w	9000f830 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000fb0c:	2601      	movs	r6, #1
9000fb0e:	4635      	mov	r5, r6
9000fb10:	e699      	b.n	9000f846 <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000fb12:	f421 5000 	bic.w	r0, r1, #8192	@ 0x2000
9000fb16:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000fb1a:	f43f aeb2 	beq.w	9000f882 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000fb1e:	f5b1 4fc0 	cmp.w	r1, #24576	@ 0x6000
9000fb22:	f43f aeae 	beq.w	9000f882 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000fb26:	2601      	movs	r6, #1
9000fb28:	4635      	mov	r5, r6
9000fb2a:	e6b5      	b.n	9000f898 <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->RngClockSelection)
9000fb2c:	2900      	cmp	r1, #0
9000fb2e:	f47f af37 	bne.w	9000f9a0 <HAL_RCCEx_PeriphCLKConfig+0x66c>
    if (ret == HAL_OK)
9000fb32:	2d00      	cmp	r5, #0
9000fb34:	f47f af35 	bne.w	9000f9a2 <HAL_RCCEx_PeriphCLKConfig+0x66e>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000fb38:	4d76      	ldr	r5, [pc, #472]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fb3a:	6d68      	ldr	r0, [r5, #84]	@ 0x54
9000fb3c:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
9000fb40:	4301      	orrs	r1, r0
9000fb42:	6569      	str	r1, [r5, #84]	@ 0x54
      status = HAL_ERROR;
9000fb44:	4635      	mov	r5, r6
9000fb46:	e72c      	b.n	9000f9a2 <HAL_RCCEx_PeriphCLKConfig+0x66e>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000fb48:	6862      	ldr	r2, [r4, #4]
9000fb4a:	0693      	lsls	r3, r2, #26
9000fb4c:	d50d      	bpl.n	9000fb6a <HAL_RCCEx_PeriphCLKConfig+0x836>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000fb4e:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000fb52:	4b70      	ldr	r3, [pc, #448]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fb54:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000fb56:	f003 0303 	and.w	r3, r3, #3
9000fb5a:	2b03      	cmp	r3, #3
9000fb5c:	d049      	beq.n	9000fbf2 <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000fb5e:	2102      	movs	r1, #2
9000fb60:	4630      	mov	r0, r6
9000fb62:	f7ff fb75 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000fb66:	2800      	cmp	r0, #0
9000fb68:	d143      	bne.n	9000fbf2 <HAL_RCCEx_PeriphCLKConfig+0x8be>
  if (status == HAL_OK)
9000fb6a:	1e28      	subs	r0, r5, #0
9000fb6c:	bf18      	it	ne
9000fb6e:	2001      	movne	r0, #1
}
9000fb70:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000fb74:	2601      	movs	r6, #1
9000fb76:	4635      	mov	r5, r6
9000fb78:	e6f0      	b.n	9000f95c <HAL_RCCEx_PeriphCLKConfig+0x628>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000fb7a:	4866      	ldr	r0, [pc, #408]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fb7c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000fb7e:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000fb82:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000fb84:	2d00      	cmp	r5, #0
9000fb86:	f040 8140 	bne.w	9000fe0a <HAL_RCCEx_PeriphCLKConfig+0xad6>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000fb8a:	4f62      	ldr	r7, [pc, #392]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fb8c:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9000fb90:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000fb92:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000fb96:	4301      	orrs	r1, r0
9000fb98:	6579      	str	r1, [r7, #84]	@ 0x54
9000fb9a:	e6bc      	b.n	9000f916 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000fb9c:	485d      	ldr	r0, [pc, #372]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fb9e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000fba0:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000fba4:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000fba6:	2d00      	cmp	r5, #0
9000fba8:	f040 812c 	bne.w	9000fe04 <HAL_RCCEx_PeriphCLKConfig+0xad0>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000fbac:	4f59      	ldr	r7, [pc, #356]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fbae:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000fbb0:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000fbb2:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000fbb6:	4301      	orrs	r1, r0
9000fbb8:	6539      	str	r1, [r7, #80]	@ 0x50
9000fbba:	e516      	b.n	9000f5ea <HAL_RCCEx_PeriphCLKConfig+0x2b6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000fbbc:	4955      	ldr	r1, [pc, #340]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fbbe:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000fbc0:	f001 0103 	and.w	r1, r1, #3
9000fbc4:	2903      	cmp	r1, #3
9000fbc6:	f43f ae92 	beq.w	9000f8ee <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000fbca:	2102      	movs	r1, #2
9000fbcc:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000fbd0:	f7ff fb3e 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
9000fbd4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000fbd6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000fbda:	2d00      	cmp	r5, #0
9000fbdc:	f040 8151 	bne.w	9000fe82 <HAL_RCCEx_PeriphCLKConfig+0xb4e>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000fbe0:	4f4c      	ldr	r7, [pc, #304]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fbe2:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
9000fbe6:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000fbe8:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
9000fbec:	4301      	orrs	r1, r0
9000fbee:	65b9      	str	r1, [r7, #88]	@ 0x58
9000fbf0:	e67f      	b.n	9000f8f2 <HAL_RCCEx_PeriphCLKConfig+0x5be>
  return HAL_ERROR;
9000fbf2:	2001      	movs	r0, #1
}
9000fbf4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000fbf8:	4946      	ldr	r1, [pc, #280]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fbfa:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000fbfc:	f001 0103 	and.w	r1, r1, #3
9000fc00:	2903      	cmp	r1, #3
9000fc02:	f43f ad86 	beq.w	9000f712 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000fc06:	2101      	movs	r1, #1
9000fc08:	f104 0008 	add.w	r0, r4, #8
9000fc0c:	f7ff faae 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000fc10:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000fc12:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000fc16:	2d00      	cmp	r5, #0
9000fc18:	f040 8137 	bne.w	9000fe8a <HAL_RCCEx_PeriphCLKConfig+0xb56>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000fc1c:	4f3d      	ldr	r7, [pc, #244]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fc1e:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
9000fc20:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000fc22:	f021 0138 	bic.w	r1, r1, #56	@ 0x38
9000fc26:	4301      	orrs	r1, r0
9000fc28:	6579      	str	r1, [r7, #84]	@ 0x54
9000fc2a:	e574      	b.n	9000f716 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
9000fc2c:	2601      	movs	r6, #1
9000fc2e:	f7ff bbb0 	b.w	9000f392 <HAL_RCCEx_PeriphCLKConfig+0x5e>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000fc32:	4f39      	ldr	r7, [pc, #228]	@ (9000fd18 <HAL_RCCEx_PeriphCLKConfig+0x9e4>)
9000fc34:	683b      	ldr	r3, [r7, #0]
9000fc36:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000fc3a:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000fc3c:	f7fa feec 	bl	9000aa18 <HAL_GetTick>
9000fc40:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000fc42:	e006      	b.n	9000fc52 <HAL_RCCEx_PeriphCLKConfig+0x91e>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000fc44:	f7fa fee8 	bl	9000aa18 <HAL_GetTick>
9000fc48:	eba0 0008 	sub.w	r0, r0, r8
9000fc4c:	2864      	cmp	r0, #100	@ 0x64
9000fc4e:	f200 8277 	bhi.w	90010140 <HAL_RCCEx_PeriphCLKConfig+0xe0c>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000fc52:	683b      	ldr	r3, [r7, #0]
9000fc54:	05da      	lsls	r2, r3, #23
9000fc56:	d5f5      	bpl.n	9000fc44 <HAL_RCCEx_PeriphCLKConfig+0x910>
    if (ret == HAL_OK)
9000fc58:	2d00      	cmp	r5, #0
9000fc5a:	f040 8272 	bne.w	90010142 <HAL_RCCEx_PeriphCLKConfig+0xe0e>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000fc5e:	4a2d      	ldr	r2, [pc, #180]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fc60:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000fc64:	6f11      	ldr	r1, [r2, #112]	@ 0x70
9000fc66:	4059      	eors	r1, r3
9000fc68:	f411 7f40 	tst.w	r1, #768	@ 0x300
9000fc6c:	d00b      	beq.n	9000fc86 <HAL_RCCEx_PeriphCLKConfig+0x952>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000fc6e:	6f11      	ldr	r1, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000fc70:	6f10      	ldr	r0, [r2, #112]	@ 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000fc72:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000fc76:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
9000fc7a:	6710      	str	r0, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000fc7c:	6f10      	ldr	r0, [r2, #112]	@ 0x70
9000fc7e:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
9000fc82:	6710      	str	r0, [r2, #112]	@ 0x70
        RCC->BDCR = tmpreg;
9000fc84:	6711      	str	r1, [r2, #112]	@ 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000fc86:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000fc8a:	f000 8285 	beq.w	90010198 <HAL_RCCEx_PeriphCLKConfig+0xe64>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000fc8e:	f403 7240 	and.w	r2, r3, #768	@ 0x300
9000fc92:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
9000fc96:	f000 8293 	beq.w	900101c0 <HAL_RCCEx_PeriphCLKConfig+0xe8c>
9000fc9a:	491e      	ldr	r1, [pc, #120]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fc9c:	690a      	ldr	r2, [r1, #16]
9000fc9e:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
9000fca2:	610a      	str	r2, [r1, #16]
9000fca4:	481b      	ldr	r0, [pc, #108]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fca6:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000fcaa:	6f07      	ldr	r7, [r0, #112]	@ 0x70
9000fcac:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000fcae:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000fcb2:	6701      	str	r1, [r0, #112]	@ 0x70
9000fcb4:	e4fd      	b.n	9000f6b2 <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000fcb6:	4817      	ldr	r0, [pc, #92]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fcb8:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000fcba:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000fcbe:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000fcc0:	2d00      	cmp	r5, #0
9000fcc2:	f040 80b5 	bne.w	9000fe30 <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000fcc6:	f7ff bbe7 	b.w	9000f498 <HAL_RCCEx_PeriphCLKConfig+0x164>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000fcca:	4812      	ldr	r0, [pc, #72]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fccc:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000fcce:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000fcd2:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000fcd4:	2d00      	cmp	r5, #0
9000fcd6:	f040 80ae 	bne.w	9000fe36 <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000fcda:	e422      	b.n	9000f522 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000fcdc:	480d      	ldr	r0, [pc, #52]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fcde:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000fce0:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000fce4:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000fce6:	2d00      	cmp	r5, #0
9000fce8:	f040 809f 	bne.w	9000fe2a <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000fcec:	f7ff bba9 	b.w	9000f442 <HAL_RCCEx_PeriphCLKConfig+0x10e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000fcf0:	4808      	ldr	r0, [pc, #32]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fcf2:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000fcf4:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000fcf8:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000fcfa:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000fcfc:	2d00      	cmp	r5, #0
9000fcfe:	f040 81ad 	bne.w	9001005c <HAL_RCCEx_PeriphCLKConfig+0xd28>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000fd02:	4f04      	ldr	r7, [pc, #16]	@ (9000fd14 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000fd04:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9000fd06:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000fd08:	f021 0107 	bic.w	r1, r1, #7
9000fd0c:	4301      	orrs	r1, r0
9000fd0e:	6539      	str	r1, [r7, #80]	@ 0x50
9000fd10:	f7ff bb4d 	b.w	9000f3ae <HAL_RCCEx_PeriphCLKConfig+0x7a>
9000fd14:	58024400 	.word	0x58024400
9000fd18:	58024800 	.word	0x58024800
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000fd1c:	48bb      	ldr	r0, [pc, #748]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000fd1e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000fd20:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000fd24:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000fd26:	2d00      	cmp	r5, #0
9000fd28:	d17c      	bne.n	9000fe24 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000fd2a:	f7ff bb60 	b.w	9000f3ee <HAL_RCCEx_PeriphCLKConfig+0xba>
    return HAL_ERROR;
9000fd2e:	2501      	movs	r5, #1
9000fd30:	e69a      	b.n	9000fa68 <HAL_RCCEx_PeriphCLKConfig+0x734>
9000fd32:	2501      	movs	r5, #1
9000fd34:	e6aa      	b.n	9000fa8c <HAL_RCCEx_PeriphCLKConfig+0x758>
    return HAL_ERROR;
9000fd36:	2501      	movs	r5, #1
9000fd38:	e6ba      	b.n	9000fab0 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000fd3a:	0691      	lsls	r1, r2, #26
9000fd3c:	f57f af59 	bpl.w	9000fbf2 <HAL_RCCEx_PeriphCLKConfig+0x8be>
    return HAL_ERROR;
9000fd40:	2501      	movs	r5, #1
9000fd42:	e706      	b.n	9000fb52 <HAL_RCCEx_PeriphCLKConfig+0x81e>
    return HAL_ERROR;
9000fd44:	2501      	movs	r5, #1
9000fd46:	e67d      	b.n	9000fa44 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000fd48:	49b0      	ldr	r1, [pc, #704]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000fd4a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000fd4c:	f001 0103 	and.w	r1, r1, #3
9000fd50:	2903      	cmp	r1, #3
9000fd52:	f000 820a 	beq.w	9001016a <HAL_RCCEx_PeriphCLKConfig+0xe36>
9000fd56:	2102      	movs	r1, #2
9000fd58:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000fd5c:	f7ff fa78 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000fd60:	2800      	cmp	r0, #0
9000fd62:	f000 820f 	beq.w	90010184 <HAL_RCCEx_PeriphCLKConfig+0xe50>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000fd66:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
        status = HAL_ERROR;
9000fd6a:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000fd6c:	e9d4 3200 	ldrd	r3, r2, [r4]
9000fd70:	e59a      	b.n	9000f8a8 <HAL_RCCEx_PeriphCLKConfig+0x574>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000fd72:	49a6      	ldr	r1, [pc, #664]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000fd74:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000fd76:	f001 0103 	and.w	r1, r1, #3
9000fd7a:	2903      	cmp	r1, #3
9000fd7c:	f000 81f8 	beq.w	90010170 <HAL_RCCEx_PeriphCLKConfig+0xe3c>
9000fd80:	2102      	movs	r1, #2
9000fd82:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000fd86:	f7ff fa63 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000fd8a:	2800      	cmp	r0, #0
9000fd8c:	f040 81f3 	bne.w	90010176 <HAL_RCCEx_PeriphCLKConfig+0xe42>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000fd90:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000fd94:	e9d4 3200 	ldrd	r3, r2, [r4]
9000fd98:	e594      	b.n	9000f8c4 <HAL_RCCEx_PeriphCLKConfig+0x590>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000fd9a:	4f9c      	ldr	r7, [pc, #624]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000fd9c:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
9000fd9e:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000fda2:	62f8      	str	r0, [r7, #44]	@ 0x2c
    if (ret == HAL_OK)
9000fda4:	2d00      	cmp	r5, #0
9000fda6:	f47f adfc 	bne.w	9000f9a2 <HAL_RCCEx_PeriphCLKConfig+0x66e>
9000fdaa:	e6c5      	b.n	9000fb38 <HAL_RCCEx_PeriphCLKConfig+0x804>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000fdac:	4897      	ldr	r0, [pc, #604]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000fdae:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000fdb0:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000fdb4:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000fdb6:	2d00      	cmp	r5, #0
9000fdb8:	f43f adc9 	beq.w	9000f94e <HAL_RCCEx_PeriphCLKConfig+0x61a>
9000fdbc:	462e      	mov	r6, r5
9000fdbe:	e5cd      	b.n	9000f95c <HAL_RCCEx_PeriphCLKConfig+0x628>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000fdc0:	4992      	ldr	r1, [pc, #584]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000fdc2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000fdc4:	f001 0103 	and.w	r1, r1, #3
9000fdc8:	2903      	cmp	r1, #3
9000fdca:	f43f ac0c 	beq.w	9000f5e6 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
9000fdce:	2101      	movs	r1, #1
9000fdd0:	f104 0008 	add.w	r0, r4, #8
9000fdd4:	f7ff f9ca 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000fdd8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000fdda:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000fdde:	b98d      	cbnz	r5, 9000fe04 <HAL_RCCEx_PeriphCLKConfig+0xad0>
9000fde0:	e6e4      	b.n	9000fbac <HAL_RCCEx_PeriphCLKConfig+0x878>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000fde2:	488a      	ldr	r0, [pc, #552]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000fde4:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000fde6:	f000 0003 	and.w	r0, r0, #3
9000fdea:	2803      	cmp	r0, #3
9000fdec:	f43f ad7f 	beq.w	9000f8ee <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000fdf0:	f104 0008 	add.w	r0, r4, #8
9000fdf4:	f7ff f9ba 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000fdf8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000fdfa:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000fdfe:	2d00      	cmp	r5, #0
9000fe00:	d13f      	bne.n	9000fe82 <HAL_RCCEx_PeriphCLKConfig+0xb4e>
9000fe02:	e6ed      	b.n	9000fbe0 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
9000fe04:	462e      	mov	r6, r5
9000fe06:	f7ff bbf0 	b.w	9000f5ea <HAL_RCCEx_PeriphCLKConfig+0x2b6>
9000fe0a:	462e      	mov	r6, r5
9000fe0c:	e583      	b.n	9000f916 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
9000fe0e:	462e      	mov	r6, r5
9000fe10:	f7ff bb65 	b.w	9000f4de <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000fe14:	4f7d      	ldr	r7, [pc, #500]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000fe16:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
9000fe18:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000fe1a:	f021 0103 	bic.w	r1, r1, #3
9000fe1e:	4301      	orrs	r1, r0
9000fe20:	64f9      	str	r1, [r7, #76]	@ 0x4c
9000fe22:	e443      	b.n	9000f6ac <HAL_RCCEx_PeriphCLKConfig+0x378>
9000fe24:	462e      	mov	r6, r5
9000fe26:	f7ff bae9 	b.w	9000f3fc <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000fe2a:	462e      	mov	r6, r5
9000fe2c:	f7ff bb11 	b.w	9000f452 <HAL_RCCEx_PeriphCLKConfig+0x11e>
9000fe30:	462e      	mov	r6, r5
9000fe32:	f7ff bb39 	b.w	9000f4a8 <HAL_RCCEx_PeriphCLKConfig+0x174>
9000fe36:	462e      	mov	r6, r5
9000fe38:	f7ff bb7a 	b.w	9000f530 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000fe3c:	4605      	mov	r5, r0
9000fe3e:	e625      	b.n	9000fa8c <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000fe40:	4605      	mov	r5, r0
9000fe42:	e635      	b.n	9000fab0 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000fe44:	4605      	mov	r5, r0
9000fe46:	e5fd      	b.n	9000fa44 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000fe48:	4605      	mov	r5, r0
9000fe4a:	e60d      	b.n	9000fa68 <HAL_RCCEx_PeriphCLKConfig+0x734>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000fe4c:	4f6f      	ldr	r7, [pc, #444]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000fe4e:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
9000fe50:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000fe52:	f021 0107 	bic.w	r1, r1, #7
9000fe56:	4301      	orrs	r1, r0
9000fe58:	6579      	str	r1, [r7, #84]	@ 0x54
9000fe5a:	e47d      	b.n	9000f758 <HAL_RCCEx_PeriphCLKConfig+0x424>
9000fe5c:	462e      	mov	r6, r5
9000fe5e:	f7ff bb8e 	b.w	9000f57e <HAL_RCCEx_PeriphCLKConfig+0x24a>
9000fe62:	462e      	mov	r6, r5
9000fe64:	f7ff bbb1 	b.w	9000f5ca <HAL_RCCEx_PeriphCLKConfig+0x296>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000fe68:	4f68      	ldr	r7, [pc, #416]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000fe6a:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
9000fe6e:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000fe70:	f021 0107 	bic.w	r1, r1, #7
9000fe74:	4301      	orrs	r1, r0
9000fe76:	65b9      	str	r1, [r7, #88]	@ 0x58
9000fe78:	e493      	b.n	9000f7a2 <HAL_RCCEx_PeriphCLKConfig+0x46e>
9000fe7a:	462e      	mov	r6, r5
9000fe7c:	e4ba      	b.n	9000f7f4 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
9000fe7e:	462e      	mov	r6, r5
9000fe80:	e50a      	b.n	9000f898 <HAL_RCCEx_PeriphCLKConfig+0x564>
9000fe82:	462e      	mov	r6, r5
9000fe84:	e535      	b.n	9000f8f2 <HAL_RCCEx_PeriphCLKConfig+0x5be>
9000fe86:	462e      	mov	r6, r5
9000fe88:	e4dd      	b.n	9000f846 <HAL_RCCEx_PeriphCLKConfig+0x512>
9000fe8a:	462e      	mov	r6, r5
9000fe8c:	e443      	b.n	9000f716 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000fe8e:	495f      	ldr	r1, [pc, #380]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000fe90:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000fe92:	f001 0103 	and.w	r1, r1, #3
9000fe96:	2903      	cmp	r1, #3
9000fe98:	f43f ae2b 	beq.w	9000faf2 <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000fe9c:	2102      	movs	r1, #2
9000fe9e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000fea2:	f7ff f9d5 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
9000fea6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000fea8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000feac:	2d00      	cmp	r5, #0
9000feae:	d1e4      	bne.n	9000fe7a <HAL_RCCEx_PeriphCLKConfig+0xb46>
9000feb0:	e498      	b.n	9000f7e4 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000feb2:	4956      	ldr	r1, [pc, #344]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000feb4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000feb6:	f001 0103 	and.w	r1, r1, #3
9000feba:	2903      	cmp	r1, #3
9000febc:	f43f abc7 	beq.w	9000f64e <HAL_RCCEx_PeriphCLKConfig+0x31a>
9000fec0:	2102      	movs	r1, #2
9000fec2:	f104 0008 	add.w	r0, r4, #8
9000fec6:	f7ff f951 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000feca:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000fecc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000fed0:	2d00      	cmp	r5, #0
9000fed2:	d19c      	bne.n	9000fe0e <HAL_RCCEx_PeriphCLKConfig+0xada>
9000fed4:	f7ff bafc 	b.w	9000f4d0 <HAL_RCCEx_PeriphCLKConfig+0x19c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000fed8:	494c      	ldr	r1, [pc, #304]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000feda:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000fedc:	f001 0103 	and.w	r1, r1, #3
9000fee0:	2903      	cmp	r1, #3
9000fee2:	f43f ad16 	beq.w	9000f912 <HAL_RCCEx_PeriphCLKConfig+0x5de>
9000fee6:	2101      	movs	r1, #1
9000fee8:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000feec:	f7ff f9b0 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
9000fef0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000fef2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000fef6:	2d00      	cmp	r5, #0
9000fef8:	d187      	bne.n	9000fe0a <HAL_RCCEx_PeriphCLKConfig+0xad6>
9000fefa:	e646      	b.n	9000fb8a <HAL_RCCEx_PeriphCLKConfig+0x856>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000fefc:	4943      	ldr	r1, [pc, #268]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000fefe:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ff00:	f001 0103 	and.w	r1, r1, #3
9000ff04:	2903      	cmp	r1, #3
9000ff06:	f43f ae0e 	beq.w	9000fb26 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000ff0a:	2102      	movs	r1, #2
9000ff0c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ff10:	f7ff f99e 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
9000ff14:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000ff16:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ff1a:	2d00      	cmp	r5, #0
9000ff1c:	d1af      	bne.n	9000fe7e <HAL_RCCEx_PeriphCLKConfig+0xb4a>
9000ff1e:	e4b3      	b.n	9000f888 <HAL_RCCEx_PeriphCLKConfig+0x554>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ff20:	493a      	ldr	r1, [pc, #232]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000ff22:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ff24:	f001 0103 	and.w	r1, r1, #3
9000ff28:	2903      	cmp	r1, #3
9000ff2a:	f000 8131 	beq.w	90010190 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000ff2e:	2102      	movs	r1, #2
9000ff30:	f104 0008 	add.w	r0, r4, #8
9000ff34:	f7ff f91a 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
9000ff38:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000ff3a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ff3e:	2d00      	cmp	r5, #0
9000ff40:	f47f abb3 	bne.w	9000f6aa <HAL_RCCEx_PeriphCLKConfig+0x376>
9000ff44:	e766      	b.n	9000fe14 <HAL_RCCEx_PeriphCLKConfig+0xae0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ff46:	4931      	ldr	r1, [pc, #196]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000ff48:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ff4a:	f001 0103 	and.w	r1, r1, #3
9000ff4e:	2903      	cmp	r1, #3
9000ff50:	f43f addc 	beq.w	9000fb0c <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000ff54:	2102      	movs	r1, #2
9000ff56:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ff5a:	f7ff f979 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
9000ff5e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000ff60:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ff64:	2d00      	cmp	r5, #0
9000ff66:	d18e      	bne.n	9000fe86 <HAL_RCCEx_PeriphCLKConfig+0xb52>
9000ff68:	e465      	b.n	9000f836 <HAL_RCCEx_PeriphCLKConfig+0x502>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ff6a:	4928      	ldr	r1, [pc, #160]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000ff6c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ff6e:	f001 0103 	and.w	r1, r1, #3
9000ff72:	2903      	cmp	r1, #3
9000ff74:	f43f ab83 	beq.w	9000f67e <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000ff78:	2101      	movs	r1, #1
9000ff7a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ff7e:	f7ff f967 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
9000ff82:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000ff84:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ff88:	2d00      	cmp	r5, #0
9000ff8a:	f47f af67 	bne.w	9000fe5c <HAL_RCCEx_PeriphCLKConfig+0xb28>
9000ff8e:	f7ff baef 	b.w	9000f570 <HAL_RCCEx_PeriphCLKConfig+0x23c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ff92:	491e      	ldr	r1, [pc, #120]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000ff94:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ff96:	f001 0103 	and.w	r1, r1, #3
9000ff9a:	2903      	cmp	r1, #3
9000ff9c:	f43f ab7a 	beq.w	9000f694 <HAL_RCCEx_PeriphCLKConfig+0x360>
9000ffa0:	2101      	movs	r1, #1
9000ffa2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ffa6:	f7ff f953 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
9000ffaa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000ffac:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ffb0:	2d00      	cmp	r5, #0
9000ffb2:	f47f af56 	bne.w	9000fe62 <HAL_RCCEx_PeriphCLKConfig+0xb2e>
9000ffb6:	f7ff bb00 	b.w	9000f5ba <HAL_RCCEx_PeriphCLKConfig+0x286>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ffba:	4914      	ldr	r1, [pc, #80]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000ffbc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ffbe:	f001 0103 	and.w	r1, r1, #3
9000ffc2:	2903      	cmp	r1, #3
9000ffc4:	f43f ab3d 	beq.w	9000f642 <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000ffc8:	2100      	movs	r1, #0
9000ffca:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ffce:	f7ff f93f 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
9000ffd2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000ffd4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ffd8:	2d00      	cmp	r5, #0
9000ffda:	f47f af29 	bne.w	9000fe30 <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000ffde:	f7ff ba5b 	b.w	9000f498 <HAL_RCCEx_PeriphCLKConfig+0x164>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ffe2:	490a      	ldr	r1, [pc, #40]	@ (9001000c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000ffe4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ffe6:	f001 0103 	and.w	r1, r1, #3
9000ffea:	2903      	cmp	r1, #3
9000ffec:	f43f ab3a 	beq.w	9000f664 <HAL_RCCEx_PeriphCLKConfig+0x330>
9000fff0:	2100      	movs	r1, #0
9000fff2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000fff6:	f7ff f92b 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
9000fffa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000fffc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
90010000:	2d00      	cmp	r5, #0
90010002:	f47f af18 	bne.w	9000fe36 <HAL_RCCEx_PeriphCLKConfig+0xb02>
90010006:	f7ff ba8c 	b.w	9000f522 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
9001000a:	bf00      	nop
9001000c:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
90010010:	4973      	ldr	r1, [pc, #460]	@ (900101e0 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
90010012:	6a89      	ldr	r1, [r1, #40]	@ 0x28
90010014:	f001 0103 	and.w	r1, r1, #3
90010018:	2903      	cmp	r1, #3
9001001a:	f43f ae07 	beq.w	9000fc2c <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9001001e:	2102      	movs	r1, #2
90010020:	3028      	adds	r0, #40	@ 0x28
90010022:	f7ff f915 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
90010026:	4606      	mov	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
90010028:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9001002c:	2e00      	cmp	r6, #0
9001002e:	f47f a9b0 	bne.w	9000f392 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
90010032:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
90010034:	f7ff b9a6 	b.w	9000f384 <HAL_RCCEx_PeriphCLKConfig+0x50>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
90010038:	4969      	ldr	r1, [pc, #420]	@ (900101e0 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9001003a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9001003c:	f001 0103 	and.w	r1, r1, #3
90010040:	2903      	cmp	r1, #3
90010042:	f43f a9b2 	beq.w	9000f3aa <HAL_RCCEx_PeriphCLKConfig+0x76>
90010046:	2100      	movs	r1, #0
90010048:	f104 0008 	add.w	r0, r4, #8
9001004c:	f7ff f88e 	bl	9000f16c <RCCEx_PLL2_Config.part.0>
90010050:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
90010052:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
90010056:	2d00      	cmp	r5, #0
90010058:	f43f ae53 	beq.w	9000fd02 <HAL_RCCEx_PeriphCLKConfig+0x9ce>
9001005c:	462e      	mov	r6, r5
9001005e:	f7ff b9a6 	b.w	9000f3ae <HAL_RCCEx_PeriphCLKConfig+0x7a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
90010062:	495f      	ldr	r1, [pc, #380]	@ (900101e0 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
90010064:	6a89      	ldr	r1, [r1, #40]	@ 0x28
90010066:	f001 0103 	and.w	r1, r1, #3
9001006a:	2903      	cmp	r1, #3
9001006c:	f43f a99d 	beq.w	9000f3aa <HAL_RCCEx_PeriphCLKConfig+0x76>
90010070:	2100      	movs	r1, #0
90010072:	f104 0028 	add.w	r0, r4, #40	@ 0x28
90010076:	f7ff f8eb 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
9001007a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9001007c:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
90010080:	e63c      	b.n	9000fcfc <HAL_RCCEx_PeriphCLKConfig+0x9c8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
90010082:	4957      	ldr	r1, [pc, #348]	@ (900101e0 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
90010084:	6a89      	ldr	r1, [r1, #40]	@ 0x28
90010086:	f001 0103 	and.w	r1, r1, #3
9001008a:	2903      	cmp	r1, #3
9001008c:	f43f aac0 	beq.w	9000f610 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
90010090:	2100      	movs	r1, #0
90010092:	f104 0028 	add.w	r0, r4, #40	@ 0x28
90010096:	f7ff f8db 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
9001009a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9001009c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
900100a0:	2d00      	cmp	r5, #0
900100a2:	f47f aebf 	bne.w	9000fe24 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
900100a6:	f7ff b9a2 	b.w	9000f3ee <HAL_RCCEx_PeriphCLKConfig+0xba>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
900100aa:	494d      	ldr	r1, [pc, #308]	@ (900101e0 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
900100ac:	6a89      	ldr	r1, [r1, #40]	@ 0x28
900100ae:	f001 0103 	and.w	r1, r1, #3
900100b2:	2903      	cmp	r1, #3
900100b4:	f43f aaba 	beq.w	9000f62c <HAL_RCCEx_PeriphCLKConfig+0x2f8>
900100b8:	2100      	movs	r1, #0
900100ba:	f104 0028 	add.w	r0, r4, #40	@ 0x28
900100be:	f7ff f8c7 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
900100c2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
900100c4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
900100c8:	2d00      	cmp	r5, #0
900100ca:	f47f aeae 	bne.w	9000fe2a <HAL_RCCEx_PeriphCLKConfig+0xaf6>
900100ce:	f7ff b9b8 	b.w	9000f442 <HAL_RCCEx_PeriphCLKConfig+0x10e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
900100d2:	4943      	ldr	r1, [pc, #268]	@ (900101e0 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
900100d4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
900100d6:	f001 0103 	and.w	r1, r1, #3
900100da:	2903      	cmp	r1, #3
900100dc:	d041      	beq.n	90010162 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
900100de:	2101      	movs	r1, #1
900100e0:	f104 0028 	add.w	r0, r4, #40	@ 0x28
900100e4:	f7ff f8b4 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
900100e8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
900100ea:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
900100ee:	2d00      	cmp	r5, #0
900100f0:	f47f ab56 	bne.w	9000f7a0 <HAL_RCCEx_PeriphCLKConfig+0x46c>
900100f4:	e6b8      	b.n	9000fe68 <HAL_RCCEx_PeriphCLKConfig+0xb34>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
900100f6:	493a      	ldr	r1, [pc, #232]	@ (900101e0 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
900100f8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
900100fa:	f001 0103 	and.w	r1, r1, #3
900100fe:	2903      	cmp	r1, #3
90010100:	d02b      	beq.n	9001015a <HAL_RCCEx_PeriphCLKConfig+0xe26>
90010102:	2101      	movs	r1, #1
90010104:	f104 0028 	add.w	r0, r4, #40	@ 0x28
90010108:	f7ff f8a2 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
9001010c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9001010e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
90010112:	2d00      	cmp	r5, #0
90010114:	f47f ab1f 	bne.w	9000f756 <HAL_RCCEx_PeriphCLKConfig+0x422>
90010118:	e698      	b.n	9000fe4c <HAL_RCCEx_PeriphCLKConfig+0xb18>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9001011a:	4931      	ldr	r1, [pc, #196]	@ (900101e0 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9001011c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9001011e:	f001 0103 	and.w	r1, r1, #3
90010122:	2903      	cmp	r1, #3
90010124:	f43f aaf5 	beq.w	9000f712 <HAL_RCCEx_PeriphCLKConfig+0x3de>
90010128:	2101      	movs	r1, #1
9001012a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9001012e:	f7ff f88f 	bl	9000f250 <RCCEx_PLL3_Config.part.0>
90010132:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
90010134:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
90010138:	2d00      	cmp	r5, #0
9001013a:	f47f aea6 	bne.w	9000fe8a <HAL_RCCEx_PeriphCLKConfig+0xb56>
9001013e:	e56d      	b.n	9000fc1c <HAL_RCCEx_PeriphCLKConfig+0x8e8>
        ret = HAL_TIMEOUT;
90010140:	2503      	movs	r5, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
90010142:	462e      	mov	r6, r5
90010144:	e9d4 3200 	ldrd	r3, r2, [r4]
90010148:	f7ff bab3 	b.w	9000f6b2 <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9001014c:	4d24      	ldr	r5, [pc, #144]	@ (900101e0 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9001014e:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
90010150:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
90010154:	62e8      	str	r0, [r5, #44]	@ 0x2c
    if (ret == HAL_OK)
90010156:	f7ff b915 	b.w	9000f384 <HAL_RCCEx_PeriphCLKConfig+0x50>
9001015a:	2601      	movs	r6, #1
9001015c:	4635      	mov	r5, r6
9001015e:	f7ff bafb 	b.w	9000f758 <HAL_RCCEx_PeriphCLKConfig+0x424>
90010162:	2601      	movs	r6, #1
90010164:	4635      	mov	r5, r6
90010166:	f7ff bb1c 	b.w	9000f7a2 <HAL_RCCEx_PeriphCLKConfig+0x46e>
        status = HAL_ERROR;
9001016a:	2601      	movs	r6, #1
9001016c:	f7ff bb9c 	b.w	9000f8a8 <HAL_RCCEx_PeriphCLKConfig+0x574>
        status = HAL_ERROR;
90010170:	2601      	movs	r6, #1
90010172:	f7ff bba7 	b.w	9000f8c4 <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
90010176:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
        status = HAL_ERROR;
9001017a:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9001017c:	e9d4 3200 	ldrd	r3, r2, [r4]
90010180:	f7ff bba0 	b.w	9000f8c4 <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
90010184:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
90010188:	e9d4 3200 	ldrd	r3, r2, [r4]
9001018c:	f7ff bb8c 	b.w	9000f8a8 <HAL_RCCEx_PeriphCLKConfig+0x574>
90010190:	2601      	movs	r6, #1
90010192:	4635      	mov	r5, r6
90010194:	f7ff ba8a 	b.w	9000f6ac <HAL_RCCEx_PeriphCLKConfig+0x378>
        tickstart = HAL_GetTick();
90010198:	f7fa fc3e 	bl	9000aa18 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9001019c:	f8df 8040 	ldr.w	r8, [pc, #64]	@ 900101e0 <HAL_RCCEx_PeriphCLKConfig+0xeac>
        tickstart = HAL_GetTick();
900101a0:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
900101a2:	f241 3988 	movw	r9, #5000	@ 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
900101a6:	e004      	b.n	900101b2 <HAL_RCCEx_PeriphCLKConfig+0xe7e>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
900101a8:	f7fa fc36 	bl	9000aa18 <HAL_GetTick>
900101ac:	1bc0      	subs	r0, r0, r7
900101ae:	4548      	cmp	r0, r9
900101b0:	d810      	bhi.n	900101d4 <HAL_RCCEx_PeriphCLKConfig+0xea0>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
900101b2:	f8d8 3070 	ldr.w	r3, [r8, #112]	@ 0x70
900101b6:	079b      	lsls	r3, r3, #30
900101b8:	d5f6      	bpl.n	900101a8 <HAL_RCCEx_PeriphCLKConfig+0xe74>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
900101ba:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
900101be:	e566      	b.n	9000fc8e <HAL_RCCEx_PeriphCLKConfig+0x95a>
900101c0:	4807      	ldr	r0, [pc, #28]	@ (900101e0 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
900101c2:	4a08      	ldr	r2, [pc, #32]	@ (900101e4 <HAL_RCCEx_PeriphCLKConfig+0xeb0>)
900101c4:	6901      	ldr	r1, [r0, #16]
900101c6:	ea02 1213 	and.w	r2, r2, r3, lsr #4
900101ca:	f421 517c 	bic.w	r1, r1, #16128	@ 0x3f00
900101ce:	430a      	orrs	r2, r1
900101d0:	6102      	str	r2, [r0, #16]
900101d2:	e567      	b.n	9000fca4 <HAL_RCCEx_PeriphCLKConfig+0x970>
        status = ret;
900101d4:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
900101d6:	e9d4 3200 	ldrd	r3, r2, [r4]
900101da:	4635      	mov	r5, r6
900101dc:	f7ff ba69 	b.w	9000f6b2 <HAL_RCCEx_PeriphCLKConfig+0x37e>
900101e0:	58024400 	.word	0x58024400
900101e4:	00ffffcf 	.word	0x00ffffcf

900101e8 <HAL_RCCEx_GetD3PCLK1Freq>:
{
900101e8:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
900101ea:	f7fe fec3 	bl	9000ef74 <HAL_RCC_GetHCLKFreq>
900101ee:	4b05      	ldr	r3, [pc, #20]	@ (90010204 <HAL_RCCEx_GetD3PCLK1Freq+0x1c>)
900101f0:	4a05      	ldr	r2, [pc, #20]	@ (90010208 <HAL_RCCEx_GetD3PCLK1Freq+0x20>)
900101f2:	6a1b      	ldr	r3, [r3, #32]
900101f4:	f3c3 1302 	ubfx	r3, r3, #4, #3
900101f8:	5cd3      	ldrb	r3, [r2, r3]
900101fa:	f003 031f 	and.w	r3, r3, #31
}
900101fe:	40d8      	lsrs	r0, r3
90010200:	bd08      	pop	{r3, pc}
90010202:	bf00      	nop
90010204:	58024400 	.word	0x58024400
90010208:	9002f634 	.word	0x9002f634

9001020c <HAL_RCCEx_GetPLL2ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9001020c:	4a47      	ldr	r2, [pc, #284]	@ (9001032c <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
{
9001020e:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
90010210:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
90010212:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
90010214:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll2m != 0U)
90010216:	f415 3f7c 	tst.w	r5, #258048	@ 0x3f000
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9001021a:	f3c5 3305 	ubfx	r3, r5, #12, #6
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9001021e:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
  if (pll2m != 0U)
90010220:	d05b      	beq.n	900102da <HAL_RCCEx_GetPLL2ClockFreq+0xce>
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
90010222:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
90010226:	f3c6 1600 	ubfx	r6, r6, #4, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9001022a:	f004 0403 	and.w	r4, r4, #3
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9001022e:	ee07 3a90 	vmov	s15, r3
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
90010232:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
90010236:	2c01      	cmp	r4, #1
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
90010238:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9001023c:	ee06 1a90 	vmov	s13, r1
90010240:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
90010244:	d003      	beq.n	9001024e <HAL_RCCEx_GetPLL2ClockFreq+0x42>
90010246:	2c02      	cmp	r4, #2
90010248:	d06a      	beq.n	90010320 <HAL_RCCEx_GetPLL2ClockFreq+0x114>
9001024a:	2c00      	cmp	r4, #0
9001024c:	d04a      	beq.n	900102e4 <HAL_RCCEx_GetPLL2ClockFreq+0xd8>
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9001024e:	eddf 7a38 	vldr	s15, [pc, #224]	@ 90010330 <HAL_RCCEx_GetPLL2ClockFreq+0x124>
90010252:	ee87 6a87 	vdiv.f32	s12, s15, s14
90010256:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90010258:	f3c3 0308 	ubfx	r3, r3, #0, #9
9001025c:	ee07 3a90 	vmov	s15, r3
90010260:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
90010264:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90010268:	ee77 7aa6 	vadd.f32	s15, s15, s13
9001026c:	ee77 7aa5 	vadd.f32	s15, s15, s11
90010270:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
90010274:	4a2d      	ldr	r2, [pc, #180]	@ (9001032c <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
90010276:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9001027a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9001027c:	f3c3 2346 	ubfx	r3, r3, #9, #7
90010280:	ee07 3a10 	vmov	s14, r3
90010284:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
90010288:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9001028a:	ee37 7a06 	vadd.f32	s14, s14, s12
9001028e:	eec7 6a87 	vdiv.f32	s13, s15, s14
90010292:	eefc 6ae6 	vcvt.u32.f32	s13, s13
90010296:	edc0 6a00 	vstr	s13, [r0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
9001029a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9001029c:	f3c3 4306 	ubfx	r3, r3, #16, #7
900102a0:	ee07 3a10 	vmov	s14, r3
900102a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900102a8:	ee37 7a06 	vadd.f32	s14, s14, s12
900102ac:	eec7 6a87 	vdiv.f32	s13, s15, s14
900102b0:	eefc 6ae6 	vcvt.u32.f32	s13, s13
900102b4:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
900102b8:	6b93      	ldr	r3, [r2, #56]	@ 0x38
900102ba:	f3c3 6306 	ubfx	r3, r3, #24, #7
900102be:	ee06 3a90 	vmov	s13, r3
900102c2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900102c6:	ee76 6a86 	vadd.f32	s13, s13, s12
900102ca:	ee87 7aa6 	vdiv.f32	s14, s15, s13
900102ce:	eefc 7ac7 	vcvt.u32.f32	s15, s14
900102d2:	ee17 3a90 	vmov	r3, s15
900102d6:	6083      	str	r3, [r0, #8]
}
900102d8:	4770      	bx	lr
900102da:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = 0U;
900102dc:	e9c0 3300 	strd	r3, r3, [r0]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
900102e0:	6083      	str	r3, [r0, #8]
}
900102e2:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
900102e4:	6813      	ldr	r3, [r2, #0]
900102e6:	069b      	lsls	r3, r3, #26
900102e8:	d51d      	bpl.n	90010326 <HAL_RCCEx_GetPLL2ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
900102ea:	6814      	ldr	r4, [r2, #0]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
900102ec:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
900102f0:	6b93      	ldr	r3, [r2, #56]	@ 0x38
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
900102f2:	4910      	ldr	r1, [pc, #64]	@ (90010334 <HAL_RCCEx_GetPLL2ClockFreq+0x128>)
900102f4:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
900102f8:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
900102fc:	40d1      	lsrs	r1, r2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
900102fe:	ee07 3a90 	vmov	s15, r3
90010302:	ee06 1a10 	vmov	s12, r1
90010306:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001030a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9001030e:	ee77 6aa6 	vadd.f32	s13, s15, s13
90010312:	eec6 7a07 	vdiv.f32	s15, s12, s14
90010316:	ee36 7aa5 	vadd.f32	s14, s13, s11
9001031a:	ee67 7a87 	vmul.f32	s15, s15, s14
9001031e:	e7a9      	b.n	90010274 <HAL_RCCEx_GetPLL2ClockFreq+0x68>
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
90010320:	eddf 7a05 	vldr	s15, [pc, #20]	@ 90010338 <HAL_RCCEx_GetPLL2ClockFreq+0x12c>
90010324:	e795      	b.n	90010252 <HAL_RCCEx_GetPLL2ClockFreq+0x46>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
90010326:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9001033c <HAL_RCCEx_GetPLL2ClockFreq+0x130>
9001032a:	e792      	b.n	90010252 <HAL_RCCEx_GetPLL2ClockFreq+0x46>
9001032c:	58024400 	.word	0x58024400
90010330:	4a742400 	.word	0x4a742400
90010334:	03d09000 	.word	0x03d09000
90010338:	4bbebc20 	.word	0x4bbebc20
9001033c:	4c742400 	.word	0x4c742400

90010340 <HAL_RCCEx_GetPLL3ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
90010340:	4a47      	ldr	r2, [pc, #284]	@ (90010460 <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
{
90010342:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
90010344:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
90010346:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
90010348:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll3m != 0U)
9001034a:	f015 7f7c 	tst.w	r5, #66060288	@ 0x3f00000
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9001034e:	f3c5 5305 	ubfx	r3, r5, #20, #6
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
90010352:	6c51      	ldr	r1, [r2, #68]	@ 0x44
  if (pll3m != 0U)
90010354:	d05b      	beq.n	9001040e <HAL_RCCEx_GetPLL3ClockFreq+0xce>
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
90010356:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9001035a:	f3c6 2600 	ubfx	r6, r6, #8, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9001035e:	f004 0403 	and.w	r4, r4, #3
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
90010362:	ee07 3a90 	vmov	s15, r3
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
90010366:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9001036a:	2c01      	cmp	r4, #1
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9001036c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
90010370:	ee06 1a90 	vmov	s13, r1
90010374:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
90010378:	d003      	beq.n	90010382 <HAL_RCCEx_GetPLL3ClockFreq+0x42>
9001037a:	2c02      	cmp	r4, #2
9001037c:	d06a      	beq.n	90010454 <HAL_RCCEx_GetPLL3ClockFreq+0x114>
9001037e:	2c00      	cmp	r4, #0
90010380:	d04a      	beq.n	90010418 <HAL_RCCEx_GetPLL3ClockFreq+0xd8>
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
90010382:	eddf 7a38 	vldr	s15, [pc, #224]	@ 90010464 <HAL_RCCEx_GetPLL3ClockFreq+0x124>
90010386:	ee87 6a87 	vdiv.f32	s12, s15, s14
9001038a:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9001038c:	f3c3 0308 	ubfx	r3, r3, #0, #9
90010390:	ee07 3a90 	vmov	s15, r3
90010394:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
90010398:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001039c:	ee77 7aa6 	vadd.f32	s15, s15, s13
900103a0:	ee77 7aa5 	vadd.f32	s15, s15, s11
900103a4:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
900103a8:	4a2d      	ldr	r2, [pc, #180]	@ (90010460 <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
900103aa:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
900103ae:	6c13      	ldr	r3, [r2, #64]	@ 0x40
900103b0:	f3c3 2346 	ubfx	r3, r3, #9, #7
900103b4:	ee07 3a10 	vmov	s14, r3
900103b8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
900103bc:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
900103be:	ee37 7a06 	vadd.f32	s14, s14, s12
900103c2:	eec7 6a87 	vdiv.f32	s13, s15, s14
900103c6:	eefc 6ae6 	vcvt.u32.f32	s13, s13
900103ca:	edc0 6a00 	vstr	s13, [r0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
900103ce:	6c13      	ldr	r3, [r2, #64]	@ 0x40
900103d0:	f3c3 4306 	ubfx	r3, r3, #16, #7
900103d4:	ee07 3a10 	vmov	s14, r3
900103d8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900103dc:	ee37 7a06 	vadd.f32	s14, s14, s12
900103e0:	eec7 6a87 	vdiv.f32	s13, s15, s14
900103e4:	eefc 6ae6 	vcvt.u32.f32	s13, s13
900103e8:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
900103ec:	6c13      	ldr	r3, [r2, #64]	@ 0x40
900103ee:	f3c3 6306 	ubfx	r3, r3, #24, #7
900103f2:	ee06 3a90 	vmov	s13, r3
900103f6:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900103fa:	ee76 6a86 	vadd.f32	s13, s13, s12
900103fe:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90010402:	eefc 7ac7 	vcvt.u32.f32	s15, s14
90010406:	ee17 3a90 	vmov	r3, s15
9001040a:	6083      	str	r3, [r0, #8]
}
9001040c:	4770      	bx	lr
9001040e:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = 0U;
90010410:	e9c0 3300 	strd	r3, r3, [r0]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
90010414:	6083      	str	r3, [r0, #8]
}
90010416:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
90010418:	6813      	ldr	r3, [r2, #0]
9001041a:	069b      	lsls	r3, r3, #26
9001041c:	d51d      	bpl.n	9001045a <HAL_RCCEx_GetPLL3ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9001041e:	6814      	ldr	r4, [r2, #0]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
90010420:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
90010424:	6c13      	ldr	r3, [r2, #64]	@ 0x40
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
90010426:	4910      	ldr	r1, [pc, #64]	@ (90010468 <HAL_RCCEx_GetPLL3ClockFreq+0x128>)
90010428:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9001042c:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
90010430:	40d1      	lsrs	r1, r2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
90010432:	ee07 3a90 	vmov	s15, r3
90010436:	ee06 1a10 	vmov	s12, r1
9001043a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001043e:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
90010442:	ee77 6aa6 	vadd.f32	s13, s15, s13
90010446:	eec6 7a07 	vdiv.f32	s15, s12, s14
9001044a:	ee36 7aa5 	vadd.f32	s14, s13, s11
9001044e:	ee67 7a87 	vmul.f32	s15, s15, s14
90010452:	e7a9      	b.n	900103a8 <HAL_RCCEx_GetPLL3ClockFreq+0x68>
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
90010454:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9001046c <HAL_RCCEx_GetPLL3ClockFreq+0x12c>
90010458:	e795      	b.n	90010386 <HAL_RCCEx_GetPLL3ClockFreq+0x46>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9001045a:	eddf 7a05 	vldr	s15, [pc, #20]	@ 90010470 <HAL_RCCEx_GetPLL3ClockFreq+0x130>
9001045e:	e792      	b.n	90010386 <HAL_RCCEx_GetPLL3ClockFreq+0x46>
90010460:	58024400 	.word	0x58024400
90010464:	4a742400 	.word	0x4a742400
90010468:	03d09000 	.word	0x03d09000
9001046c:	4bbebc20 	.word	0x4bbebc20
90010470:	4c742400 	.word	0x4c742400

90010474 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
90010474:	b318      	cbz	r0, 900104be <HAL_SDRAM_Init+0x4a>
{
90010476:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
90010478:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9001047c:	4604      	mov	r4, r0
9001047e:	460d      	mov	r5, r1
90010480:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90010484:	b1b3      	cbz	r3, 900104b4 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
90010486:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
90010488:	2302      	movs	r3, #2
9001048a:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9001048e:	f851 0b04 	ldr.w	r0, [r1], #4
90010492:	f001 f809 	bl	900114a8 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
90010496:	6862      	ldr	r2, [r4, #4]
90010498:	4629      	mov	r1, r5
9001049a:	6820      	ldr	r0, [r4, #0]
9001049c:	f001 f83c 	bl	90011518 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
900104a0:	4a08      	ldr	r2, [pc, #32]	@ (900104c4 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
900104a2:	2101      	movs	r1, #1

  return HAL_OK;
900104a4:	2000      	movs	r0, #0
  __FMC_ENABLE();
900104a6:	6813      	ldr	r3, [r2, #0]
900104a8:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
900104ac:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
900104ae:	f884 102c 	strb.w	r1, [r4, #44]	@ 0x2c
}
900104b2:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
900104b4:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
900104b8:	f7f1 f8e8 	bl	9000168c <HAL_SDRAM_MspInit>
900104bc:	e7e3      	b.n	90010486 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
900104be:	2001      	movs	r0, #1
}
900104c0:	4770      	bx	lr
900104c2:	bf00      	nop
900104c4:	52004000 	.word	0x52004000

900104c8 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
900104c8:	b510      	push	{r4, lr}
900104ca:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
900104cc:	f7f1 f95a 	bl	90001784 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
900104d0:	e9d4 0100 	ldrd	r0, r1, [r4]
900104d4:	f001 f85e 	bl	90011594 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
900104d8:	2000      	movs	r0, #0
900104da:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
900104de:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
900104e2:	bd10      	pop	{r4, pc}

900104e4 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
900104e4:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
900104e6:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
900104ea:	4605      	mov	r5, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
900104ec:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
900104ee:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
900104f0:	d004      	beq.n	900104fc <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
900104f2:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
900104f6:	2c01      	cmp	r4, #1
900104f8:	d001      	beq.n	900104fe <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
900104fa:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
900104fc:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
900104fe:	2302      	movs	r3, #2
90010500:	460e      	mov	r6, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
90010502:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
90010504:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
90010508:	f001 f858 	bl	900115bc <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9001050c:	6833      	ldr	r3, [r6, #0]
9001050e:	2b02      	cmp	r3, #2
90010510:	d003      	beq.n	9001051a <HAL_SDRAM_SendCommand+0x36>
      hsdram->State = HAL_SDRAM_STATE_READY;
90010512:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
90010516:	2000      	movs	r0, #0
}
90010518:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9001051a:	2305      	movs	r3, #5
9001051c:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
90010520:	e7f9      	b.n	90010516 <HAL_SDRAM_SendCommand+0x32>
90010522:	bf00      	nop

90010524 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
90010524:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
90010526:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9001052a:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9001052c:	2b02      	cmp	r3, #2
9001052e:	b2d8      	uxtb	r0, r3
90010530:	d005      	beq.n	9001053e <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
90010532:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
90010536:	2b01      	cmp	r3, #1
90010538:	b2dd      	uxtb	r5, r3
9001053a:	d001      	beq.n	90010540 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9001053c:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9001053e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
90010540:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
90010542:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
90010544:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
90010548:	f001 f850 	bl	900115ec <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9001054c:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9001054e:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
90010552:	bd38      	pop	{r3, r4, r5, pc}

90010554 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
90010554:	4770      	bx	lr
90010556:	bf00      	nop

90010558 <HAL_TIM_Base_Init>:
  if (htim == NULL)
90010558:	2800      	cmp	r0, #0
9001055a:	f000 808c 	beq.w	90010676 <HAL_TIM_Base_Init+0x11e>
{
9001055e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
90010560:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
90010564:	4604      	mov	r4, r0
90010566:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9001056a:	2b00      	cmp	r3, #0
9001056c:	d073      	beq.n	90010656 <HAL_TIM_Base_Init+0xfe>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9001056e:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
90010570:	2302      	movs	r3, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
90010572:	4942      	ldr	r1, [pc, #264]	@ (9001067c <HAL_TIM_Base_Init+0x124>)
90010574:	4842      	ldr	r0, [pc, #264]	@ (90010680 <HAL_TIM_Base_Init+0x128>)
90010576:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9001057a:	eba2 0101 	sub.w	r1, r2, r1
  htim->State = HAL_TIM_STATE_BUSY;
9001057e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
90010582:	eba2 0e00 	sub.w	lr, r2, r0
  tmpcr1 = TIMx->CR1;
90010586:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
90010588:	fab1 f181 	clz	r1, r1
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9001058c:	69a7      	ldr	r7, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9001058e:	fabe fe8e 	clz	lr, lr

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
90010592:	6865      	ldr	r5, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
90010594:	ea4f 1151 	mov.w	r1, r1, lsr #5
  TIMx->ARR = (uint32_t)Structure->Period ;
90010598:	68e6      	ldr	r6, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9001059a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9001059e:	d020      	beq.n	900105e2 <HAL_TIM_Base_Init+0x8a>
900105a0:	b9f9      	cbnz	r1, 900105e2 <HAL_TIM_Base_Init+0x8a>
900105a2:	f8df c0ec 	ldr.w	ip, [pc, #236]	@ 90010690 <HAL_TIM_Base_Init+0x138>
900105a6:	4562      	cmp	r2, ip
900105a8:	d01b      	beq.n	900105e2 <HAL_TIM_Base_Init+0x8a>
900105aa:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
900105ae:	4562      	cmp	r2, ip
900105b0:	d017      	beq.n	900105e2 <HAL_TIM_Base_Init+0x8a>
900105b2:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
900105b6:	4562      	cmp	r2, ip
900105b8:	d013      	beq.n	900105e2 <HAL_TIM_Base_Init+0x8a>
900105ba:	f1be 0f00 	cmp.w	lr, #0
900105be:	d110      	bne.n	900105e2 <HAL_TIM_Base_Init+0x8a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
900105c0:	4830      	ldr	r0, [pc, #192]	@ (90010684 <HAL_TIM_Base_Init+0x12c>)
900105c2:	4931      	ldr	r1, [pc, #196]	@ (90010688 <HAL_TIM_Base_Init+0x130>)
900105c4:	428a      	cmp	r2, r1
900105c6:	bf18      	it	ne
900105c8:	4282      	cmpne	r2, r0
900105ca:	d049      	beq.n	90010660 <HAL_TIM_Base_Init+0x108>
900105cc:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
900105d0:	428a      	cmp	r2, r1
900105d2:	d045      	beq.n	90010660 <HAL_TIM_Base_Init+0x108>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
900105d4:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
900105d8:	433b      	orrs	r3, r7
  TIMx->CR1 = tmpcr1;
900105da:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
900105dc:	62d6      	str	r6, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
900105de:	6295      	str	r5, [r2, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
900105e0:	e01d      	b.n	9001061e <HAL_TIM_Base_Init+0xc6>
    tmpcr1 |= Structure->CounterMode;
900105e2:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
900105e4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
900105e8:	4303      	orrs	r3, r0
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
900105ea:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
900105ec:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
900105f0:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
900105f2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
900105f6:	433b      	orrs	r3, r7
  TIMx->CR1 = tmpcr1;
900105f8:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
900105fa:	62d6      	str	r6, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
900105fc:	6295      	str	r5, [r2, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
900105fe:	b961      	cbnz	r1, 9001061a <HAL_TIM_Base_Init+0xc2>
90010600:	f1be 0f00 	cmp.w	lr, #0
90010604:	d109      	bne.n	9001061a <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
90010606:	4921      	ldr	r1, [pc, #132]	@ (9001068c <HAL_TIM_Base_Init+0x134>)
90010608:	4b1e      	ldr	r3, [pc, #120]	@ (90010684 <HAL_TIM_Base_Init+0x12c>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9001060a:	429a      	cmp	r2, r3
9001060c:	bf18      	it	ne
9001060e:	428a      	cmpne	r2, r1
90010610:	d003      	beq.n	9001061a <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
90010612:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
90010616:	429a      	cmp	r2, r3
90010618:	d101      	bne.n	9001061e <HAL_TIM_Base_Init+0xc6>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9001061a:	6963      	ldr	r3, [r4, #20]
9001061c:	6313      	str	r3, [r2, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9001061e:	2301      	movs	r3, #1
  return HAL_OK;
90010620:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
90010622:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
90010624:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
90010628:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
9001062c:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
90010630:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90010634:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
90010638:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9001063c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
90010640:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
90010644:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
90010648:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
9001064c:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
90010650:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
90010654:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    htim->Lock = HAL_UNLOCKED;
90010656:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9001065a:	f7ff ff7b 	bl	90010554 <HAL_TIM_Base_MspInit>
9001065e:	e786      	b.n	9001056e <HAL_TIM_Base_Init+0x16>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
90010660:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
90010662:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
90010666:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
90010668:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9001066c:	433b      	orrs	r3, r7
  TIMx->CR1 = tmpcr1;
9001066e:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
90010670:	62d6      	str	r6, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
90010672:	6295      	str	r5, [r2, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
90010674:	e7c7      	b.n	90010606 <HAL_TIM_Base_Init+0xae>
    return HAL_ERROR;
90010676:	2001      	movs	r0, #1
}
90010678:	4770      	bx	lr
9001067a:	bf00      	nop
9001067c:	40010000 	.word	0x40010000
90010680:	40010400 	.word	0x40010400
90010684:	40014000 	.word	0x40014000
90010688:	40014400 	.word	0x40014400
9001068c:	40014800 	.word	0x40014800
90010690:	40000400 	.word	0x40000400

90010694 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
90010694:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
90010698:	2b01      	cmp	r3, #1
9001069a:	d13d      	bne.n	90010718 <HAL_TIM_Base_Start_IT+0x84>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9001069c:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9001069e:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
900106a0:	4b1e      	ldr	r3, [pc, #120]	@ (9001071c <HAL_TIM_Base_Start_IT+0x88>)
900106a2:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
900106a6:	bf18      	it	ne
900106a8:	429a      	cmpne	r2, r3
{
900106aa:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
900106ac:	bf0c      	ite	eq
900106ae:	2301      	moveq	r3, #1
900106b0:	2300      	movne	r3, #0
900106b2:	4d1b      	ldr	r5, [pc, #108]	@ (90010720 <HAL_TIM_Base_Start_IT+0x8c>)
900106b4:	4c1b      	ldr	r4, [pc, #108]	@ (90010724 <HAL_TIM_Base_Start_IT+0x90>)
900106b6:	42aa      	cmp	r2, r5
900106b8:	bf08      	it	eq
900106ba:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
900106be:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
900106c2:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
900106c4:	42a2      	cmp	r2, r4
900106c6:	bf08      	it	eq
900106c8:	f043 0301 	orreq.w	r3, r3, #1
900106cc:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
900106d0:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
900106d4:	4814      	ldr	r0, [pc, #80]	@ (90010728 <HAL_TIM_Base_Start_IT+0x94>)
900106d6:	42a2      	cmp	r2, r4
900106d8:	bf08      	it	eq
900106da:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
900106de:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
900106e0:	4282      	cmp	r2, r0
900106e2:	bf08      	it	eq
900106e4:	f043 0301 	orreq.w	r3, r3, #1
900106e8:	4910      	ldr	r1, [pc, #64]	@ (9001072c <HAL_TIM_Base_Start_IT+0x98>)
900106ea:	428a      	cmp	r2, r1
900106ec:	bf08      	it	eq
900106ee:	f043 0301 	orreq.w	r3, r3, #1
900106f2:	b913      	cbnz	r3, 900106fa <HAL_TIM_Base_Start_IT+0x66>
900106f4:	4b0e      	ldr	r3, [pc, #56]	@ (90010730 <HAL_TIM_Base_Start_IT+0x9c>)
900106f6:	429a      	cmp	r2, r3
900106f8:	d107      	bne.n	9001070a <HAL_TIM_Base_Start_IT+0x76>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
900106fa:	6891      	ldr	r1, [r2, #8]
900106fc:	4b0d      	ldr	r3, [pc, #52]	@ (90010734 <HAL_TIM_Base_Start_IT+0xa0>)
900106fe:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
90010700:	2b06      	cmp	r3, #6
90010702:	d006      	beq.n	90010712 <HAL_TIM_Base_Start_IT+0x7e>
90010704:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
90010708:	d003      	beq.n	90010712 <HAL_TIM_Base_Start_IT+0x7e>
      __HAL_TIM_ENABLE(htim);
9001070a:	6813      	ldr	r3, [r2, #0]
9001070c:	f043 0301 	orr.w	r3, r3, #1
90010710:	6013      	str	r3, [r2, #0]
  return HAL_OK;
90010712:	2000      	movs	r0, #0
}
90010714:	bc30      	pop	{r4, r5}
90010716:	4770      	bx	lr
    return HAL_ERROR;
90010718:	2001      	movs	r0, #1
}
9001071a:	4770      	bx	lr
9001071c:	40010000 	.word	0x40010000
90010720:	40000400 	.word	0x40000400
90010724:	40000800 	.word	0x40000800
90010728:	40010400 	.word	0x40010400
9001072c:	40001800 	.word	0x40001800
90010730:	40014000 	.word	0x40014000
90010734:	00010007 	.word	0x00010007

90010738 <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
90010738:	4770      	bx	lr
9001073a:	bf00      	nop

9001073c <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
9001073c:	4770      	bx	lr
9001073e:	bf00      	nop

90010740 <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
90010740:	4770      	bx	lr
90010742:	bf00      	nop

90010744 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
90010744:	4770      	bx	lr
90010746:	bf00      	nop

90010748 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
90010748:	6803      	ldr	r3, [r0, #0]
9001074a:	691a      	ldr	r2, [r3, #16]
9001074c:	0791      	lsls	r1, r2, #30
{
9001074e:	b510      	push	{r4, lr}
90010750:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
90010752:	d502      	bpl.n	9001075a <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
90010754:	68da      	ldr	r2, [r3, #12]
90010756:	0792      	lsls	r2, r2, #30
90010758:	d468      	bmi.n	9001082c <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9001075a:	691a      	ldr	r2, [r3, #16]
9001075c:	0752      	lsls	r2, r2, #29
9001075e:	d502      	bpl.n	90010766 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
90010760:	68da      	ldr	r2, [r3, #12]
90010762:	0750      	lsls	r0, r2, #29
90010764:	d44f      	bmi.n	90010806 <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
90010766:	691a      	ldr	r2, [r3, #16]
90010768:	0711      	lsls	r1, r2, #28
9001076a:	d502      	bpl.n	90010772 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
9001076c:	68da      	ldr	r2, [r3, #12]
9001076e:	0712      	lsls	r2, r2, #28
90010770:	d437      	bmi.n	900107e2 <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
90010772:	691a      	ldr	r2, [r3, #16]
90010774:	06d0      	lsls	r0, r2, #27
90010776:	d502      	bpl.n	9001077e <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
90010778:	68da      	ldr	r2, [r3, #12]
9001077a:	06d1      	lsls	r1, r2, #27
9001077c:	d41e      	bmi.n	900107bc <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9001077e:	691a      	ldr	r2, [r3, #16]
90010780:	07d2      	lsls	r2, r2, #31
90010782:	d502      	bpl.n	9001078a <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
90010784:	68da      	ldr	r2, [r3, #12]
90010786:	07d0      	lsls	r0, r2, #31
90010788:	d469      	bmi.n	9001085e <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9001078a:	691a      	ldr	r2, [r3, #16]
9001078c:	0611      	lsls	r1, r2, #24
9001078e:	d502      	bpl.n	90010796 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
90010790:	68da      	ldr	r2, [r3, #12]
90010792:	0612      	lsls	r2, r2, #24
90010794:	d46b      	bmi.n	9001086e <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
90010796:	691a      	ldr	r2, [r3, #16]
90010798:	05d0      	lsls	r0, r2, #23
9001079a:	d502      	bpl.n	900107a2 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9001079c:	68da      	ldr	r2, [r3, #12]
9001079e:	0611      	lsls	r1, r2, #24
900107a0:	d46d      	bmi.n	9001087e <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
900107a2:	691a      	ldr	r2, [r3, #16]
900107a4:	0652      	lsls	r2, r2, #25
900107a6:	d502      	bpl.n	900107ae <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
900107a8:	68da      	ldr	r2, [r3, #12]
900107aa:	0650      	lsls	r0, r2, #25
900107ac:	d46f      	bmi.n	9001088e <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
900107ae:	691a      	ldr	r2, [r3, #16]
900107b0:	0691      	lsls	r1, r2, #26
900107b2:	d502      	bpl.n	900107ba <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
900107b4:	68da      	ldr	r2, [r3, #12]
900107b6:	0692      	lsls	r2, r2, #26
900107b8:	d449      	bmi.n	9001084e <HAL_TIM_IRQHandler+0x106>
}
900107ba:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
900107bc:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
900107c0:	2208      	movs	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
900107c2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
900107c4:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
900107c6:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
900107c8:	69db      	ldr	r3, [r3, #28]
900107ca:	f413 7f40 	tst.w	r3, #768	@ 0x300
900107ce:	d16f      	bne.n	900108b0 <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
900107d0:	f7ff ffb2 	bl	90010738 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
900107d4:	4620      	mov	r0, r4
900107d6:	f7ff ffb3 	bl	90010740 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
900107da:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
900107dc:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
900107de:	7722      	strb	r2, [r4, #28]
900107e0:	e7cd      	b.n	9001077e <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
900107e2:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
900107e6:	2204      	movs	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
900107e8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
900107ea:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
900107ec:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
900107ee:	69db      	ldr	r3, [r3, #28]
900107f0:	079b      	lsls	r3, r3, #30
900107f2:	d15a      	bne.n	900108aa <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
900107f4:	f7ff ffa0 	bl	90010738 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
900107f8:	4620      	mov	r0, r4
900107fa:	f7ff ffa1 	bl	90010740 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
900107fe:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
90010800:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
90010802:	7722      	strb	r2, [r4, #28]
90010804:	e7b5      	b.n	90010772 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
90010806:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9001080a:	2202      	movs	r2, #2
        HAL_TIM_IC_CaptureCallback(htim);
9001080c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9001080e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
90010810:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
90010812:	699b      	ldr	r3, [r3, #24]
90010814:	f413 7f40 	tst.w	r3, #768	@ 0x300
90010818:	d144      	bne.n	900108a4 <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9001081a:	f7ff ff8d 	bl	90010738 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9001081e:	4620      	mov	r0, r4
90010820:	f7ff ff8e 	bl	90010740 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
90010824:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
90010826:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
90010828:	7722      	strb	r2, [r4, #28]
9001082a:	e79c      	b.n	90010766 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9001082c:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
90010830:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
90010832:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
90010834:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
90010836:	699b      	ldr	r3, [r3, #24]
90010838:	0799      	lsls	r1, r3, #30
9001083a:	d130      	bne.n	9001089e <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9001083c:	f7ff ff7c 	bl	90010738 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
90010840:	4620      	mov	r0, r4
90010842:	f7ff ff7d 	bl	90010740 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
90010846:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
90010848:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9001084a:	7722      	strb	r2, [r4, #28]
9001084c:	e785      	b.n	9001075a <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9001084e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
90010852:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
90010854:	611a      	str	r2, [r3, #16]
}
90010856:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
9001085a:	f000 b82d 	b.w	900108b8 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9001085e:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
90010862:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
90010864:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
90010866:	f7f0 fa13 	bl	90000c90 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9001086a:	6823      	ldr	r3, [r4, #0]
9001086c:	e78d      	b.n	9001078a <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9001086e:	f06f 0280 	mvn.w	r2, #128	@ 0x80
      HAL_TIMEx_BreakCallback(htim);
90010872:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
90010874:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
90010876:	f000 f821 	bl	900108bc <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9001087a:	6823      	ldr	r3, [r4, #0]
9001087c:	e78b      	b.n	90010796 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9001087e:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
90010882:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
90010884:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
90010886:	f000 f81b 	bl	900108c0 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9001088a:	6823      	ldr	r3, [r4, #0]
9001088c:	e789      	b.n	900107a2 <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9001088e:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
90010892:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
90010894:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
90010896:	f7ff ff55 	bl	90010744 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9001089a:	6823      	ldr	r3, [r4, #0]
9001089c:	e787      	b.n	900107ae <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
9001089e:	f7ff ff4d 	bl	9001073c <HAL_TIM_IC_CaptureCallback>
900108a2:	e7d0      	b.n	90010846 <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
900108a4:	f7ff ff4a 	bl	9001073c <HAL_TIM_IC_CaptureCallback>
900108a8:	e7bc      	b.n	90010824 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
900108aa:	f7ff ff47 	bl	9001073c <HAL_TIM_IC_CaptureCallback>
900108ae:	e7a6      	b.n	900107fe <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
900108b0:	f7ff ff44 	bl	9001073c <HAL_TIM_IC_CaptureCallback>
900108b4:	e791      	b.n	900107da <HAL_TIM_IRQHandler+0x92>
900108b6:	bf00      	nop

900108b8 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
900108b8:	4770      	bx	lr
900108ba:	bf00      	nop

900108bc <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
900108bc:	4770      	bx	lr
900108be:	bf00      	nop

900108c0 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
900108c0:	4770      	bx	lr
900108c2:	bf00      	nop

900108c4 <HAL_UART_TxCpltCallback>:
/**
  * @brief Tx Transfer completed callback.
  * @param huart UART handle.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
900108c4:	4770      	bx	lr
900108c6:	bf00      	nop

900108c8 <HAL_UART_ErrorCallback>:
/**
  * @brief  UART error callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
900108c8:	4770      	bx	lr
900108ca:	bf00      	nop

900108cc <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
900108cc:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
900108ce:	6b80      	ldr	r0, [r0, #56]	@ 0x38
  huart->RxXferCount = 0U;
900108d0:	2300      	movs	r3, #0
900108d2:	f8a0 305e 	strh.w	r3, [r0, #94]	@ 0x5e
  huart->TxXferCount = 0U;
900108d6:	f8a0 3056 	strh.w	r3, [r0, #86]	@ 0x56
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
900108da:	f7ff fff5 	bl	900108c8 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
900108de:	bd08      	pop	{r3, pc}

900108e0 <HAL_UARTEx_RxEventCallback>:
}
900108e0:	4770      	bx	lr
900108e2:	bf00      	nop

900108e4 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
900108e4:	6803      	ldr	r3, [r0, #0]
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
900108e6:	f640 0c0f 	movw	ip, #2063	@ 0x80f
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
900108ea:	69da      	ldr	r2, [r3, #28]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
900108ec:	6819      	ldr	r1, [r3, #0]
  if (errorflags == 0U)
900108ee:	ea12 0f0c 	tst.w	r2, ip
{
900108f2:	b570      	push	{r4, r5, r6, lr}
900108f4:	4604      	mov	r4, r0
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
900108f6:	689d      	ldr	r5, [r3, #8]
  if (errorflags == 0U)
900108f8:	d145      	bne.n	90010986 <HAL_UART_IRQHandler+0xa2>
    if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
900108fa:	0696      	lsls	r6, r2, #26
900108fc:	d507      	bpl.n	9001090e <HAL_UART_IRQHandler+0x2a>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
900108fe:	f001 0c20 	and.w	ip, r1, #32
            || ((cr3its & USART_CR3_RXFTIE) != 0U)))
90010902:	f005 5e80 	and.w	lr, r5, #268435456	@ 0x10000000
90010906:	ea5c 0c0e 	orrs.w	ip, ip, lr
9001090a:	f040 813a 	bne.w	90010b82 <HAL_UART_IRQHandler+0x29e>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9001090e:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
90010910:	2801      	cmp	r0, #1
90010912:	f000 80d6 	beq.w	90010ac2 <HAL_UART_IRQHandler+0x1de>
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
90010916:	02d6      	lsls	r6, r2, #11
90010918:	d41d      	bmi.n	90010956 <HAL_UART_IRQHandler+0x72>
  if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
9001091a:	0616      	lsls	r6, r2, #24
9001091c:	d506      	bpl.n	9001092c <HAL_UART_IRQHandler+0x48>
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
9001091e:	f405 0500 	and.w	r5, r5, #8388608	@ 0x800000
      && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
90010922:	f001 0080 	and.w	r0, r1, #128	@ 0x80
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
90010926:	4328      	orrs	r0, r5
90010928:	f040 8132 	bne.w	90010b90 <HAL_UART_IRQHandler+0x2ac>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
9001092c:	0650      	lsls	r0, r2, #25
9001092e:	d51c      	bpl.n	9001096a <HAL_UART_IRQHandler+0x86>
90010930:	064e      	lsls	r6, r1, #25
90010932:	d51a      	bpl.n	9001096a <HAL_UART_IRQHandler+0x86>
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010934:	e853 2f00 	ldrex	r2, [r3]
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
90010938:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9001093c:	e843 2100 	strex	r1, r2, [r3]
90010940:	2900      	cmp	r1, #0
90010942:	d1f7      	bne.n	90010934 <HAL_UART_IRQHandler+0x50>

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
90010944:	2220      	movs	r2, #32

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
90010946:	2300      	movs	r3, #0
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
90010948:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_READY;
9001094a:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
  huart->TxISR = NULL;
9001094e:	67a3      	str	r3, [r4, #120]	@ 0x78
  HAL_UART_TxCpltCallback(huart);
90010950:	f7ff ffb8 	bl	900108c4 <HAL_UART_TxCpltCallback>
}
90010954:	bd70      	pop	{r4, r5, r6, pc}
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
90010956:	0268      	lsls	r0, r5, #9
90010958:	d5df      	bpl.n	9001091a <HAL_UART_IRQHandler+0x36>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
9001095a:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
    HAL_UARTEx_WakeupCallback(huart);
9001095e:	4620      	mov	r0, r4
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
90010960:	621a      	str	r2, [r3, #32]
}
90010962:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_UARTEx_WakeupCallback(huart);
90010966:	f000 bcf7 	b.w	90011358 <HAL_UARTEx_WakeupCallback>
  if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
9001096a:	0215      	lsls	r5, r2, #8
9001096c:	d502      	bpl.n	90010974 <HAL_UART_IRQHandler+0x90>
9001096e:	0048      	lsls	r0, r1, #1
90010970:	f100 8134 	bmi.w	90010bdc <HAL_UART_IRQHandler+0x2f8>
  if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
90010974:	01d3      	lsls	r3, r2, #7
90010976:	d5ed      	bpl.n	90010954 <HAL_UART_IRQHandler+0x70>
90010978:	2900      	cmp	r1, #0
9001097a:	daeb      	bge.n	90010954 <HAL_UART_IRQHandler+0x70>
    HAL_UARTEx_RxFifoFullCallback(huart);
9001097c:	4620      	mov	r0, r4
}
9001097e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_UARTEx_RxFifoFullCallback(huart);
90010982:	f000 bceb 	b.w	9001135c <HAL_UARTEx_RxFifoFullCallback>
      && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
90010986:	48b6      	ldr	r0, [pc, #728]	@ (90010c60 <HAL_UART_IRQHandler+0x37c>)
90010988:	ea05 0c00 	and.w	ip, r5, r0
           || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
9001098c:	48b5      	ldr	r0, [pc, #724]	@ (90010c64 <HAL_UART_IRQHandler+0x380>)
9001098e:	4008      	ands	r0, r1
90010990:	ea50 000c 	orrs.w	r0, r0, ip
90010994:	d0bb      	beq.n	9001090e <HAL_UART_IRQHandler+0x2a>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
90010996:	07d6      	lsls	r6, r2, #31
90010998:	d509      	bpl.n	900109ae <HAL_UART_IRQHandler+0xca>
9001099a:	05c8      	lsls	r0, r1, #23
9001099c:	d507      	bpl.n	900109ae <HAL_UART_IRQHandler+0xca>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
9001099e:	2001      	movs	r0, #1
900109a0:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
900109a2:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
900109a6:	f040 0001 	orr.w	r0, r0, #1
900109aa:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
900109ae:	0796      	lsls	r6, r2, #30
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
900109b0:	f002 0004 	and.w	r0, r2, #4
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
900109b4:	f140 80de 	bpl.w	90010b74 <HAL_UART_IRQHandler+0x290>
900109b8:	07ee      	lsls	r6, r5, #31
900109ba:	d510      	bpl.n	900109de <HAL_UART_IRQHandler+0xfa>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
900109bc:	2602      	movs	r6, #2
900109be:	621e      	str	r6, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
900109c0:	f8d4 6090 	ldr.w	r6, [r4, #144]	@ 0x90
900109c4:	f046 0604 	orr.w	r6, r6, #4
900109c8:	f8c4 6090 	str.w	r6, [r4, #144]	@ 0x90
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
900109cc:	b138      	cbz	r0, 900109de <HAL_UART_IRQHandler+0xfa>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
900109ce:	2004      	movs	r0, #4
900109d0:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
900109d2:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
900109d6:	f040 0002 	orr.w	r0, r0, #2
900109da:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
    if (((isrflags & USART_ISR_ORE) != 0U)
900109de:	0716      	lsls	r6, r2, #28
900109e0:	d50c      	bpl.n	900109fc <HAL_UART_IRQHandler+0x118>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
900109e2:	f001 0020 	and.w	r0, r1, #32
900109e6:	ea50 000c 	orrs.w	r0, r0, ip
900109ea:	d007      	beq.n	900109fc <HAL_UART_IRQHandler+0x118>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
900109ec:	2008      	movs	r0, #8
900109ee:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
900109f0:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
900109f4:	f040 0008 	orr.w	r0, r0, #8
900109f8:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
900109fc:	0510      	lsls	r0, r2, #20
900109fe:	d50a      	bpl.n	90010a16 <HAL_UART_IRQHandler+0x132>
90010a00:	014e      	lsls	r6, r1, #5
90010a02:	d508      	bpl.n	90010a16 <HAL_UART_IRQHandler+0x132>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
90010a04:	f44f 6000 	mov.w	r0, #2048	@ 0x800
90010a08:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
90010a0a:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
90010a0e:	f040 0020 	orr.w	r0, r0, #32
90010a12:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
90010a16:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
90010a1a:	2800      	cmp	r0, #0
90010a1c:	d09a      	beq.n	90010954 <HAL_UART_IRQHandler+0x70>
      if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
90010a1e:	0690      	lsls	r0, r2, #26
90010a20:	d506      	bpl.n	90010a30 <HAL_UART_IRQHandler+0x14c>
          && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
90010a22:	f001 0120 	and.w	r1, r1, #32
              || ((cr3its & USART_CR3_RXFTIE) != 0U)))
90010a26:	f005 5580 	and.w	r5, r5, #268435456	@ 0x10000000
90010a2a:	4329      	orrs	r1, r5
90010a2c:	f040 80ca 	bne.w	90010bc4 <HAL_UART_IRQHandler+0x2e0>
      errorcode = huart->ErrorCode;
90010a30:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
90010a34:	689a      	ldr	r2, [r3, #8]
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
90010a36:	f001 0128 	and.w	r1, r1, #40	@ 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
90010a3a:	f002 0240 	and.w	r2, r2, #64	@ 0x40
90010a3e:	ea52 0501 	orrs.w	r5, r2, r1
90010a42:	f000 80d0 	beq.w	90010be6 <HAL_UART_IRQHandler+0x302>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010a46:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
90010a4a:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010a4e:	e843 2100 	strex	r1, r2, [r3]
90010a52:	2900      	cmp	r1, #0
90010a54:	d1f7      	bne.n	90010a46 <HAL_UART_IRQHandler+0x162>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
90010a56:	4884      	ldr	r0, [pc, #528]	@ (90010c68 <HAL_UART_IRQHandler+0x384>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010a58:	f103 0208 	add.w	r2, r3, #8
90010a5c:	e852 2f00 	ldrex	r2, [r2]
90010a60:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010a62:	f103 0508 	add.w	r5, r3, #8
90010a66:	e845 2100 	strex	r1, r2, [r5]
90010a6a:	2900      	cmp	r1, #0
90010a6c:	d1f4      	bne.n	90010a58 <HAL_UART_IRQHandler+0x174>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
90010a6e:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
90010a70:	2a01      	cmp	r2, #1
90010a72:	f000 8095 	beq.w	90010ba0 <HAL_UART_IRQHandler+0x2bc>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010a76:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
90010a78:	2120      	movs	r1, #32
90010a7a:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010a7e:	66e2      	str	r2, [r4, #108]	@ 0x6c
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
90010a80:	6899      	ldr	r1, [r3, #8]
  huart->RxISR = NULL;
90010a82:	6762      	str	r2, [r4, #116]	@ 0x74
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
90010a84:	064a      	lsls	r2, r1, #25
90010a86:	f140 80a5 	bpl.w	90010bd4 <HAL_UART_IRQHandler+0x2f0>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010a8a:	f103 0208 	add.w	r2, r3, #8
90010a8e:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
90010a92:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010a96:	f103 0008 	add.w	r0, r3, #8
90010a9a:	e840 2100 	strex	r1, r2, [r0]
90010a9e:	2900      	cmp	r1, #0
90010aa0:	d1f3      	bne.n	90010a8a <HAL_UART_IRQHandler+0x1a6>
          if (huart->hdmarx != NULL)
90010aa2:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
90010aa6:	2800      	cmp	r0, #0
90010aa8:	f000 8094 	beq.w	90010bd4 <HAL_UART_IRQHandler+0x2f0>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
90010aac:	4b6f      	ldr	r3, [pc, #444]	@ (90010c6c <HAL_UART_IRQHandler+0x388>)
90010aae:	6503      	str	r3, [r0, #80]	@ 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
90010ab0:	f7fa faa4 	bl	9000affc <HAL_DMA_Abort_IT>
90010ab4:	2800      	cmp	r0, #0
90010ab6:	f43f af4d 	beq.w	90010954 <HAL_UART_IRQHandler+0x70>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
90010aba:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
90010abe:	6d03      	ldr	r3, [r0, #80]	@ 0x50
90010ac0:	e063      	b.n	90010b8a <HAL_UART_IRQHandler+0x2a6>
      && ((isrflags & USART_ISR_IDLE) != 0U)
90010ac2:	06d6      	lsls	r6, r2, #27
90010ac4:	f57f af27 	bpl.w	90010916 <HAL_UART_IRQHandler+0x32>
      && ((cr1its & USART_ISR_IDLE) != 0U))
90010ac8:	06c8      	lsls	r0, r1, #27
90010aca:	f57f af24 	bpl.w	90010916 <HAL_UART_IRQHandler+0x32>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
90010ace:	2210      	movs	r2, #16
90010ad0:	621a      	str	r2, [r3, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
90010ad2:	689a      	ldr	r2, [r3, #8]
90010ad4:	0652      	lsls	r2, r2, #25
90010ad6:	f140 808c 	bpl.w	90010bf2 <HAL_UART_IRQHandler+0x30e>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
90010ada:	f8d4 0080 	ldr.w	r0, [r4, #128]	@ 0x80
90010ade:	6801      	ldr	r1, [r0, #0]
90010ae0:	684a      	ldr	r2, [r1, #4]
90010ae2:	b292      	uxth	r2, r2
      if ((nb_remaining_rx_data > 0U)
90010ae4:	2a00      	cmp	r2, #0
90010ae6:	f43f af35 	beq.w	90010954 <HAL_UART_IRQHandler+0x70>
          && (nb_remaining_rx_data < huart->RxXferSize))
90010aea:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
90010aee:	4291      	cmp	r1, r2
90010af0:	f67f af30 	bls.w	90010954 <HAL_UART_IRQHandler+0x70>
        huart->RxXferCount = nb_remaining_rx_data;
90010af4:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
90010af8:	69c2      	ldr	r2, [r0, #28]
90010afa:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
90010afe:	d02f      	beq.n	90010b60 <HAL_UART_IRQHandler+0x27c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010b00:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
90010b04:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010b08:	e843 2100 	strex	r1, r2, [r3]
90010b0c:	2900      	cmp	r1, #0
90010b0e:	d1f7      	bne.n	90010b00 <HAL_UART_IRQHandler+0x21c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010b10:	f103 0208 	add.w	r2, r3, #8
90010b14:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
90010b18:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010b1c:	f103 0508 	add.w	r5, r3, #8
90010b20:	e845 2100 	strex	r1, r2, [r5]
90010b24:	2900      	cmp	r1, #0
90010b26:	d1f3      	bne.n	90010b10 <HAL_UART_IRQHandler+0x22c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010b28:	f103 0208 	add.w	r2, r3, #8
90010b2c:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
90010b30:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010b34:	f103 0508 	add.w	r5, r3, #8
90010b38:	e845 2100 	strex	r1, r2, [r5]
90010b3c:	2900      	cmp	r1, #0
90010b3e:	d1f3      	bne.n	90010b28 <HAL_UART_IRQHandler+0x244>
          huart->RxState = HAL_UART_STATE_READY;
90010b40:	2220      	movs	r2, #32
90010b42:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010b46:	66e1      	str	r1, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010b48:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
90010b4c:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010b50:	e843 2100 	strex	r1, r2, [r3]
90010b54:	2900      	cmp	r1, #0
90010b56:	d1f7      	bne.n	90010b48 <HAL_UART_IRQHandler+0x264>
          (void)HAL_DMA_Abort(huart->hdmarx);
90010b58:	f7fa f89e 	bl	9000ac98 <HAL_DMA_Abort>
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
90010b5c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
90010b60:	2302      	movs	r3, #2
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
90010b62:	4620      	mov	r0, r4
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
90010b64:	6723      	str	r3, [r4, #112]	@ 0x70
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
90010b66:	f8b4 305e 	ldrh.w	r3, [r4, #94]	@ 0x5e
90010b6a:	1ac9      	subs	r1, r1, r3
90010b6c:	b289      	uxth	r1, r1
90010b6e:	f7ff feb7 	bl	900108e0 <HAL_UARTEx_RxEventCallback>
}
90010b72:	bd70      	pop	{r4, r5, r6, pc}
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
90010b74:	2800      	cmp	r0, #0
90010b76:	f43f af32 	beq.w	900109de <HAL_UART_IRQHandler+0xfa>
90010b7a:	07e8      	lsls	r0, r5, #31
90010b7c:	f53f af27 	bmi.w	900109ce <HAL_UART_IRQHandler+0xea>
90010b80:	e72d      	b.n	900109de <HAL_UART_IRQHandler+0xfa>
      if (huart->RxISR != NULL)
90010b82:	6f43      	ldr	r3, [r0, #116]	@ 0x74
90010b84:	2b00      	cmp	r3, #0
90010b86:	f43f aee5 	beq.w	90010954 <HAL_UART_IRQHandler+0x70>
}
90010b8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
90010b8e:	4718      	bx	r3
    if (huart->TxISR != NULL)
90010b90:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
90010b92:	2b00      	cmp	r3, #0
90010b94:	f43f aede 	beq.w	90010954 <HAL_UART_IRQHandler+0x70>
      huart->TxISR(huart);
90010b98:	4620      	mov	r0, r4
}
90010b9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      huart->TxISR(huart);
90010b9e:	4718      	bx	r3
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010ba0:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
90010ba4:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010ba8:	e843 2100 	strex	r1, r2, [r3]
90010bac:	2900      	cmp	r1, #0
90010bae:	f43f af62 	beq.w	90010a76 <HAL_UART_IRQHandler+0x192>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010bb2:	e853 2f00 	ldrex	r2, [r3]
90010bb6:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010bba:	e843 2100 	strex	r1, r2, [r3]
90010bbe:	2900      	cmp	r1, #0
90010bc0:	d1ee      	bne.n	90010ba0 <HAL_UART_IRQHandler+0x2bc>
90010bc2:	e758      	b.n	90010a76 <HAL_UART_IRQHandler+0x192>
        if (huart->RxISR != NULL)
90010bc4:	6f62      	ldr	r2, [r4, #116]	@ 0x74
90010bc6:	2a00      	cmp	r2, #0
90010bc8:	f43f af32 	beq.w	90010a30 <HAL_UART_IRQHandler+0x14c>
          huart->RxISR(huart);
90010bcc:	4620      	mov	r0, r4
90010bce:	4790      	blx	r2
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
90010bd0:	6823      	ldr	r3, [r4, #0]
90010bd2:	e72d      	b.n	90010a30 <HAL_UART_IRQHandler+0x14c>
            HAL_UART_ErrorCallback(huart);
90010bd4:	4620      	mov	r0, r4
90010bd6:	f7ff fe77 	bl	900108c8 <HAL_UART_ErrorCallback>
}
90010bda:	bd70      	pop	{r4, r5, r6, pc}
    HAL_UARTEx_TxFifoEmptyCallback(huart);
90010bdc:	4620      	mov	r0, r4
}
90010bde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_UARTEx_TxFifoEmptyCallback(huart);
90010be2:	f000 bbbd 	b.w	90011360 <HAL_UARTEx_TxFifoEmptyCallback>
        HAL_UART_ErrorCallback(huart);
90010be6:	4620      	mov	r0, r4
90010be8:	f7ff fe6e 	bl	900108c8 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
90010bec:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
}
90010bf0:	bd70      	pop	{r4, r5, r6, pc}
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
90010bf2:	f8b4 005e 	ldrh.w	r0, [r4, #94]	@ 0x5e
90010bf6:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
      if ((huart->RxXferCount > 0U)
90010bfa:	f8b4 205e 	ldrh.w	r2, [r4, #94]	@ 0x5e
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
90010bfe:	1a09      	subs	r1, r1, r0
      if ((huart->RxXferCount > 0U)
90010c00:	b292      	uxth	r2, r2
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
90010c02:	b289      	uxth	r1, r1
          && (nb_rx_data > 0U))
90010c04:	2a00      	cmp	r2, #0
90010c06:	f43f aea5 	beq.w	90010954 <HAL_UART_IRQHandler+0x70>
90010c0a:	2900      	cmp	r1, #0
90010c0c:	f43f aea2 	beq.w	90010954 <HAL_UART_IRQHandler+0x70>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010c10:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
90010c14:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010c18:	e843 2000 	strex	r0, r2, [r3]
90010c1c:	2800      	cmp	r0, #0
90010c1e:	d1f7      	bne.n	90010c10 <HAL_UART_IRQHandler+0x32c>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
90010c20:	4d11      	ldr	r5, [pc, #68]	@ (90010c68 <HAL_UART_IRQHandler+0x384>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010c22:	f103 0208 	add.w	r2, r3, #8
90010c26:	e852 2f00 	ldrex	r2, [r2]
90010c2a:	402a      	ands	r2, r5
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010c2c:	f103 0608 	add.w	r6, r3, #8
90010c30:	e846 2000 	strex	r0, r2, [r6]
90010c34:	2800      	cmp	r0, #0
90010c36:	d1f4      	bne.n	90010c22 <HAL_UART_IRQHandler+0x33e>
        huart->RxState = HAL_UART_STATE_READY;
90010c38:	2220      	movs	r2, #32
        huart->RxISR = NULL;
90010c3a:	6760      	str	r0, [r4, #116]	@ 0x74
        huart->RxState = HAL_UART_STATE_READY;
90010c3c:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90010c40:	66e0      	str	r0, [r4, #108]	@ 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90010c42:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
90010c46:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90010c4a:	e843 2000 	strex	r0, r2, [r3]
90010c4e:	2800      	cmp	r0, #0
90010c50:	d1f7      	bne.n	90010c42 <HAL_UART_IRQHandler+0x35e>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
90010c52:	2302      	movs	r3, #2
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
90010c54:	4620      	mov	r0, r4
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
90010c56:	6723      	str	r3, [r4, #112]	@ 0x70
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
90010c58:	f7ff fe42 	bl	900108e0 <HAL_UARTEx_RxEventCallback>
}
90010c5c:	bd70      	pop	{r4, r5, r6, pc}
90010c5e:	bf00      	nop
90010c60:	10000001 	.word	0x10000001
90010c64:	04000120 	.word	0x04000120
90010c68:	effffffe 	.word	0xeffffffe
90010c6c:	900108cd 	.word	0x900108cd

90010c70 <UART_SetConfig>:
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
90010c70:	6901      	ldr	r1, [r0, #16]
90010c72:	6882      	ldr	r2, [r0, #8]
  if (UART_INSTANCE_LOWPOWER(huart))
90010c74:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
90010c76:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
90010c78:	49a2      	ldr	r1, [pc, #648]	@ (90010f04 <UART_SetConfig+0x294>)
{
90010c7a:	b570      	push	{r4, r5, r6, lr}
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
90010c7c:	6945      	ldr	r5, [r0, #20]
{
90010c7e:	4604      	mov	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
90010c80:	69c0      	ldr	r0, [r0, #28]
{
90010c82:	b086      	sub	sp, #24
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
90010c84:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
90010c86:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
90010c88:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
90010c8a:	4029      	ands	r1, r5
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
90010c8c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
90010c8e:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
90010c90:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
90010c92:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
90010c94:	685a      	ldr	r2, [r3, #4]
90010c96:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
90010c9a:	430a      	orrs	r2, r1
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
90010c9c:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
90010c9e:	605a      	str	r2, [r3, #4]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
90010ca0:	4a99      	ldr	r2, [pc, #612]	@ (90010f08 <UART_SetConfig+0x298>)
90010ca2:	4293      	cmp	r3, r2
90010ca4:	f000 8118 	beq.w	90010ed8 <UART_SetConfig+0x268>
    tmpreg |= huart->Init.OneBitSampling;
90010ca8:	6a22      	ldr	r2, [r4, #32]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
90010caa:	689e      	ldr	r6, [r3, #8]
    tmpreg |= huart->Init.OneBitSampling;
90010cac:	4311      	orrs	r1, r2
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
90010cae:	4a97      	ldr	r2, [pc, #604]	@ (90010f0c <UART_SetConfig+0x29c>)
90010cb0:	4032      	ands	r2, r6
90010cb2:	4311      	orrs	r1, r2
90010cb4:	6099      	str	r1, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
90010cb6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90010cb8:	f022 020f 	bic.w	r2, r2, #15
90010cbc:	432a      	orrs	r2, r5
90010cbe:	62da      	str	r2, [r3, #44]	@ 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
90010cc0:	4a93      	ldr	r2, [pc, #588]	@ (90010f10 <UART_SetConfig+0x2a0>)
90010cc2:	4293      	cmp	r3, r2
90010cc4:	d028      	beq.n	90010d18 <UART_SetConfig+0xa8>
90010cc6:	4a93      	ldr	r2, [pc, #588]	@ (90010f14 <UART_SetConfig+0x2a4>)
90010cc8:	4293      	cmp	r3, r2
90010cca:	d01a      	beq.n	90010d02 <UART_SetConfig+0x92>
90010ccc:	4a92      	ldr	r2, [pc, #584]	@ (90010f18 <UART_SetConfig+0x2a8>)
90010cce:	4293      	cmp	r3, r2
90010cd0:	d017      	beq.n	90010d02 <UART_SetConfig+0x92>
90010cd2:	4a92      	ldr	r2, [pc, #584]	@ (90010f1c <UART_SetConfig+0x2ac>)
90010cd4:	4293      	cmp	r3, r2
90010cd6:	d014      	beq.n	90010d02 <UART_SetConfig+0x92>
90010cd8:	4a91      	ldr	r2, [pc, #580]	@ (90010f20 <UART_SetConfig+0x2b0>)
90010cda:	4293      	cmp	r3, r2
90010cdc:	d011      	beq.n	90010d02 <UART_SetConfig+0x92>
90010cde:	4a91      	ldr	r2, [pc, #580]	@ (90010f24 <UART_SetConfig+0x2b4>)
90010ce0:	4293      	cmp	r3, r2
90010ce2:	d019      	beq.n	90010d18 <UART_SetConfig+0xa8>
90010ce4:	4a90      	ldr	r2, [pc, #576]	@ (90010f28 <UART_SetConfig+0x2b8>)
90010ce6:	4293      	cmp	r3, r2
90010ce8:	d00b      	beq.n	90010d02 <UART_SetConfig+0x92>
90010cea:	4a90      	ldr	r2, [pc, #576]	@ (90010f2c <UART_SetConfig+0x2bc>)
90010cec:	4293      	cmp	r3, r2
90010cee:	d008      	beq.n	90010d02 <UART_SetConfig+0x92>
        ret = HAL_ERROR;
90010cf0:	2001      	movs	r0, #1
  huart->RxISR = NULL;
90010cf2:	2300      	movs	r3, #0
  huart->NbRxDataToProcess = 1;
90010cf4:	f04f 1201 	mov.w	r2, #65537	@ 0x10001
  huart->RxISR = NULL;
90010cf8:	6763      	str	r3, [r4, #116]	@ 0x74
  huart->NbRxDataToProcess = 1;
90010cfa:	66a2      	str	r2, [r4, #104]	@ 0x68
  huart->TxISR = NULL;
90010cfc:	67a3      	str	r3, [r4, #120]	@ 0x78
}
90010cfe:	b006      	add	sp, #24
90010d00:	bd70      	pop	{r4, r5, r6, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
90010d02:	4b8b      	ldr	r3, [pc, #556]	@ (90010f30 <UART_SetConfig+0x2c0>)
90010d04:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90010d06:	f003 0307 	and.w	r3, r3, #7
90010d0a:	2b05      	cmp	r3, #5
90010d0c:	d8f0      	bhi.n	90010cf0 <UART_SetConfig+0x80>
90010d0e:	e8df f003 	tbb	[pc, r3]
90010d12:	5f9d      	.short	0x5f9d
90010d14:	977e7169 	.word	0x977e7169
90010d18:	4b85      	ldr	r3, [pc, #532]	@ (90010f30 <UART_SetConfig+0x2c0>)
90010d1a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90010d1c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
90010d20:	2b28      	cmp	r3, #40	@ 0x28
90010d22:	d8e5      	bhi.n	90010cf0 <UART_SetConfig+0x80>
90010d24:	a201      	add	r2, pc, #4	@ (adr r2, 90010d2c <UART_SetConfig+0xbc>)
90010d26:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90010d2a:	bf00      	nop
90010d2c:	90010ea7 	.word	0x90010ea7
90010d30:	90010cf1 	.word	0x90010cf1
90010d34:	90010cf1 	.word	0x90010cf1
90010d38:	90010cf1 	.word	0x90010cf1
90010d3c:	90010cf1 	.word	0x90010cf1
90010d40:	90010cf1 	.word	0x90010cf1
90010d44:	90010cf1 	.word	0x90010cf1
90010d48:	90010cf1 	.word	0x90010cf1
90010d4c:	90010dd1 	.word	0x90010dd1
90010d50:	90010cf1 	.word	0x90010cf1
90010d54:	90010cf1 	.word	0x90010cf1
90010d58:	90010cf1 	.word	0x90010cf1
90010d5c:	90010cf1 	.word	0x90010cf1
90010d60:	90010cf1 	.word	0x90010cf1
90010d64:	90010cf1 	.word	0x90010cf1
90010d68:	90010cf1 	.word	0x90010cf1
90010d6c:	90010de5 	.word	0x90010de5
90010d70:	90010cf1 	.word	0x90010cf1
90010d74:	90010cf1 	.word	0x90010cf1
90010d78:	90010cf1 	.word	0x90010cf1
90010d7c:	90010cf1 	.word	0x90010cf1
90010d80:	90010cf1 	.word	0x90010cf1
90010d84:	90010cf1 	.word	0x90010cf1
90010d88:	90010cf1 	.word	0x90010cf1
90010d8c:	90010df5 	.word	0x90010df5
90010d90:	90010cf1 	.word	0x90010cf1
90010d94:	90010cf1 	.word	0x90010cf1
90010d98:	90010cf1 	.word	0x90010cf1
90010d9c:	90010cf1 	.word	0x90010cf1
90010da0:	90010cf1 	.word	0x90010cf1
90010da4:	90010cf1 	.word	0x90010cf1
90010da8:	90010cf1 	.word	0x90010cf1
90010dac:	90010e0f 	.word	0x90010e0f
90010db0:	90010cf1 	.word	0x90010cf1
90010db4:	90010cf1 	.word	0x90010cf1
90010db8:	90010cf1 	.word	0x90010cf1
90010dbc:	90010cf1 	.word	0x90010cf1
90010dc0:	90010cf1 	.word	0x90010cf1
90010dc4:	90010cf1 	.word	0x90010cf1
90010dc8:	90010cf1 	.word	0x90010cf1
90010dcc:	90010e41 	.word	0x90010e41
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
90010dd0:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
90010dd4:	d040      	beq.n	90010e58 <UART_SetConfig+0x1e8>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
90010dd6:	4668      	mov	r0, sp
90010dd8:	f7ff fa18 	bl	9001020c <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
90010ddc:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
90010dde:	b368      	cbz	r0, 90010e3c <UART_SetConfig+0x1cc>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
90010de0:	6a65      	ldr	r5, [r4, #36]	@ 0x24
90010de2:	e018      	b.n	90010e16 <UART_SetConfig+0x1a6>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
90010de4:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
90010de8:	d06e      	beq.n	90010ec8 <UART_SetConfig+0x258>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
90010dea:	a803      	add	r0, sp, #12
90010dec:	f7ff faa8 	bl	90010340 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
90010df0:	9804      	ldr	r0, [sp, #16]
        break;
90010df2:	e7f4      	b.n	90010dde <UART_SetConfig+0x16e>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
90010df4:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
90010df8:	d05b      	beq.n	90010eb2 <UART_SetConfig+0x242>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
90010dfa:	4b4d      	ldr	r3, [pc, #308]	@ (90010f30 <UART_SetConfig+0x2c0>)
90010dfc:	681a      	ldr	r2, [r3, #0]
90010dfe:	0692      	lsls	r2, r2, #26
90010e00:	d54c      	bpl.n	90010e9c <UART_SetConfig+0x22c>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
90010e02:	681b      	ldr	r3, [r3, #0]
90010e04:	484b      	ldr	r0, [pc, #300]	@ (90010f34 <UART_SetConfig+0x2c4>)
90010e06:	f3c3 03c1 	ubfx	r3, r3, #3, #2
90010e0a:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
90010e0c:	e003      	b.n	90010e16 <UART_SetConfig+0x1a6>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
90010e0e:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
        pclk = (uint32_t) CSI_VALUE;
90010e12:	4849      	ldr	r0, [pc, #292]	@ (90010f38 <UART_SetConfig+0x2c8>)
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
90010e14:	d027      	beq.n	90010e66 <UART_SetConfig+0x1f6>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
90010e16:	4a49      	ldr	r2, [pc, #292]	@ (90010f3c <UART_SetConfig+0x2cc>)
90010e18:	6863      	ldr	r3, [r4, #4]
90010e1a:	f832 1015 	ldrh.w	r1, [r2, r5, lsl #1]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
90010e1e:	f64f 72ef 	movw	r2, #65519	@ 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
90010e22:	fbb0 f0f1 	udiv	r0, r0, r1
90010e26:	eb00 0053 	add.w	r0, r0, r3, lsr #1
90010e2a:	fbb0 f0f3 	udiv	r0, r0, r3
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
90010e2e:	f1a0 0310 	sub.w	r3, r0, #16
90010e32:	4293      	cmp	r3, r2
90010e34:	f63f af5c 	bhi.w	90010cf0 <UART_SetConfig+0x80>
          huart->Instance->BRR = usartdiv;
90010e38:	6823      	ldr	r3, [r4, #0]
90010e3a:	60d8      	str	r0, [r3, #12]
          pclk = (uint32_t) HSI_VALUE;
90010e3c:	2000      	movs	r0, #0
90010e3e:	e758      	b.n	90010cf2 <UART_SetConfig+0x82>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
90010e40:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
90010e44:	d00f      	beq.n	90010e66 <UART_SetConfig+0x1f6>
        pclk = (uint32_t) LSE_VALUE;
90010e46:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
90010e4a:	e7e4      	b.n	90010e16 <UART_SetConfig+0x1a6>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
90010e4c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
90010e50:	d026      	beq.n	90010ea0 <UART_SetConfig+0x230>
        pclk = HAL_RCC_GetPCLK1Freq();
90010e52:	f7fe f8cf 	bl	9000eff4 <HAL_RCC_GetPCLK1Freq>
        break;
90010e56:	e7c2      	b.n	90010dde <UART_SetConfig+0x16e>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
90010e58:	4668      	mov	r0, sp
90010e5a:	f7ff f9d7 	bl	9001020c <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
90010e5e:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
90010e60:	2800      	cmp	r0, #0
90010e62:	d0eb      	beq.n	90010e3c <UART_SetConfig+0x1cc>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
90010e64:	6a65      	ldr	r5, [r4, #36]	@ 0x24
90010e66:	4b35      	ldr	r3, [pc, #212]	@ (90010f3c <UART_SetConfig+0x2cc>)
90010e68:	6862      	ldr	r2, [r4, #4]
90010e6a:	f833 1015 	ldrh.w	r1, [r3, r5, lsl #1]
90010e6e:	0853      	lsrs	r3, r2, #1
90010e70:	fbb0 f0f1 	udiv	r0, r0, r1
90010e74:	eb03 0340 	add.w	r3, r3, r0, lsl #1
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
90010e78:	f64f 71ef 	movw	r1, #65519	@ 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
90010e7c:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
90010e80:	f1a3 0210 	sub.w	r2, r3, #16
90010e84:	428a      	cmp	r2, r1
90010e86:	f63f af33 	bhi.w	90010cf0 <UART_SetConfig+0x80>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
90010e8a:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
90010e8e:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
90010e92:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
90010e94:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
90010e96:	4313      	orrs	r3, r2
90010e98:	60cb      	str	r3, [r1, #12]
90010e9a:	e7cf      	b.n	90010e3c <UART_SetConfig+0x1cc>
          pclk = (uint32_t) HSI_VALUE;
90010e9c:	4825      	ldr	r0, [pc, #148]	@ (90010f34 <UART_SetConfig+0x2c4>)
90010e9e:	e7ba      	b.n	90010e16 <UART_SetConfig+0x1a6>
        pclk = HAL_RCC_GetPCLK1Freq();
90010ea0:	f7fe f8a8 	bl	9000eff4 <HAL_RCC_GetPCLK1Freq>
        break;
90010ea4:	e7dc      	b.n	90010e60 <UART_SetConfig+0x1f0>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
90010ea6:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
90010eaa:	d012      	beq.n	90010ed2 <UART_SetConfig+0x262>
        pclk = HAL_RCC_GetPCLK2Freq();
90010eac:	f7fe f8ea 	bl	9000f084 <HAL_RCC_GetPCLK2Freq>
        break;
90010eb0:	e795      	b.n	90010dde <UART_SetConfig+0x16e>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
90010eb2:	4b1f      	ldr	r3, [pc, #124]	@ (90010f30 <UART_SetConfig+0x2c0>)
90010eb4:	681a      	ldr	r2, [r3, #0]
90010eb6:	0691      	lsls	r1, r2, #26
90010eb8:	f140 808a 	bpl.w	90010fd0 <UART_SetConfig+0x360>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
90010ebc:	681b      	ldr	r3, [r3, #0]
90010ebe:	481d      	ldr	r0, [pc, #116]	@ (90010f34 <UART_SetConfig+0x2c4>)
90010ec0:	f3c3 03c1 	ubfx	r3, r3, #3, #2
90010ec4:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
90010ec6:	e7ce      	b.n	90010e66 <UART_SetConfig+0x1f6>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
90010ec8:	a803      	add	r0, sp, #12
90010eca:	f7ff fa39 	bl	90010340 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
90010ece:	9804      	ldr	r0, [sp, #16]
        break;
90010ed0:	e7c6      	b.n	90010e60 <UART_SetConfig+0x1f0>
        pclk = HAL_RCC_GetPCLK2Freq();
90010ed2:	f7fe f8d7 	bl	9000f084 <HAL_RCC_GetPCLK2Freq>
        break;
90010ed6:	e7c3      	b.n	90010e60 <UART_SetConfig+0x1f0>
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
90010ed8:	6898      	ldr	r0, [r3, #8]
90010eda:	4a0c      	ldr	r2, [pc, #48]	@ (90010f0c <UART_SetConfig+0x29c>)
90010edc:	4002      	ands	r2, r0
90010ede:	430a      	orrs	r2, r1
  UART_GETCLOCKSOURCE(huart, clocksource);
90010ee0:	4913      	ldr	r1, [pc, #76]	@ (90010f30 <UART_SetConfig+0x2c0>)
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
90010ee2:	609a      	str	r2, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
90010ee4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90010ee6:	f022 020f 	bic.w	r2, r2, #15
90010eea:	432a      	orrs	r2, r5
90010eec:	62da      	str	r2, [r3, #44]	@ 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
90010eee:	6d8b      	ldr	r3, [r1, #88]	@ 0x58
90010ef0:	f003 0307 	and.w	r3, r3, #7
90010ef4:	2b05      	cmp	r3, #5
90010ef6:	f63f aefb 	bhi.w	90010cf0 <UART_SetConfig+0x80>
90010efa:	e8df f003 	tbb	[pc, r3]
90010efe:	565b      	.short	0x565b
90010f00:	5e61214d 	.word	0x5e61214d
90010f04:	cfff69f3 	.word	0xcfff69f3
90010f08:	58000c00 	.word	0x58000c00
90010f0c:	11fff4ff 	.word	0x11fff4ff
90010f10:	40011000 	.word	0x40011000
90010f14:	40004400 	.word	0x40004400
90010f18:	40004800 	.word	0x40004800
90010f1c:	40004c00 	.word	0x40004c00
90010f20:	40005000 	.word	0x40005000
90010f24:	40011400 	.word	0x40011400
90010f28:	40007800 	.word	0x40007800
90010f2c:	40007c00 	.word	0x40007c00
90010f30:	58024400 	.word	0x58024400
90010f34:	03d09000 	.word	0x03d09000
90010f38:	003d0900 	.word	0x003d0900
90010f3c:	9002f8b4 	.word	0x9002f8b4
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
90010f40:	4b24      	ldr	r3, [pc, #144]	@ (90010fd4 <UART_SetConfig+0x364>)
90010f42:	681a      	ldr	r2, [r3, #0]
90010f44:	0690      	lsls	r0, r2, #26
90010f46:	d43d      	bmi.n	90010fc4 <UART_SetConfig+0x354>
          pclk = (uint32_t) HSI_VALUE;
90010f48:	4823      	ldr	r0, [pc, #140]	@ (90010fd8 <UART_SetConfig+0x368>)
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
90010f4a:	4b24      	ldr	r3, [pc, #144]	@ (90010fdc <UART_SetConfig+0x36c>)
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
90010f4c:	6866      	ldr	r6, [r4, #4]
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
90010f4e:	f833 2015 	ldrh.w	r2, [r3, r5, lsl #1]
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
90010f52:	eb06 0146 	add.w	r1, r6, r6, lsl #1
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
90010f56:	fbb0 f3f2 	udiv	r3, r0, r2
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
90010f5a:	4299      	cmp	r1, r3
90010f5c:	f63f aec8 	bhi.w	90010cf0 <UART_SetConfig+0x80>
90010f60:	ebb3 3f06 	cmp.w	r3, r6, lsl #12
90010f64:	f63f aec4 	bhi.w	90010cf0 <UART_SetConfig+0x80>
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
90010f68:	2300      	movs	r3, #0
90010f6a:	4619      	mov	r1, r3
90010f6c:	f7ef fbc4 	bl	900006f8 <__aeabi_uldivmod>
90010f70:	4632      	mov	r2, r6
90010f72:	0209      	lsls	r1, r1, #8
90010f74:	0203      	lsls	r3, r0, #8
90010f76:	ea41 6110 	orr.w	r1, r1, r0, lsr #24
90010f7a:	0870      	lsrs	r0, r6, #1
90010f7c:	1818      	adds	r0, r3, r0
90010f7e:	f04f 0300 	mov.w	r3, #0
90010f82:	f141 0100 	adc.w	r1, r1, #0
90010f86:	f7ef fbb7 	bl	900006f8 <__aeabi_uldivmod>
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
90010f8a:	4b15      	ldr	r3, [pc, #84]	@ (90010fe0 <UART_SetConfig+0x370>)
90010f8c:	f5a0 7240 	sub.w	r2, r0, #768	@ 0x300
90010f90:	429a      	cmp	r2, r3
90010f92:	f63f aead 	bhi.w	90010cf0 <UART_SetConfig+0x80>
90010f96:	e74f      	b.n	90010e38 <UART_SetConfig+0x1c8>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
90010f98:	a803      	add	r0, sp, #12
90010f9a:	f7ff f9d1 	bl	90010340 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
90010f9e:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
90010fa0:	2800      	cmp	r0, #0
90010fa2:	f43f af4b 	beq.w	90010e3c <UART_SetConfig+0x1cc>
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
90010fa6:	6a65      	ldr	r5, [r4, #36]	@ 0x24
90010fa8:	e7cf      	b.n	90010f4a <UART_SetConfig+0x2da>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
90010faa:	4668      	mov	r0, sp
90010fac:	f7ff f92e 	bl	9001020c <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
90010fb0:	9801      	ldr	r0, [sp, #4]
        break;
90010fb2:	e7f5      	b.n	90010fa0 <UART_SetConfig+0x330>
        pclk = HAL_RCCEx_GetD3PCLK1Freq();
90010fb4:	f7ff f918 	bl	900101e8 <HAL_RCCEx_GetD3PCLK1Freq>
        break;
90010fb8:	e7f2      	b.n	90010fa0 <UART_SetConfig+0x330>
        pclk = (uint32_t) LSE_VALUE;
90010fba:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
90010fbe:	e7c4      	b.n	90010f4a <UART_SetConfig+0x2da>
        pclk = (uint32_t) CSI_VALUE;
90010fc0:	4808      	ldr	r0, [pc, #32]	@ (90010fe4 <UART_SetConfig+0x374>)
90010fc2:	e7c2      	b.n	90010f4a <UART_SetConfig+0x2da>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
90010fc4:	681b      	ldr	r3, [r3, #0]
90010fc6:	4804      	ldr	r0, [pc, #16]	@ (90010fd8 <UART_SetConfig+0x368>)
90010fc8:	f3c3 03c1 	ubfx	r3, r3, #3, #2
90010fcc:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
90010fce:	e7bc      	b.n	90010f4a <UART_SetConfig+0x2da>
          pclk = (uint32_t) HSI_VALUE;
90010fd0:	4801      	ldr	r0, [pc, #4]	@ (90010fd8 <UART_SetConfig+0x368>)
90010fd2:	e748      	b.n	90010e66 <UART_SetConfig+0x1f6>
90010fd4:	58024400 	.word	0x58024400
90010fd8:	03d09000 	.word	0x03d09000
90010fdc:	9002f8b4 	.word	0x9002f8b4
90010fe0:	000ffcff 	.word	0x000ffcff
90010fe4:	003d0900 	.word	0x003d0900

90010fe8 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
90010fe8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010fea:	07da      	lsls	r2, r3, #31
{
90010fec:	b410      	push	{r4}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
90010fee:	d506      	bpl.n	90010ffe <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
90010ff0:	6801      	ldr	r1, [r0, #0]
90010ff2:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
90010ff4:	684a      	ldr	r2, [r1, #4]
90010ff6:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
90010ffa:	4322      	orrs	r2, r4
90010ffc:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
90010ffe:	079c      	lsls	r4, r3, #30
90011000:	d506      	bpl.n	90011010 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
90011002:	6801      	ldr	r1, [r0, #0]
90011004:	6b04      	ldr	r4, [r0, #48]	@ 0x30
90011006:	684a      	ldr	r2, [r1, #4]
90011008:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9001100c:	4322      	orrs	r2, r4
9001100e:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
90011010:	0759      	lsls	r1, r3, #29
90011012:	d506      	bpl.n	90011022 <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
90011014:	6801      	ldr	r1, [r0, #0]
90011016:	6b44      	ldr	r4, [r0, #52]	@ 0x34
90011018:	684a      	ldr	r2, [r1, #4]
9001101a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9001101e:	4322      	orrs	r2, r4
90011020:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
90011022:	071a      	lsls	r2, r3, #28
90011024:	d506      	bpl.n	90011034 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
90011026:	6801      	ldr	r1, [r0, #0]
90011028:	6b84      	ldr	r4, [r0, #56]	@ 0x38
9001102a:	684a      	ldr	r2, [r1, #4]
9001102c:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
90011030:	4322      	orrs	r2, r4
90011032:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
90011034:	06dc      	lsls	r4, r3, #27
90011036:	d506      	bpl.n	90011046 <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
90011038:	6801      	ldr	r1, [r0, #0]
9001103a:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
9001103c:	688a      	ldr	r2, [r1, #8]
9001103e:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
90011042:	4322      	orrs	r2, r4
90011044:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
90011046:	0699      	lsls	r1, r3, #26
90011048:	d506      	bpl.n	90011058 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
9001104a:	6801      	ldr	r1, [r0, #0]
9001104c:	6c04      	ldr	r4, [r0, #64]	@ 0x40
9001104e:	688a      	ldr	r2, [r1, #8]
90011050:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
90011054:	4322      	orrs	r2, r4
90011056:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
90011058:	065a      	lsls	r2, r3, #25
9001105a:	d50a      	bpl.n	90011072 <UART_AdvFeatureConfig+0x8a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9001105c:	6801      	ldr	r1, [r0, #0]
9001105e:	6c44      	ldr	r4, [r0, #68]	@ 0x44
90011060:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
90011062:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
90011066:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
9001106a:	ea42 0204 	orr.w	r2, r2, r4
9001106e:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
90011070:	d00b      	beq.n	9001108a <UART_AdvFeatureConfig+0xa2>
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
90011072:	061b      	lsls	r3, r3, #24
90011074:	d506      	bpl.n	90011084 <UART_AdvFeatureConfig+0x9c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
90011076:	6802      	ldr	r2, [r0, #0]
90011078:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9001107a:	6853      	ldr	r3, [r2, #4]
9001107c:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
90011080:	430b      	orrs	r3, r1
90011082:	6053      	str	r3, [r2, #4]
}
90011084:	f85d 4b04 	ldr.w	r4, [sp], #4
90011088:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
9001108a:	684a      	ldr	r2, [r1, #4]
9001108c:	6c84      	ldr	r4, [r0, #72]	@ 0x48
9001108e:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
90011092:	4322      	orrs	r2, r4
90011094:	604a      	str	r2, [r1, #4]
90011096:	e7ec      	b.n	90011072 <UART_AdvFeatureConfig+0x8a>

90011098 <UART_CheckIdleState>:
{
90011098:	b538      	push	{r3, r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9001109a:	2300      	movs	r3, #0
{
9001109c:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9001109e:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
  tickstart = HAL_GetTick();
900110a2:	f7f9 fcb9 	bl	9000aa18 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
900110a6:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
900110a8:	4605      	mov	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
900110aa:	6813      	ldr	r3, [r2, #0]
900110ac:	071b      	lsls	r3, r3, #28
900110ae:	d40f      	bmi.n	900110d0 <UART_CheckIdleState+0x38>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
900110b0:	6813      	ldr	r3, [r2, #0]
900110b2:	0759      	lsls	r1, r3, #29
900110b4:	d431      	bmi.n	9001111a <UART_CheckIdleState+0x82>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
900110b6:	2300      	movs	r3, #0
  huart->gState = HAL_UART_STATE_READY;
900110b8:	2220      	movs	r2, #32
  return HAL_OK;
900110ba:	4618      	mov	r0, r3
  huart->gState = HAL_UART_STATE_READY;
900110bc:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
  huart->RxState = HAL_UART_STATE_READY;
900110c0:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
900110c4:	66e3      	str	r3, [r4, #108]	@ 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
900110c6:	6723      	str	r3, [r4, #112]	@ 0x70
      __HAL_UNLOCK(huart);
900110c8:	2300      	movs	r3, #0
900110ca:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
}
900110ce:	bd38      	pop	{r3, r4, r5, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
900110d0:	69d3      	ldr	r3, [r2, #28]
900110d2:	0298      	lsls	r0, r3, #10
900110d4:	d4ec      	bmi.n	900110b0 <UART_CheckIdleState+0x18>
900110d6:	e00c      	b.n	900110f2 <UART_CheckIdleState+0x5a>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
900110d8:	6819      	ldr	r1, [r3, #0]
900110da:	461a      	mov	r2, r3
900110dc:	0749      	lsls	r1, r1, #29
900110de:	d505      	bpl.n	900110ec <UART_CheckIdleState+0x54>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
900110e0:	69d9      	ldr	r1, [r3, #28]
900110e2:	0708      	lsls	r0, r1, #28
900110e4:	d44a      	bmi.n	9001117c <UART_CheckIdleState+0xe4>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
900110e6:	69d9      	ldr	r1, [r3, #28]
900110e8:	0509      	lsls	r1, r1, #20
900110ea:	d475      	bmi.n	900111d8 <UART_CheckIdleState+0x140>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
900110ec:	69db      	ldr	r3, [r3, #28]
900110ee:	0298      	lsls	r0, r3, #10
900110f0:	d4de      	bmi.n	900110b0 <UART_CheckIdleState+0x18>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900110f2:	f7f9 fc91 	bl	9000aa18 <HAL_GetTick>
900110f6:	1b43      	subs	r3, r0, r5
900110f8:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
900110fc:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900110fe:	d3eb      	bcc.n	900110d8 <UART_CheckIdleState+0x40>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90011100:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
90011104:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90011108:	e843 2100 	strex	r1, r2, [r3]
9001110c:	2900      	cmp	r1, #0
9001110e:	d1f7      	bne.n	90011100 <UART_CheckIdleState+0x68>
      huart->gState = HAL_UART_STATE_READY;
90011110:	2320      	movs	r3, #32
90011112:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
      return HAL_TIMEOUT;
90011116:	2003      	movs	r0, #3
90011118:	e7d6      	b.n	900110c8 <UART_CheckIdleState+0x30>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9001111a:	69d3      	ldr	r3, [r2, #28]
9001111c:	025b      	lsls	r3, r3, #9
9001111e:	d4ca      	bmi.n	900110b6 <UART_CheckIdleState+0x1e>
90011120:	e00d      	b.n	9001113e <UART_CheckIdleState+0xa6>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
90011122:	681a      	ldr	r2, [r3, #0]
90011124:	0750      	lsls	r0, r2, #29
90011126:	d507      	bpl.n	90011138 <UART_CheckIdleState+0xa0>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
90011128:	69da      	ldr	r2, [r3, #28]
9001112a:	0711      	lsls	r1, r2, #28
9001112c:	f100 8082 	bmi.w	90011234 <UART_CheckIdleState+0x19c>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
90011130:	69da      	ldr	r2, [r3, #28]
90011132:	0512      	lsls	r2, r2, #20
90011134:	f100 80ac 	bmi.w	90011290 <UART_CheckIdleState+0x1f8>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
90011138:	69db      	ldr	r3, [r3, #28]
9001113a:	025b      	lsls	r3, r3, #9
9001113c:	d4bb      	bmi.n	900110b6 <UART_CheckIdleState+0x1e>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9001113e:	f7f9 fc6b 	bl	9000aa18 <HAL_GetTick>
90011142:	1b43      	subs	r3, r0, r5
90011144:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
90011148:	6823      	ldr	r3, [r4, #0]
9001114a:	d3ea      	bcc.n	90011122 <UART_CheckIdleState+0x8a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001114c:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
90011150:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90011154:	e843 2100 	strex	r1, r2, [r3]
90011158:	2900      	cmp	r1, #0
9001115a:	d1f7      	bne.n	9001114c <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001115c:	f103 0208 	add.w	r2, r3, #8
90011160:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
90011164:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90011168:	f103 0008 	add.w	r0, r3, #8
9001116c:	e840 2100 	strex	r1, r2, [r0]
90011170:	2900      	cmp	r1, #0
90011172:	d1f3      	bne.n	9001115c <UART_CheckIdleState+0xc4>
      huart->RxState = HAL_UART_STATE_READY;
90011174:	2320      	movs	r3, #32
90011176:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
      return HAL_TIMEOUT;
9001117a:	e7cc      	b.n	90011116 <UART_CheckIdleState+0x7e>
           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9001117c:	2208      	movs	r2, #8
9001117e:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90011180:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
90011184:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90011188:	e843 2100 	strex	r1, r2, [r3]
9001118c:	2900      	cmp	r1, #0
9001118e:	d1f7      	bne.n	90011180 <UART_CheckIdleState+0xe8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
90011190:	4856      	ldr	r0, [pc, #344]	@ (900112ec <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90011192:	f103 0208 	add.w	r2, r3, #8
90011196:	e852 2f00 	ldrex	r2, [r2]
9001119a:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9001119c:	f103 0508 	add.w	r5, r3, #8
900111a0:	e845 2100 	strex	r1, r2, [r5]
900111a4:	2900      	cmp	r1, #0
900111a6:	d1f4      	bne.n	90011192 <UART_CheckIdleState+0xfa>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
900111a8:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
900111aa:	2a01      	cmp	r2, #1
900111ac:	d00b      	beq.n	900111c6 <UART_CheckIdleState+0x12e>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
900111ae:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
900111b0:	2020      	movs	r0, #32
           huart->ErrorCode = HAL_UART_ERROR_ORE;
900111b2:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
900111b4:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
  huart->RxISR = NULL;
900111b8:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
900111ba:	66e2      	str	r2, [r4, #108]	@ 0x6c
           __HAL_UNLOCK(huart);
900111bc:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
           huart->ErrorCode = HAL_UART_ERROR_ORE;
900111c0:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
           return HAL_ERROR;
900111c4:	e79c      	b.n	90011100 <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900111c6:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
900111ca:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900111ce:	e843 2100 	strex	r1, r2, [r3]
900111d2:	2900      	cmp	r1, #0
900111d4:	d1f7      	bne.n	900111c6 <UART_CheckIdleState+0x12e>
900111d6:	e7ea      	b.n	900111ae <UART_CheckIdleState+0x116>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
900111d8:	f44f 6200 	mov.w	r2, #2048	@ 0x800
900111dc:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900111de:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
900111e2:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900111e6:	e843 2100 	strex	r1, r2, [r3]
900111ea:	2900      	cmp	r1, #0
900111ec:	d1f7      	bne.n	900111de <UART_CheckIdleState+0x146>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
900111ee:	483f      	ldr	r0, [pc, #252]	@ (900112ec <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900111f0:	f103 0208 	add.w	r2, r3, #8
900111f4:	e852 2f00 	ldrex	r2, [r2]
900111f8:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900111fa:	f103 0508 	add.w	r5, r3, #8
900111fe:	e845 2100 	strex	r1, r2, [r5]
90011202:	2900      	cmp	r1, #0
90011204:	d1f4      	bne.n	900111f0 <UART_CheckIdleState+0x158>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
90011206:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
90011208:	2a01      	cmp	r2, #1
9001120a:	d00a      	beq.n	90011222 <UART_CheckIdleState+0x18a>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9001120c:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9001120e:	2120      	movs	r1, #32
  huart->RxISR = NULL;
90011210:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
90011212:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
90011216:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9001121a:	66e2      	str	r2, [r4, #108]	@ 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9001121c:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_TIMEOUT;
90011220:	e76e      	b.n	90011100 <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90011222:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
90011226:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9001122a:	e843 2100 	strex	r1, r2, [r3]
9001122e:	2900      	cmp	r1, #0
90011230:	d1f7      	bne.n	90011222 <UART_CheckIdleState+0x18a>
90011232:	e7eb      	b.n	9001120c <UART_CheckIdleState+0x174>
           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
90011234:	2208      	movs	r2, #8
90011236:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90011238:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9001123c:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90011240:	e843 2100 	strex	r1, r2, [r3]
90011244:	2900      	cmp	r1, #0
90011246:	d1f7      	bne.n	90011238 <UART_CheckIdleState+0x1a0>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
90011248:	4828      	ldr	r0, [pc, #160]	@ (900112ec <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001124a:	f103 0208 	add.w	r2, r3, #8
9001124e:	e852 2f00 	ldrex	r2, [r2]
90011252:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90011254:	f103 0508 	add.w	r5, r3, #8
90011258:	e845 2100 	strex	r1, r2, [r5]
9001125c:	2900      	cmp	r1, #0
9001125e:	d1f4      	bne.n	9001124a <UART_CheckIdleState+0x1b2>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
90011260:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
90011262:	2a01      	cmp	r2, #1
90011264:	d00b      	beq.n	9001127e <UART_CheckIdleState+0x1e6>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90011266:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
90011268:	2020      	movs	r0, #32
           huart->ErrorCode = HAL_UART_ERROR_ORE;
9001126a:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
9001126c:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
  huart->RxISR = NULL;
90011270:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
90011272:	66e2      	str	r2, [r4, #108]	@ 0x6c
           __HAL_UNLOCK(huart);
90011274:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
           huart->ErrorCode = HAL_UART_ERROR_ORE;
90011278:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
           return HAL_ERROR;
9001127c:	e766      	b.n	9001114c <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9001127e:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
90011282:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
90011286:	e843 2100 	strex	r1, r2, [r3]
9001128a:	2900      	cmp	r1, #0
9001128c:	d1f7      	bne.n	9001127e <UART_CheckIdleState+0x1e6>
9001128e:	e7ea      	b.n	90011266 <UART_CheckIdleState+0x1ce>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
90011290:	f44f 6200 	mov.w	r2, #2048	@ 0x800
90011294:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
90011296:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9001129a:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9001129e:	e843 2100 	strex	r1, r2, [r3]
900112a2:	2900      	cmp	r1, #0
900112a4:	d1f7      	bne.n	90011296 <UART_CheckIdleState+0x1fe>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
900112a6:	4811      	ldr	r0, [pc, #68]	@ (900112ec <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900112a8:	f103 0208 	add.w	r2, r3, #8
900112ac:	e852 2f00 	ldrex	r2, [r2]
900112b0:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900112b2:	f103 0508 	add.w	r5, r3, #8
900112b6:	e845 2100 	strex	r1, r2, [r5]
900112ba:	2900      	cmp	r1, #0
900112bc:	d1f4      	bne.n	900112a8 <UART_CheckIdleState+0x210>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
900112be:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
900112c0:	2a01      	cmp	r2, #1
900112c2:	d00a      	beq.n	900112da <UART_CheckIdleState+0x242>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
900112c4:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
900112c6:	2120      	movs	r1, #32
  huart->RxISR = NULL;
900112c8:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
900112ca:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
900112ce:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
900112d2:	66e2      	str	r2, [r4, #108]	@ 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
900112d4:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_TIMEOUT;
900112d8:	e738      	b.n	9001114c <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
900112da:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
900112de:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
900112e2:	e843 2100 	strex	r1, r2, [r3]
900112e6:	2900      	cmp	r1, #0
900112e8:	d1f7      	bne.n	900112da <UART_CheckIdleState+0x242>
900112ea:	e7eb      	b.n	900112c4 <UART_CheckIdleState+0x22c>
900112ec:	effffffe 	.word	0xeffffffe

900112f0 <HAL_UART_Init>:
  if (huart == NULL)
900112f0:	b380      	cbz	r0, 90011354 <HAL_UART_Init+0x64>
  if (huart->gState == HAL_UART_STATE_RESET)
900112f2:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
{
900112f6:	b510      	push	{r4, lr}
900112f8:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_RESET)
900112fa:	b333      	cbz	r3, 9001134a <HAL_UART_Init+0x5a>
  __HAL_UART_DISABLE(huart);
900112fc:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
900112fe:	2324      	movs	r3, #36	@ 0x24
  if (UART_SetConfig(huart) == HAL_ERROR)
90011300:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_BUSY;
90011302:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  __HAL_UART_DISABLE(huart);
90011306:	6813      	ldr	r3, [r2, #0]
90011308:	f023 0301 	bic.w	r3, r3, #1
9001130c:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
9001130e:	f7ff fcaf 	bl	90010c70 <UART_SetConfig>
90011312:	2801      	cmp	r0, #1
90011314:	d017      	beq.n	90011346 <HAL_UART_Init+0x56>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
90011316:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90011318:	b98b      	cbnz	r3, 9001133e <HAL_UART_Init+0x4e>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9001131a:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
9001131c:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9001131e:	685a      	ldr	r2, [r3, #4]
90011320:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
90011324:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
90011326:	689a      	ldr	r2, [r3, #8]
90011328:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
9001132c:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
9001132e:	681a      	ldr	r2, [r3, #0]
90011330:	f042 0201 	orr.w	r2, r2, #1
}
90011334:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
90011338:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
9001133a:	f7ff bead 	b.w	90011098 <UART_CheckIdleState>
    UART_AdvFeatureConfig(huart);
9001133e:	4620      	mov	r0, r4
90011340:	f7ff fe52 	bl	90010fe8 <UART_AdvFeatureConfig>
90011344:	e7e9      	b.n	9001131a <HAL_UART_Init+0x2a>
}
90011346:	2001      	movs	r0, #1
90011348:	bd10      	pop	{r4, pc}
    huart->Lock = HAL_UNLOCKED;
9001134a:	f880 3084 	strb.w	r3, [r0, #132]	@ 0x84
    HAL_UART_MspInit(huart);
9001134e:	f7f0 f92d 	bl	900015ac <HAL_UART_MspInit>
90011352:	e7d3      	b.n	900112fc <HAL_UART_Init+0xc>
}
90011354:	2001      	movs	r0, #1
90011356:	4770      	bx	lr

90011358 <HAL_UARTEx_WakeupCallback>:
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_WakeupCallback can be implemented in the user file.
   */
}
90011358:	4770      	bx	lr
9001135a:	bf00      	nop

9001135c <HAL_UARTEx_RxFifoFullCallback>:
/**
  * @brief  UART RX Fifo full callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_RxFifoFullCallback(UART_HandleTypeDef *huart)
9001135c:	4770      	bx	lr
9001135e:	bf00      	nop

90011360 <HAL_UARTEx_TxFifoEmptyCallback>:
/**
  * @brief  UART TX Fifo empty callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_TxFifoEmptyCallback(UART_HandleTypeDef *huart)
90011360:	4770      	bx	lr
90011362:	bf00      	nop

90011364 <HAL_UARTEx_DisableFifoMode>:

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
90011364:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
90011368:	2a01      	cmp	r2, #1
9001136a:	d017      	beq.n	9001139c <HAL_UARTEx_DisableFifoMode+0x38>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
9001136c:	6802      	ldr	r2, [r0, #0]
9001136e:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
90011370:	2024      	movs	r0, #36	@ 0x24
  /* Disable UART */
  __HAL_UART_DISABLE(huart);

  /* Enable FIFO mode */
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
  huart->FifoMode = UART_FIFOMODE_DISABLE;
90011372:	2100      	movs	r1, #0
{
90011374:	b430      	push	{r4, r5}
  huart->gState = HAL_UART_STATE_BUSY;
90011376:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);

  huart->gState = HAL_UART_STATE_READY;
9001137a:	2520      	movs	r5, #32
  tmpcr1 = READ_REG(huart->Instance->CR1);
9001137c:	6810      	ldr	r0, [r2, #0]
  __HAL_UART_DISABLE(huart);
9001137e:	6814      	ldr	r4, [r2, #0]
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
90011380:	f020 5000 	bic.w	r0, r0, #536870912	@ 0x20000000
  __HAL_UART_DISABLE(huart);
90011384:	f024 0401 	bic.w	r4, r4, #1
90011388:	6014      	str	r4, [r2, #0]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9001138a:	6659      	str	r1, [r3, #100]	@ 0x64
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9001138c:	6010      	str	r0, [r2, #0]

  /* Process Unlocked */
  __HAL_UNLOCK(huart);

  return HAL_OK;
9001138e:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
90011390:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
90011394:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
90011398:	bc30      	pop	{r4, r5}
9001139a:	4770      	bx	lr
  __HAL_LOCK(huart);
9001139c:	2002      	movs	r0, #2
}
9001139e:	4770      	bx	lr

900113a0 <HAL_UARTEx_SetTxFifoThreshold>:
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
900113a0:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
900113a4:	2a01      	cmp	r2, #1
900113a6:	d037      	beq.n	90011418 <HAL_UARTEx_SetTxFifoThreshold+0x78>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
900113a8:	6802      	ldr	r2, [r0, #0]
900113aa:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
900113ac:	2024      	movs	r0, #36	@ 0x24
{
900113ae:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
900113b0:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
900113b4:	6814      	ldr	r4, [r2, #0]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
900113b6:	6810      	ldr	r0, [r2, #0]
900113b8:	f020 0001 	bic.w	r0, r0, #1
900113bc:	6010      	str	r0, [r2, #0]

  /* Update TX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
900113be:	6890      	ldr	r0, [r2, #8]
900113c0:	f020 4060 	bic.w	r0, r0, #3758096384	@ 0xe0000000
900113c4:	4301      	orrs	r1, r0
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
900113c6:	6e58      	ldr	r0, [r3, #100]	@ 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
900113c8:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
900113ca:	b310      	cbz	r0, 90011412 <HAL_UARTEx_SetTxFifoThreshold+0x72>
  }
  else
  {
    rx_fifo_depth = RX_FIFO_DEPTH;
    tx_fifo_depth = TX_FIFO_DEPTH;
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
900113cc:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
900113ce:	6890      	ldr	r0, [r2, #8]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
900113d0:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
900113d4:	4911      	ldr	r1, [pc, #68]	@ (9001141c <HAL_UARTEx_SetTxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
900113d6:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
900113da:	4d11      	ldr	r5, [pc, #68]	@ (90011420 <HAL_UARTEx_SetTxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
900113dc:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
900113e0:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
900113e4:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
900113e8:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
900113ea:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
900113ee:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
900113f0:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
900113f4:	fbb1 f1f5 	udiv	r1, r1, r5
900113f8:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  huart->gState = HAL_UART_STATE_READY;
900113fc:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
900113fe:	2100      	movs	r1, #0
90011400:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
90011404:	6014      	str	r4, [r2, #0]
  return HAL_OK;
90011406:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
90011408:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9001140c:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
90011410:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
90011412:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
90011414:	4608      	mov	r0, r1
90011416:	e7ef      	b.n	900113f8 <HAL_UARTEx_SetTxFifoThreshold+0x58>
  __HAL_LOCK(huart);
90011418:	2002      	movs	r0, #2
}
9001141a:	4770      	bx	lr
9001141c:	9002f8d4 	.word	0x9002f8d4
90011420:	9002f8cc 	.word	0x9002f8cc

90011424 <HAL_UARTEx_SetRxFifoThreshold>:
  __HAL_LOCK(huart);
90011424:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
90011428:	2a01      	cmp	r2, #1
9001142a:	d037      	beq.n	9001149c <HAL_UARTEx_SetRxFifoThreshold+0x78>
  tmpcr1 = READ_REG(huart->Instance->CR1);
9001142c:	6802      	ldr	r2, [r0, #0]
9001142e:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
90011430:	2024      	movs	r0, #36	@ 0x24
{
90011432:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
90011434:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
90011438:	6814      	ldr	r4, [r2, #0]
  __HAL_UART_DISABLE(huart);
9001143a:	6810      	ldr	r0, [r2, #0]
9001143c:	f020 0001 	bic.w	r0, r0, #1
90011440:	6010      	str	r0, [r2, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
90011442:	6890      	ldr	r0, [r2, #8]
90011444:	f020 6060 	bic.w	r0, r0, #234881024	@ 0xe000000
90011448:	4301      	orrs	r1, r0
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9001144a:	6e58      	ldr	r0, [r3, #100]	@ 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
9001144c:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9001144e:	b310      	cbz	r0, 90011496 <HAL_UARTEx_SetRxFifoThreshold+0x72>
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
90011450:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
90011452:	6890      	ldr	r0, [r2, #8]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
90011454:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90011458:	4911      	ldr	r1, [pc, #68]	@ (900114a0 <HAL_UARTEx_SetRxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9001145a:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
9001145e:	4d11      	ldr	r5, [pc, #68]	@ (900114a4 <HAL_UARTEx_SetRxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90011460:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
90011464:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
90011468:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9001146c:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
9001146e:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
90011472:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
90011474:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
90011478:	fbb1 f1f5 	udiv	r1, r1, r5
9001147c:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  huart->gState = HAL_UART_STATE_READY;
90011480:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
90011482:	2100      	movs	r1, #0
90011484:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
90011488:	6014      	str	r4, [r2, #0]
  return HAL_OK;
9001148a:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9001148c:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
90011490:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
90011494:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
90011496:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
90011498:	4608      	mov	r0, r1
9001149a:	e7ef      	b.n	9001147c <HAL_UARTEx_SetRxFifoThreshold+0x58>
  __HAL_LOCK(huart);
9001149c:	2002      	movs	r0, #2
}
9001149e:	4770      	bx	lr
900114a0:	9002f8d4 	.word	0x9002f8d4
900114a4:	9002f8cc 	.word	0x9002f8cc

900114a8 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
900114a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
900114ac:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
900114b0:	e9d1 8200 	ldrd	r8, r2, [r1]
900114b4:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
900114b6:	ea43 030e 	orr.w	r3, r3, lr
900114ba:	e9d1 c602 	ldrd	ip, r6, [r1, #8]
900114be:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
900114c2:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
900114c4:	f1b8 0f00 	cmp.w	r8, #0
900114c8:	d10f      	bne.n	900114ea <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
900114ca:	433b      	orrs	r3, r7
900114cc:	4313      	orrs	r3, r2
900114ce:	4a11      	ldr	r2, [pc, #68]	@ (90011514 <FMC_SDRAM_Init+0x6c>)
900114d0:	ea43 030c 	orr.w	r3, r3, ip
900114d4:	4333      	orrs	r3, r6
900114d6:	432b      	orrs	r3, r5
900114d8:	4323      	orrs	r3, r4
900114da:	430b      	orrs	r3, r1
900114dc:	6801      	ldr	r1, [r0, #0]
900114de:	400a      	ands	r2, r1
900114e0:	4313      	orrs	r3, r2
900114e2:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
900114e4:	2000      	movs	r0, #0
900114e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
900114ea:	ea42 020c 	orr.w	r2, r2, ip
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
900114ee:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
900114f0:	4332      	orrs	r2, r6
900114f2:	432a      	orrs	r2, r5
900114f4:	4322      	orrs	r2, r4
900114f6:	4c07      	ldr	r4, [pc, #28]	@ (90011514 <FMC_SDRAM_Init+0x6c>)
900114f8:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
900114fa:	6801      	ldr	r1, [r0, #0]
900114fc:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
90011500:	430b      	orrs	r3, r1
90011502:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
90011504:	6843      	ldr	r3, [r0, #4]
90011506:	401c      	ands	r4, r3
90011508:	4322      	orrs	r2, r4
9001150a:	6042      	str	r2, [r0, #4]
}
9001150c:	2000      	movs	r0, #0
9001150e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011512:	bf00      	nop
90011514:	ffff8000 	.word	0xffff8000

90011518 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
90011518:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9001151a:	68cc      	ldr	r4, [r1, #12]
9001151c:	694b      	ldr	r3, [r1, #20]
9001151e:	3c01      	subs	r4, #1
90011520:	688d      	ldr	r5, [r1, #8]
90011522:	698f      	ldr	r7, [r1, #24]
90011524:	3b01      	subs	r3, #1
90011526:	ea4f 3e04 	mov.w	lr, r4, lsl #12
9001152a:	684c      	ldr	r4, [r1, #4]
9001152c:	680e      	ldr	r6, [r1, #0]
9001152e:	3d01      	subs	r5, #1
90011530:	3c01      	subs	r4, #1
90011532:	051b      	lsls	r3, r3, #20
90011534:	022d      	lsls	r5, r5, #8
90011536:	3e01      	subs	r6, #1
90011538:	ea4f 1c04 	mov.w	ip, r4, lsl #4
9001153c:	690c      	ldr	r4, [r1, #16]
9001153e:	1e79      	subs	r1, r7, #1
90011540:	3c01      	subs	r4, #1
90011542:	0609      	lsls	r1, r1, #24
90011544:	0424      	lsls	r4, r4, #16
  if (Bank == FMC_SDRAM_BANK1)
90011546:	b972      	cbnz	r2, 90011566 <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
90011548:	ea4e 0303 	orr.w	r3, lr, r3
9001154c:	6882      	ldr	r2, [r0, #8]
9001154e:	4333      	orrs	r3, r6
90011550:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
90011554:	ea43 030c 	orr.w	r3, r3, ip
90011558:	432b      	orrs	r3, r5
9001155a:	4323      	orrs	r3, r4
9001155c:	430b      	orrs	r3, r1
9001155e:	4313      	orrs	r3, r2
90011560:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
90011562:	2000      	movs	r0, #0
90011564:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
90011566:	ea4e 0e03 	orr.w	lr, lr, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9001156a:	ea4c 0305 	orr.w	r3, ip, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9001156e:	4a08      	ldr	r2, [pc, #32]	@ (90011590 <FMC_SDRAM_Timing_Init+0x78>)
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
90011570:	4333      	orrs	r3, r6
90011572:	4323      	orrs	r3, r4
90011574:	430b      	orrs	r3, r1
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
90011576:	6881      	ldr	r1, [r0, #8]
90011578:	400a      	ands	r2, r1
9001157a:	ea42 020e 	orr.w	r2, r2, lr
9001157e:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
90011580:	68c2      	ldr	r2, [r0, #12]
90011582:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
90011586:	4313      	orrs	r3, r2
90011588:	60c3      	str	r3, [r0, #12]
}
9001158a:	2000      	movs	r0, #0
9001158c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001158e:	bf00      	nop
90011590:	ff0f0fff 	.word	0xff0f0fff

90011594 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
90011594:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
90011596:	2200      	movs	r2, #0
{
90011598:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9001159a:	f44f 7534 	mov.w	r5, #720	@ 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9001159e:	f06f 4470 	mvn.w	r4, #4026531840	@ 0xf0000000
900115a2:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
900115a6:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
900115aa:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
900115ac:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
900115b0:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
900115b2:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
900115b4:	619a      	str	r2, [r3, #24]
}
900115b6:	bc30      	pop	{r4, r5}
900115b8:	4770      	bx	lr
900115ba:	bf00      	nop

900115bc <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
900115bc:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
900115be:	e9d1 3400 	ldrd	r3, r4, [r1]
{
900115c2:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
900115c4:	6900      	ldr	r0, [r0, #16]
900115c6:	4323      	orrs	r3, r4
900115c8:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
900115cc:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
900115d0:	4c05      	ldr	r4, [pc, #20]	@ (900115e8 <FMC_SDRAM_SendCommand+0x2c>)
900115d2:	3901      	subs	r1, #1
900115d4:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
900115d6:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
900115d8:	4323      	orrs	r3, r4
}
900115da:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
900115de:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
900115e2:	6113      	str	r3, [r2, #16]
}
900115e4:	4770      	bx	lr
900115e6:	bf00      	nop
900115e8:	ffc00000 	.word	0xffc00000

900115ec <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
900115ec:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
900115ee:	4b05      	ldr	r3, [pc, #20]	@ (90011604 <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
900115f0:	2000      	movs	r0, #0
{
900115f2:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
900115f4:	6954      	ldr	r4, [r2, #20]
900115f6:	4023      	ands	r3, r4
}
900115f8:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
900115fc:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
90011600:	6153      	str	r3, [r2, #20]
}
90011602:	4770      	bx	lr
90011604:	ffffc001 	.word	0xffffc001

90011608 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
90011608:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9001160a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9001160e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
90011610:	f001 ff2e 	bl	90013470 <xTaskGetSchedulerState>
90011614:	2801      	cmp	r0, #1
90011616:	d100      	bne.n	9001161a <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
90011618:	bd08      	pop	{r3, pc}
9001161a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9001161e:	f000 bbc9 	b.w	90011db4 <xPortSysTickHandler>
90011622:	bf00      	nop

90011624 <osMutexNew>:
}

/*---------------------------------------------------------------------------*/
#if (configUSE_OS2_MUTEX == 1)

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
90011624:	b530      	push	{r4, r5, lr}
90011626:	b083      	sub	sp, #12
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
90011628:	f3ef 8505 	mrs	r5, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
9001162c:	b9bd      	cbnz	r5, 9001165e <osMutexNew+0x3a>
    if (attr != NULL) {
9001162e:	4604      	mov	r4, r0
90011630:	b1c0      	cbz	r0, 90011664 <osMutexNew+0x40>
      type = attr->attr_bits;
90011632:	6845      	ldr	r5, [r0, #4]
      rmtx = 1U;
    } else {
      rmtx = 0U;
    }

    if ((type & osMutexRobust) != osMutexRobust) {
90011634:	072b      	lsls	r3, r5, #28
90011636:	d412      	bmi.n	9001165e <osMutexNew+0x3a>
      mem = -1;

      if (attr != NULL) {
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
90011638:	6881      	ldr	r1, [r0, #8]
    if ((type & osMutexRecursive) == osMutexRecursive) {
9001163a:	f005 0501 	and.w	r5, r5, #1
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9001163e:	68c3      	ldr	r3, [r0, #12]
90011640:	b309      	cbz	r1, 90011686 <osMutexNew+0x62>
90011642:	2b4f      	cmp	r3, #79	@ 0x4f
90011644:	d90b      	bls.n	9001165e <osMutexNew+0x3a>
        mem = 0;
      }

      if (mem == 1) {
        #if (configSUPPORT_STATIC_ALLOCATION == 1)
          if (rmtx != 0U) {
90011646:	b345      	cbz	r5, 9001169a <osMutexNew+0x76>
            #if (configUSE_RECURSIVE_MUTEXES == 1)
            hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
90011648:	2004      	movs	r0, #4
9001164a:	f000 ff05 	bl	90012458 <xQueueCreateMutexStatic>
          #endif
        }
      }

      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hMutex != NULL) {
9001164e:	b130      	cbz	r0, 9001165e <osMutexNew+0x3a>
        if (attr != NULL) {
          name = attr->name;
90011650:	6824      	ldr	r4, [r4, #0]
90011652:	e00c      	b.n	9001166e <osMutexNew+0x4a>
              hMutex = xSemaphoreCreateRecursiveMutex ();
90011654:	2004      	movs	r0, #4
90011656:	f000 ff6f 	bl	90012538 <xQueueCreateMutex>
      if (hMutex != NULL) {
9001165a:	2800      	cmp	r0, #0
9001165c:	d1f8      	bne.n	90011650 <osMutexNew+0x2c>
  hMutex = NULL;
9001165e:	2000      	movs	r0, #0
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
90011660:	b003      	add	sp, #12
90011662:	bd30      	pop	{r4, r5, pc}
              hMutex = xSemaphoreCreateMutex ();
90011664:	2001      	movs	r0, #1
90011666:	f000 ff67 	bl	90012538 <xQueueCreateMutex>
      if (hMutex != NULL) {
9001166a:	2800      	cmp	r0, #0
9001166c:	d0f7      	beq.n	9001165e <osMutexNew+0x3a>
        vQueueAddToRegistry (hMutex, name);
9001166e:	4621      	mov	r1, r4
90011670:	9001      	str	r0, [sp, #4]
90011672:	f001 fc2b 	bl	90012ecc <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
90011676:	9801      	ldr	r0, [sp, #4]
90011678:	f015 0f01 	tst.w	r5, #1
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
9001167c:	bf18      	it	ne
9001167e:	f040 0001 	orrne.w	r0, r0, #1
}
90011682:	b003      	add	sp, #12
90011684:	bd30      	pop	{r4, r5, pc}
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
90011686:	2b00      	cmp	r3, #0
90011688:	d1e9      	bne.n	9001165e <osMutexNew+0x3a>
            if (rmtx != 0U) {
9001168a:	2d00      	cmp	r5, #0
9001168c:	d1e2      	bne.n	90011654 <osMutexNew+0x30>
              hMutex = xSemaphoreCreateMutex ();
9001168e:	2001      	movs	r0, #1
90011690:	f000 ff52 	bl	90012538 <xQueueCreateMutex>
      if (hMutex != NULL) {
90011694:	2800      	cmp	r0, #0
90011696:	d1db      	bne.n	90011650 <osMutexNew+0x2c>
90011698:	e7e1      	b.n	9001165e <osMutexNew+0x3a>
            hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
9001169a:	2001      	movs	r0, #1
9001169c:	f000 fedc 	bl	90012458 <xQueueCreateMutexStatic>
      if (hMutex != NULL) {
900116a0:	2800      	cmp	r0, #0
900116a2:	d1d5      	bne.n	90011650 <osMutexNew+0x2c>
900116a4:	e7db      	b.n	9001165e <osMutexNew+0x3a>
900116a6:	bf00      	nop

900116a8 <osMutexAcquire>:
900116a8:	f3ef 8205 	mrs	r2, IPSR

  rmtx = (uint32_t)mutex_id & 1U;

  stat = osOK;

  if (IS_IRQ()) {
900116ac:	b9d2      	cbnz	r2, 900116e4 <osMutexAcquire+0x3c>
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
900116ae:	2801      	cmp	r0, #1
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
900116b0:	b538      	push	{r3, r4, r5, lr}
900116b2:	4603      	mov	r3, r0
  else if (hMutex == NULL) {
900116b4:	d919      	bls.n	900116ea <osMutexAcquire+0x42>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
900116b6:	f003 0501 	and.w	r5, r3, #1
900116ba:	460c      	mov	r4, r1
900116bc:	f020 0001 	bic.w	r0, r0, #1
900116c0:	b955      	cbnz	r5, 900116d8 <osMutexAcquire+0x30>
        }
      }
      #endif
    }
    else {
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
900116c2:	f001 f9b3 	bl	90012a2c <xQueueSemaphoreTake>
900116c6:	2801      	cmp	r0, #1
900116c8:	d00a      	beq.n	900116e0 <osMutexAcquire+0x38>
        if (timeout != 0U) {
          stat = osErrorTimeout;
        } else {
          stat = osErrorResource;
900116ca:	2c00      	cmp	r4, #0
900116cc:	bf14      	ite	ne
900116ce:	f06f 0001 	mvnne.w	r0, #1
900116d2:	f06f 0002 	mvneq.w	r0, #2
      }
    }
  }

  return (stat);
}
900116d6:	bd38      	pop	{r3, r4, r5, pc}
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
900116d8:	f001 fb34 	bl	90012d44 <xQueueTakeMutexRecursive>
900116dc:	2801      	cmp	r0, #1
900116de:	d1f4      	bne.n	900116ca <osMutexAcquire+0x22>
  stat = osOK;
900116e0:	2000      	movs	r0, #0
}
900116e2:	bd38      	pop	{r3, r4, r5, pc}
    stat = osErrorISR;
900116e4:	f06f 0005 	mvn.w	r0, #5
}
900116e8:	4770      	bx	lr
    stat = osErrorParameter;
900116ea:	f06f 0003 	mvn.w	r0, #3
}
900116ee:	bd38      	pop	{r3, r4, r5, pc}

900116f0 <osMutexRelease>:
900116f0:	f3ef 8105 	mrs	r1, IPSR

  rmtx = (uint32_t)mutex_id & 1U;

  stat = osOK;

  if (IS_IRQ()) {
900116f4:	b9b9      	cbnz	r1, 90011726 <osMutexRelease+0x36>
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
900116f6:	2801      	cmp	r0, #1
900116f8:	4602      	mov	r2, r0
900116fa:	d917      	bls.n	9001172c <osMutexRelease+0x3c>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
900116fc:	f020 0001 	bic.w	r0, r0, #1
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
90011700:	b508      	push	{r3, lr}
90011702:	f002 0301 	and.w	r3, r2, #1
    if (rmtx != 0U) {
90011706:	b93b      	cbnz	r3, 90011718 <osMutexRelease+0x28>
        stat = osErrorResource;
      }
      #endif
    }
    else {
      if (xSemaphoreGive (hMutex) != pdPASS) {
90011708:	461a      	mov	r2, r3
9001170a:	4619      	mov	r1, r3
9001170c:	f000 fd22 	bl	90012154 <xQueueGenericSend>
90011710:	2801      	cmp	r0, #1
90011712:	d105      	bne.n	90011720 <osMutexRelease+0x30>
  stat = osOK;
90011714:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
90011716:	bd08      	pop	{r3, pc}
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
90011718:	f000 feee 	bl	900124f8 <xQueueGiveMutexRecursive>
9001171c:	2801      	cmp	r0, #1
9001171e:	d0f9      	beq.n	90011714 <osMutexRelease+0x24>
        stat = osErrorResource;
90011720:	f06f 0002 	mvn.w	r0, #2
}
90011724:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
90011726:	f06f 0005 	mvn.w	r0, #5
9001172a:	4770      	bx	lr
    stat = osErrorParameter;
9001172c:	f06f 0003 	mvn.w	r0, #3
}
90011730:	4770      	bx	lr
90011732:	bf00      	nop

90011734 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
90011734:	b5f0      	push	{r4, r5, r6, r7, lr}
90011736:	b083      	sub	sp, #12
90011738:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9001173c:	b98e      	cbnz	r6, 90011762 <osSemaphoreNew+0x2e>
9001173e:	4605      	mov	r5, r0
90011740:	b178      	cbz	r0, 90011762 <osSemaphoreNew+0x2e>
90011742:	4288      	cmp	r0, r1
90011744:	460f      	mov	r7, r1
90011746:	d30c      	bcc.n	90011762 <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
90011748:	4614      	mov	r4, r2
9001174a:	b172      	cbz	r2, 9001176a <osSemaphoreNew+0x36>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9001174c:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
90011750:	b14a      	cbz	r2, 90011766 <osSemaphoreNew+0x32>
90011752:	2b4f      	cmp	r3, #79	@ 0x4f
90011754:	d905      	bls.n	90011762 <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
90011756:	2801      	cmp	r0, #1
90011758:	d02f      	beq.n	900117ba <osSemaphoreNew+0x86>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9001175a:	f000 fc55 	bl	90012008 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9001175e:	4605      	mov	r5, r0
90011760:	b968      	cbnz	r0, 9001177e <osSemaphoreNew+0x4a>
  hSemaphore = NULL;
90011762:	2500      	movs	r5, #0
90011764:	e010      	b.n	90011788 <osSemaphoreNew+0x54>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
90011766:	2b00      	cmp	r3, #0
90011768:	d1fb      	bne.n	90011762 <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9001176a:	2d01      	cmp	r5, #1
9001176c:	d00f      	beq.n	9001178e <osSemaphoreNew+0x5a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9001176e:	4628      	mov	r0, r5
90011770:	4639      	mov	r1, r7
90011772:	f000 fca9 	bl	900120c8 <xQueueCreateCountingSemaphore>
90011776:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
90011778:	2d00      	cmp	r5, #0
9001177a:	d0f2      	beq.n	90011762 <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9001177c:	b104      	cbz	r4, 90011780 <osSemaphoreNew+0x4c>
          name = attr->name;
9001177e:	6824      	ldr	r4, [r4, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
90011780:	4621      	mov	r1, r4
90011782:	4628      	mov	r0, r5
90011784:	f001 fba2 	bl	90012ecc <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
90011788:	4628      	mov	r0, r5
9001178a:	b003      	add	sp, #12
9001178c:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9001178e:	4628      	mov	r0, r5
90011790:	2203      	movs	r2, #3
90011792:	2100      	movs	r1, #0
90011794:	f000 fbf6 	bl	90011f84 <xQueueGenericCreate>
90011798:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9001179a:	2d00      	cmp	r5, #0
9001179c:	d0e1      	beq.n	90011762 <osSemaphoreNew+0x2e>
9001179e:	2f00      	cmp	r7, #0
900117a0:	d0ea      	beq.n	90011778 <osSemaphoreNew+0x44>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
900117a2:	2300      	movs	r3, #0
900117a4:	4628      	mov	r0, r5
900117a6:	461a      	mov	r2, r3
900117a8:	4619      	mov	r1, r3
900117aa:	f000 fcd3 	bl	90012154 <xQueueGenericSend>
900117ae:	2801      	cmp	r0, #1
900117b0:	d0e4      	beq.n	9001177c <osSemaphoreNew+0x48>
            vSemaphoreDelete (hSemaphore);
900117b2:	4628      	mov	r0, r5
900117b4:	f001 fb44 	bl	90012e40 <vQueueDelete>
      if (hSemaphore != NULL) {
900117b8:	e7d3      	b.n	90011762 <osSemaphoreNew+0x2e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
900117ba:	4613      	mov	r3, r2
900117bc:	2203      	movs	r2, #3
900117be:	4631      	mov	r1, r6
900117c0:	9200      	str	r2, [sp, #0]
900117c2:	4632      	mov	r2, r6
900117c4:	f000 fb72 	bl	90011eac <xQueueGenericCreateStatic>
900117c8:	4605      	mov	r5, r0
900117ca:	e7e6      	b.n	9001179a <osSemaphoreNew+0x66>

900117cc <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
900117cc:	b360      	cbz	r0, 90011828 <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
900117ce:	b510      	push	{r4, lr}
900117d0:	460c      	mov	r4, r1
900117d2:	b082      	sub	sp, #8
900117d4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
900117d8:	b1b3      	cbz	r3, 90011808 <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
900117da:	bb11      	cbnz	r1, 90011822 <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
900117dc:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
900117de:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
900117e0:	f001 fad0 	bl	90012d84 <xQueueReceiveFromISR>
900117e4:	2801      	cmp	r0, #1
900117e6:	d118      	bne.n	9001181a <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
900117e8:	9b01      	ldr	r3, [sp, #4]
900117ea:	b913      	cbnz	r3, 900117f2 <osSemaphoreAcquire+0x26>
  stat = osOK;
900117ec:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
900117ee:	b002      	add	sp, #8
900117f0:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
900117f2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900117f6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900117fa:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900117fe:	f3bf 8f4f 	dsb	sy
90011802:	f3bf 8f6f 	isb	sy
90011806:	e7f1      	b.n	900117ec <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
90011808:	f001 f910 	bl	90012a2c <xQueueSemaphoreTake>
9001180c:	2801      	cmp	r0, #1
9001180e:	d0ed      	beq.n	900117ec <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
90011810:	b11c      	cbz	r4, 9001181a <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
90011812:	f06f 0001 	mvn.w	r0, #1
}
90011816:	b002      	add	sp, #8
90011818:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9001181a:	f06f 0002 	mvn.w	r0, #2
}
9001181e:	b002      	add	sp, #8
90011820:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
90011822:	f06f 0003 	mvn.w	r0, #3
  return (stat);
90011826:	e7e2      	b.n	900117ee <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
90011828:	f06f 0003 	mvn.w	r0, #3
}
9001182c:	4770      	bx	lr
9001182e:	bf00      	nop

90011830 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
90011830:	b328      	cbz	r0, 9001187e <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
90011832:	b500      	push	{lr}
90011834:	b083      	sub	sp, #12
90011836:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9001183a:	b19b      	cbz	r3, 90011864 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9001183c:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9001183e:	a901      	add	r1, sp, #4
    yield = pdFALSE;
90011840:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
90011842:	f000 ff17 	bl	90012674 <xQueueGiveFromISR>
90011846:	2801      	cmp	r0, #1
90011848:	d116      	bne.n	90011878 <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9001184a:	9b01      	ldr	r3, [sp, #4]
9001184c:	b183      	cbz	r3, 90011870 <osSemaphoreRelease+0x40>
9001184e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90011852:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90011856:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9001185a:	f3bf 8f4f 	dsb	sy
9001185e:	f3bf 8f6f 	isb	sy
90011862:	e005      	b.n	90011870 <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
90011864:	461a      	mov	r2, r3
90011866:	4619      	mov	r1, r3
90011868:	f000 fc74 	bl	90012154 <xQueueGenericSend>
9001186c:	2801      	cmp	r0, #1
9001186e:	d103      	bne.n	90011878 <osSemaphoreRelease+0x48>
  stat = osOK;
90011870:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
90011872:	b003      	add	sp, #12
90011874:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
90011878:	f06f 0002 	mvn.w	r0, #2
9001187c:	e7f9      	b.n	90011872 <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
9001187e:	f06f 0003 	mvn.w	r0, #3
}
90011882:	4770      	bx	lr

90011884 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
90011884:	b5f0      	push	{r4, r5, r6, r7, lr}
90011886:	b083      	sub	sp, #12
90011888:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9001188c:	b987      	cbnz	r7, 900118b0 <osMessageQueueNew+0x2c>
9001188e:	4605      	mov	r5, r0
90011890:	b170      	cbz	r0, 900118b0 <osMessageQueueNew+0x2c>
90011892:	b169      	cbz	r1, 900118b0 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
90011894:	4614      	mov	r4, r2
90011896:	b17a      	cbz	r2, 900118b8 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
90011898:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9001189c:	b1c3      	cbz	r3, 900118d0 <osMessageQueueNew+0x4c>
9001189e:	2a4f      	cmp	r2, #79	@ 0x4f
900118a0:	d906      	bls.n	900118b0 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
900118a2:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
900118a4:	b122      	cbz	r2, 900118b0 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
900118a6:	fb01 f505 	mul.w	r5, r1, r5
900118aa:	6966      	ldr	r6, [r4, #20]
900118ac:	42ae      	cmp	r6, r5
900118ae:	d21e      	bcs.n	900118ee <osMessageQueueNew+0x6a>
  hQueue = NULL;
900118b0:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
900118b2:	4628      	mov	r0, r5
900118b4:	b003      	add	sp, #12
900118b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
900118b8:	f000 fb64 	bl	90011f84 <xQueueGenericCreate>
    if (hQueue != NULL) {
900118bc:	4605      	mov	r5, r0
900118be:	2800      	cmp	r0, #0
900118c0:	d0f6      	beq.n	900118b0 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
900118c2:	4628      	mov	r0, r5
900118c4:	4621      	mov	r1, r4
900118c6:	f001 fb01 	bl	90012ecc <vQueueAddToRegistry>
}
900118ca:	4628      	mov	r0, r5
900118cc:	b003      	add	sp, #12
900118ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
900118d0:	2a00      	cmp	r2, #0
900118d2:	d1ed      	bne.n	900118b0 <osMessageQueueNew+0x2c>
900118d4:	6923      	ldr	r3, [r4, #16]
900118d6:	2b00      	cmp	r3, #0
900118d8:	d1ea      	bne.n	900118b0 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
900118da:	6962      	ldr	r2, [r4, #20]
900118dc:	2a00      	cmp	r2, #0
900118de:	d1e7      	bne.n	900118b0 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
900118e0:	f000 fb50 	bl	90011f84 <xQueueGenericCreate>
    if (hQueue != NULL) {
900118e4:	4605      	mov	r5, r0
900118e6:	2800      	cmp	r0, #0
900118e8:	d0e2      	beq.n	900118b0 <osMessageQueueNew+0x2c>
        name = attr->name;
900118ea:	6824      	ldr	r4, [r4, #0]
900118ec:	e7e9      	b.n	900118c2 <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
900118ee:	9700      	str	r7, [sp, #0]
900118f0:	f000 fadc 	bl	90011eac <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
900118f4:	4605      	mov	r5, r0
900118f6:	2800      	cmp	r0, #0
900118f8:	d1f7      	bne.n	900118ea <osMessageQueueNew+0x66>
900118fa:	e7d9      	b.n	900118b0 <osMessageQueueNew+0x2c>

900118fc <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
900118fc:	b560      	push	{r5, r6, lr}
900118fe:	461e      	mov	r6, r3
90011900:	b083      	sub	sp, #12
90011902:	f3ef 8205 	mrs	r2, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
90011906:	fab0 f580 	clz	r5, r0
9001190a:	fab1 f381 	clz	r3, r1
9001190e:	096d      	lsrs	r5, r5, #5
90011910:	095b      	lsrs	r3, r3, #5
  if (IS_IRQ()) {
90011912:	b1da      	cbz	r2, 9001194c <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
90011914:	2e00      	cmp	r6, #0
90011916:	bf18      	it	ne
90011918:	f043 0301 	orrne.w	r3, r3, #1
9001191c:	bb33      	cbnz	r3, 9001196c <osMessageQueuePut+0x70>
9001191e:	bb2d      	cbnz	r5, 9001196c <osMessageQueuePut+0x70>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
90011920:	462b      	mov	r3, r5
90011922:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
90011924:	9501      	str	r5, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
90011926:	f000 fe3f 	bl	900125a8 <xQueueGenericSendFromISR>
9001192a:	2801      	cmp	r0, #1
9001192c:	d11a      	bne.n	90011964 <osMessageQueuePut+0x68>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9001192e:	9b01      	ldr	r3, [sp, #4]
90011930:	b14b      	cbz	r3, 90011946 <osMessageQueuePut+0x4a>
90011932:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90011936:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9001193a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9001193e:	f3bf 8f4f 	dsb	sy
90011942:	f3bf 8f6f 	isb	sy
  stat = osOK;
90011946:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
90011948:	b003      	add	sp, #12
9001194a:	bd60      	pop	{r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9001194c:	b975      	cbnz	r5, 9001196c <osMessageQueuePut+0x70>
9001194e:	b96b      	cbnz	r3, 9001196c <osMessageQueuePut+0x70>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
90011950:	4632      	mov	r2, r6
90011952:	f000 fbff 	bl	90012154 <xQueueGenericSend>
90011956:	2801      	cmp	r0, #1
90011958:	d0f5      	beq.n	90011946 <osMessageQueuePut+0x4a>
        if (timeout != 0U) {
9001195a:	b11e      	cbz	r6, 90011964 <osMessageQueuePut+0x68>
          stat = osErrorTimeout;
9001195c:	f06f 0001 	mvn.w	r0, #1
}
90011960:	b003      	add	sp, #12
90011962:	bd60      	pop	{r5, r6, pc}
        stat = osErrorResource;
90011964:	f06f 0002 	mvn.w	r0, #2
}
90011968:	b003      	add	sp, #12
9001196a:	bd60      	pop	{r5, r6, pc}
      stat = osErrorParameter;
9001196c:	f06f 0003 	mvn.w	r0, #3
  return (stat);
90011970:	e7ea      	b.n	90011948 <osMessageQueuePut+0x4c>
90011972:	bf00      	nop

90011974 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
90011974:	b570      	push	{r4, r5, r6, lr}
90011976:	461e      	mov	r6, r3
90011978:	b082      	sub	sp, #8
9001197a:	f3ef 8305 	mrs	r3, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9001197e:	fab0 f580 	clz	r5, r0
90011982:	fab1 f481 	clz	r4, r1
90011986:	096d      	lsrs	r5, r5, #5
90011988:	0964      	lsrs	r4, r4, #5
  if (IS_IRQ()) {
9001198a:	b1d3      	cbz	r3, 900119c2 <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9001198c:	2e00      	cmp	r6, #0
9001198e:	bf18      	it	ne
90011990:	f044 0401 	orrne.w	r4, r4, #1
90011994:	bb2c      	cbnz	r4, 900119e2 <osMessageQueueGet+0x6e>
90011996:	bb25      	cbnz	r5, 900119e2 <osMessageQueueGet+0x6e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
90011998:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9001199a:	9501      	str	r5, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9001199c:	f001 f9f2 	bl	90012d84 <xQueueReceiveFromISR>
900119a0:	2801      	cmp	r0, #1
900119a2:	d11a      	bne.n	900119da <osMessageQueueGet+0x66>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
900119a4:	9b01      	ldr	r3, [sp, #4]
900119a6:	b14b      	cbz	r3, 900119bc <osMessageQueueGet+0x48>
900119a8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900119ac:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900119b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900119b4:	f3bf 8f4f 	dsb	sy
900119b8:	f3bf 8f6f 	isb	sy
  stat = osOK;
900119bc:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
900119be:	b002      	add	sp, #8
900119c0:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
900119c2:	b975      	cbnz	r5, 900119e2 <osMessageQueueGet+0x6e>
900119c4:	b96c      	cbnz	r4, 900119e2 <osMessageQueueGet+0x6e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
900119c6:	4632      	mov	r2, r6
900119c8:	f000 feaa 	bl	90012720 <xQueueReceive>
900119cc:	2801      	cmp	r0, #1
900119ce:	d0f5      	beq.n	900119bc <osMessageQueueGet+0x48>
        if (timeout != 0U) {
900119d0:	b11e      	cbz	r6, 900119da <osMessageQueueGet+0x66>
          stat = osErrorTimeout;
900119d2:	f06f 0001 	mvn.w	r0, #1
}
900119d6:	b002      	add	sp, #8
900119d8:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
900119da:	f06f 0002 	mvn.w	r0, #2
}
900119de:	b002      	add	sp, #8
900119e0:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
900119e2:	f06f 0003 	mvn.w	r0, #3
  return (stat);
900119e6:	e7ea      	b.n	900119be <osMessageQueueGet+0x4a>

900119e8 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
900119e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900119ec:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
900119ee:	f001 fbd9 	bl	900131a4 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
900119f2:	4a53      	ldr	r2, [pc, #332]	@ (90011b40 <pvPortMalloc+0x158>)
900119f4:	6815      	ldr	r5, [r2, #0]
900119f6:	2d00      	cmp	r5, #0
900119f8:	d035      	beq.n	90011a66 <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
900119fa:	4b52      	ldr	r3, [pc, #328]	@ (90011b44 <pvPortMalloc+0x15c>)
900119fc:	681e      	ldr	r6, [r3, #0]
900119fe:	4234      	tst	r4, r6
90011a00:	d12b      	bne.n	90011a5a <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
90011a02:	b354      	cbz	r4, 90011a5a <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
90011a04:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
90011a08:	0764      	lsls	r4, r4, #29
90011a0a:	d002      	beq.n	90011a12 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
90011a0c:	f020 0007 	bic.w	r0, r0, #7
90011a10:	3008      	adds	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
90011a12:	b310      	cbz	r0, 90011a5a <pvPortMalloc+0x72>
90011a14:	f8df e140 	ldr.w	lr, [pc, #320]	@ 90011b58 <pvPortMalloc+0x170>
90011a18:	f8de c000 	ldr.w	ip, [lr]
90011a1c:	4584      	cmp	ip, r0
90011a1e:	d31c      	bcc.n	90011a5a <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
90011a20:	4c49      	ldr	r4, [pc, #292]	@ (90011b48 <pvPortMalloc+0x160>)
90011a22:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
90011a24:	e003      	b.n	90011a2e <pvPortMalloc+0x46>
90011a26:	681a      	ldr	r2, [r3, #0]
90011a28:	b122      	cbz	r2, 90011a34 <pvPortMalloc+0x4c>
90011a2a:	461c      	mov	r4, r3
90011a2c:	4613      	mov	r3, r2
90011a2e:	6859      	ldr	r1, [r3, #4]
90011a30:	4281      	cmp	r1, r0
90011a32:	d3f8      	bcc.n	90011a26 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
90011a34:	42ab      	cmp	r3, r5
90011a36:	d010      	beq.n	90011a5a <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
90011a38:	681a      	ldr	r2, [r3, #0]
90011a3a:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
90011a3c:	1a0a      	subs	r2, r1, r0
90011a3e:	2a10      	cmp	r2, #16
90011a40:	d947      	bls.n	90011ad2 <pvPortMalloc+0xea>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
90011a42:	181c      	adds	r4, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
90011a44:	0761      	lsls	r1, r4, #29
90011a46:	d02d      	beq.n	90011aa4 <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
90011a48:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011a4c:	f383 8811 	msr	BASEPRI, r3
90011a50:	f3bf 8f6f 	isb	sy
90011a54:	f3bf 8f4f 	dsb	sy
90011a58:	e7fe      	b.n	90011a58 <pvPortMalloc+0x70>
void *pvReturn = NULL;
90011a5a:	2400      	movs	r4, #0
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
90011a5c:	f001 fbaa 	bl	900131b4 <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
90011a60:	4620      	mov	r0, r4
90011a62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
90011a66:	4b39      	ldr	r3, [pc, #228]	@ (90011b4c <pvPortMalloc+0x164>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
90011a68:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
90011a6c:	4e36      	ldr	r6, [pc, #216]	@ (90011b48 <pvPortMalloc+0x160>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
90011a6e:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
90011a70:	4d37      	ldr	r5, [pc, #220]	@ (90011b50 <pvPortMalloc+0x168>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
90011a72:	bf18      	it	ne
90011a74:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
90011a76:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
90011a7a:	bf18      	it	ne
90011a7c:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
90011a80:	6015      	str	r5, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
90011a82:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
90011a84:	6033      	str	r3, [r6, #0]
90011a86:	4619      	mov	r1, r3
	xStart.xBlockSize = ( size_t ) 0;
90011a88:	6072      	str	r2, [r6, #4]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
90011a8a:	1aeb      	subs	r3, r5, r3
}
90011a8c:	4606      	mov	r6, r0
	pxEnd->pxNextFreeBlock = NULL;
90011a8e:	e9c5 2200 	strd	r2, r2, [r5]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
90011a92:	4a30      	ldr	r2, [pc, #192]	@ (90011b54 <pvPortMalloc+0x16c>)
90011a94:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
90011a96:	4a30      	ldr	r2, [pc, #192]	@ (90011b58 <pvPortMalloc+0x170>)
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
90011a98:	e9c1 5300 	strd	r5, r3, [r1]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
90011a9c:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
90011a9e:	4b29      	ldr	r3, [pc, #164]	@ (90011b44 <pvPortMalloc+0x15c>)
90011aa0:	6018      	str	r0, [r3, #0]
}
90011aa2:	e7ac      	b.n	900119fe <pvPortMalloc+0x16>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
90011aa4:	6062      	str	r2, [r4, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
90011aa6:	4a28      	ldr	r2, [pc, #160]	@ (90011b48 <pvPortMalloc+0x160>)
						pxBlock->xBlockSize = xWantedSize;
90011aa8:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
90011aaa:	4617      	mov	r7, r2
90011aac:	6812      	ldr	r2, [r2, #0]
90011aae:	4294      	cmp	r4, r2
90011ab0:	d8fb      	bhi.n	90011aaa <pvPortMalloc+0xc2>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
90011ab2:	6879      	ldr	r1, [r7, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90011ab4:	f8d4 8004 	ldr.w	r8, [r4, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
90011ab8:	eb07 0901 	add.w	r9, r7, r1
90011abc:	454c      	cmp	r4, r9
90011abe:	d028      	beq.n	90011b12 <pvPortMalloc+0x12a>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90011ac0:	eb04 0108 	add.w	r1, r4, r8
90011ac4:	428a      	cmp	r2, r1
90011ac6:	d02e      	beq.n	90011b26 <pvPortMalloc+0x13e>
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
		}
	}
	else
	{
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
90011ac8:	4601      	mov	r1, r0
90011aca:	6022      	str	r2, [r4, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
90011acc:	42a7      	cmp	r7, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
90011ace:	bf18      	it	ne
90011ad0:	603c      	strne	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
90011ad2:	4820      	ldr	r0, [pc, #128]	@ (90011b54 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
90011ad4:	ebac 0201 	sub.w	r2, ip, r1
					pxBlock->pxNextFreeBlock = NULL;
90011ad8:	2500      	movs	r5, #0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
90011ada:	4331      	orrs	r1, r6
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
90011adc:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
90011ade:	f8ce 2000 	str.w	r2, [lr]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
90011ae2:	42a2      	cmp	r2, r4
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
90011ae4:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
90011ae8:	6059      	str	r1, [r3, #4]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
90011aea:	bf38      	it	cc
90011aec:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
90011aee:	481b      	ldr	r0, [pc, #108]	@ (90011b5c <pvPortMalloc+0x174>)
					pxBlock->pxNextFreeBlock = NULL;
90011af0:	601d      	str	r5, [r3, #0]
					xNumberOfSuccessfulAllocations++;
90011af2:	6802      	ldr	r2, [r0, #0]
90011af4:	3201      	adds	r2, #1
90011af6:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
90011af8:	f001 fb5c 	bl	900131b4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
90011afc:	0763      	lsls	r3, r4, #29
90011afe:	d0af      	beq.n	90011a60 <pvPortMalloc+0x78>
90011b00:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011b04:	f383 8811 	msr	BASEPRI, r3
90011b08:	f3bf 8f6f 	isb	sy
90011b0c:	f3bf 8f4f 	dsb	sy
90011b10:	e7fe      	b.n	90011b10 <pvPortMalloc+0x128>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90011b12:	4488      	add	r8, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90011b14:	eb07 0108 	add.w	r1, r7, r8
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90011b18:	f8c7 8004 	str.w	r8, [r7, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90011b1c:	428a      	cmp	r2, r1
90011b1e:	d001      	beq.n	90011b24 <pvPortMalloc+0x13c>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
90011b20:	6859      	ldr	r1, [r3, #4]
90011b22:	e7d6      	b.n	90011ad2 <pvPortMalloc+0xea>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90011b24:	463c      	mov	r4, r7
		if( pxIterator->pxNextFreeBlock != pxEnd )
90011b26:	42aa      	cmp	r2, r5
90011b28:	d006      	beq.n	90011b38 <pvPortMalloc+0x150>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
90011b2a:	6851      	ldr	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90011b2c:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
90011b2e:	4441      	add	r1, r8
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90011b30:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
90011b32:	6061      	str	r1, [r4, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
90011b34:	6859      	ldr	r1, [r3, #4]
90011b36:	e7c9      	b.n	90011acc <pvPortMalloc+0xe4>
90011b38:	6859      	ldr	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
90011b3a:	6022      	str	r2, [r4, #0]
90011b3c:	e7c6      	b.n	90011acc <pvPortMalloc+0xe4>
90011b3e:	bf00      	nop
90011b40:	2400e2a0 	.word	0x2400e2a0
90011b44:	2400e28c 	.word	0x2400e28c
90011b48:	2400e2a4 	.word	0x2400e2a4
90011b4c:	2400e2ac 	.word	0x2400e2ac
90011b50:	24026944 	.word	0x24026944
90011b54:	2400e298 	.word	0x2400e298
90011b58:	2400e29c 	.word	0x2400e29c
90011b5c:	2400e294 	.word	0x2400e294

90011b60 <vPortFree>:
	if( pv != NULL )
90011b60:	b1d0      	cbz	r0, 90011b98 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
90011b62:	4a2d      	ldr	r2, [pc, #180]	@ (90011c18 <vPortFree+0xb8>)
90011b64:	f850 3c04 	ldr.w	r3, [r0, #-4]
90011b68:	6812      	ldr	r2, [r2, #0]
90011b6a:	4213      	tst	r3, r2
90011b6c:	d00b      	beq.n	90011b86 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
90011b6e:	f850 1c08 	ldr.w	r1, [r0, #-8]
90011b72:	b191      	cbz	r1, 90011b9a <vPortFree+0x3a>
90011b74:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011b78:	f383 8811 	msr	BASEPRI, r3
90011b7c:	f3bf 8f6f 	isb	sy
90011b80:	f3bf 8f4f 	dsb	sy
90011b84:	e7fe      	b.n	90011b84 <vPortFree+0x24>
90011b86:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011b8a:	f383 8811 	msr	BASEPRI, r3
90011b8e:	f3bf 8f6f 	isb	sy
90011b92:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
90011b96:	e7fe      	b.n	90011b96 <vPortFree+0x36>
90011b98:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
90011b9a:	ea23 0302 	bic.w	r3, r3, r2
{
90011b9e:	b530      	push	{r4, r5, lr}
90011ba0:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
90011ba2:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
90011ba6:	f1a0 0408 	sub.w	r4, r0, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
90011baa:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
90011bac:	f001 fafa 	bl	900131a4 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
90011bb0:	4a1a      	ldr	r2, [pc, #104]	@ (90011c1c <vPortFree+0xbc>)
90011bb2:	9801      	ldr	r0, [sp, #4]
90011bb4:	6813      	ldr	r3, [r2, #0]
90011bb6:	f850 1c04 	ldr.w	r1, [r0, #-4]
90011bba:	440b      	add	r3, r1
90011bbc:	6013      	str	r3, [r2, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
90011bbe:	4b18      	ldr	r3, [pc, #96]	@ (90011c20 <vPortFree+0xc0>)
90011bc0:	461a      	mov	r2, r3
90011bc2:	681b      	ldr	r3, [r3, #0]
90011bc4:	429c      	cmp	r4, r3
90011bc6:	d8fb      	bhi.n	90011bc0 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
90011bc8:	6855      	ldr	r5, [r2, #4]
90011bca:	eb02 0e05 	add.w	lr, r2, r5
90011bce:	4574      	cmp	r4, lr
90011bd0:	d011      	beq.n	90011bf6 <vPortFree+0x96>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90011bd2:	eb04 0c01 	add.w	ip, r4, r1
90011bd6:	4563      	cmp	r3, ip
90011bd8:	d013      	beq.n	90011c02 <vPortFree+0xa2>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
90011bda:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
90011bde:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
90011be0:	bf18      	it	ne
90011be2:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
90011be4:	4a0f      	ldr	r2, [pc, #60]	@ (90011c24 <vPortFree+0xc4>)
90011be6:	6813      	ldr	r3, [r2, #0]
90011be8:	3301      	adds	r3, #1
90011bea:	6013      	str	r3, [r2, #0]
}
90011bec:	b003      	add	sp, #12
90011bee:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
90011bf2:	f001 badf 	b.w	900131b4 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90011bf6:	4429      	add	r1, r5
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90011bf8:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90011bfa:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90011bfc:	4283      	cmp	r3, r0
90011bfe:	d1f1      	bne.n	90011be4 <vPortFree+0x84>
90011c00:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
90011c02:	4809      	ldr	r0, [pc, #36]	@ (90011c28 <vPortFree+0xc8>)
90011c04:	6800      	ldr	r0, [r0, #0]
90011c06:	4283      	cmp	r3, r0
90011c08:	d003      	beq.n	90011c12 <vPortFree+0xb2>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90011c0a:	e9d3 0500 	ldrd	r0, r5, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
90011c0e:	4429      	add	r1, r5
90011c10:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90011c12:	6020      	str	r0, [r4, #0]
90011c14:	e7e3      	b.n	90011bde <vPortFree+0x7e>
90011c16:	bf00      	nop
90011c18:	2400e28c 	.word	0x2400e28c
90011c1c:	2400e29c 	.word	0x2400e29c
90011c20:	2400e2a4 	.word	0x2400e2a4
90011c24:	2400e290 	.word	0x2400e290
90011c28:	2400e2a0 	.word	0x2400e2a0

90011c2c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
90011c2c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
90011c30:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
90011c34:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
90011c36:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
90011c38:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
90011c3a:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
90011c3c:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
90011c40:	4770      	bx	lr
90011c42:	bf00      	nop

90011c44 <vListInsertEnd>:
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
90011c44:	6803      	ldr	r3, [r0, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
90011c46:	6842      	ldr	r2, [r0, #4]
	( pxList->uxNumberOfItems )++;
90011c48:	3301      	adds	r3, #1
{
90011c4a:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
90011c4c:	6894      	ldr	r4, [r2, #8]
90011c4e:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
90011c52:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
90011c54:	6091      	str	r1, [r2, #8]
}
90011c56:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
90011c5a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
90011c5c:	6003      	str	r3, [r0, #0]
}
90011c5e:	4770      	bx	lr

90011c60 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
90011c60:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
90011c62:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
90011c64:	1c6b      	adds	r3, r5, #1
90011c66:	d010      	beq.n	90011c8a <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
90011c68:	f100 0308 	add.w	r3, r0, #8
90011c6c:	461c      	mov	r4, r3
90011c6e:	685b      	ldr	r3, [r3, #4]
90011c70:	681a      	ldr	r2, [r3, #0]
90011c72:	42aa      	cmp	r2, r5
90011c74:	d9fa      	bls.n	90011c6c <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
90011c76:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
90011c78:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
90011c7a:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
90011c7c:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
90011c7e:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
90011c80:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
90011c82:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
90011c84:	6002      	str	r2, [r0, #0]
}
90011c86:	bc30      	pop	{r4, r5}
90011c88:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
90011c8a:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
90011c8c:	6863      	ldr	r3, [r4, #4]
90011c8e:	e7f2      	b.n	90011c76 <vListInsert+0x16>

90011c90 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
90011c90:	6903      	ldr	r3, [r0, #16]
{
90011c92:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
90011c94:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
90011c96:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
90011c9a:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
90011c9c:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
90011ca0:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
90011ca2:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
90011ca4:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
90011ca8:	bf08      	it	eq
90011caa:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
90011cac:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
90011cae:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
90011cb0:	3a01      	subs	r2, #1
90011cb2:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
90011cb4:	6818      	ldr	r0, [r3, #0]
}
90011cb6:	4770      	bx	lr
	...

90011cc0 <SVC_Handler>:
}
/*-----------------------------------------------------------*/

void vPortSVCHandler( void )
{
	__asm volatile (
90011cc0:	4b07      	ldr	r3, [pc, #28]	@ (90011ce0 <pxCurrentTCBConst2>)
90011cc2:	6819      	ldr	r1, [r3, #0]
90011cc4:	6808      	ldr	r0, [r1, #0]
90011cc6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011cca:	f380 8809 	msr	PSP, r0
90011cce:	f3bf 8f6f 	isb	sy
90011cd2:	f04f 0000 	mov.w	r0, #0
90011cd6:	f380 8811 	msr	BASEPRI, r0
90011cda:	4770      	bx	lr
90011cdc:	f3af 8000 	nop.w

90011ce0 <pxCurrentTCBConst2>:
90011ce0:	24026e4c 	.word	0x24026e4c

90011ce4 <vPortEnterCritical>:
90011ce4:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011ce8:	f383 8811 	msr	BASEPRI, r3
90011cec:	f3bf 8f6f 	isb	sy
90011cf0:	f3bf 8f4f 	dsb	sy
/*-----------------------------------------------------------*/

void vPortEnterCritical( void )
{
	portDISABLE_INTERRUPTS();
	uxCriticalNesting++;
90011cf4:	4a0b      	ldr	r2, [pc, #44]	@ (90011d24 <vPortEnterCritical+0x40>)
90011cf6:	6813      	ldr	r3, [r2, #0]
90011cf8:	3301      	adds	r3, #1
	/* This is not the interrupt safe version of the enter critical function so
	assert() if it is being called from an interrupt context.  Only API
	functions that end in "FromISR" can be used in an interrupt.  Only assert if
	the critical nesting count is 1 to protect against recursive calls if the
	assert function also uses a critical section. */
	if( uxCriticalNesting == 1 )
90011cfa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
90011cfc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
90011cfe:	d000      	beq.n	90011d02 <vPortEnterCritical+0x1e>
	{
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
	}
}
90011d00:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
90011d02:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90011d06:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
90011d0a:	b2db      	uxtb	r3, r3
90011d0c:	2b00      	cmp	r3, #0
90011d0e:	d0f7      	beq.n	90011d00 <vPortEnterCritical+0x1c>
90011d10:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011d14:	f383 8811 	msr	BASEPRI, r3
90011d18:	f3bf 8f6f 	isb	sy
90011d1c:	f3bf 8f4f 	dsb	sy
90011d20:	e7fe      	b.n	90011d20 <vPortEnterCritical+0x3c>
90011d22:	bf00      	nop
90011d24:	24000064 	.word	0x24000064

90011d28 <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
	configASSERT( uxCriticalNesting );
90011d28:	4a08      	ldr	r2, [pc, #32]	@ (90011d4c <vPortExitCritical+0x24>)
90011d2a:	6813      	ldr	r3, [r2, #0]
90011d2c:	b943      	cbnz	r3, 90011d40 <vPortExitCritical+0x18>
90011d2e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011d32:	f383 8811 	msr	BASEPRI, r3
90011d36:	f3bf 8f6f 	isb	sy
90011d3a:	f3bf 8f4f 	dsb	sy
90011d3e:	e7fe      	b.n	90011d3e <vPortExitCritical+0x16>
	uxCriticalNesting--;
90011d40:	3b01      	subs	r3, #1
90011d42:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
90011d44:	b90b      	cbnz	r3, 90011d4a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
90011d46:	f383 8811 	msr	BASEPRI, r3
	{
		portENABLE_INTERRUPTS();
	}
}
90011d4a:	4770      	bx	lr
90011d4c:	24000064 	.word	0x24000064

90011d50 <PendSV_Handler>:

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
90011d50:	f3ef 8009 	mrs	r0, PSP
90011d54:	f3bf 8f6f 	isb	sy
90011d58:	4b15      	ldr	r3, [pc, #84]	@ (90011db0 <pxCurrentTCBConst>)
90011d5a:	681a      	ldr	r2, [r3, #0]
90011d5c:	f01e 0f10 	tst.w	lr, #16
90011d60:	bf08      	it	eq
90011d62:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
90011d66:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011d6a:	6010      	str	r0, [r2, #0]
90011d6c:	e92d 0009 	stmdb	sp!, {r0, r3}
90011d70:	f04f 0050 	mov.w	r0, #80	@ 0x50
90011d74:	f380 8811 	msr	BASEPRI, r0
90011d78:	f3bf 8f4f 	dsb	sy
90011d7c:	f3bf 8f6f 	isb	sy
90011d80:	f001 fa38 	bl	900131f4 <vTaskSwitchContext>
90011d84:	f04f 0000 	mov.w	r0, #0
90011d88:	f380 8811 	msr	BASEPRI, r0
90011d8c:	bc09      	pop	{r0, r3}
90011d8e:	6819      	ldr	r1, [r3, #0]
90011d90:	6808      	ldr	r0, [r1, #0]
90011d92:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011d96:	f01e 0f10 	tst.w	lr, #16
90011d9a:	bf08      	it	eq
90011d9c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
90011da0:	f380 8809 	msr	PSP, r0
90011da4:	f3bf 8f6f 	isb	sy
90011da8:	4770      	bx	lr
90011daa:	bf00      	nop
90011dac:	f3af 8000 	nop.w

90011db0 <pxCurrentTCBConst>:
90011db0:	24026e4c 	.word	0x24026e4c

90011db4 <xPortSysTickHandler>:
	);
}
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
90011db4:	b508      	push	{r3, lr}
	__asm volatile
90011db6:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011dba:	f383 8811 	msr	BASEPRI, r3
90011dbe:	f3bf 8f6f 	isb	sy
90011dc2:	f3bf 8f4f 	dsb	sy
	save and then restore the interrupt mask value as its value is already
	known. */
	portDISABLE_INTERRUPTS();
	{
		/* Increment the RTOS tick. */
		if( xTaskIncrementTick() != pdFALSE )
90011dc6:	f001 fa05 	bl	900131d4 <xTaskIncrementTick>
90011dca:	b128      	cbz	r0, 90011dd8 <xPortSysTickHandler+0x24>
		{
			/* A context switch is required.  Context switching is performed in
			the PendSV interrupt.  Pend the PendSV interrupt. */
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
90011dcc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90011dd0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90011dd4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
90011dd8:	2300      	movs	r3, #0
90011dda:	f383 8811 	msr	BASEPRI, r3
		}
	}
	portENABLE_INTERRUPTS();
}
90011dde:	bd08      	pop	{r3, pc}

90011de0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
90011de0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
90011de4:	2b0f      	cmp	r3, #15
90011de6:	d90e      	bls.n	90011e06 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90011de8:	4911      	ldr	r1, [pc, #68]	@ (90011e30 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90011dea:	4a12      	ldr	r2, [pc, #72]	@ (90011e34 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90011dec:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90011dee:	7812      	ldrb	r2, [r2, #0]
90011df0:	429a      	cmp	r2, r3
90011df2:	d908      	bls.n	90011e06 <vPortValidateInterruptPriority+0x26>
	__asm volatile
90011df4:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011df8:	f383 8811 	msr	BASEPRI, r3
90011dfc:	f3bf 8f6f 	isb	sy
90011e00:	f3bf 8f4f 	dsb	sy
90011e04:	e7fe      	b.n	90011e04 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
90011e06:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90011e0a:	4a0b      	ldr	r2, [pc, #44]	@ (90011e38 <vPortValidateInterruptPriority+0x58>)
90011e0c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
90011e10:	6812      	ldr	r2, [r2, #0]
90011e12:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
90011e16:	4293      	cmp	r3, r2
90011e18:	d908      	bls.n	90011e2c <vPortValidateInterruptPriority+0x4c>
90011e1a:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011e1e:	f383 8811 	msr	BASEPRI, r3
90011e22:	f3bf 8f6f 	isb	sy
90011e26:	f3bf 8f4f 	dsb	sy
90011e2a:	e7fe      	b.n	90011e2a <vPortValidateInterruptPriority+0x4a>
	}
90011e2c:	4770      	bx	lr
90011e2e:	bf00      	nop
90011e30:	e000e3f0 	.word	0xe000e3f0
90011e34:	24026950 	.word	0x24026950
90011e38:	2402694c 	.word	0x2402694c

90011e3c <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
90011e3c:	b570      	push	{r4, r5, r6, lr}
90011e3e:	4616      	mov	r6, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
90011e40:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
90011e42:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90011e44:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
90011e46:	b92a      	cbnz	r2, 90011e54 <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90011e48:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90011e4a:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90011e4c:	b34e      	cbz	r6, 90011ea2 <prvCopyDataToQueue+0x66>
BaseType_t xReturn = pdFALSE;
90011e4e:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90011e50:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
90011e52:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
90011e54:	b97e      	cbnz	r6, 90011e76 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
90011e56:	6840      	ldr	r0, [r0, #4]
90011e58:	f01a f8af 	bl	9002bfba <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90011e5c:	6863      	ldr	r3, [r4, #4]
90011e5e:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
90011e60:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90011e62:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
90011e64:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90011e66:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
90011e68:	bf24      	itt	cs
90011e6a:	6823      	ldrcs	r3, [r4, #0]
90011e6c:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90011e6e:	3501      	adds	r5, #1
BaseType_t xReturn = pdFALSE;
90011e70:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90011e72:	63a5      	str	r5, [r4, #56]	@ 0x38
}
90011e74:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
90011e76:	68c0      	ldr	r0, [r0, #12]
90011e78:	f01a f89f 	bl	9002bfba <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
90011e7c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
90011e7e:	68e3      	ldr	r3, [r4, #12]
90011e80:	4251      	negs	r1, r2
90011e82:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
90011e84:	6822      	ldr	r2, [r4, #0]
90011e86:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
90011e88:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
90011e8a:	d202      	bcs.n	90011e92 <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
90011e8c:	68a3      	ldr	r3, [r4, #8]
90011e8e:	440b      	add	r3, r1
90011e90:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
90011e92:	2e02      	cmp	r6, #2
90011e94:	d1eb      	bne.n	90011e6e <prvCopyDataToQueue+0x32>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90011e96:	2d01      	cmp	r5, #1
BaseType_t xReturn = pdFALSE;
90011e98:	f04f 0000 	mov.w	r0, #0
90011e9c:	bf38      	it	cc
90011e9e:	2501      	movcc	r5, #1
90011ea0:	e7d6      	b.n	90011e50 <prvCopyDataToQueue+0x14>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
90011ea2:	6880      	ldr	r0, [r0, #8]
90011ea4:	f001 fb34 	bl	90013510 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
90011ea8:	60a6      	str	r6, [r4, #8]
90011eaa:	e7d1      	b.n	90011e50 <prvCopyDataToQueue+0x14>

90011eac <xQueueGenericCreateStatic>:
	{
90011eac:	b530      	push	{r4, r5, lr}
90011eae:	b083      	sub	sp, #12
90011eb0:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
90011eb4:	b940      	cbnz	r0, 90011ec8 <xQueueGenericCreateStatic+0x1c>
90011eb6:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011eba:	f383 8811 	msr	BASEPRI, r3
90011ebe:	f3bf 8f6f 	isb	sy
90011ec2:	f3bf 8f4f 	dsb	sy
90011ec6:	e7fe      	b.n	90011ec6 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
90011ec8:	461c      	mov	r4, r3
90011eca:	b153      	cbz	r3, 90011ee2 <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
90011ecc:	b30a      	cbz	r2, 90011f12 <xQueueGenericCreateStatic+0x66>
90011ece:	b989      	cbnz	r1, 90011ef4 <xQueueGenericCreateStatic+0x48>
90011ed0:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011ed4:	f383 8811 	msr	BASEPRI, r3
90011ed8:	f3bf 8f6f 	isb	sy
90011edc:	f3bf 8f4f 	dsb	sy
90011ee0:	e7fe      	b.n	90011ee0 <xQueueGenericCreateStatic+0x34>
90011ee2:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011ee6:	f383 8811 	msr	BASEPRI, r3
90011eea:	f3bf 8f6f 	isb	sy
90011eee:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
90011ef2:	e7fe      	b.n	90011ef2 <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
90011ef4:	b16a      	cbz	r2, 90011f12 <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
90011ef6:	2350      	movs	r3, #80	@ 0x50
90011ef8:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
90011efa:	9b01      	ldr	r3, [sp, #4]
90011efc:	2b50      	cmp	r3, #80	@ 0x50
90011efe:	d013      	beq.n	90011f28 <xQueueGenericCreateStatic+0x7c>
90011f00:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011f04:	f383 8811 	msr	BASEPRI, r3
90011f08:	f3bf 8f6f 	isb	sy
90011f0c:	f3bf 8f4f 	dsb	sy
90011f10:	e7fe      	b.n	90011f10 <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
90011f12:	2900      	cmp	r1, #0
90011f14:	d0ef      	beq.n	90011ef6 <xQueueGenericCreateStatic+0x4a>
90011f16:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011f1a:	f383 8811 	msr	BASEPRI, r3
90011f1e:	f3bf 8f6f 	isb	sy
90011f22:	f3bf 8f4f 	dsb	sy
90011f26:	e7fe      	b.n	90011f26 <xQueueGenericCreateStatic+0x7a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90011f28:	2900      	cmp	r1, #0
90011f2a:	bf08      	it	eq
90011f2c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
90011f2e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90011f30:	2301      	movs	r3, #1
	pxNewQueue->uxLength = uxQueueLength;
90011f32:	63e0      	str	r0, [r4, #60]	@ 0x3c
90011f34:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
90011f36:	6421      	str	r1, [r4, #64]	@ 0x40
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90011f38:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
90011f3c:	f7ff fed2 	bl	90011ce4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011f40:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011f42:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90011f46:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011f48:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
90011f4c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011f50:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011f52:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011f54:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011f56:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90011f58:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
90011f5a:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011f5c:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90011f5e:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
90011f60:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90011f64:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011f68:	f7ff fe60 	bl	90011c2c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90011f6c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90011f70:	f7ff fe5c 	bl	90011c2c <vListInitialise>
	taskEXIT_CRITICAL();
90011f74:	f7ff fed8 	bl	90011d28 <vPortExitCritical>
	}
90011f78:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
90011f7a:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
90011f7e:	b003      	add	sp, #12
90011f80:	bd30      	pop	{r4, r5, pc}
90011f82:	bf00      	nop

90011f84 <xQueueGenericCreate>:
	{
90011f84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
90011f86:	b940      	cbnz	r0, 90011f9a <xQueueGenericCreate+0x16>
90011f88:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011f8c:	f383 8811 	msr	BASEPRI, r3
90011f90:	f3bf 8f6f 	isb	sy
90011f94:	f3bf 8f4f 	dsb	sy
90011f98:	e7fe      	b.n	90011f98 <xQueueGenericCreate+0x14>
90011f9a:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011f9c:	fb01 f000 	mul.w	r0, r1, r0
90011fa0:	460e      	mov	r6, r1
90011fa2:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
90011fa4:	3050      	adds	r0, #80	@ 0x50
90011fa6:	f7ff fd1f 	bl	900119e8 <pvPortMalloc>
		if( pxNewQueue != NULL )
90011faa:	4604      	mov	r4, r0
90011fac:	b340      	cbz	r0, 90012000 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90011fae:	2300      	movs	r3, #0
90011fb0:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
90011fb4:	b336      	cbz	r6, 90012004 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011fb6:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
90011fba:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
90011fbc:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
90011fc0:	f7ff fe90 	bl	90011ce4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011fc4:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011fc6:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90011fca:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011fcc:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
90011fd0:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011fd4:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011fd6:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011fd8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011fda:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90011fdc:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
90011fde:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90011fe0:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90011fe2:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
90011fe4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90011fe8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90011fec:	f7ff fe1e 	bl	90011c2c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90011ff0:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90011ff4:	f7ff fe1a 	bl	90011c2c <vListInitialise>
	taskEXIT_CRITICAL();
90011ff8:	f7ff fe96 	bl	90011d28 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90011ffc:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
90012000:	4620      	mov	r0, r4
90012002:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90012004:	4603      	mov	r3, r0
90012006:	e7d8      	b.n	90011fba <xQueueGenericCreate+0x36>

90012008 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
90012008:	b940      	cbnz	r0, 9001201c <xQueueCreateCountingSemaphoreStatic+0x14>
9001200a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001200e:	f383 8811 	msr	BASEPRI, r3
90012012:	f3bf 8f6f 	isb	sy
90012016:	f3bf 8f4f 	dsb	sy
9001201a:	e7fe      	b.n	9001201a <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9001201c:	4288      	cmp	r0, r1
9001201e:	d208      	bcs.n	90012032 <xQueueCreateCountingSemaphoreStatic+0x2a>
90012020:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012024:	f383 8811 	msr	BASEPRI, r3
90012028:	f3bf 8f6f 	isb	sy
9001202c:	f3bf 8f4f 	dsb	sy
90012030:	e7fe      	b.n	90012030 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
90012032:	b530      	push	{r4, r5, lr}
90012034:	4614      	mov	r4, r2
90012036:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
90012038:	2a00      	cmp	r2, #0
9001203a:	d03b      	beq.n	900120b4 <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
9001203c:	2350      	movs	r3, #80	@ 0x50
9001203e:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
90012040:	9b03      	ldr	r3, [sp, #12]
90012042:	2b50      	cmp	r3, #80	@ 0x50
90012044:	d008      	beq.n	90012058 <xQueueCreateCountingSemaphoreStatic+0x50>
90012046:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001204a:	f383 8811 	msr	BASEPRI, r3
9001204e:	f3bf 8f6f 	isb	sy
90012052:	f3bf 8f4f 	dsb	sy
90012056:	e7fe      	b.n	90012056 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
90012058:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9001205a:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9001205c:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
9001205e:	63d0      	str	r0, [r2, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90012060:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
90012064:	6415      	str	r5, [r2, #64]	@ 0x40
90012066:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
90012068:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9001206a:	f7ff fe3b 	bl	90011ce4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001206e:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90012070:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
90012072:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90012074:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	@ 0x3c
90012078:	fb00 f303 	mul.w	r3, r0, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001207c:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001207e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90012080:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90012082:	60a3      	str	r3, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90012084:	23ff      	movs	r3, #255	@ 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90012086:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001208a:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9001208c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90012090:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90012094:	f7ff fdca 	bl	90011c2c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90012098:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9001209c:	f7ff fdc6 	bl	90011c2c <vListInitialise>
	taskEXIT_CRITICAL();
900120a0:	f7ff fe42 	bl	90011d28 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
900120a4:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
900120a6:	9901      	ldr	r1, [sp, #4]
	}
900120a8:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
900120aa:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
900120ae:	63a1      	str	r1, [r4, #56]	@ 0x38
	}
900120b0:	b005      	add	sp, #20
900120b2:	bd30      	pop	{r4, r5, pc}
900120b4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900120b8:	f383 8811 	msr	BASEPRI, r3
900120bc:	f3bf 8f6f 	isb	sy
900120c0:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
900120c4:	e7fe      	b.n	900120c4 <xQueueCreateCountingSemaphoreStatic+0xbc>
900120c6:	bf00      	nop

900120c8 <xQueueCreateCountingSemaphore>:
	{
900120c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
900120ca:	b940      	cbnz	r0, 900120de <xQueueCreateCountingSemaphore+0x16>
900120cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
900120d0:	f383 8811 	msr	BASEPRI, r3
900120d4:	f3bf 8f6f 	isb	sy
900120d8:	f3bf 8f4f 	dsb	sy
900120dc:	e7fe      	b.n	900120dc <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
900120de:	4288      	cmp	r0, r1
900120e0:	4604      	mov	r4, r0
900120e2:	460e      	mov	r6, r1
900120e4:	d208      	bcs.n	900120f8 <xQueueCreateCountingSemaphore+0x30>
900120e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
900120ea:	f383 8811 	msr	BASEPRI, r3
900120ee:	f3bf 8f6f 	isb	sy
900120f2:	f3bf 8f4f 	dsb	sy
900120f6:	e7fe      	b.n	900120f6 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
900120f8:	2050      	movs	r0, #80	@ 0x50
900120fa:	f7ff fc75 	bl	900119e8 <pvPortMalloc>
		if( pxNewQueue != NULL )
900120fe:	4605      	mov	r5, r0
90012100:	b330      	cbz	r0, 90012150 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90012102:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90012104:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
90012106:	63c4      	str	r4, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90012108:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9001210c:	6407      	str	r7, [r0, #64]	@ 0x40
	taskENTER_CRITICAL();
9001210e:	f7ff fde9 	bl	90011ce4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90012112:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90012114:	63af      	str	r7, [r5, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90012116:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9001211a:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001211c:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	@ 0x3c
90012120:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90012124:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90012126:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90012128:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001212a:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9001212c:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001212e:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
90012130:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90012134:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90012138:	f7ff fd78 	bl	90011c2c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9001213c:	f105 0024 	add.w	r0, r5, #36	@ 0x24
90012140:	f7ff fd74 	bl	90011c2c <vListInitialise>
	taskEXIT_CRITICAL();
90012144:	f7ff fdf0 	bl	90011d28 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90012148:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9001214a:	63ae      	str	r6, [r5, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9001214c:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
	}
90012150:	4628      	mov	r0, r5
90012152:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90012154 <xQueueGenericSend>:
{
90012154:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012158:	b084      	sub	sp, #16
9001215a:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9001215c:	2800      	cmp	r0, #0
9001215e:	f000 8103 	beq.w	90012368 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90012162:	4688      	mov	r8, r1
90012164:	4604      	mov	r4, r0
90012166:	461f      	mov	r7, r3
90012168:	2900      	cmp	r1, #0
9001216a:	f000 8097 	beq.w	9001229c <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9001216e:	2f02      	cmp	r7, #2
90012170:	d10b      	bne.n	9001218a <xQueueGenericSend+0x36>
90012172:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90012174:	2b01      	cmp	r3, #1
90012176:	d008      	beq.n	9001218a <xQueueGenericSend+0x36>
90012178:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001217c:	f383 8811 	msr	BASEPRI, r3
90012180:	f3bf 8f6f 	isb	sy
90012184:	f3bf 8f4f 	dsb	sy
90012188:	e7fe      	b.n	90012188 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9001218a:	f001 f971 	bl	90013470 <xTaskGetSchedulerState>
9001218e:	2800      	cmp	r0, #0
90012190:	f000 80f3 	beq.w	9001237a <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90012194:	f1a7 0902 	sub.w	r9, r7, #2
90012198:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001219a:	f104 0624 	add.w	r6, r4, #36	@ 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9001219e:	fab9 f989 	clz	r9, r9
900121a2:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
900121a6:	f7ff fd9d 	bl	90011ce4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
900121aa:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
900121ac:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900121ae:	429a      	cmp	r2, r3
900121b0:	f0c0 80f0 	bcc.w	90012394 <xQueueGenericSend+0x240>
900121b4:	f1b9 0f00 	cmp.w	r9, #0
900121b8:	f040 80ec 	bne.w	90012394 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
900121bc:	9b01      	ldr	r3, [sp, #4]
900121be:	2b00      	cmp	r3, #0
900121c0:	f000 8101 	beq.w	900123c6 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
900121c4:	2d00      	cmp	r5, #0
900121c6:	f000 80cb 	beq.w	90012360 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
900121ca:	f7ff fdad 	bl	90011d28 <vPortExitCritical>
		vTaskSuspendAll();
900121ce:	f000 ffe9 	bl	900131a4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
900121d2:	f7ff fd87 	bl	90011ce4 <vPortEnterCritical>
900121d6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
900121da:	2bff      	cmp	r3, #255	@ 0xff
900121dc:	d102      	bne.n	900121e4 <xQueueGenericSend+0x90>
900121de:	2300      	movs	r3, #0
900121e0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
900121e4:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
900121e8:	2bff      	cmp	r3, #255	@ 0xff
900121ea:	d102      	bne.n	900121f2 <xQueueGenericSend+0x9e>
900121ec:	2300      	movs	r3, #0
900121ee:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
900121f2:	f7ff fd99 	bl	90011d28 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
900121f6:	a901      	add	r1, sp, #4
900121f8:	a802      	add	r0, sp, #8
900121fa:	f001 f8eb 	bl	900133d4 <xTaskCheckForTimeOut>
900121fe:	2800      	cmp	r0, #0
90012200:	f040 80e5 	bne.w	900123ce <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
90012204:	f7ff fd6e 	bl	90011ce4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
90012208:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9001220a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9001220c:	429a      	cmp	r2, r3
9001220e:	d052      	beq.n	900122b6 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
90012210:	f7ff fd8a 	bl	90011d28 <vPortExitCritical>
	taskENTER_CRITICAL();
90012214:	f7ff fd66 	bl	90011ce4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90012218:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
9001221c:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001221e:	2d00      	cmp	r5, #0
90012220:	dc04      	bgt.n	9001222c <xQueueGenericSend+0xd8>
90012222:	e011      	b.n	90012248 <xQueueGenericSend+0xf4>
			--cTxLock;
90012224:	1e6a      	subs	r2, r5, #1
90012226:	b2d3      	uxtb	r3, r2
90012228:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001222a:	b16b      	cbz	r3, 90012248 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001222c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001222e:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012230:	b153      	cbz	r3, 90012248 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012232:	f001 f87d 	bl	90013330 <xTaskRemoveFromEventList>
90012236:	2800      	cmp	r0, #0
90012238:	d0f4      	beq.n	90012224 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9001223a:	f001 f90d 	bl	90013458 <vTaskMissedYield>
			--cTxLock;
9001223e:	1e6a      	subs	r2, r5, #1
90012240:	b2d3      	uxtb	r3, r2
90012242:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012244:	2b00      	cmp	r3, #0
90012246:	d1f1      	bne.n	9001222c <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
90012248:	23ff      	movs	r3, #255	@ 0xff
9001224a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9001224e:	f7ff fd6b 	bl	90011d28 <vPortExitCritical>
	taskENTER_CRITICAL();
90012252:	f7ff fd47 	bl	90011ce4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90012256:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
9001225a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001225c:	2d00      	cmp	r5, #0
9001225e:	dd14      	ble.n	9001228a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012260:	f104 0a10 	add.w	sl, r4, #16
90012264:	e003      	b.n	9001226e <xQueueGenericSend+0x11a>
				--cRxLock;
90012266:	1e6a      	subs	r2, r5, #1
90012268:	b2d3      	uxtb	r3, r2
9001226a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001226c:	b16b      	cbz	r3, 9001228a <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001226e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012270:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012272:	b153      	cbz	r3, 9001228a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012274:	f001 f85c 	bl	90013330 <xTaskRemoveFromEventList>
90012278:	2800      	cmp	r0, #0
9001227a:	d0f4      	beq.n	90012266 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9001227c:	f001 f8ec 	bl	90013458 <vTaskMissedYield>
				--cRxLock;
90012280:	1e6a      	subs	r2, r5, #1
90012282:	b2d3      	uxtb	r3, r2
90012284:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012286:	2b00      	cmp	r3, #0
90012288:	d1f1      	bne.n	9001226e <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9001228a:	23ff      	movs	r3, #255	@ 0xff
9001228c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90012290:	f7ff fd4a 	bl	90011d28 <vPortExitCritical>
				( void ) xTaskResumeAll();
90012294:	f000 ff8e 	bl	900131b4 <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90012298:	2501      	movs	r5, #1
9001229a:	e784      	b.n	900121a6 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001229c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9001229e:	2b00      	cmp	r3, #0
900122a0:	f43f af65 	beq.w	9001216e <xQueueGenericSend+0x1a>
900122a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900122a8:	f383 8811 	msr	BASEPRI, r3
900122ac:	f3bf 8f6f 	isb	sy
900122b0:	f3bf 8f4f 	dsb	sy
900122b4:	e7fe      	b.n	900122b4 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
900122b6:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
900122ba:	f7ff fd35 	bl	90011d28 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
900122be:	9901      	ldr	r1, [sp, #4]
900122c0:	4650      	mov	r0, sl
900122c2:	f000 fff1 	bl	900132a8 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
900122c6:	f7ff fd0d 	bl	90011ce4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900122ca:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
900122ce:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900122d0:	2d00      	cmp	r5, #0
900122d2:	dc04      	bgt.n	900122de <xQueueGenericSend+0x18a>
900122d4:	e011      	b.n	900122fa <xQueueGenericSend+0x1a6>
			--cTxLock;
900122d6:	1e6b      	subs	r3, r5, #1
900122d8:	b2da      	uxtb	r2, r3
900122da:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900122dc:	b16a      	cbz	r2, 900122fa <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900122de:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900122e0:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900122e2:	b153      	cbz	r3, 900122fa <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900122e4:	f001 f824 	bl	90013330 <xTaskRemoveFromEventList>
900122e8:	2800      	cmp	r0, #0
900122ea:	d0f4      	beq.n	900122d6 <xQueueGenericSend+0x182>
						vTaskMissedYield();
900122ec:	f001 f8b4 	bl	90013458 <vTaskMissedYield>
			--cTxLock;
900122f0:	1e6b      	subs	r3, r5, #1
900122f2:	b2da      	uxtb	r2, r3
900122f4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900122f6:	2a00      	cmp	r2, #0
900122f8:	d1f1      	bne.n	900122de <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
900122fa:	23ff      	movs	r3, #255	@ 0xff
900122fc:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90012300:	f7ff fd12 	bl	90011d28 <vPortExitCritical>
	taskENTER_CRITICAL();
90012304:	f7ff fcee 	bl	90011ce4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90012308:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9001230c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001230e:	2d00      	cmp	r5, #0
90012310:	dc04      	bgt.n	9001231c <xQueueGenericSend+0x1c8>
90012312:	e011      	b.n	90012338 <xQueueGenericSend+0x1e4>
				--cRxLock;
90012314:	1e6b      	subs	r3, r5, #1
90012316:	b2da      	uxtb	r2, r3
90012318:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001231a:	b16a      	cbz	r2, 90012338 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001231c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001231e:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012320:	b153      	cbz	r3, 90012338 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012322:	f001 f805 	bl	90013330 <xTaskRemoveFromEventList>
90012326:	2800      	cmp	r0, #0
90012328:	d0f4      	beq.n	90012314 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9001232a:	f001 f895 	bl	90013458 <vTaskMissedYield>
				--cRxLock;
9001232e:	1e6b      	subs	r3, r5, #1
90012330:	b2da      	uxtb	r2, r3
90012332:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012334:	2a00      	cmp	r2, #0
90012336:	d1f1      	bne.n	9001231c <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
90012338:	23ff      	movs	r3, #255	@ 0xff
9001233a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9001233e:	f7ff fcf3 	bl	90011d28 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90012342:	f000 ff37 	bl	900131b4 <xTaskResumeAll>
90012346:	2800      	cmp	r0, #0
90012348:	d1a6      	bne.n	90012298 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9001234a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9001234e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90012352:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90012356:	f3bf 8f4f 	dsb	sy
9001235a:	f3bf 8f6f 	isb	sy
9001235e:	e79b      	b.n	90012298 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
90012360:	a802      	add	r0, sp, #8
90012362:	f001 f82b 	bl	900133bc <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
90012366:	e730      	b.n	900121ca <xQueueGenericSend+0x76>
90012368:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001236c:	f383 8811 	msr	BASEPRI, r3
90012370:	f3bf 8f6f 	isb	sy
90012374:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90012378:	e7fe      	b.n	90012378 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9001237a:	9b01      	ldr	r3, [sp, #4]
9001237c:	2b00      	cmp	r3, #0
9001237e:	f43f af09 	beq.w	90012194 <xQueueGenericSend+0x40>
90012382:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012386:	f383 8811 	msr	BASEPRI, r3
9001238a:	f3bf 8f6f 	isb	sy
9001238e:	f3bf 8f4f 	dsb	sy
90012392:	e7fe      	b.n	90012392 <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90012394:	463a      	mov	r2, r7
90012396:	4641      	mov	r1, r8
90012398:	4620      	mov	r0, r4
9001239a:	f7ff fd4f 	bl	90011e3c <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001239e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900123a0:	2b00      	cmp	r3, #0
900123a2:	d151      	bne.n	90012448 <xQueueGenericSend+0x2f4>
					else if( xYieldRequired != pdFALSE )
900123a4:	b148      	cbz	r0, 900123ba <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
900123a6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900123aa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900123ae:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900123b2:	f3bf 8f4f 	dsb	sy
900123b6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
900123ba:	f7ff fcb5 	bl	90011d28 <vPortExitCritical>
				return pdPASS;
900123be:	2001      	movs	r0, #1
}
900123c0:	b004      	add	sp, #16
900123c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
900123c6:	f7ff fcaf 	bl	90011d28 <vPortExitCritical>
					return errQUEUE_FULL;
900123ca:	2000      	movs	r0, #0
900123cc:	e7f8      	b.n	900123c0 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
900123ce:	f7ff fc89 	bl	90011ce4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900123d2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
900123d6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900123d8:	2d00      	cmp	r5, #0
900123da:	dd10      	ble.n	900123fe <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900123dc:	f104 0624 	add.w	r6, r4, #36	@ 0x24
900123e0:	e003      	b.n	900123ea <xQueueGenericSend+0x296>
			--cTxLock;
900123e2:	1e6b      	subs	r3, r5, #1
900123e4:	b2da      	uxtb	r2, r3
900123e6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900123e8:	b14a      	cbz	r2, 900123fe <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900123ea:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900123ec:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900123ee:	b133      	cbz	r3, 900123fe <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900123f0:	f000 ff9e 	bl	90013330 <xTaskRemoveFromEventList>
900123f4:	2800      	cmp	r0, #0
900123f6:	d0f4      	beq.n	900123e2 <xQueueGenericSend+0x28e>
						vTaskMissedYield();
900123f8:	f001 f82e 	bl	90013458 <vTaskMissedYield>
900123fc:	e7f1      	b.n	900123e2 <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
900123fe:	23ff      	movs	r3, #255	@ 0xff
90012400:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90012404:	f7ff fc90 	bl	90011d28 <vPortExitCritical>
	taskENTER_CRITICAL();
90012408:	f7ff fc6c 	bl	90011ce4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001240c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90012410:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012412:	2d00      	cmp	r5, #0
90012414:	dd10      	ble.n	90012438 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012416:	f104 0610 	add.w	r6, r4, #16
9001241a:	e003      	b.n	90012424 <xQueueGenericSend+0x2d0>
				--cRxLock;
9001241c:	1e6b      	subs	r3, r5, #1
9001241e:	b2da      	uxtb	r2, r3
90012420:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012422:	b14a      	cbz	r2, 90012438 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012424:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012426:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012428:	b133      	cbz	r3, 90012438 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001242a:	f000 ff81 	bl	90013330 <xTaskRemoveFromEventList>
9001242e:	2800      	cmp	r0, #0
90012430:	d0f4      	beq.n	9001241c <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
90012432:	f001 f811 	bl	90013458 <vTaskMissedYield>
90012436:	e7f1      	b.n	9001241c <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
90012438:	23ff      	movs	r3, #255	@ 0xff
9001243a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9001243e:	f7ff fc73 	bl	90011d28 <vPortExitCritical>
			( void ) xTaskResumeAll();
90012442:	f000 feb7 	bl	900131b4 <xTaskResumeAll>
			return errQUEUE_FULL;
90012446:	e7c0      	b.n	900123ca <xQueueGenericSend+0x276>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012448:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9001244c:	f000 ff70 	bl	90013330 <xTaskRemoveFromEventList>
90012450:	2800      	cmp	r0, #0
90012452:	d0b2      	beq.n	900123ba <xQueueGenericSend+0x266>
90012454:	e7a7      	b.n	900123a6 <xQueueGenericSend+0x252>
90012456:	bf00      	nop

90012458 <xQueueCreateMutexStatic>:
		configASSERT( pxStaticQueue != NULL );
90012458:	b179      	cbz	r1, 9001247a <xQueueCreateMutexStatic+0x22>
			volatile size_t xSize = sizeof( StaticQueue_t );
9001245a:	2350      	movs	r3, #80	@ 0x50
	{
9001245c:	b570      	push	{r4, r5, r6, lr}
9001245e:	b082      	sub	sp, #8
			volatile size_t xSize = sizeof( StaticQueue_t );
90012460:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
90012462:	9b01      	ldr	r3, [sp, #4]
90012464:	2b50      	cmp	r3, #80	@ 0x50
90012466:	d011      	beq.n	9001248c <xQueueCreateMutexStatic+0x34>
90012468:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001246c:	f383 8811 	msr	BASEPRI, r3
90012470:	f3bf 8f6f 	isb	sy
90012474:	f3bf 8f4f 	dsb	sy
90012478:	e7fe      	b.n	90012478 <xQueueCreateMutexStatic+0x20>
9001247a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001247e:	f383 8811 	msr	BASEPRI, r3
90012482:	f3bf 8f6f 	isb	sy
90012486:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9001248a:	e7fe      	b.n	9001248a <xQueueCreateMutexStatic+0x32>
	pxNewQueue->uxLength = uxQueueLength;
9001248c:	2600      	movs	r6, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9001248e:	2301      	movs	r3, #1
90012490:	460c      	mov	r4, r1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90012492:	6009      	str	r1, [r1, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90012494:	f881 3046 	strb.w	r3, [r1, #70]	@ 0x46
90012498:	4605      	mov	r5, r0
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9001249a:	9a01      	ldr	r2, [sp, #4]
	pxNewQueue->uxLength = uxQueueLength;
9001249c:	e9c1 360f 	strd	r3, r6, [r1, #60]	@ 0x3c
	taskENTER_CRITICAL();
900124a0:	f7ff fc20 	bl	90011ce4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900124a4:	6821      	ldr	r1, [r4, #0]
		pxQueue->cRxLock = queueUNLOCKED;
900124a6:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900124a8:	63a6      	str	r6, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
900124aa:	6061      	str	r1, [r4, #4]
		pxQueue->cRxLock = queueUNLOCKED;
900124ac:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
900124b0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900124b4:	e9d4 200f 	ldrd	r2, r0, [r4, #60]	@ 0x3c
900124b8:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900124bc:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900124be:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900124c0:	4401      	add	r1, r0
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900124c2:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900124c6:	e9c4 2102 	strd	r2, r1, [r4, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900124ca:	f7ff fbaf 	bl	90011c2c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
900124ce:	f104 0024 	add.w	r0, r4, #36	@ 0x24
900124d2:	f7ff fbab 	bl	90011c2c <vListInitialise>
	taskEXIT_CRITICAL();
900124d6:	f7ff fc27 	bl	90011d28 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
900124da:	4633      	mov	r3, r6
900124dc:	4632      	mov	r2, r6
900124de:	4631      	mov	r1, r6
900124e0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
900124e2:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
900124e6:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
900124e8:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
900124ea:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
900124ec:	f7ff fe32 	bl	90012154 <xQueueGenericSend>
	}
900124f0:	4620      	mov	r0, r4
900124f2:	b002      	add	sp, #8
900124f4:	bd70      	pop	{r4, r5, r6, pc}
900124f6:	bf00      	nop

900124f8 <xQueueGiveMutexRecursive>:
	{
900124f8:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
900124fa:	b138      	cbz	r0, 9001250c <xQueueGiveMutexRecursive+0x14>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
900124fc:	6885      	ldr	r5, [r0, #8]
900124fe:	4604      	mov	r4, r0
90012500:	f000 ffb0 	bl	90013464 <xTaskGetCurrentTaskHandle>
90012504:	4285      	cmp	r5, r0
90012506:	d00a      	beq.n	9001251e <xQueueGiveMutexRecursive+0x26>
			xReturn = pdFAIL;
90012508:	2000      	movs	r0, #0
	}
9001250a:	bd38      	pop	{r3, r4, r5, pc}
9001250c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012510:	f383 8811 	msr	BASEPRI, r3
90012514:	f3bf 8f6f 	isb	sy
90012518:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
9001251c:	e7fe      	b.n	9001251c <xQueueGiveMutexRecursive+0x24>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
9001251e:	68e3      	ldr	r3, [r4, #12]
90012520:	3b01      	subs	r3, #1
90012522:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
90012524:	b10b      	cbz	r3, 9001252a <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
90012526:	2001      	movs	r0, #1
	}
90012528:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
9001252a:	461a      	mov	r2, r3
9001252c:	4619      	mov	r1, r3
9001252e:	4620      	mov	r0, r4
90012530:	f7ff fe10 	bl	90012154 <xQueueGenericSend>
90012534:	e7f7      	b.n	90012526 <xQueueGiveMutexRecursive+0x2e>
90012536:	bf00      	nop

90012538 <xQueueCreateMutex>:
	{
90012538:	b570      	push	{r4, r5, r6, lr}
9001253a:	4605      	mov	r5, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9001253c:	2050      	movs	r0, #80	@ 0x50
9001253e:	f7ff fa53 	bl	900119e8 <pvPortMalloc>
		if( pxNewQueue != NULL )
90012542:	4604      	mov	r4, r0
90012544:	b370      	cbz	r0, 900125a4 <xQueueCreateMutex+0x6c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90012546:	2600      	movs	r6, #0
	pxNewQueue->uxLength = uxQueueLength;
90012548:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9001254a:	6020      	str	r0, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9001254c:	f880 6046 	strb.w	r6, [r0, #70]	@ 0x46
	pxNewQueue->uxLength = uxQueueLength;
90012550:	e9c0 360f 	strd	r3, r6, [r0, #60]	@ 0x3c
	taskENTER_CRITICAL();
90012554:	f7ff fbc6 	bl	90011ce4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90012558:	6821      	ldr	r1, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9001255a:	63a6      	str	r6, [r4, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9001255c:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90012560:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90012562:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	@ 0x3c
90012566:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001256a:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001256c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001256e:	4419      	add	r1, r3
		pxQueue->cRxLock = queueUNLOCKED;
90012570:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90012572:	e9c4 2102 	strd	r2, r1, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90012576:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9001257a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9001257e:	f7ff fb55 	bl	90011c2c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90012582:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90012586:	f7ff fb51 	bl	90011c2c <vListInitialise>
	taskEXIT_CRITICAL();
9001258a:	f7ff fbcd 	bl	90011d28 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9001258e:	4633      	mov	r3, r6
90012590:	4632      	mov	r2, r6
90012592:	4631      	mov	r1, r6
90012594:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
90012596:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9001259a:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9001259c:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9001259e:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
900125a0:	f7ff fdd8 	bl	90012154 <xQueueGenericSend>
	}
900125a4:	4620      	mov	r0, r4
900125a6:	bd70      	pop	{r4, r5, r6, pc}

900125a8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
900125a8:	2800      	cmp	r0, #0
900125aa:	d04b      	beq.n	90012644 <xQueueGenericSendFromISR+0x9c>
{
900125ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900125b0:	460e      	mov	r6, r1
900125b2:	4604      	mov	r4, r0
900125b4:	4617      	mov	r7, r2
900125b6:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
900125b8:	b339      	cbz	r1, 9001260a <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
900125ba:	2d02      	cmp	r5, #2
900125bc:	d10b      	bne.n	900125d6 <xQueueGenericSendFromISR+0x2e>
900125be:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900125c0:	2b01      	cmp	r3, #1
900125c2:	d008      	beq.n	900125d6 <xQueueGenericSendFromISR+0x2e>
900125c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900125c8:	f383 8811 	msr	BASEPRI, r3
900125cc:	f3bf 8f6f 	isb	sy
900125d0:	f3bf 8f4f 	dsb	sy
900125d4:	e7fe      	b.n	900125d4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
900125d6:	f7ff fc03 	bl	90011de0 <vPortValidateInterruptPriority>
	__asm volatile
900125da:	f3ef 8811 	mrs	r8, BASEPRI
900125de:	f04f 0350 	mov.w	r3, #80	@ 0x50
900125e2:	f383 8811 	msr	BASEPRI, r3
900125e6:	f3bf 8f6f 	isb	sy
900125ea:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
900125ee:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
900125f0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900125f2:	429a      	cmp	r2, r3
900125f4:	d315      	bcc.n	90012622 <xQueueGenericSendFromISR+0x7a>
900125f6:	f1a5 0002 	sub.w	r0, r5, #2
900125fa:	fab0 f080 	clz	r0, r0
900125fe:	0940      	lsrs	r0, r0, #5
90012600:	b978      	cbnz	r0, 90012622 <xQueueGenericSendFromISR+0x7a>
	__asm volatile
90012602:	f388 8811 	msr	BASEPRI, r8
}
90012606:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001260a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9001260c:	2b00      	cmp	r3, #0
9001260e:	d0d4      	beq.n	900125ba <xQueueGenericSendFromISR+0x12>
	__asm volatile
90012610:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012614:	f383 8811 	msr	BASEPRI, r3
90012618:	f3bf 8f6f 	isb	sy
9001261c:	f3bf 8f4f 	dsb	sy
90012620:	e7fe      	b.n	90012620 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90012622:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
90012624:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90012628:	4631      	mov	r1, r6
9001262a:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9001262c:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9001262e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90012630:	f7ff fc04 	bl	90011e3c <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
90012634:	1c6b      	adds	r3, r5, #1
90012636:	d00e      	beq.n	90012656 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90012638:	1c6b      	adds	r3, r5, #1
9001263a:	b25b      	sxtb	r3, r3
9001263c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
90012640:	2001      	movs	r0, #1
90012642:	e7de      	b.n	90012602 <xQueueGenericSendFromISR+0x5a>
90012644:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012648:	f383 8811 	msr	BASEPRI, r3
9001264c:	f3bf 8f6f 	isb	sy
90012650:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90012654:	e7fe      	b.n	90012654 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012656:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90012658:	2b00      	cmp	r3, #0
9001265a:	d0f1      	beq.n	90012640 <xQueueGenericSendFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001265c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90012660:	f000 fe66 	bl	90013330 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
90012664:	2800      	cmp	r0, #0
90012666:	d0eb      	beq.n	90012640 <xQueueGenericSendFromISR+0x98>
90012668:	2f00      	cmp	r7, #0
9001266a:	d0e9      	beq.n	90012640 <xQueueGenericSendFromISR+0x98>
								*pxHigherPriorityTaskWoken = pdTRUE;
9001266c:	2301      	movs	r3, #1
9001266e:	603b      	str	r3, [r7, #0]
90012670:	e7e6      	b.n	90012640 <xQueueGenericSendFromISR+0x98>
90012672:	bf00      	nop

90012674 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
90012674:	b360      	cbz	r0, 900126d0 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
90012676:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
90012678:	b570      	push	{r4, r5, r6, lr}
9001267a:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9001267c:	b143      	cbz	r3, 90012690 <xQueueGiveFromISR+0x1c>
9001267e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012682:	f383 8811 	msr	BASEPRI, r3
90012686:	f3bf 8f6f 	isb	sy
9001268a:	f3bf 8f4f 	dsb	sy
9001268e:	e7fe      	b.n	9001268e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
90012690:	6803      	ldr	r3, [r0, #0]
90012692:	460d      	mov	r5, r1
90012694:	b32b      	cbz	r3, 900126e2 <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90012696:	f7ff fba3 	bl	90011de0 <vPortValidateInterruptPriority>
	__asm volatile
9001269a:	f3ef 8611 	mrs	r6, BASEPRI
9001269e:	f04f 0350 	mov.w	r3, #80	@ 0x50
900126a2:	f383 8811 	msr	BASEPRI, r3
900126a6:	f3bf 8f6f 	isb	sy
900126aa:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
900126ae:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
900126b0:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
900126b2:	429a      	cmp	r2, r3
900126b4:	d921      	bls.n	900126fa <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
900126b6:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900126ba:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
900126bc:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900126be:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
900126c0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
900126c2:	d01e      	beq.n	90012702 <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
900126c4:	3301      	adds	r3, #1
900126c6:	b25b      	sxtb	r3, r3
900126c8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
900126cc:	2001      	movs	r0, #1
900126ce:	e015      	b.n	900126fc <xQueueGiveFromISR+0x88>
	__asm volatile
900126d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900126d4:	f383 8811 	msr	BASEPRI, r3
900126d8:	f3bf 8f6f 	isb	sy
900126dc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
900126e0:	e7fe      	b.n	900126e0 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
900126e2:	6883      	ldr	r3, [r0, #8]
900126e4:	2b00      	cmp	r3, #0
900126e6:	d0d6      	beq.n	90012696 <xQueueGiveFromISR+0x22>
900126e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900126ec:	f383 8811 	msr	BASEPRI, r3
900126f0:	f3bf 8f6f 	isb	sy
900126f4:	f3bf 8f4f 	dsb	sy
900126f8:	e7fe      	b.n	900126f8 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
900126fa:	2000      	movs	r0, #0
	__asm volatile
900126fc:	f386 8811 	msr	BASEPRI, r6
}
90012700:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012702:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90012704:	2b00      	cmp	r3, #0
90012706:	d0e1      	beq.n	900126cc <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012708:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9001270c:	f000 fe10 	bl	90013330 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
90012710:	2d00      	cmp	r5, #0
90012712:	d0db      	beq.n	900126cc <xQueueGiveFromISR+0x58>
90012714:	2800      	cmp	r0, #0
90012716:	d0d9      	beq.n	900126cc <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
90012718:	2301      	movs	r3, #1
9001271a:	602b      	str	r3, [r5, #0]
9001271c:	e7d6      	b.n	900126cc <xQueueGiveFromISR+0x58>
9001271e:	bf00      	nop

90012720 <xQueueReceive>:
{
90012720:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012724:	b085      	sub	sp, #20
90012726:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
90012728:	2800      	cmp	r0, #0
9001272a:	f000 8164 	beq.w	900129f6 <xQueueReceive+0x2d6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001272e:	460f      	mov	r7, r1
90012730:	4604      	mov	r4, r0
90012732:	2900      	cmp	r1, #0
90012734:	f000 8097 	beq.w	90012866 <xQueueReceive+0x146>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90012738:	f000 fe9a 	bl	90013470 <xTaskGetSchedulerState>
9001273c:	2800      	cmp	r0, #0
9001273e:	f000 809f 	beq.w	90012880 <xQueueReceive+0x160>
		taskENTER_CRITICAL();
90012742:	f7ff facf 	bl	90011ce4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90012746:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90012748:	2d00      	cmp	r5, #0
9001274a:	d175      	bne.n	90012838 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
9001274c:	9b01      	ldr	r3, [sp, #4]
9001274e:	2b00      	cmp	r3, #0
90012750:	f000 80f4 	beq.w	9001293c <xQueueReceive+0x21c>
		prvLockQueue( pxQueue );
90012754:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012756:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9001275a:	a802      	add	r0, sp, #8
9001275c:	f000 fe2e 	bl	900133bc <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
90012760:	f7ff fae2 	bl	90011d28 <vPortExitCritical>
		vTaskSuspendAll();
90012764:	f000 fd1e 	bl	900131a4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90012768:	f7ff fabc 	bl	90011ce4 <vPortEnterCritical>
9001276c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90012770:	2bff      	cmp	r3, #255	@ 0xff
90012772:	d101      	bne.n	90012778 <xQueueReceive+0x58>
90012774:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
90012778:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9001277c:	2bff      	cmp	r3, #255	@ 0xff
9001277e:	d101      	bne.n	90012784 <xQueueReceive+0x64>
90012780:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
90012784:	f7ff fad0 	bl	90011d28 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90012788:	a901      	add	r1, sp, #4
9001278a:	a802      	add	r0, sp, #8
9001278c:	f000 fe22 	bl	900133d4 <xTaskCheckForTimeOut>
90012790:	2800      	cmp	r0, #0
90012792:	f040 8082 	bne.w	9001289a <xQueueReceive+0x17a>
	taskENTER_CRITICAL();
90012796:	f7ff faa5 	bl	90011ce4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9001279a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9001279c:	2b00      	cmp	r3, #0
9001279e:	f000 80d3 	beq.w	90012948 <xQueueReceive+0x228>
	taskEXIT_CRITICAL();
900127a2:	f7ff fac1 	bl	90011d28 <vPortExitCritical>
	taskENTER_CRITICAL();
900127a6:	f7ff fa9d 	bl	90011ce4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900127aa:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
900127ae:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900127b0:	2d00      	cmp	r5, #0
900127b2:	dd14      	ble.n	900127de <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900127b4:	f104 0924 	add.w	r9, r4, #36	@ 0x24
900127b8:	e003      	b.n	900127c2 <xQueueReceive+0xa2>
			--cTxLock;
900127ba:	1e6b      	subs	r3, r5, #1
900127bc:	b2da      	uxtb	r2, r3
900127be:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900127c0:	b16a      	cbz	r2, 900127de <xQueueReceive+0xbe>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900127c2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900127c4:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900127c6:	b153      	cbz	r3, 900127de <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900127c8:	f000 fdb2 	bl	90013330 <xTaskRemoveFromEventList>
900127cc:	2800      	cmp	r0, #0
900127ce:	d0f4      	beq.n	900127ba <xQueueReceive+0x9a>
						vTaskMissedYield();
900127d0:	f000 fe42 	bl	90013458 <vTaskMissedYield>
			--cTxLock;
900127d4:	1e6b      	subs	r3, r5, #1
900127d6:	b2da      	uxtb	r2, r3
900127d8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900127da:	2a00      	cmp	r2, #0
900127dc:	d1f1      	bne.n	900127c2 <xQueueReceive+0xa2>
		pxQueue->cTxLock = queueUNLOCKED;
900127de:	23ff      	movs	r3, #255	@ 0xff
900127e0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
900127e4:	f7ff faa0 	bl	90011d28 <vPortExitCritical>
	taskENTER_CRITICAL();
900127e8:	f7ff fa7c 	bl	90011ce4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900127ec:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
900127f0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900127f2:	2d00      	cmp	r5, #0
900127f4:	dd14      	ble.n	90012820 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900127f6:	f104 0910 	add.w	r9, r4, #16
900127fa:	e003      	b.n	90012804 <xQueueReceive+0xe4>
				--cRxLock;
900127fc:	1e6b      	subs	r3, r5, #1
900127fe:	b2da      	uxtb	r2, r3
90012800:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012802:	b16a      	cbz	r2, 90012820 <xQueueReceive+0x100>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012804:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012806:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012808:	b153      	cbz	r3, 90012820 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001280a:	f000 fd91 	bl	90013330 <xTaskRemoveFromEventList>
9001280e:	2800      	cmp	r0, #0
90012810:	d0f4      	beq.n	900127fc <xQueueReceive+0xdc>
					vTaskMissedYield();
90012812:	f000 fe21 	bl	90013458 <vTaskMissedYield>
				--cRxLock;
90012816:	1e6b      	subs	r3, r5, #1
90012818:	b2da      	uxtb	r2, r3
9001281a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001281c:	2a00      	cmp	r2, #0
9001281e:	d1f1      	bne.n	90012804 <xQueueReceive+0xe4>
		pxQueue->cRxLock = queueUNLOCKED;
90012820:	23ff      	movs	r3, #255	@ 0xff
90012822:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90012826:	f7ff fa7f 	bl	90011d28 <vPortExitCritical>
				( void ) xTaskResumeAll();
9001282a:	f000 fcc3 	bl	900131b4 <xTaskResumeAll>
		taskENTER_CRITICAL();
9001282e:	f7ff fa59 	bl	90011ce4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90012832:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90012834:	2d00      	cmp	r5, #0
90012836:	d07d      	beq.n	90012934 <xQueueReceive+0x214>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90012838:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9001283a:	b152      	cbz	r2, 90012852 <xQueueReceive+0x132>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001283c:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9001283e:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90012840:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90012842:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90012844:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90012846:	d301      	bcc.n	9001284c <xQueueReceive+0x12c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
90012848:	6821      	ldr	r1, [r4, #0]
9001284a:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9001284c:	4638      	mov	r0, r7
9001284e:	f019 fbb4 	bl	9002bfba <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90012852:	3d01      	subs	r5, #1
90012854:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012856:	6923      	ldr	r3, [r4, #16]
90012858:	2b00      	cmp	r3, #0
9001285a:	f040 80d5 	bne.w	90012a08 <xQueueReceive+0x2e8>
				taskEXIT_CRITICAL();
9001285e:	f7ff fa63 	bl	90011d28 <vPortExitCritical>
				return pdPASS;
90012862:	2001      	movs	r0, #1
90012864:	e06d      	b.n	90012942 <xQueueReceive+0x222>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
90012866:	6c03      	ldr	r3, [r0, #64]	@ 0x40
90012868:	2b00      	cmp	r3, #0
9001286a:	f43f af65 	beq.w	90012738 <xQueueReceive+0x18>
	__asm volatile
9001286e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012872:	f383 8811 	msr	BASEPRI, r3
90012876:	f3bf 8f6f 	isb	sy
9001287a:	f3bf 8f4f 	dsb	sy
9001287e:	e7fe      	b.n	9001287e <xQueueReceive+0x15e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90012880:	9b01      	ldr	r3, [sp, #4]
90012882:	2b00      	cmp	r3, #0
90012884:	f43f af5d 	beq.w	90012742 <xQueueReceive+0x22>
90012888:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001288c:	f383 8811 	msr	BASEPRI, r3
90012890:	f3bf 8f6f 	isb	sy
90012894:	f3bf 8f4f 	dsb	sy
90012898:	e7fe      	b.n	90012898 <xQueueReceive+0x178>
	taskENTER_CRITICAL();
9001289a:	f7ff fa23 	bl	90011ce4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001289e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
900128a2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900128a4:	2d00      	cmp	r5, #0
900128a6:	dc04      	bgt.n	900128b2 <xQueueReceive+0x192>
900128a8:	e011      	b.n	900128ce <xQueueReceive+0x1ae>
			--cTxLock;
900128aa:	1e6b      	subs	r3, r5, #1
900128ac:	b2da      	uxtb	r2, r3
900128ae:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900128b0:	b16a      	cbz	r2, 900128ce <xQueueReceive+0x1ae>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900128b2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900128b4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900128b6:	b153      	cbz	r3, 900128ce <xQueueReceive+0x1ae>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900128b8:	f000 fd3a 	bl	90013330 <xTaskRemoveFromEventList>
900128bc:	2800      	cmp	r0, #0
900128be:	d0f4      	beq.n	900128aa <xQueueReceive+0x18a>
						vTaskMissedYield();
900128c0:	f000 fdca 	bl	90013458 <vTaskMissedYield>
			--cTxLock;
900128c4:	1e6b      	subs	r3, r5, #1
900128c6:	b2da      	uxtb	r2, r3
900128c8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900128ca:	2a00      	cmp	r2, #0
900128cc:	d1f1      	bne.n	900128b2 <xQueueReceive+0x192>
		pxQueue->cTxLock = queueUNLOCKED;
900128ce:	23ff      	movs	r3, #255	@ 0xff
900128d0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
900128d4:	f7ff fa28 	bl	90011d28 <vPortExitCritical>
	taskENTER_CRITICAL();
900128d8:	f7ff fa04 	bl	90011ce4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900128dc:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
900128e0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900128e2:	2d00      	cmp	r5, #0
900128e4:	dd14      	ble.n	90012910 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900128e6:	f104 0910 	add.w	r9, r4, #16
900128ea:	e003      	b.n	900128f4 <xQueueReceive+0x1d4>
				--cRxLock;
900128ec:	1e6b      	subs	r3, r5, #1
900128ee:	b2da      	uxtb	r2, r3
900128f0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900128f2:	b16a      	cbz	r2, 90012910 <xQueueReceive+0x1f0>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900128f4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900128f6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900128f8:	b153      	cbz	r3, 90012910 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900128fa:	f000 fd19 	bl	90013330 <xTaskRemoveFromEventList>
900128fe:	2800      	cmp	r0, #0
90012900:	d0f4      	beq.n	900128ec <xQueueReceive+0x1cc>
					vTaskMissedYield();
90012902:	f000 fda9 	bl	90013458 <vTaskMissedYield>
				--cRxLock;
90012906:	1e6b      	subs	r3, r5, #1
90012908:	b2da      	uxtb	r2, r3
9001290a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001290c:	2a00      	cmp	r2, #0
9001290e:	d1f1      	bne.n	900128f4 <xQueueReceive+0x1d4>
		pxQueue->cRxLock = queueUNLOCKED;
90012910:	23ff      	movs	r3, #255	@ 0xff
90012912:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90012916:	f7ff fa07 	bl	90011d28 <vPortExitCritical>
			( void ) xTaskResumeAll();
9001291a:	f000 fc4b 	bl	900131b4 <xTaskResumeAll>
	taskENTER_CRITICAL();
9001291e:	f7ff f9e1 	bl	90011ce4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90012922:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90012924:	b153      	cbz	r3, 9001293c <xQueueReceive+0x21c>
	taskEXIT_CRITICAL();
90012926:	f7ff f9ff 	bl	90011d28 <vPortExitCritical>
		taskENTER_CRITICAL();
9001292a:	f7ff f9db 	bl	90011ce4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9001292e:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90012930:	2d00      	cmp	r5, #0
90012932:	d181      	bne.n	90012838 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
90012934:	9b01      	ldr	r3, [sp, #4]
90012936:	2b00      	cmp	r3, #0
90012938:	f47f af12 	bne.w	90012760 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9001293c:	f7ff f9f4 	bl	90011d28 <vPortExitCritical>
					return errQUEUE_EMPTY;
90012940:	2000      	movs	r0, #0
}
90012942:	b005      	add	sp, #20
90012944:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90012948:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
9001294c:	f7ff f9ec 	bl	90011d28 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90012950:	9901      	ldr	r1, [sp, #4]
90012952:	4648      	mov	r0, r9
90012954:	f000 fca8 	bl	900132a8 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90012958:	f7ff f9c4 	bl	90011ce4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001295c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90012960:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012962:	2d00      	cmp	r5, #0
90012964:	dc04      	bgt.n	90012970 <xQueueReceive+0x250>
90012966:	e011      	b.n	9001298c <xQueueReceive+0x26c>
			--cTxLock;
90012968:	1e6b      	subs	r3, r5, #1
9001296a:	b2da      	uxtb	r2, r3
9001296c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001296e:	b16a      	cbz	r2, 9001298c <xQueueReceive+0x26c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012970:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012972:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012974:	b153      	cbz	r3, 9001298c <xQueueReceive+0x26c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012976:	f000 fcdb 	bl	90013330 <xTaskRemoveFromEventList>
9001297a:	2800      	cmp	r0, #0
9001297c:	d0f4      	beq.n	90012968 <xQueueReceive+0x248>
						vTaskMissedYield();
9001297e:	f000 fd6b 	bl	90013458 <vTaskMissedYield>
			--cTxLock;
90012982:	1e6b      	subs	r3, r5, #1
90012984:	b2da      	uxtb	r2, r3
90012986:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012988:	2a00      	cmp	r2, #0
9001298a:	d1f1      	bne.n	90012970 <xQueueReceive+0x250>
		pxQueue->cTxLock = queueUNLOCKED;
9001298c:	23ff      	movs	r3, #255	@ 0xff
9001298e:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90012992:	f7ff f9c9 	bl	90011d28 <vPortExitCritical>
	taskENTER_CRITICAL();
90012996:	f7ff f9a5 	bl	90011ce4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001299a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9001299e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900129a0:	2d00      	cmp	r5, #0
900129a2:	dd14      	ble.n	900129ce <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900129a4:	f104 0910 	add.w	r9, r4, #16
900129a8:	e003      	b.n	900129b2 <xQueueReceive+0x292>
				--cRxLock;
900129aa:	1e6b      	subs	r3, r5, #1
900129ac:	b2da      	uxtb	r2, r3
900129ae:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900129b0:	b16a      	cbz	r2, 900129ce <xQueueReceive+0x2ae>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900129b2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900129b4:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900129b6:	b153      	cbz	r3, 900129ce <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900129b8:	f000 fcba 	bl	90013330 <xTaskRemoveFromEventList>
900129bc:	2800      	cmp	r0, #0
900129be:	d0f4      	beq.n	900129aa <xQueueReceive+0x28a>
					vTaskMissedYield();
900129c0:	f000 fd4a 	bl	90013458 <vTaskMissedYield>
				--cRxLock;
900129c4:	1e6b      	subs	r3, r5, #1
900129c6:	b2da      	uxtb	r2, r3
900129c8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900129ca:	2a00      	cmp	r2, #0
900129cc:	d1f1      	bne.n	900129b2 <xQueueReceive+0x292>
		pxQueue->cRxLock = queueUNLOCKED;
900129ce:	23ff      	movs	r3, #255	@ 0xff
900129d0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
900129d4:	f7ff f9a8 	bl	90011d28 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
900129d8:	f000 fbec 	bl	900131b4 <xTaskResumeAll>
900129dc:	2800      	cmp	r0, #0
900129de:	d1a4      	bne.n	9001292a <xQueueReceive+0x20a>
					portYIELD_WITHIN_API();
900129e0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900129e4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900129e8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900129ec:	f3bf 8f4f 	dsb	sy
900129f0:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
900129f4:	e799      	b.n	9001292a <xQueueReceive+0x20a>
900129f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
900129fa:	f383 8811 	msr	BASEPRI, r3
900129fe:	f3bf 8f6f 	isb	sy
90012a02:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
90012a06:	e7fe      	b.n	90012a06 <xQueueReceive+0x2e6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012a08:	f104 0010 	add.w	r0, r4, #16
90012a0c:	f000 fc90 	bl	90013330 <xTaskRemoveFromEventList>
90012a10:	2800      	cmp	r0, #0
90012a12:	f43f af24 	beq.w	9001285e <xQueueReceive+0x13e>
						queueYIELD_IF_USING_PREEMPTION();
90012a16:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90012a1a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90012a1e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90012a22:	f3bf 8f4f 	dsb	sy
90012a26:	f3bf 8f6f 	isb	sy
90012a2a:	e718      	b.n	9001285e <xQueueReceive+0x13e>

90012a2c <xQueueSemaphoreTake>:
{
90012a2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012a30:	b084      	sub	sp, #16
90012a32:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
90012a34:	2800      	cmp	r0, #0
90012a36:	d05e      	beq.n	90012af6 <xQueueSemaphoreTake+0xca>
	configASSERT( pxQueue->uxItemSize == 0 );
90012a38:	6c07      	ldr	r7, [r0, #64]	@ 0x40
90012a3a:	4604      	mov	r4, r0
90012a3c:	b147      	cbz	r7, 90012a50 <xQueueSemaphoreTake+0x24>
90012a3e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012a42:	f383 8811 	msr	BASEPRI, r3
90012a46:	f3bf 8f6f 	isb	sy
90012a4a:	f3bf 8f4f 	dsb	sy
90012a4e:	e7fe      	b.n	90012a4e <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90012a50:	f000 fd0e 	bl	90013470 <xTaskGetSchedulerState>
90012a54:	4605      	mov	r5, r0
90012a56:	2800      	cmp	r0, #0
90012a58:	d056      	beq.n	90012b08 <xQueueSemaphoreTake+0xdc>
90012a5a:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012a5c:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		taskENTER_CRITICAL();
90012a60:	f7ff f940 	bl	90011ce4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
90012a64:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
90012a66:	2b00      	cmp	r3, #0
90012a68:	f040 814d 	bne.w	90012d06 <xQueueSemaphoreTake+0x2da>
				if( xTicksToWait == ( TickType_t ) 0 )
90012a6c:	9b01      	ldr	r3, [sp, #4]
90012a6e:	2b00      	cmp	r3, #0
90012a70:	f000 813e 	beq.w	90012cf0 <xQueueSemaphoreTake+0x2c4>
				else if( xEntryTimeSet == pdFALSE )
90012a74:	2d00      	cmp	r5, #0
90012a76:	f000 80a3 	beq.w	90012bc0 <xQueueSemaphoreTake+0x194>
		taskEXIT_CRITICAL();
90012a7a:	f7ff f955 	bl	90011d28 <vPortExitCritical>
		vTaskSuspendAll();
90012a7e:	f000 fb91 	bl	900131a4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90012a82:	f7ff f92f 	bl	90011ce4 <vPortEnterCritical>
90012a86:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90012a8a:	2bff      	cmp	r3, #255	@ 0xff
90012a8c:	d102      	bne.n	90012a94 <xQueueSemaphoreTake+0x68>
90012a8e:	2300      	movs	r3, #0
90012a90:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
90012a94:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90012a98:	2bff      	cmp	r3, #255	@ 0xff
90012a9a:	d102      	bne.n	90012aa2 <xQueueSemaphoreTake+0x76>
90012a9c:	2300      	movs	r3, #0
90012a9e:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
90012aa2:	f7ff f941 	bl	90011d28 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90012aa6:	a901      	add	r1, sp, #4
90012aa8:	a802      	add	r0, sp, #8
90012aaa:	f000 fc93 	bl	900133d4 <xTaskCheckForTimeOut>
90012aae:	2800      	cmp	r0, #0
90012ab0:	d137      	bne.n	90012b22 <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
90012ab2:	f7ff f917 	bl	90011ce4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90012ab6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90012ab8:	2b00      	cmp	r3, #0
90012aba:	f000 80ae 	beq.w	90012c1a <xQueueSemaphoreTake+0x1ee>
	taskEXIT_CRITICAL();
90012abe:	f7ff f933 	bl	90011d28 <vPortExitCritical>
	taskENTER_CRITICAL();
90012ac2:	f7ff f90f 	bl	90011ce4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90012ac6:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90012aca:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012acc:	2d00      	cmp	r5, #0
90012ace:	dd7f      	ble.n	90012bd0 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012ad0:	f104 0824 	add.w	r8, r4, #36	@ 0x24
90012ad4:	e004      	b.n	90012ae0 <xQueueSemaphoreTake+0xb4>
			--cTxLock;
90012ad6:	1e6b      	subs	r3, r5, #1
90012ad8:	b2da      	uxtb	r2, r3
90012ada:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012adc:	2a00      	cmp	r2, #0
90012ade:	d077      	beq.n	90012bd0 <xQueueSemaphoreTake+0x1a4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012ae0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012ae2:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012ae4:	2b00      	cmp	r3, #0
90012ae6:	d073      	beq.n	90012bd0 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012ae8:	f000 fc22 	bl	90013330 <xTaskRemoveFromEventList>
90012aec:	2800      	cmp	r0, #0
90012aee:	d0f2      	beq.n	90012ad6 <xQueueSemaphoreTake+0xaa>
						vTaskMissedYield();
90012af0:	f000 fcb2 	bl	90013458 <vTaskMissedYield>
90012af4:	e7ef      	b.n	90012ad6 <xQueueSemaphoreTake+0xaa>
90012af6:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012afa:	f383 8811 	msr	BASEPRI, r3
90012afe:	f3bf 8f6f 	isb	sy
90012b02:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
90012b06:	e7fe      	b.n	90012b06 <xQueueSemaphoreTake+0xda>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90012b08:	9b01      	ldr	r3, [sp, #4]
90012b0a:	2b00      	cmp	r3, #0
90012b0c:	f000 80d7 	beq.w	90012cbe <xQueueSemaphoreTake+0x292>
90012b10:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012b14:	f383 8811 	msr	BASEPRI, r3
90012b18:	f3bf 8f6f 	isb	sy
90012b1c:	f3bf 8f4f 	dsb	sy
90012b20:	e7fe      	b.n	90012b20 <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
90012b22:	f7ff f8df 	bl	90011ce4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90012b26:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90012b2a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012b2c:	2d00      	cmp	r5, #0
90012b2e:	dc04      	bgt.n	90012b3a <xQueueSemaphoreTake+0x10e>
90012b30:	e011      	b.n	90012b56 <xQueueSemaphoreTake+0x12a>
			--cTxLock;
90012b32:	1e6b      	subs	r3, r5, #1
90012b34:	b2da      	uxtb	r2, r3
90012b36:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012b38:	b16a      	cbz	r2, 90012b56 <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012b3a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012b3c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012b3e:	b153      	cbz	r3, 90012b56 <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012b40:	f000 fbf6 	bl	90013330 <xTaskRemoveFromEventList>
90012b44:	2800      	cmp	r0, #0
90012b46:	d0f4      	beq.n	90012b32 <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
90012b48:	f000 fc86 	bl	90013458 <vTaskMissedYield>
			--cTxLock;
90012b4c:	1e6b      	subs	r3, r5, #1
90012b4e:	b2da      	uxtb	r2, r3
90012b50:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012b52:	2a00      	cmp	r2, #0
90012b54:	d1f1      	bne.n	90012b3a <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
90012b56:	23ff      	movs	r3, #255	@ 0xff
90012b58:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90012b5c:	f7ff f8e4 	bl	90011d28 <vPortExitCritical>
	taskENTER_CRITICAL();
90012b60:	f7ff f8c0 	bl	90011ce4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90012b64:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90012b68:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012b6a:	2d00      	cmp	r5, #0
90012b6c:	dd14      	ble.n	90012b98 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012b6e:	f104 0810 	add.w	r8, r4, #16
90012b72:	e003      	b.n	90012b7c <xQueueSemaphoreTake+0x150>
				--cRxLock;
90012b74:	1e6b      	subs	r3, r5, #1
90012b76:	b2da      	uxtb	r2, r3
90012b78:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012b7a:	b16a      	cbz	r2, 90012b98 <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012b7c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012b7e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012b80:	b153      	cbz	r3, 90012b98 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012b82:	f000 fbd5 	bl	90013330 <xTaskRemoveFromEventList>
90012b86:	2800      	cmp	r0, #0
90012b88:	d0f4      	beq.n	90012b74 <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
90012b8a:	f000 fc65 	bl	90013458 <vTaskMissedYield>
				--cRxLock;
90012b8e:	1e6b      	subs	r3, r5, #1
90012b90:	b2da      	uxtb	r2, r3
90012b92:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012b94:	2a00      	cmp	r2, #0
90012b96:	d1f1      	bne.n	90012b7c <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
90012b98:	23ff      	movs	r3, #255	@ 0xff
90012b9a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90012b9e:	f7ff f8c3 	bl	90011d28 <vPortExitCritical>
			( void ) xTaskResumeAll();
90012ba2:	f000 fb07 	bl	900131b4 <xTaskResumeAll>
	taskENTER_CRITICAL();
90012ba6:	f7ff f89d 	bl	90011ce4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90012baa:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90012bac:	b963      	cbnz	r3, 90012bc8 <xQueueSemaphoreTake+0x19c>
	taskEXIT_CRITICAL();
90012bae:	f7ff f8bb 	bl	90011d28 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
90012bb2:	2f00      	cmp	r7, #0
90012bb4:	f040 8085 	bne.w	90012cc2 <xQueueSemaphoreTake+0x296>
					return errQUEUE_EMPTY;
90012bb8:	2000      	movs	r0, #0
}
90012bba:	b004      	add	sp, #16
90012bbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
					vTaskInternalSetTimeOutState( &xTimeOut );
90012bc0:	a802      	add	r0, sp, #8
90012bc2:	f000 fbfb 	bl	900133bc <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
90012bc6:	e758      	b.n	90012a7a <xQueueSemaphoreTake+0x4e>
	taskEXIT_CRITICAL();
90012bc8:	f7ff f8ae 	bl	90011d28 <vPortExitCritical>
	return xReturn;
90012bcc:	2501      	movs	r5, #1
90012bce:	e747      	b.n	90012a60 <xQueueSemaphoreTake+0x34>
		pxQueue->cTxLock = queueUNLOCKED;
90012bd0:	23ff      	movs	r3, #255	@ 0xff
90012bd2:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90012bd6:	f7ff f8a7 	bl	90011d28 <vPortExitCritical>
	taskENTER_CRITICAL();
90012bda:	f7ff f883 	bl	90011ce4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90012bde:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90012be2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012be4:	2d00      	cmp	r5, #0
90012be6:	dd10      	ble.n	90012c0a <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012be8:	f104 0810 	add.w	r8, r4, #16
90012bec:	e003      	b.n	90012bf6 <xQueueSemaphoreTake+0x1ca>
				--cRxLock;
90012bee:	1e6b      	subs	r3, r5, #1
90012bf0:	b2da      	uxtb	r2, r3
90012bf2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012bf4:	b14a      	cbz	r2, 90012c0a <xQueueSemaphoreTake+0x1de>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012bf6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012bf8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012bfa:	b133      	cbz	r3, 90012c0a <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012bfc:	f000 fb98 	bl	90013330 <xTaskRemoveFromEventList>
90012c00:	2800      	cmp	r0, #0
90012c02:	d0f4      	beq.n	90012bee <xQueueSemaphoreTake+0x1c2>
					vTaskMissedYield();
90012c04:	f000 fc28 	bl	90013458 <vTaskMissedYield>
90012c08:	e7f1      	b.n	90012bee <xQueueSemaphoreTake+0x1c2>
		pxQueue->cRxLock = queueUNLOCKED;
90012c0a:	23ff      	movs	r3, #255	@ 0xff
90012c0c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90012c10:	f7ff f88a 	bl	90011d28 <vPortExitCritical>
				( void ) xTaskResumeAll();
90012c14:	f000 face 	bl	900131b4 <xTaskResumeAll>
90012c18:	e7d8      	b.n	90012bcc <xQueueSemaphoreTake+0x1a0>
	taskEXIT_CRITICAL();
90012c1a:	f7ff f885 	bl	90011d28 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90012c1e:	6823      	ldr	r3, [r4, #0]
90012c20:	2b00      	cmp	r3, #0
90012c22:	d05c      	beq.n	90012cde <xQueueSemaphoreTake+0x2b2>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90012c24:	f104 0824 	add.w	r8, r4, #36	@ 0x24
90012c28:	9901      	ldr	r1, [sp, #4]
90012c2a:	4640      	mov	r0, r8
90012c2c:	f000 fb3c 	bl	900132a8 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90012c30:	f7ff f858 	bl	90011ce4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90012c34:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90012c38:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012c3a:	2d00      	cmp	r5, #0
90012c3c:	dc04      	bgt.n	90012c48 <xQueueSemaphoreTake+0x21c>
90012c3e:	e00d      	b.n	90012c5c <xQueueSemaphoreTake+0x230>
			--cTxLock;
90012c40:	1e6b      	subs	r3, r5, #1
90012c42:	b2da      	uxtb	r2, r3
90012c44:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90012c46:	b14a      	cbz	r2, 90012c5c <xQueueSemaphoreTake+0x230>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012c48:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012c4a:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90012c4c:	b133      	cbz	r3, 90012c5c <xQueueSemaphoreTake+0x230>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90012c4e:	f000 fb6f 	bl	90013330 <xTaskRemoveFromEventList>
90012c52:	2800      	cmp	r0, #0
90012c54:	d0f4      	beq.n	90012c40 <xQueueSemaphoreTake+0x214>
						vTaskMissedYield();
90012c56:	f000 fbff 	bl	90013458 <vTaskMissedYield>
90012c5a:	e7f1      	b.n	90012c40 <xQueueSemaphoreTake+0x214>
		pxQueue->cTxLock = queueUNLOCKED;
90012c5c:	23ff      	movs	r3, #255	@ 0xff
90012c5e:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90012c62:	f7ff f861 	bl	90011d28 <vPortExitCritical>
	taskENTER_CRITICAL();
90012c66:	f7ff f83d 	bl	90011ce4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90012c6a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90012c6e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012c70:	2d00      	cmp	r5, #0
90012c72:	dd10      	ble.n	90012c96 <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012c74:	f104 0810 	add.w	r8, r4, #16
90012c78:	e003      	b.n	90012c82 <xQueueSemaphoreTake+0x256>
				--cRxLock;
90012c7a:	1e6b      	subs	r3, r5, #1
90012c7c:	b2da      	uxtb	r2, r3
90012c7e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90012c80:	b14a      	cbz	r2, 90012c96 <xQueueSemaphoreTake+0x26a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012c82:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012c84:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012c86:	b133      	cbz	r3, 90012c96 <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012c88:	f000 fb52 	bl	90013330 <xTaskRemoveFromEventList>
90012c8c:	2800      	cmp	r0, #0
90012c8e:	d0f4      	beq.n	90012c7a <xQueueSemaphoreTake+0x24e>
					vTaskMissedYield();
90012c90:	f000 fbe2 	bl	90013458 <vTaskMissedYield>
90012c94:	e7f1      	b.n	90012c7a <xQueueSemaphoreTake+0x24e>
		pxQueue->cRxLock = queueUNLOCKED;
90012c96:	23ff      	movs	r3, #255	@ 0xff
90012c98:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90012c9c:	f7ff f844 	bl	90011d28 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90012ca0:	f000 fa88 	bl	900131b4 <xTaskResumeAll>
90012ca4:	2800      	cmp	r0, #0
90012ca6:	d191      	bne.n	90012bcc <xQueueSemaphoreTake+0x1a0>
					portYIELD_WITHIN_API();
90012ca8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90012cac:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90012cb0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90012cb4:	f3bf 8f4f 	dsb	sy
90012cb8:	f3bf 8f6f 	isb	sy
90012cbc:	e786      	b.n	90012bcc <xQueueSemaphoreTake+0x1a0>
90012cbe:	462f      	mov	r7, r5
90012cc0:	e6cc      	b.n	90012a5c <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
90012cc2:	f7ff f80f 	bl	90011ce4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
90012cc6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90012cc8:	b119      	cbz	r1, 90012cd2 <xQueueSemaphoreTake+0x2a6>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
90012cca:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90012ccc:	6819      	ldr	r1, [r3, #0]
90012cce:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
90012cd2:	68a0      	ldr	r0, [r4, #8]
90012cd4:	f000 fc60 	bl	90013598 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
90012cd8:	f7ff f826 	bl	90011d28 <vPortExitCritical>
90012cdc:	e76c      	b.n	90012bb8 <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
90012cde:	f7ff f801 	bl	90011ce4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
90012ce2:	68a0      	ldr	r0, [r4, #8]
90012ce4:	f000 fbd4 	bl	90013490 <xTaskPriorityInherit>
90012ce8:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
90012cea:	f7ff f81d 	bl	90011d28 <vPortExitCritical>
90012cee:	e799      	b.n	90012c24 <xQueueSemaphoreTake+0x1f8>
						configASSERT( xInheritanceOccurred == pdFALSE );
90012cf0:	2f00      	cmp	r7, #0
90012cf2:	d0f1      	beq.n	90012cd8 <xQueueSemaphoreTake+0x2ac>
90012cf4:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012cf8:	f383 8811 	msr	BASEPRI, r3
90012cfc:	f3bf 8f6f 	isb	sy
90012d00:	f3bf 8f4f 	dsb	sy
90012d04:	e7fe      	b.n	90012d04 <xQueueSemaphoreTake+0x2d8>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
90012d06:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90012d08:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
90012d0a:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90012d0c:	b12a      	cbz	r2, 90012d1a <xQueueSemaphoreTake+0x2ee>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012d0e:	6923      	ldr	r3, [r4, #16]
90012d10:	b93b      	cbnz	r3, 90012d22 <xQueueSemaphoreTake+0x2f6>
				taskEXIT_CRITICAL();
90012d12:	f7ff f809 	bl	90011d28 <vPortExitCritical>
				return pdPASS;
90012d16:	2001      	movs	r0, #1
90012d18:	e74f      	b.n	90012bba <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
90012d1a:	f000 fc8d 	bl	90013638 <pvTaskIncrementMutexHeldCount>
90012d1e:	60a0      	str	r0, [r4, #8]
90012d20:	e7f5      	b.n	90012d0e <xQueueSemaphoreTake+0x2e2>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012d22:	f104 0010 	add.w	r0, r4, #16
90012d26:	f000 fb03 	bl	90013330 <xTaskRemoveFromEventList>
90012d2a:	2800      	cmp	r0, #0
90012d2c:	d0f1      	beq.n	90012d12 <xQueueSemaphoreTake+0x2e6>
						queueYIELD_IF_USING_PREEMPTION();
90012d2e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90012d32:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90012d36:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90012d3a:	f3bf 8f4f 	dsb	sy
90012d3e:	f3bf 8f6f 	isb	sy
90012d42:	e7e6      	b.n	90012d12 <xQueueSemaphoreTake+0x2e6>

90012d44 <xQueueTakeMutexRecursive>:
		configASSERT( pxMutex );
90012d44:	b1a8      	cbz	r0, 90012d72 <xQueueTakeMutexRecursive+0x2e>
	{
90012d46:	b570      	push	{r4, r5, r6, lr}
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
90012d48:	6886      	ldr	r6, [r0, #8]
90012d4a:	4604      	mov	r4, r0
90012d4c:	460d      	mov	r5, r1
90012d4e:	f000 fb89 	bl	90013464 <xTaskGetCurrentTaskHandle>
90012d52:	4286      	cmp	r6, r0
90012d54:	d008      	beq.n	90012d68 <xQueueTakeMutexRecursive+0x24>
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
90012d56:	4629      	mov	r1, r5
90012d58:	4620      	mov	r0, r4
90012d5a:	f7ff fe67 	bl	90012a2c <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
90012d5e:	b110      	cbz	r0, 90012d66 <xQueueTakeMutexRecursive+0x22>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
90012d60:	68e3      	ldr	r3, [r4, #12]
90012d62:	3301      	adds	r3, #1
90012d64:	60e3      	str	r3, [r4, #12]
	}
90012d66:	bd70      	pop	{r4, r5, r6, pc}
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
90012d68:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
90012d6a:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
90012d6c:	4403      	add	r3, r0
90012d6e:	60e3      	str	r3, [r4, #12]
	}
90012d70:	bd70      	pop	{r4, r5, r6, pc}
90012d72:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012d76:	f383 8811 	msr	BASEPRI, r3
90012d7a:	f3bf 8f6f 	isb	sy
90012d7e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
90012d82:	e7fe      	b.n	90012d82 <xQueueTakeMutexRecursive+0x3e>

90012d84 <xQueueReceiveFromISR>:
{
90012d84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
90012d88:	b310      	cbz	r0, 90012dd0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90012d8a:	460f      	mov	r7, r1
90012d8c:	4604      	mov	r4, r0
90012d8e:	4616      	mov	r6, r2
90012d90:	b191      	cbz	r1, 90012db8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90012d92:	f7ff f825 	bl	90011de0 <vPortValidateInterruptPriority>
	__asm volatile
90012d96:	f3ef 8911 	mrs	r9, BASEPRI
90012d9a:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012d9e:	f383 8811 	msr	BASEPRI, r3
90012da2:	f3bf 8f6f 	isb	sy
90012da6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90012daa:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90012dac:	b9cd      	cbnz	r5, 90012de2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
90012dae:	4628      	mov	r0, r5
	__asm volatile
90012db0:	f389 8811 	msr	BASEPRI, r9
}
90012db4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90012db8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
90012dba:	2b00      	cmp	r3, #0
90012dbc:	d0e9      	beq.n	90012d92 <xQueueReceiveFromISR+0xe>
	__asm volatile
90012dbe:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012dc2:	f383 8811 	msr	BASEPRI, r3
90012dc6:	f3bf 8f6f 	isb	sy
90012dca:	f3bf 8f4f 	dsb	sy
90012dce:	e7fe      	b.n	90012dce <xQueueReceiveFromISR+0x4a>
90012dd0:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012dd4:	f383 8811 	msr	BASEPRI, r3
90012dd8:	f3bf 8f6f 	isb	sy
90012ddc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90012de0:	e7fe      	b.n	90012de0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
90012de2:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90012de6:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
90012de8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90012dec:	b142      	cbz	r2, 90012e00 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90012dee:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90012df0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90012df2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90012df4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90012df6:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90012df8:	d21c      	bcs.n	90012e34 <xQueueReceiveFromISR+0xb0>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
90012dfa:	4638      	mov	r0, r7
90012dfc:	f019 f8dd 	bl	9002bfba <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90012e00:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
90012e02:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90012e06:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
90012e08:	d006      	beq.n	90012e18 <xQueueReceiveFromISR+0x94>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
90012e0a:	f108 0301 	add.w	r3, r8, #1
90012e0e:	b25b      	sxtb	r3, r3
90012e10:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
90012e14:	2001      	movs	r0, #1
90012e16:	e7cb      	b.n	90012db0 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90012e18:	6923      	ldr	r3, [r4, #16]
90012e1a:	2b00      	cmp	r3, #0
90012e1c:	d0fa      	beq.n	90012e14 <xQueueReceiveFromISR+0x90>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90012e1e:	f104 0010 	add.w	r0, r4, #16
90012e22:	f000 fa85 	bl	90013330 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
90012e26:	2e00      	cmp	r6, #0
90012e28:	d0f4      	beq.n	90012e14 <xQueueReceiveFromISR+0x90>
90012e2a:	2800      	cmp	r0, #0
90012e2c:	d0f2      	beq.n	90012e14 <xQueueReceiveFromISR+0x90>
							*pxHigherPriorityTaskWoken = pdTRUE;
90012e2e:	2301      	movs	r3, #1
90012e30:	6033      	str	r3, [r6, #0]
90012e32:	e7ef      	b.n	90012e14 <xQueueReceiveFromISR+0x90>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
90012e34:	6821      	ldr	r1, [r4, #0]
90012e36:	60e1      	str	r1, [r4, #12]
90012e38:	e7df      	b.n	90012dfa <xQueueReceiveFromISR+0x76>
90012e3a:	bf00      	nop
90012e3c:	0000      	movs	r0, r0
	...

90012e40 <vQueueDelete>:
	configASSERT( pxQueue );
90012e40:	b1e0      	cbz	r0, 90012e7c <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
90012e42:	4b21      	ldr	r3, [pc, #132]	@ (90012ec8 <vQueueDelete+0x88>)
90012e44:	685a      	ldr	r2, [r3, #4]
90012e46:	4290      	cmp	r0, r2
90012e48:	d02b      	beq.n	90012ea2 <vQueueDelete+0x62>
90012e4a:	68da      	ldr	r2, [r3, #12]
90012e4c:	4290      	cmp	r0, r2
90012e4e:	d02a      	beq.n	90012ea6 <vQueueDelete+0x66>
90012e50:	695a      	ldr	r2, [r3, #20]
90012e52:	4290      	cmp	r0, r2
90012e54:	d029      	beq.n	90012eaa <vQueueDelete+0x6a>
90012e56:	69da      	ldr	r2, [r3, #28]
90012e58:	4290      	cmp	r0, r2
90012e5a:	d028      	beq.n	90012eae <vQueueDelete+0x6e>
90012e5c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90012e5e:	4290      	cmp	r0, r2
90012e60:	d027      	beq.n	90012eb2 <vQueueDelete+0x72>
90012e62:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90012e64:	4290      	cmp	r0, r2
90012e66:	d014      	beq.n	90012e92 <vQueueDelete+0x52>
90012e68:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90012e6a:	4290      	cmp	r0, r2
90012e6c:	d023      	beq.n	90012eb6 <vQueueDelete+0x76>
90012e6e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
90012e70:	4290      	cmp	r0, r2
90012e72:	d022      	beq.n	90012eba <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
90012e74:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
90012e78:	b14b      	cbz	r3, 90012e8e <vQueueDelete+0x4e>
}
90012e7a:	4770      	bx	lr
90012e7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012e80:	f383 8811 	msr	BASEPRI, r3
90012e84:	f3bf 8f6f 	isb	sy
90012e88:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90012e8c:	e7fe      	b.n	90012e8c <vQueueDelete+0x4c>
			vPortFree( pxQueue );
90012e8e:	f7fe be67 	b.w	90011b60 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90012e92:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
90012e94:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
90012e98:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 90012ec0 <vQueueDelete+0x80>
90012e9c:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
90012ea0:	e7e8      	b.n	90012e74 <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90012ea2:	2200      	movs	r2, #0
90012ea4:	e7f6      	b.n	90012e94 <vQueueDelete+0x54>
90012ea6:	2201      	movs	r2, #1
90012ea8:	e7f4      	b.n	90012e94 <vQueueDelete+0x54>
90012eaa:	2202      	movs	r2, #2
90012eac:	e7f2      	b.n	90012e94 <vQueueDelete+0x54>
90012eae:	2203      	movs	r2, #3
90012eb0:	e7f0      	b.n	90012e94 <vQueueDelete+0x54>
90012eb2:	2204      	movs	r2, #4
90012eb4:	e7ee      	b.n	90012e94 <vQueueDelete+0x54>
90012eb6:	2206      	movs	r2, #6
90012eb8:	e7ec      	b.n	90012e94 <vQueueDelete+0x54>
90012eba:	2207      	movs	r2, #7
90012ebc:	e7ea      	b.n	90012e94 <vQueueDelete+0x54>
90012ebe:	bf00      	nop
	...
90012ec8:	24026958 	.word	0x24026958

90012ecc <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
90012ecc:	4b12      	ldr	r3, [pc, #72]	@ (90012f18 <vQueueAddToRegistry+0x4c>)
90012ece:	681a      	ldr	r2, [r3, #0]
90012ed0:	b17a      	cbz	r2, 90012ef2 <vQueueAddToRegistry+0x26>
90012ed2:	689a      	ldr	r2, [r3, #8]
90012ed4:	b162      	cbz	r2, 90012ef0 <vQueueAddToRegistry+0x24>
90012ed6:	691a      	ldr	r2, [r3, #16]
90012ed8:	b192      	cbz	r2, 90012f00 <vQueueAddToRegistry+0x34>
90012eda:	699a      	ldr	r2, [r3, #24]
90012edc:	b192      	cbz	r2, 90012f04 <vQueueAddToRegistry+0x38>
90012ede:	6a1a      	ldr	r2, [r3, #32]
90012ee0:	b192      	cbz	r2, 90012f08 <vQueueAddToRegistry+0x3c>
90012ee2:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90012ee4:	b192      	cbz	r2, 90012f0c <vQueueAddToRegistry+0x40>
90012ee6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90012ee8:	b192      	cbz	r2, 90012f10 <vQueueAddToRegistry+0x44>
90012eea:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90012eec:	b192      	cbz	r2, 90012f14 <vQueueAddToRegistry+0x48>
	}
90012eee:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90012ef0:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
90012ef2:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
90012ef6:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
90012efa:	f8cc 0004 	str.w	r0, [ip, #4]
	}
90012efe:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90012f00:	2202      	movs	r2, #2
90012f02:	e7f6      	b.n	90012ef2 <vQueueAddToRegistry+0x26>
90012f04:	2203      	movs	r2, #3
90012f06:	e7f4      	b.n	90012ef2 <vQueueAddToRegistry+0x26>
90012f08:	2204      	movs	r2, #4
90012f0a:	e7f2      	b.n	90012ef2 <vQueueAddToRegistry+0x26>
90012f0c:	2205      	movs	r2, #5
90012f0e:	e7f0      	b.n	90012ef2 <vQueueAddToRegistry+0x26>
90012f10:	2206      	movs	r2, #6
90012f12:	e7ee      	b.n	90012ef2 <vQueueAddToRegistry+0x26>
90012f14:	2207      	movs	r2, #7
90012f16:	e7ec      	b.n	90012ef2 <vQueueAddToRegistry+0x26>
90012f18:	24026958 	.word	0x24026958

90012f1c <xTaskIncrementTick.part.0>:
	traceTASK_INCREMENT_TICK( xTickCount );
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
	{
		/* Minor optimisation.  The tick count cannot change in this
		block. */
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90012f1c:	4b49      	ldr	r3, [pc, #292]	@ (90013044 <xTaskIncrementTick.part.0+0x128>)
BaseType_t xTaskIncrementTick( void )
90012f1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90012f22:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
90012f24:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90012f26:	3601      	adds	r6, #1

		/* Increment the RTOS tick, switching the delayed and overflowed
		delayed lists if it wraps to 0. */
		xTickCount = xConstTickCount;
90012f28:	601e      	str	r6, [r3, #0]

		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
90012f2a:	2e00      	cmp	r6, #0
90012f2c:	d03e      	beq.n	90012fac <xTaskIncrementTick.part.0+0x90>
90012f2e:	4b46      	ldr	r3, [pc, #280]	@ (90013048 <xTaskIncrementTick.part.0+0x12c>)
90012f30:	9301      	str	r3, [sp, #4]

		/* See if this tick has made a timeout expire.  Tasks are stored in
		the	queue in the order of their wake time - meaning once one task
		has been found whose block time has not expired there is no need to
		look any further down the list. */
		if( xConstTickCount >= xNextTaskUnblockTime )
90012f32:	681b      	ldr	r3, [r3, #0]
90012f34:	429e      	cmp	r6, r3
90012f36:	d346      	bcc.n	90012fc6 <xTaskIncrementTick.part.0+0xaa>
		{
			for( ;; )
			{
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90012f38:	4f44      	ldr	r7, [pc, #272]	@ (9001304c <xTaskIncrementTick.part.0+0x130>)
90012f3a:	683b      	ldr	r3, [r7, #0]
90012f3c:	681d      	ldr	r5, [r3, #0]
90012f3e:	2d00      	cmp	r5, #0
90012f40:	d077      	beq.n	90013032 <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
90012f42:	2500      	movs	r5, #0
90012f44:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 9001305c <xTaskIncrementTick.part.0+0x140>
90012f48:	f8df a114 	ldr.w	sl, [pc, #276]	@ 90013060 <xTaskIncrementTick.part.0+0x144>
						mtCOVERAGE_TEST_MARKER();
					}

					/* Place the unblocked task into the appropriate ready
					list. */
					prvAddTaskToReadyList( pxTCB );
90012f4c:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 90013064 <xTaskIncrementTick.part.0+0x148>
90012f50:	e020      	b.n	90012f94 <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90012f52:	f7fe fe9d 	bl	90011c90 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90012f56:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90012f58:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90012f5c:	b10b      	cbz	r3, 90012f62 <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90012f5e:	f7fe fe97 	bl	90011c90 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
90012f62:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90012f64:	4659      	mov	r1, fp
90012f66:	f8d8 2000 	ldr.w	r2, [r8]
90012f6a:	eb03 0083 	add.w	r0, r3, r3, lsl #2
90012f6e:	4293      	cmp	r3, r2
90012f70:	eb09 0080 	add.w	r0, r9, r0, lsl #2
90012f74:	d901      	bls.n	90012f7a <xTaskIncrementTick.part.0+0x5e>
90012f76:	f8c8 3000 	str.w	r3, [r8]
90012f7a:	f7fe fe63 	bl	90011c44 <vListInsertEnd>
					{
						/* Preemption is on, but a context switch should
						only be performed if the unblocked task has a
						priority that is equal to or higher than the
						currently executing task. */
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90012f7e:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90012f82:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
90012f84:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90012f86:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90012f88:	681b      	ldr	r3, [r3, #0]
						{
							xSwitchRequired = pdTRUE;
90012f8a:	4291      	cmp	r1, r2
90012f8c:	bf28      	it	cs
90012f8e:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90012f90:	2b00      	cmp	r3, #0
90012f92:	d052      	beq.n	9001303a <xTaskIncrementTick.part.0+0x11e>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012f94:	683b      	ldr	r3, [r7, #0]
90012f96:	68db      	ldr	r3, [r3, #12]
90012f98:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
90012f9a:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90012f9c:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
90012fa0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90012fa2:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
90012fa4:	d2d5      	bcs.n	90012f52 <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
90012fa6:	9a01      	ldr	r2, [sp, #4]
90012fa8:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
90012faa:	e011      	b.n	90012fd0 <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
90012fac:	4b27      	ldr	r3, [pc, #156]	@ (9001304c <xTaskIncrementTick.part.0+0x130>)
90012fae:	681a      	ldr	r2, [r3, #0]
90012fb0:	6812      	ldr	r2, [r2, #0]
90012fb2:	b30a      	cbz	r2, 90012ff8 <xTaskIncrementTick.part.0+0xdc>
90012fb4:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012fb8:	f383 8811 	msr	BASEPRI, r3
90012fbc:	f3bf 8f6f 	isb	sy
90012fc0:	f3bf 8f4f 	dsb	sy
90012fc4:	e7fe      	b.n	90012fc4 <xTaskIncrementTick.part.0+0xa8>
BaseType_t xSwitchRequired = pdFALSE;
90012fc6:	2500      	movs	r5, #0
90012fc8:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 9001305c <xTaskIncrementTick.part.0+0x140>
90012fcc:	f8df a090 	ldr.w	sl, [pc, #144]	@ 90013060 <xTaskIncrementTick.part.0+0x144>
		/* Tasks of equal priority to the currently running task will share
		processing time (time slice) if preemption is on, and the application
		writer has not explicitly turned time slicing off. */
		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
		{
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90012fd0:	f8da 3000 	ldr.w	r3, [sl]
		}
		#endif /* configUSE_TICK_HOOK */

		#if ( configUSE_PREEMPTION == 1 )
		{
			if( xYieldPending != pdFALSE )
90012fd4:	491e      	ldr	r1, [pc, #120]	@ (90013050 <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90012fd6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012fd8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90012fdc:	009b      	lsls	r3, r3, #2
90012fde:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
90012fe2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
90012fe4:	2a02      	cmp	r2, #2
90012fe6:	bf28      	it	cs
90012fe8:	2501      	movcs	r5, #1
			{
				xSwitchRequired = pdTRUE;
90012fea:	2b00      	cmp	r3, #0
		}
		#endif
	}

	return xSwitchRequired;
}
90012fec:	bf0c      	ite	eq
90012fee:	4628      	moveq	r0, r5
90012ff0:	2001      	movne	r0, #1
90012ff2:	b003      	add	sp, #12
90012ff4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
90012ff8:	4a16      	ldr	r2, [pc, #88]	@ (90013054 <xTaskIncrementTick.part.0+0x138>)
90012ffa:	6818      	ldr	r0, [r3, #0]
90012ffc:	6811      	ldr	r1, [r2, #0]
90012ffe:	6019      	str	r1, [r3, #0]
90013000:	4915      	ldr	r1, [pc, #84]	@ (90013058 <xTaskIncrementTick.part.0+0x13c>)
90013002:	6010      	str	r0, [r2, #0]
90013004:	680a      	ldr	r2, [r1, #0]
90013006:	3201      	adds	r2, #1
90013008:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001300a:	681a      	ldr	r2, [r3, #0]
9001300c:	6812      	ldr	r2, [r2, #0]
9001300e:	b93a      	cbnz	r2, 90013020 <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
90013010:	4b0d      	ldr	r3, [pc, #52]	@ (90013048 <xTaskIncrementTick.part.0+0x12c>)
90013012:	461a      	mov	r2, r3
90013014:	9301      	str	r3, [sp, #4]
90013016:	f04f 33ff 	mov.w	r3, #4294967295
9001301a:	6013      	str	r3, [r2, #0]
9001301c:	4613      	mov	r3, r2
9001301e:	e788      	b.n	90012f32 <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90013020:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90013022:	4a09      	ldr	r2, [pc, #36]	@ (90013048 <xTaskIncrementTick.part.0+0x12c>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90013024:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90013026:	9201      	str	r2, [sp, #4]
90013028:	68db      	ldr	r3, [r3, #12]
9001302a:	685b      	ldr	r3, [r3, #4]
9001302c:	6013      	str	r3, [r2, #0]
9001302e:	4613      	mov	r3, r2
	}
}
90013030:	e77f      	b.n	90012f32 <xTaskIncrementTick.part.0+0x16>
90013032:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 9001305c <xTaskIncrementTick.part.0+0x140>
90013036:	f8df a028 	ldr.w	sl, [pc, #40]	@ 90013060 <xTaskIncrementTick.part.0+0x144>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001303a:	f04f 33ff 	mov.w	r3, #4294967295
9001303e:	9a01      	ldr	r2, [sp, #4]
90013040:	6013      	str	r3, [r2, #0]
					break;
90013042:	e7c5      	b.n	90012fd0 <xTaskIncrementTick.part.0+0xb4>
90013044:	240269b4 	.word	0x240269b4
90013048:	2402699c 	.word	0x2402699c
9001304c:	240269e8 	.word	0x240269e8
90013050:	240269a4 	.word	0x240269a4
90013054:	240269e4 	.word	0x240269e4
90013058:	240269a0 	.word	0x240269a0
9001305c:	240269ec 	.word	0x240269ec
90013060:	24026e4c 	.word	0x24026e4c
90013064:	240269b0 	.word	0x240269b0

90013068 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
90013068:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9001306c:	4d43      	ldr	r5, [pc, #268]	@ (9001317c <xTaskResumeAll.part.0+0x114>)
	taskENTER_CRITICAL();
9001306e:	f7fe fe39 	bl	90011ce4 <vPortEnterCritical>
		--uxSchedulerSuspended;
90013072:	682b      	ldr	r3, [r5, #0]
90013074:	3b01      	subs	r3, #1
90013076:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90013078:	682b      	ldr	r3, [r5, #0]
9001307a:	2b00      	cmp	r3, #0
9001307c:	d168      	bne.n	90013150 <xTaskResumeAll.part.0+0xe8>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9001307e:	4b40      	ldr	r3, [pc, #256]	@ (90013180 <xTaskResumeAll.part.0+0x118>)
90013080:	681b      	ldr	r3, [r3, #0]
90013082:	2b00      	cmp	r3, #0
90013084:	d064      	beq.n	90013150 <xTaskResumeAll.part.0+0xe8>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90013086:	4e3f      	ldr	r6, [pc, #252]	@ (90013184 <xTaskResumeAll.part.0+0x11c>)
90013088:	6833      	ldr	r3, [r6, #0]
9001308a:	2b00      	cmp	r3, #0
9001308c:	d073      	beq.n	90013176 <xTaskResumeAll.part.0+0x10e>
9001308e:	4f3e      	ldr	r7, [pc, #248]	@ (90013188 <xTaskResumeAll.part.0+0x120>)
90013090:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 90013198 <xTaskResumeAll.part.0+0x130>
90013094:	f8df 8104 	ldr.w	r8, [pc, #260]	@ 9001319c <xTaskResumeAll.part.0+0x134>
90013098:	f8df a104 	ldr.w	sl, [pc, #260]	@ 900131a0 <xTaskResumeAll.part.0+0x138>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001309c:	68f3      	ldr	r3, [r6, #12]
9001309e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900130a2:	f10b 0404 	add.w	r4, fp, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900130a6:	f10b 0018 	add.w	r0, fp, #24
900130aa:	f7fe fdf1 	bl	90011c90 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900130ae:	4620      	mov	r0, r4
900130b0:	f7fe fdee 	bl	90011c90 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
900130b4:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
900130b8:	4621      	mov	r1, r4
900130ba:	683c      	ldr	r4, [r7, #0]
900130bc:	eb02 0082 	add.w	r0, r2, r2, lsl #2
900130c0:	42a2      	cmp	r2, r4
900130c2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
900130c6:	d900      	bls.n	900130ca <xTaskResumeAll.part.0+0x62>
900130c8:	603a      	str	r2, [r7, #0]
900130ca:	f7fe fdbb 	bl	90011c44 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900130ce:	f8d8 1000 	ldr.w	r1, [r8]
900130d2:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
900130d6:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
900130d8:	429a      	cmp	r2, r3
900130da:	d33f      	bcc.n	9001315c <xTaskResumeAll.part.0+0xf4>
						xYieldPending = pdTRUE;
900130dc:	2301      	movs	r3, #1
900130de:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900130e2:	6833      	ldr	r3, [r6, #0]
900130e4:	2b00      	cmp	r3, #0
900130e6:	d1d9      	bne.n	9001309c <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900130e8:	4b28      	ldr	r3, [pc, #160]	@ (9001318c <xTaskResumeAll.part.0+0x124>)
900130ea:	681a      	ldr	r2, [r3, #0]
900130ec:	6812      	ldr	r2, [r2, #0]
900130ee:	2a00      	cmp	r2, #0
900130f0:	d03c      	beq.n	9001316c <xTaskResumeAll.part.0+0x104>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900130f2:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
900130f4:	4b26      	ldr	r3, [pc, #152]	@ (90013190 <xTaskResumeAll.part.0+0x128>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900130f6:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
900130f8:	68d2      	ldr	r2, [r2, #12]
900130fa:	6852      	ldr	r2, [r2, #4]
900130fc:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
900130fe:	4e25      	ldr	r6, [pc, #148]	@ (90013194 <xTaskResumeAll.part.0+0x12c>)
90013100:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
90013102:	b194      	cbz	r4, 9001312a <xTaskResumeAll.part.0+0xc2>
								xYieldPending = pdTRUE;
90013104:	2701      	movs	r7, #1
90013106:	e006      	b.n	90013116 <xTaskResumeAll.part.0+0xae>
90013108:	f7ff ff08 	bl	90012f1c <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9001310c:	b108      	cbz	r0, 90013112 <xTaskResumeAll.part.0+0xaa>
								xYieldPending = pdTRUE;
9001310e:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
90013112:	3c01      	subs	r4, #1
90013114:	d008      	beq.n	90013128 <xTaskResumeAll.part.0+0xc0>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90013116:	682b      	ldr	r3, [r5, #0]
90013118:	2b00      	cmp	r3, #0
9001311a:	d0f5      	beq.n	90013108 <xTaskResumeAll.part.0+0xa0>
		++xPendedTicks;
9001311c:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9001311e:	3c01      	subs	r4, #1
		++xPendedTicks;
90013120:	f103 0301 	add.w	r3, r3, #1
90013124:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90013126:	d1f6      	bne.n	90013116 <xTaskResumeAll.part.0+0xae>
						xPendedTicks = 0;
90013128:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
9001312a:	f8da 3000 	ldr.w	r3, [sl]
9001312e:	b17b      	cbz	r3, 90013150 <xTaskResumeAll.part.0+0xe8>
					taskYIELD_IF_USING_PREEMPTION();
90013130:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90013134:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90013138:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9001313c:	f3bf 8f4f 	dsb	sy
90013140:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
90013144:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
90013146:	f7fe fdef 	bl	90011d28 <vPortExitCritical>
}
9001314a:	4620      	mov	r0, r4
9001314c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
90013150:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
90013152:	f7fe fde9 	bl	90011d28 <vPortExitCritical>
}
90013156:	4620      	mov	r0, r4
90013158:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9001315c:	6833      	ldr	r3, [r6, #0]
9001315e:	2b00      	cmp	r3, #0
90013160:	d19c      	bne.n	9001309c <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90013162:	4b0a      	ldr	r3, [pc, #40]	@ (9001318c <xTaskResumeAll.part.0+0x124>)
90013164:	681a      	ldr	r2, [r3, #0]
90013166:	6812      	ldr	r2, [r2, #0]
90013168:	2a00      	cmp	r2, #0
9001316a:	d1c2      	bne.n	900130f2 <xTaskResumeAll.part.0+0x8a>
		xNextTaskUnblockTime = portMAX_DELAY;
9001316c:	4b08      	ldr	r3, [pc, #32]	@ (90013190 <xTaskResumeAll.part.0+0x128>)
9001316e:	f04f 32ff 	mov.w	r2, #4294967295
90013172:	601a      	str	r2, [r3, #0]
90013174:	e7c3      	b.n	900130fe <xTaskResumeAll.part.0+0x96>
90013176:	f8df a028 	ldr.w	sl, [pc, #40]	@ 900131a0 <xTaskResumeAll.part.0+0x138>
9001317a:	e7c0      	b.n	900130fe <xTaskResumeAll.part.0+0x96>
9001317c:	24026998 	.word	0x24026998
90013180:	240269b8 	.word	0x240269b8
90013184:	240269d0 	.word	0x240269d0
90013188:	240269b0 	.word	0x240269b0
9001318c:	240269e8 	.word	0x240269e8
90013190:	2402699c 	.word	0x2402699c
90013194:	240269a8 	.word	0x240269a8
90013198:	240269ec 	.word	0x240269ec
9001319c:	24026e4c 	.word	0x24026e4c
900131a0:	240269a4 	.word	0x240269a4

900131a4 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
900131a4:	4a02      	ldr	r2, [pc, #8]	@ (900131b0 <vTaskSuspendAll+0xc>)
900131a6:	6813      	ldr	r3, [r2, #0]
900131a8:	3301      	adds	r3, #1
900131aa:	6013      	str	r3, [r2, #0]
}
900131ac:	4770      	bx	lr
900131ae:	bf00      	nop
900131b0:	24026998 	.word	0x24026998

900131b4 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
900131b4:	4b06      	ldr	r3, [pc, #24]	@ (900131d0 <xTaskResumeAll+0x1c>)
900131b6:	681b      	ldr	r3, [r3, #0]
900131b8:	b943      	cbnz	r3, 900131cc <xTaskResumeAll+0x18>
900131ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
900131be:	f383 8811 	msr	BASEPRI, r3
900131c2:	f3bf 8f6f 	isb	sy
900131c6:	f3bf 8f4f 	dsb	sy
900131ca:	e7fe      	b.n	900131ca <xTaskResumeAll+0x16>
900131cc:	f7ff bf4c 	b.w	90013068 <xTaskResumeAll.part.0>
900131d0:	24026998 	.word	0x24026998

900131d4 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900131d4:	4b05      	ldr	r3, [pc, #20]	@ (900131ec <xTaskIncrementTick+0x18>)
900131d6:	681b      	ldr	r3, [r3, #0]
900131d8:	b90b      	cbnz	r3, 900131de <xTaskIncrementTick+0xa>
900131da:	f7ff be9f 	b.w	90012f1c <xTaskIncrementTick.part.0>
		++xPendedTicks;
900131de:	4a04      	ldr	r2, [pc, #16]	@ (900131f0 <xTaskIncrementTick+0x1c>)
}
900131e0:	2000      	movs	r0, #0
		++xPendedTicks;
900131e2:	6813      	ldr	r3, [r2, #0]
900131e4:	3301      	adds	r3, #1
900131e6:	6013      	str	r3, [r2, #0]
}
900131e8:	4770      	bx	lr
900131ea:	bf00      	nop
900131ec:	24026998 	.word	0x24026998
900131f0:	240269a8 	.word	0x240269a8

900131f4 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
900131f4:	4b27      	ldr	r3, [pc, #156]	@ (90013294 <vTaskSwitchContext+0xa0>)
900131f6:	681b      	ldr	r3, [r3, #0]
900131f8:	b11b      	cbz	r3, 90013202 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
900131fa:	4b27      	ldr	r3, [pc, #156]	@ (90013298 <vTaskSwitchContext+0xa4>)
900131fc:	2201      	movs	r2, #1
900131fe:	601a      	str	r2, [r3, #0]
90013200:	4770      	bx	lr
{
90013202:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
90013204:	4a24      	ldr	r2, [pc, #144]	@ (90013298 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
90013206:	4c25      	ldr	r4, [pc, #148]	@ (9001329c <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
90013208:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
9001320a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9001320c:	2b00      	cmp	r3, #0
9001320e:	d036      	beq.n	9001327e <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
90013210:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90013212:	b10b      	cbz	r3, 90013218 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
90013214:	2001      	movs	r0, #1
90013216:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90013218:	4d21      	ldr	r5, [pc, #132]	@ (900132a0 <vTaskSwitchContext+0xac>)
9001321a:	4922      	ldr	r1, [pc, #136]	@ (900132a4 <vTaskSwitchContext+0xb0>)
9001321c:	682b      	ldr	r3, [r5, #0]
9001321e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90013222:	0098      	lsls	r0, r3, #2
90013224:	0092      	lsls	r2, r2, #2
90013226:	588a      	ldr	r2, [r1, r2]
90013228:	b942      	cbnz	r2, 9001323c <vTaskSwitchContext+0x48>
9001322a:	b1fb      	cbz	r3, 9001326c <vTaskSwitchContext+0x78>
9001322c:	3b01      	subs	r3, #1
9001322e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90013232:	0098      	lsls	r0, r3, #2
90013234:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
90013238:	2a00      	cmp	r2, #0
9001323a:	d0f6      	beq.n	9001322a <vTaskSwitchContext+0x36>
9001323c:	4418      	add	r0, r3
9001323e:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
90013242:	f8dc 1004 	ldr.w	r1, [ip, #4]
90013246:	4662      	mov	r2, ip
90013248:	6849      	ldr	r1, [r1, #4]
9001324a:	3208      	adds	r2, #8
9001324c:	4291      	cmp	r1, r2
9001324e:	f8cc 1004 	str.w	r1, [ip, #4]
90013252:	d01b      	beq.n	9001328c <vTaskSwitchContext+0x98>
90013254:	68ca      	ldr	r2, [r1, #12]
90013256:	6022      	str	r2, [r4, #0]
90013258:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9001325a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9001325c:	b1a3      	cbz	r3, 90013288 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
9001325e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90013260:	b11b      	cbz	r3, 9001326a <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
90013262:	2000      	movs	r0, #0
}
90013264:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
90013268:	4718      	bx	r3
}
9001326a:	bd70      	pop	{r4, r5, r6, pc}
9001326c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90013270:	f383 8811 	msr	BASEPRI, r3
90013274:	f3bf 8f6f 	isb	sy
90013278:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001327c:	e7fe      	b.n	9001327c <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
9001327e:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
90013280:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90013282:	2b00      	cmp	r3, #0
90013284:	d1c6      	bne.n	90013214 <vTaskSwitchContext+0x20>
90013286:	e7c7      	b.n	90013218 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
90013288:	6823      	ldr	r3, [r4, #0]
9001328a:	e7e8      	b.n	9001325e <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001328c:	6849      	ldr	r1, [r1, #4]
9001328e:	f8cc 1004 	str.w	r1, [ip, #4]
90013292:	e7df      	b.n	90013254 <vTaskSwitchContext+0x60>
90013294:	24026998 	.word	0x24026998
90013298:	240269a4 	.word	0x240269a4
9001329c:	24026e4c 	.word	0x24026e4c
900132a0:	240269b0 	.word	0x240269b0
900132a4:	240269ec 	.word	0x240269ec

900132a8 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
900132a8:	b1f0      	cbz	r0, 900132e8 <vTaskPlaceOnEventList+0x40>
{
900132aa:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
900132ac:	4d1a      	ldr	r5, [pc, #104]	@ (90013318 <vTaskPlaceOnEventList+0x70>)
900132ae:	460c      	mov	r4, r1
900132b0:	6829      	ldr	r1, [r5, #0]
900132b2:	3118      	adds	r1, #24
900132b4:	f7fe fcd4 	bl	90011c60 <vListInsert>
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
900132b8:	4b18      	ldr	r3, [pc, #96]	@ (9001331c <vTaskPlaceOnEventList+0x74>)
900132ba:	681e      	ldr	r6, [r3, #0]
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900132bc:	6828      	ldr	r0, [r5, #0]
900132be:	3004      	adds	r0, #4
900132c0:	f7fe fce6 	bl	90011c90 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
900132c4:	1c63      	adds	r3, r4, #1
900132c6:	d020      	beq.n	9001330a <vTaskPlaceOnEventList+0x62>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
900132c8:	19a4      	adds	r4, r4, r6

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
900132ca:	682b      	ldr	r3, [r5, #0]
900132cc:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
900132ce:	d214      	bcs.n	900132fa <vTaskPlaceOnEventList+0x52>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900132d0:	4b13      	ldr	r3, [pc, #76]	@ (90013320 <vTaskPlaceOnEventList+0x78>)
900132d2:	6818      	ldr	r0, [r3, #0]
900132d4:	6829      	ldr	r1, [r5, #0]
900132d6:	3104      	adds	r1, #4
900132d8:	f7fe fcc2 	bl	90011c60 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
900132dc:	4b11      	ldr	r3, [pc, #68]	@ (90013324 <vTaskPlaceOnEventList+0x7c>)
900132de:	681a      	ldr	r2, [r3, #0]
900132e0:	4294      	cmp	r4, r2
900132e2:	d200      	bcs.n	900132e6 <vTaskPlaceOnEventList+0x3e>
				{
					xNextTaskUnblockTime = xTimeToWake;
900132e4:	601c      	str	r4, [r3, #0]
}
900132e6:	bd70      	pop	{r4, r5, r6, pc}
900132e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900132ec:	f383 8811 	msr	BASEPRI, r3
900132f0:	f3bf 8f6f 	isb	sy
900132f4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
900132f8:	e7fe      	b.n	900132f8 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900132fa:	4b0b      	ldr	r3, [pc, #44]	@ (90013328 <vTaskPlaceOnEventList+0x80>)
900132fc:	6818      	ldr	r0, [r3, #0]
900132fe:	6829      	ldr	r1, [r5, #0]
}
90013300:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90013304:	3104      	adds	r1, #4
90013306:	f7fe bcab 	b.w	90011c60 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001330a:	6829      	ldr	r1, [r5, #0]
9001330c:	4807      	ldr	r0, [pc, #28]	@ (9001332c <vTaskPlaceOnEventList+0x84>)
9001330e:	3104      	adds	r1, #4
}
90013310:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90013314:	f7fe bc96 	b.w	90011c44 <vListInsertEnd>
90013318:	24026e4c 	.word	0x24026e4c
9001331c:	240269b4 	.word	0x240269b4
90013320:	240269e8 	.word	0x240269e8
90013324:	2402699c 	.word	0x2402699c
90013328:	240269e4 	.word	0x240269e4
9001332c:	240269bc 	.word	0x240269bc

90013330 <xTaskRemoveFromEventList>:
{
90013330:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90013332:	68c3      	ldr	r3, [r0, #12]
90013334:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
90013336:	b34c      	cbz	r4, 9001338c <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
90013338:	f104 0518 	add.w	r5, r4, #24
9001333c:	4628      	mov	r0, r5
9001333e:	f7fe fca7 	bl	90011c90 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90013342:	4b18      	ldr	r3, [pc, #96]	@ (900133a4 <xTaskRemoveFromEventList+0x74>)
90013344:	681b      	ldr	r3, [r3, #0]
90013346:	b173      	cbz	r3, 90013366 <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
90013348:	4629      	mov	r1, r5
9001334a:	4817      	ldr	r0, [pc, #92]	@ (900133a8 <xTaskRemoveFromEventList+0x78>)
9001334c:	f7fe fc7a 	bl	90011c44 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
90013350:	4b16      	ldr	r3, [pc, #88]	@ (900133ac <xTaskRemoveFromEventList+0x7c>)
90013352:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90013354:	681b      	ldr	r3, [r3, #0]
90013356:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013358:	429a      	cmp	r2, r3
9001335a:	d920      	bls.n	9001339e <xTaskRemoveFromEventList+0x6e>
		xYieldPending = pdTRUE;
9001335c:	2301      	movs	r3, #1
9001335e:	4a14      	ldr	r2, [pc, #80]	@ (900133b0 <xTaskRemoveFromEventList+0x80>)
		xReturn = pdTRUE;
90013360:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
90013362:	6013      	str	r3, [r2, #0]
}
90013364:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
90013366:	1d25      	adds	r5, r4, #4
90013368:	4628      	mov	r0, r5
9001336a:	f7fe fc91 	bl	90011c90 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
9001336e:	4b11      	ldr	r3, [pc, #68]	@ (900133b4 <xTaskRemoveFromEventList+0x84>)
90013370:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90013372:	681a      	ldr	r2, [r3, #0]
90013374:	4290      	cmp	r0, r2
90013376:	d900      	bls.n	9001337a <xTaskRemoveFromEventList+0x4a>
90013378:	6018      	str	r0, [r3, #0]
9001337a:	4b0f      	ldr	r3, [pc, #60]	@ (900133b8 <xTaskRemoveFromEventList+0x88>)
9001337c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90013380:	4629      	mov	r1, r5
90013382:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90013386:	f7fe fc5d 	bl	90011c44 <vListInsertEnd>
9001338a:	e7e1      	b.n	90013350 <xTaskRemoveFromEventList+0x20>
9001338c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90013390:	f383 8811 	msr	BASEPRI, r3
90013394:	f3bf 8f6f 	isb	sy
90013398:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
9001339c:	e7fe      	b.n	9001339c <xTaskRemoveFromEventList+0x6c>
		xReturn = pdFALSE;
9001339e:	2000      	movs	r0, #0
}
900133a0:	bd38      	pop	{r3, r4, r5, pc}
900133a2:	bf00      	nop
900133a4:	24026998 	.word	0x24026998
900133a8:	240269d0 	.word	0x240269d0
900133ac:	24026e4c 	.word	0x24026e4c
900133b0:	240269a4 	.word	0x240269a4
900133b4:	240269b0 	.word	0x240269b0
900133b8:	240269ec 	.word	0x240269ec

900133bc <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900133bc:	4a03      	ldr	r2, [pc, #12]	@ (900133cc <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
900133be:	4b04      	ldr	r3, [pc, #16]	@ (900133d0 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900133c0:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
900133c2:	681b      	ldr	r3, [r3, #0]
900133c4:	e9c0 2300 	strd	r2, r3, [r0]
}
900133c8:	4770      	bx	lr
900133ca:	bf00      	nop
900133cc:	240269a0 	.word	0x240269a0
900133d0:	240269b4 	.word	0x240269b4

900133d4 <xTaskCheckForTimeOut>:
{
900133d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
900133d6:	b308      	cbz	r0, 9001341c <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
900133d8:	460d      	mov	r5, r1
900133da:	b1b1      	cbz	r1, 9001340a <xTaskCheckForTimeOut+0x36>
900133dc:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
900133de:	f7fe fc81 	bl	90011ce4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
900133e2:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
900133e4:	4a1a      	ldr	r2, [pc, #104]	@ (90013450 <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
900133e6:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
900133e8:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
900133ea:	d02c      	beq.n	90013446 <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
900133ec:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90013454 <xTaskCheckForTimeOut+0x80>
900133f0:	6826      	ldr	r6, [r4, #0]
900133f2:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
900133f6:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
900133f8:	42be      	cmp	r6, r7
900133fa:	d018      	beq.n	9001342e <xTaskCheckForTimeOut+0x5a>
900133fc:	4288      	cmp	r0, r1
900133fe:	d816      	bhi.n	9001342e <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
90013400:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
90013402:	f7fe fc91 	bl	90011d28 <vPortExitCritical>
}
90013406:	4620      	mov	r0, r4
90013408:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001340a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001340e:	f383 8811 	msr	BASEPRI, r3
90013412:	f3bf 8f6f 	isb	sy
90013416:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9001341a:	e7fe      	b.n	9001341a <xTaskCheckForTimeOut+0x46>
9001341c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90013420:	f383 8811 	msr	BASEPRI, r3
90013424:	f3bf 8f6f 	isb	sy
90013428:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
9001342c:	e7fe      	b.n	9001342c <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9001342e:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
90013432:	4573      	cmp	r3, lr
90013434:	d909      	bls.n	9001344a <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
90013436:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90013438:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
9001343c:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
9001343e:	4403      	add	r3, r0
90013440:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90013442:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
90013446:	2400      	movs	r4, #0
90013448:	e7db      	b.n	90013402 <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
9001344a:	2300      	movs	r3, #0
9001344c:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
9001344e:	e7d7      	b.n	90013400 <xTaskCheckForTimeOut+0x2c>
90013450:	240269b4 	.word	0x240269b4
90013454:	240269a0 	.word	0x240269a0

90013458 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
90013458:	4b01      	ldr	r3, [pc, #4]	@ (90013460 <vTaskMissedYield+0x8>)
9001345a:	2201      	movs	r2, #1
9001345c:	601a      	str	r2, [r3, #0]
}
9001345e:	4770      	bx	lr
90013460:	240269a4 	.word	0x240269a4

90013464 <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
90013464:	4b01      	ldr	r3, [pc, #4]	@ (9001346c <xTaskGetCurrentTaskHandle+0x8>)
90013466:	6818      	ldr	r0, [r3, #0]
	}
90013468:	4770      	bx	lr
9001346a:	bf00      	nop
9001346c:	24026e4c 	.word	0x24026e4c

90013470 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
90013470:	4b05      	ldr	r3, [pc, #20]	@ (90013488 <xTaskGetSchedulerState+0x18>)
90013472:	681b      	ldr	r3, [r3, #0]
90013474:	b133      	cbz	r3, 90013484 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90013476:	4b05      	ldr	r3, [pc, #20]	@ (9001348c <xTaskGetSchedulerState+0x1c>)
90013478:	6818      	ldr	r0, [r3, #0]
9001347a:	fab0 f080 	clz	r0, r0
9001347e:	0940      	lsrs	r0, r0, #5
90013480:	0040      	lsls	r0, r0, #1
90013482:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
90013484:	2001      	movs	r0, #1
	}
90013486:	4770      	bx	lr
90013488:	240269ac 	.word	0x240269ac
9001348c:	24026998 	.word	0x24026998

90013490 <xTaskPriorityInherit>:
	{
90013490:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
90013492:	4604      	mov	r4, r0
90013494:	b1c8      	cbz	r0, 900134ca <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
90013496:	4d1b      	ldr	r5, [pc, #108]	@ (90013504 <xTaskPriorityInherit+0x74>)
90013498:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001349a:	682a      	ldr	r2, [r5, #0]
9001349c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9001349e:	4293      	cmp	r3, r2
900134a0:	d214      	bcs.n	900134cc <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
900134a2:	6982      	ldr	r2, [r0, #24]
900134a4:	2a00      	cmp	r2, #0
900134a6:	db04      	blt.n	900134b2 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900134a8:	682a      	ldr	r2, [r5, #0]
900134aa:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900134ac:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
900134b0:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
900134b2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900134b6:	4e14      	ldr	r6, [pc, #80]	@ (90013508 <xTaskPriorityInherit+0x78>)
900134b8:	6962      	ldr	r2, [r4, #20]
900134ba:	eb06 0383 	add.w	r3, r6, r3, lsl #2
900134be:	429a      	cmp	r2, r3
900134c0:	d00c      	beq.n	900134dc <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
900134c2:	682b      	ldr	r3, [r5, #0]
900134c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900134c6:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
900134c8:	2001      	movs	r0, #1
	}
900134ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
900134cc:	682b      	ldr	r3, [r5, #0]
900134ce:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
900134d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900134d2:	4298      	cmp	r0, r3
900134d4:	bf2c      	ite	cs
900134d6:	2000      	movcs	r0, #0
900134d8:	2001      	movcc	r0, #1
	}
900134da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900134dc:	1d27      	adds	r7, r4, #4
900134de:	4638      	mov	r0, r7
900134e0:	f7fe fbd6 	bl	90011c90 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
900134e4:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
900134e6:	4b09      	ldr	r3, [pc, #36]	@ (9001350c <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
900134e8:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
900134ea:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
900134ec:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
900134ee:	4290      	cmp	r0, r2
900134f0:	d900      	bls.n	900134f4 <xTaskPriorityInherit+0x64>
900134f2:	6018      	str	r0, [r3, #0]
900134f4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900134f8:	4639      	mov	r1, r7
900134fa:	eb06 0080 	add.w	r0, r6, r0, lsl #2
900134fe:	f7fe fba1 	bl	90011c44 <vListInsertEnd>
90013502:	e7e1      	b.n	900134c8 <xTaskPriorityInherit+0x38>
90013504:	24026e4c 	.word	0x24026e4c
90013508:	240269ec 	.word	0x240269ec
9001350c:	240269b0 	.word	0x240269b0

90013510 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
90013510:	b308      	cbz	r0, 90013556 <xTaskPriorityDisinherit+0x46>
	{
90013512:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
90013514:	4b1d      	ldr	r3, [pc, #116]	@ (9001358c <xTaskPriorityDisinherit+0x7c>)
90013516:	681c      	ldr	r4, [r3, #0]
90013518:	4284      	cmp	r4, r0
9001351a:	d008      	beq.n	9001352e <xTaskPriorityDisinherit+0x1e>
9001351c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90013520:	f383 8811 	msr	BASEPRI, r3
90013524:	f3bf 8f6f 	isb	sy
90013528:	f3bf 8f4f 	dsb	sy
9001352c:	e7fe      	b.n	9001352c <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
9001352e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90013530:	b143      	cbz	r3, 90013544 <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90013532:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
90013534:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90013536:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
90013538:	6523      	str	r3, [r4, #80]	@ 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
9001353a:	4291      	cmp	r1, r2
9001353c:	d000      	beq.n	90013540 <xTaskPriorityDisinherit+0x30>
9001353e:	b163      	cbz	r3, 9001355a <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
90013540:	2000      	movs	r0, #0
	}
90013542:	bd38      	pop	{r3, r4, r5, pc}
90013544:	f04f 0350 	mov.w	r3, #80	@ 0x50
90013548:	f383 8811 	msr	BASEPRI, r3
9001354c:	f3bf 8f6f 	isb	sy
90013550:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90013554:	e7fe      	b.n	90013554 <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
90013556:	2000      	movs	r0, #0
	}
90013558:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001355a:	1d25      	adds	r5, r4, #4
9001355c:	4628      	mov	r0, r5
9001355e:	f7fe fb97 	bl	90011c90 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90013562:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
90013564:	4b0a      	ldr	r3, [pc, #40]	@ (90013590 <xTaskPriorityDisinherit+0x80>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90013566:	f1c0 0238 	rsb	r2, r0, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9001356a:	62e0      	str	r0, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001356c:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9001356e:	681a      	ldr	r2, [r3, #0]
90013570:	4290      	cmp	r0, r2
90013572:	d900      	bls.n	90013576 <xTaskPriorityDisinherit+0x66>
90013574:	6018      	str	r0, [r3, #0]
90013576:	4b07      	ldr	r3, [pc, #28]	@ (90013594 <xTaskPriorityDisinherit+0x84>)
90013578:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001357c:	4629      	mov	r1, r5
9001357e:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90013582:	f7fe fb5f 	bl	90011c44 <vListInsertEnd>
					xReturn = pdTRUE;
90013586:	2001      	movs	r0, #1
	}
90013588:	bd38      	pop	{r3, r4, r5, pc}
9001358a:	bf00      	nop
9001358c:	24026e4c 	.word	0x24026e4c
90013590:	240269b0 	.word	0x240269b0
90013594:	240269ec 	.word	0x240269ec

90013598 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
90013598:	2800      	cmp	r0, #0
9001359a:	d03c      	beq.n	90013616 <vTaskPriorityDisinheritAfterTimeout+0x7e>
			configASSERT( pxTCB->uxMutexesHeld );
9001359c:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
9001359e:	b570      	push	{r4, r5, r6, lr}
900135a0:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
900135a2:	b14b      	cbz	r3, 900135b8 <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
900135a4:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
900135a6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
900135a8:	4281      	cmp	r1, r0
900135aa:	bf38      	it	cc
900135ac:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
900135ae:	2b01      	cmp	r3, #1
900135b0:	d101      	bne.n	900135b6 <vTaskPriorityDisinheritAfterTimeout+0x1e>
900135b2:	428a      	cmp	r2, r1
900135b4:	d109      	bne.n	900135ca <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
900135b6:	bd70      	pop	{r4, r5, r6, pc}
900135b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900135bc:	f383 8811 	msr	BASEPRI, r3
900135c0:	f3bf 8f6f 	isb	sy
900135c4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
900135c8:	e7fe      	b.n	900135c8 <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
900135ca:	4b18      	ldr	r3, [pc, #96]	@ (9001362c <vTaskPriorityDisinheritAfterTimeout+0x94>)
900135cc:	681b      	ldr	r3, [r3, #0]
900135ce:	42a3      	cmp	r3, r4
900135d0:	d022      	beq.n	90013618 <vTaskPriorityDisinheritAfterTimeout+0x80>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
900135d2:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
900135d4:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
900135d6:	2b00      	cmp	r3, #0
900135d8:	db02      	blt.n	900135e0 <vTaskPriorityDisinheritAfterTimeout+0x48>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900135da:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
900135de:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
900135e0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
900135e4:	4d12      	ldr	r5, [pc, #72]	@ (90013630 <vTaskPriorityDisinheritAfterTimeout+0x98>)
900135e6:	6961      	ldr	r1, [r4, #20]
900135e8:	eb05 0382 	add.w	r3, r5, r2, lsl #2
900135ec:	4299      	cmp	r1, r3
900135ee:	d1e2      	bne.n	900135b6 <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900135f0:	1d26      	adds	r6, r4, #4
900135f2:	4630      	mov	r0, r6
900135f4:	f7fe fb4c 	bl	90011c90 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
900135f8:	4b0e      	ldr	r3, [pc, #56]	@ (90013634 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
900135fa:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
900135fc:	681a      	ldr	r2, [r3, #0]
900135fe:	4290      	cmp	r0, r2
90013600:	d900      	bls.n	90013604 <vTaskPriorityDisinheritAfterTimeout+0x6c>
90013602:	6018      	str	r0, [r3, #0]
90013604:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90013608:	4631      	mov	r1, r6
9001360a:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9001360e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
90013612:	f7fe bb17 	b.w	90011c44 <vListInsertEnd>
90013616:	4770      	bx	lr
90013618:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001361c:	f383 8811 	msr	BASEPRI, r3
90013620:	f3bf 8f6f 	isb	sy
90013624:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
90013628:	e7fe      	b.n	90013628 <vTaskPriorityDisinheritAfterTimeout+0x90>
9001362a:	bf00      	nop
9001362c:	24026e4c 	.word	0x24026e4c
90013630:	240269ec 	.word	0x240269ec
90013634:	240269b0 	.word	0x240269b0

90013638 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
90013638:	4b04      	ldr	r3, [pc, #16]	@ (9001364c <pvTaskIncrementMutexHeldCount+0x14>)
9001363a:	681a      	ldr	r2, [r3, #0]
9001363c:	b11a      	cbz	r2, 90013646 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9001363e:	6819      	ldr	r1, [r3, #0]
90013640:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
90013642:	3201      	adds	r2, #1
90013644:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
90013646:	6818      	ldr	r0, [r3, #0]
	}
90013648:	4770      	bx	lr
9001364a:	bf00      	nop
9001364c:	24026e4c 	.word	0x24026e4c

90013650 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_YCbCr420_ARGB_ConvertBlocks(uint8_t *pInBuffer, 
                                      uint8_t *pOutBuffer, 
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{  
90013650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  int32_t c_red, c_blue, c_green;
  
  uint8_t *pOutAddr, *pOutAddr2;
  uint8_t *pChrom, *pLum;
  
  numberMCU = DataCount / YCBCR_420_BLOCK_SIZE;
90013654:	4d81      	ldr	r5, [pc, #516]	@ (9001385c <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x20c>)
{  
90013656:	4614      	mov	r4, r2
90013658:	468b      	mov	fp, r1
9001365a:	b093      	sub	sp, #76	@ 0x4c
  numberMCU = DataCount / YCBCR_420_BLOCK_SIZE;
9001365c:	fba5 5203 	umull	r5, r2, r5, r3
  currentMCU = BlockIndex;
  

  while(currentMCU < (numberMCU + BlockIndex))
90013660:	eb04 2112 	add.w	r1, r4, r2, lsr #8
  numberMCU = DataCount / YCBCR_420_BLOCK_SIZE;
90013664:	0a13      	lsrs	r3, r2, #8
  while(currentMCU < (numberMCU + BlockIndex))
90013666:	42a1      	cmp	r1, r4
90013668:	f240 80f3 	bls.w	90013852 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x202>
  {
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*16;
9001366c:	4a7c      	ldr	r2, [pc, #496]	@ (90013860 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x210>)
9001366e:	f8cd b034 	str.w	fp, [sp, #52]	@ 0x34
90013672:	4683      	mov	fp, r0
      if(i == 8)
      {
        pLum = pInBuffer + 128;
      }
      
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013674:	f8d2 a010 	ldr.w	sl, [r2, #16]
90013678:	4f7a      	ldr	r7, [pc, #488]	@ (90013864 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x214>)
9001367a:	f8df 91f4 	ldr.w	r9, [pc, #500]	@ 90013870 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x220>
9001367e:	f8df 81f4 	ldr.w	r8, [pc, #500]	@ 90013874 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x224>
90013682:	f8cd a030 	str.w	sl, [sp, #48]	@ 0x30
90013686:	940b      	str	r4, [sp, #44]	@ 0x2c
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*16;
90013688:	e9d2 6e09 	ldrd	r6, lr, [r2, #36]	@ 0x24
9001368c:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
          pLum += 64;                      
        }

        pLum = pLum - 128 + 16;
        
        refline += 2*JPEG_ConvertorParams.ScaledWidth;          
90013690:	ea4f 024e 	mov.w	r2, lr, lsl #1
90013694:	960f      	str	r6, [sp, #60]	@ 0x3c
90013696:	f8cd e028 	str.w	lr, [sp, #40]	@ 0x28
9001369a:	920e      	str	r2, [sp, #56]	@ 0x38
9001369c:	e006      	b.n	900136ac <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x5c>
  while(currentMCU < (numberMCU + BlockIndex))
9001369e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
      }
    }   
    
    pInBuffer +=  YCBCR_420_BLOCK_SIZE;
900136a0:	f501 7bc0 	add.w	fp, r1, #384	@ 0x180
  while(currentMCU < (numberMCU + BlockIndex))
900136a4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900136a6:	4293      	cmp	r3, r2
900136a8:	f000 80d2 	beq.w	90013850 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x200>
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*16;
900136ac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
    pChrom = pInBuffer + 256; /* pChroma = pInBuffer + 4*64 */
900136ae:	f50b 7580 	add.w	r5, fp, #256	@ 0x100
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*16;
900136b2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
900136b4:	011a      	lsls	r2, r3, #4
900136b6:	3301      	adds	r3, #1
900136b8:	fbb2 f1f0 	udiv	r1, r2, r0
900136bc:	930b      	str	r3, [sp, #44]	@ 0x2c
    yRef = ((currentMCU *16) % JPEG_ConvertorParams.WidthExtend);
900136be:	fb00 2211 	mls	r2, r0, r1, r2
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
900136c2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900136c4:	0052      	lsls	r2, r2, #1
900136c6:	fb03 f101 	mul.w	r1, r3, r1
900136ca:	eb02 1401 	add.w	r4, r2, r1, lsl #4
    for(i= 0; i <  16; i+=2)
900136ce:	2200      	movs	r2, #0
900136d0:	4659      	mov	r1, fp
900136d2:	e9cd 5b05 	strd	r5, fp, [sp, #20]
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
900136d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900136d8:	42a3      	cmp	r3, r4
900136da:	d9e0      	bls.n	9001369e <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x4e>
        pOutAddr = pOutBuffer + refline;
900136dc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
        pOutAddr2 = pOutAddr + JPEG_ConvertorParams.ScaledWidth;
900136de:	980a      	ldr	r0, [sp, #40]	@ 0x28
        pOutAddr = pOutBuffer + refline;
900136e0:	191e      	adds	r6, r3, r4
        pOutAddr2 = pOutAddr + JPEG_ConvertorParams.ScaledWidth;
900136e2:	9109      	str	r1, [sp, #36]	@ 0x24
900136e4:	e9dd 3a05 	ldrd	r3, sl, [sp, #20]
900136e8:	e9cd 4207 	strd	r4, r2, [sp, #28]
900136ec:	461a      	mov	r2, r3
900136ee:	f106 0530 	add.w	r5, r6, #48	@ 0x30
900136f2:	4653      	mov	r3, sl
900136f4:	1830      	adds	r0, r6, r0
        for(k= 0; k<2; k++)
900136f6:	f106 0e10 	add.w	lr, r6, #16
900136fa:	4692      	mov	sl, r2
900136fc:	9504      	str	r5, [sp, #16]
900136fe:	f1ae 0510 	sub.w	r5, lr, #16
          for(j=0; j < 8; j+=2)
90013702:	f10a 3cff 	add.w	ip, sl, #4294967295
90013706:	461c      	mov	r4, r3
    for(i= 0; i <  16; i+=2)
90013708:	4606      	mov	r6, r0
9001370a:	f8cd a00c 	str.w	sl, [sp, #12]
9001370e:	e9cd 3001 	strd	r3, r0, [sp, #4]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013712:	f81c 2f01 	ldrb.w	r2, [ip, #1]!
            pOutAddr += JPEG_BYTES_PER_PIXEL * 2;
90013716:	3504      	adds	r5, #4
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013718:	4853      	ldr	r0, [pc, #332]	@ (90013868 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x218>)
          for(j=0; j < 8; j+=2)
9001371a:	3402      	adds	r4, #2
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
9001371c:	f89c 1040 	ldrb.w	r1, [ip, #64]	@ 0x40
            pOutAddr2 += JPEG_BYTES_PER_PIXEL * 2;
90013720:	3604      	adds	r6, #4
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013722:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
          for(j=0; j < 8; j+=2)
90013726:	4575      	cmp	r5, lr
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013728:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
9001372c:	f857 2021 	ldr.w	r2, [r7, r1, lsl #2]
            ycomp = (int32_t)(*(pLum +j));
90013730:	f814 ac02 	ldrb.w	sl, [r4, #-2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013734:	4440      	add	r0, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013736:	4413      	add	r3, r2
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013738:	4a4c      	ldr	r2, [pc, #304]	@ (9001386c <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x21c>)
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9001373a:	eb08 4323 	add.w	r3, r8, r3, asr #16
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
9001373e:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013742:	eb00 020a 	add.w	r2, r0, sl
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013746:	4441      	add	r1, r8
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013748:	eb03 0b0a 	add.w	fp, r3, sl
9001374c:	f892 2100 	ldrb.w	r2, [r2, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013750:	448a      	add	sl, r1
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013752:	f89b b100 	ldrb.w	fp, [fp, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013756:	f89a a100 	ldrb.w	sl, [sl, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9001375a:	ea4f 0b9b 	mov.w	fp, fp, lsr #2
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001375e:	ea4f 0ada 	mov.w	sl, sl, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013762:	ea4f 1b4b 	mov.w	fp, fp, lsl #5
90013766:	ea4b 2bca 	orr.w	fp, fp, sl, lsl #11
9001376a:	ea4b 0bd2 	orr.w	fp, fp, r2, lsr #3
            *(__IO uint16_t *)pOutAddr = 
9001376e:	f825 bc04 	strh.w	fp, [r5, #-4]
            ycomp = (int32_t)(*(pLum +j +1));
90013772:	f814 ac01 	ldrb.w	sl, [r4, #-1]
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013776:	eb03 020a 	add.w	r2, r3, sl
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001377a:	eb01 0b0a 	add.w	fp, r1, sl
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
9001377e:	4482      	add	sl, r0
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013780:	f892 2100 	ldrb.w	r2, [r2, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013784:	f89b b100 	ldrb.w	fp, [fp, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013788:	ea4f 0292 	mov.w	r2, r2, lsr #2
9001378c:	f89a a100 	ldrb.w	sl, [sl, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013790:	ea4f 0bdb 	mov.w	fp, fp, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013794:	ea4f 1242 	mov.w	r2, r2, lsl #5
90013798:	ea42 22cb 	orr.w	r2, r2, fp, lsl #11
9001379c:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
            *((__IO uint16_t *)(pOutAddr + 2)) = 
900137a0:	f825 2c02 	strh.w	r2, [r5, #-2]
            ycomp = (int32_t)(*(pLum +j +8));
900137a4:	f894 a006 	ldrb.w	sl, [r4, #6]
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900137a8:	eb03 020a 	add.w	r2, r3, sl
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900137ac:	eb01 0b0a 	add.w	fp, r1, sl
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900137b0:	4482      	add	sl, r0
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900137b2:	f892 2100 	ldrb.w	r2, [r2, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900137b6:	f89b b100 	ldrb.w	fp, [fp, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900137ba:	ea4f 0292 	mov.w	r2, r2, lsr #2
900137be:	f89a a100 	ldrb.w	sl, [sl, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900137c2:	ea4f 0bdb 	mov.w	fp, fp, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900137c6:	ea4f 1242 	mov.w	r2, r2, lsl #5
900137ca:	ea42 22cb 	orr.w	r2, r2, fp, lsl #11
900137ce:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
            *(__IO uint16_t *)pOutAddr2 = 
900137d2:	f826 2c04 	strh.w	r2, [r6, #-4]
            ycomp = (int32_t)(*(pLum +j +8 +1));
900137d6:	79e2      	ldrb	r2, [r4, #7]
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900137d8:	4413      	add	r3, r2
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900137da:	4411      	add	r1, r2
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);         
900137dc:	4402      	add	r2, r0
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900137de:	f893 3100 	ldrb.w	r3, [r3, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900137e2:	f891 1100 	ldrb.w	r1, [r1, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900137e6:	ea4f 0393 	mov.w	r3, r3, lsr #2
900137ea:	f892 2100 	ldrb.w	r2, [r2, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900137ee:	ea4f 01d1 	mov.w	r1, r1, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900137f2:	ea4f 1343 	mov.w	r3, r3, lsl #5
900137f6:	ea43 23c1 	orr.w	r3, r3, r1, lsl #11
900137fa:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
            *((__IO uint16_t *)(pOutAddr2 +2)) = 
900137fe:	f826 3c02 	strh.w	r3, [r6, #-2]
          for(j=0; j < 8; j+=2)
90013802:	d186      	bne.n	90013712 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0xc2>
        for(k= 0; k<2; k++)
90013804:	f105 0e10 	add.w	lr, r5, #16
90013808:	9a04      	ldr	r2, [sp, #16]
9001380a:	f8dd a00c 	ldr.w	sl, [sp, #12]
9001380e:	4596      	cmp	lr, r2
            pChrom++;
90013810:	f10a 0a04 	add.w	sl, sl, #4
        for(k= 0; k<2; k++)
90013814:	e9dd 3001 	ldrd	r3, r0, [sp, #4]
            pOutAddr2 += JPEG_BYTES_PER_PIXEL * 2;
90013818:	f100 0010 	add.w	r0, r0, #16
          pLum += 64;                      
9001381c:	f103 0340 	add.w	r3, r3, #64	@ 0x40
        for(k= 0; k<2; k++)
90013820:	f47f af6d 	bne.w	900136fe <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0xae>
    for(i= 0; i <  16; i+=2)
90013824:	9909      	ldr	r1, [sp, #36]	@ 0x24
90013826:	e9dd 4207 	ldrd	r4, r2, [sp, #28]
9001382a:	3202      	adds	r2, #2
9001382c:	2a10      	cmp	r2, #16
9001382e:	f43f af36 	beq.w	9001369e <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x4e>
      if(i == 8)
90013832:	2a08      	cmp	r2, #8
90013834:	d008      	beq.n	90013848 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x1f8>
        pLum = pLum - 128 + 16;
90013836:	9b06      	ldr	r3, [sp, #24]
90013838:	3310      	adds	r3, #16
9001383a:	9306      	str	r3, [sp, #24]
            pChrom++;
9001383c:	9b05      	ldr	r3, [sp, #20]
9001383e:	3308      	adds	r3, #8
90013840:	9305      	str	r3, [sp, #20]
        refline += 2*JPEG_ConvertorParams.ScaledWidth;          
90013842:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90013844:	441c      	add	r4, r3
90013846:	e746      	b.n	900136d6 <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x86>
        pLum = pInBuffer + 128;
90013848:	f101 0380 	add.w	r3, r1, #128	@ 0x80
9001384c:	9306      	str	r3, [sp, #24]
9001384e:	e7f5      	b.n	9001383c <JPEG_MCU_YCbCr420_ARGB_ConvertBlocks+0x1ec>
90013850:	9b11      	ldr	r3, [sp, #68]	@ 0x44
  }
  return numberMCU;
}
90013852:	4618      	mov	r0, r3
90013854:	b013      	add	sp, #76	@ 0x4c
90013856:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001385a:	bf00      	nop
9001385c:	aaaaaaab 	.word	0xaaaaaaab
90013860:	24027e50 	.word	0x24027e50
90013864:	24027250 	.word	0x24027250
90013868:	24027650 	.word	0x24027650
9001386c:	24027a50 	.word	0x24027a50
90013870:	24026e50 	.word	0x24026e50
90013874:	9002f8dc 	.word	0x9002f8dc

90013878 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_YCbCr422_ARGB_ConvertBlocks(uint8_t *pInBuffer, 
                                      uint8_t *pOutBuffer,
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{  
90013878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  
  numberMCU = DataCount / YCBCR_422_BLOCK_SIZE;
  currentMCU = BlockIndex;
  

  while(currentMCU < (numberMCU + BlockIndex))
9001387c:	eb02 2613 	add.w	r6, r2, r3, lsr #8
{  
90013880:	b08f      	sub	sp, #60	@ 0x3c
  numberMCU = DataCount / YCBCR_422_BLOCK_SIZE;
90013882:	0a1c      	lsrs	r4, r3, #8
  while(currentMCU < (numberMCU + BlockIndex))
90013884:	42b2      	cmp	r2, r6
90013886:	f080 8156 	bcs.w	90013b36 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2be>
  {
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*8;
9001388a:	4bad      	ldr	r3, [pc, #692]	@ (90013b40 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2c8>)
9001388c:	468e      	mov	lr, r1
9001388e:	4dad      	ldr	r5, [pc, #692]	@ (90013b44 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2cc>)
    
    pLum = pInBuffer;
    
    for(i= 0; i <  8; i++)
    {
       if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013890:	f8d3 c010 	ldr.w	ip, [r3, #16]
90013894:	f8df a2b0 	ldr.w	sl, [pc, #688]	@ 90013b48 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2d0>
90013898:	f8df 92b0 	ldr.w	r9, [pc, #688]	@ 90013b4c <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2d4>
9001389c:	f8df b2b0 	ldr.w	fp, [pc, #688]	@ 90013b50 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2d8>
900138a0:	f8df 82b0 	ldr.w	r8, [pc, #688]	@ 90013b54 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2dc>
900138a4:	f8cd c01c 	str.w	ip, [sp, #28]
900138a8:	f8cd e020 	str.w	lr, [sp, #32]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
900138ac:	e9d3 7109 	ldrd	r7, r1, [r3, #36]	@ 0x24
900138b0:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
900138b4:	9106      	str	r1, [sp, #24]
900138b6:	970b      	str	r7, [sp, #44]	@ 0x2c
900138b8:	e007      	b.n	900138ca <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x52>
        
        refline += JPEG_ConvertorParams.ScaledWidth;          
      }
    }   
    
    pInBuffer +=  YCBCR_422_BLOCK_SIZE;
900138ba:	e9dd 0209 	ldrd	r0, r2, [sp, #36]	@ 0x24
  while(currentMCU < (numberMCU + BlockIndex))
900138be:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    pInBuffer +=  YCBCR_422_BLOCK_SIZE;
900138c0:	f500 7080 	add.w	r0, r0, #256	@ 0x100
  while(currentMCU < (numberMCU + BlockIndex))
900138c4:	429a      	cmp	r2, r3
900138c6:	f000 8135 	beq.w	90013b34 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x2bc>
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*8;
900138ca:	0113      	lsls	r3, r2, #4
900138cc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
    pChrom = pInBuffer + 128; /* pChroma = pInBuffer + 2*64 */
900138ce:	f04f 0e08 	mov.w	lr, #8
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*8;
900138d2:	3201      	adds	r2, #1
    pChrom = pInBuffer + 128; /* pChroma = pInBuffer + 2*64 */
900138d4:	f100 0680 	add.w	r6, r0, #128	@ 0x80
    xRef = ((currentMCU *16) / JPEG_ConvertorParams.WidthExtend)*8;
900138d8:	fbb3 f1f4 	udiv	r1, r3, r4
    yRef = ((currentMCU *16) % JPEG_ConvertorParams.WidthExtend);
900138dc:	fb04 3311 	mls	r3, r4, r1, r3
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
900138e0:	9c06      	ldr	r4, [sp, #24]
900138e2:	005b      	lsls	r3, r3, #1
900138e4:	fb04 f101 	mul.w	r1, r4, r1
900138e8:	eb03 0cc1 	add.w	ip, r3, r1, lsl #3
    pChrom = pInBuffer + 128; /* pChroma = pInBuffer + 2*64 */
900138ec:	4673      	mov	r3, lr
900138ee:	4686      	mov	lr, r0
900138f0:	461f      	mov	r7, r3
900138f2:	e9cd 0209 	strd	r0, r2, [sp, #36]	@ 0x24
       if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
900138f6:	9b07      	ldr	r3, [sp, #28]
900138f8:	4563      	cmp	r3, ip
900138fa:	d9de      	bls.n	900138ba <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x42>
        pOutAddr = pOutBuffer + refline;
900138fc:	9b08      	ldr	r3, [sp, #32]
900138fe:	f10e 0140 	add.w	r1, lr, #64	@ 0x40
90013902:	1d32      	adds	r2, r6, #4
90013904:	9705      	str	r7, [sp, #20]
90013906:	4463      	add	r3, ip
        for(k= 0; k<2; k++)
90013908:	f103 0020 	add.w	r0, r3, #32
9001390c:	e9cd ec03 	strd	lr, ip, [sp, #12]
90013910:	e9cd 0601 	strd	r0, r6, [sp, #4]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013914:	f892 703c 	ldrb.w	r7, [r2, #60]	@ 0x3c
            pOutAddr += JPEG_BYTES_PER_PIXEL * 2;
90013918:	3310      	adds	r3, #16
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
9001391a:	f812 0c04 	ldrb.w	r0, [r2, #-4]
        for(k= 0; k<2; k++)
9001391e:	3140      	adds	r1, #64	@ 0x40
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013920:	f85a 6027 	ldr.w	r6, [sl, r7, lsl #2]
        for(k= 0; k<2; k++)
90013924:	3204      	adds	r2, #4
            ycomp = (int32_t)(*(pLum +j));
90013926:	f811 cc80 	ldrb.w	ip, [r1, #-128]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
9001392a:	f855 4020 	ldr.w	r4, [r5, r0, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001392e:	4446      	add	r6, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013930:	f85b 0020 	ldr.w	r0, [fp, r0, lsl #2]
90013934:	f859 7027 	ldr.w	r7, [r9, r7, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013938:	4444      	add	r4, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
9001393a:	4407      	add	r7, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001393c:	eb06 000c 	add.w	r0, r6, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013940:	eb08 4727 	add.w	r7, r8, r7, asr #16
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013944:	f890 e100 	ldrb.w	lr, [r0, #256]	@ 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013948:	eb04 000c 	add.w	r0, r4, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9001394c:	44bc      	add	ip, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
9001394e:	ea4f 0ede 	mov.w	lr, lr, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013952:	f890 0100 	ldrb.w	r0, [r0, #256]	@ 0x100
90013956:	f89c c100 	ldrb.w	ip, [ip, #256]	@ 0x100
9001395a:	08c0      	lsrs	r0, r0, #3
9001395c:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
90013960:	ea40 20ce 	orr.w	r0, r0, lr, lsl #11
90013964:	ea40 104c 	orr.w	r0, r0, ip, lsl #5
            *(__IO uint16_t *)pOutAddr = 
90013968:	f823 0c10 	strh.w	r0, [r3, #-16]
            ycomp = (int32_t)(*(pLum +j +1));
9001396c:	f811 0c7f 	ldrb.w	r0, [r1, #-127]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013970:	4406      	add	r6, r0
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);         
90013972:	4404      	add	r4, r0
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013974:	4438      	add	r0, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013976:	f896 6100 	ldrb.w	r6, [r6, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
9001397a:	f894 4100 	ldrb.w	r4, [r4, #256]	@ 0x100
9001397e:	f890 0100 	ldrb.w	r0, [r0, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013982:	08f6      	lsrs	r6, r6, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013984:	08e4      	lsrs	r4, r4, #3
90013986:	0880      	lsrs	r0, r0, #2
90013988:	ea44 24c6 	orr.w	r4, r4, r6, lsl #11
9001398c:	ea44 1440 	orr.w	r4, r4, r0, lsl #5
            *((__IO uint16_t *)(pOutAddr + 2)) = 
90013990:	f823 4c0e 	strh.w	r4, [r3, #-14]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013994:	f892 7039 	ldrb.w	r7, [r2, #57]	@ 0x39
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013998:	f812 0c07 	ldrb.w	r0, [r2, #-7]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
9001399c:	f85a 6027 	ldr.w	r6, [sl, r7, lsl #2]
            ycomp = (int32_t)(*(pLum +j));
900139a0:	f811 cc7e 	ldrb.w	ip, [r1, #-126]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
900139a4:	f855 4020 	ldr.w	r4, [r5, r0, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900139a8:	4446      	add	r6, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
900139aa:	f85b 0020 	ldr.w	r0, [fp, r0, lsl #2]
900139ae:	f859 7027 	ldr.w	r7, [r9, r7, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900139b2:	4444      	add	r4, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
900139b4:	4407      	add	r7, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900139b6:	eb06 000c 	add.w	r0, r6, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900139ba:	eb08 4727 	add.w	r7, r8, r7, asr #16
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900139be:	f890 e100 	ldrb.w	lr, [r0, #256]	@ 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
900139c2:	eb04 000c 	add.w	r0, r4, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900139c6:	44bc      	add	ip, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900139c8:	ea4f 0ede 	mov.w	lr, lr, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900139cc:	f890 0100 	ldrb.w	r0, [r0, #256]	@ 0x100
900139d0:	f89c c100 	ldrb.w	ip, [ip, #256]	@ 0x100
900139d4:	08c0      	lsrs	r0, r0, #3
900139d6:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
900139da:	ea40 20ce 	orr.w	r0, r0, lr, lsl #11
900139de:	ea40 104c 	orr.w	r0, r0, ip, lsl #5
            *(__IO uint16_t *)pOutAddr = 
900139e2:	f823 0c0c 	strh.w	r0, [r3, #-12]
            ycomp = (int32_t)(*(pLum +j +1));
900139e6:	f811 0c7d 	ldrb.w	r0, [r1, #-125]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900139ea:	4406      	add	r6, r0
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);         
900139ec:	4404      	add	r4, r0
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900139ee:	4438      	add	r0, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900139f0:	f896 6100 	ldrb.w	r6, [r6, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900139f4:	f894 4100 	ldrb.w	r4, [r4, #256]	@ 0x100
900139f8:	f890 0100 	ldrb.w	r0, [r0, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
900139fc:	08f6      	lsrs	r6, r6, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
900139fe:	08e4      	lsrs	r4, r4, #3
90013a00:	0880      	lsrs	r0, r0, #2
90013a02:	ea44 24c6 	orr.w	r4, r4, r6, lsl #11
90013a06:	ea44 1440 	orr.w	r4, r4, r0, lsl #5
            *((__IO uint16_t *)(pOutAddr + 2)) = 
90013a0a:	f823 4c0a 	strh.w	r4, [r3, #-10]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013a0e:	f812 0c06 	ldrb.w	r0, [r2, #-6]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013a12:	f892 703a 	ldrb.w	r7, [r2, #58]	@ 0x3a
            ycomp = (int32_t)(*(pLum +j));
90013a16:	f811 cc7c 	ldrb.w	ip, [r1, #-124]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013a1a:	f85a 6027 	ldr.w	r6, [sl, r7, lsl #2]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013a1e:	f855 4020 	ldr.w	r4, [r5, r0, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013a22:	f859 7027 	ldr.w	r7, [r9, r7, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013a26:	4446      	add	r6, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013a28:	f85b 0020 	ldr.w	r0, [fp, r0, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013a2c:	4444      	add	r4, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013a2e:	4407      	add	r7, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013a30:	eb06 000c 	add.w	r0, r6, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013a34:	eb08 4727 	add.w	r7, r8, r7, asr #16
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013a38:	f890 e100 	ldrb.w	lr, [r0, #256]	@ 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013a3c:	eb04 000c 	add.w	r0, r4, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013a40:	44bc      	add	ip, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013a42:	ea4f 0ede 	mov.w	lr, lr, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013a46:	f890 0100 	ldrb.w	r0, [r0, #256]	@ 0x100
90013a4a:	f89c c100 	ldrb.w	ip, [ip, #256]	@ 0x100
90013a4e:	08c0      	lsrs	r0, r0, #3
90013a50:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
90013a54:	ea40 20ce 	orr.w	r0, r0, lr, lsl #11
90013a58:	ea40 104c 	orr.w	r0, r0, ip, lsl #5
            *(__IO uint16_t *)pOutAddr = 
90013a5c:	f823 0c08 	strh.w	r0, [r3, #-8]
            ycomp = (int32_t)(*(pLum +j +1));
90013a60:	f811 0c7b 	ldrb.w	r0, [r1, #-123]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013a64:	4406      	add	r6, r0
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);         
90013a66:	4404      	add	r4, r0
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013a68:	4438      	add	r0, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013a6a:	f896 6100 	ldrb.w	r6, [r6, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013a6e:	f894 4100 	ldrb.w	r4, [r4, #256]	@ 0x100
90013a72:	f890 0100 	ldrb.w	r0, [r0, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013a76:	08f6      	lsrs	r6, r6, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013a78:	08e4      	lsrs	r4, r4, #3
90013a7a:	0880      	lsrs	r0, r0, #2
90013a7c:	ea44 24c6 	orr.w	r4, r4, r6, lsl #11
90013a80:	ea44 1440 	orr.w	r4, r4, r0, lsl #5
            *((__IO uint16_t *)(pOutAddr + 2)) = 
90013a84:	f823 4c06 	strh.w	r4, [r3, #-6]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013a88:	f892 703b 	ldrb.w	r7, [r2, #59]	@ 0x3b
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013a8c:	f812 0c05 	ldrb.w	r0, [r2, #-5]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013a90:	f85a 6027 	ldr.w	r6, [sl, r7, lsl #2]
            ycomp = (int32_t)(*(pLum +j));
90013a94:	f811 cc7a 	ldrb.w	ip, [r1, #-122]
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013a98:	f855 4020 	ldr.w	r4, [r5, r0, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013a9c:	4446      	add	r6, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013a9e:	f85b 0020 	ldr.w	r0, [fp, r0, lsl #2]
90013aa2:	f859 7027 	ldr.w	r7, [r9, r7, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013aa6:	4444      	add	r4, r8
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013aa8:	4407      	add	r7, r0
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013aaa:	eb06 000c 	add.w	r0, r6, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013aae:	eb08 4727 	add.w	r7, r8, r7, asr #16
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013ab2:	f890 e100 	ldrb.w	lr, [r0, #256]	@ 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);
90013ab6:	eb04 000c 	add.w	r0, r4, ip
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013aba:	44bc      	add	ip, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013abc:	ea4f 0ede 	mov.w	lr, lr, lsr #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013ac0:	f890 0100 	ldrb.w	r0, [r0, #256]	@ 0x100
90013ac4:	f89c c100 	ldrb.w	ip, [ip, #256]	@ 0x100
90013ac8:	08c0      	lsrs	r0, r0, #3
90013aca:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
90013ace:	ea40 20ce 	orr.w	r0, r0, lr, lsl #11
90013ad2:	ea40 104c 	orr.w	r0, r0, ip, lsl #5
            *(__IO uint16_t *)pOutAddr = 
90013ad6:	f823 0c04 	strh.w	r0, [r3, #-4]
            ycomp = (int32_t)(*(pLum +j +1));
90013ada:	f811 0c79 	ldrb.w	r0, [r1, #-121]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013ade:	4406      	add	r6, r0
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);         
90013ae0:	4404      	add	r4, r0
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013ae2:	4438      	add	r0, r7
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013ae4:	f896 6100 	ldrb.w	r6, [r6, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013ae8:	f894 4100 	ldrb.w	r4, [r4, #256]	@ 0x100
90013aec:	f890 0100 	ldrb.w	r0, [r0, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013af0:	08f6      	lsrs	r6, r6, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013af2:	08e4      	lsrs	r4, r4, #3
90013af4:	0880      	lsrs	r0, r0, #2
90013af6:	ea44 24c6 	orr.w	r4, r4, r6, lsl #11
90013afa:	ea44 1440 	orr.w	r4, r4, r0, lsl #5
            *((__IO uint16_t *)(pOutAddr + 2)) = 
90013afe:	f823 4c02 	strh.w	r4, [r3, #-2]
        for(k= 0; k<2; k++)
90013b02:	9801      	ldr	r0, [sp, #4]
90013b04:	4283      	cmp	r3, r0
90013b06:	f47f af05 	bne.w	90013914 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x9c>
        refline += JPEG_ConvertorParams.ScaledWidth;          
90013b0a:	9b06      	ldr	r3, [sp, #24]
            pChrom++;
90013b0c:	e9dd c704 	ldrd	ip, r7, [sp, #16]
90013b10:	e9dd 6e02 	ldrd	r6, lr, [sp, #8]
    for(i= 0; i <  8; i++)
90013b14:	3f01      	subs	r7, #1
        refline += JPEG_ConvertorParams.ScaledWidth;          
90013b16:	449c      	add	ip, r3
            pChrom++;
90013b18:	f106 0608 	add.w	r6, r6, #8
        pLum = pLum - 128 + 8;
90013b1c:	f10e 0e08 	add.w	lr, lr, #8
    for(i= 0; i <  8; i++)
90013b20:	f47f aee9 	bne.w	900138f6 <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x7e>
  while(currentMCU < (numberMCU + BlockIndex))
90013b24:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
    pInBuffer +=  YCBCR_422_BLOCK_SIZE;
90013b26:	e9dd 0209 	ldrd	r0, r2, [sp, #36]	@ 0x24
  while(currentMCU < (numberMCU + BlockIndex))
90013b2a:	429a      	cmp	r2, r3
    pInBuffer +=  YCBCR_422_BLOCK_SIZE;
90013b2c:	f500 7080 	add.w	r0, r0, #256	@ 0x100
  while(currentMCU < (numberMCU + BlockIndex))
90013b30:	f47f aecb 	bne.w	900138ca <JPEG_MCU_YCbCr422_ARGB_ConvertBlocks+0x52>
90013b34:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
  }
  return numberMCU;
}
90013b36:	4620      	mov	r0, r4
90013b38:	b00f      	add	sp, #60	@ 0x3c
90013b3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013b3e:	bf00      	nop
90013b40:	24027e50 	.word	0x24027e50
90013b44:	24027650 	.word	0x24027650
90013b48:	24027a50 	.word	0x24027a50
90013b4c:	24027250 	.word	0x24027250
90013b50:	24026e50 	.word	0x24026e50
90013b54:	9002f8dc 	.word	0x9002f8dc

90013b58 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_YCbCr444_ARGB_ConvertBlocks(uint8_t *pInBuffer, 
                                      uint8_t *pOutBuffer,
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{  
90013b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  int32_t c_red, c_blue, c_green;
  
  uint8_t *pOutAddr;
  uint8_t *pChrom, *pLum;
  
  numberMCU = DataCount / YCBCR_444_BLOCK_SIZE;
90013b5c:	4cb1      	ldr	r4, [pc, #708]	@ (90013e24 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2cc>)
{  
90013b5e:	4691      	mov	r9, r2
90013b60:	b08b      	sub	sp, #44	@ 0x2c
  numberMCU = DataCount / YCBCR_444_BLOCK_SIZE;
90013b62:	fba4 4203 	umull	r4, r2, r4, r3
{  
90013b66:	9102      	str	r1, [sp, #8]
  currentMCU = BlockIndex;
  

  while(currentMCU < (numberMCU + BlockIndex))
90013b68:	eb09 1bd2 	add.w	fp, r9, r2, lsr #7
  numberMCU = DataCount / YCBCR_444_BLOCK_SIZE;
90013b6c:	09d3      	lsrs	r3, r2, #7
  while(currentMCU < (numberMCU + BlockIndex))
90013b6e:	45d9      	cmp	r9, fp
90013b70:	f080 8153 	bcs.w	90013e1a <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2c2>
  {

    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90013b74:	4aac      	ldr	r2, [pc, #688]	@ (90013e28 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2d0>)
90013b76:	4682      	mov	sl, r0
#elif (JPEG_RGB_FORMAT == JPEG_RGB565)  
            
            ycomp = (int32_t)(*(pLum +j));
          
            *(__IO uint16_t *)pOutAddr = 
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013b78:	4cac      	ldr	r4, [pc, #688]	@ (90013e2c <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2d4>)
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013b7a:	f8df e2b8 	ldr.w	lr, [pc, #696]	@ 90013e34 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2dc>
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013b7e:	f8df c2b8 	ldr.w	ip, [pc, #696]	@ 90013e38 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2e0>
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013b82:	48ab      	ldr	r0, [pc, #684]	@ (90013e30 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2d8>)
90013b84:	f8df 82b4 	ldr.w	r8, [pc, #692]	@ 90013e3c <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2e4>
90013b88:	9309      	str	r3, [sp, #36]	@ 0x24
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013b8a:	e9d2 6109 	ldrd	r6, r1, [r2, #36]	@ 0x24
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013b8e:	6912      	ldr	r2, [r2, #16]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013b90:	9103      	str	r1, [sp, #12]
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013b92:	9206      	str	r2, [sp, #24]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013b94:	e9cd 6b07 	strd	r6, fp, [sp, #28]
90013b98:	e9cd a904 	strd	sl, r9, [sp, #16]
90013b9c:	e007      	b.n	90013bae <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x56>

        refline += JPEG_ConvertorParams.ScaledWidth;          
      }
    }   
    
    pInBuffer +=  YCBCR_444_BLOCK_SIZE;
90013b9e:	9b04      	ldr	r3, [sp, #16]
  while(currentMCU < (numberMCU + BlockIndex))
90013ba0:	9a08      	ldr	r2, [sp, #32]
    pInBuffer +=  YCBCR_444_BLOCK_SIZE;
90013ba2:	33c0      	adds	r3, #192	@ 0xc0
90013ba4:	9304      	str	r3, [sp, #16]
  while(currentMCU < (numberMCU + BlockIndex))
90013ba6:	9b05      	ldr	r3, [sp, #20]
90013ba8:	4293      	cmp	r3, r2
90013baa:	f000 8135 	beq.w	90013e18 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x2c0>
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90013bae:	9e05      	ldr	r6, [sp, #20]
90013bb0:	9f07      	ldr	r7, [sp, #28]
90013bb2:	00f1      	lsls	r1, r6, #3
90013bb4:	3601      	adds	r6, #1
    pChrom = pInBuffer + 64; /* pChroma = pInBuffer + 4*64 */
90013bb6:	9a04      	ldr	r2, [sp, #16]
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90013bb8:	9605      	str	r6, [sp, #20]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013bba:	9e03      	ldr	r6, [sp, #12]
    pChrom = pInBuffer + 64; /* pChroma = pInBuffer + 4*64 */
90013bbc:	f102 0340 	add.w	r3, r2, #64	@ 0x40
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90013bc0:	fbb1 f5f7 	udiv	r5, r1, r7
    yRef = ((currentMCU *8) % JPEG_ConvertorParams.WidthExtend);
90013bc4:	fb07 1115 	mls	r1, r7, r5, r1
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013bc8:	fb06 f505 	mul.w	r5, r6, r5
90013bcc:	0049      	lsls	r1, r1, #1
90013bce:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
    pChrom = pInBuffer + 64; /* pChroma = pInBuffer + 4*64 */
90013bd2:	2508      	movs	r5, #8
90013bd4:	468a      	mov	sl, r1
90013bd6:	9501      	str	r5, [sp, #4]
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013bd8:	9906      	ldr	r1, [sp, #24]
90013bda:	4551      	cmp	r1, sl
90013bdc:	d9df      	bls.n	90013b9e <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x46>
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013bde:	f893 7040 	ldrb.w	r7, [r3, #64]	@ 0x40
          pLum += 8;
90013be2:	3208      	adds	r2, #8
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013be4:	7819      	ldrb	r1, [r3, #0]
            pChrom++;
90013be6:	3308      	adds	r3, #8
            ycomp = (int32_t)(*(pLum +j));
90013be8:	f812 5c08 	ldrb.w	r5, [r2, #-8]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013bec:	f850 9027 	ldr.w	r9, [r0, r7, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013bf0:	f85e 6027 	ldr.w	r6, [lr, r7, lsl #2]
90013bf4:	4425      	add	r5, r4
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90013bf6:	f85c 7021 	ldr.w	r7, [ip, r1, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013bfa:	f858 1021 	ldr.w	r1, [r8, r1, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013bfe:	442e      	add	r6, r5
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90013c00:	442f      	add	r7, r5
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013c02:	4449      	add	r1, r9
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013c04:	f896 6100 	ldrb.w	r6, [r6, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013c08:	eb05 4121 	add.w	r1, r5, r1, asr #16
90013c0c:	f897 5100 	ldrb.w	r5, [r7, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013c10:	08f6      	lsrs	r6, r6, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013c12:	f891 1100 	ldrb.w	r1, [r1, #256]	@ 0x100
90013c16:	08ed      	lsrs	r5, r5, #3
90013c18:	0889      	lsrs	r1, r1, #2
90013c1a:	ea45 25c6 	orr.w	r5, r5, r6, lsl #11
90013c1e:	ea45 1541 	orr.w	r5, r5, r1, lsl #5
            *(__IO uint16_t *)pOutAddr = 
90013c22:	9902      	ldr	r1, [sp, #8]
90013c24:	f821 500a 	strh.w	r5, [r1, sl]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013c28:	f893 7039 	ldrb.w	r7, [r3, #57]	@ 0x39
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013c2c:	f813 1c07 	ldrb.w	r1, [r3, #-7]
            ycomp = (int32_t)(*(pLum +j));
90013c30:	f812 5c07 	ldrb.w	r5, [r2, #-7]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013c34:	f850 9027 	ldr.w	r9, [r0, r7, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013c38:	4425      	add	r5, r4
90013c3a:	f85e 6027 	ldr.w	r6, [lr, r7, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90013c3e:	f85c 7021 	ldr.w	r7, [ip, r1, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013c42:	f858 1021 	ldr.w	r1, [r8, r1, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013c46:	442e      	add	r6, r5
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90013c48:	442f      	add	r7, r5
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013c4a:	4449      	add	r1, r9
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013c4c:	f896 6100 	ldrb.w	r6, [r6, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013c50:	eb05 4121 	add.w	r1, r5, r1, asr #16
90013c54:	f897 5100 	ldrb.w	r5, [r7, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013c58:	08f6      	lsrs	r6, r6, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013c5a:	f891 1100 	ldrb.w	r1, [r1, #256]	@ 0x100
90013c5e:	08ed      	lsrs	r5, r5, #3
90013c60:	0889      	lsrs	r1, r1, #2
90013c62:	ea45 25c6 	orr.w	r5, r5, r6, lsl #11
90013c66:	ea45 1541 	orr.w	r5, r5, r1, lsl #5
        pOutAddr = pOutBuffer+ refline;
90013c6a:	9902      	ldr	r1, [sp, #8]
90013c6c:	4451      	add	r1, sl
            *(__IO uint16_t *)pOutAddr = 
90013c6e:	804d      	strh	r5, [r1, #2]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013c70:	f893 903a 	ldrb.w	r9, [r3, #58]	@ 0x3a
            ycomp = (int32_t)(*(pLum +j));
90013c74:	f812 6c06 	ldrb.w	r6, [r2, #-6]
        refline += JPEG_ConvertorParams.ScaledWidth;          
90013c78:	9d03      	ldr	r5, [sp, #12]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013c7a:	4426      	add	r6, r4
90013c7c:	f85e 7029 	ldr.w	r7, [lr, r9, lsl #2]
        refline += JPEG_ConvertorParams.ScaledWidth;          
90013c80:	44aa      	add	sl, r5
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013c82:	f813 5c06 	ldrb.w	r5, [r3, #-6]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013c86:	4437      	add	r7, r6
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013c88:	f850 b029 	ldr.w	fp, [r0, r9, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90013c8c:	f85c 9025 	ldr.w	r9, [ip, r5, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013c90:	f897 7100 	ldrb.w	r7, [r7, #256]	@ 0x100
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013c94:	f858 5025 	ldr.w	r5, [r8, r5, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90013c98:	44b1      	add	r9, r6
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013c9a:	08ff      	lsrs	r7, r7, #3
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013c9c:	445d      	add	r5, fp
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013c9e:	eb06 4525 	add.w	r5, r6, r5, asr #16
90013ca2:	f899 6100 	ldrb.w	r6, [r9, #256]	@ 0x100
90013ca6:	f895 5100 	ldrb.w	r5, [r5, #256]	@ 0x100
90013caa:	08f6      	lsrs	r6, r6, #3
90013cac:	08ad      	lsrs	r5, r5, #2
90013cae:	ea46 26c7 	orr.w	r6, r6, r7, lsl #11
90013cb2:	ea46 1645 	orr.w	r6, r6, r5, lsl #5
            *(__IO uint16_t *)pOutAddr = 
90013cb6:	808e      	strh	r6, [r1, #4]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013cb8:	f893 903b 	ldrb.w	r9, [r3, #59]	@ 0x3b
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013cbc:	f813 5c05 	ldrb.w	r5, [r3, #-5]
            ycomp = (int32_t)(*(pLum +j));
90013cc0:	f812 6c05 	ldrb.w	r6, [r2, #-5]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013cc4:	f850 b029 	ldr.w	fp, [r0, r9, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013cc8:	f85e 7029 	ldr.w	r7, [lr, r9, lsl #2]
90013ccc:	4426      	add	r6, r4
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90013cce:	f85c 9025 	ldr.w	r9, [ip, r5, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013cd2:	f858 5025 	ldr.w	r5, [r8, r5, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013cd6:	4437      	add	r7, r6
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90013cd8:	44b1      	add	r9, r6
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013cda:	445d      	add	r5, fp
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013cdc:	f897 7100 	ldrb.w	r7, [r7, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013ce0:	eb06 4525 	add.w	r5, r6, r5, asr #16
90013ce4:	f899 6100 	ldrb.w	r6, [r9, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013ce8:	08ff      	lsrs	r7, r7, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013cea:	f895 5100 	ldrb.w	r5, [r5, #256]	@ 0x100
90013cee:	08f6      	lsrs	r6, r6, #3
90013cf0:	08ad      	lsrs	r5, r5, #2
90013cf2:	ea46 26c7 	orr.w	r6, r6, r7, lsl #11
90013cf6:	ea46 1645 	orr.w	r6, r6, r5, lsl #5
            *(__IO uint16_t *)pOutAddr = 
90013cfa:	80ce      	strh	r6, [r1, #6]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013cfc:	f893 903c 	ldrb.w	r9, [r3, #60]	@ 0x3c
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013d00:	f813 5c04 	ldrb.w	r5, [r3, #-4]
            ycomp = (int32_t)(*(pLum +j));
90013d04:	f812 6c04 	ldrb.w	r6, [r2, #-4]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013d08:	f850 b029 	ldr.w	fp, [r0, r9, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d0c:	4426      	add	r6, r4
90013d0e:	f85e 7029 	ldr.w	r7, [lr, r9, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90013d12:	f85c 9025 	ldr.w	r9, [ip, r5, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013d16:	f858 5025 	ldr.w	r5, [r8, r5, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d1a:	4437      	add	r7, r6
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90013d1c:	44b1      	add	r9, r6
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013d1e:	445d      	add	r5, fp
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d20:	f897 7100 	ldrb.w	r7, [r7, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013d24:	eb06 4525 	add.w	r5, r6, r5, asr #16
90013d28:	f899 6100 	ldrb.w	r6, [r9, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d2c:	08ff      	lsrs	r7, r7, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013d2e:	f895 5100 	ldrb.w	r5, [r5, #256]	@ 0x100
90013d32:	08f6      	lsrs	r6, r6, #3
90013d34:	08ad      	lsrs	r5, r5, #2
90013d36:	ea46 26c7 	orr.w	r6, r6, r7, lsl #11
90013d3a:	ea46 1645 	orr.w	r6, r6, r5, lsl #5
            *(__IO uint16_t *)pOutAddr = 
90013d3e:	810e      	strh	r6, [r1, #8]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013d40:	f893 903d 	ldrb.w	r9, [r3, #61]	@ 0x3d
            ycomp = (int32_t)(*(pLum +j));
90013d44:	f812 6c03 	ldrb.w	r6, [r2, #-3]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d48:	f85e 7029 	ldr.w	r7, [lr, r9, lsl #2]
90013d4c:	4426      	add	r6, r4
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013d4e:	f813 5c03 	ldrb.w	r5, [r3, #-3]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013d52:	f850 b029 	ldr.w	fp, [r0, r9, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d56:	4437      	add	r7, r6
90013d58:	f897 7100 	ldrb.w	r7, [r7, #256]	@ 0x100
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90013d5c:	f85c 9025 	ldr.w	r9, [ip, r5, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013d60:	f858 5025 	ldr.w	r5, [r8, r5, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d64:	08ff      	lsrs	r7, r7, #3
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90013d66:	44b1      	add	r9, r6
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013d68:	445d      	add	r5, fp
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013d6a:	eb06 4525 	add.w	r5, r6, r5, asr #16
90013d6e:	f899 6100 	ldrb.w	r6, [r9, #256]	@ 0x100
90013d72:	f895 5100 	ldrb.w	r5, [r5, #256]	@ 0x100
90013d76:	08f6      	lsrs	r6, r6, #3
90013d78:	08ad      	lsrs	r5, r5, #2
90013d7a:	ea46 26c7 	orr.w	r6, r6, r7, lsl #11
90013d7e:	ea46 1645 	orr.w	r6, r6, r5, lsl #5
            *(__IO uint16_t *)pOutAddr = 
90013d82:	814e      	strh	r6, [r1, #10]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013d84:	f893 903e 	ldrb.w	r9, [r3, #62]	@ 0x3e
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013d88:	f813 5c02 	ldrb.w	r5, [r3, #-2]
            ycomp = (int32_t)(*(pLum +j));
90013d8c:	f812 6c02 	ldrb.w	r6, [r2, #-2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013d90:	f850 b029 	ldr.w	fp, [r0, r9, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013d94:	4426      	add	r6, r4
90013d96:	f85e 7029 	ldr.w	r7, [lr, r9, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90013d9a:	f85c 9025 	ldr.w	r9, [ip, r5, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013d9e:	f858 5025 	ldr.w	r5, [r8, r5, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013da2:	4437      	add	r7, r6
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90013da4:	44b1      	add	r9, r6
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013da6:	445d      	add	r5, fp
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013da8:	f897 7100 	ldrb.w	r7, [r7, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013dac:	eb06 4525 	add.w	r5, r6, r5, asr #16
90013db0:	f899 6100 	ldrb.w	r6, [r9, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013db4:	08ff      	lsrs	r7, r7, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013db6:	f895 5100 	ldrb.w	r5, [r5, #256]	@ 0x100
90013dba:	08f6      	lsrs	r6, r6, #3
90013dbc:	08ad      	lsrs	r5, r5, #2
90013dbe:	ea46 26c7 	orr.w	r6, r6, r7, lsl #11
90013dc2:	ea46 1645 	orr.w	r6, r6, r5, lsl #5
            *(__IO uint16_t *)pOutAddr = 
90013dc6:	818e      	strh	r6, [r1, #12]
            c_red = (int32_t)(*(CR_RED_LUT + crcomp));          
90013dc8:	f893 903f 	ldrb.w	r9, [r3, #63]	@ 0x3f
            c_blue = (int32_t)(*(CB_BLUE_LUT + cbcomp));
90013dcc:	f813 5c01 	ldrb.w	r5, [r3, #-1]
            ycomp = (int32_t)(*(pLum +j));
90013dd0:	f812 6c01 	ldrb.w	r6, [r2, #-1]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013dd4:	f85e 7029 	ldr.w	r7, [lr, r9, lsl #2]
90013dd8:	4426      	add	r6, r4
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013dda:	f850 b029 	ldr.w	fp, [r0, r9, lsl #2]
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90013dde:	f85c 9025 	ldr.w	r9, [ip, r5, lsl #2]
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013de2:	f858 5025 	ldr.w	r5, [r8, r5, lsl #2]
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013de6:	4437      	add	r7, r6
              ((CLAMP(ycomp + c_blue) >> 3) << JPEG_BLUE_OFFSET);      
90013de8:	44b1      	add	r9, r6
            c_green = ((int32_t)(*(CR_GREEN_LUT + crcomp)) + (int32_t)(*(CB_GREEN_LUT + cbcomp))) >> 16;      
90013dea:	445d      	add	r5, fp
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013dec:	f897 7100 	ldrb.w	r7, [r7, #256]	@ 0x100
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013df0:	eb06 4525 	add.w	r5, r6, r5, asr #16
90013df4:	f899 6100 	ldrb.w	r6, [r9, #256]	@ 0x100
              ((CLAMP(ycomp + c_red) >> 3) << JPEG_RED_OFFSET)     | \
90013df8:	08ff      	lsrs	r7, r7, #3
              ((CLAMP( ycomp + c_green) >> 2) << JPEG_GREEN_OFFSET) | \
90013dfa:	f895 5100 	ldrb.w	r5, [r5, #256]	@ 0x100
90013dfe:	08f6      	lsrs	r6, r6, #3
90013e00:	08ad      	lsrs	r5, r5, #2
90013e02:	ea46 26c7 	orr.w	r6, r6, r7, lsl #11
90013e06:	ea46 1645 	orr.w	r6, r6, r5, lsl #5
            *(__IO uint16_t *)pOutAddr = 
90013e0a:	81ce      	strh	r6, [r1, #14]
    for(i= 0; i <  8; i++)
90013e0c:	9901      	ldr	r1, [sp, #4]
90013e0e:	3901      	subs	r1, #1
90013e10:	9101      	str	r1, [sp, #4]
90013e12:	f43f aec4 	beq.w	90013b9e <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x46>
90013e16:	e6df      	b.n	90013bd8 <JPEG_MCU_YCbCr444_ARGB_ConvertBlocks+0x80>
90013e18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  }
  return numberMCU;
}
90013e1a:	4618      	mov	r0, r3
90013e1c:	b00b      	add	sp, #44	@ 0x2c
90013e1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013e22:	bf00      	nop
90013e24:	aaaaaaab 	.word	0xaaaaaaab
90013e28:	24027e50 	.word	0x24027e50
90013e2c:	9002f8dc 	.word	0x9002f8dc
90013e30:	24027250 	.word	0x24027250
90013e34:	24027a50 	.word	0x24027a50
90013e38:	24027650 	.word	0x24027650
90013e3c:	24026e50 	.word	0x24026e50

90013e40 <JPEG_MCU_Gray_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_Gray_ARGB_ConvertBlocks(uint8_t *pInBuffer, 
                                      uint8_t *pOutBuffer,
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{
90013e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  
  numberMCU = DataCount / GRAY_444_BLOCK_SIZE;
  currentMCU = BlockIndex;
  
  while(currentMCU < (numberMCU + BlockIndex))
90013e44:	eb02 1993 	add.w	r9, r2, r3, lsr #6
{
90013e48:	4606      	mov	r6, r0
90013e4a:	b083      	sub	sp, #12
  numberMCU = DataCount / GRAY_444_BLOCK_SIZE;
90013e4c:	0998      	lsrs	r0, r3, #6
  while(currentMCU < (numberMCU + BlockIndex))
90013e4e:	4591      	cmp	r9, r2
90013e50:	f240 809d 	bls.w	90013f8e <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x14e>
  {
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90013e54:	4b4f      	ldr	r3, [pc, #316]	@ (90013f94 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x154>)
90013e56:	460c      	mov	r4, r1
90013e58:	4615      	mov	r5, r2
    pLum = pInBuffer;
    
    for(i= 0; i <  8; i++)
    { 
      pOutAddr = pOutBuffer + refline;
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013e5a:	4686      	mov	lr, r0
90013e5c:	f8d3 8010 	ldr.w	r8, [r3, #16]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013e60:	e9d3 1709 	ldrd	r1, r7, [r3, #36]	@ 0x24
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013e64:	f8cd 8004 	str.w	r8, [sp, #4]
90013e68:	e004      	b.n	90013e74 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x34>
  while(currentMCU < (numberMCU + BlockIndex))
90013e6a:	45a9      	cmp	r9, r5

        refline += JPEG_ConvertorParams.ScaledWidth;        
      }
    }
    
    pInBuffer +=  GRAY_444_BLOCK_SIZE;    
90013e6c:	f106 0640 	add.w	r6, r6, #64	@ 0x40
  while(currentMCU < (numberMCU + BlockIndex))
90013e70:	f000 808c 	beq.w	90013f8c <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x14c>
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90013e74:	00ea      	lsls	r2, r5, #3
    currentMCU++;
90013e76:	4633      	mov	r3, r6
90013e78:	f04f 0a08 	mov.w	sl, #8
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90013e7c:	3501      	adds	r5, #1
90013e7e:	fbb2 f0f1 	udiv	r0, r2, r1
    yRef = ((currentMCU *8) % JPEG_ConvertorParams.WidthExtend);
90013e82:	fb01 2210 	mls	r2, r1, r0, r2
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013e86:	fb07 f000 	mul.w	r0, r7, r0
90013e8a:	0052      	lsls	r2, r2, #1
90013e8c:	eb02 02c0 	add.w	r2, r2, r0, lsl #3
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013e90:	9801      	ldr	r0, [sp, #4]
90013e92:	4290      	cmp	r0, r2
90013e94:	d9e9      	bls.n	90013e6a <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x2a>
          ySample =   (uint32_t)(*pLum);
90013e96:	f893 8000 	ldrb.w	r8, [r3]
      pOutAddr = pOutBuffer + refline;
90013e9a:	18a0      	adds	r0, r4, r2
          pLum++;
90013e9c:	3308      	adds	r3, #8
    for(i= 0; i <  8; i++)
90013e9e:	f1ba 0a01 	subs.w	sl, sl, #1
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);     
90013ea2:	ea4f 0cd8 	mov.w	ip, r8, lsr #3
90013ea6:	ea4f 0898 	mov.w	r8, r8, lsr #2
90013eaa:	ea4f 2bcc 	mov.w	fp, ip, lsl #11
90013eae:	ea4b 1848 	orr.w	r8, fp, r8, lsl #5
90013eb2:	ea4c 0c08 	orr.w	ip, ip, r8
90013eb6:	f824 c002 	strh.w	ip, [r4, r2]
        refline += JPEG_ConvertorParams.ScaledWidth;        
90013eba:	443a      	add	r2, r7
          ySample =   (uint32_t)(*pLum);
90013ebc:	f813 8c07 	ldrb.w	r8, [r3, #-7]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);     
90013ec0:	ea4f 0cd8 	mov.w	ip, r8, lsr #3
90013ec4:	ea4f 0898 	mov.w	r8, r8, lsr #2
90013ec8:	ea4f 2bcc 	mov.w	fp, ip, lsl #11
90013ecc:	ea4b 1848 	orr.w	r8, fp, r8, lsl #5
90013ed0:	ea4c 0c08 	orr.w	ip, ip, r8
90013ed4:	f8a0 c002 	strh.w	ip, [r0, #2]
          ySample =   (uint32_t)(*pLum);
90013ed8:	f813 8c06 	ldrb.w	r8, [r3, #-6]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);     
90013edc:	ea4f 0cd8 	mov.w	ip, r8, lsr #3
90013ee0:	ea4f 0898 	mov.w	r8, r8, lsr #2
90013ee4:	ea4f 2bcc 	mov.w	fp, ip, lsl #11
90013ee8:	ea4b 1848 	orr.w	r8, fp, r8, lsl #5
90013eec:	ea4c 0c08 	orr.w	ip, ip, r8
90013ef0:	f8a0 c004 	strh.w	ip, [r0, #4]
          ySample =   (uint32_t)(*pLum);
90013ef4:	f813 8c05 	ldrb.w	r8, [r3, #-5]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);     
90013ef8:	ea4f 0cd8 	mov.w	ip, r8, lsr #3
90013efc:	ea4f 0898 	mov.w	r8, r8, lsr #2
90013f00:	ea4f 2bcc 	mov.w	fp, ip, lsl #11
90013f04:	ea4b 1848 	orr.w	r8, fp, r8, lsl #5
90013f08:	ea4c 0c08 	orr.w	ip, ip, r8
90013f0c:	f8a0 c006 	strh.w	ip, [r0, #6]
          ySample =   (uint32_t)(*pLum);
90013f10:	f813 8c04 	ldrb.w	r8, [r3, #-4]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);     
90013f14:	ea4f 0cd8 	mov.w	ip, r8, lsr #3
90013f18:	ea4f 0898 	mov.w	r8, r8, lsr #2
90013f1c:	ea4f 2bcc 	mov.w	fp, ip, lsl #11
90013f20:	ea4b 1848 	orr.w	r8, fp, r8, lsl #5
90013f24:	ea4c 0c08 	orr.w	ip, ip, r8
90013f28:	f8a0 c008 	strh.w	ip, [r0, #8]
          ySample =   (uint32_t)(*pLum);
90013f2c:	f813 8c03 	ldrb.w	r8, [r3, #-3]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);     
90013f30:	ea4f 0cd8 	mov.w	ip, r8, lsr #3
90013f34:	ea4f 0898 	mov.w	r8, r8, lsr #2
90013f38:	ea4f 2bcc 	mov.w	fp, ip, lsl #11
90013f3c:	ea4b 1848 	orr.w	r8, fp, r8, lsl #5
90013f40:	ea4c 0c08 	orr.w	ip, ip, r8
90013f44:	f8a0 c00a 	strh.w	ip, [r0, #10]
          ySample =   (uint32_t)(*pLum);
90013f48:	f813 8c02 	ldrb.w	r8, [r3, #-2]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);     
90013f4c:	ea4f 0cd8 	mov.w	ip, r8, lsr #3
90013f50:	ea4f 0898 	mov.w	r8, r8, lsr #2
90013f54:	ea4f 2bcc 	mov.w	fp, ip, lsl #11
90013f58:	ea4b 1848 	orr.w	r8, fp, r8, lsl #5
90013f5c:	ea4c 0c08 	orr.w	ip, ip, r8
90013f60:	f8a0 c00c 	strh.w	ip, [r0, #12]
          ySample =   (uint32_t)(*pLum);
90013f64:	f813 8c01 	ldrb.w	r8, [r3, #-1]
          *(__IO uint16_t *)pOutAddr = ((ySample >> 3) << 11) |  ((ySample >> 2) << 5) | (ySample >> 3);     
90013f68:	ea4f 0cd8 	mov.w	ip, r8, lsr #3
90013f6c:	ea4f 0898 	mov.w	r8, r8, lsr #2
90013f70:	ea4f 2bcc 	mov.w	fp, ip, lsl #11
90013f74:	ea4b 1848 	orr.w	r8, fp, r8, lsl #5
90013f78:	ea4c 0c08 	orr.w	ip, ip, r8
90013f7c:	f8a0 c00e 	strh.w	ip, [r0, #14]
    for(i= 0; i <  8; i++)
90013f80:	d186      	bne.n	90013e90 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x50>
  while(currentMCU < (numberMCU + BlockIndex))
90013f82:	45a9      	cmp	r9, r5
    pInBuffer +=  GRAY_444_BLOCK_SIZE;    
90013f84:	f106 0640 	add.w	r6, r6, #64	@ 0x40
  while(currentMCU < (numberMCU + BlockIndex))
90013f88:	f47f af74 	bne.w	90013e74 <JPEG_MCU_Gray_ARGB_ConvertBlocks+0x34>
90013f8c:	4670      	mov	r0, lr
  }
  return numberMCU;
}
90013f8e:	b003      	add	sp, #12
90013f90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013f94:	24027e50 	.word	0x24027e50

90013f98 <JPEG_MCU_YCCK_ARGB_ConvertBlocks>:
static uint32_t JPEG_MCU_YCCK_ARGB_ConvertBlocks(uint8_t *pInBuffer, 
                                      uint8_t *pOutBuffer, 
                                      uint32_t BlockIndex,
                                      uint32_t DataCount,
                                      uint32_t *ConvertedDataCount)
{  
90013f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  
  numberMCU = DataCount / CMYK_444_BLOCK_SIZE;
  currentMCU = BlockIndex;
  

  while(currentMCU < (numberMCU + BlockIndex))
90013f9c:	eb02 2a13 	add.w	sl, r2, r3, lsr #8
{  
90013fa0:	b085      	sub	sp, #20
  numberMCU = DataCount / CMYK_444_BLOCK_SIZE;
90013fa2:	ea4f 2913 	mov.w	r9, r3, lsr #8
  while(currentMCU < (numberMCU + BlockIndex))
90013fa6:	4592      	cmp	sl, r2
90013fa8:	f240 813e 	bls.w	90014228 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x290>
  {

    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90013fac:	4ba0      	ldr	r3, [pc, #640]	@ (90014230 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x298>)
90013fae:	4615      	mov	r5, r2
90013fb0:	4606      	mov	r6, r0
90013fb2:	460c      	mov	r4, r1
        pOutAddr = pOutBuffer+ refline;        

          for(j=0; j < 8; j++)
          {           
            color_k = (int32_t)(*(pChrom + 192));
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90013fb4:	4a9f      	ldr	r2, [pc, #636]	@ (90014234 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x29c>)
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013fb6:	f8d3 8010 	ldr.w	r8, [r3, #16]
90013fba:	9501      	str	r5, [sp, #4]
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013fbc:	e9d3 b709 	ldrd	fp, r7, [r3, #36]	@ 0x24
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013fc0:	e9cd ba02 	strd	fp, sl, [sp, #8]
90013fc4:	e006      	b.n	90013fd4 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x3c>
  while(currentMCU < (numberMCU + BlockIndex))
90013fc6:	9b03      	ldr	r3, [sp, #12]

        refline += JPEG_ConvertorParams.ScaledWidth;          
      }
    }   
    
    pInBuffer +=  CMYK_444_BLOCK_SIZE;
90013fc8:	f506 7680 	add.w	r6, r6, #256	@ 0x100
  while(currentMCU < (numberMCU + BlockIndex))
90013fcc:	9901      	ldr	r1, [sp, #4]
90013fce:	428b      	cmp	r3, r1
90013fd0:	f000 812a 	beq.w	90014228 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x290>
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90013fd4:	9801      	ldr	r0, [sp, #4]
    currentMCU++;
90013fd6:	f04f 0e08 	mov.w	lr, #8
    xRef = ((currentMCU *8) / JPEG_ConvertorParams.WidthExtend)*8;
90013fda:	9d02      	ldr	r5, [sp, #8]
90013fdc:	00c3      	lsls	r3, r0, #3
90013fde:	3001      	adds	r0, #1
90013fe0:	fbb3 f1f5 	udiv	r1, r3, r5
90013fe4:	9001      	str	r0, [sp, #4]
    yRef = ((currentMCU *8) % JPEG_ConvertorParams.WidthExtend);
90013fe6:	fb05 3011 	mls	r0, r5, r1, r3
    currentMCU++;
90013fea:	4633      	mov	r3, r6
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013fec:	fb07 f101 	mul.w	r1, r7, r1
    currentMCU++;
90013ff0:	4675      	mov	r5, lr
    refline = JPEG_ConvertorParams.ScaledWidth * xRef + (JPEG_BYTES_PER_PIXEL*yRef);
90013ff2:	0040      	lsls	r0, r0, #1
90013ff4:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
      if(refline < JPEG_ConvertorParams.ImageSize_Bytes)
90013ff8:	4580      	cmp	r8, r0
90013ffa:	d9e4      	bls.n	90013fc6 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x2e>
            color_k = (int32_t)(*(pChrom + 192));
90013ffc:	f893 b0c0 	ldrb.w	fp, [r3, #192]	@ 0xc0
        pOutAddr = pOutBuffer+ refline;        
90014000:	eb04 0c00 	add.w	ip, r4, r0
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90014004:	f893 1040 	ldrb.w	r1, [r3, #64]	@ 0x40
    for(i= 0; i <  8; i++)
90014008:	3d01      	subs	r5, #1
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9001400a:	f893 a000 	ldrb.w	sl, [r3]
            pChrom++;
9001400e:	f103 0308 	add.w	r3, r3, #8
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90014012:	fb11 f10b 	smulbb	r1, r1, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014016:	fb1a fa0b 	smulbb	sl, sl, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001401a:	fba2 1e01 	umull	r1, lr, r2, r1
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9001401e:	fba2 a10a 	umull	sl, r1, r2, sl
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90014022:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90014026:	ea4f 2191 	mov.w	r1, r1, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9001402a:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
9001402e:	ea4e 21c1 	orr.w	r1, lr, r1, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90014032:	f893 e078 	ldrb.w	lr, [r3, #120]	@ 0x78
90014036:	fb1e fe0b 	smulbb	lr, lr, fp
9001403a:	fba2 ea0e 	umull	lr, sl, r2, lr
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9001403e:	ea41 219a 	orr.w	r1, r1, sl, lsr #10
90014042:	b289      	uxth	r1, r1
          *(__IO uint16_t *)pOutAddr = 
90014044:	5221      	strh	r1, [r4, r0]
        refline += JPEG_ConvertorParams.ScaledWidth;          
90014046:	4438      	add	r0, r7
            color_k = (int32_t)(*(pChrom + 192));
90014048:	f893 b0b9 	ldrb.w	fp, [r3, #185]	@ 0xb9
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001404c:	f893 1039 	ldrb.w	r1, [r3, #57]	@ 0x39
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014050:	f813 ac07 	ldrb.w	sl, [r3, #-7]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90014054:	fb11 f10b 	smulbb	r1, r1, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014058:	fb1a fa0b 	smulbb	sl, sl, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001405c:	fba2 1e01 	umull	r1, lr, r2, r1
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014060:	fba2 a10a 	umull	sl, r1, r2, sl
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90014064:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90014068:	ea4f 2191 	mov.w	r1, r1, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9001406c:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90014070:	ea4e 21c1 	orr.w	r1, lr, r1, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90014074:	f893 e079 	ldrb.w	lr, [r3, #121]	@ 0x79
90014078:	fb1e fe0b 	smulbb	lr, lr, fp
9001407c:	fba2 ea0e 	umull	lr, sl, r2, lr
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90014080:	ea41 219a 	orr.w	r1, r1, sl, lsr #10
90014084:	b289      	uxth	r1, r1
          *(__IO uint16_t *)pOutAddr = 
90014086:	f8ac 1002 	strh.w	r1, [ip, #2]
            color_k = (int32_t)(*(pChrom + 192));
9001408a:	f893 b0ba 	ldrb.w	fp, [r3, #186]	@ 0xba
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001408e:	f893 103a 	ldrb.w	r1, [r3, #58]	@ 0x3a
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014092:	f813 ac06 	ldrb.w	sl, [r3, #-6]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90014096:	fb11 f10b 	smulbb	r1, r1, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9001409a:	fb1a fa0b 	smulbb	sl, sl, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001409e:	fba2 1e01 	umull	r1, lr, r2, r1
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900140a2:	fba2 a10a 	umull	sl, r1, r2, sl
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900140a6:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900140aa:	ea4f 2191 	mov.w	r1, r1, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900140ae:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900140b2:	ea4e 21c1 	orr.w	r1, lr, r1, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
900140b6:	f893 e07a 	ldrb.w	lr, [r3, #122]	@ 0x7a
900140ba:	fb1e fe0b 	smulbb	lr, lr, fp
900140be:	fba2 ea0e 	umull	lr, sl, r2, lr
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900140c2:	ea41 219a 	orr.w	r1, r1, sl, lsr #10
900140c6:	b289      	uxth	r1, r1
          *(__IO uint16_t *)pOutAddr = 
900140c8:	f8ac 1004 	strh.w	r1, [ip, #4]
            color_k = (int32_t)(*(pChrom + 192));
900140cc:	f893 b0bb 	ldrb.w	fp, [r3, #187]	@ 0xbb
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900140d0:	f893 103b 	ldrb.w	r1, [r3, #59]	@ 0x3b
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900140d4:	f813 ac05 	ldrb.w	sl, [r3, #-5]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900140d8:	fb11 f10b 	smulbb	r1, r1, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900140dc:	fb1a fa0b 	smulbb	sl, sl, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900140e0:	fba2 1e01 	umull	r1, lr, r2, r1
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900140e4:	fba2 a10a 	umull	sl, r1, r2, sl
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900140e8:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900140ec:	ea4f 2191 	mov.w	r1, r1, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900140f0:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900140f4:	ea4e 21c1 	orr.w	r1, lr, r1, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
900140f8:	f893 e07b 	ldrb.w	lr, [r3, #123]	@ 0x7b
900140fc:	fb1e fe0b 	smulbb	lr, lr, fp
90014100:	fba2 ea0e 	umull	lr, sl, r2, lr
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90014104:	ea41 219a 	orr.w	r1, r1, sl, lsr #10
90014108:	b289      	uxth	r1, r1
          *(__IO uint16_t *)pOutAddr = 
9001410a:	f8ac 1006 	strh.w	r1, [ip, #6]
            color_k = (int32_t)(*(pChrom + 192));
9001410e:	f893 b0bc 	ldrb.w	fp, [r3, #188]	@ 0xbc
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90014112:	f893 103c 	ldrb.w	r1, [r3, #60]	@ 0x3c
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014116:	f813 ac04 	ldrb.w	sl, [r3, #-4]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001411a:	fb11 f10b 	smulbb	r1, r1, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9001411e:	fb1a fa0b 	smulbb	sl, sl, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90014122:	fba2 1e01 	umull	r1, lr, r2, r1
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014126:	fba2 a10a 	umull	sl, r1, r2, sl
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9001412a:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
9001412e:	ea4f 2191 	mov.w	r1, r1, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90014132:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90014136:	ea4e 21c1 	orr.w	r1, lr, r1, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
9001413a:	f893 e07c 	ldrb.w	lr, [r3, #124]	@ 0x7c
9001413e:	fb1e fe0b 	smulbb	lr, lr, fp
90014142:	fba2 ea0e 	umull	lr, sl, r2, lr
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90014146:	ea41 219a 	orr.w	r1, r1, sl, lsr #10
9001414a:	b289      	uxth	r1, r1
          *(__IO uint16_t *)pOutAddr = 
9001414c:	f8ac 1008 	strh.w	r1, [ip, #8]
            color_k = (int32_t)(*(pChrom + 192));
90014150:	f893 b0bd 	ldrb.w	fp, [r3, #189]	@ 0xbd
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90014154:	f893 103d 	ldrb.w	r1, [r3, #61]	@ 0x3d
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014158:	f813 ac03 	ldrb.w	sl, [r3, #-3]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001415c:	fb11 f10b 	smulbb	r1, r1, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014160:	fb1a fa0b 	smulbb	sl, sl, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
90014164:	fba2 1e01 	umull	r1, lr, r2, r1
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014168:	fba2 a10a 	umull	sl, r1, r2, sl
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9001416c:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90014170:	ea4f 2191 	mov.w	r1, r1, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90014174:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
90014178:	ea4e 21c1 	orr.w	r1, lr, r1, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
9001417c:	f893 e07d 	ldrb.w	lr, [r3, #125]	@ 0x7d
90014180:	fb1e fe0b 	smulbb	lr, lr, fp
90014184:	fba2 ea0e 	umull	lr, sl, r2, lr
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
90014188:	ea41 219a 	orr.w	r1, r1, sl, lsr #10
9001418c:	b289      	uxth	r1, r1
          *(__IO uint16_t *)pOutAddr = 
9001418e:	f8ac 100a 	strh.w	r1, [ip, #10]
            color_k = (int32_t)(*(pChrom + 192));
90014192:	f893 a0be 	ldrb.w	sl, [r3, #190]	@ 0xbe
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
90014196:	f813 1c02 	ldrb.w	r1, [r3, #-2]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
9001419a:	f893 e03e 	ldrb.w	lr, [r3, #62]	@ 0x3e
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
9001419e:	fb11 f10a 	smulbb	r1, r1, sl
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900141a2:	fb1e fe0a 	smulbb	lr, lr, sl
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900141a6:	fba2 1b01 	umull	r1, fp, r2, r1
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900141aa:	fba2 e10e 	umull	lr, r1, r2, lr
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
900141ae:	f893 e07e 	ldrb.w	lr, [r3, #126]	@ 0x7e
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900141b2:	ea4f 2b9b 	mov.w	fp, fp, lsr #10
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
900141b6:	fb1e fe0a 	smulbb	lr, lr, sl
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900141ba:	ea4f 2151 	mov.w	r1, r1, lsr #9
900141be:	ea4f 1141 	mov.w	r1, r1, lsl #5
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
900141c2:	fba2 ea0e 	umull	lr, sl, r2, lr
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900141c6:	ea41 21cb 	orr.w	r1, r1, fp, lsl #11
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900141ca:	ea41 219a 	orr.w	r1, r1, sl, lsr #10
900141ce:	b289      	uxth	r1, r1
          *(__IO uint16_t *)pOutAddr = 
900141d0:	f8ac 100c 	strh.w	r1, [ip, #12]
            color_k = (int32_t)(*(pChrom + 192));
900141d4:	f893 b0bf 	ldrb.w	fp, [r3, #191]	@ 0xbf
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900141d8:	f893 103f 	ldrb.w	r1, [r3, #63]	@ 0x3f
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900141dc:	f813 ac01 	ldrb.w	sl, [r3, #-1]
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900141e0:	fb11 f10b 	smulbb	r1, r1, fp
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900141e4:	fb1a fa0b 	smulbb	sl, sl, fp
            c_green = (color_k * (int32_t)(*(pChrom + 64)))/255;
900141e8:	fba2 1e01 	umull	r1, lr, r2, r1
            c_red = (color_k * ((int32_t)(*pChrom)))/255;
900141ec:	fba2 a10a 	umull	sl, r1, r2, sl
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900141f0:	ea4f 2e5e 	mov.w	lr, lr, lsr #9
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900141f4:	ea4f 2191 	mov.w	r1, r1, lsr #10
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
900141f8:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
            ((c_red >> 3) << JPEG_RED_OFFSET)     | \
900141fc:	ea4e 21c1 	orr.w	r1, lr, r1, lsl #11
            c_blue = (color_k * (int32_t)(*(pChrom + 128)))/255;
90014200:	f893 e07f 	ldrb.w	lr, [r3, #127]	@ 0x7f
90014204:	fb1e fe0b 	smulbb	lr, lr, fp
90014208:	fba2 ea0e 	umull	lr, sl, r2, lr
            ((c_green >> 2) << JPEG_GREEN_OFFSET) | \
9001420c:	ea41 219a 	orr.w	r1, r1, sl, lsr #10
90014210:	b289      	uxth	r1, r1
          *(__IO uint16_t *)pOutAddr = 
90014212:	f8ac 100e 	strh.w	r1, [ip, #14]
    for(i= 0; i <  8; i++)
90014216:	f47f aeef 	bne.w	90013ff8 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x60>
  while(currentMCU < (numberMCU + BlockIndex))
9001421a:	9b03      	ldr	r3, [sp, #12]
    pInBuffer +=  CMYK_444_BLOCK_SIZE;
9001421c:	f506 7680 	add.w	r6, r6, #256	@ 0x100
  while(currentMCU < (numberMCU + BlockIndex))
90014220:	9901      	ldr	r1, [sp, #4]
90014222:	428b      	cmp	r3, r1
90014224:	f47f aed6 	bne.w	90013fd4 <JPEG_MCU_YCCK_ARGB_ConvertBlocks+0x3c>
  }
  return numberMCU;
}
90014228:	4648      	mov	r0, r9
9001422a:	b005      	add	sp, #20
9001422c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014230:	24027e50 	.word	0x24027e50
90014234:	80808081 	.word	0x80808081

90014238 <JPEG_GetDecodeColorConvertFunc>:
  *                      depending of the jpeg image color space and chroma sampling info. 
  * @param ImageNbMCUs : pointer to uint32_t, used to retrive the total number of MCU blocks in the jpeg image.  
  * @retval HAL status : HAL_OK or HAL_ERROR.
  */
HAL_StatusTypeDef JPEG_GetDecodeColorConvertFunc(JPEG_ConfTypeDef *pJpegInfo, JPEG_YCbCrToRGB_Convert_Function *pFunction, uint32_t *ImageNbMCUs)
{
90014238:	b5f0      	push	{r4, r5, r6, r7, lr}
  JPEG_ConvertorParams.ColorSpace = pJpegInfo->ColorSpace;
  JPEG_ConvertorParams.ImageWidth = pJpegInfo->ImageWidth;
  JPEG_ConvertorParams.ImageHeight = pJpegInfo->ImageHeight;
  JPEG_ConvertorParams.ImageSize_Bytes = pJpegInfo->ImageWidth * pJpegInfo->ImageHeight * JPEG_BYTES_PER_PIXEL;
  
  JPEG_ConvertorParams.ChromaSubsampling = pJpegInfo->ChromaSubsampling;  
9001423a:	e9d0 7501 	ldrd	r7, r5, [r0, #4]
  JPEG_ConvertorParams.ImageWidth = pJpegInfo->ImageWidth;
9001423e:	68c4      	ldr	r4, [r0, #12]
  JPEG_ConvertorParams.ColorSpace = pJpegInfo->ColorSpace;
90014240:	6806      	ldr	r6, [r0, #0]
  JPEG_ConvertorParams.ImageSize_Bytes = pJpegInfo->ImageWidth * pJpegInfo->ImageHeight * JPEG_BYTES_PER_PIXEL;
90014242:	fb05 f004 	mul.w	r0, r5, r4
  JPEG_ConvertorParams.ColorSpace = pJpegInfo->ColorSpace;
90014246:	4b3b      	ldr	r3, [pc, #236]	@ (90014334 <JPEG_GetDecodeColorConvertFunc+0xfc>)
  if(JPEG_ConvertorParams.ColorSpace == JPEG_YCBCR_COLORSPACE)
90014248:	2e10      	cmp	r6, #16
  JPEG_ConvertorParams.ImageSize_Bytes = pJpegInfo->ImageWidth * pJpegInfo->ImageHeight * JPEG_BYTES_PER_PIXEL;
9001424a:	ea4f 0040 	mov.w	r0, r0, lsl #1
  JPEG_ConvertorParams.ImageWidth = pJpegInfo->ImageWidth;
9001424e:	609c      	str	r4, [r3, #8]
  JPEG_ConvertorParams.ColorSpace = pJpegInfo->ColorSpace;
90014250:	601e      	str	r6, [r3, #0]
  JPEG_ConvertorParams.ImageHeight = pJpegInfo->ImageHeight;
90014252:	60dd      	str	r5, [r3, #12]
  JPEG_ConvertorParams.ChromaSubsampling = pJpegInfo->ChromaSubsampling;  
90014254:	605f      	str	r7, [r3, #4]
  JPEG_ConvertorParams.ImageSize_Bytes = pJpegInfo->ImageWidth * pJpegInfo->ImageHeight * JPEG_BYTES_PER_PIXEL;
90014256:	6118      	str	r0, [r3, #16]
  if(JPEG_ConvertorParams.ColorSpace == JPEG_YCBCR_COLORSPACE)
90014258:	d030      	beq.n	900142bc <JPEG_GetDecodeColorConvertFunc+0x84>
      }
      JPEG_ConvertorParams.H_factor = 8;
      JPEG_ConvertorParams.V_factor  = 8;
    }   
  }
  else if(JPEG_ConvertorParams.ColorSpace == JPEG_GRAYSCALE_COLORSPACE)
9001425a:	b9c6      	cbnz	r6, 9001428e <JPEG_GetDecodeColorConvertFunc+0x56>
  {
    *pFunction =  JPEG_MCU_Gray_ARGB_ConvertBlocks;
9001425c:	4836      	ldr	r0, [pc, #216]	@ (90014338 <JPEG_GetDecodeColorConvertFunc+0x100>)

    JPEG_ConvertorParams.LineOffset = JPEG_ConvertorParams.ImageWidth % 8;
      
    if(JPEG_ConvertorParams.LineOffset != 0)
9001425e:	f014 0707 	ands.w	r7, r4, #7
    *pFunction =  JPEG_MCU_Gray_ARGB_ConvertBlocks;
90014262:	6008      	str	r0, [r1, #0]
    if(JPEG_ConvertorParams.LineOffset != 0)
90014264:	d11a      	bne.n	9001429c <JPEG_GetDecodeColorConvertFunc+0x64>
  {  
    return HAL_ERROR; /* Color space Not supported*/
  }
 
  JPEG_ConvertorParams.WidthExtend = JPEG_ConvertorParams.ImageWidth + JPEG_ConvertorParams.LineOffset;
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth; 
90014266:	0061      	lsls	r1, r4, #1
      JPEG_ConvertorParams.H_factor = 16;
90014268:	2008      	movs	r0, #8
    JPEG_ConvertorParams.LineOffset = JPEG_ConvertorParams.ImageWidth % 8;
9001426a:	615f      	str	r7, [r3, #20]
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth; 
9001426c:	6299      	str	r1, [r3, #40]	@ 0x28
  
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
9001426e:	08e1      	lsrs	r1, r4, #3
  JPEG_ConvertorParams.WidthExtend = JPEG_ConvertorParams.ImageWidth + JPEG_ConvertorParams.LineOffset;
90014270:	625c      	str	r4, [r3, #36]	@ 0x24
      JPEG_ConvertorParams.V_factor  = 8;
90014272:	e9c3 0007 	strd	r0, r0, [r3, #28]
  if((JPEG_ConvertorParams.ImageWidth % JPEG_ConvertorParams.H_factor) != 0)
  {
    hMCU++; /*+1 for horizenatl incomplete MCU */                
  }

  vMCU = (JPEG_ConvertorParams.ImageHeight / JPEG_ConvertorParams.V_factor);
90014276:	fbb5 f4f0 	udiv	r4, r5, r0
  if((JPEG_ConvertorParams.ImageHeight % JPEG_ConvertorParams.V_factor) != 0)
9001427a:	fb00 5514 	mls	r5, r0, r4, r5
9001427e:	b105      	cbz	r5, 90014282 <JPEG_GetDecodeColorConvertFunc+0x4a>
  {
    vMCU++; /*+1 for vertical incomplete MCU */                
90014280:	3401      	adds	r4, #1
  }
  JPEG_ConvertorParams.MCU_Total_Nb = (hMCU * vMCU);
90014282:	fb04 f101 	mul.w	r1, r4, r1
  *ImageNbMCUs = JPEG_ConvertorParams.MCU_Total_Nb;

  return HAL_OK;
90014286:	2000      	movs	r0, #0
  JPEG_ConvertorParams.MCU_Total_Nb = (hMCU * vMCU);
90014288:	62d9      	str	r1, [r3, #44]	@ 0x2c
  *ImageNbMCUs = JPEG_ConvertorParams.MCU_Total_Nb;
9001428a:	6011      	str	r1, [r2, #0]
}
9001428c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  else if(JPEG_ConvertorParams.ColorSpace == JPEG_CMYK_COLORSPACE)
9001428e:	2e30      	cmp	r6, #48	@ 0x30
90014290:	d11e      	bne.n	900142d0 <JPEG_GetDecodeColorConvertFunc+0x98>
    *pFunction =  JPEG_MCU_YCCK_ARGB_ConvertBlocks;
90014292:	482a      	ldr	r0, [pc, #168]	@ (9001433c <JPEG_GetDecodeColorConvertFunc+0x104>)
    if(JPEG_ConvertorParams.LineOffset != 0)
90014294:	f014 0707 	ands.w	r7, r4, #7
    *pFunction =  JPEG_MCU_YCCK_ARGB_ConvertBlocks;
90014298:	6008      	str	r0, [r1, #0]
    if(JPEG_ConvertorParams.LineOffset != 0)
9001429a:	d0e4      	beq.n	90014266 <JPEG_GetDecodeColorConvertFunc+0x2e>
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
9001429c:	2608      	movs	r6, #8
      JPEG_ConvertorParams.LineOffset = 8 - JPEG_ConvertorParams.LineOffset;  
9001429e:	f1c7 0708 	rsb	r7, r7, #8
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth; 
900142a2:	ea4f 0e44 	mov.w	lr, r4, lsl #1
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
900142a6:	08e1      	lsrs	r1, r4, #3
900142a8:	46b4      	mov	ip, r6
  JPEG_ConvertorParams.WidthExtend = JPEG_ConvertorParams.ImageWidth + JPEG_ConvertorParams.LineOffset;
900142aa:	443c      	add	r4, r7
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
900142ac:	4630      	mov	r0, r6
    hMCU++; /*+1 for horizenatl incomplete MCU */                
900142ae:	3101      	adds	r1, #1
      JPEG_ConvertorParams.LineOffset = 8 - JPEG_ConvertorParams.LineOffset;  
900142b0:	615f      	str	r7, [r3, #20]
      JPEG_ConvertorParams.V_factor  = 8;
900142b2:	e9c3 6c07 	strd	r6, ip, [r3, #28]
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth; 
900142b6:	e9c3 4e09 	strd	r4, lr, [r3, #36]	@ 0x24
    hMCU++; /*+1 for horizenatl incomplete MCU */                
900142ba:	e7dc      	b.n	90014276 <JPEG_GetDecodeColorConvertFunc+0x3e>
    if(JPEG_ConvertorParams.ChromaSubsampling == JPEG_420_SUBSAMPLING)
900142bc:	2f01      	cmp	r7, #1
900142be:	d018      	beq.n	900142f2 <JPEG_GetDecodeColorConvertFunc+0xba>
    else if(JPEG_ConvertorParams.ChromaSubsampling == JPEG_422_SUBSAMPLING)
900142c0:	2f02      	cmp	r7, #2
900142c2:	d007      	beq.n	900142d4 <JPEG_GetDecodeColorConvertFunc+0x9c>
      *pFunction =  JPEG_MCU_YCbCr444_ARGB_ConvertBlocks;
900142c4:	481e      	ldr	r0, [pc, #120]	@ (90014340 <JPEG_GetDecodeColorConvertFunc+0x108>)
      if(JPEG_ConvertorParams.LineOffset != 0)
900142c6:	f014 0707 	ands.w	r7, r4, #7
      *pFunction =  JPEG_MCU_YCbCr444_ARGB_ConvertBlocks;
900142ca:	6008      	str	r0, [r1, #0]
      if(JPEG_ConvertorParams.LineOffset != 0)
900142cc:	d1e6      	bne.n	9001429c <JPEG_GetDecodeColorConvertFunc+0x64>
900142ce:	e7ca      	b.n	90014266 <JPEG_GetDecodeColorConvertFunc+0x2e>
    return HAL_ERROR; /* Color space Not supported*/
900142d0:	2001      	movs	r0, #1
}
900142d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
      *pFunction =  JPEG_MCU_YCbCr422_ARGB_ConvertBlocks;
900142d4:	481b      	ldr	r0, [pc, #108]	@ (90014344 <JPEG_GetDecodeColorConvertFunc+0x10c>)
      if(JPEG_ConvertorParams.LineOffset != 0)
900142d6:	f014 070f 	ands.w	r7, r4, #15
      *pFunction =  JPEG_MCU_YCbCr422_ARGB_ConvertBlocks;
900142da:	6008      	str	r0, [r1, #0]
      if(JPEG_ConvertorParams.LineOffset != 0)
900142dc:	d020      	beq.n	90014320 <JPEG_GetDecodeColorConvertFunc+0xe8>
        JPEG_ConvertorParams.LineOffset = 16 - JPEG_ConvertorParams.LineOffset;  
900142de:	f1c7 0710 	rsb	r7, r7, #16
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
900142e2:	f04f 0c08 	mov.w	ip, #8
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth; 
900142e6:	ea4f 0e44 	mov.w	lr, r4, lsl #1
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
900142ea:	0921      	lsrs	r1, r4, #4
900142ec:	4660      	mov	r0, ip
  JPEG_ConvertorParams.WidthExtend = JPEG_ConvertorParams.ImageWidth + JPEG_ConvertorParams.LineOffset;
900142ee:	443c      	add	r4, r7
  if((JPEG_ConvertorParams.ImageWidth % JPEG_ConvertorParams.H_factor) != 0)
900142f0:	e7dd      	b.n	900142ae <JPEG_GetDecodeColorConvertFunc+0x76>
      *pFunction = JPEG_MCU_YCbCr420_ARGB_ConvertBlocks;
900142f2:	4815      	ldr	r0, [pc, #84]	@ (90014348 <JPEG_GetDecodeColorConvertFunc+0x110>)
      if(JPEG_ConvertorParams.LineOffset != 0)
900142f4:	f014 070f 	ands.w	r7, r4, #15
      *pFunction = JPEG_MCU_YCbCr420_ARGB_ConvertBlocks;
900142f8:	6008      	str	r0, [r1, #0]
      if(JPEG_ConvertorParams.LineOffset != 0)
900142fa:	d108      	bne.n	9001430e <JPEG_GetDecodeColorConvertFunc+0xd6>
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth; 
900142fc:	0061      	lsls	r1, r4, #1
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
900142fe:	4630      	mov	r0, r6
      JPEG_ConvertorParams.LineOffset = JPEG_ConvertorParams.ImageWidth % 16;
90014300:	615f      	str	r7, [r3, #20]
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth; 
90014302:	6299      	str	r1, [r3, #40]	@ 0x28
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
90014304:	0921      	lsrs	r1, r4, #4
  JPEG_ConvertorParams.WidthExtend = JPEG_ConvertorParams.ImageWidth + JPEG_ConvertorParams.LineOffset;
90014306:	625c      	str	r4, [r3, #36]	@ 0x24
      JPEG_ConvertorParams.V_factor  = 8;
90014308:	e9c3 6607 	strd	r6, r6, [r3, #28]
  if((JPEG_ConvertorParams.ImageWidth % JPEG_ConvertorParams.H_factor) != 0)
9001430c:	e7b3      	b.n	90014276 <JPEG_GetDecodeColorConvertFunc+0x3e>
        JPEG_ConvertorParams.LineOffset = 16 - JPEG_ConvertorParams.LineOffset;  
9001430e:	f1c7 0710 	rsb	r7, r7, #16
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth; 
90014312:	ea4f 0e44 	mov.w	lr, r4, lsl #1
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
90014316:	0921      	lsrs	r1, r4, #4
90014318:	46b4      	mov	ip, r6
  JPEG_ConvertorParams.WidthExtend = JPEG_ConvertorParams.ImageWidth + JPEG_ConvertorParams.LineOffset;
9001431a:	443c      	add	r4, r7
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
9001431c:	4630      	mov	r0, r6
9001431e:	e7c6      	b.n	900142ae <JPEG_GetDecodeColorConvertFunc+0x76>
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth; 
90014320:	0061      	lsls	r1, r4, #1
      JPEG_ConvertorParams.V_factor  = 8;
90014322:	2008      	movs	r0, #8
      JPEG_ConvertorParams.LineOffset = JPEG_ConvertorParams.ImageWidth % 16;
90014324:	615f      	str	r7, [r3, #20]
  JPEG_ConvertorParams.ScaledWidth = JPEG_BYTES_PER_PIXEL * JPEG_ConvertorParams.ImageWidth; 
90014326:	6299      	str	r1, [r3, #40]	@ 0x28
  hMCU = (JPEG_ConvertorParams.ImageWidth / JPEG_ConvertorParams.H_factor);
90014328:	0921      	lsrs	r1, r4, #4
      JPEG_ConvertorParams.H_factor = 16;
9001432a:	61de      	str	r6, [r3, #28]
      JPEG_ConvertorParams.V_factor  = 8;
9001432c:	e9c3 0408 	strd	r0, r4, [r3, #32]
  if((JPEG_ConvertorParams.ImageWidth % JPEG_ConvertorParams.H_factor) != 0)
90014330:	e7a1      	b.n	90014276 <JPEG_GetDecodeColorConvertFunc+0x3e>
90014332:	bf00      	nop
90014334:	24027e50 	.word	0x24027e50
90014338:	90013e41 	.word	0x90013e41
9001433c:	90013f99 	.word	0x90013f99
90014340:	90013b59 	.word	0x90013b59
90014344:	90013879 	.word	0x90013879
90014348:	90013651 	.word	0x90013651

9001434c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
9001434c:	8880      	ldrh	r0, [r0, #4]
9001434e:	4770      	bx	lr

90014350 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
90014350:	b570      	push	{r4, r5, r6, lr}
90014352:	6803      	ldr	r3, [r0, #0]
90014354:	460c      	mov	r4, r1
90014356:	2100      	movs	r1, #0
90014358:	4605      	mov	r5, r0
9001435a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001435c:	4798      	blx	r3
9001435e:	4606      	mov	r6, r0
90014360:	682b      	ldr	r3, [r5, #0]
90014362:	4628      	mov	r0, r5
90014364:	1ba4      	subs	r4, r4, r6
90014366:	6a1b      	ldr	r3, [r3, #32]
90014368:	b2a4      	uxth	r4, r4
9001436a:	4798      	blx	r3
9001436c:	fbb4 f0f0 	udiv	r0, r4, r0
90014370:	bd70      	pop	{r4, r5, r6, pc}

90014372 <_ZN8touchgfx17AbstractPartition5clearEv>:
90014372:	2300      	movs	r3, #0
90014374:	8083      	strh	r3, [r0, #4]
90014376:	4770      	bx	lr

90014378 <_ZN8touchgfx17AbstractPartition8allocateEt>:
90014378:	b510      	push	{r4, lr}
9001437a:	6803      	ldr	r3, [r0, #0]
9001437c:	4604      	mov	r4, r0
9001437e:	8881      	ldrh	r1, [r0, #4]
90014380:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90014382:	4798      	blx	r3
90014384:	88a3      	ldrh	r3, [r4, #4]
90014386:	3301      	adds	r3, #1
90014388:	80a3      	strh	r3, [r4, #4]
9001438a:	bd10      	pop	{r4, pc}

9001438c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
9001438c:	6803      	ldr	r3, [r0, #0]
9001438e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90014390:	4718      	bx	r3

90014392 <_ZN8touchgfx17AbstractPartitionD1Ev>:
90014392:	4770      	bx	lr

90014394 <_ZN8touchgfx17AbstractPartitionC1Ev>:
90014394:	4a02      	ldr	r2, [pc, #8]	@ (900143a0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
90014396:	6002      	str	r2, [r0, #0]
90014398:	2200      	movs	r2, #0
9001439a:	8082      	strh	r2, [r0, #4]
9001439c:	4770      	bx	lr
9001439e:	bf00      	nop
900143a0:	9002fbe4 	.word	0x9002fbe4

900143a4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
900143a4:	b510      	push	{r4, lr}
900143a6:	6803      	ldr	r3, [r0, #0]
900143a8:	4604      	mov	r4, r0
900143aa:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
900143ae:	4798      	blx	r3
900143b0:	b110      	cbz	r0, 900143b8 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
900143b2:	4620      	mov	r0, r4
900143b4:	f7ef fa58 	bl	90003868 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900143b8:	bd10      	pop	{r4, pc}

900143ba <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>:
900143ba:	f8c0 10e0 	str.w	r1, [r0, #224]	@ 0xe0
900143be:	4770      	bx	lr

900143c0 <_ZNK8touchgfx11BoxProgress8getColorEv>:
900143c0:	f8d0 00e0 	ldr.w	r0, [r0, #224]	@ 0xe0
900143c4:	4770      	bx	lr

900143c6 <_ZN8touchgfx11BoxProgressD1Ev>:
900143c6:	4770      	bx	lr

900143c8 <_ZN8touchgfx11BoxProgressD0Ev>:
900143c8:	b510      	push	{r4, lr}
900143ca:	4604      	mov	r4, r0
900143cc:	21e4      	movs	r1, #228	@ 0xe4
900143ce:	f017 f89a 	bl	9002b506 <_ZdlPvj>
900143d2:	4620      	mov	r0, r4
900143d4:	bd10      	pop	{r4, pc}

900143d6 <_ZN8touchgfx11BoxProgress8setAlphaEh>:
900143d6:	b538      	push	{r3, r4, r5, lr}
900143d8:	4604      	mov	r4, r0
900143da:	460d      	mov	r5, r1
900143dc:	f000 f97c 	bl	900146d8 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
900143e0:	f884 50de 	strb.w	r5, [r4, #222]	@ 0xde
900143e4:	bd38      	pop	{r3, r4, r5, pc}

900143e6 <_ZN8touchgfx8Drawable11setPositionEssss>:
900143e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900143ea:	461e      	mov	r6, r3
900143ec:	6803      	ldr	r3, [r0, #0]
900143ee:	4604      	mov	r4, r0
900143f0:	4617      	mov	r7, r2
900143f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900143f4:	f9bd 5018 	ldrsh.w	r5, [sp, #24]
900143f8:	4798      	blx	r3
900143fa:	6823      	ldr	r3, [r4, #0]
900143fc:	4639      	mov	r1, r7
900143fe:	4620      	mov	r0, r4
90014400:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90014402:	4798      	blx	r3
90014404:	6823      	ldr	r3, [r4, #0]
90014406:	4631      	mov	r1, r6
90014408:	4620      	mov	r0, r4
9001440a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9001440c:	4790      	blx	r2
9001440e:	6823      	ldr	r3, [r4, #0]
90014410:	4629      	mov	r1, r5
90014412:	4620      	mov	r0, r4
90014414:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90014416:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9001441a:	4718      	bx	r3

9001441c <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>:
9001441c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90014420:	4617      	mov	r7, r2
90014422:	f9bd 5020 	ldrsh.w	r5, [sp, #32]
90014426:	2200      	movs	r2, #0
90014428:	4604      	mov	r4, r0
9001442a:	460e      	mov	r6, r1
9001442c:	4698      	mov	r8, r3
9001442e:	4611      	mov	r1, r2
90014430:	9500      	str	r5, [sp, #0]
90014432:	30b8      	adds	r0, #184	@ 0xb8
90014434:	f7ff ffd7 	bl	900143e6 <_ZN8touchgfx8Drawable11setPositionEssss>
90014438:	4643      	mov	r3, r8
9001443a:	463a      	mov	r2, r7
9001443c:	4631      	mov	r1, r6
9001443e:	4620      	mov	r0, r4
90014440:	9508      	str	r5, [sp, #32]
90014442:	b002      	add	sp, #8
90014444:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90014448:	f000 ba3b 	b.w	900148c2 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

9001444c <_ZN8touchgfx11BoxProgress8setValueEi>:
9001444c:	b530      	push	{r4, r5, lr}
9001444e:	4604      	mov	r4, r0
90014450:	b085      	sub	sp, #20
90014452:	f000 f994 	bl	9001477e <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
90014456:	f894 30b4 	ldrb.w	r3, [r4, #180]	@ 0xb4
9001445a:	2b03      	cmp	r3, #3
9001445c:	d814      	bhi.n	90014488 <_ZN8touchgfx11BoxProgress8setValueEi+0x3c>
9001445e:	e8df f003 	tbb	[pc, r3]
90014462:	0202      	.short	0x0202
90014464:	1010      	.short	0x1010
90014466:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
9001446a:	4620      	mov	r0, r4
9001446c:	f000 f9a9 	bl	900147c2 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
90014470:	b200      	sxth	r0, r0
90014472:	f894 30b4 	ldrb.w	r3, [r4, #180]	@ 0xb4
90014476:	2b03      	cmp	r3, #3
90014478:	d830      	bhi.n	900144dc <_ZN8touchgfx11BoxProgress8setValueEi+0x90>
9001447a:	e8df f003 	tbb	[pc, r3]
9001447e:	3107      	.short	0x3107
90014480:	6442      	.short	0x6442
90014482:	f8b4 1062 	ldrh.w	r1, [r4, #98]	@ 0x62
90014486:	e7f0      	b.n	9001446a <_ZN8touchgfx11BoxProgress8setValueEi+0x1e>
90014488:	2000      	movs	r0, #0
9001448a:	e7f2      	b.n	90014472 <_ZN8touchgfx11BoxProgress8setValueEi+0x26>
9001448c:	f9b4 3062 	ldrsh.w	r3, [r4, #98]	@ 0x62
90014490:	2200      	movs	r2, #0
90014492:	f9b4 50c0 	ldrsh.w	r5, [r4, #192]	@ 0xc0
90014496:	9300      	str	r3, [sp, #0]
90014498:	4611      	mov	r1, r2
9001449a:	4603      	mov	r3, r0
9001449c:	f104 00b8 	add.w	r0, r4, #184	@ 0xb8
900144a0:	f7ff ffa1 	bl	900143e6 <_ZN8touchgfx8Drawable11setPositionEssss>
900144a4:	f9b4 30c0 	ldrsh.w	r3, [r4, #192]	@ 0xc0
900144a8:	4629      	mov	r1, r5
900144aa:	429d      	cmp	r5, r3
900144ac:	eba5 0503 	sub.w	r5, r5, r3
900144b0:	f9b4 20c2 	ldrsh.w	r2, [r4, #194]	@ 0xc2
900144b4:	bfa8      	it	ge
900144b6:	4619      	movge	r1, r3
900144b8:	2d00      	cmp	r5, #0
900144ba:	f8ad 200e 	strh.w	r2, [sp, #14]
900144be:	f8ad 1008 	strh.w	r1, [sp, #8]
900144c2:	f04f 0100 	mov.w	r1, #0
900144c6:	bfb8      	it	lt
900144c8:	426d      	neglt	r5, r5
900144ca:	f8ad 100a 	strh.w	r1, [sp, #10]
900144ce:	f8ad 500c 	strh.w	r5, [sp, #12]
900144d2:	a902      	add	r1, sp, #8
900144d4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
900144d8:	f007 fc98 	bl	9001be0c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>
900144dc:	b005      	add	sp, #20
900144de:	bd30      	pop	{r4, r5, pc}
900144e0:	8921      	ldrh	r1, [r4, #8]
900144e2:	2200      	movs	r2, #0
900144e4:	f9b4 3062 	ldrsh.w	r3, [r4, #98]	@ 0x62
900144e8:	1a09      	subs	r1, r1, r0
900144ea:	f9b4 50bc 	ldrsh.w	r5, [r4, #188]	@ 0xbc
900144ee:	9300      	str	r3, [sp, #0]
900144f0:	4603      	mov	r3, r0
900144f2:	b209      	sxth	r1, r1
900144f4:	f104 00b8 	add.w	r0, r4, #184	@ 0xb8
900144f8:	f7ff ff75 	bl	900143e6 <_ZN8touchgfx8Drawable11setPositionEssss>
900144fc:	f9b4 30bc 	ldrsh.w	r3, [r4, #188]	@ 0xbc
90014500:	e7d2      	b.n	900144a8 <_ZN8touchgfx11BoxProgress8setValueEi+0x5c>
90014502:	2200      	movs	r2, #0
90014504:	f9b4 3060 	ldrsh.w	r3, [r4, #96]	@ 0x60
90014508:	9000      	str	r0, [sp, #0]
9001450a:	f104 00b8 	add.w	r0, r4, #184	@ 0xb8
9001450e:	4611      	mov	r1, r2
90014510:	f9b4 50c2 	ldrsh.w	r5, [r4, #194]	@ 0xc2
90014514:	f7ff ff67 	bl	900143e6 <_ZN8touchgfx8Drawable11setPositionEssss>
90014518:	f9b4 30c2 	ldrsh.w	r3, [r4, #194]	@ 0xc2
9001451c:	2100      	movs	r1, #0
9001451e:	429d      	cmp	r5, r3
90014520:	f9b4 20c0 	ldrsh.w	r2, [r4, #192]	@ 0xc0
90014524:	f8ad 1008 	strh.w	r1, [sp, #8]
90014528:	4629      	mov	r1, r5
9001452a:	eba5 0503 	sub.w	r5, r5, r3
9001452e:	bfa8      	it	ge
90014530:	4619      	movge	r1, r3
90014532:	f8ad 200c 	strh.w	r2, [sp, #12]
90014536:	2d00      	cmp	r5, #0
90014538:	f8ad 100a 	strh.w	r1, [sp, #10]
9001453c:	bfb8      	it	lt
9001453e:	426d      	neglt	r5, r5
90014540:	f8ad 500e 	strh.w	r5, [sp, #14]
90014544:	e7c5      	b.n	900144d2 <_ZN8touchgfx11BoxProgress8setValueEi+0x86>
90014546:	f8b4 2062 	ldrh.w	r2, [r4, #98]	@ 0x62
9001454a:	2100      	movs	r1, #0
9001454c:	f9b4 3060 	ldrsh.w	r3, [r4, #96]	@ 0x60
90014550:	1a12      	subs	r2, r2, r0
90014552:	9000      	str	r0, [sp, #0]
90014554:	f104 00b8 	add.w	r0, r4, #184	@ 0xb8
90014558:	f9b4 50be 	ldrsh.w	r5, [r4, #190]	@ 0xbe
9001455c:	b212      	sxth	r2, r2
9001455e:	f7ff ff42 	bl	900143e6 <_ZN8touchgfx8Drawable11setPositionEssss>
90014562:	f9b4 30be 	ldrsh.w	r3, [r4, #190]	@ 0xbe
90014566:	e7d9      	b.n	9001451c <_ZN8touchgfx11BoxProgress8setValueEi+0xd0>

90014568 <_ZN8touchgfx11BoxProgressC1Ev>:
90014568:	b510      	push	{r4, lr}
9001456a:	4604      	mov	r4, r0
9001456c:	f000 f85a 	bl	90014624 <_ZN8touchgfx25AbstractDirectionProgressC1Ev>
90014570:	2201      	movs	r2, #1
90014572:	4b17      	ldr	r3, [pc, #92]	@ (900145d0 <_ZN8touchgfx11BoxProgressC1Ev+0x68>)
90014574:	f104 0058 	add.w	r0, r4, #88	@ 0x58
90014578:	f104 01b8 	add.w	r1, r4, #184	@ 0xb8
9001457c:	f884 20dd 	strb.w	r2, [r4, #221]	@ 0xdd
90014580:	4a14      	ldr	r2, [pc, #80]	@ (900145d4 <_ZN8touchgfx11BoxProgressC1Ev+0x6c>)
90014582:	6023      	str	r3, [r4, #0]
90014584:	2300      	movs	r3, #0
90014586:	f8c4 20b8 	str.w	r2, [r4, #184]	@ 0xb8
9001458a:	22ff      	movs	r2, #255	@ 0xff
9001458c:	f8a4 30bc 	strh.w	r3, [r4, #188]	@ 0xbc
90014590:	f8a4 30be 	strh.w	r3, [r4, #190]	@ 0xbe
90014594:	f8a4 30c0 	strh.w	r3, [r4, #192]	@ 0xc0
90014598:	f8a4 30c2 	strh.w	r3, [r4, #194]	@ 0xc2
9001459c:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
900145a0:	f8a4 30c6 	strh.w	r3, [r4, #198]	@ 0xc6
900145a4:	f8a4 30c8 	strh.w	r3, [r4, #200]	@ 0xc8
900145a8:	f8a4 30ca 	strh.w	r3, [r4, #202]	@ 0xca
900145ac:	f8c4 30d4 	str.w	r3, [r4, #212]	@ 0xd4
900145b0:	f8a4 30d8 	strh.w	r3, [r4, #216]	@ 0xd8
900145b4:	f8a4 30da 	strh.w	r3, [r4, #218]	@ 0xda
900145b8:	f884 30dc 	strb.w	r3, [r4, #220]	@ 0xdc
900145bc:	f884 20de 	strb.w	r2, [r4, #222]	@ 0xde
900145c0:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
900145c4:	e9c4 3333 	strd	r3, r3, [r4, #204]	@ 0xcc
900145c8:	f000 fa08 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
900145cc:	4620      	mov	r0, r4
900145ce:	bd10      	pop	{r4, pc}
900145d0:	9002fc18 	.word	0x9002fc18
900145d4:	90030394 	.word	0x90030394

900145d8 <_ZNK8touchgfx25AbstractDirectionProgress12getDirectionEv>:
900145d8:	f890 00b4 	ldrb.w	r0, [r0, #180]	@ 0xb4
900145dc:	4770      	bx	lr

900145de <_ZN8touchgfx25AbstractDirectionProgressD1Ev>:
900145de:	4770      	bx	lr

900145e0 <_ZN8touchgfx25AbstractDirectionProgressD0Ev>:
900145e0:	b510      	push	{r4, lr}
900145e2:	4604      	mov	r4, r0
900145e4:	21b8      	movs	r1, #184	@ 0xb8
900145e6:	f016 ff8e 	bl	9002b506 <_ZdlPvj>
900145ea:	4620      	mov	r0, r4
900145ec:	bd10      	pop	{r4, pc}

900145ee <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE.part.0>:
900145ee:	b570      	push	{r4, r5, r6, lr}
900145f0:	4604      	mov	r4, r0
900145f2:	f880 10b4 	strb.w	r1, [r0, #180]	@ 0xb4
900145f6:	3058      	adds	r0, #88	@ 0x58
900145f8:	f007 fbb7 	bl	9001bd6a <_ZNK8touchgfx8Drawable10invalidateEv>
900145fc:	6823      	ldr	r3, [r4, #0]
900145fe:	4620      	mov	r0, r4
90014600:	f8d3 50b0 	ldr.w	r5, [r3, #176]	@ 0xb0
90014604:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
90014608:	4798      	blx	r3
9001460a:	462b      	mov	r3, r5
9001460c:	4601      	mov	r1, r0
9001460e:	4620      	mov	r0, r4
90014610:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014614:	4718      	bx	r3

90014616 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>:
90014616:	f890 30b4 	ldrb.w	r3, [r0, #180]	@ 0xb4
9001461a:	428b      	cmp	r3, r1
9001461c:	d001      	beq.n	90014622 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE+0xc>
9001461e:	f7ff bfe6 	b.w	900145ee <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE.part.0>
90014622:	4770      	bx	lr

90014624 <_ZN8touchgfx25AbstractDirectionProgressC1Ev>:
90014624:	b510      	push	{r4, lr}
90014626:	4604      	mov	r4, r0
90014628:	f000 f978 	bl	9001491c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
9001462c:	4b03      	ldr	r3, [pc, #12]	@ (9001463c <_ZN8touchgfx25AbstractDirectionProgressC1Ev+0x18>)
9001462e:	4620      	mov	r0, r4
90014630:	6023      	str	r3, [r4, #0]
90014632:	2300      	movs	r3, #0
90014634:	f884 30b4 	strb.w	r3, [r4, #180]	@ 0xb4
90014638:	bd10      	pop	{r4, pc}
9001463a:	bf00      	nop
9001463c:	9002fcfc 	.word	0x9002fcfc

90014640 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
90014640:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	@ 0x5c
90014644:	4770      	bx	lr

90014646 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
90014646:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	@ 0x5e
9001464a:	4770      	bx	lr

9001464c <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
9001464c:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	@ 0x60
90014650:	4770      	bx	lr

90014652 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
90014652:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	@ 0x62
90014656:	4770      	bx	lr

90014658 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
90014658:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001465a:	461e      	mov	r6, r3
9001465c:	6803      	ldr	r3, [r0, #0]
9001465e:	460f      	mov	r7, r1
90014660:	4604      	mov	r4, r0
90014662:	4615      	mov	r5, r2
90014664:	e9c0 1221 	strd	r1, r2, [r0, #132]	@ 0x84
90014668:	f8d0 108c 	ldr.w	r1, [r0, #140]	@ 0x8c
9001466c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
90014670:	4798      	blx	r3
90014672:	b93e      	cbnz	r6, 90014684 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
90014674:	1bed      	subs	r5, r5, r7
90014676:	f8a4 5090 	strh.w	r5, [r4, #144]	@ 0x90
9001467a:	f8bd 3018 	ldrh.w	r3, [sp, #24]
9001467e:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
90014682:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90014684:	f8a4 6090 	strh.w	r6, [r4, #144]	@ 0x90
90014688:	e7f7      	b.n	9001467a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

9001468a <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
9001468a:	b510      	push	{r4, lr}
9001468c:	f8d0 4084 	ldr.w	r4, [r0, #132]	@ 0x84
90014690:	600c      	str	r4, [r1, #0]
90014692:	f8d0 1088 	ldr.w	r1, [r0, #136]	@ 0x88
90014696:	6011      	str	r1, [r2, #0]
90014698:	f8b0 2090 	ldrh.w	r2, [r0, #144]	@ 0x90
9001469c:	801a      	strh	r2, [r3, #0]
9001469e:	9b02      	ldr	r3, [sp, #8]
900146a0:	f8b0 2092 	ldrh.w	r2, [r0, #146]	@ 0x92
900146a4:	801a      	strh	r2, [r3, #0]
900146a6:	bd10      	pop	{r4, pc}

900146a8 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
900146a8:	b510      	push	{r4, lr}
900146aa:	f8d0 4084 	ldr.w	r4, [r0, #132]	@ 0x84
900146ae:	600c      	str	r4, [r1, #0]
900146b0:	f8d0 1088 	ldr.w	r1, [r0, #136]	@ 0x88
900146b4:	6011      	str	r1, [r2, #0]
900146b6:	f8b0 2090 	ldrh.w	r2, [r0, #144]	@ 0x90
900146ba:	801a      	strh	r2, [r3, #0]
900146bc:	bd10      	pop	{r4, pc}

900146be <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
900146be:	f8d0 3084 	ldr.w	r3, [r0, #132]	@ 0x84
900146c2:	600b      	str	r3, [r1, #0]
900146c4:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
900146c8:	6013      	str	r3, [r2, #0]
900146ca:	4770      	bx	lr

900146cc <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
900146cc:	f8c0 1094 	str.w	r1, [r0, #148]	@ 0x94
900146d0:	4770      	bx	lr

900146d2 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
900146d2:	f8d0 008c 	ldr.w	r0, [r0, #140]	@ 0x8c
900146d6:	4770      	bx	lr

900146d8 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
900146d8:	f880 1054 	strb.w	r1, [r0, #84]	@ 0x54
900146dc:	4770      	bx	lr

900146de <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
900146de:	f890 0054 	ldrb.w	r0, [r0, #84]	@ 0x54
900146e2:	4770      	bx	lr

900146e4 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
900146e4:	4770      	bx	lr

900146e6 <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
900146e6:	b510      	push	{r4, lr}
900146e8:	4604      	mov	r4, r0
900146ea:	21b4      	movs	r1, #180	@ 0xb4
900146ec:	f016 ff0b 	bl	9002b506 <_ZdlPvj>
900146f0:	4620      	mov	r0, r4
900146f2:	bd10      	pop	{r4, pc}

900146f4 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
900146f4:	b570      	push	{r4, r5, r6, lr}
900146f6:	f8d0 5084 	ldr.w	r5, [r0, #132]	@ 0x84
900146fa:	4604      	mov	r4, r0
900146fc:	4616      	mov	r6, r2
900146fe:	428d      	cmp	r5, r1
90014700:	bfb8      	it	lt
90014702:	460d      	movlt	r5, r1
90014704:	f8d0 1088 	ldr.w	r1, [r0, #136]	@ 0x88
90014708:	428d      	cmp	r5, r1
9001470a:	bfa8      	it	ge
9001470c:	460d      	movge	r5, r1
9001470e:	b99a      	cbnz	r2, 90014738 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
90014710:	6803      	ldr	r3, [r0, #0]
90014712:	4629      	mov	r1, r5
90014714:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
90014718:	4798      	blx	r3
9001471a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9001471e:	b368      	cbz	r0, 9001477c <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
90014720:	6803      	ldr	r3, [r0, #0]
90014722:	68db      	ldr	r3, [r3, #12]
90014724:	4798      	blx	r3
90014726:	b348      	cbz	r0, 9001477c <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
90014728:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9001472c:	4621      	mov	r1, r4
9001472e:	6803      	ldr	r3, [r0, #0]
90014730:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014734:	689b      	ldr	r3, [r3, #8]
90014736:	4718      	bx	r3
90014738:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
9001473c:	2b00      	cmp	r3, #0
9001473e:	dd08      	ble.n	90014752 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
90014740:	f006 fa5c 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
90014744:	4621      	mov	r1, r4
90014746:	3004      	adds	r0, #4
90014748:	f006 faa5 	bl	9001ac96 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
9001474c:	2300      	movs	r3, #0
9001474e:	f884 3098 	strb.w	r3, [r4, #152]	@ 0x98
90014752:	6823      	ldr	r3, [r4, #0]
90014754:	4620      	mov	r0, r4
90014756:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
9001475a:	4798      	blx	r3
9001475c:	2300      	movs	r3, #0
9001475e:	f8c4 60a4 	str.w	r6, [r4, #164]	@ 0xa4
90014762:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
90014766:	e9c4 0527 	strd	r0, r5, [r4, #156]	@ 0x9c
9001476a:	f006 fa47 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
9001476e:	4621      	mov	r1, r4
90014770:	3004      	adds	r0, #4
90014772:	f006 fb39 	bl	9001ade8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
90014776:	2301      	movs	r3, #1
90014778:	f884 3098 	strb.w	r3, [r4, #152]	@ 0x98
9001477c:	bd70      	pop	{r4, r5, r6, pc}

9001477e <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
9001477e:	b510      	push	{r4, lr}
90014780:	f8d0 3084 	ldr.w	r3, [r0, #132]	@ 0x84
90014784:	4604      	mov	r4, r0
90014786:	4299      	cmp	r1, r3
90014788:	bfb8      	it	lt
9001478a:	4619      	movlt	r1, r3
9001478c:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
90014790:	4299      	cmp	r1, r3
90014792:	bfa8      	it	ge
90014794:	4619      	movge	r1, r3
90014796:	f8d0 308c 	ldr.w	r3, [r0, #140]	@ 0x8c
9001479a:	428b      	cmp	r3, r1
9001479c:	d010      	beq.n	900147c0 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
9001479e:	f8c0 108c 	str.w	r1, [r0, #140]	@ 0x8c
900147a2:	f8d0 00ac 	ldr.w	r0, [r0, #172]	@ 0xac
900147a6:	b158      	cbz	r0, 900147c0 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
900147a8:	6803      	ldr	r3, [r0, #0]
900147aa:	68db      	ldr	r3, [r3, #12]
900147ac:	4798      	blx	r3
900147ae:	b138      	cbz	r0, 900147c0 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
900147b0:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
900147b4:	4621      	mov	r1, r4
900147b6:	6803      	ldr	r3, [r0, #0]
900147b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900147bc:	689b      	ldr	r3, [r3, #8]
900147be:	4718      	bx	r3
900147c0:	bd10      	pop	{r4, pc}

900147c2 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
900147c2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
900147c4:	4604      	mov	r4, r0
900147c6:	460d      	mov	r5, r1
900147c8:	b1a9      	cbz	r1, 900147f6 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
900147ca:	f8b0 6092 	ldrh.w	r6, [r0, #146]	@ 0x92
900147ce:	ab01      	add	r3, sp, #4
900147d0:	f8b4 1090 	ldrh.w	r1, [r4, #144]	@ 0x90
900147d4:	f8d4 708c 	ldr.w	r7, [r4, #140]	@ 0x8c
900147d8:	1b89      	subs	r1, r1, r6
900147da:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	@ 0x84
900147de:	1a12      	subs	r2, r2, r0
900147e0:	1a38      	subs	r0, r7, r0
900147e2:	f007 fc8c 	bl	9001c0fe <_ZN8touchgfx6muldivElllRl>
900147e6:	4629      	mov	r1, r5
900147e8:	ab01      	add	r3, sp, #4
900147ea:	f8b4 2090 	ldrh.w	r2, [r4, #144]	@ 0x90
900147ee:	4430      	add	r0, r6
900147f0:	f007 fc85 	bl	9001c0fe <_ZN8touchgfx6muldivElllRl>
900147f4:	b285      	uxth	r5, r0
900147f6:	4628      	mov	r0, r5
900147f8:	b003      	add	sp, #12
900147fa:	bdf0      	pop	{r4, r5, r6, r7, pc}

900147fc <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
900147fc:	b570      	push	{r4, r5, r6, lr}
900147fe:	f890 3098 	ldrb.w	r3, [r0, #152]	@ 0x98
90014802:	4604      	mov	r4, r0
90014804:	2b00      	cmp	r3, #0
90014806:	d035      	beq.n	90014874 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
90014808:	f8d0 00a8 	ldr.w	r0, [r0, #168]	@ 0xa8
9001480c:	2100      	movs	r1, #0
9001480e:	f8d4 5094 	ldr.w	r5, [r4, #148]	@ 0x94
90014812:	3001      	adds	r0, #1
90014814:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	@ 0x9c
90014818:	f8c4 00a8 	str.w	r0, [r4, #168]	@ 0xa8
9001481c:	b280      	uxth	r0, r0
9001481e:	1ad2      	subs	r2, r2, r3
90014820:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
90014824:	b212      	sxth	r2, r2
90014826:	47a8      	blx	r5
90014828:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9001482c:	6823      	ldr	r3, [r4, #0]
9001482e:	4401      	add	r1, r0
90014830:	4620      	mov	r0, r4
90014832:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
90014836:	4798      	blx	r3
90014838:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	@ 0xa4
9001483c:	429a      	cmp	r2, r3
9001483e:	db19      	blt.n	90014874 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
90014840:	2500      	movs	r5, #0
90014842:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
90014846:	f006 f9d9 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
9001484a:	4621      	mov	r1, r4
9001484c:	3004      	adds	r0, #4
9001484e:	f006 fa22 	bl	9001ac96 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
90014852:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
90014856:	f884 5098 	strb.w	r5, [r4, #152]	@ 0x98
9001485a:	b158      	cbz	r0, 90014874 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
9001485c:	6803      	ldr	r3, [r0, #0]
9001485e:	68db      	ldr	r3, [r3, #12]
90014860:	4798      	blx	r3
90014862:	b138      	cbz	r0, 90014874 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
90014864:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
90014868:	4621      	mov	r1, r4
9001486a:	6803      	ldr	r3, [r0, #0]
9001486c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014870:	689b      	ldr	r3, [r3, #8]
90014872:	4718      	bx	r3
90014874:	bd70      	pop	{r4, r5, r6, pc}
	...

90014878 <_ZN8touchgfx8DrawableC1Ev>:
90014878:	4a0a      	ldr	r2, [pc, #40]	@ (900148a4 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
9001487a:	6002      	str	r2, [r0, #0]
9001487c:	2200      	movs	r2, #0
9001487e:	8082      	strh	r2, [r0, #4]
90014880:	80c2      	strh	r2, [r0, #6]
90014882:	8102      	strh	r2, [r0, #8]
90014884:	8142      	strh	r2, [r0, #10]
90014886:	8182      	strh	r2, [r0, #12]
90014888:	81c2      	strh	r2, [r0, #14]
9001488a:	8202      	strh	r2, [r0, #16]
9001488c:	8242      	strh	r2, [r0, #18]
9001488e:	61c2      	str	r2, [r0, #28]
90014890:	8402      	strh	r2, [r0, #32]
90014892:	8442      	strh	r2, [r0, #34]	@ 0x22
90014894:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90014898:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001489c:	2201      	movs	r2, #1
9001489e:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
900148a2:	4770      	bx	lr
900148a4:	9003068c 	.word	0x9003068c

900148a8 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
900148a8:	b570      	push	{r4, r5, r6, lr}
900148aa:	6803      	ldr	r3, [r0, #0]
900148ac:	4604      	mov	r4, r0
900148ae:	4615      	mov	r5, r2
900148b0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900148b2:	4798      	blx	r3
900148b4:	6823      	ldr	r3, [r4, #0]
900148b6:	4629      	mov	r1, r5
900148b8:	4620      	mov	r0, r4
900148ba:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900148bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900148c0:	4718      	bx	r3

900148c2 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
900148c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900148c6:	4604      	mov	r4, r0
900148c8:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
900148cc:	4698      	mov	r8, r3
900148ce:	460e      	mov	r6, r1
900148d0:	4615      	mov	r5, r2
900148d2:	f8a4 105c 	strh.w	r1, [r4, #92]	@ 0x5c
900148d6:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
900148da:	4619      	mov	r1, r3
900148dc:	463a      	mov	r2, r7
900148de:	3058      	adds	r0, #88	@ 0x58
900148e0:	f7ff ffe2 	bl	900148a8 <_ZN8touchgfx8Drawable14setWidthHeightEss>
900148e4:	4446      	add	r6, r8
900148e6:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
900148ea:	443d      	add	r5, r7
900148ec:	42b3      	cmp	r3, r6
900148ee:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900148f2:	bfb8      	it	lt
900148f4:	8126      	strhlt	r6, [r4, #8]
900148f6:	42ab      	cmp	r3, r5
900148f8:	bfb8      	it	lt
900148fa:	8165      	strhlt	r5, [r4, #10]
900148fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90014900 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
90014900:	b510      	push	{r4, lr}
90014902:	4604      	mov	r4, r0
90014904:	302c      	adds	r0, #44	@ 0x2c
90014906:	f003 fd9c 	bl	90018442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9001490a:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	@ 0x36
9001490e:	4620      	mov	r0, r4
90014910:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	@ 0x34
90014914:	f7ff ffc8 	bl	900148a8 <_ZN8touchgfx8Drawable14setWidthHeightEss>
90014918:	bd10      	pop	{r4, pc}
	...

9001491c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
9001491c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9001491e:	4604      	mov	r4, r0
90014920:	2500      	movs	r5, #0
90014922:	f7ff ffa9 	bl	90014878 <_ZN8touchgfx8DrawableC1Ev>
90014926:	4b24      	ldr	r3, [pc, #144]	@ (900149b8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
90014928:	4626      	mov	r6, r4
9001492a:	f64f 77ff 	movw	r7, #65535	@ 0xffff
9001492e:	2226      	movs	r2, #38	@ 0x26
90014930:	4629      	mov	r1, r5
90014932:	62a5      	str	r5, [r4, #40]	@ 0x28
90014934:	f846 3b2c 	str.w	r3, [r6], #44
90014938:	4630      	mov	r0, r6
9001493a:	f8ad 7004 	strh.w	r7, [sp, #4]
9001493e:	f017 fa5b 	bl	9002bdf8 <memset>
90014942:	4630      	mov	r0, r6
90014944:	f7ff ff98 	bl	90014878 <_ZN8touchgfx8DrawableC1Ev>
90014948:	a902      	add	r1, sp, #8
9001494a:	4b1c      	ldr	r3, [pc, #112]	@ (900149bc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
9001494c:	4630      	mov	r0, r6
9001494e:	f884 7054 	strb.w	r7, [r4, #84]	@ 0x54
90014952:	f104 0758 	add.w	r7, r4, #88	@ 0x58
90014956:	62e3      	str	r3, [r4, #44]	@ 0x2c
90014958:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
9001495c:	f8a4 3052 	strh.w	r3, [r4, #82]	@ 0x52
90014960:	f003 fd6f 	bl	90018442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90014964:	4638      	mov	r0, r7
90014966:	f7ff ff87 	bl	90014878 <_ZN8touchgfx8DrawableC1Ev>
9001496a:	4b15      	ldr	r3, [pc, #84]	@ (900149c0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
9001496c:	4629      	mov	r1, r5
9001496e:	4630      	mov	r0, r6
90014970:	65a3      	str	r3, [r4, #88]	@ 0x58
90014972:	2364      	movs	r3, #100	@ 0x64
90014974:	f884 5098 	strb.w	r5, [r4, #152]	@ 0x98
90014978:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
9001497c:	e9c4 3522 	strd	r3, r5, [r4, #136]	@ 0x88
90014980:	4b10      	ldr	r3, [pc, #64]	@ (900149c4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
90014982:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
90014986:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
9001498a:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
9001498e:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
90014992:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
90014996:	f7ee ff71 	bl	9000387c <_ZN8touchgfx8Drawable4setXEs>
9001499a:	4629      	mov	r1, r5
9001499c:	4630      	mov	r0, r6
9001499e:	f7ee ff6f 	bl	90003880 <_ZN8touchgfx8Drawable4setYEs>
900149a2:	4631      	mov	r1, r6
900149a4:	4620      	mov	r0, r4
900149a6:	f000 f819 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
900149aa:	4620      	mov	r0, r4
900149ac:	4639      	mov	r1, r7
900149ae:	f000 f815 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
900149b2:	4620      	mov	r0, r4
900149b4:	b003      	add	sp, #12
900149b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
900149b8:	9002fdd8 	.word	0x9002fdd8
900149bc:	900305c4 	.word	0x900305c4
900149c0:	9002feac 	.word	0x9002feac
900149c4:	9001c8e9 	.word	0x9001c8e9

900149c8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
900149c8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
900149ca:	2000      	movs	r0, #0
900149cc:	b12b      	cbz	r3, 900149da <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
900149ce:	b920      	cbnz	r0, 900149da <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
900149d0:	1a5a      	subs	r2, r3, r1
900149d2:	699b      	ldr	r3, [r3, #24]
900149d4:	4250      	negs	r0, r2
900149d6:	4150      	adcs	r0, r2
900149d8:	e7f8      	b.n	900149cc <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
900149da:	4770      	bx	lr

900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>:
900149dc:	2300      	movs	r3, #0
900149de:	6148      	str	r0, [r1, #20]
900149e0:	618b      	str	r3, [r1, #24]
900149e2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
900149e4:	b913      	cbnz	r3, 900149ec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
900149e6:	6281      	str	r1, [r0, #40]	@ 0x28
900149e8:	4770      	bx	lr
900149ea:	4613      	mov	r3, r2
900149ec:	699a      	ldr	r2, [r3, #24]
900149ee:	2a00      	cmp	r2, #0
900149f0:	d1fb      	bne.n	900149ea <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
900149f2:	6199      	str	r1, [r3, #24]
900149f4:	4770      	bx	lr

900149f6 <_ZN8touchgfx9Container9removeAllEv>:
900149f6:	2200      	movs	r2, #0
900149f8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
900149fa:	b123      	cbz	r3, 90014a06 <_ZN8touchgfx9Container9removeAllEv+0x10>
900149fc:	6999      	ldr	r1, [r3, #24]
900149fe:	6281      	str	r1, [r0, #40]	@ 0x28
90014a00:	e9c3 2205 	strd	r2, r2, [r3, #20]
90014a04:	e7f8      	b.n	900149f8 <_ZN8touchgfx9Container9removeAllEv+0x2>
90014a06:	4770      	bx	lr

90014a08 <_ZN8touchgfx9Container6unlinkEv>:
90014a08:	2300      	movs	r3, #0
90014a0a:	6283      	str	r3, [r0, #40]	@ 0x28
90014a0c:	4770      	bx	lr

90014a0e <_ZNK8touchgfx9Container12getSolidRectEv>:
90014a0e:	2200      	movs	r2, #0
90014a10:	8002      	strh	r2, [r0, #0]
90014a12:	8042      	strh	r2, [r0, #2]
90014a14:	8082      	strh	r2, [r0, #4]
90014a16:	80c2      	strh	r2, [r0, #6]
90014a18:	4770      	bx	lr

90014a1a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
90014a1a:	b570      	push	{r4, r5, r6, lr}
90014a1c:	460d      	mov	r5, r1
90014a1e:	4616      	mov	r6, r2
90014a20:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90014a22:	b13c      	cbz	r4, 90014a34 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90014a24:	6823      	ldr	r3, [r4, #0]
90014a26:	4620      	mov	r0, r4
90014a28:	4632      	mov	r2, r6
90014a2a:	4629      	mov	r1, r5
90014a2c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90014a2e:	4798      	blx	r3
90014a30:	69a4      	ldr	r4, [r4, #24]
90014a32:	e7f6      	b.n	90014a22 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
90014a34:	bd70      	pop	{r4, r5, r6, pc}

90014a36 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
90014a36:	b538      	push	{r3, r4, r5, lr}
90014a38:	460d      	mov	r5, r1
90014a3a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90014a3c:	b134      	cbz	r4, 90014a4c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
90014a3e:	682b      	ldr	r3, [r5, #0]
90014a40:	4621      	mov	r1, r4
90014a42:	4628      	mov	r0, r5
90014a44:	689b      	ldr	r3, [r3, #8]
90014a46:	4798      	blx	r3
90014a48:	69a4      	ldr	r4, [r4, #24]
90014a4a:	e7f7      	b.n	90014a3c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
90014a4c:	bd38      	pop	{r3, r4, r5, pc}

90014a4e <_ZN8touchgfx9ContainerD1Ev>:
90014a4e:	4770      	bx	lr

90014a50 <_ZN8touchgfx9ContainerD0Ev>:
90014a50:	b510      	push	{r4, lr}
90014a52:	4604      	mov	r4, r0
90014a54:	212c      	movs	r1, #44	@ 0x2c
90014a56:	f016 fd56 	bl	9002b506 <_ZdlPvj>
90014a5a:	4620      	mov	r0, r4
90014a5c:	bd10      	pop	{r4, pc}

90014a5e <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
90014a5e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90014a60:	b19b      	cbz	r3, 90014a8a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90014a62:	428b      	cmp	r3, r1
90014a64:	d109      	bne.n	90014a7a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
90014a66:	699a      	ldr	r2, [r3, #24]
90014a68:	2100      	movs	r1, #0
90014a6a:	6159      	str	r1, [r3, #20]
90014a6c:	6282      	str	r2, [r0, #40]	@ 0x28
90014a6e:	b902      	cbnz	r2, 90014a72 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
90014a70:	4770      	bx	lr
90014a72:	6199      	str	r1, [r3, #24]
90014a74:	4770      	bx	lr
90014a76:	4613      	mov	r3, r2
90014a78:	b13a      	cbz	r2, 90014a8a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90014a7a:	699a      	ldr	r2, [r3, #24]
90014a7c:	428a      	cmp	r2, r1
90014a7e:	d1fa      	bne.n	90014a76 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
90014a80:	698a      	ldr	r2, [r1, #24]
90014a82:	619a      	str	r2, [r3, #24]
90014a84:	2300      	movs	r3, #0
90014a86:	e9c1 3305 	strd	r3, r3, [r1, #20]
90014a8a:	4770      	bx	lr

90014a8c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
90014a8c:	b410      	push	{r4}
90014a8e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90014a90:	4604      	mov	r4, r0
90014a92:	b92b      	cbnz	r3, 90014aa0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
90014a94:	6803      	ldr	r3, [r0, #0]
90014a96:	4611      	mov	r1, r2
90014a98:	f85d 4b04 	ldr.w	r4, [sp], #4
90014a9c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90014a9e:	4718      	bx	r3
90014aa0:	b941      	cbnz	r1, 90014ab4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
90014aa2:	6193      	str	r3, [r2, #24]
90014aa4:	6282      	str	r2, [r0, #40]	@ 0x28
90014aa6:	6154      	str	r4, [r2, #20]
90014aa8:	f85d 4b04 	ldr.w	r4, [sp], #4
90014aac:	4770      	bx	lr
90014aae:	4603      	mov	r3, r0
90014ab0:	2800      	cmp	r0, #0
90014ab2:	d0f9      	beq.n	90014aa8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90014ab4:	4299      	cmp	r1, r3
90014ab6:	6998      	ldr	r0, [r3, #24]
90014ab8:	d1f9      	bne.n	90014aae <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
90014aba:	6190      	str	r0, [r2, #24]
90014abc:	618a      	str	r2, [r1, #24]
90014abe:	e7f2      	b.n	90014aa6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90014ac0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90014ac0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014ac4:	461f      	mov	r7, r3
90014ac6:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90014aca:	460d      	mov	r5, r1
90014acc:	4616      	mov	r6, r2
90014ace:	b103      	cbz	r3, 90014ad2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90014ad0:	6038      	str	r0, [r7, #0]
90014ad2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90014ad4:	b314      	cbz	r4, 90014b1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90014ad6:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90014ada:	b1eb      	cbz	r3, 90014b18 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90014adc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90014ae0:	428d      	cmp	r5, r1
90014ae2:	db19      	blt.n	90014b18 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90014ae4:	b289      	uxth	r1, r1
90014ae6:	8923      	ldrh	r3, [r4, #8]
90014ae8:	440b      	add	r3, r1
90014aea:	b21b      	sxth	r3, r3
90014aec:	429d      	cmp	r5, r3
90014aee:	da13      	bge.n	90014b18 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90014af0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90014af4:	4296      	cmp	r6, r2
90014af6:	db0f      	blt.n	90014b18 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90014af8:	b292      	uxth	r2, r2
90014afa:	8963      	ldrh	r3, [r4, #10]
90014afc:	4413      	add	r3, r2
90014afe:	b21b      	sxth	r3, r3
90014b00:	429e      	cmp	r6, r3
90014b02:	da09      	bge.n	90014b18 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90014b04:	6823      	ldr	r3, [r4, #0]
90014b06:	1ab2      	subs	r2, r6, r2
90014b08:	1a69      	subs	r1, r5, r1
90014b0a:	4620      	mov	r0, r4
90014b0c:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
90014b10:	b212      	sxth	r2, r2
90014b12:	463b      	mov	r3, r7
90014b14:	b209      	sxth	r1, r1
90014b16:	47c0      	blx	r8
90014b18:	69a4      	ldr	r4, [r4, #24]
90014b1a:	e7db      	b.n	90014ad4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
90014b1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90014b20 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
90014b20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014b24:	4c6d      	ldr	r4, [pc, #436]	@ (90014cdc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
90014b26:	b0a1      	sub	sp, #132	@ 0x84
90014b28:	4606      	mov	r6, r0
90014b2a:	6824      	ldr	r4, [r4, #0]
90014b2c:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90014b2e:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
90014b32:	2400      	movs	r4, #0
90014b34:	9303      	str	r3, [sp, #12]
90014b36:	802c      	strh	r4, [r5, #0]
90014b38:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
90014b3a:	802c      	strh	r4, [r5, #0]
90014b3c:	601c      	str	r4, [r3, #0]
90014b3e:	e9cd 1201 	strd	r1, r2, [sp, #4]
90014b42:	f7ff ffbd 	bl	90014ac0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90014b46:	f1b9 0f03 	cmp.w	r9, #3
90014b4a:	f340 80c1 	ble.w	90014cd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
90014b4e:	4631      	mov	r1, r6
90014b50:	a80c      	add	r0, sp, #48	@ 0x30
90014b52:	f007 f9a5 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90014b56:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
90014b5a:	9306      	str	r3, [sp, #24]
90014b5c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90014b60:	9307      	str	r3, [sp, #28]
90014b62:	9b03      	ldr	r3, [sp, #12]
90014b64:	f8d3 a000 	ldr.w	sl, [r3]
90014b68:	f1ba 0f00 	cmp.w	sl, #0
90014b6c:	f000 80b3 	beq.w	90014cd6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90014b70:	4651      	mov	r1, sl
90014b72:	a810      	add	r0, sp, #64	@ 0x40
90014b74:	f007 f994 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90014b78:	2002      	movs	r0, #2
90014b7a:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
90014b7e:	9b01      	ldr	r3, [sp, #4]
90014b80:	9a06      	ldr	r2, [sp, #24]
90014b82:	fb91 f1f0 	sdiv	r1, r1, r0
90014b86:	189d      	adds	r5, r3, r2
90014b88:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
90014b8c:	9a07      	ldr	r2, [sp, #28]
90014b8e:	4419      	add	r1, r3
90014b90:	9b02      	ldr	r3, [sp, #8]
90014b92:	4413      	add	r3, r2
90014b94:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
90014b98:	1a6d      	subs	r5, r5, r1
90014b9a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
90014b9e:	fb92 f2f0 	sdiv	r2, r2, r0
90014ba2:	440a      	add	r2, r1
90014ba4:	1a9b      	subs	r3, r3, r2
90014ba6:	435b      	muls	r3, r3
90014ba8:	fb05 3505 	mla	r5, r5, r5, r3
90014bac:	4f4c      	ldr	r7, [pc, #304]	@ (90014ce0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90014bae:	ac10      	add	r4, sp, #64	@ 0x40
90014bb0:	f1b9 0f0c 	cmp.w	r9, #12
90014bb4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90014bb6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90014bb8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90014bba:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90014bbc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90014bbe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90014bc0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90014bc4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90014bc8:	f04f 0303 	mov.w	r3, #3
90014bcc:	bfd8      	it	le
90014bce:	f109 32ff 	addle.w	r2, r9, #4294967295
90014bd2:	f04f 0400 	mov.w	r4, #0
90014bd6:	f8cd 9000 	str.w	r9, [sp]
90014bda:	bfcc      	ite	gt
90014bdc:	4698      	movgt	r8, r3
90014bde:	fb92 f8f3 	sdivle	r8, r2, r3
90014be2:	1c63      	adds	r3, r4, #1
90014be4:	aa10      	add	r2, sp, #64	@ 0x40
90014be6:	f004 0401 	and.w	r4, r4, #1
90014bea:	f04f 0b00 	mov.w	fp, #0
90014bee:	9308      	str	r3, [sp, #32]
90014bf0:	9b00      	ldr	r3, [sp, #0]
90014bf2:	eb02 1444 	add.w	r4, r2, r4, lsl #5
90014bf6:	fb93 f3f8 	sdiv	r3, r3, r8
90014bfa:	3404      	adds	r4, #4
90014bfc:	b29b      	uxth	r3, r3
90014bfe:	9304      	str	r3, [sp, #16]
90014c00:	9a04      	ldr	r2, [sp, #16]
90014c02:	f854 3c04 	ldr.w	r3, [r4, #-4]
90014c06:	fb13 f302 	smulbb	r3, r3, r2
90014c0a:	9a01      	ldr	r2, [sp, #4]
90014c0c:	b29b      	uxth	r3, r3
90014c0e:	1899      	adds	r1, r3, r2
90014c10:	9305      	str	r3, [sp, #20]
90014c12:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90014c16:	b209      	sxth	r1, r1
90014c18:	4299      	cmp	r1, r3
90014c1a:	db4d      	blt.n	90014cb8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90014c1c:	8932      	ldrh	r2, [r6, #8]
90014c1e:	4413      	add	r3, r2
90014c20:	b21b      	sxth	r3, r3
90014c22:	4299      	cmp	r1, r3
90014c24:	da48      	bge.n	90014cb8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90014c26:	9b04      	ldr	r3, [sp, #16]
90014c28:	6827      	ldr	r7, [r4, #0]
90014c2a:	fb17 f703 	smulbb	r7, r7, r3
90014c2e:	9b02      	ldr	r3, [sp, #8]
90014c30:	b2bf      	uxth	r7, r7
90014c32:	18fa      	adds	r2, r7, r3
90014c34:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90014c38:	b212      	sxth	r2, r2
90014c3a:	429a      	cmp	r2, r3
90014c3c:	db3c      	blt.n	90014cb8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90014c3e:	8970      	ldrh	r0, [r6, #10]
90014c40:	4403      	add	r3, r0
90014c42:	b21b      	sxth	r3, r3
90014c44:	429a      	cmp	r2, r3
90014c46:	da37      	bge.n	90014cb8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90014c48:	2300      	movs	r3, #0
90014c4a:	4630      	mov	r0, r6
90014c4c:	930b      	str	r3, [sp, #44]	@ 0x2c
90014c4e:	ab0b      	add	r3, sp, #44	@ 0x2c
90014c50:	f7ff ff36 	bl	90014ac0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90014c54:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90014c56:	b37a      	cbz	r2, 90014cb8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90014c58:	4552      	cmp	r2, sl
90014c5a:	d02d      	beq.n	90014cb8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90014c5c:	4611      	mov	r1, r2
90014c5e:	a80e      	add	r0, sp, #56	@ 0x38
90014c60:	9209      	str	r2, [sp, #36]	@ 0x24
90014c62:	f007 f91d 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90014c66:	f04f 0e02 	mov.w	lr, #2
90014c6a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
90014c6e:	9a06      	ldr	r2, [sp, #24]
90014c70:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
90014c74:	9b01      	ldr	r3, [sp, #4]
90014c76:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
90014c7a:	4413      	add	r3, r2
90014c7c:	9a07      	ldr	r2, [sp, #28]
90014c7e:	fb91 f1fe 	sdiv	r1, r1, lr
90014c82:	fb9c fcfe 	sdiv	ip, ip, lr
90014c86:	4401      	add	r1, r0
90014c88:	1a58      	subs	r0, r3, r1
90014c8a:	9b02      	ldr	r3, [sp, #8]
90014c8c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
90014c90:	4413      	add	r3, r2
90014c92:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90014c94:	448c      	add	ip, r1
90014c96:	eba3 030c 	sub.w	r3, r3, ip
90014c9a:	435b      	muls	r3, r3
90014c9c:	fb00 3300 	mla	r3, r0, r0, r3
90014ca0:	42ab      	cmp	r3, r5
90014ca2:	d208      	bcs.n	90014cb6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90014ca4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90014ca6:	461d      	mov	r5, r3
90014ca8:	9803      	ldr	r0, [sp, #12]
90014caa:	6001      	str	r1, [r0, #0]
90014cac:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90014cae:	9805      	ldr	r0, [sp, #20]
90014cb0:	8008      	strh	r0, [r1, #0]
90014cb2:	992b      	ldr	r1, [sp, #172]	@ 0xac
90014cb4:	800f      	strh	r7, [r1, #0]
90014cb6:	4692      	mov	sl, r2
90014cb8:	f10b 0b01 	add.w	fp, fp, #1
90014cbc:	3408      	adds	r4, #8
90014cbe:	f1bb 0f04 	cmp.w	fp, #4
90014cc2:	d19d      	bne.n	90014c00 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90014cc4:	9b00      	ldr	r3, [sp, #0]
90014cc6:	9c08      	ldr	r4, [sp, #32]
90014cc8:	444b      	add	r3, r9
90014cca:	4544      	cmp	r4, r8
90014ccc:	9300      	str	r3, [sp, #0]
90014cce:	d188      	bne.n	90014be2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90014cd0:	b021      	add	sp, #132	@ 0x84
90014cd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014cd6:	f04f 35ff 	mov.w	r5, #4294967295
90014cda:	e767      	b.n	90014bac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90014cdc:	24027e9c 	.word	0x24027e9c
90014ce0:	9002c940 	.word	0x9002c940

90014ce4 <_ZN8touchgfx4RectaNERKS0_>:
90014ce4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90014ce8:	f9b1 7000 	ldrsh.w	r7, [r1]
90014cec:	888c      	ldrh	r4, [r1, #4]
90014cee:	f9b0 9000 	ldrsh.w	r9, [r0]
90014cf2:	443c      	add	r4, r7
90014cf4:	b2a4      	uxth	r4, r4
90014cf6:	fa0f f884 	sxth.w	r8, r4
90014cfa:	45c1      	cmp	r9, r8
90014cfc:	da2f      	bge.n	90014d5e <_ZN8touchgfx4RectaNERKS0_+0x7a>
90014cfe:	8882      	ldrh	r2, [r0, #4]
90014d00:	444a      	add	r2, r9
90014d02:	b292      	uxth	r2, r2
90014d04:	fa0f fe82 	sxth.w	lr, r2
90014d08:	4577      	cmp	r7, lr
90014d0a:	da28      	bge.n	90014d5e <_ZN8touchgfx4RectaNERKS0_+0x7a>
90014d0c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
90014d10:	88cb      	ldrh	r3, [r1, #6]
90014d12:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90014d16:	442b      	add	r3, r5
90014d18:	b21b      	sxth	r3, r3
90014d1a:	429e      	cmp	r6, r3
90014d1c:	da1f      	bge.n	90014d5e <_ZN8touchgfx4RectaNERKS0_+0x7a>
90014d1e:	88c3      	ldrh	r3, [r0, #6]
90014d20:	4433      	add	r3, r6
90014d22:	b29b      	uxth	r3, r3
90014d24:	fa0f fc83 	sxth.w	ip, r3
90014d28:	4565      	cmp	r5, ip
90014d2a:	da18      	bge.n	90014d5e <_ZN8touchgfx4RectaNERKS0_+0x7a>
90014d2c:	454f      	cmp	r7, r9
90014d2e:	bfb8      	it	lt
90014d30:	464f      	movlt	r7, r9
90014d32:	42b5      	cmp	r5, r6
90014d34:	bfb8      	it	lt
90014d36:	4635      	movlt	r5, r6
90014d38:	45f0      	cmp	r8, lr
90014d3a:	bfd8      	it	le
90014d3c:	4622      	movle	r2, r4
90014d3e:	1bd2      	subs	r2, r2, r7
90014d40:	8082      	strh	r2, [r0, #4]
90014d42:	884a      	ldrh	r2, [r1, #2]
90014d44:	88c9      	ldrh	r1, [r1, #6]
90014d46:	8007      	strh	r7, [r0, #0]
90014d48:	440a      	add	r2, r1
90014d4a:	8045      	strh	r5, [r0, #2]
90014d4c:	b292      	uxth	r2, r2
90014d4e:	b211      	sxth	r1, r2
90014d50:	458c      	cmp	ip, r1
90014d52:	bfa8      	it	ge
90014d54:	4613      	movge	r3, r2
90014d56:	1b5b      	subs	r3, r3, r5
90014d58:	80c3      	strh	r3, [r0, #6]
90014d5a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014d5e:	2300      	movs	r3, #0
90014d60:	8003      	strh	r3, [r0, #0]
90014d62:	8043      	strh	r3, [r0, #2]
90014d64:	8083      	strh	r3, [r0, #4]
90014d66:	80c3      	strh	r3, [r0, #6]
90014d68:	e7f7      	b.n	90014d5a <_ZN8touchgfx4RectaNERKS0_+0x76>

90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>:
90014d6a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90014d6e:	2b00      	cmp	r3, #0
90014d70:	dd06      	ble.n	90014d80 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90014d72:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
90014d76:	2800      	cmp	r0, #0
90014d78:	bfcc      	ite	gt
90014d7a:	2000      	movgt	r0, #0
90014d7c:	2001      	movle	r0, #1
90014d7e:	4770      	bx	lr
90014d80:	2001      	movs	r0, #1
90014d82:	4770      	bx	lr

90014d84 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90014d84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014d88:	2300      	movs	r3, #0
90014d8a:	4604      	mov	r4, r0
90014d8c:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90014d8e:	8003      	strh	r3, [r0, #0]
90014d90:	8043      	strh	r3, [r0, #2]
90014d92:	8083      	strh	r3, [r0, #4]
90014d94:	80c3      	strh	r3, [r0, #6]
90014d96:	2d00      	cmp	r5, #0
90014d98:	d040      	beq.n	90014e1c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
90014d9a:	1d28      	adds	r0, r5, #4
90014d9c:	f7ff ffe5 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
90014da0:	b988      	cbnz	r0, 90014dc6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90014da2:	4620      	mov	r0, r4
90014da4:	f7ff ffe1 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
90014da8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90014dac:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90014db0:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90014db4:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
90014db8:	b138      	cbz	r0, 90014dca <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
90014dba:	8022      	strh	r2, [r4, #0]
90014dbc:	8063      	strh	r3, [r4, #2]
90014dbe:	f8a4 e004 	strh.w	lr, [r4, #4]
90014dc2:	f8a4 c006 	strh.w	ip, [r4, #6]
90014dc6:	69ad      	ldr	r5, [r5, #24]
90014dc8:	e7e5      	b.n	90014d96 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
90014dca:	f9b4 0000 	ldrsh.w	r0, [r4]
90014dce:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90014dd2:	4290      	cmp	r0, r2
90014dd4:	4607      	mov	r7, r0
90014dd6:	f8b4 8004 	ldrh.w	r8, [r4, #4]
90014dda:	460e      	mov	r6, r1
90014ddc:	bfa8      	it	ge
90014dde:	4617      	movge	r7, r2
90014de0:	4299      	cmp	r1, r3
90014de2:	4472      	add	r2, lr
90014de4:	f8b4 e006 	ldrh.w	lr, [r4, #6]
90014de8:	bfa8      	it	ge
90014dea:	461e      	movge	r6, r3
90014dec:	4440      	add	r0, r8
90014dee:	4471      	add	r1, lr
90014df0:	4463      	add	r3, ip
90014df2:	b200      	sxth	r0, r0
90014df4:	8027      	strh	r7, [r4, #0]
90014df6:	b212      	sxth	r2, r2
90014df8:	8066      	strh	r6, [r4, #2]
90014dfa:	b209      	sxth	r1, r1
90014dfc:	b21b      	sxth	r3, r3
90014dfe:	4290      	cmp	r0, r2
90014e00:	bfac      	ite	ge
90014e02:	ebc7 0200 	rsbge	r2, r7, r0
90014e06:	ebc7 0202 	rsblt	r2, r7, r2
90014e0a:	4299      	cmp	r1, r3
90014e0c:	bfac      	ite	ge
90014e0e:	ebc6 0301 	rsbge	r3, r6, r1
90014e12:	ebc6 0303 	rsblt	r3, r6, r3
90014e16:	80a2      	strh	r2, [r4, #4]
90014e18:	80e3      	strh	r3, [r4, #6]
90014e1a:	e7d4      	b.n	90014dc6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90014e1c:	4620      	mov	r0, r4
90014e1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90014e22 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
90014e22:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90014e26:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
90014e2a:	b383      	cbz	r3, 90014e8e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90014e2c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90014e2e:	b374      	cbz	r4, 90014e8e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90014e30:	f9b1 5000 	ldrsh.w	r5, [r1]
90014e34:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
90014e38:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
90014e3c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90014e40:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90014e44:	b303      	cbz	r3, 90014e88 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90014e46:	4668      	mov	r0, sp
90014e48:	1d21      	adds	r1, r4, #4
90014e4a:	f8ad 5000 	strh.w	r5, [sp]
90014e4e:	f8ad 6002 	strh.w	r6, [sp, #2]
90014e52:	f8ad 7004 	strh.w	r7, [sp, #4]
90014e56:	f8ad 8006 	strh.w	r8, [sp, #6]
90014e5a:	f7ff ff43 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
90014e5e:	4668      	mov	r0, sp
90014e60:	f7ff ff83 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
90014e64:	b980      	cbnz	r0, 90014e88 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90014e66:	f8bd 3000 	ldrh.w	r3, [sp]
90014e6a:	4669      	mov	r1, sp
90014e6c:	88a2      	ldrh	r2, [r4, #4]
90014e6e:	4620      	mov	r0, r4
90014e70:	1a9b      	subs	r3, r3, r2
90014e72:	88e2      	ldrh	r2, [r4, #6]
90014e74:	f8ad 3000 	strh.w	r3, [sp]
90014e78:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90014e7c:	1a9b      	subs	r3, r3, r2
90014e7e:	f8ad 3002 	strh.w	r3, [sp, #2]
90014e82:	6823      	ldr	r3, [r4, #0]
90014e84:	689b      	ldr	r3, [r3, #8]
90014e86:	4798      	blx	r3
90014e88:	69a4      	ldr	r4, [r4, #24]
90014e8a:	2c00      	cmp	r4, #0
90014e8c:	d1d8      	bne.n	90014e40 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90014e8e:	b002      	add	sp, #8
90014e90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90014e94 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90014e94:	b573      	push	{r0, r1, r4, r5, r6, lr}
90014e96:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
90014e9a:	460d      	mov	r5, r1
90014e9c:	4616      	mov	r6, r2
90014e9e:	b323      	cbz	r3, 90014eea <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90014ea0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90014ea2:	b314      	cbz	r4, 90014eea <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90014ea4:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90014ea8:	b1eb      	cbz	r3, 90014ee6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90014eaa:	6828      	ldr	r0, [r5, #0]
90014eac:	466b      	mov	r3, sp
90014eae:	6869      	ldr	r1, [r5, #4]
90014eb0:	c303      	stmia	r3!, {r0, r1}
90014eb2:	4668      	mov	r0, sp
90014eb4:	1d21      	adds	r1, r4, #4
90014eb6:	f7ff ff15 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
90014eba:	4668      	mov	r0, sp
90014ebc:	f7ff ff55 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
90014ec0:	b988      	cbnz	r0, 90014ee6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90014ec2:	f8bd 3000 	ldrh.w	r3, [sp]
90014ec6:	4669      	mov	r1, sp
90014ec8:	88a2      	ldrh	r2, [r4, #4]
90014eca:	4620      	mov	r0, r4
90014ecc:	1a9b      	subs	r3, r3, r2
90014ece:	88e2      	ldrh	r2, [r4, #6]
90014ed0:	f8ad 3000 	strh.w	r3, [sp]
90014ed4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90014ed8:	1a9b      	subs	r3, r3, r2
90014eda:	4632      	mov	r2, r6
90014edc:	f8ad 3002 	strh.w	r3, [sp, #2]
90014ee0:	6823      	ldr	r3, [r4, #0]
90014ee2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90014ee4:	4798      	blx	r3
90014ee6:	69a4      	ldr	r4, [r4, #24]
90014ee8:	e7db      	b.n	90014ea2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
90014eea:	b002      	add	sp, #8
90014eec:	bd70      	pop	{r4, r5, r6, pc}

90014eee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
90014eee:	6803      	ldr	r3, [r0, #0]
90014ef0:	b513      	push	{r0, r1, r4, lr}
90014ef2:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
90014ef6:	2300      	movs	r3, #0
90014ef8:	e9cd 3300 	strd	r3, r3, [sp]
90014efc:	466b      	mov	r3, sp
90014efe:	47a0      	blx	r4
90014f00:	b002      	add	sp, #8
90014f02:	bd10      	pop	{r4, pc}

90014f04 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90014f04:	2301      	movs	r3, #1
90014f06:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
90014f0a:	f880 3069 	strb.w	r3, [r0, #105]	@ 0x69
90014f0e:	4770      	bx	lr

90014f10 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90014f10:	2301      	movs	r3, #1
90014f12:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
90014f16:	f880 3069 	strb.w	r3, [r0, #105]	@ 0x69
90014f1a:	4770      	bx	lr

90014f1c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
90014f1c:	6843      	ldr	r3, [r0, #4]
90014f1e:	2201      	movs	r2, #1
90014f20:	725a      	strb	r2, [r3, #9]
90014f22:	6840      	ldr	r0, [r0, #4]
90014f24:	6803      	ldr	r3, [r0, #0]
90014f26:	691b      	ldr	r3, [r3, #16]
90014f28:	4718      	bx	r3

90014f2a <_ZN8touchgfx3HAL8flushDMAEv>:
90014f2a:	6840      	ldr	r0, [r0, #4]
90014f2c:	6803      	ldr	r3, [r0, #0]
90014f2e:	689b      	ldr	r3, [r3, #8]
90014f30:	4718      	bx	r3

90014f32 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
90014f32:	b530      	push	{r4, r5, lr}
90014f34:	b08b      	sub	sp, #44	@ 0x2c
90014f36:	6804      	ldr	r4, [r0, #0]
90014f38:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
90014f3c:	9509      	str	r5, [sp, #36]	@ 0x24
90014f3e:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
90014f42:	9508      	str	r5, [sp, #32]
90014f44:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
90014f48:	9507      	str	r5, [sp, #28]
90014f4a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
90014f4e:	9506      	str	r5, [sp, #24]
90014f50:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
90014f54:	9505      	str	r5, [sp, #20]
90014f56:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
90014f5a:	9504      	str	r5, [sp, #16]
90014f5c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
90014f60:	9503      	str	r5, [sp, #12]
90014f62:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
90014f66:	9502      	str	r5, [sp, #8]
90014f68:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
90014f6c:	e9cd 3500 	strd	r3, r5, [sp]
90014f70:	4613      	mov	r3, r2
90014f72:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
90014f74:	2200      	movs	r2, #0
90014f76:	47a0      	blx	r4
90014f78:	b00b      	add	sp, #44	@ 0x2c
90014f7a:	bd30      	pop	{r4, r5, pc}

90014f7c <_ZN8touchgfx3HAL10beginFrameEv>:
90014f7c:	4b04      	ldr	r3, [pc, #16]	@ (90014f90 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
90014f7e:	781b      	ldrb	r3, [r3, #0]
90014f80:	b123      	cbz	r3, 90014f8c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90014f82:	f890 006a 	ldrb.w	r0, [r0, #106]	@ 0x6a
90014f86:	f080 0001 	eor.w	r0, r0, #1
90014f8a:	4770      	bx	lr
90014f8c:	2001      	movs	r0, #1
90014f8e:	4770      	bx	lr
90014f90:	24027e9a 	.word	0x24027e9a

90014f94 <_ZN8touchgfx3HAL8endFrameEv>:
90014f94:	b510      	push	{r4, lr}
90014f96:	4604      	mov	r4, r0
90014f98:	6840      	ldr	r0, [r0, #4]
90014f9a:	6803      	ldr	r3, [r0, #0]
90014f9c:	689b      	ldr	r3, [r3, #8]
90014f9e:	4798      	blx	r3
90014fa0:	f894 3069 	ldrb.w	r3, [r4, #105]	@ 0x69
90014fa4:	b113      	cbz	r3, 90014fac <_ZN8touchgfx3HAL8endFrameEv+0x18>
90014fa6:	2301      	movs	r3, #1
90014fa8:	f884 306a 	strb.w	r3, [r4, #106]	@ 0x6a
90014fac:	bd10      	pop	{r4, pc}

90014fae <_ZN8touchgfx3HAL10initializeEv>:
90014fae:	b510      	push	{r4, lr}
90014fb0:	4604      	mov	r4, r0
90014fb2:	f7ed ff7f 	bl	90002eb4 <_ZN8touchgfx10OSWrappers10initializeEv>
90014fb6:	f7ec fd93 	bl	90001ae0 <_ZN8touchgfx4GPIO4initEv>
90014fba:	6860      	ldr	r0, [r4, #4]
90014fbc:	6803      	ldr	r3, [r0, #0]
90014fbe:	68db      	ldr	r3, [r3, #12]
90014fc0:	4798      	blx	r3
90014fc2:	68e0      	ldr	r0, [r4, #12]
90014fc4:	6803      	ldr	r3, [r0, #0]
90014fc6:	689b      	ldr	r3, [r3, #8]
90014fc8:	4798      	blx	r3
90014fca:	6823      	ldr	r3, [r4, #0]
90014fcc:	4620      	mov	r0, r4
90014fce:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90014fd0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014fd4:	4718      	bx	r3
	...

90014fd8 <_ZN8touchgfx3HAL4tickEv>:
90014fd8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90014fda:	6803      	ldr	r3, [r0, #0]
90014fdc:	4604      	mov	r4, r0
90014fde:	4d5b      	ldr	r5, [pc, #364]	@ (9001514c <_ZN8touchgfx3HAL4tickEv+0x174>)
90014fe0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
90014fe4:	4798      	blx	r3
90014fe6:	2800      	cmp	r0, #0
90014fe8:	f000 8095 	beq.w	90015116 <_ZN8touchgfx3HAL4tickEv+0x13e>
90014fec:	2001      	movs	r0, #1
90014fee:	2600      	movs	r6, #0
90014ff0:	f7ec fd98 	bl	90001b24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90014ff4:	f894 3066 	ldrb.w	r3, [r4, #102]	@ 0x66
90014ff8:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
90014ffc:	f884 3067 	strb.w	r3, [r4, #103]	@ 0x67
90015000:	f894 3075 	ldrb.w	r3, [r4, #117]	@ 0x75
90015004:	f884 6066 	strb.w	r6, [r4, #102]	@ 0x66
90015008:	b133      	cbz	r3, 90015018 <_ZN8touchgfx3HAL4tickEv+0x40>
9001500a:	6823      	ldr	r3, [r4, #0]
9001500c:	4620      	mov	r0, r4
9001500e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
90015012:	4798      	blx	r3
90015014:	f884 6075 	strb.w	r6, [r4, #117]	@ 0x75
90015018:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
9001501c:	2601      	movs	r6, #1
9001501e:	6862      	ldr	r2, [r4, #4]
90015020:	f083 0301 	eor.w	r3, r3, #1
90015024:	702e      	strb	r6, [r5, #0]
90015026:	7253      	strb	r3, [r2, #9]
90015028:	f005 fde8 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
9001502c:	6803      	ldr	r3, [r0, #0]
9001502e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90015030:	4798      	blx	r3
90015032:	f894 3067 	ldrb.w	r3, [r4, #103]	@ 0x67
90015036:	b90b      	cbnz	r3, 9001503c <_ZN8touchgfx3HAL4tickEv+0x64>
90015038:	f884 6067 	strb.w	r6, [r4, #103]	@ 0x67
9001503c:	f005 fdde 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
90015040:	6803      	ldr	r3, [r0, #0]
90015042:	695b      	ldr	r3, [r3, #20]
90015044:	4798      	blx	r3
90015046:	6da0      	ldr	r0, [r4, #88]	@ 0x58
90015048:	6803      	ldr	r3, [r0, #0]
9001504a:	691b      	ldr	r3, [r3, #16]
9001504c:	4798      	blx	r3
9001504e:	f894 3067 	ldrb.w	r3, [r4, #103]	@ 0x67
90015052:	f894 2068 	ldrb.w	r2, [r4, #104]	@ 0x68
90015056:	3b01      	subs	r3, #1
90015058:	b2db      	uxtb	r3, r3
9001505a:	f884 3067 	strb.w	r3, [r4, #103]	@ 0x67
9001505e:	b10a      	cbz	r2, 90015064 <_ZN8touchgfx3HAL4tickEv+0x8c>
90015060:	2b00      	cmp	r3, #0
90015062:	d1eb      	bne.n	9001503c <_ZN8touchgfx3HAL4tickEv+0x64>
90015064:	4a3a      	ldr	r2, [pc, #232]	@ (90015150 <_ZN8touchgfx3HAL4tickEv+0x178>)
90015066:	f994 1064 	ldrsb.w	r1, [r4, #100]	@ 0x64
9001506a:	7813      	ldrb	r3, [r2, #0]
9001506c:	3301      	adds	r3, #1
9001506e:	b25b      	sxtb	r3, r3
90015070:	4299      	cmp	r1, r3
90015072:	7013      	strb	r3, [r2, #0]
90015074:	dc10      	bgt.n	90015098 <_ZN8touchgfx3HAL4tickEv+0xc0>
90015076:	2300      	movs	r3, #0
90015078:	68e0      	ldr	r0, [r4, #12]
9001507a:	a902      	add	r1, sp, #8
9001507c:	7013      	strb	r3, [r2, #0]
9001507e:	aa03      	add	r2, sp, #12
90015080:	6803      	ldr	r3, [r0, #0]
90015082:	68db      	ldr	r3, [r3, #12]
90015084:	4798      	blx	r3
90015086:	6823      	ldr	r3, [r4, #0]
90015088:	2800      	cmp	r0, #0
9001508a:	d050      	beq.n	9001512e <_ZN8touchgfx3HAL4tickEv+0x156>
9001508c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
90015090:	4620      	mov	r0, r4
90015092:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90015096:	4798      	blx	r3
90015098:	2300      	movs	r3, #0
9001509a:	6960      	ldr	r0, [r4, #20]
9001509c:	f88d 3007 	strb.w	r3, [sp, #7]
900150a0:	b158      	cbz	r0, 900150ba <_ZN8touchgfx3HAL4tickEv+0xe2>
900150a2:	6803      	ldr	r3, [r0, #0]
900150a4:	f10d 0107 	add.w	r1, sp, #7
900150a8:	68db      	ldr	r3, [r3, #12]
900150aa:	4798      	blx	r3
900150ac:	b128      	cbz	r0, 900150ba <_ZN8touchgfx3HAL4tickEv+0xe2>
900150ae:	6da0      	ldr	r0, [r4, #88]	@ 0x58
900150b0:	f89d 1007 	ldrb.w	r1, [sp, #7]
900150b4:	6803      	ldr	r3, [r0, #0]
900150b6:	68db      	ldr	r3, [r3, #12]
900150b8:	4798      	blx	r3
900150ba:	f104 001c 	add.w	r0, r4, #28
900150be:	f014 feb7 	bl	90029e30 <_ZN8touchgfx8Gestures4tickEv>
900150c2:	f894 306c 	ldrb.w	r3, [r4, #108]	@ 0x6c
900150c6:	b30b      	cbz	r3, 9001510c <_ZN8touchgfx3HAL4tickEv+0x134>
900150c8:	6920      	ldr	r0, [r4, #16]
900150ca:	6803      	ldr	r3, [r0, #0]
900150cc:	691b      	ldr	r3, [r3, #16]
900150ce:	4798      	blx	r3
900150d0:	6f23      	ldr	r3, [r4, #112]	@ 0x70
900150d2:	4606      	mov	r6, r0
900150d4:	b903      	cbnz	r3, 900150d8 <_ZN8touchgfx3HAL4tickEv+0x100>
900150d6:	6720      	str	r0, [r4, #112]	@ 0x70
900150d8:	6f23      	ldr	r3, [r4, #112]	@ 0x70
900150da:	4a1e      	ldr	r2, [pc, #120]	@ (90015154 <_ZN8touchgfx3HAL4tickEv+0x17c>)
900150dc:	1af3      	subs	r3, r6, r3
900150de:	4293      	cmp	r3, r2
900150e0:	d914      	bls.n	9001510c <_ZN8touchgfx3HAL4tickEv+0x134>
900150e2:	6920      	ldr	r0, [r4, #16]
900150e4:	6803      	ldr	r3, [r0, #0]
900150e6:	699b      	ldr	r3, [r3, #24]
900150e8:	4798      	blx	r3
900150ea:	6f23      	ldr	r3, [r4, #112]	@ 0x70
900150ec:	2264      	movs	r2, #100	@ 0x64
900150ee:	1af3      	subs	r3, r6, r3
900150f0:	fbb3 f3f2 	udiv	r3, r3, r2
900150f4:	fbb0 f0f3 	udiv	r0, r0, r3
900150f8:	2800      	cmp	r0, #0
900150fa:	dc1d      	bgt.n	90015138 <_ZN8touchgfx3HAL4tickEv+0x160>
900150fc:	f884 2065 	strb.w	r2, [r4, #101]	@ 0x65
90015100:	6920      	ldr	r0, [r4, #16]
90015102:	2100      	movs	r1, #0
90015104:	6803      	ldr	r3, [r0, #0]
90015106:	69db      	ldr	r3, [r3, #28]
90015108:	4798      	blx	r3
9001510a:	6726      	str	r6, [r4, #112]	@ 0x70
9001510c:	f005 fd76 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
90015110:	6803      	ldr	r3, [r0, #0]
90015112:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90015114:	4798      	blx	r3
90015116:	6823      	ldr	r3, [r4, #0]
90015118:	4620      	mov	r0, r4
9001511a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
9001511e:	4798      	blx	r3
90015120:	2001      	movs	r0, #1
90015122:	f7ec fd29 	bl	90001b78 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90015126:	2300      	movs	r3, #0
90015128:	702b      	strb	r3, [r5, #0]
9001512a:	b004      	add	sp, #16
9001512c:	bd70      	pop	{r4, r5, r6, pc}
9001512e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
90015132:	4620      	mov	r0, r4
90015134:	4798      	blx	r3
90015136:	e7af      	b.n	90015098 <_ZN8touchgfx3HAL4tickEv+0xc0>
90015138:	2863      	cmp	r0, #99	@ 0x63
9001513a:	bfcb      	itete	gt
9001513c:	2300      	movgt	r3, #0
9001513e:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
90015142:	f884 3065 	strbgt.w	r3, [r4, #101]	@ 0x65
90015146:	f884 0065 	strble.w	r0, [r4, #101]	@ 0x65
9001514a:	e7d9      	b.n	90015100 <_ZN8touchgfx3HAL4tickEv+0x128>
9001514c:	24027ea0 	.word	0x24027ea0
90015150:	24027ea1 	.word	0x24027ea1
90015154:	05f5e100 	.word	0x05f5e100

90015158 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90015158:	f7ed bede 	b.w	90002f18 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

9001515c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
9001515c:	6581      	str	r1, [r0, #88]	@ 0x58
9001515e:	301c      	adds	r0, #28
90015160:	f014 be64 	b.w	90029e2c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90015164 <_ZN8touchgfx3HAL5touchEll>:
90015164:	b530      	push	{r4, r5, lr}
90015166:	b087      	sub	sp, #28
90015168:	4604      	mov	r4, r0
9001516a:	a804      	add	r0, sp, #16
9001516c:	e9cd 1204 	strd	r1, r2, [sp, #16]
90015170:	f005 fb26 	bl	9001a7c0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90015174:	9b04      	ldr	r3, [sp, #16]
90015176:	a906      	add	r1, sp, #24
90015178:	a803      	add	r0, sp, #12
9001517a:	f8ad 300c 	strh.w	r3, [sp, #12]
9001517e:	9b05      	ldr	r3, [sp, #20]
90015180:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90015184:	f005 fb6e 	bl	9001a864 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90015188:	f894 106b 	ldrb.w	r1, [r4, #107]	@ 0x6b
9001518c:	f104 001c 	add.w	r0, r4, #28
90015190:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90015194:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90015198:	b189      	cbz	r1, 900151be <_ZN8touchgfx3HAL5touchEll+0x5a>
9001519a:	f8b4 5060 	ldrh.w	r5, [r4, #96]	@ 0x60
9001519e:	9300      	str	r3, [sp, #0]
900151a0:	4613      	mov	r3, r2
900151a2:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
900151a6:	462a      	mov	r2, r5
900151a8:	f014 fe50 	bl	90029e4c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
900151ac:	b128      	cbz	r0, 900151ba <_ZN8touchgfx3HAL5touchEll+0x56>
900151ae:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900151b2:	65e3      	str	r3, [r4, #92]	@ 0x5c
900151b4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900151b8:	6623      	str	r3, [r4, #96]	@ 0x60
900151ba:	b007      	add	sp, #28
900151bc:	bd30      	pop	{r4, r5, pc}
900151be:	f014 fe85 	bl	90029ecc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900151c2:	2301      	movs	r3, #1
900151c4:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
900151c8:	e7f1      	b.n	900151ae <_ZN8touchgfx3HAL5touchEll+0x4a>

900151ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
900151ca:	b510      	push	{r4, lr}
900151cc:	2b00      	cmp	r3, #0
900151ce:	d046      	beq.n	9001525e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900151d0:	ea81 0002 	eor.w	r0, r1, r2
900151d4:	07c4      	lsls	r4, r0, #31
900151d6:	d508      	bpl.n	900151ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
900151d8:	440b      	add	r3, r1
900151da:	3a01      	subs	r2, #1
900151dc:	428b      	cmp	r3, r1
900151de:	d93e      	bls.n	9001525e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900151e0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900151e4:	f801 0b01 	strb.w	r0, [r1], #1
900151e8:	e7f8      	b.n	900151dc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
900151ea:	07d0      	lsls	r0, r2, #31
900151ec:	bf42      	ittt	mi
900151ee:	f812 0b01 	ldrbmi.w	r0, [r2], #1
900151f2:	f103 33ff 	addmi.w	r3, r3, #4294967295
900151f6:	f801 0b01 	strbmi.w	r0, [r1], #1
900151fa:	2b01      	cmp	r3, #1
900151fc:	d911      	bls.n	90015222 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900151fe:	ea81 0402 	eor.w	r4, r1, r2
90015202:	4610      	mov	r0, r2
90015204:	07a4      	lsls	r4, r4, #30
90015206:	d022      	beq.n	9001524e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90015208:	f023 0401 	bic.w	r4, r3, #1
9001520c:	440c      	add	r4, r1
9001520e:	428c      	cmp	r4, r1
90015210:	4602      	mov	r2, r0
90015212:	d904      	bls.n	9001521e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
90015214:	8812      	ldrh	r2, [r2, #0]
90015216:	3002      	adds	r0, #2
90015218:	f821 2b02 	strh.w	r2, [r1], #2
9001521c:	e7f7      	b.n	9001520e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
9001521e:	f003 0301 	and.w	r3, r3, #1
90015222:	f023 0003 	bic.w	r0, r3, #3
90015226:	4408      	add	r0, r1
90015228:	4288      	cmp	r0, r1
9001522a:	4614      	mov	r4, r2
9001522c:	d904      	bls.n	90015238 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
9001522e:	6824      	ldr	r4, [r4, #0]
90015230:	3204      	adds	r2, #4
90015232:	f841 4b04 	str.w	r4, [r1], #4
90015236:	e7f7      	b.n	90015228 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90015238:	f003 0303 	and.w	r3, r3, #3
9001523c:	3a01      	subs	r2, #1
9001523e:	440b      	add	r3, r1
90015240:	428b      	cmp	r3, r1
90015242:	d90c      	bls.n	9001525e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90015244:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90015248:	f801 0b01 	strb.w	r0, [r1], #1
9001524c:	e7f8      	b.n	90015240 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
9001524e:	0790      	lsls	r0, r2, #30
90015250:	d0e7      	beq.n	90015222 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90015252:	f832 0b02 	ldrh.w	r0, [r2], #2
90015256:	3b02      	subs	r3, #2
90015258:	f821 0b02 	strh.w	r0, [r1], #2
9001525c:	e7e1      	b.n	90015222 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001525e:	2001      	movs	r0, #1
90015260:	bd10      	pop	{r4, pc}

90015262 <_ZN8touchgfx3HAL7noTouchEv>:
90015262:	b510      	push	{r4, lr}
90015264:	f890 306b 	ldrb.w	r3, [r0, #107]	@ 0x6b
90015268:	4604      	mov	r4, r0
9001526a:	b153      	cbz	r3, 90015282 <_ZN8touchgfx3HAL7noTouchEv+0x20>
9001526c:	f8b0 3060 	ldrh.w	r3, [r0, #96]	@ 0x60
90015270:	2101      	movs	r1, #1
90015272:	f8b0 205c 	ldrh.w	r2, [r0, #92]	@ 0x5c
90015276:	301c      	adds	r0, #28
90015278:	f014 fe28 	bl	90029ecc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9001527c:	2300      	movs	r3, #0
9001527e:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
90015282:	bd10      	pop	{r4, pc}

90015284 <_ZN8touchgfx8Drawable5setXYEss>:
90015284:	b570      	push	{r4, r5, r6, lr}
90015286:	6803      	ldr	r3, [r0, #0]
90015288:	4604      	mov	r4, r0
9001528a:	4615      	mov	r5, r2
9001528c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001528e:	4798      	blx	r3
90015290:	6823      	ldr	r3, [r4, #0]
90015292:	4629      	mov	r1, r5
90015294:	4620      	mov	r0, r4
90015296:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90015298:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001529c:	4718      	bx	r3
	...

900152a0 <_ZN8touchgfx3HAL3lcdEv>:
900152a0:	4b04      	ldr	r3, [pc, #16]	@ (900152b4 <_ZN8touchgfx3HAL3lcdEv+0x14>)
900152a2:	681b      	ldr	r3, [r3, #0]
900152a4:	f893 2076 	ldrb.w	r2, [r3, #118]	@ 0x76
900152a8:	b10a      	cbz	r2, 900152ae <_ZN8touchgfx3HAL3lcdEv+0xe>
900152aa:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900152ac:	b900      	cbnz	r0, 900152b0 <_ZN8touchgfx3HAL3lcdEv+0x10>
900152ae:	6898      	ldr	r0, [r3, #8]
900152b0:	4770      	bx	lr
900152b2:	bf00      	nop
900152b4:	24027e9c 	.word	0x24027e9c

900152b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
900152b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900152bc:	b085      	sub	sp, #20
900152be:	4604      	mov	r4, r0
900152c0:	2000      	movs	r0, #0
900152c2:	4699      	mov	r9, r3
900152c4:	ad04      	add	r5, sp, #16
900152c6:	460f      	mov	r7, r1
900152c8:	4690      	mov	r8, r2
900152ca:	f845 0d04 	str.w	r0, [r5, #-4]!
900152ce:	69a0      	ldr	r0, [r4, #24]
900152d0:	6806      	ldr	r6, [r0, #0]
900152d2:	9501      	str	r5, [sp, #4]
900152d4:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
900152d8:	9500      	str	r5, [sp, #0]
900152da:	6835      	ldr	r5, [r6, #0]
900152dc:	47a8      	blx	r5
900152de:	4d10      	ldr	r5, [pc, #64]	@ (90015320 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
900152e0:	4606      	mov	r6, r0
900152e2:	f8a5 9000 	strh.w	r9, [r5]
900152e6:	f7ff ffdb 	bl	900152a0 <_ZN8touchgfx3HAL3lcdEv>
900152ea:	6803      	ldr	r3, [r0, #0]
900152ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900152ee:	4798      	blx	r3
900152f0:	b128      	cbz	r0, 900152fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
900152f2:	2801      	cmp	r0, #1
900152f4:	d00b      	beq.n	9001530e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
900152f6:	4630      	mov	r0, r6
900152f8:	b005      	add	sp, #20
900152fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900152fe:	882b      	ldrh	r3, [r5, #0]
90015300:	fb08 7203 	mla	r2, r8, r3, r7
90015304:	9b03      	ldr	r3, [sp, #12]
90015306:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
9001530a:	63e3      	str	r3, [r4, #60]	@ 0x3c
9001530c:	e7f3      	b.n	900152f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
9001530e:	882a      	ldrh	r2, [r5, #0]
90015310:	9b03      	ldr	r3, [sp, #12]
90015312:	fb08 7202 	mla	r2, r8, r2, r7
90015316:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001531a:	1a9a      	subs	r2, r3, r2
9001531c:	63e2      	str	r2, [r4, #60]	@ 0x3c
9001531e:	e7ea      	b.n	900152f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90015320:	24027e96 	.word	0x24027e96

90015324 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90015324:	b5f0      	push	{r4, r5, r6, r7, lr}
90015326:	b08b      	sub	sp, #44	@ 0x2c
90015328:	4617      	mov	r7, r2
9001532a:	4604      	mov	r4, r0
9001532c:	460e      	mov	r6, r1
9001532e:	461d      	mov	r5, r3
90015330:	f7ff ffb6 	bl	900152a0 <_ZN8touchgfx3HAL3lcdEv>
90015334:	6803      	ldr	r3, [r0, #0]
90015336:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90015338:	4798      	blx	r3
9001533a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
9001533e:	9007      	str	r0, [sp, #28]
90015340:	4631      	mov	r1, r6
90015342:	6822      	ldr	r2, [r4, #0]
90015344:	e9cd 0308 	strd	r0, r3, [sp, #32]
90015348:	4b0c      	ldr	r3, [pc, #48]	@ (9001537c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
9001534a:	4620      	mov	r0, r4
9001534c:	881b      	ldrh	r3, [r3, #0]
9001534e:	9306      	str	r3, [sp, #24]
90015350:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90015354:	9305      	str	r3, [sp, #20]
90015356:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
9001535a:	9304      	str	r3, [sp, #16]
9001535c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90015360:	9303      	str	r3, [sp, #12]
90015362:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90015366:	9302      	str	r3, [sp, #8]
90015368:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
9001536c:	e9cd 5300 	strd	r5, r3, [sp]
90015370:	463b      	mov	r3, r7
90015372:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
90015374:	2200      	movs	r2, #0
90015376:	47a8      	blx	r5
90015378:	b00b      	add	sp, #44	@ 0x2c
9001537a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001537c:	24027e96 	.word	0x24027e96

90015380 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90015380:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015384:	4698      	mov	r8, r3
90015386:	6803      	ldr	r3, [r0, #0]
90015388:	b08b      	sub	sp, #44	@ 0x2c
9001538a:	4617      	mov	r7, r2
9001538c:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
9001538e:	460e      	mov	r6, r1
90015390:	4b13      	ldr	r3, [pc, #76]	@ (900153e0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
90015392:	4604      	mov	r4, r0
90015394:	f8b3 9000 	ldrh.w	r9, [r3]
90015398:	f7ff ff82 	bl	900152a0 <_ZN8touchgfx3HAL3lcdEv>
9001539c:	6803      	ldr	r3, [r0, #0]
9001539e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900153a0:	4798      	blx	r3
900153a2:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
900153a6:	2200      	movs	r2, #0
900153a8:	4631      	mov	r1, r6
900153aa:	e9cd 0308 	strd	r0, r3, [sp, #32]
900153ae:	2302      	movs	r3, #2
900153b0:	4620      	mov	r0, r4
900153b2:	e9cd 9306 	strd	r9, r3, [sp, #24]
900153b6:	2301      	movs	r3, #1
900153b8:	9305      	str	r3, [sp, #20]
900153ba:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
900153be:	9304      	str	r3, [sp, #16]
900153c0:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
900153c4:	9303      	str	r3, [sp, #12]
900153c6:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
900153ca:	9302      	str	r3, [sp, #8]
900153cc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900153d0:	e9cd 8300 	strd	r8, r3, [sp]
900153d4:	463b      	mov	r3, r7
900153d6:	47a8      	blx	r5
900153d8:	b00b      	add	sp, #44	@ 0x2c
900153da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900153de:	bf00      	nop
900153e0:	24027e96 	.word	0x24027e96

900153e4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
900153e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900153e8:	4698      	mov	r8, r3
900153ea:	6803      	ldr	r3, [r0, #0]
900153ec:	b087      	sub	sp, #28
900153ee:	460e      	mov	r6, r1
900153f0:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
900153f2:	4617      	mov	r7, r2
900153f4:	4b0f      	ldr	r3, [pc, #60]	@ (90015434 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
900153f6:	4604      	mov	r4, r0
900153f8:	f8b3 9000 	ldrh.w	r9, [r3]
900153fc:	f7ff ff50 	bl	900152a0 <_ZN8touchgfx3HAL3lcdEv>
90015400:	6803      	ldr	r3, [r0, #0]
90015402:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90015404:	4798      	blx	r3
90015406:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
9001540a:	463a      	mov	r2, r7
9001540c:	4631      	mov	r1, r6
9001540e:	f8cd 900c 	str.w	r9, [sp, #12]
90015412:	e9cd 0304 	strd	r0, r3, [sp, #16]
90015416:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
9001541a:	4620      	mov	r0, r4
9001541c:	9302      	str	r3, [sp, #8]
9001541e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
90015422:	9301      	str	r3, [sp, #4]
90015424:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90015428:	9300      	str	r3, [sp, #0]
9001542a:	4643      	mov	r3, r8
9001542c:	47a8      	blx	r5
9001542e:	b007      	add	sp, #28
90015430:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015434:	24027e96 	.word	0x24027e96

90015438 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90015438:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001543c:	4604      	mov	r4, r0
9001543e:	b08f      	sub	sp, #60	@ 0x3c
90015440:	4610      	mov	r0, r2
90015442:	460d      	mov	r5, r1
90015444:	4691      	mov	r9, r2
90015446:	461e      	mov	r6, r3
90015448:	f008 ff32 	bl	9001e2b0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
9001544c:	2800      	cmp	r0, #0
9001544e:	f000 809d 	beq.w	9001558c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90015452:	6823      	ldr	r3, [r4, #0]
90015454:	4620      	mov	r0, r4
90015456:	f8df b198 	ldr.w	fp, [pc, #408]	@ 900155f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
9001545a:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
9001545e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90015460:	4798      	blx	r3
90015462:	6823      	ldr	r3, [r4, #0]
90015464:	4620      	mov	r0, r4
90015466:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 900155f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
9001546a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001546c:	4798      	blx	r3
9001546e:	f8bb 3000 	ldrh.w	r3, [fp]
90015472:	4f5c      	ldr	r7, [pc, #368]	@ (900155e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90015474:	9301      	str	r3, [sp, #4]
90015476:	f8ba 3000 	ldrh.w	r3, [sl]
9001547a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
9001547e:	4640      	mov	r0, r8
90015480:	9302      	str	r3, [sp, #8]
90015482:	883b      	ldrh	r3, [r7, #0]
90015484:	9303      	str	r3, [sp, #12]
90015486:	4b58      	ldr	r3, [pc, #352]	@ (900155e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90015488:	881a      	ldrh	r2, [r3, #0]
9001548a:	9305      	str	r3, [sp, #20]
9001548c:	9204      	str	r2, [sp, #16]
9001548e:	f008 ffa3 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90015492:	8038      	strh	r0, [r7, #0]
90015494:	4640      	mov	r0, r8
90015496:	f008 ffd3 	bl	9001e440 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001549a:	9b05      	ldr	r3, [sp, #20]
9001549c:	b280      	uxth	r0, r0
9001549e:	8018      	strh	r0, [r3, #0]
900154a0:	4b52      	ldr	r3, [pc, #328]	@ (900155ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
900154a2:	781b      	ldrb	r3, [r3, #0]
900154a4:	2b00      	cmp	r3, #0
900154a6:	d174      	bne.n	90015592 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
900154a8:	883b      	ldrh	r3, [r7, #0]
900154aa:	f8aa 0000 	strh.w	r0, [sl]
900154ae:	f8ab 3000 	strh.w	r3, [fp]
900154b2:	4648      	mov	r0, r9
900154b4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
900154b8:	f008 fefa 	bl	9001e2b0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900154bc:	2200      	movs	r2, #0
900154be:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
900154c2:	4611      	mov	r1, r2
900154c4:	4628      	mov	r0, r5
900154c6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
900154ca:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
900154ce:	f7ff fed9 	bl	90015284 <_ZN8touchgfx8Drawable5setXYEss>
900154d2:	2301      	movs	r3, #1
900154d4:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
900154d8:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
900154dc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900154e0:	2b00      	cmp	r3, #0
900154e2:	dd5c      	ble.n	9001559e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
900154e4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900154e8:	2b00      	cmp	r3, #0
900154ea:	dd58      	ble.n	9001559e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
900154ec:	462a      	mov	r2, r5
900154ee:	ab0a      	add	r3, sp, #40	@ 0x28
900154f0:	f852 0f04 	ldr.w	r0, [r2, #4]!
900154f4:	6851      	ldr	r1, [r2, #4]
900154f6:	c303      	stmia	r3!, {r0, r1}
900154f8:	4631      	mov	r1, r6
900154fa:	a80a      	add	r0, sp, #40	@ 0x28
900154fc:	f7ff fbf2 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
90015500:	4b38      	ldr	r3, [pc, #224]	@ (900155e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90015502:	2100      	movs	r1, #0
90015504:	f9b3 2000 	ldrsh.w	r2, [r3]
90015508:	4b37      	ldr	r3, [pc, #220]	@ (900155e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
9001550a:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
9001550e:	aa0a      	add	r2, sp, #40	@ 0x28
90015510:	f9b3 3000 	ldrsh.w	r3, [r3]
90015514:	910c      	str	r1, [sp, #48]	@ 0x30
90015516:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001551a:	ab08      	add	r3, sp, #32
9001551c:	e892 0003 	ldmia.w	r2, {r0, r1}
90015520:	e883 0003 	stmia.w	r3, {r0, r1}
90015524:	4618      	mov	r0, r3
90015526:	a90c      	add	r1, sp, #48	@ 0x30
90015528:	f7ff fbdc 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
9001552c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9001552e:	2b00      	cmp	r3, #0
90015530:	d13c      	bne.n	900155ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
90015532:	2000      	movs	r0, #0
90015534:	f884 0076 	strb.w	r0, [r4, #118]	@ 0x76
90015538:	2600      	movs	r6, #0
9001553a:	696b      	ldr	r3, [r5, #20]
9001553c:	a908      	add	r1, sp, #32
9001553e:	682a      	ldr	r2, [r5, #0]
90015540:	4628      	mov	r0, r5
90015542:	9305      	str	r3, [sp, #20]
90015544:	616e      	str	r6, [r5, #20]
90015546:	6892      	ldr	r2, [r2, #8]
90015548:	4790      	blx	r2
9001554a:	9b05      	ldr	r3, [sp, #20]
9001554c:	4652      	mov	r2, sl
9001554e:	4649      	mov	r1, r9
90015550:	616b      	str	r3, [r5, #20]
90015552:	4628      	mov	r0, r5
90015554:	f884 6076 	strb.w	r6, [r4, #118]	@ 0x76
90015558:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
9001555c:	f7ff fe92 	bl	90015284 <_ZN8touchgfx8Drawable5setXYEss>
90015560:	9a01      	ldr	r2, [sp, #4]
90015562:	4b23      	ldr	r3, [pc, #140]	@ (900155f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
90015564:	4620      	mov	r0, r4
90015566:	801a      	strh	r2, [r3, #0]
90015568:	9a02      	ldr	r2, [sp, #8]
9001556a:	4b22      	ldr	r3, [pc, #136]	@ (900155f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
9001556c:	801a      	strh	r2, [r3, #0]
9001556e:	9a03      	ldr	r2, [sp, #12]
90015570:	4b1c      	ldr	r3, [pc, #112]	@ (900155e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90015572:	801a      	strh	r2, [r3, #0]
90015574:	4b1c      	ldr	r3, [pc, #112]	@ (900155e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90015576:	9a04      	ldr	r2, [sp, #16]
90015578:	801a      	strh	r2, [r3, #0]
9001557a:	6823      	ldr	r3, [r4, #0]
9001557c:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
90015580:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90015582:	4798      	blx	r3
90015584:	6823      	ldr	r3, [r4, #0]
90015586:	4620      	mov	r0, r4
90015588:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001558a:	4798      	blx	r3
9001558c:	b00f      	add	sp, #60	@ 0x3c
9001558e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015592:	883b      	ldrh	r3, [r7, #0]
90015594:	f8ab 0000 	strh.w	r0, [fp]
90015598:	f8aa 3000 	strh.w	r3, [sl]
9001559c:	e789      	b.n	900154b2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
9001559e:	462a      	mov	r2, r5
900155a0:	ab0a      	add	r3, sp, #40	@ 0x28
900155a2:	f852 0f04 	ldr.w	r0, [r2, #4]!
900155a6:	6851      	ldr	r1, [r2, #4]
900155a8:	c303      	stmia	r3!, {r0, r1}
900155aa:	e7a9      	b.n	90015500 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
900155ac:	a807      	add	r0, sp, #28
900155ae:	f009 f883 	bl	9001e6b8 <_ZNK8touchgfx6Bitmap9getFormatEv>
900155b2:	4606      	mov	r6, r0
900155b4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
900155b6:	6803      	ldr	r3, [r0, #0]
900155b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900155ba:	4798      	blx	r3
900155bc:	4286      	cmp	r6, r0
900155be:	d1b8      	bne.n	90015532 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
900155c0:	f7ff fe6e 	bl	900152a0 <_ZN8touchgfx3HAL3lcdEv>
900155c4:	6803      	ldr	r3, [r0, #0]
900155c6:	4606      	mov	r6, r0
900155c8:	a807      	add	r0, sp, #28
900155ca:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900155cc:	9305      	str	r3, [sp, #20]
900155ce:	f009 f873 	bl	9001e6b8 <_ZNK8touchgfx6Bitmap9getFormatEv>
900155d2:	9b05      	ldr	r3, [sp, #20]
900155d4:	4601      	mov	r1, r0
900155d6:	4630      	mov	r0, r6
900155d8:	4798      	blx	r3
900155da:	f080 0001 	eor.w	r0, r0, #1
900155de:	b2c0      	uxtb	r0, r0
900155e0:	e7a8      	b.n	90015534 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
900155e2:	bf00      	nop
900155e4:	24027e90 	.word	0x24027e90
900155e8:	24027e92 	.word	0x24027e92
900155ec:	24027e94 	.word	0x24027e94
900155f0:	24027e96 	.word	0x24027e96
900155f4:	24027e98 	.word	0x24027e98

900155f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
900155f8:	4b07      	ldr	r3, [pc, #28]	@ (90015618 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
900155fa:	b510      	push	{r4, lr}
900155fc:	781b      	ldrb	r3, [r3, #0]
900155fe:	4604      	mov	r4, r0
90015600:	b13b      	cbz	r3, 90015612 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90015602:	6803      	ldr	r3, [r0, #0]
90015604:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90015606:	4798      	blx	r3
90015608:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9001560a:	4283      	cmp	r3, r0
9001560c:	d101      	bne.n	90015612 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9001560e:	6c20      	ldr	r0, [r4, #64]	@ 0x40
90015610:	bd10      	pop	{r4, pc}
90015612:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90015614:	e7fc      	b.n	90015610 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90015616:	bf00      	nop
90015618:	24027e9a 	.word	0x24027e9a

9001561c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
9001561c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015620:	461d      	mov	r5, r3
90015622:	b08a      	sub	sp, #40	@ 0x28
90015624:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90015628:	4690      	mov	r8, r2
9001562a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
9001562e:	2400      	movs	r4, #0
90015630:	4607      	mov	r7, r0
90015632:	fb06 8505 	mla	r5, r6, r5, r8
90015636:	9404      	str	r4, [sp, #16]
90015638:	f88d 4020 	strb.w	r4, [sp, #32]
9001563c:	e9cd 3101 	strd	r3, r1, [sp, #4]
90015640:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90015644:	f8ad 3018 	strh.w	r3, [sp, #24]
90015648:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001564c:	f8ad 301a 	strh.w	r3, [sp, #26]
90015650:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90015654:	f8ad 301c 	strh.w	r3, [sp, #28]
90015658:	f7ff ffce 	bl	900155f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001565c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90015660:	6878      	ldr	r0, [r7, #4]
90015662:	f8ad 601e 	strh.w	r6, [sp, #30]
90015666:	a901      	add	r1, sp, #4
90015668:	9505      	str	r5, [sp, #20]
9001566a:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
9001566e:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
90015672:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90015676:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
9001567a:	6803      	ldr	r3, [r0, #0]
9001567c:	685b      	ldr	r3, [r3, #4]
9001567e:	4798      	blx	r3
90015680:	b00a      	add	sp, #40	@ 0x28
90015682:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90015686 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
90015686:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001568a:	b08b      	sub	sp, #44	@ 0x2c
9001568c:	2400      	movs	r4, #0
9001568e:	4691      	mov	r9, r2
90015690:	461d      	mov	r5, r3
90015692:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
90015696:	f44f 6300 	mov.w	r3, #2048	@ 0x800
9001569a:	4688      	mov	r8, r1
9001569c:	4607      	mov	r7, r0
9001569e:	9404      	str	r4, [sp, #16]
900156a0:	fb06 9505 	mla	r5, r6, r5, r9
900156a4:	e9cd 3401 	strd	r3, r4, [sp, #4]
900156a8:	f7ff ffa6 	bl	900155f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900156ac:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900156b0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900156b4:	6878      	ldr	r0, [r7, #4]
900156b6:	f8ad 3018 	strh.w	r3, [sp, #24]
900156ba:	a901      	add	r1, sp, #4
900156bc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
900156c0:	9505      	str	r5, [sp, #20]
900156c2:	f8ad 301a 	strh.w	r3, [sp, #26]
900156c6:	f8ad 401c 	strh.w	r4, [sp, #28]
900156ca:	f8ad 601e 	strh.w	r6, [sp, #30]
900156ce:	f8cd 8010 	str.w	r8, [sp, #16]
900156d2:	f8ad 4020 	strh.w	r4, [sp, #32]
900156d6:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
900156da:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
900156de:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
900156e2:	6803      	ldr	r3, [r0, #0]
900156e4:	685b      	ldr	r3, [r3, #4]
900156e6:	4798      	blx	r3
900156e8:	b00b      	add	sp, #44	@ 0x2c
900156ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

900156f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
900156f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900156f4:	b08a      	sub	sp, #40	@ 0x28
900156f6:	4698      	mov	r8, r3
900156f8:	2300      	movs	r3, #0
900156fa:	4606      	mov	r6, r0
900156fc:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
90015700:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90015704:	2d0b      	cmp	r5, #11
90015706:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
9001570a:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
9001570e:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
90015712:	9304      	str	r3, [sp, #16]
90015714:	d137      	bne.n	90015786 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90015716:	2380      	movs	r3, #128	@ 0x80
90015718:	f88d 0020 	strb.w	r0, [sp, #32]
9001571c:	4630      	mov	r0, r6
9001571e:	9203      	str	r2, [sp, #12]
90015720:	e9cd 3101 	strd	r3, r1, [sp, #4]
90015724:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90015728:	f8ad 3018 	strh.w	r3, [sp, #24]
9001572c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90015730:	f8ad 301a 	strh.w	r3, [sp, #26]
90015734:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90015738:	f8ad 301c 	strh.w	r3, [sp, #28]
9001573c:	f7ff ff5c 	bl	900155f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90015740:	2c0b      	cmp	r4, #11
90015742:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
90015746:	f8ad 701e 	strh.w	r7, [sp, #30]
9001574a:	bf94      	ite	ls
9001574c:	4b19      	ldrls	r3, [pc, #100]	@ (900157b4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
9001574e:	2100      	movhi	r1, #0
90015750:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
90015754:	bf98      	it	ls
90015756:	5d19      	ldrbls	r1, [r3, r4]
90015758:	fb02 8307 	mla	r3, r2, r7, r8
9001575c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90015760:	10c9      	asrs	r1, r1, #3
90015762:	fb01 0003 	mla	r0, r1, r3, r0
90015766:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
9001576a:	a901      	add	r1, sp, #4
9001576c:	9005      	str	r0, [sp, #20]
9001576e:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90015772:	2300      	movs	r3, #0
90015774:	6870      	ldr	r0, [r6, #4]
90015776:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
9001577a:	6803      	ldr	r3, [r0, #0]
9001577c:	685b      	ldr	r3, [r3, #4]
9001577e:	4798      	blx	r3
90015780:	b00a      	add	sp, #40	@ 0x28
90015782:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015786:	2d02      	cmp	r5, #2
90015788:	d109      	bne.n	9001579e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
9001578a:	28ff      	cmp	r0, #255	@ 0xff
9001578c:	d105      	bne.n	9001579a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
9001578e:	f1bc 0f00 	cmp.w	ip, #0
90015792:	bf14      	ite	ne
90015794:	2340      	movne	r3, #64	@ 0x40
90015796:	2320      	moveq	r3, #32
90015798:	e7be      	b.n	90015718 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001579a:	2340      	movs	r3, #64	@ 0x40
9001579c:	e7bc      	b.n	90015718 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001579e:	28ff      	cmp	r0, #255	@ 0xff
900157a0:	d105      	bne.n	900157ae <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
900157a2:	f1bc 0f00 	cmp.w	ip, #0
900157a6:	bf14      	ite	ne
900157a8:	2304      	movne	r3, #4
900157aa:	2301      	moveq	r3, #1
900157ac:	e7b4      	b.n	90015718 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900157ae:	2304      	movs	r3, #4
900157b0:	e7b2      	b.n	90015718 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900157b2:	bf00      	nop
900157b4:	9002ff34 	.word	0x9002ff34

900157b8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
900157b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900157bc:	b08b      	sub	sp, #44	@ 0x2c
900157be:	461d      	mov	r5, r3
900157c0:	2400      	movs	r4, #0
900157c2:	4688      	mov	r8, r1
900157c4:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
900157c8:	4693      	mov	fp, r2
900157ca:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
900157ce:	4607      	mov	r7, r0
900157d0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900157d4:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
900157d8:	9404      	str	r4, [sp, #16]
900157da:	bf14      	ite	ne
900157dc:	2308      	movne	r3, #8
900157de:	2302      	moveq	r3, #2
900157e0:	fb05 b50a 	mla	r5, r5, sl, fp
900157e4:	e9cd 3401 	strd	r3, r4, [sp, #4]
900157e8:	f7ff ff06 	bl	900155f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900157ec:	2e0b      	cmp	r6, #11
900157ee:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
900157f2:	a901      	add	r1, sp, #4
900157f4:	bf98      	it	ls
900157f6:	4b13      	ldrls	r3, [pc, #76]	@ (90015844 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
900157f8:	f8ad a01e 	strh.w	sl, [sp, #30]
900157fc:	bf98      	it	ls
900157fe:	5d9c      	ldrbls	r4, [r3, r6]
90015800:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90015804:	10e4      	asrs	r4, r4, #3
90015806:	f8cd 8010 	str.w	r8, [sp, #16]
9001580a:	f8ad 3018 	strh.w	r3, [sp, #24]
9001580e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90015812:	fb04 0405 	mla	r4, r4, r5, r0
90015816:	6878      	ldr	r0, [r7, #4]
90015818:	f8ad 301a 	strh.w	r3, [sp, #26]
9001581c:	2300      	movs	r3, #0
9001581e:	9405      	str	r4, [sp, #20]
90015820:	f8ad 301c 	strh.w	r3, [sp, #28]
90015824:	f88d 9020 	strb.w	r9, [sp, #32]
90015828:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
9001582c:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90015830:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
90015834:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
90015838:	6803      	ldr	r3, [r0, #0]
9001583a:	685b      	ldr	r3, [r3, #4]
9001583c:	4798      	blx	r3
9001583e:	b00b      	add	sp, #44	@ 0x2c
90015840:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015844:	9002ff34 	.word	0x9002ff34

90015848 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90015848:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001584c:	461e      	mov	r6, r3
9001584e:	4b0a      	ldr	r3, [pc, #40]	@ (90015878 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90015850:	460f      	mov	r7, r1
90015852:	4690      	mov	r8, r2
90015854:	881d      	ldrh	r5, [r3, #0]
90015856:	f7ff fd23 	bl	900152a0 <_ZN8touchgfx3HAL3lcdEv>
9001585a:	6803      	ldr	r3, [r0, #0]
9001585c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001585e:	4798      	blx	r3
90015860:	280b      	cmp	r0, #11
90015862:	bf96      	itet	ls
90015864:	4b05      	ldrls	r3, [pc, #20]	@ (9001587c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90015866:	2400      	movhi	r4, #0
90015868:	5c1c      	ldrbls	r4, [r3, r0]
9001586a:	fb08 7005 	mla	r0, r8, r5, r7
9001586e:	10e4      	asrs	r4, r4, #3
90015870:	fb04 6000 	mla	r0, r4, r0, r6
90015874:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015878:	24027e96 	.word	0x24027e96
9001587c:	9002ff34 	.word	0x9002ff34

90015880 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90015880:	b5f0      	push	{r4, r5, r6, r7, lr}
90015882:	b08b      	sub	sp, #44	@ 0x2c
90015884:	461f      	mov	r7, r3
90015886:	4604      	mov	r4, r0
90015888:	4616      	mov	r6, r2
9001588a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001588e:	2500      	movs	r5, #0
90015890:	e9cd 3101 	strd	r3, r1, [sp, #4]
90015894:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90015898:	9504      	str	r5, [sp, #16]
9001589a:	f8ad 3018 	strh.w	r3, [sp, #24]
9001589e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
900158a2:	f8ad 301a 	strh.w	r3, [sp, #26]
900158a6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900158aa:	f8ad 301c 	strh.w	r3, [sp, #28]
900158ae:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900158b2:	f88d 3020 	strb.w	r3, [sp, #32]
900158b6:	f7ff fe9f 	bl	900155f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900158ba:	463a      	mov	r2, r7
900158bc:	4631      	mov	r1, r6
900158be:	4603      	mov	r3, r0
900158c0:	4620      	mov	r0, r4
900158c2:	f7ff ffc1 	bl	90015848 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900158c6:	4b0e      	ldr	r3, [pc, #56]	@ (90015900 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
900158c8:	9005      	str	r0, [sp, #20]
900158ca:	881b      	ldrh	r3, [r3, #0]
900158cc:	f8ad 301e 	strh.w	r3, [sp, #30]
900158d0:	f7ff fce6 	bl	900152a0 <_ZN8touchgfx3HAL3lcdEv>
900158d4:	6803      	ldr	r3, [r0, #0]
900158d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900158d8:	4798      	blx	r3
900158da:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900158dc:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
900158e0:	a901      	add	r1, sp, #4
900158e2:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
900158e6:	9304      	str	r3, [sp, #16]
900158e8:	6860      	ldr	r0, [r4, #4]
900158ea:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
900158ee:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
900158f2:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
900158f6:	6803      	ldr	r3, [r0, #0]
900158f8:	685b      	ldr	r3, [r3, #4]
900158fa:	4798      	blx	r3
900158fc:	b00b      	add	sp, #44	@ 0x2c
900158fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
90015900:	24027e96 	.word	0x24027e96

90015904 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90015904:	b5f0      	push	{r4, r5, r6, r7, lr}
90015906:	b08d      	sub	sp, #52	@ 0x34
90015908:	2501      	movs	r5, #1
9001590a:	4604      	mov	r4, r0
9001590c:	466b      	mov	r3, sp
9001590e:	9503      	str	r5, [sp, #12]
90015910:	e883 0006 	stmia.w	r3, {r1, r2}
90015914:	2300      	movs	r3, #0
90015916:	f8bd 6000 	ldrh.w	r6, [sp]
9001591a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
9001591e:	9306      	str	r3, [sp, #24]
90015920:	6803      	ldr	r3, [r0, #0]
90015922:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90015924:	4798      	blx	r3
90015926:	463a      	mov	r2, r7
90015928:	4631      	mov	r1, r6
9001592a:	4603      	mov	r3, r0
9001592c:	4620      	mov	r0, r4
9001592e:	f7ff ff8b 	bl	90015848 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90015932:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90015934:	9004      	str	r0, [sp, #16]
90015936:	9307      	str	r3, [sp, #28]
90015938:	f8bd 3004 	ldrh.w	r3, [sp, #4]
9001593c:	f8ad 3020 	strh.w	r3, [sp, #32]
90015940:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90015944:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90015948:	4b0e      	ldr	r3, [pc, #56]	@ (90015984 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
9001594a:	881b      	ldrh	r3, [r3, #0]
9001594c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90015950:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90015954:	f7ff fca4 	bl	900152a0 <_ZN8touchgfx3HAL3lcdEv>
90015958:	6803      	ldr	r3, [r0, #0]
9001595a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001595c:	4798      	blx	r3
9001595e:	23ff      	movs	r3, #255	@ 0xff
90015960:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90015964:	a903      	add	r1, sp, #12
90015966:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
9001596a:	6860      	ldr	r0, [r4, #4]
9001596c:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90015970:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90015974:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90015978:	6803      	ldr	r3, [r0, #0]
9001597a:	685b      	ldr	r3, [r3, #4]
9001597c:	4798      	blx	r3
9001597e:	6c60      	ldr	r0, [r4, #68]	@ 0x44
90015980:	b00d      	add	sp, #52	@ 0x34
90015982:	bdf0      	pop	{r4, r5, r6, r7, pc}
90015984:	24027e96 	.word	0x24027e96

90015988 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90015988:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001598c:	b08c      	sub	sp, #48	@ 0x30
9001598e:	461e      	mov	r6, r3
90015990:	2300      	movs	r3, #0
90015992:	4604      	mov	r4, r0
90015994:	466d      	mov	r5, sp
90015996:	9306      	str	r3, [sp, #24]
90015998:	6803      	ldr	r3, [r0, #0]
9001599a:	e885 0006 	stmia.w	r5, {r1, r2}
9001599e:	2501      	movs	r5, #1
900159a0:	f8bd 7000 	ldrh.w	r7, [sp]
900159a4:	f8bd 8002 	ldrh.w	r8, [sp, #2]
900159a8:	9503      	str	r5, [sp, #12]
900159aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900159ac:	4798      	blx	r3
900159ae:	4642      	mov	r2, r8
900159b0:	4639      	mov	r1, r7
900159b2:	4603      	mov	r3, r0
900159b4:	4620      	mov	r0, r4
900159b6:	f7ff ff47 	bl	90015848 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900159ba:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900159be:	9004      	str	r0, [sp, #16]
900159c0:	f8ad 3020 	strh.w	r3, [sp, #32]
900159c4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
900159c8:	9607      	str	r6, [sp, #28]
900159ca:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
900159ce:	4b10      	ldr	r3, [pc, #64]	@ (90015a10 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
900159d0:	881b      	ldrh	r3, [r3, #0]
900159d2:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
900159d6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
900159d8:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
900159dc:	f7ff fc60 	bl	900152a0 <_ZN8touchgfx3HAL3lcdEv>
900159e0:	6803      	ldr	r3, [r0, #0]
900159e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900159e4:	4798      	blx	r3
900159e6:	23ff      	movs	r3, #255	@ 0xff
900159e8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
900159ec:	a903      	add	r1, sp, #12
900159ee:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
900159f2:	6860      	ldr	r0, [r4, #4]
900159f4:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
900159f8:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
900159fc:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90015a00:	6803      	ldr	r3, [r0, #0]
90015a02:	685b      	ldr	r3, [r3, #4]
90015a04:	4798      	blx	r3
90015a06:	4630      	mov	r0, r6
90015a08:	b00c      	add	sp, #48	@ 0x30
90015a0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015a0e:	bf00      	nop
90015a10:	24027e96 	.word	0x24027e96

90015a14 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90015a14:	b5f0      	push	{r4, r5, r6, r7, lr}
90015a16:	b085      	sub	sp, #20
90015a18:	4605      	mov	r5, r0
90015a1a:	ac02      	add	r4, sp, #8
90015a1c:	e884 0006 	stmia.w	r4, {r1, r2}
90015a20:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90015a24:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90015a28:	f7ff fde6 	bl	900155f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90015a2c:	4631      	mov	r1, r6
90015a2e:	4603      	mov	r3, r0
90015a30:	463a      	mov	r2, r7
90015a32:	4628      	mov	r0, r5
90015a34:	f7ff ff08 	bl	90015848 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90015a38:	4a05      	ldr	r2, [pc, #20]	@ (90015a50 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90015a3a:	682b      	ldr	r3, [r5, #0]
90015a3c:	8812      	ldrh	r2, [r2, #0]
90015a3e:	9200      	str	r2, [sp, #0]
90015a40:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
90015a42:	4603      	mov	r3, r0
90015a44:	4628      	mov	r0, r5
90015a46:	e894 0006 	ldmia.w	r4, {r1, r2}
90015a4a:	47b0      	blx	r6
90015a4c:	b005      	add	sp, #20
90015a4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90015a50:	24027e96 	.word	0x24027e96

90015a54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90015a54:	b570      	push	{r4, r5, r6, lr}
90015a56:	f890 306a 	ldrb.w	r3, [r0, #106]	@ 0x6a
90015a5a:	4604      	mov	r4, r0
90015a5c:	b19b      	cbz	r3, 90015a86 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90015a5e:	2002      	movs	r0, #2
90015a60:	f7ec f8b4 	bl	90001bcc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90015a64:	2300      	movs	r3, #0
90015a66:	4620      	mov	r0, r4
90015a68:	f884 306a 	strb.w	r3, [r4, #106]	@ 0x6a
90015a6c:	f884 3069 	strb.w	r3, [r4, #105]	@ 0x69
90015a70:	6823      	ldr	r3, [r4, #0]
90015a72:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
90015a76:	f7ff fdbf 	bl	900155f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90015a7a:	4601      	mov	r1, r0
90015a7c:	4620      	mov	r0, r4
90015a7e:	462b      	mov	r3, r5
90015a80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015a84:	4718      	bx	r3
90015a86:	bd70      	pop	{r4, r5, r6, pc}

90015a88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90015a88:	b538      	push	{r3, r4, r5, lr}
90015a8a:	f890 3078 	ldrb.w	r3, [r0, #120]	@ 0x78
90015a8e:	4604      	mov	r4, r0
90015a90:	460d      	mov	r5, r1
90015a92:	428b      	cmp	r3, r1
90015a94:	d006      	beq.n	90015aa4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90015a96:	6803      	ldr	r3, [r0, #0]
90015a98:	b929      	cbnz	r1, 90015aa6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90015a9a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
90015a9e:	4798      	blx	r3
90015aa0:	f884 5078 	strb.w	r5, [r4, #120]	@ 0x78
90015aa4:	bd38      	pop	{r3, r4, r5, pc}
90015aa6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
90015aaa:	e7f8      	b.n	90015a9e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90015aac <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90015aac:	4b0d      	ldr	r3, [pc, #52]	@ (90015ae4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90015aae:	b510      	push	{r4, lr}
90015ab0:	781b      	ldrb	r3, [r3, #0]
90015ab2:	4604      	mov	r4, r0
90015ab4:	b95b      	cbnz	r3, 90015ace <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90015ab6:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90015aba:	2b02      	cmp	r3, #2
90015abc:	d007      	beq.n	90015ace <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90015abe:	6840      	ldr	r0, [r0, #4]
90015ac0:	f000 f918 	bl	90015cf4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90015ac4:	b118      	cbz	r0, 90015ace <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90015ac6:	6862      	ldr	r2, [r4, #4]
90015ac8:	7a53      	ldrb	r3, [r2, #9]
90015aca:	2b00      	cmp	r3, #0
90015acc:	d0fc      	beq.n	90015ac8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90015ace:	f7ed fa1b 	bl	90002f08 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90015ad2:	4620      	mov	r0, r4
90015ad4:	2100      	movs	r1, #0
90015ad6:	f7ff ffd7 	bl	90015a88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90015ada:	4620      	mov	r0, r4
90015adc:	f7ff fd8c 	bl	900155f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90015ae0:	bd10      	pop	{r4, pc}
90015ae2:	bf00      	nop
90015ae4:	24027e9a 	.word	0x24027e9a

90015ae8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90015ae8:	b570      	push	{r4, r5, r6, lr}
90015aea:	4604      	mov	r4, r0
90015aec:	6803      	ldr	r3, [r0, #0]
90015aee:	b919      	cbnz	r1, 90015af8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90015af0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90015af2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015af6:	4718      	bx	r3
90015af8:	2200      	movs	r2, #0
90015afa:	f890 6078 	ldrb.w	r6, [r0, #120]	@ 0x78
90015afe:	f880 2078 	strb.w	r2, [r0, #120]	@ 0x78
90015b02:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90015b04:	4798      	blx	r3
90015b06:	4605      	mov	r5, r0
90015b08:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
90015b0c:	4620      	mov	r0, r4
90015b0e:	2101      	movs	r1, #1
90015b10:	f7ff ffba 	bl	90015a88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90015b14:	4628      	mov	r0, r5
90015b16:	bd70      	pop	{r4, r5, r6, pc}

90015b18 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90015b18:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90015b1c:	1a13      	subs	r3, r2, r0
90015b1e:	4258      	negs	r0, r3
90015b20:	4158      	adcs	r0, r3
90015b22:	4770      	bx	lr

90015b24 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90015b24:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90015b28:	1a9b      	subs	r3, r3, r2
90015b2a:	2b00      	cmp	r3, #0
90015b2c:	bfdc      	itt	le
90015b2e:	6882      	ldrle	r2, [r0, #8]
90015b30:	189b      	addle	r3, r3, r2
90015b32:	2b01      	cmp	r3, #1
90015b34:	bfcc      	ite	gt
90015b36:	2000      	movgt	r0, #0
90015b38:	2001      	movle	r0, #1
90015b3a:	4770      	bx	lr

90015b3c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90015b3c:	6902      	ldr	r2, [r0, #16]
90015b3e:	6843      	ldr	r3, [r0, #4]
90015b40:	2024      	movs	r0, #36	@ 0x24
90015b42:	fb00 3002 	mla	r0, r0, r2, r3
90015b46:	4770      	bx	lr

90015b48 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90015b48:	6803      	ldr	r3, [r0, #0]
90015b4a:	691b      	ldr	r3, [r3, #16]
90015b4c:	4718      	bx	r3

90015b4e <_ZN8touchgfx13DMA_Interface7executeEv>:
90015b4e:	2301      	movs	r3, #1
90015b50:	b570      	push	{r4, r5, r6, lr}
90015b52:	7203      	strb	r3, [r0, #8]
90015b54:	4604      	mov	r4, r0
90015b56:	6840      	ldr	r0, [r0, #4]
90015b58:	6803      	ldr	r3, [r0, #0]
90015b5a:	699b      	ldr	r3, [r3, #24]
90015b5c:	4798      	blx	r3
90015b5e:	6803      	ldr	r3, [r0, #0]
90015b60:	4605      	mov	r5, r0
90015b62:	2b40      	cmp	r3, #64	@ 0x40
90015b64:	d00c      	beq.n	90015b80 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90015b66:	d810      	bhi.n	90015b8a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90015b68:	2b04      	cmp	r3, #4
90015b6a:	d01d      	beq.n	90015ba8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90015b6c:	d804      	bhi.n	90015b78 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90015b6e:	2b01      	cmp	r3, #1
90015b70:	d006      	beq.n	90015b80 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90015b72:	2b02      	cmp	r3, #2
90015b74:	d02c      	beq.n	90015bd0 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90015b76:	bd70      	pop	{r4, r5, r6, pc}
90015b78:	2b08      	cmp	r3, #8
90015b7a:	d01d      	beq.n	90015bb8 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90015b7c:	2b20      	cmp	r3, #32
90015b7e:	d1fa      	bne.n	90015b76 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90015b80:	6823      	ldr	r3, [r4, #0]
90015b82:	4620      	mov	r0, r4
90015b84:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90015b86:	4798      	blx	r3
90015b88:	e013      	b.n	90015bb2 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90015b8a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
90015b8e:	d0f7      	beq.n	90015b80 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90015b90:	d804      	bhi.n	90015b9c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90015b92:	2b80      	cmp	r3, #128	@ 0x80
90015b94:	d0f4      	beq.n	90015b80 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90015b96:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
90015b9a:	e7f0      	b.n	90015b7e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90015b9c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
90015ba0:	d0ee      	beq.n	90015b80 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90015ba2:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
90015ba6:	e7e5      	b.n	90015b74 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90015ba8:	6823      	ldr	r3, [r4, #0]
90015baa:	7f01      	ldrb	r1, [r0, #28]
90015bac:	4620      	mov	r0, r4
90015bae:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90015bb0:	4798      	blx	r3
90015bb2:	6823      	ldr	r3, [r4, #0]
90015bb4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90015bb6:	e006      	b.n	90015bc6 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90015bb8:	6823      	ldr	r3, [r4, #0]
90015bba:	7f01      	ldrb	r1, [r0, #28]
90015bbc:	4620      	mov	r0, r4
90015bbe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90015bc0:	4798      	blx	r3
90015bc2:	6823      	ldr	r3, [r4, #0]
90015bc4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90015bc6:	4629      	mov	r1, r5
90015bc8:	4620      	mov	r0, r4
90015bca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015bce:	4718      	bx	r3
90015bd0:	6823      	ldr	r3, [r4, #0]
90015bd2:	4620      	mov	r0, r4
90015bd4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90015bd6:	4798      	blx	r3
90015bd8:	e7f3      	b.n	90015bc2 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90015bda <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90015bda:	4770      	bx	lr

90015bdc <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90015bdc:	4770      	bx	lr

90015bde <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90015bde:	4770      	bx	lr

90015be0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90015be0:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90015be4:	b510      	push	{r4, lr}
90015be6:	1ad2      	subs	r2, r2, r3
90015be8:	2a00      	cmp	r2, #0
90015bea:	bfdc      	itt	le
90015bec:	6884      	ldrle	r4, [r0, #8]
90015bee:	1912      	addle	r2, r2, r4
90015bf0:	2a01      	cmp	r2, #1
90015bf2:	dd16      	ble.n	90015c22 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90015bf4:	6842      	ldr	r2, [r0, #4]
90015bf6:	2424      	movs	r4, #36	@ 0x24
90015bf8:	fb04 2303 	mla	r3, r4, r3, r2
90015bfc:	f101 0220 	add.w	r2, r1, #32
90015c00:	f851 4b04 	ldr.w	r4, [r1], #4
90015c04:	4291      	cmp	r1, r2
90015c06:	f843 4b04 	str.w	r4, [r3], #4
90015c0a:	d1f9      	bne.n	90015c00 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90015c0c:	780a      	ldrb	r2, [r1, #0]
90015c0e:	701a      	strb	r2, [r3, #0]
90015c10:	68c3      	ldr	r3, [r0, #12]
90015c12:	6882      	ldr	r2, [r0, #8]
90015c14:	f3bf 8f5b 	dmb	ish
90015c18:	3301      	adds	r3, #1
90015c1a:	429a      	cmp	r2, r3
90015c1c:	bfd8      	it	le
90015c1e:	1a9b      	suble	r3, r3, r2
90015c20:	60c3      	str	r3, [r0, #12]
90015c22:	bd10      	pop	{r4, pc}

90015c24 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90015c24:	6903      	ldr	r3, [r0, #16]
90015c26:	6882      	ldr	r2, [r0, #8]
90015c28:	f3bf 8f5b 	dmb	ish
90015c2c:	3301      	adds	r3, #1
90015c2e:	429a      	cmp	r2, r3
90015c30:	bfd8      	it	le
90015c32:	1a9b      	suble	r3, r3, r2
90015c34:	6103      	str	r3, [r0, #16]
90015c36:	4770      	bx	lr

90015c38 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90015c38:	b570      	push	{r4, r5, r6, lr}
90015c3a:	4604      	mov	r4, r0
90015c3c:	460e      	mov	r6, r1
90015c3e:	6860      	ldr	r0, [r4, #4]
90015c40:	6803      	ldr	r3, [r0, #0]
90015c42:	685b      	ldr	r3, [r3, #4]
90015c44:	4798      	blx	r3
90015c46:	2800      	cmp	r0, #0
90015c48:	d1f9      	bne.n	90015c3e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90015c4a:	4d0d      	ldr	r5, [pc, #52]	@ (90015c80 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90015c4c:	6828      	ldr	r0, [r5, #0]
90015c4e:	6803      	ldr	r3, [r0, #0]
90015c50:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90015c52:	4798      	blx	r3
90015c54:	f7ed f966 	bl	90002f24 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90015c58:	6828      	ldr	r0, [r5, #0]
90015c5a:	2101      	movs	r1, #1
90015c5c:	f7ff ff14 	bl	90015a88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90015c60:	6860      	ldr	r0, [r4, #4]
90015c62:	4631      	mov	r1, r6
90015c64:	6803      	ldr	r3, [r0, #0]
90015c66:	689b      	ldr	r3, [r3, #8]
90015c68:	4798      	blx	r3
90015c6a:	6823      	ldr	r3, [r4, #0]
90015c6c:	4620      	mov	r0, r4
90015c6e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90015c70:	4798      	blx	r3
90015c72:	6828      	ldr	r0, [r5, #0]
90015c74:	6803      	ldr	r3, [r0, #0]
90015c76:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015c7a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90015c7c:	4718      	bx	r3
90015c7e:	bf00      	nop
90015c80:	24027e9c 	.word	0x24027e9c

90015c84 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90015c84:	b508      	push	{r3, lr}
90015c86:	f7ed f93f 	bl	90002f08 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90015c8a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90015c8e:	f7ed b943 	b.w	90002f18 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90015c92 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90015c92:	b510      	push	{r4, lr}
90015c94:	4604      	mov	r4, r0
90015c96:	2114      	movs	r1, #20
90015c98:	f015 fc35 	bl	9002b506 <_ZdlPvj>
90015c9c:	4620      	mov	r0, r4
90015c9e:	bd10      	pop	{r4, pc}

90015ca0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90015ca0:	b570      	push	{r4, r5, r6, lr}
90015ca2:	4604      	mov	r4, r0
90015ca4:	6840      	ldr	r0, [r0, #4]
90015ca6:	6803      	ldr	r3, [r0, #0]
90015ca8:	681b      	ldr	r3, [r3, #0]
90015caa:	4798      	blx	r3
90015cac:	4605      	mov	r5, r0
90015cae:	b930      	cbnz	r0, 90015cbe <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90015cb0:	7a23      	ldrb	r3, [r4, #8]
90015cb2:	b123      	cbz	r3, 90015cbe <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90015cb4:	6860      	ldr	r0, [r4, #4]
90015cb6:	6803      	ldr	r3, [r0, #0]
90015cb8:	695b      	ldr	r3, [r3, #20]
90015cba:	4798      	blx	r3
90015cbc:	7225      	strb	r5, [r4, #8]
90015cbe:	6860      	ldr	r0, [r4, #4]
90015cc0:	6803      	ldr	r3, [r0, #0]
90015cc2:	681b      	ldr	r3, [r3, #0]
90015cc4:	4798      	blx	r3
90015cc6:	b928      	cbnz	r0, 90015cd4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90015cc8:	6823      	ldr	r3, [r4, #0]
90015cca:	4620      	mov	r0, r4
90015ccc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90015cce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015cd2:	4718      	bx	r3
90015cd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015cd8:	f7ed b92c 	b.w	90002f34 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90015cdc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90015cdc:	b510      	push	{r4, lr}
90015cde:	6082      	str	r2, [r0, #8]
90015ce0:	2200      	movs	r2, #0
90015ce2:	4c03      	ldr	r4, [pc, #12]	@ (90015cf0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90015ce4:	e9c0 2203 	strd	r2, r2, [r0, #12]
90015ce8:	e9c0 4100 	strd	r4, r1, [r0]
90015cec:	bd10      	pop	{r4, pc}
90015cee:	bf00      	nop
90015cf0:	9002ff48 	.word	0x9002ff48

90015cf4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90015cf4:	6840      	ldr	r0, [r0, #4]
90015cf6:	6803      	ldr	r3, [r0, #0]
90015cf8:	681b      	ldr	r3, [r3, #0]
90015cfa:	4718      	bx	r3

90015cfc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90015cfc:	094a      	lsrs	r2, r1, #5
90015cfe:	4b06      	ldr	r3, [pc, #24]	@ (90015d18 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90015d00:	60c1      	str	r1, [r0, #12]
90015d02:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90015d06:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90015d0a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90015d0e:	4313      	orrs	r3, r2
90015d10:	4319      	orrs	r1, r3
90015d12:	8201      	strh	r1, [r0, #16]
90015d14:	4770      	bx	lr
90015d16:	bf00      	nop
90015d18:	fffff800 	.word	0xfffff800

90015d1c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90015d1c:	f1a0 0008 	sub.w	r0, r0, #8
90015d20:	e7ec      	b.n	90015cfc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90015d22:	bf00      	nop

90015d24 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90015d24:	b508      	push	{r3, lr}
90015d26:	4b05      	ldr	r3, [pc, #20]	@ (90015d3c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90015d28:	6818      	ldr	r0, [r3, #0]
90015d2a:	6803      	ldr	r3, [r0, #0]
90015d2c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
90015d30:	4798      	blx	r3
90015d32:	1e43      	subs	r3, r0, #1
90015d34:	4258      	negs	r0, r3
90015d36:	4158      	adcs	r0, r3
90015d38:	bd08      	pop	{r3, pc}
90015d3a:	bf00      	nop
90015d3c:	24027e9c 	.word	0x24027e9c

90015d40 <_ZN8touchgfx13PainterRGB565D1Ev>:
90015d40:	4770      	bx	lr

90015d42 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90015d42:	3808      	subs	r0, #8
90015d44:	4770      	bx	lr

90015d46 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90015d46:	b430      	push	{r4, r5}
90015d48:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90015d4c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90015d50:	8a02      	ldrh	r2, [r0, #16]
90015d52:	f89d 3010 	ldrb.w	r3, [sp, #16]
90015d56:	4629      	mov	r1, r5
90015d58:	9202      	str	r2, [sp, #8]
90015d5a:	68c2      	ldr	r2, [r0, #12]
90015d5c:	4620      	mov	r0, r4
90015d5e:	bc30      	pop	{r4, r5}
90015d60:	f7ed bb7c 	b.w	9000345c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90015d64 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90015d64:	f7ed bb70 	b.w	90003448 <_ZN8touchgfx5paint8tearDownEv>

90015d68 <_ZN8touchgfx13PainterRGB565D0Ev>:
90015d68:	b510      	push	{r4, lr}
90015d6a:	4604      	mov	r4, r0
90015d6c:	2114      	movs	r1, #20
90015d6e:	f015 fbca 	bl	9002b506 <_ZdlPvj>
90015d72:	4620      	mov	r0, r4
90015d74:	bd10      	pop	{r4, pc}

90015d76 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90015d76:	f1a0 0008 	sub.w	r0, r0, #8
90015d7a:	e7f5      	b.n	90015d68 <_ZN8touchgfx13PainterRGB565D0Ev>

90015d7c <_ZN8touchgfx6CircleD1Ev>:
90015d7c:	4770      	bx	lr

90015d7e <_ZN8touchgfx6CircleD0Ev>:
90015d7e:	b510      	push	{r4, lr}
90015d80:	4604      	mov	r4, r0
90015d82:	2148      	movs	r1, #72	@ 0x48
90015d84:	f015 fbbf 	bl	9002b506 <_ZdlPvj>
90015d88:	4620      	mov	r0, r4
90015d8a:	bd10      	pop	{r4, pc}

90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
90015d8c:	b507      	push	{r0, r1, r2, lr}
90015d8e:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
90015d92:	ab01      	add	r3, sp, #4
90015d94:	6809      	ldr	r1, [r1, #0]
90015d96:	6800      	ldr	r0, [r0, #0]
90015d98:	f006 f9b1 	bl	9001c0fe <_ZN8touchgfx6muldivElllRl>
90015d9c:	b003      	add	sp, #12
90015d9e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

90015da4 <_ZN8touchgfx7CWRUtil4sineEi>:
90015da4:	f44f 73b4 	mov.w	r3, #360	@ 0x168
90015da8:	fb90 f2f3 	sdiv	r2, r0, r3
90015dac:	fb02 0013 	mls	r0, r2, r3, r0
90015db0:	2800      	cmp	r0, #0
90015db2:	bfb8      	it	lt
90015db4:	18c0      	addlt	r0, r0, r3
90015db6:	4b0a      	ldr	r3, [pc, #40]	@ (90015de0 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
90015db8:	285a      	cmp	r0, #90	@ 0x5a
90015dba:	dc02      	bgt.n	90015dc2 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
90015dbc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90015dc0:	4770      	bx	lr
90015dc2:	28b4      	cmp	r0, #180	@ 0xb4
90015dc4:	dc02      	bgt.n	90015dcc <_ZN8touchgfx7CWRUtil4sineEi+0x28>
90015dc6:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
90015dca:	e7f7      	b.n	90015dbc <_ZN8touchgfx7CWRUtil4sineEi+0x18>
90015dcc:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
90015dd0:	bfd4      	ite	le
90015dd2:	38b4      	suble	r0, #180	@ 0xb4
90015dd4:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
90015dd8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90015ddc:	4240      	negs	r0, r0
90015dde:	4770      	bx	lr
90015de0:	9002ff9c 	.word	0x9002ff9c

90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
90015de4:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
90015de8:	fb90 f2f3 	sdiv	r2, r0, r3
90015dec:	b573      	push	{r0, r1, r4, r5, r6, lr}
90015dee:	fb02 0013 	mls	r0, r2, r3, r0
90015df2:	2800      	cmp	r0, #0
90015df4:	bfb8      	it	lt
90015df6:	18c0      	addlt	r0, r0, r3
90015df8:	1144      	asrs	r4, r0, #5
90015dfa:	f000 061f 	and.w	r6, r0, #31
90015dfe:	4620      	mov	r0, r4
90015e00:	f7ff ffd0 	bl	90015da4 <_ZN8touchgfx7CWRUtil4sineEi>
90015e04:	4605      	mov	r5, r0
90015e06:	b90e      	cbnz	r6, 90015e0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
90015e08:	b002      	add	sp, #8
90015e0a:	bd70      	pop	{r4, r5, r6, pc}
90015e0c:	1c60      	adds	r0, r4, #1
90015e0e:	f7ff ffc9 	bl	90015da4 <_ZN8touchgfx7CWRUtil4sineEi>
90015e12:	ab01      	add	r3, sp, #4
90015e14:	2220      	movs	r2, #32
90015e16:	4631      	mov	r1, r6
90015e18:	1b40      	subs	r0, r0, r5
90015e1a:	f006 f970 	bl	9001c0fe <_ZN8touchgfx6muldivElllRl>
90015e1e:	4428      	add	r0, r5
90015e20:	e7f2      	b.n	90015e08 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
90015e22:	b508      	push	{r3, lr}
90015e24:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
90015e28:	f7ff ffdc 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015e2c:	bd08      	pop	{r3, pc}
	...

90015e30 <_ZN8touchgfx6CircleC1Ev>:
90015e30:	b510      	push	{r4, lr}
90015e32:	4604      	mov	r4, r0
90015e34:	f000 fd64 	bl	90016900 <_ZN8touchgfx12CanvasWidgetC1Ev>
90015e38:	4b08      	ldr	r3, [pc, #32]	@ (90015e5c <_ZN8touchgfx6CircleC1Ev+0x2c>)
90015e3a:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
90015e3e:	4620      	mov	r0, r4
90015e40:	6023      	str	r3, [r4, #0]
90015e42:	2300      	movs	r3, #0
90015e44:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
90015e48:	f24b 4205 	movw	r2, #46085	@ 0xb405
90015e4c:	60a3      	str	r3, [r4, #8]
90015e4e:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
90015e52:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
90015e56:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
90015e5a:	bd10      	pop	{r4, pc}
90015e5c:	9003005c 	.word	0x9003005c

90015e60 <_ZN8touchgfx6Circle15setCapPrecisionEi>:
90015e60:	29b4      	cmp	r1, #180	@ 0xb4
90015e62:	bfa8      	it	ge
90015e64:	21b4      	movge	r1, #180	@ 0xb4
90015e66:	2901      	cmp	r1, #1
90015e68:	bfb8      	it	lt
90015e6a:	2101      	movlt	r1, #1
90015e6c:	f880 1045 	strb.w	r1, [r0, #69]	@ 0x45
90015e70:	4770      	bx	lr

90015e72 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
90015e72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015e76:	428a      	cmp	r2, r1
90015e78:	4680      	mov	r8, r0
90015e7a:	4610      	mov	r0, r2
90015e7c:	4699      	mov	r9, r3
90015e7e:	bfaa      	itet	ge
90015e80:	460a      	movge	r2, r1
90015e82:	460b      	movlt	r3, r1
90015e84:	4603      	movge	r3, r0
90015e86:	b085      	sub	sp, #20
90015e88:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
90015e8c:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
90015e90:	1a99      	subs	r1, r3, r2
90015e92:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90015e94:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
90015e98:	bfa4      	itt	ge
90015e9a:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
90015e9e:	2200      	movge	r2, #0
90015ea0:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
90015ea4:	9300      	str	r3, [sp, #0]
90015ea6:	f102 0b01 	add.w	fp, r2, #1
90015eaa:	2c00      	cmp	r4, #0
90015eac:	f040 80ae 	bne.w	9001600c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19a>
90015eb0:	4610      	mov	r0, r2
90015eb2:	9201      	str	r2, [sp, #4]
90015eb4:	f7ff ff96 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015eb8:	a903      	add	r1, sp, #12
90015eba:	9003      	str	r0, [sp, #12]
90015ebc:	4650      	mov	r0, sl
90015ebe:	f7ff ff65 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015ec2:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
90015ec6:	9a01      	ldr	r2, [sp, #4]
90015ec8:	4408      	add	r0, r1
90015eca:	f8d9 1000 	ldr.w	r1, [r9]
90015ece:	4281      	cmp	r1, r0
90015ed0:	bfc8      	it	gt
90015ed2:	f8c9 0000 	strgt.w	r0, [r9]
90015ed6:	6839      	ldr	r1, [r7, #0]
90015ed8:	4288      	cmp	r0, r1
90015eda:	bfc8      	it	gt
90015edc:	6038      	strgt	r0, [r7, #0]
90015ede:	4610      	mov	r0, r2
90015ee0:	f7ff ff9f 	bl	90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90015ee4:	a903      	add	r1, sp, #12
90015ee6:	9003      	str	r0, [sp, #12]
90015ee8:	4650      	mov	r0, sl
90015eea:	f7ff ff4f 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015eee:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90015ef2:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
90015ef6:	1a10      	subs	r0, r2, r0
90015ef8:	6832      	ldr	r2, [r6, #0]
90015efa:	4282      	cmp	r2, r0
90015efc:	bfc8      	it	gt
90015efe:	6030      	strgt	r0, [r6, #0]
90015f00:	682a      	ldr	r2, [r5, #0]
90015f02:	4290      	cmp	r0, r2
90015f04:	fb9b f2f1 	sdiv	r2, fp, r1
90015f08:	fb01 b212 	mls	r2, r1, r2, fp
90015f0c:	bfc8      	it	gt
90015f0e:	6028      	strgt	r0, [r5, #0]
90015f10:	1a8a      	subs	r2, r1, r2
90015f12:	fb92 f0f1 	sdiv	r0, r2, r1
90015f16:	fb01 2210 	mls	r2, r1, r0, r2
90015f1a:	4493      	add	fp, r2
90015f1c:	9b00      	ldr	r3, [sp, #0]
90015f1e:	455b      	cmp	r3, fp
90015f20:	db2a      	blt.n	90015f78 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x106>
90015f22:	4658      	mov	r0, fp
90015f24:	f7ff ff5e 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015f28:	a903      	add	r1, sp, #12
90015f2a:	9003      	str	r0, [sp, #12]
90015f2c:	4650      	mov	r0, sl
90015f2e:	f7ff ff2d 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015f32:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90015f36:	4410      	add	r0, r2
90015f38:	f8d9 2000 	ldr.w	r2, [r9]
90015f3c:	4282      	cmp	r2, r0
90015f3e:	bfc8      	it	gt
90015f40:	f8c9 0000 	strgt.w	r0, [r9]
90015f44:	683a      	ldr	r2, [r7, #0]
90015f46:	4290      	cmp	r0, r2
90015f48:	bfc8      	it	gt
90015f4a:	6038      	strgt	r0, [r7, #0]
90015f4c:	4658      	mov	r0, fp
90015f4e:	f7ff ff68 	bl	90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90015f52:	a903      	add	r1, sp, #12
90015f54:	9003      	str	r0, [sp, #12]
90015f56:	4650      	mov	r0, sl
90015f58:	f7ff ff18 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015f5c:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90015f60:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
90015f64:	1a10      	subs	r0, r2, r0
90015f66:	6832      	ldr	r2, [r6, #0]
90015f68:	4282      	cmp	r2, r0
90015f6a:	bfc8      	it	gt
90015f6c:	6030      	strgt	r0, [r6, #0]
90015f6e:	682a      	ldr	r2, [r5, #0]
90015f70:	4290      	cmp	r0, r2
90015f72:	bfc8      	it	gt
90015f74:	6028      	strgt	r0, [r5, #0]
90015f76:	e7d1      	b.n	90015f1c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xaa>
90015f78:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
90015f7c:	9b00      	ldr	r3, [sp, #0]
90015f7e:	455b      	cmp	r3, fp
90015f80:	dd27      	ble.n	90015fd2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x160>
90015f82:	4618      	mov	r0, r3
90015f84:	f7ff ff2e 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015f88:	a903      	add	r1, sp, #12
90015f8a:	9003      	str	r0, [sp, #12]
90015f8c:	4650      	mov	r0, sl
90015f8e:	f7ff fefd 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015f92:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90015f96:	4410      	add	r0, r2
90015f98:	f8d9 2000 	ldr.w	r2, [r9]
90015f9c:	4282      	cmp	r2, r0
90015f9e:	bfc8      	it	gt
90015fa0:	f8c9 0000 	strgt.w	r0, [r9]
90015fa4:	683a      	ldr	r2, [r7, #0]
90015fa6:	4290      	cmp	r0, r2
90015fa8:	bfc8      	it	gt
90015faa:	6038      	strgt	r0, [r7, #0]
90015fac:	9800      	ldr	r0, [sp, #0]
90015fae:	f7ff ff38 	bl	90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90015fb2:	a903      	add	r1, sp, #12
90015fb4:	9003      	str	r0, [sp, #12]
90015fb6:	4650      	mov	r0, sl
90015fb8:	f7ff fee8 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015fbc:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90015fc0:	1a10      	subs	r0, r2, r0
90015fc2:	6832      	ldr	r2, [r6, #0]
90015fc4:	4282      	cmp	r2, r0
90015fc6:	bfc8      	it	gt
90015fc8:	6030      	strgt	r0, [r6, #0]
90015fca:	682a      	ldr	r2, [r5, #0]
90015fcc:	4290      	cmp	r0, r2
90015fce:	bfc8      	it	gt
90015fd0:	6028      	strgt	r0, [r5, #0]
90015fd2:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90015fd6:	f8d9 1000 	ldr.w	r1, [r9]
90015fda:	4291      	cmp	r1, r2
90015fdc:	bfc8      	it	gt
90015fde:	f8c9 2000 	strgt.w	r2, [r9]
90015fe2:	683a      	ldr	r2, [r7, #0]
90015fe4:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
90015fe8:	429a      	cmp	r2, r3
90015fea:	bfb8      	it	lt
90015fec:	603b      	strlt	r3, [r7, #0]
90015fee:	6832      	ldr	r2, [r6, #0]
90015ff0:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
90015ff4:	429a      	cmp	r2, r3
90015ff6:	bfc8      	it	gt
90015ff8:	6033      	strgt	r3, [r6, #0]
90015ffa:	682a      	ldr	r2, [r5, #0]
90015ffc:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
90016000:	429a      	cmp	r2, r3
90016002:	da00      	bge.n	90016006 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
90016004:	602b      	str	r3, [r5, #0]
90016006:	b005      	add	sp, #20
90016008:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001600c:	2002      	movs	r0, #2
9001600e:	3401      	adds	r4, #1
90016010:	9201      	str	r2, [sp, #4]
90016012:	fb94 f4f0 	sdiv	r4, r4, r0
90016016:	4610      	mov	r0, r2
90016018:	f7ff fee4 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001601c:	a903      	add	r1, sp, #12
9001601e:	9003      	str	r0, [sp, #12]
90016020:	4650      	mov	r0, sl
90016022:	f7ff feb3 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016026:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
9001602a:	9a01      	ldr	r2, [sp, #4]
9001602c:	4408      	add	r0, r1
9001602e:	f8d9 1000 	ldr.w	r1, [r9]
90016032:	1b03      	subs	r3, r0, r4
90016034:	4420      	add	r0, r4
90016036:	4299      	cmp	r1, r3
90016038:	bfc8      	it	gt
9001603a:	f8c9 3000 	strgt.w	r3, [r9]
9001603e:	6839      	ldr	r1, [r7, #0]
90016040:	428b      	cmp	r3, r1
90016042:	bfc8      	it	gt
90016044:	603b      	strgt	r3, [r7, #0]
90016046:	f8d9 1000 	ldr.w	r1, [r9]
9001604a:	4281      	cmp	r1, r0
9001604c:	bfc8      	it	gt
9001604e:	f8c9 0000 	strgt.w	r0, [r9]
90016052:	6839      	ldr	r1, [r7, #0]
90016054:	4288      	cmp	r0, r1
90016056:	bfc8      	it	gt
90016058:	6038      	strgt	r0, [r7, #0]
9001605a:	4610      	mov	r0, r2
9001605c:	f7ff fee1 	bl	90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90016060:	a903      	add	r1, sp, #12
90016062:	9003      	str	r0, [sp, #12]
90016064:	4650      	mov	r0, sl
90016066:	f7ff fe91 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001606a:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
9001606e:	1a10      	subs	r0, r2, r0
90016070:	6832      	ldr	r2, [r6, #0]
90016072:	1b01      	subs	r1, r0, r4
90016074:	4420      	add	r0, r4
90016076:	428a      	cmp	r2, r1
90016078:	bfc8      	it	gt
9001607a:	6031      	strgt	r1, [r6, #0]
9001607c:	682a      	ldr	r2, [r5, #0]
9001607e:	4291      	cmp	r1, r2
90016080:	bfc8      	it	gt
90016082:	6029      	strgt	r1, [r5, #0]
90016084:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
90016088:	6832      	ldr	r2, [r6, #0]
9001608a:	4282      	cmp	r2, r0
9001608c:	bfc8      	it	gt
9001608e:	6030      	strgt	r0, [r6, #0]
90016090:	682a      	ldr	r2, [r5, #0]
90016092:	4290      	cmp	r0, r2
90016094:	fb9b f2f1 	sdiv	r2, fp, r1
90016098:	fb01 b212 	mls	r2, r1, r2, fp
9001609c:	bfc8      	it	gt
9001609e:	6028      	strgt	r0, [r5, #0]
900160a0:	1a8a      	subs	r2, r1, r2
900160a2:	fb92 f0f1 	sdiv	r0, r2, r1
900160a6:	fb01 2210 	mls	r2, r1, r0, r2
900160aa:	4493      	add	fp, r2
900160ac:	9b00      	ldr	r3, [sp, #0]
900160ae:	455b      	cmp	r3, fp
900160b0:	db40      	blt.n	90016134 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c2>
900160b2:	4658      	mov	r0, fp
900160b4:	f7ff fe96 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900160b8:	a903      	add	r1, sp, #12
900160ba:	9003      	str	r0, [sp, #12]
900160bc:	4650      	mov	r0, sl
900160be:	f7ff fe65 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900160c2:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
900160c6:	4410      	add	r0, r2
900160c8:	f8d9 2000 	ldr.w	r2, [r9]
900160cc:	1b01      	subs	r1, r0, r4
900160ce:	4420      	add	r0, r4
900160d0:	428a      	cmp	r2, r1
900160d2:	bfc8      	it	gt
900160d4:	f8c9 1000 	strgt.w	r1, [r9]
900160d8:	683a      	ldr	r2, [r7, #0]
900160da:	4291      	cmp	r1, r2
900160dc:	bfc8      	it	gt
900160de:	6039      	strgt	r1, [r7, #0]
900160e0:	f8d9 2000 	ldr.w	r2, [r9]
900160e4:	4282      	cmp	r2, r0
900160e6:	bfc8      	it	gt
900160e8:	f8c9 0000 	strgt.w	r0, [r9]
900160ec:	683a      	ldr	r2, [r7, #0]
900160ee:	4290      	cmp	r0, r2
900160f0:	bfc8      	it	gt
900160f2:	6038      	strgt	r0, [r7, #0]
900160f4:	4658      	mov	r0, fp
900160f6:	f7ff fe94 	bl	90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900160fa:	a903      	add	r1, sp, #12
900160fc:	9003      	str	r0, [sp, #12]
900160fe:	4650      	mov	r0, sl
90016100:	f7ff fe44 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016104:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90016108:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
9001610c:	1a10      	subs	r0, r2, r0
9001610e:	6832      	ldr	r2, [r6, #0]
90016110:	1b01      	subs	r1, r0, r4
90016112:	4420      	add	r0, r4
90016114:	428a      	cmp	r2, r1
90016116:	bfc8      	it	gt
90016118:	6031      	strgt	r1, [r6, #0]
9001611a:	682a      	ldr	r2, [r5, #0]
9001611c:	4291      	cmp	r1, r2
9001611e:	bfc8      	it	gt
90016120:	6029      	strgt	r1, [r5, #0]
90016122:	6832      	ldr	r2, [r6, #0]
90016124:	4282      	cmp	r2, r0
90016126:	bfc8      	it	gt
90016128:	6030      	strgt	r0, [r6, #0]
9001612a:	682a      	ldr	r2, [r5, #0]
9001612c:	4290      	cmp	r0, r2
9001612e:	bfc8      	it	gt
90016130:	6028      	strgt	r0, [r5, #0]
90016132:	e7bb      	b.n	900160ac <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23a>
90016134:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
90016138:	9b00      	ldr	r3, [sp, #0]
9001613a:	455b      	cmp	r3, fp
9001613c:	f77f af63 	ble.w	90016006 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
90016140:	4618      	mov	r0, r3
90016142:	f7ff fe4f 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90016146:	a903      	add	r1, sp, #12
90016148:	9003      	str	r0, [sp, #12]
9001614a:	4650      	mov	r0, sl
9001614c:	f7ff fe1e 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016150:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90016154:	4410      	add	r0, r2
90016156:	f8d9 2000 	ldr.w	r2, [r9]
9001615a:	1b01      	subs	r1, r0, r4
9001615c:	4420      	add	r0, r4
9001615e:	428a      	cmp	r2, r1
90016160:	bfc8      	it	gt
90016162:	f8c9 1000 	strgt.w	r1, [r9]
90016166:	683a      	ldr	r2, [r7, #0]
90016168:	4291      	cmp	r1, r2
9001616a:	bfc8      	it	gt
9001616c:	6039      	strgt	r1, [r7, #0]
9001616e:	f8d9 2000 	ldr.w	r2, [r9]
90016172:	4282      	cmp	r2, r0
90016174:	bfc8      	it	gt
90016176:	f8c9 0000 	strgt.w	r0, [r9]
9001617a:	683b      	ldr	r3, [r7, #0]
9001617c:	4298      	cmp	r0, r3
9001617e:	bfc8      	it	gt
90016180:	6038      	strgt	r0, [r7, #0]
90016182:	9800      	ldr	r0, [sp, #0]
90016184:	f7ff fe4d 	bl	90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90016188:	a903      	add	r1, sp, #12
9001618a:	9003      	str	r0, [sp, #12]
9001618c:	4650      	mov	r0, sl
9001618e:	f7ff fdfd 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016192:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
90016196:	6832      	ldr	r2, [r6, #0]
90016198:	1a18      	subs	r0, r3, r0
9001619a:	1b03      	subs	r3, r0, r4
9001619c:	4404      	add	r4, r0
9001619e:	429a      	cmp	r2, r3
900161a0:	bfc8      	it	gt
900161a2:	6033      	strgt	r3, [r6, #0]
900161a4:	682a      	ldr	r2, [r5, #0]
900161a6:	4293      	cmp	r3, r2
900161a8:	bfc8      	it	gt
900161aa:	602b      	strgt	r3, [r5, #0]
900161ac:	6833      	ldr	r3, [r6, #0]
900161ae:	42a3      	cmp	r3, r4
900161b0:	bfc8      	it	gt
900161b2:	6034      	strgt	r4, [r6, #0]
900161b4:	682b      	ldr	r3, [r5, #0]
900161b6:	429c      	cmp	r4, r3
900161b8:	bfc8      	it	gt
900161ba:	602c      	strgt	r4, [r5, #0]
900161bc:	e723      	b.n	90016006 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>

900161be <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
900161be:	b530      	push	{r4, r5, lr}
900161c0:	4604      	mov	r4, r0
900161c2:	4608      	mov	r0, r1
900161c4:	4611      	mov	r1, r2
900161c6:	461a      	mov	r2, r3
900161c8:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900161cc:	b089      	sub	sp, #36	@ 0x24
900161ce:	2500      	movs	r5, #0
900161d0:	015b      	lsls	r3, r3, #5
900161d2:	9505      	str	r5, [sp, #20]
900161d4:	9304      	str	r3, [sp, #16]
900161d6:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900161da:	015b      	lsls	r3, r3, #5
900161dc:	e9cd 3506 	strd	r3, r5, [sp, #24]
900161e0:	ab07      	add	r3, sp, #28
900161e2:	2520      	movs	r5, #32
900161e4:	9302      	str	r3, [sp, #8]
900161e6:	ab06      	add	r3, sp, #24
900161e8:	9301      	str	r3, [sp, #4]
900161ea:	ab05      	add	r3, sp, #20
900161ec:	9300      	str	r3, [sp, #0]
900161ee:	ab04      	add	r3, sp, #16
900161f0:	f7ff fe3f 	bl	90015e72 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
900161f4:	9a04      	ldr	r2, [sp, #16]
900161f6:	9805      	ldr	r0, [sp, #20]
900161f8:	9b06      	ldr	r3, [sp, #24]
900161fa:	9907      	ldr	r1, [sp, #28]
900161fc:	fb92 f2f5 	sdiv	r2, r2, r5
90016200:	fb90 f0f5 	sdiv	r0, r0, r5
90016204:	fb93 f3f5 	sdiv	r3, r3, r5
90016208:	fb91 f1f5 	sdiv	r1, r1, r5
9001620c:	b292      	uxth	r2, r2
9001620e:	3002      	adds	r0, #2
90016210:	b29b      	uxth	r3, r3
90016212:	3102      	adds	r1, #2
90016214:	1a80      	subs	r0, r0, r2
90016216:	3a01      	subs	r2, #1
90016218:	1ac9      	subs	r1, r1, r3
9001621a:	3b01      	subs	r3, #1
9001621c:	80a0      	strh	r0, [r4, #4]
9001621e:	4620      	mov	r0, r4
90016220:	8022      	strh	r2, [r4, #0]
90016222:	8063      	strh	r3, [r4, #2]
90016224:	80e1      	strh	r1, [r4, #6]
90016226:	b009      	add	sp, #36	@ 0x24
90016228:	bd30      	pop	{r4, r5, pc}

9001622a <_ZNK8touchgfx6Circle14getMinimalRectEv>:
9001622a:	b510      	push	{r4, lr}
9001622c:	4604      	mov	r4, r0
9001622e:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
90016232:	f7ff ffc4 	bl	900161be <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
90016236:	4620      	mov	r0, r4
90016238:	bd10      	pop	{r4, pc}

9001623a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
9001623a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001623c:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	@ 0x38
90016240:	4606      	mov	r6, r0
90016242:	f891 0044 	ldrb.w	r0, [r1, #68]	@ 0x44
90016246:	42a5      	cmp	r5, r4
90016248:	6813      	ldr	r3, [r2, #0]
9001624a:	ea4f 1040 	mov.w	r0, r0, lsl #5
9001624e:	da2b      	bge.n	900162a8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
90016250:	42a3      	cmp	r3, r4
90016252:	dd14      	ble.n	9001627e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
90016254:	b168      	cbz	r0, 90016272 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
90016256:	4267      	negs	r7, r4
90016258:	fb97 f2f0 	sdiv	r2, r7, r0
9001625c:	fb00 7212 	mls	r2, r0, r2, r7
90016260:	1a82      	subs	r2, r0, r2
90016262:	fb92 f7f0 	sdiv	r7, r2, r0
90016266:	fb00 2017 	mls	r0, r0, r7, r2
9001626a:	1a24      	subs	r4, r4, r0
9001626c:	42ac      	cmp	r4, r5
9001626e:	bfb8      	it	lt
90016270:	462c      	movlt	r4, r5
90016272:	4630      	mov	r0, r6
90016274:	4622      	mov	r2, r4
90016276:	f7ff ffa2 	bl	900161be <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
9001627a:	4630      	mov	r0, r6
9001627c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001627e:	42ab      	cmp	r3, r5
90016280:	dd0e      	ble.n	900162a0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
90016282:	b168      	cbz	r0, 900162a0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
90016284:	425f      	negs	r7, r3
90016286:	fb97 f2f0 	sdiv	r2, r7, r0
9001628a:	fb00 7212 	mls	r2, r0, r2, r7
9001628e:	1a82      	subs	r2, r0, r2
90016290:	fb92 f7f0 	sdiv	r7, r2, r0
90016294:	fb00 2017 	mls	r0, r0, r7, r2
90016298:	1a1b      	subs	r3, r3, r0
9001629a:	42ab      	cmp	r3, r5
9001629c:	bfb8      	it	lt
9001629e:	462b      	movlt	r3, r5
900162a0:	4622      	mov	r2, r4
900162a2:	461c      	mov	r4, r3
900162a4:	4613      	mov	r3, r2
900162a6:	e7e4      	b.n	90016272 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
900162a8:	42a3      	cmp	r3, r4
900162aa:	da10      	bge.n	900162ce <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
900162ac:	b148      	cbz	r0, 900162c2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
900162ae:	fb94 f2f0 	sdiv	r2, r4, r0
900162b2:	fb00 4212 	mls	r2, r0, r2, r4
900162b6:	1a82      	subs	r2, r0, r2
900162b8:	fb92 f7f0 	sdiv	r7, r2, r0
900162bc:	fb00 2017 	mls	r0, r0, r7, r2
900162c0:	4404      	add	r4, r0
900162c2:	42a5      	cmp	r5, r4
900162c4:	bfa8      	it	ge
900162c6:	4625      	movge	r5, r4
900162c8:	461c      	mov	r4, r3
900162ca:	462b      	mov	r3, r5
900162cc:	e7d1      	b.n	90016272 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
900162ce:	42ab      	cmp	r3, r5
900162d0:	dacf      	bge.n	90016272 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
900162d2:	2800      	cmp	r0, #0
900162d4:	d0cd      	beq.n	90016272 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
900162d6:	fb93 f2f0 	sdiv	r2, r3, r0
900162da:	fb00 3212 	mls	r2, r0, r2, r3
900162de:	1a82      	subs	r2, r0, r2
900162e0:	fb92 f7f0 	sdiv	r7, r2, r0
900162e4:	fb00 2017 	mls	r0, r0, r7, r2
900162e8:	4403      	add	r3, r0
900162ea:	42ab      	cmp	r3, r5
900162ec:	bfa8      	it	ge
900162ee:	462b      	movge	r3, r5
900162f0:	e7bf      	b.n	90016272 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
	...

900162f4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
900162f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900162f8:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	@ 0x38
900162fc:	2220      	movs	r2, #32
900162fe:	468b      	mov	fp, r1
90016300:	42ae      	cmp	r6, r5
90016302:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
90016306:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	@ 0x30
9001630a:	b0ab      	sub	sp, #172	@ 0xac
9001630c:	bfa4      	itt	ge
9001630e:	4633      	movge	r3, r6
90016310:	462e      	movge	r6, r5
90016312:	6c01      	ldr	r1, [r0, #64]	@ 0x40
90016314:	4604      	mov	r4, r0
90016316:	bfa8      	it	ge
90016318:	461d      	movge	r5, r3
9001631a:	1bab      	subs	r3, r5, r6
9001631c:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
90016320:	6b43      	ldr	r3, [r0, #52]	@ 0x34
90016322:	bfa4      	itt	ge
90016324:	f44f 5534 	movge.w	r5, #11520	@ 0x2d00
90016328:	2600      	movge	r6, #0
9001632a:	fb99 f9f2 	sdiv	r9, r9, r2
9001632e:	fb9a faf2 	sdiv	sl, sl, r2
90016332:	2900      	cmp	r1, #0
90016334:	f000 80f1 	beq.w	9001651a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x226>
90016338:	f9bb 0000 	ldrsh.w	r0, [fp]
9001633c:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
90016340:	eba9 0700 	sub.w	r7, r9, r0
90016344:	ebaa 0802 	sub.w	r8, sl, r2
90016348:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
9001634c:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
90016350:	f8bb 7004 	ldrh.w	r7, [fp, #4]
90016354:	4407      	add	r7, r0
90016356:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
9001635a:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
9001635e:	f8bb 8006 	ldrh.w	r8, [fp, #6]
90016362:	b23f      	sxth	r7, r7
90016364:	4490      	add	r8, r2
90016366:	2202      	movs	r2, #2
90016368:	eba9 0707 	sub.w	r7, r9, r7
9001636c:	fa0f f888 	sxth.w	r8, r8
90016370:	9201      	str	r2, [sp, #4]
90016372:	2f00      	cmp	r7, #0
90016374:	ebaa 0808 	sub.w	r8, sl, r8
90016378:	bfb8      	it	lt
9001637a:	427f      	neglt	r7, r7
9001637c:	f1b8 0f00 	cmp.w	r8, #0
90016380:	bfb8      	it	lt
90016382:	f1c8 0800 	rsblt	r8, r8, #0
90016386:	45bc      	cmp	ip, r7
90016388:	bfcc      	ite	gt
9001638a:	f10c 0701 	addgt.w	r7, ip, #1
9001638e:	3701      	addle	r7, #1
90016390:	4540      	cmp	r0, r8
90016392:	bfc8      	it	gt
90016394:	f100 0801 	addgt.w	r8, r0, #1
90016398:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
9001639c:	bfd8      	it	le
9001639e:	f108 0801 	addle.w	r8, r8, #1
900163a2:	3001      	adds	r0, #1
900163a4:	fb08 f808 	mul.w	r8, r8, r8
900163a8:	1040      	asrs	r0, r0, #1
900163aa:	fb07 8707 	mla	r7, r7, r7, r8
900163ae:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
900163b2:	fb91 f1f2 	sdiv	r1, r1, r2
900163b6:	1a5b      	subs	r3, r3, r1
900163b8:	930d      	str	r3, [sp, #52]	@ 0x34
900163ba:	f7ff fcf3 	bl	90015da4 <_ZN8touchgfx7CWRUtil4sineEi>
900163be:	a92a      	add	r1, sp, #168	@ 0xa8
900163c0:	f841 0d70 	str.w	r0, [r1, #-112]!
900163c4:	a80d      	add	r0, sp, #52	@ 0x34
900163c6:	f7ff fce1 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900163ca:	f04f 0c20 	mov.w	ip, #32
900163ce:	9a01      	ldr	r2, [sp, #4]
900163d0:	fb90 f0fc 	sdiv	r0, r0, ip
900163d4:	4340      	muls	r0, r0
900163d6:	4287      	cmp	r7, r0
900163d8:	da04      	bge.n	900163e4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
900163da:	2401      	movs	r4, #1
900163dc:	4620      	mov	r0, r4
900163de:	b02b      	add	sp, #172	@ 0xac
900163e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900163e4:	6c21      	ldr	r1, [r4, #64]	@ 0x40
900163e6:	6b60      	ldr	r0, [r4, #52]	@ 0x34
900163e8:	fb91 f3f2 	sdiv	r3, r1, r2
900163ec:	4403      	add	r3, r0
900163ee:	fb93 f3fc 	sdiv	r3, r3, ip
900163f2:	f9bb 1000 	ldrsh.w	r1, [fp]
900163f6:	3301      	adds	r3, #1
900163f8:	f8bb 2004 	ldrh.w	r2, [fp, #4]
900163fc:	435b      	muls	r3, r3
900163fe:	440a      	add	r2, r1
90016400:	b212      	sxth	r2, r2
90016402:	454a      	cmp	r2, r9
90016404:	bfa8      	it	ge
90016406:	464a      	movge	r2, r9
90016408:	428a      	cmp	r2, r1
9001640a:	bfac      	ite	ge
9001640c:	eba9 0902 	subge.w	r9, r9, r2
90016410:	eba9 0901 	sublt.w	r9, r9, r1
90016414:	f8bb 2006 	ldrh.w	r2, [fp, #6]
90016418:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
9001641c:	440a      	add	r2, r1
9001641e:	b212      	sxth	r2, r2
90016420:	4552      	cmp	r2, sl
90016422:	bfa8      	it	ge
90016424:	4652      	movge	r2, sl
90016426:	428a      	cmp	r2, r1
90016428:	bfac      	ite	ge
9001642a:	ebaa 0a02 	subge.w	sl, sl, r2
9001642e:	ebaa 0a01 	sublt.w	sl, sl, r1
90016432:	fb0a fa0a 	mul.w	sl, sl, sl
90016436:	fb09 a909 	mla	r9, r9, r9, sl
9001643a:	4599      	cmp	r9, r3
9001643c:	dccd      	bgt.n	900163da <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe6>
9001643e:	465a      	mov	r2, fp
90016440:	4621      	mov	r1, r4
90016442:	a80e      	add	r0, sp, #56	@ 0x38
90016444:	f013 fe90 	bl	9002a168 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
90016448:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9001644a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
9001644c:	9209      	str	r2, [sp, #36]	@ 0x24
9001644e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
90016452:	930a      	str	r3, [sp, #40]	@ 0x28
90016454:	dd07      	ble.n	90016466 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x172>
90016456:	2102      	movs	r1, #2
90016458:	fb93 f3f1 	sdiv	r3, r3, r1
9001645c:	4413      	add	r3, r2
9001645e:	930a      	str	r3, [sp, #40]	@ 0x28
90016460:	fb93 f3f1 	sdiv	r3, r3, r1
90016464:	9309      	str	r3, [sp, #36]	@ 0x24
90016466:	f10d 09a8 	add.w	r9, sp, #168	@ 0xa8
9001646a:	f04f 0a02 	mov.w	sl, #2
9001646e:	4630      	mov	r0, r6
90016470:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
90016474:	f10d 08a8 	add.w	r8, sp, #168	@ 0xa8
90016478:	017f      	lsls	r7, r7, #5
9001647a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	@ 0x24
9001647e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90016482:	930b      	str	r3, [sp, #44]	@ 0x2c
90016484:	f7ff fcae 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90016488:	f849 0d74 	str.w	r0, [r9, #-116]!
9001648c:	a80b      	add	r0, sp, #44	@ 0x2c
9001648e:	4649      	mov	r1, r9
90016490:	f7ff fc7c 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016494:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90016496:	fb90 f0fa 	sdiv	r0, r0, sl
9001649a:	eb00 0b03 	add.w	fp, r0, r3
9001649e:	4630      	mov	r0, r6
900164a0:	f7ff fcbf 	bl	90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900164a4:	f848 0d78 	str.w	r0, [r8, #-120]!
900164a8:	a80b      	add	r0, sp, #44	@ 0x2c
900164aa:	4641      	mov	r1, r8
900164ac:	f7ff fc6e 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900164b0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900164b2:	4659      	mov	r1, fp
900164b4:	fb90 f0fa 	sdiv	r0, r0, sl
900164b8:	1a12      	subs	r2, r2, r0
900164ba:	a80e      	add	r0, sp, #56	@ 0x38
900164bc:	f013 ffce 	bl	9002a45c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
900164c0:	f106 0a20 	add.w	sl, r6, #32
900164c4:	bb67      	cbnz	r7, 90016520 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22c>
900164c6:	46b3      	mov	fp, r6
900164c8:	45aa      	cmp	sl, r5
900164ca:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900164cc:	dc33      	bgt.n	90016536 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
900164ce:	9909      	ldr	r1, [sp, #36]	@ 0x24
900164d0:	4650      	mov	r0, sl
900164d2:	eb02 0241 	add.w	r2, r2, r1, lsl #1
900164d6:	920b      	str	r2, [sp, #44]	@ 0x2c
900164d8:	f7ff fc84 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900164dc:	4641      	mov	r1, r8
900164de:	900c      	str	r0, [sp, #48]	@ 0x30
900164e0:	a80b      	add	r0, sp, #44	@ 0x2c
900164e2:	f7ff fc53 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900164e6:	2302      	movs	r3, #2
900164e8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
900164ea:	fb90 f0f3 	sdiv	r0, r0, r3
900164ee:	eb00 0b02 	add.w	fp, r0, r2
900164f2:	4650      	mov	r0, sl
900164f4:	f7ff fc95 	bl	90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900164f8:	4649      	mov	r1, r9
900164fa:	900d      	str	r0, [sp, #52]	@ 0x34
900164fc:	a80b      	add	r0, sp, #44	@ 0x2c
900164fe:	f7ff fc45 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016502:	2302      	movs	r3, #2
90016504:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90016506:	4659      	mov	r1, fp
90016508:	46d3      	mov	fp, sl
9001650a:	44ba      	add	sl, r7
9001650c:	fb90 f0f3 	sdiv	r0, r0, r3
90016510:	1a12      	subs	r2, r2, r0
90016512:	a80e      	add	r0, sp, #56	@ 0x38
90016514:	f013 ffef 	bl	9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016518:	e7d6      	b.n	900164c8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1d4>
9001651a:	fb93 f3f2 	sdiv	r3, r3, r2
9001651e:	e768      	b.n	900163f2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xfe>
90016520:	fb9a f2f7 	sdiv	r2, sl, r7
90016524:	fb07 a212 	mls	r2, r7, r2, sl
90016528:	1aba      	subs	r2, r7, r2
9001652a:	fb92 f1f7 	sdiv	r1, r2, r7
9001652e:	fb07 2211 	mls	r2, r7, r1, r2
90016532:	4492      	add	sl, r2
90016534:	e7c7      	b.n	900164c6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1d2>
90016536:	45ab      	cmp	fp, r5
90016538:	da23      	bge.n	90016582 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x28e>
9001653a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001653c:	f04f 0a02 	mov.w	sl, #2
90016540:	4628      	mov	r0, r5
90016542:	eb02 0243 	add.w	r2, r2, r3, lsl #1
90016546:	920b      	str	r2, [sp, #44]	@ 0x2c
90016548:	f7ff fc4c 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001654c:	4641      	mov	r1, r8
9001654e:	900c      	str	r0, [sp, #48]	@ 0x30
90016550:	a80b      	add	r0, sp, #44	@ 0x2c
90016552:	f7ff fc1b 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016556:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90016558:	fb90 f0fa 	sdiv	r0, r0, sl
9001655c:	4403      	add	r3, r0
9001655e:	4628      	mov	r0, r5
90016560:	9301      	str	r3, [sp, #4]
90016562:	f7ff fc5e 	bl	90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90016566:	4649      	mov	r1, r9
90016568:	900d      	str	r0, [sp, #52]	@ 0x34
9001656a:	a80b      	add	r0, sp, #44	@ 0x2c
9001656c:	f7ff fc0e 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016570:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90016572:	9b01      	ldr	r3, [sp, #4]
90016574:	fb90 f0fa 	sdiv	r0, r0, sl
90016578:	4619      	mov	r1, r3
9001657a:	1a12      	subs	r2, r2, r0
9001657c:	a80e      	add	r0, sp, #56	@ 0x38
9001657e:	f013 ffba 	bl	9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016582:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90016584:	b99b      	cbnz	r3, 900165ae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
90016586:	1bad      	subs	r5, r5, r6
90016588:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
9001658c:	da04      	bge.n	90016598 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
9001658e:	a80e      	add	r0, sp, #56	@ 0x38
90016590:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
90016594:	f013 ffaf 	bl	9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016598:	21ff      	movs	r1, #255	@ 0xff
9001659a:	a80e      	add	r0, sp, #56	@ 0x38
9001659c:	f013 fea0 	bl	9002a2e0 <_ZN8touchgfx6Canvas6renderEh>
900165a0:	4604      	mov	r4, r0
900165a2:	4b8a      	ldr	r3, [pc, #552]	@ (900167cc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4d8>)
900165a4:	a816      	add	r0, sp, #88	@ 0x58
900165a6:	930e      	str	r3, [sp, #56]	@ 0x38
900165a8:	f001 ffbe 	bl	90018528 <_ZN8touchgfx7OutlineD1Ev>
900165ac:	e716      	b.n	900163dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe8>
900165ae:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
900165b2:	429a      	cmp	r2, r3
900165b4:	f0c0 8107 	bcc.w	900167c6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4d2>
900165b8:	1bab      	subs	r3, r5, r6
900165ba:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
900165be:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
900165c2:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
900165c6:	9301      	str	r3, [sp, #4]
900165c8:	da43      	bge.n	90016652 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x35e>
900165ca:	4628      	mov	r0, r5
900165cc:	f7ff fc0a 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900165d0:	4649      	mov	r1, r9
900165d2:	900d      	str	r0, [sp, #52]	@ 0x34
900165d4:	a809      	add	r0, sp, #36	@ 0x24
900165d6:	f7ff fbd9 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900165da:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900165dc:	18c3      	adds	r3, r0, r3
900165de:	4628      	mov	r0, r5
900165e0:	9303      	str	r3, [sp, #12]
900165e2:	f7ff fc1e 	bl	90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900165e6:	4649      	mov	r1, r9
900165e8:	900d      	str	r0, [sp, #52]	@ 0x34
900165ea:	a809      	add	r0, sp, #36	@ 0x24
900165ec:	f7ff fbce 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900165f0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
900165f2:	f505 52b4 	add.w	r2, r5, #5760	@ 0x1680
900165f6:	1a1b      	subs	r3, r3, r0
900165f8:	9204      	str	r2, [sp, #16]
900165fa:	9302      	str	r3, [sp, #8]
900165fc:	eb0a 0305 	add.w	r3, sl, r5
90016600:	9a04      	ldr	r2, [sp, #16]
90016602:	4293      	cmp	r3, r2
90016604:	da25      	bge.n	90016652 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x35e>
90016606:	4618      	mov	r0, r3
90016608:	9306      	str	r3, [sp, #24]
9001660a:	f7ff fbeb 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001660e:	4649      	mov	r1, r9
90016610:	900d      	str	r0, [sp, #52]	@ 0x34
90016612:	a80a      	add	r0, sp, #40	@ 0x28
90016614:	f7ff fbba 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016618:	2202      	movs	r2, #2
9001661a:	9b03      	ldr	r3, [sp, #12]
9001661c:	9207      	str	r2, [sp, #28]
9001661e:	fb90 f0f2 	sdiv	r0, r0, r2
90016622:	18c3      	adds	r3, r0, r3
90016624:	9305      	str	r3, [sp, #20]
90016626:	9b06      	ldr	r3, [sp, #24]
90016628:	4618      	mov	r0, r3
9001662a:	f7ff fbfa 	bl	90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9001662e:	a92a      	add	r1, sp, #168	@ 0xa8
90016630:	f841 0d78 	str.w	r0, [r1, #-120]!
90016634:	a80a      	add	r0, sp, #40	@ 0x28
90016636:	f7ff fba9 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001663a:	9a07      	ldr	r2, [sp, #28]
9001663c:	9b02      	ldr	r3, [sp, #8]
9001663e:	9905      	ldr	r1, [sp, #20]
90016640:	fb90 f2f2 	sdiv	r2, r0, r2
90016644:	a80e      	add	r0, sp, #56	@ 0x38
90016646:	1a9a      	subs	r2, r3, r2
90016648:	f013 ff55 	bl	9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001664c:	9b06      	ldr	r3, [sp, #24]
9001664e:	4453      	add	r3, sl
90016650:	e7d6      	b.n	90016600 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x30c>
90016652:	45ab      	cmp	fp, r5
90016654:	da25      	bge.n	900166a2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ae>
90016656:	4628      	mov	r0, r5
90016658:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	@ 0x24
9001665c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
90016660:	930b      	str	r3, [sp, #44]	@ 0x2c
90016662:	f7ff fbbf 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90016666:	4641      	mov	r1, r8
90016668:	900c      	str	r0, [sp, #48]	@ 0x30
9001666a:	a80b      	add	r0, sp, #44	@ 0x2c
9001666c:	f7ff fb8e 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016670:	2202      	movs	r2, #2
90016672:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90016674:	9202      	str	r2, [sp, #8]
90016676:	fb90 f0f2 	sdiv	r0, r0, r2
9001667a:	eb00 0903 	add.w	r9, r0, r3
9001667e:	4628      	mov	r0, r5
90016680:	f7ff fbcf 	bl	90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90016684:	a92a      	add	r1, sp, #168	@ 0xa8
90016686:	f841 0d74 	str.w	r0, [r1, #-116]!
9001668a:	a80b      	add	r0, sp, #44	@ 0x2c
9001668c:	f7ff fb7e 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016690:	9a02      	ldr	r2, [sp, #8]
90016692:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90016694:	4649      	mov	r1, r9
90016696:	fb90 f2f2 	sdiv	r2, r0, r2
9001669a:	a80e      	add	r0, sp, #56	@ 0x38
9001669c:	1a9a      	subs	r2, r3, r2
9001669e:	f013 ff2a 	bl	9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900166a2:	46d9      	mov	r9, fp
900166a4:	2502      	movs	r5, #2
900166a6:	45b1      	cmp	r9, r6
900166a8:	db25      	blt.n	900166f6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x402>
900166aa:	4648      	mov	r0, r9
900166ac:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	@ 0x24
900166b0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
900166b4:	930b      	str	r3, [sp, #44]	@ 0x2c
900166b6:	f7ff fb95 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900166ba:	4641      	mov	r1, r8
900166bc:	900c      	str	r0, [sp, #48]	@ 0x30
900166be:	a80b      	add	r0, sp, #44	@ 0x2c
900166c0:	f7ff fb64 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900166c4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900166c6:	fb90 f0f5 	sdiv	r0, r0, r5
900166ca:	eb00 0b03 	add.w	fp, r0, r3
900166ce:	4648      	mov	r0, r9
900166d0:	f7ff fba7 	bl	90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900166d4:	a90d      	add	r1, sp, #52	@ 0x34
900166d6:	900d      	str	r0, [sp, #52]	@ 0x34
900166d8:	a80b      	add	r0, sp, #44	@ 0x2c
900166da:	f7ff fb57 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900166de:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900166e0:	4659      	mov	r1, fp
900166e2:	46cb      	mov	fp, r9
900166e4:	eba9 0907 	sub.w	r9, r9, r7
900166e8:	fb90 f0f5 	sdiv	r0, r0, r5
900166ec:	1a12      	subs	r2, r2, r0
900166ee:	a80e      	add	r0, sp, #56	@ 0x38
900166f0:	f013 ff01 	bl	9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900166f4:	e7d7      	b.n	900166a6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b2>
900166f6:	455e      	cmp	r6, fp
900166f8:	da22      	bge.n	90016740 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x44c>
900166fa:	2502      	movs	r5, #2
900166fc:	4630      	mov	r0, r6
900166fe:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	@ 0x24
90016702:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
90016706:	930b      	str	r3, [sp, #44]	@ 0x2c
90016708:	f7ff fb6c 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001670c:	4641      	mov	r1, r8
9001670e:	900c      	str	r0, [sp, #48]	@ 0x30
90016710:	a80b      	add	r0, sp, #44	@ 0x2c
90016712:	f7ff fb3b 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016716:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
90016718:	fb90 f0f5 	sdiv	r0, r0, r5
9001671c:	4407      	add	r7, r0
9001671e:	4630      	mov	r0, r6
90016720:	f7ff fb7f 	bl	90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90016724:	a92a      	add	r1, sp, #168	@ 0xa8
90016726:	f841 0d74 	str.w	r0, [r1, #-116]!
9001672a:	a80b      	add	r0, sp, #44	@ 0x2c
9001672c:	f7ff fb2e 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016730:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90016732:	4639      	mov	r1, r7
90016734:	fb90 f0f5 	sdiv	r0, r0, r5
90016738:	1a12      	subs	r2, r2, r0
9001673a:	a80e      	add	r0, sp, #56	@ 0x38
9001673c:	f013 fedb 	bl	9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016740:	9b01      	ldr	r3, [sp, #4]
90016742:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
90016746:	f6bf af27 	bge.w	90016598 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
9001674a:	ad2a      	add	r5, sp, #168	@ 0xa8
9001674c:	4630      	mov	r0, r6
9001674e:	f7ff fb49 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90016752:	f04f 0b02 	mov.w	fp, #2
90016756:	f845 0d74 	str.w	r0, [r5, #-116]!
9001675a:	a809      	add	r0, sp, #36	@ 0x24
9001675c:	4629      	mov	r1, r5
9001675e:	f7ff fb15 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016762:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90016764:	eb00 0903 	add.w	r9, r0, r3
90016768:	4630      	mov	r0, r6
9001676a:	f7ff fb5a 	bl	90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9001676e:	4629      	mov	r1, r5
90016770:	900d      	str	r0, [sp, #52]	@ 0x34
90016772:	a809      	add	r0, sp, #36	@ 0x24
90016774:	f7ff fb0a 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016778:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9001677a:	f5a6 54b4 	sub.w	r4, r6, #5760	@ 0x1680
9001677e:	eba3 0800 	sub.w	r8, r3, r0
90016782:	4454      	add	r4, sl
90016784:	42a6      	cmp	r6, r4
90016786:	f77f af07 	ble.w	90016598 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
9001678a:	4620      	mov	r0, r4
9001678c:	f7ff fb2a 	bl	90015de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90016790:	4629      	mov	r1, r5
90016792:	900d      	str	r0, [sp, #52]	@ 0x34
90016794:	a80a      	add	r0, sp, #40	@ 0x28
90016796:	f7ff faf9 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001679a:	fb90 f0fb 	sdiv	r0, r0, fp
9001679e:	eb00 0709 	add.w	r7, r0, r9
900167a2:	4620      	mov	r0, r4
900167a4:	f7ff fb3d 	bl	90015e22 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900167a8:	a90c      	add	r1, sp, #48	@ 0x30
900167aa:	900c      	str	r0, [sp, #48]	@ 0x30
900167ac:	a80a      	add	r0, sp, #40	@ 0x28
900167ae:	f7ff faed 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900167b2:	4639      	mov	r1, r7
900167b4:	4454      	add	r4, sl
900167b6:	fb90 f2fb 	sdiv	r2, r0, fp
900167ba:	a80e      	add	r0, sp, #56	@ 0x38
900167bc:	eba8 0202 	sub.w	r2, r8, r2
900167c0:	f013 fe99 	bl	9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900167c4:	e7de      	b.n	90016784 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x490>
900167c6:	2400      	movs	r4, #0
900167c8:	e6eb      	b.n	900165a2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ae>
900167ca:	bf00      	nop
900167cc:	90030a4c 	.word	0x90030a4c

900167d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
900167d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900167d2:	6803      	ldr	r3, [r0, #0]
900167d4:	460d      	mov	r5, r1
900167d6:	4604      	mov	r4, r0
900167d8:	4601      	mov	r1, r0
900167da:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
900167dc:	a802      	add	r0, sp, #8
900167de:	4798      	blx	r3
900167e0:	6828      	ldr	r0, [r5, #0]
900167e2:	6869      	ldr	r1, [r5, #4]
900167e4:	466b      	mov	r3, sp
900167e6:	c303      	stmia	r3!, {r0, r1}
900167e8:	4668      	mov	r0, sp
900167ea:	4619      	mov	r1, r3
900167ec:	f7fe fa7a 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
900167f0:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
900167f2:	b1a8      	cbz	r0, 90016820 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
900167f4:	6803      	ldr	r3, [r0, #0]
900167f6:	1d21      	adds	r1, r4, #4
900167f8:	68db      	ldr	r3, [r3, #12]
900167fa:	4798      	blx	r3
900167fc:	b180      	cbz	r0, 90016820 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
900167fe:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90016802:	2b00      	cmp	r3, #0
90016804:	dd0c      	ble.n	90016820 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
90016806:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
9001680a:	2d00      	cmp	r5, #0
9001680c:	dd08      	ble.n	90016820 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
9001680e:	4a2d      	ldr	r2, [pc, #180]	@ (900168c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
90016810:	7812      	ldrb	r2, [r2, #0]
90016812:	b13a      	cbz	r2, 90016824 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
90016814:	2a01      	cmp	r2, #1
90016816:	d02d      	beq.n	90016874 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
90016818:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9001681a:	6803      	ldr	r3, [r0, #0]
9001681c:	691b      	ldr	r3, [r3, #16]
9001681e:	4798      	blx	r3
90016820:	b004      	add	sp, #16
90016822:	bd70      	pop	{r4, r5, r6, pc}
90016824:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90016828:	441d      	add	r5, r3
9001682a:	b2ad      	uxth	r5, r5
9001682c:	b22e      	sxth	r6, r5
9001682e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90016832:	42b3      	cmp	r3, r6
90016834:	daf0      	bge.n	90016818 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90016836:	6823      	ldr	r3, [r4, #0]
90016838:	4669      	mov	r1, sp
9001683a:	4620      	mov	r0, r4
9001683c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
9001683e:	4798      	blx	r3
90016840:	b940      	cbnz	r0, 90016854 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
90016842:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90016846:	2b01      	cmp	r3, #1
90016848:	d004      	beq.n	90016854 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
9001684a:	3301      	adds	r3, #1
9001684c:	105b      	asrs	r3, r3, #1
9001684e:	f8ad 3006 	strh.w	r3, [sp, #6]
90016852:	e7f0      	b.n	90016836 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
90016854:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90016858:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001685c:	4413      	add	r3, r2
9001685e:	b29b      	uxth	r3, r3
90016860:	441a      	add	r2, r3
90016862:	f8ad 3002 	strh.w	r3, [sp, #2]
90016866:	b212      	sxth	r2, r2
90016868:	4296      	cmp	r6, r2
9001686a:	dae0      	bge.n	9001682e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
9001686c:	1aeb      	subs	r3, r5, r3
9001686e:	f8ad 3006 	strh.w	r3, [sp, #6]
90016872:	e7dc      	b.n	9001682e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90016874:	f8bd 5000 	ldrh.w	r5, [sp]
90016878:	441d      	add	r5, r3
9001687a:	b2ad      	uxth	r5, r5
9001687c:	b22e      	sxth	r6, r5
9001687e:	f9bd 3000 	ldrsh.w	r3, [sp]
90016882:	42b3      	cmp	r3, r6
90016884:	dac8      	bge.n	90016818 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90016886:	6823      	ldr	r3, [r4, #0]
90016888:	4669      	mov	r1, sp
9001688a:	4620      	mov	r0, r4
9001688c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
9001688e:	4798      	blx	r3
90016890:	b940      	cbnz	r0, 900168a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
90016892:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90016896:	2b01      	cmp	r3, #1
90016898:	d004      	beq.n	900168a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
9001689a:	3301      	adds	r3, #1
9001689c:	105b      	asrs	r3, r3, #1
9001689e:	f8ad 3004 	strh.w	r3, [sp, #4]
900168a2:	e7f0      	b.n	90016886 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
900168a4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
900168a8:	f8bd 3000 	ldrh.w	r3, [sp]
900168ac:	4413      	add	r3, r2
900168ae:	b29b      	uxth	r3, r3
900168b0:	441a      	add	r2, r3
900168b2:	f8ad 3000 	strh.w	r3, [sp]
900168b6:	b212      	sxth	r2, r2
900168b8:	4296      	cmp	r6, r2
900168ba:	dae0      	bge.n	9001687e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
900168bc:	1aeb      	subs	r3, r5, r3
900168be:	f8ad 3004 	strh.w	r3, [sp, #4]
900168c2:	e7dc      	b.n	9001687e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
900168c4:	24027e94 	.word	0x24027e94

900168c8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
900168c8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
900168ca:	6803      	ldr	r3, [r0, #0]
900168cc:	4604      	mov	r4, r0
900168ce:	4601      	mov	r1, r0
900168d0:	4668      	mov	r0, sp
900168d2:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
900168d4:	4798      	blx	r3
900168d6:	2100      	movs	r1, #0
900168d8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
900168dc:	4668      	mov	r0, sp
900168de:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900168e2:	9102      	str	r1, [sp, #8]
900168e4:	a902      	add	r1, sp, #8
900168e6:	f8ad 200c 	strh.w	r2, [sp, #12]
900168ea:	f8ad 300e 	strh.w	r3, [sp, #14]
900168ee:	f7fe f9f9 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
900168f2:	6823      	ldr	r3, [r4, #0]
900168f4:	4669      	mov	r1, sp
900168f6:	4620      	mov	r0, r4
900168f8:	691b      	ldr	r3, [r3, #16]
900168fa:	4798      	blx	r3
900168fc:	b004      	add	sp, #16
900168fe:	bd10      	pop	{r4, pc}

90016900 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90016900:	2101      	movs	r1, #1
90016902:	2200      	movs	r2, #0
90016904:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90016908:	490a      	ldr	r1, [pc, #40]	@ (90016934 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
9001690a:	8082      	strh	r2, [r0, #4]
9001690c:	6001      	str	r1, [r0, #0]
9001690e:	21ff      	movs	r1, #255	@ 0xff
90016910:	80c2      	strh	r2, [r0, #6]
90016912:	8102      	strh	r2, [r0, #8]
90016914:	8142      	strh	r2, [r0, #10]
90016916:	8182      	strh	r2, [r0, #12]
90016918:	81c2      	strh	r2, [r0, #14]
9001691a:	8202      	strh	r2, [r0, #16]
9001691c:	8242      	strh	r2, [r0, #18]
9001691e:	61c2      	str	r2, [r0, #28]
90016920:	8402      	strh	r2, [r0, #32]
90016922:	8442      	strh	r2, [r0, #34]	@ 0x22
90016924:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90016928:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
9001692c:	6282      	str	r2, [r0, #40]	@ 0x28
9001692e:	e9c0 2205 	strd	r2, r2, [r0, #20]
90016932:	4770      	bx	lr
90016934:	900300d4 	.word	0x900300d4

90016938 <_ZNK8touchgfx4Line14getMinimalRectEv>:
90016938:	f101 0364 	add.w	r3, r1, #100	@ 0x64
9001693c:	4602      	mov	r2, r0
9001693e:	cb03      	ldmia	r3!, {r0, r1}
90016940:	6010      	str	r0, [r2, #0]
90016942:	4610      	mov	r0, r2
90016944:	6051      	str	r1, [r2, #4]
90016946:	4770      	bx	lr

90016948 <_ZN8touchgfx4LineD1Ev>:
90016948:	4770      	bx	lr

9001694a <_ZN8touchgfx4LineD0Ev>:
9001694a:	b510      	push	{r4, lr}
9001694c:	4604      	mov	r4, r0
9001694e:	2170      	movs	r1, #112	@ 0x70
90016950:	f014 fdd9 	bl	9002b506 <_ZdlPvj>
90016954:	4620      	mov	r0, r4
90016956:	bd10      	pop	{r4, pc}

90016958 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
90016958:	6800      	ldr	r0, [r0, #0]
9001695a:	2800      	cmp	r0, #0
9001695c:	bfb9      	ittee	lt
9001695e:	2320      	movlt	r3, #32
90016960:	fb90 f0f3 	sdivlt	r0, r0, r3
90016964:	301f      	addge	r0, #31
90016966:	1140      	asrge	r0, r0, #5
90016968:	4770      	bx	lr

9001696a <_ZNK8touchgfx4Line17invalidateContentEv>:
9001696a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001696e:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
90016972:	b089      	sub	sp, #36	@ 0x24
90016974:	4604      	mov	r4, r0
90016976:	b353      	cbz	r3, 900169ce <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
90016978:	6803      	ldr	r3, [r0, #0]
9001697a:	4601      	mov	r1, r0
9001697c:	a802      	add	r0, sp, #8
9001697e:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90016980:	4798      	blx	r3
90016982:	2220      	movs	r2, #32
90016984:	f8d4 a02c 	ldr.w	sl, [r4, #44]	@ 0x2c
90016988:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9001698a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9001698c:	f8d4 b000 	ldr.w	fp, [r4]
90016990:	fb9a f0f2 	sdiv	r0, sl, r2
90016994:	fb91 f5f2 	sdiv	r5, r1, r2
90016998:	fb93 f6f2 	sdiv	r6, r3, r2
9001699c:	1b40      	subs	r0, r0, r5
9001699e:	0076      	lsls	r6, r6, #1
900169a0:	2800      	cmp	r0, #0
900169a2:	bfb8      	it	lt
900169a4:	4240      	neglt	r0, r0
900169a6:	4286      	cmp	r6, r0
900169a8:	dc0c      	bgt.n	900169c4 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
900169aa:	6b25      	ldr	r5, [r4, #48]	@ 0x30
900169ac:	f8d4 8038 	ldr.w	r8, [r4, #56]	@ 0x38
900169b0:	fb95 f0f2 	sdiv	r0, r5, r2
900169b4:	fb98 f7f2 	sdiv	r7, r8, r2
900169b8:	1bc0      	subs	r0, r0, r7
900169ba:	2800      	cmp	r0, #0
900169bc:	bfb8      	it	lt
900169be:	4240      	neglt	r0, r0
900169c0:	4286      	cmp	r6, r0
900169c2:	dd07      	ble.n	900169d4 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
900169c4:	f8db 3010 	ldr.w	r3, [fp, #16]
900169c8:	a902      	add	r1, sp, #8
900169ca:	4620      	mov	r0, r4
900169cc:	4798      	blx	r3
900169ce:	b009      	add	sp, #36	@ 0x24
900169d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900169d4:	eb01 060a 	add.w	r6, r1, sl
900169d8:	2002      	movs	r0, #2
900169da:	eb08 0705 	add.w	r7, r8, r5
900169de:	3301      	adds	r3, #1
900169e0:	f10d 0920 	add.w	r9, sp, #32
900169e4:	9101      	str	r1, [sp, #4]
900169e6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
900169ea:	fb96 f6f0 	sdiv	r6, r6, r0
900169ee:	fb97 f7f0 	sdiv	r7, r7, r0
900169f2:	4103      	asrs	r3, r0
900169f4:	b236      	sxth	r6, r6
900169f6:	b23f      	sxth	r7, r7
900169f8:	f849 3d08 	str.w	r3, [r9, #-8]!
900169fc:	4648      	mov	r0, r9
900169fe:	fb96 f6f2 	sdiv	r6, r6, r2
90016a02:	fb97 f7f2 	sdiv	r7, r7, r2
90016a06:	f7ff ffa7 	bl	90016958 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90016a0a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90016a0e:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
90016a12:	fa1f fe87 	uxth.w	lr, r7
90016a16:	9901      	ldr	r1, [sp, #4]
90016a18:	fa1f fc86 	uxth.w	ip, r6
90016a1c:	4293      	cmp	r3, r2
90016a1e:	b280      	uxth	r0, r0
90016a20:	eba1 0a0a 	sub.w	sl, r1, sl
90016a24:	da54      	bge.n	90016ad0 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
90016a26:	ebac 0100 	sub.w	r1, ip, r0
90016a2a:	f1ba 0f00 	cmp.w	sl, #0
90016a2e:	4460      	add	r0, ip
90016a30:	f9bd a008 	ldrsh.w	sl, [sp, #8]
90016a34:	b289      	uxth	r1, r1
90016a36:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
90016a3a:	b280      	uxth	r0, r0
90016a3c:	b20e      	sxth	r6, r1
90016a3e:	da29      	bge.n	90016a94 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
90016a40:	eba8 0505 	sub.w	r5, r8, r5
90016a44:	2d00      	cmp	r5, #0
90016a46:	da2a      	bge.n	90016a9e <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
90016a48:	fa1f f88a 	uxth.w	r8, sl
90016a4c:	f8ad a010 	strh.w	sl, [sp, #16]
90016a50:	fa1f f58c 	uxth.w	r5, ip
90016a54:	f8ad c012 	strh.w	ip, [sp, #18]
90016a58:	eba0 0008 	sub.w	r0, r0, r8
90016a5c:	4443      	add	r3, r8
90016a5e:	f8ad 6018 	strh.w	r6, [sp, #24]
90016a62:	f8ad 0014 	strh.w	r0, [sp, #20]
90016a66:	1a59      	subs	r1, r3, r1
90016a68:	ebae 0005 	sub.w	r0, lr, r5
90016a6c:	f8ad 701a 	strh.w	r7, [sp, #26]
90016a70:	f8ad 101c 	strh.w	r1, [sp, #28]
90016a74:	f8ad 0016 	strh.w	r0, [sp, #22]
90016a78:	442a      	add	r2, r5
90016a7a:	eba2 0e0e 	sub.w	lr, r2, lr
90016a7e:	f8ad e01e 	strh.w	lr, [sp, #30]
90016a82:	f8db 3010 	ldr.w	r3, [fp, #16]
90016a86:	a904      	add	r1, sp, #16
90016a88:	4620      	mov	r0, r4
90016a8a:	4798      	blx	r3
90016a8c:	6823      	ldr	r3, [r4, #0]
90016a8e:	4649      	mov	r1, r9
90016a90:	691b      	ldr	r3, [r3, #16]
90016a92:	e79a      	b.n	900169ca <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
90016a94:	d003      	beq.n	90016a9e <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
90016a96:	eba8 0505 	sub.w	r5, r8, r5
90016a9a:	2d00      	cmp	r5, #0
90016a9c:	dcd4      	bgt.n	90016a48 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
90016a9e:	fa1f f88a 	uxth.w	r8, sl
90016aa2:	f8ad 6010 	strh.w	r6, [sp, #16]
90016aa6:	fa1f f58c 	uxth.w	r5, ip
90016aaa:	f8ad c012 	strh.w	ip, [sp, #18]
90016aae:	4443      	add	r3, r8
90016ab0:	eba0 0008 	sub.w	r0, r0, r8
90016ab4:	f8ad a018 	strh.w	sl, [sp, #24]
90016ab8:	1a59      	subs	r1, r3, r1
90016aba:	ebae 0305 	sub.w	r3, lr, r5
90016abe:	f8ad 701a 	strh.w	r7, [sp, #26]
90016ac2:	f8ad 1014 	strh.w	r1, [sp, #20]
90016ac6:	f8ad 3016 	strh.w	r3, [sp, #22]
90016aca:	f8ad 001c 	strh.w	r0, [sp, #28]
90016ace:	e7d3      	b.n	90016a78 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
90016ad0:	ebae 0100 	sub.w	r1, lr, r0
90016ad4:	f1ba 0f00 	cmp.w	sl, #0
90016ad8:	4470      	add	r0, lr
90016ada:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
90016ade:	b289      	uxth	r1, r1
90016ae0:	f9bd e008 	ldrsh.w	lr, [sp, #8]
90016ae4:	b280      	uxth	r0, r0
90016ae6:	b20f      	sxth	r7, r1
90016ae8:	da20      	bge.n	90016b2c <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
90016aea:	eba8 0505 	sub.w	r5, r8, r5
90016aee:	2d00      	cmp	r5, #0
90016af0:	da21      	bge.n	90016b36 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
90016af2:	fa1f f88e 	uxth.w	r8, lr
90016af6:	f8ad e010 	strh.w	lr, [sp, #16]
90016afa:	fa1f f58a 	uxth.w	r5, sl
90016afe:	f8ad a012 	strh.w	sl, [sp, #18]
90016b02:	4443      	add	r3, r8
90016b04:	ebac 0e08 	sub.w	lr, ip, r8
90016b08:	442a      	add	r2, r5
90016b0a:	1b40      	subs	r0, r0, r5
90016b0c:	eba3 0c0c 	sub.w	ip, r3, ip
90016b10:	f8ad e014 	strh.w	lr, [sp, #20]
90016b14:	1a51      	subs	r1, r2, r1
90016b16:	f8ad 0016 	strh.w	r0, [sp, #22]
90016b1a:	f8ad 6018 	strh.w	r6, [sp, #24]
90016b1e:	f8ad 701a 	strh.w	r7, [sp, #26]
90016b22:	f8ad c01c 	strh.w	ip, [sp, #28]
90016b26:	f8ad 101e 	strh.w	r1, [sp, #30]
90016b2a:	e7aa      	b.n	90016a82 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
90016b2c:	d003      	beq.n	90016b36 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
90016b2e:	eba8 0505 	sub.w	r5, r8, r5
90016b32:	2d00      	cmp	r5, #0
90016b34:	dcdd      	bgt.n	90016af2 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
90016b36:	fa1f f58e 	uxth.w	r5, lr
90016b3a:	f8ad 7012 	strh.w	r7, [sp, #18]
90016b3e:	fa1f f88a 	uxth.w	r8, sl
90016b42:	f8ad e010 	strh.w	lr, [sp, #16]
90016b46:	442b      	add	r3, r5
90016b48:	ebac 0705 	sub.w	r7, ip, r5
90016b4c:	4442      	add	r2, r8
90016b4e:	eba0 0008 	sub.w	r0, r0, r8
90016b52:	eba3 0c0c 	sub.w	ip, r3, ip
90016b56:	f8ad 7014 	strh.w	r7, [sp, #20]
90016b5a:	1a51      	subs	r1, r2, r1
90016b5c:	f8ad 6018 	strh.w	r6, [sp, #24]
90016b60:	f8ad a01a 	strh.w	sl, [sp, #26]
90016b64:	f8ad 1016 	strh.w	r1, [sp, #22]
90016b68:	f8ad c01c 	strh.w	ip, [sp, #28]
90016b6c:	f8ad 001e 	strh.w	r0, [sp, #30]
90016b70:	e787      	b.n	90016a82 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

90016b72 <_ZN8touchgfx7CWRUtil5isqrtEm>:
90016b72:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
90016b76:	f04f 0300 	mov.w	r3, #0
90016b7a:	bf2c      	ite	cs
90016b7c:	f04f 4280 	movcs.w	r2, #1073741824	@ 0x40000000
90016b80:	f44f 4280 	movcc.w	r2, #16384	@ 0x4000
90016b84:	1899      	adds	r1, r3, r2
90016b86:	4288      	cmp	r0, r1
90016b88:	bf24      	itt	cs
90016b8a:	1853      	addcs	r3, r2, r1
90016b8c:	1a40      	subcs	r0, r0, r1
90016b8e:	0892      	lsrs	r2, r2, #2
90016b90:	ea4f 0353 	mov.w	r3, r3, lsr #1
90016b94:	d1f6      	bne.n	90016b84 <_ZN8touchgfx7CWRUtil5isqrtEm+0x12>
90016b96:	4618      	mov	r0, r3
90016b98:	4770      	bx	lr

90016b9a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
90016b9a:	b510      	push	{r4, lr}
90016b9c:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
90016ba0:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
90016ba4:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
90016ba8:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
90016bac:	139b      	asrs	r3, r3, #14
90016bae:	13a4      	asrs	r4, r4, #14
90016bb0:	429c      	cmp	r4, r3
90016bb2:	bfb8      	it	lt
90016bb4:	461c      	movlt	r4, r3
90016bb6:	2c01      	cmp	r4, #1
90016bb8:	dd07      	ble.n	90016bca <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
90016bba:	fb91 f1f4 	sdiv	r1, r1, r4
90016bbe:	fb90 f0f4 	sdiv	r0, r0, r4
90016bc2:	f7ff ffea 	bl	90016b9a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
90016bc6:	4360      	muls	r0, r4
90016bc8:	bd10      	pop	{r4, pc}
90016bca:	4340      	muls	r0, r0
90016bcc:	fb01 0001 	mla	r0, r1, r1, r0
90016bd0:	f7ff ffcf 	bl	90016b72 <_ZN8touchgfx7CWRUtil5isqrtEm>
90016bd4:	e7f8      	b.n	90016bc8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>
	...

90016bd8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
90016bd8:	2800      	cmp	r0, #0
90016bda:	b508      	push	{r3, lr}
90016bdc:	da05      	bge.n	90016bea <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
90016bde:	4240      	negs	r0, r0
90016be0:	f7ff fffa 	bl	90016bd8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90016be4:	4240      	negs	r0, r0
90016be6:	b240      	sxtb	r0, r0
90016be8:	bd08      	pop	{r3, pc}
90016bea:	f5b0 6f80 	cmp.w	r0, #1024	@ 0x400
90016bee:	dc11      	bgt.n	90016c14 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
90016bf0:	f5b0 7f35 	cmp.w	r0, #724	@ 0x2d4
90016bf4:	dd09      	ble.n	90016c0a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
90016bf6:	4340      	muls	r0, r0
90016bf8:	f5c0 1080 	rsb	r0, r0, #1048576	@ 0x100000
90016bfc:	f7ff ffb9 	bl	90016b72 <_ZN8touchgfx7CWRUtil5isqrtEm>
90016c00:	f7ff ffea 	bl	90016bd8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90016c04:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
90016c08:	e7ed      	b.n	90016be6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
90016c0a:	3003      	adds	r0, #3
90016c0c:	4b02      	ldr	r3, [pc, #8]	@ (90016c18 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
90016c0e:	10c0      	asrs	r0, r0, #3
90016c10:	5618      	ldrsb	r0, [r3, r0]
90016c12:	e7e9      	b.n	90016be8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
90016c14:	2000      	movs	r0, #0
90016c16:	e7e7      	b.n	90016be8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
90016c18:	90030144 	.word	0x90030144

90016c1c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
90016c1c:	4281      	cmp	r1, r0
90016c1e:	b537      	push	{r0, r1, r2, r4, r5, lr}
90016c20:	460c      	mov	r4, r1
90016c22:	4615      	mov	r5, r2
90016c24:	dd07      	ble.n	90016c36 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
90016c26:	4601      	mov	r1, r0
90016c28:	4620      	mov	r0, r4
90016c2a:	f7ff fff7 	bl	90016c1c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90016c2e:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
90016c32:	b003      	add	sp, #12
90016c34:	bd30      	pop	{r4, r5, pc}
90016c36:	f7ff ffb0 	bl	90016b9a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
90016c3a:	6028      	str	r0, [r5, #0]
90016c3c:	2800      	cmp	r0, #0
90016c3e:	d0f8      	beq.n	90016c32 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
90016c40:	4602      	mov	r2, r0
90016c42:	ab01      	add	r3, sp, #4
90016c44:	f44f 6180 	mov.w	r1, #1024	@ 0x400
90016c48:	4620      	mov	r0, r4
90016c4a:	f005 fa58 	bl	9001c0fe <_ZN8touchgfx6muldivElllRl>
90016c4e:	f7ff ffc3 	bl	90016bd8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90016c52:	e7ee      	b.n	90016c32 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

90016c54 <_ZN8touchgfx4LineC1Ev>:
90016c54:	b510      	push	{r4, lr}
90016c56:	4604      	mov	r4, r0
90016c58:	f7ff fe52 	bl	90016900 <_ZN8touchgfx12CanvasWidgetC1Ev>
90016c5c:	4b0c      	ldr	r3, [pc, #48]	@ (90016c90 <_ZN8touchgfx4LineC1Ev+0x3c>)
90016c5e:	2220      	movs	r2, #32
90016c60:	4620      	mov	r0, r4
90016c62:	6023      	str	r3, [r4, #0]
90016c64:	2300      	movs	r3, #0
90016c66:	63e2      	str	r2, [r4, #60]	@ 0x3c
90016c68:	2212      	movs	r2, #18
90016c6a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90016c6e:	66e2      	str	r2, [r4, #108]	@ 0x6c
90016c70:	60a3      	str	r3, [r4, #8]
90016c72:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
90016c76:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
90016c7a:	e9c4 3311 	strd	r3, r3, [r4, #68]	@ 0x44
90016c7e:	e9c4 3313 	strd	r3, r3, [r4, #76]	@ 0x4c
90016c82:	e9c4 3315 	strd	r3, r3, [r4, #84]	@ 0x54
90016c86:	e9c4 3317 	strd	r3, r3, [r4, #92]	@ 0x5c
90016c8a:	e9c4 3319 	strd	r3, r3, [r4, #100]	@ 0x64
90016c8e:	bd10      	pop	{r4, pc}
90016c90:	900301a8 	.word	0x900301a8

90016c94 <_ZN8touchgfx4Line17updateCachedShapeEv>:
90016c94:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90016c98:	6b47      	ldr	r7, [r0, #52]	@ 0x34
90016c9a:	4604      	mov	r4, r0
90016c9c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90016c9e:	6b85      	ldr	r5, [r0, #56]	@ 0x38
90016ca0:	6b02      	ldr	r2, [r0, #48]	@ 0x30
90016ca2:	1aff      	subs	r7, r7, r3
90016ca4:	eba5 0502 	sub.w	r5, r5, r2
90016ca8:	d142      	bne.n	90016d30 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
90016caa:	b955      	cbnz	r5, 90016cc2 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
90016cac:	e9c0 3313 	strd	r3, r3, [r0, #76]	@ 0x4c
90016cb0:	e9c0 3311 	strd	r3, r3, [r0, #68]	@ 0x44
90016cb4:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
90016cb8:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
90016cbc:	b002      	add	sp, #8
90016cbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90016cc2:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
90016cc6:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
90016cca:	4629      	mov	r1, r5
90016ccc:	2502      	movs	r5, #2
90016cce:	4642      	mov	r2, r8
90016cd0:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90016cd2:	f005 fa33 	bl	9001c13c <_ZN8touchgfx6muldivElll>
90016cd6:	4642      	mov	r2, r8
90016cd8:	4639      	mov	r1, r7
90016cda:	fb90 f6f5 	sdiv	r6, r0, r5
90016cde:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90016ce0:	f005 fa2c 	bl	9001c13c <_ZN8touchgfx6muldivElll>
90016ce4:	f894 9040 	ldrb.w	r9, [r4, #64]	@ 0x40
90016ce8:	fb90 f5f5 	sdiv	r5, r0, r5
90016cec:	f1b9 0f00 	cmp.w	r9, #0
90016cf0:	d067      	beq.n	90016dc2 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
90016cf2:	f1b9 0f02 	cmp.w	r9, #2
90016cf6:	d878      	bhi.n	90016dea <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
90016cf8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90016cfa:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90016cfc:	1b93      	subs	r3, r2, r6
90016cfe:	4432      	add	r2, r6
90016d00:	1b5b      	subs	r3, r3, r5
90016d02:	1b52      	subs	r2, r2, r5
90016d04:	6463      	str	r3, [r4, #68]	@ 0x44
90016d06:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90016d08:	6522      	str	r2, [r4, #80]	@ 0x50
90016d0a:	18e9      	adds	r1, r5, r3
90016d0c:	1b5b      	subs	r3, r3, r5
90016d0e:	1b89      	subs	r1, r1, r6
90016d10:	1b9b      	subs	r3, r3, r6
90016d12:	6561      	str	r1, [r4, #84]	@ 0x54
90016d14:	1b81      	subs	r1, r0, r6
90016d16:	4430      	add	r0, r6
90016d18:	4429      	add	r1, r5
90016d1a:	4428      	add	r0, r5
90016d1c:	64a1      	str	r1, [r4, #72]	@ 0x48
90016d1e:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
90016d20:	64e0      	str	r0, [r4, #76]	@ 0x4c
90016d22:	186f      	adds	r7, r5, r1
90016d24:	1b49      	subs	r1, r1, r5
90016d26:	4437      	add	r7, r6
90016d28:	4431      	add	r1, r6
90016d2a:	65a7      	str	r7, [r4, #88]	@ 0x58
90016d2c:	65e1      	str	r1, [r4, #92]	@ 0x5c
90016d2e:	e05b      	b.n	90016de8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
90016d30:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
90016d34:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
90016d38:	2d00      	cmp	r5, #0
90016d3a:	d0c6      	beq.n	90016cca <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
90016d3c:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
90016d40:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
90016d44:	fb93 f2f8 	sdiv	r2, r3, r8
90016d48:	fb08 3312 	mls	r3, r8, r2, r3
90016d4c:	b353      	cbz	r3, 90016da4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
90016d4e:	fb98 f2f3 	sdiv	r2, r8, r3
90016d52:	fb03 8812 	mls	r8, r3, r2, r8
90016d56:	f1b8 0f00 	cmp.w	r8, #0
90016d5a:	d1f3      	bne.n	90016d44 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
90016d5c:	2b01      	cmp	r3, #1
90016d5e:	f24b 5104 	movw	r1, #46340	@ 0xb504
90016d62:	bf1c      	itt	ne
90016d64:	fb97 f7f3 	sdivne	r7, r7, r3
90016d68:	fb95 f5f3 	sdivne	r5, r5, r3
90016d6c:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
90016d70:	4608      	mov	r0, r1
90016d72:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
90016d76:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
90016d7a:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
90016d7e:	428b      	cmp	r3, r1
90016d80:	dd01      	ble.n	90016d86 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
90016d82:	428a      	cmp	r2, r1
90016d84:	dc10      	bgt.n	90016da8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
90016d86:	fb90 f3f3 	sdiv	r3, r0, r3
90016d8a:	fb90 f2f2 	sdiv	r2, r0, r2
90016d8e:	4293      	cmp	r3, r2
90016d90:	bfa8      	it	ge
90016d92:	4613      	movge	r3, r2
90016d94:	435f      	muls	r7, r3
90016d96:	435d      	muls	r5, r3
90016d98:	4629      	mov	r1, r5
90016d9a:	4638      	mov	r0, r7
90016d9c:	f7ff fefd 	bl	90016b9a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
90016da0:	4680      	mov	r8, r0
90016da2:	e792      	b.n	90016cca <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
90016da4:	4643      	mov	r3, r8
90016da6:	e7d9      	b.n	90016d5c <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
90016da8:	fb93 f3f1 	sdiv	r3, r3, r1
90016dac:	fb92 f2f1 	sdiv	r2, r2, r1
90016db0:	4293      	cmp	r3, r2
90016db2:	bfcc      	ite	gt
90016db4:	3301      	addgt	r3, #1
90016db6:	1c53      	addle	r3, r2, #1
90016db8:	fb97 f7f3 	sdiv	r7, r7, r3
90016dbc:	fb95 f5f3 	sdiv	r5, r5, r3
90016dc0:	e7ea      	b.n	90016d98 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
90016dc2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90016dc4:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90016dc6:	1b93      	subs	r3, r2, r6
90016dc8:	4432      	add	r2, r6
90016dca:	6463      	str	r3, [r4, #68]	@ 0x44
90016dcc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90016dce:	6522      	str	r2, [r4, #80]	@ 0x50
90016dd0:	18e9      	adds	r1, r5, r3
90016dd2:	1b5b      	subs	r3, r3, r5
90016dd4:	6561      	str	r1, [r4, #84]	@ 0x54
90016dd6:	1b81      	subs	r1, r0, r6
90016dd8:	4430      	add	r0, r6
90016dda:	64a1      	str	r1, [r4, #72]	@ 0x48
90016ddc:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
90016dde:	64e0      	str	r0, [r4, #76]	@ 0x4c
90016de0:	186f      	adds	r7, r5, r1
90016de2:	1b49      	subs	r1, r1, r5
90016de4:	65a7      	str	r7, [r4, #88]	@ 0x58
90016de6:	65e1      	str	r1, [r4, #92]	@ 0x5c
90016de8:	6623      	str	r3, [r4, #96]	@ 0x60
90016dea:	6c62      	ldr	r2, [r4, #68]	@ 0x44
90016dec:	f104 0148 	add.w	r1, r4, #72	@ 0x48
90016df0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90016df2:	f104 0c54 	add.w	ip, r4, #84	@ 0x54
90016df6:	9200      	str	r2, [sp, #0]
90016df8:	9301      	str	r3, [sp, #4]
90016dfa:	680f      	ldr	r7, [r1, #0]
90016dfc:	3104      	adds	r1, #4
90016dfe:	9800      	ldr	r0, [sp, #0]
90016e00:	42ba      	cmp	r2, r7
90016e02:	bfa8      	it	ge
90016e04:	463a      	movge	r2, r7
90016e06:	4287      	cmp	r7, r0
90016e08:	9801      	ldr	r0, [sp, #4]
90016e0a:	bfc8      	it	gt
90016e0c:	9700      	strgt	r7, [sp, #0]
90016e0e:	68cf      	ldr	r7, [r1, #12]
90016e10:	42bb      	cmp	r3, r7
90016e12:	bfa8      	it	ge
90016e14:	463b      	movge	r3, r7
90016e16:	4287      	cmp	r7, r0
90016e18:	bfc8      	it	gt
90016e1a:	9701      	strgt	r7, [sp, #4]
90016e1c:	458c      	cmp	ip, r1
90016e1e:	d1ec      	bne.n	90016dfa <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
90016e20:	2720      	movs	r7, #32
90016e22:	4668      	mov	r0, sp
90016e24:	fb92 f8f7 	sdiv	r8, r2, r7
90016e28:	fb93 f7f7 	sdiv	r7, r3, r7
90016e2c:	f7ff fd94 	bl	90016958 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90016e30:	4682      	mov	sl, r0
90016e32:	a801      	add	r0, sp, #4
90016e34:	f7ff fd90 	bl	90016958 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90016e38:	ebaa 0208 	sub.w	r2, sl, r8
90016e3c:	1bc0      	subs	r0, r0, r7
90016e3e:	f1b9 0f01 	cmp.w	r9, #1
90016e42:	f8a4 8064 	strh.w	r8, [r4, #100]	@ 0x64
90016e46:	f8a4 7066 	strh.w	r7, [r4, #102]	@ 0x66
90016e4a:	f8a4 2068 	strh.w	r2, [r4, #104]	@ 0x68
90016e4e:	f8a4 006a 	strh.w	r0, [r4, #106]	@ 0x6a
90016e52:	f47f af33 	bne.w	90016cbc <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
90016e56:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90016e58:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90016e5a:	1b83      	subs	r3, r0, r6
90016e5c:	6463      	str	r3, [r4, #68]	@ 0x44
90016e5e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90016e60:	18ea      	adds	r2, r5, r3
90016e62:	6562      	str	r2, [r4, #84]	@ 0x54
90016e64:	1b8a      	subs	r2, r1, r6
90016e66:	4431      	add	r1, r6
90016e68:	4406      	add	r6, r0
90016e6a:	64a2      	str	r2, [r4, #72]	@ 0x48
90016e6c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90016e6e:	64e1      	str	r1, [r4, #76]	@ 0x4c
90016e70:	18af      	adds	r7, r5, r2
90016e72:	1b52      	subs	r2, r2, r5
90016e74:	1b5d      	subs	r5, r3, r5
90016e76:	6526      	str	r6, [r4, #80]	@ 0x50
90016e78:	65a7      	str	r7, [r4, #88]	@ 0x58
90016e7a:	65e2      	str	r2, [r4, #92]	@ 0x5c
90016e7c:	6625      	str	r5, [r4, #96]	@ 0x60
90016e7e:	e71d      	b.n	90016cbc <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

90016e80 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
90016e80:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90016e82:	428b      	cmp	r3, r1
90016e84:	d102      	bne.n	90016e8c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
90016e86:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90016e88:	4293      	cmp	r3, r2
90016e8a:	d003      	beq.n	90016e94 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
90016e8c:	e9c0 120b 	strd	r1, r2, [r0, #44]	@ 0x2c
90016e90:	f7ff bf00 	b.w	90016c94 <_ZN8touchgfx4Line17updateCachedShapeEv>
90016e94:	4770      	bx	lr

90016e96 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
90016e96:	6b43      	ldr	r3, [r0, #52]	@ 0x34
90016e98:	428b      	cmp	r3, r1
90016e9a:	d102      	bne.n	90016ea2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
90016e9c:	6b83      	ldr	r3, [r0, #56]	@ 0x38
90016e9e:	4293      	cmp	r3, r2
90016ea0:	d003      	beq.n	90016eaa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
90016ea2:	e9c0 120d 	strd	r1, r2, [r0, #52]	@ 0x34
90016ea6:	f7ff bef5 	b.w	90016c94 <_ZN8touchgfx4Line17updateCachedShapeEv>
90016eaa:	4770      	bx	lr

90016eac <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
90016eac:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
90016eb0:	f7ff bef0 	b.w	90016c94 <_ZN8touchgfx4Line17updateCachedShapeEv>

90016eb4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
90016eb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90016eb8:	b0a0      	sub	sp, #128	@ 0x80
90016eba:	4604      	mov	r4, r0
90016ebc:	460a      	mov	r2, r1
90016ebe:	4601      	mov	r1, r0
90016ec0:	a804      	add	r0, sp, #16
90016ec2:	f013 f951 	bl	9002a168 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
90016ec6:	2300      	movs	r3, #0
90016ec8:	9301      	str	r3, [sp, #4]
90016eca:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
90016ece:	2b01      	cmp	r3, #1
90016ed0:	d17c      	bne.n	90016fcc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
90016ed2:	6c60      	ldr	r0, [r4, #68]	@ 0x44
90016ed4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90016ed6:	6d61      	ldr	r1, [r4, #84]	@ 0x54
90016ed8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90016eda:	1ac0      	subs	r0, r0, r3
90016edc:	eba1 0102 	sub.w	r1, r1, r2
90016ee0:	d437      	bmi.n	90016f52 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
90016ee2:	2900      	cmp	r1, #0
90016ee4:	aa01      	add	r2, sp, #4
90016ee6:	db2e      	blt.n	90016f46 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
90016ee8:	f7ff fe98 	bl	90016c1c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90016eec:	f100 065a 	add.w	r6, r0, #90	@ 0x5a
90016ef0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90016ef2:	a804      	add	r0, sp, #16
90016ef4:	6c61      	ldr	r1, [r4, #68]	@ 0x44
90016ef6:	f013 fab1 	bl	9002a45c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
90016efa:	6da2      	ldr	r2, [r4, #88]	@ 0x58
90016efc:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
90016efe:	a804      	add	r0, sp, #16
90016f00:	f013 faf9 	bl	9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016f04:	6ee5      	ldr	r5, [r4, #108]	@ 0x6c
90016f06:	2db3      	cmp	r5, #179	@ 0xb3
90016f08:	dc33      	bgt.n	90016f72 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
90016f0a:	eba6 0805 	sub.w	r8, r6, r5
90016f0e:	4640      	mov	r0, r8
90016f10:	f7fe ff48 	bl	90015da4 <_ZN8touchgfx7CWRUtil4sineEi>
90016f14:	a902      	add	r1, sp, #8
90016f16:	9002      	str	r0, [sp, #8]
90016f18:	a801      	add	r0, sp, #4
90016f1a:	f7fe ff37 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016f1e:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90016f20:	1847      	adds	r7, r0, r1
90016f22:	f1c8 005a 	rsb	r0, r8, #90	@ 0x5a
90016f26:	f7fe ff3d 	bl	90015da4 <_ZN8touchgfx7CWRUtil4sineEi>
90016f2a:	a903      	add	r1, sp, #12
90016f2c:	9003      	str	r0, [sp, #12]
90016f2e:	a801      	add	r0, sp, #4
90016f30:	f7fe ff2c 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016f34:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90016f36:	4639      	mov	r1, r7
90016f38:	1a12      	subs	r2, r2, r0
90016f3a:	a804      	add	r0, sp, #16
90016f3c:	f013 fadb 	bl	9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016f40:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
90016f42:	441d      	add	r5, r3
90016f44:	e7df      	b.n	90016f06 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
90016f46:	4249      	negs	r1, r1
90016f48:	f7ff fe68 	bl	90016c1c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90016f4c:	f1c0 065a 	rsb	r6, r0, #90	@ 0x5a
90016f50:	e7ce      	b.n	90016ef0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
90016f52:	2900      	cmp	r1, #0
90016f54:	f1c0 0000 	rsb	r0, r0, #0
90016f58:	aa01      	add	r2, sp, #4
90016f5a:	db04      	blt.n	90016f66 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
90016f5c:	f7ff fe5e 	bl	90016c1c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90016f60:	f5c0 7687 	rsb	r6, r0, #270	@ 0x10e
90016f64:	e7c4      	b.n	90016ef0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
90016f66:	4249      	negs	r1, r1
90016f68:	f7ff fe58 	bl	90016c1c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90016f6c:	f500 7687 	add.w	r6, r0, #270	@ 0x10e
90016f70:	e7be      	b.n	90016ef0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
90016f72:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
90016f74:	a804      	add	r0, sp, #16
90016f76:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
90016f78:	f013 fabd 	bl	9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016f7c:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90016f7e:	6d21      	ldr	r1, [r4, #80]	@ 0x50
90016f80:	a804      	add	r0, sp, #16
90016f82:	f013 fab8 	bl	9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016f86:	6ee5      	ldr	r5, [r4, #108]	@ 0x6c
90016f88:	f1c5 05b4 	rsb	r5, r5, #180	@ 0xb4
90016f8c:	2d00      	cmp	r5, #0
90016f8e:	dd31      	ble.n	90016ff4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
90016f90:	eb05 0806 	add.w	r8, r5, r6
90016f94:	4640      	mov	r0, r8
90016f96:	f7fe ff05 	bl	90015da4 <_ZN8touchgfx7CWRUtil4sineEi>
90016f9a:	a902      	add	r1, sp, #8
90016f9c:	9002      	str	r0, [sp, #8]
90016f9e:	a801      	add	r0, sp, #4
90016fa0:	f7fe fef4 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016fa4:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90016fa6:	1847      	adds	r7, r0, r1
90016fa8:	f1c8 005a 	rsb	r0, r8, #90	@ 0x5a
90016fac:	f7fe fefa 	bl	90015da4 <_ZN8touchgfx7CWRUtil4sineEi>
90016fb0:	a903      	add	r1, sp, #12
90016fb2:	9003      	str	r0, [sp, #12]
90016fb4:	a801      	add	r0, sp, #4
90016fb6:	f7fe fee9 	bl	90015d8c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016fba:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90016fbc:	4639      	mov	r1, r7
90016fbe:	1a12      	subs	r2, r2, r0
90016fc0:	a804      	add	r0, sp, #16
90016fc2:	f013 fa98 	bl	9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016fc6:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
90016fc8:	1aed      	subs	r5, r5, r3
90016fca:	e7df      	b.n	90016f8c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
90016fcc:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90016fce:	a804      	add	r0, sp, #16
90016fd0:	6c61      	ldr	r1, [r4, #68]	@ 0x44
90016fd2:	f013 fa43 	bl	9002a45c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
90016fd6:	6da2      	ldr	r2, [r4, #88]	@ 0x58
90016fd8:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
90016fda:	a804      	add	r0, sp, #16
90016fdc:	f013 fa8b 	bl	9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016fe0:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
90016fe2:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
90016fe4:	a804      	add	r0, sp, #16
90016fe6:	f013 fa86 	bl	9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016fea:	6e22      	ldr	r2, [r4, #96]	@ 0x60
90016fec:	6d21      	ldr	r1, [r4, #80]	@ 0x50
90016fee:	a804      	add	r0, sp, #16
90016ff0:	f013 fa81 	bl	9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016ff4:	21ff      	movs	r1, #255	@ 0xff
90016ff6:	a804      	add	r0, sp, #16
90016ff8:	f013 f972 	bl	9002a2e0 <_ZN8touchgfx6Canvas6renderEh>
90016ffc:	4b04      	ldr	r3, [pc, #16]	@ (90017010 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
90016ffe:	4604      	mov	r4, r0
90017000:	a80c      	add	r0, sp, #48	@ 0x30
90017002:	9304      	str	r3, [sp, #16]
90017004:	f001 fa90 	bl	90018528 <_ZN8touchgfx7OutlineD1Ev>
90017008:	4620      	mov	r0, r4
9001700a:	b020      	add	sp, #128	@ 0x80
9001700c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017010:	90030a4c 	.word	0x90030a4c

90017014 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
90017014:	b508      	push	{r3, lr}
90017016:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
9001701a:	b10b      	cbz	r3, 90017020 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
9001701c:	f7ec fc24 	bl	90003868 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90017020:	bd08      	pop	{r3, pc}

90017022 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
90017022:	6803      	ldr	r3, [r0, #0]
90017024:	f64f 71fe 	movw	r1, #65534	@ 0xfffe
90017028:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
9001702a:	4718      	bx	r3

9001702c <_ZN8touchgfx14SnapshotWidgetD1Ev>:
9001702c:	4770      	bx	lr

9001702e <_ZN8touchgfx14SnapshotWidgetD0Ev>:
9001702e:	b510      	push	{r4, lr}
90017030:	4604      	mov	r4, r0
90017032:	212c      	movs	r1, #44	@ 0x2c
90017034:	f014 fa67 	bl	9002b506 <_ZdlPvj>
90017038:	4620      	mov	r0, r4
9001703a:	bd10      	pop	{r4, pc}

9001703c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
9001703c:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
90017040:	2bff      	cmp	r3, #255	@ 0xff
90017042:	b510      	push	{r4, lr}
90017044:	d104      	bne.n	90017050 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
90017046:	8cca      	ldrh	r2, [r1, #38]	@ 0x26
90017048:	f64f 73ff 	movw	r3, #65535	@ 0xffff
9001704c:	429a      	cmp	r2, r3
9001704e:	d105      	bne.n	9001705c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
90017050:	2300      	movs	r3, #0
90017052:	8003      	strh	r3, [r0, #0]
90017054:	8043      	strh	r3, [r0, #2]
90017056:	8083      	strh	r3, [r0, #4]
90017058:	80c3      	strh	r3, [r0, #6]
9001705a:	bd10      	pop	{r4, pc}
9001705c:	2300      	movs	r3, #0
9001705e:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
90017062:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
90017066:	8003      	strh	r3, [r0, #0]
90017068:	8043      	strh	r3, [r0, #2]
9001706a:	8084      	strh	r4, [r0, #4]
9001706c:	80c2      	strh	r2, [r0, #6]
9001706e:	e7f4      	b.n	9001705a <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

90017070 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
90017070:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90017074:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
90017078:	b087      	sub	sp, #28
9001707a:	4604      	mov	r4, r0
9001707c:	4689      	mov	r9, r1
9001707e:	b363      	cbz	r3, 900170da <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
90017080:	8cc2      	ldrh	r2, [r0, #38]	@ 0x26
90017082:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90017086:	429a      	cmp	r2, r3
90017088:	d027      	beq.n	900170da <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
9001708a:	ad06      	add	r5, sp, #24
9001708c:	2700      	movs	r7, #0
9001708e:	f825 2d0c 	strh.w	r2, [r5, #-12]!
90017092:	4628      	mov	r0, r5
90017094:	f007 f9a0 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90017098:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001709c:	a904      	add	r1, sp, #16
9001709e:	f8ad 0014 	strh.w	r0, [sp, #20]
900170a2:	f8ad 3016 	strh.w	r3, [sp, #22]
900170a6:	4620      	mov	r0, r4
900170a8:	6823      	ldr	r3, [r4, #0]
900170aa:	9704      	str	r7, [sp, #16]
900170ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900170ae:	4798      	blx	r3
900170b0:	f7fe f8f6 	bl	900152a0 <_ZN8touchgfx3HAL3lcdEv>
900170b4:	6803      	ldr	r3, [r0, #0]
900170b6:	4606      	mov	r6, r0
900170b8:	4628      	mov	r0, r5
900170ba:	f8d3 800c 	ldr.w	r8, [r3, #12]
900170be:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
900170c0:	f8ad 300c 	strh.w	r3, [sp, #12]
900170c4:	f007 fa74 	bl	9001e5b0 <_ZNK8touchgfx6Bitmap7getDataEv>
900170c8:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
900170cc:	4601      	mov	r1, r0
900170ce:	9701      	str	r7, [sp, #4]
900170d0:	aa04      	add	r2, sp, #16
900170d2:	9300      	str	r3, [sp, #0]
900170d4:	4630      	mov	r0, r6
900170d6:	464b      	mov	r3, r9
900170d8:	47c0      	blx	r8
900170da:	b007      	add	sp, #28
900170dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

900170e0 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
900170e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900170e2:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900170e6:	460d      	mov	r5, r1
900170e8:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
900170ec:	2100      	movs	r1, #0
900170ee:	f8ad 3006 	strh.w	r3, [sp, #6]
900170f2:	4604      	mov	r4, r0
900170f4:	6803      	ldr	r3, [r0, #0]
900170f6:	f8ad 2004 	strh.w	r2, [sp, #4]
900170fa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900170fc:	9100      	str	r1, [sp, #0]
900170fe:	4669      	mov	r1, sp
90017100:	4798      	blx	r3
90017102:	4621      	mov	r1, r4
90017104:	a802      	add	r0, sp, #8
90017106:	f004 fecb 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001710a:	f7fe f8c9 	bl	900152a0 <_ZN8touchgfx3HAL3lcdEv>
9001710e:	6803      	ldr	r3, [r0, #0]
90017110:	aa02      	add	r2, sp, #8
90017112:	4669      	mov	r1, sp
90017114:	695e      	ldr	r6, [r3, #20]
90017116:	462b      	mov	r3, r5
90017118:	47b0      	blx	r6
9001711a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
9001711e:	2800      	cmp	r0, #0
90017120:	bf08      	it	eq
90017122:	461d      	moveq	r5, r3
90017124:	84e5      	strh	r5, [r4, #38]	@ 0x26
90017126:	b004      	add	sp, #16
90017128:	bd70      	pop	{r4, r5, r6, pc}
	...

9001712c <_ZN8touchgfx14SnapshotWidgetC1Ev>:
9001712c:	2200      	movs	r2, #0
9001712e:	8082      	strh	r2, [r0, #4]
90017130:	80c2      	strh	r2, [r0, #6]
90017132:	8102      	strh	r2, [r0, #8]
90017134:	8142      	strh	r2, [r0, #10]
90017136:	8182      	strh	r2, [r0, #12]
90017138:	81c2      	strh	r2, [r0, #14]
9001713a:	8202      	strh	r2, [r0, #16]
9001713c:	8242      	strh	r2, [r0, #18]
9001713e:	61c2      	str	r2, [r0, #28]
90017140:	8402      	strh	r2, [r0, #32]
90017142:	8442      	strh	r2, [r0, #34]	@ 0x22
90017144:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90017148:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001714c:	2201      	movs	r2, #1
9001714e:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
90017152:	4a04      	ldr	r2, [pc, #16]	@ (90017164 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
90017154:	6002      	str	r2, [r0, #0]
90017156:	f64f 72ff 	movw	r2, #65535	@ 0xffff
9001715a:	84c2      	strh	r2, [r0, #38]	@ 0x26
9001715c:	f880 2028 	strb.w	r2, [r0, #40]	@ 0x28
90017160:	4770      	bx	lr
90017162:	bf00      	nop
90017164:	90030220 	.word	0x90030220

90017168 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
90017168:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
9001716c:	4770      	bx	lr

9001716e <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
9001716e:	f890 0029 	ldrb.w	r0, [r0, #41]	@ 0x29
90017172:	4770      	bx	lr

90017174 <_ZN8touchgfx13ScalableImageD1Ev>:
90017174:	4770      	bx	lr

90017176 <_ZN8touchgfx13ScalableImageD0Ev>:
90017176:	b510      	push	{r4, lr}
90017178:	4604      	mov	r4, r0
9001717a:	212c      	movs	r1, #44	@ 0x2c
9001717c:	f014 f9c3 	bl	9002b506 <_ZdlPvj>
90017180:	4620      	mov	r0, r4
90017182:	bd10      	pop	{r4, pc}

90017184 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
90017184:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90017186:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
9001718a:	4605      	mov	r5, r0
9001718c:	2bff      	cmp	r3, #255	@ 0xff
9001718e:	d11e      	bne.n	900171ce <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
90017190:	f101 0426 	add.w	r4, r1, #38	@ 0x26
90017194:	4668      	mov	r0, sp
90017196:	4621      	mov	r1, r4
90017198:	f007 f986 	bl	9001e4a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001719c:	f9bd 6004 	ldrsh.w	r6, [sp, #4]
900171a0:	4620      	mov	r0, r4
900171a2:	f007 f919 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
900171a6:	4286      	cmp	r6, r0
900171a8:	d111      	bne.n	900171ce <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
900171aa:	4621      	mov	r1, r4
900171ac:	a802      	add	r0, sp, #8
900171ae:	f007 f97b 	bl	9001e4a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900171b2:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
900171b6:	4620      	mov	r0, r4
900171b8:	f007 f942 	bl	9001e440 <_ZNK8touchgfx6Bitmap9getHeightEv>
900171bc:	4286      	cmp	r6, r0
900171be:	d106      	bne.n	900171ce <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
900171c0:	4621      	mov	r1, r4
900171c2:	4628      	mov	r0, r5
900171c4:	f007 f970 	bl	9001e4a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900171c8:	4628      	mov	r0, r5
900171ca:	b004      	add	sp, #16
900171cc:	bd70      	pop	{r4, r5, r6, pc}
900171ce:	2300      	movs	r3, #0
900171d0:	802b      	strh	r3, [r5, #0]
900171d2:	806b      	strh	r3, [r5, #2]
900171d4:	80ab      	strh	r3, [r5, #4]
900171d6:	80eb      	strh	r3, [r5, #6]
900171d8:	e7f6      	b.n	900171c8 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x44>
	...

900171dc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
900171dc:	b538      	push	{r3, r4, r5, lr}
900171de:	2300      	movs	r3, #0
900171e0:	2501      	movs	r5, #1
900171e2:	4604      	mov	r4, r0
900171e4:	8083      	strh	r3, [r0, #4]
900171e6:	80c3      	strh	r3, [r0, #6]
900171e8:	8103      	strh	r3, [r0, #8]
900171ea:	8143      	strh	r3, [r0, #10]
900171ec:	8183      	strh	r3, [r0, #12]
900171ee:	81c3      	strh	r3, [r0, #14]
900171f0:	8203      	strh	r3, [r0, #16]
900171f2:	8243      	strh	r3, [r0, #18]
900171f4:	61c3      	str	r3, [r0, #28]
900171f6:	8403      	strh	r3, [r0, #32]
900171f8:	8443      	strh	r3, [r0, #34]	@ 0x22
900171fa:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
900171fe:	f880 5025 	strb.w	r5, [r0, #37]	@ 0x25
90017202:	e9c0 3305 	strd	r3, r3, [r0, #20]
90017206:	4b07      	ldr	r3, [pc, #28]	@ (90017224 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
90017208:	6003      	str	r3, [r0, #0]
9001720a:	880b      	ldrh	r3, [r1, #0]
9001720c:	84c3      	strh	r3, [r0, #38]	@ 0x26
9001720e:	23ff      	movs	r3, #255	@ 0xff
90017210:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
90017214:	f001 f915 	bl	90018442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90017218:	4b03      	ldr	r3, [pc, #12]	@ (90017228 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
9001721a:	f884 5029 	strb.w	r5, [r4, #41]	@ 0x29
9001721e:	4620      	mov	r0, r4
90017220:	6023      	str	r3, [r4, #0]
90017222:	bd38      	pop	{r3, r4, r5, pc}
90017224:	900305c4 	.word	0x900305c4
90017228:	90030290 	.word	0x90030290

9001722c <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
9001722c:	4603      	mov	r3, r0
9001722e:	3026      	adds	r0, #38	@ 0x26
90017230:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
90017234:	b90b      	cbnz	r3, 9001723a <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
90017236:	f004 bed7 	b.w	9001bfe8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
9001723a:	f004 bee5 	b.w	9001c008 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

90017240 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
90017240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017244:	4604      	mov	r4, r0
90017246:	469b      	mov	fp, r3
90017248:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
9001724c:	b0b3      	sub	sp, #204	@ 0xcc
9001724e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90017252:	f9b1 6000 	ldrsh.w	r6, [r1]
90017256:	8888      	ldrh	r0, [r1, #4]
90017258:	9206      	str	r2, [sp, #24]
9001725a:	2200      	movs	r2, #0
9001725c:	4430      	add	r0, r6
9001725e:	9211      	str	r2, [sp, #68]	@ 0x44
90017260:	b280      	uxth	r0, r0
90017262:	fa0f fe80 	sxth.w	lr, r0
90017266:	4596      	cmp	lr, r2
90017268:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	@ 0xf0
9001726c:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	@ 0xf8
90017270:	f340 811a 	ble.w	900174a8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
90017274:	45b4      	cmp	ip, r6
90017276:	f340 8117 	ble.w	900174a8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
9001727a:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
9001727e:	88ca      	ldrh	r2, [r1, #6]
90017280:	442a      	add	r2, r5
90017282:	b292      	uxth	r2, r2
90017284:	b211      	sxth	r1, r2
90017286:	2900      	cmp	r1, #0
90017288:	f340 810e 	ble.w	900174a8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
9001728c:	42ab      	cmp	r3, r5
9001728e:	f340 810b 	ble.w	900174a8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
90017292:	45f4      	cmp	ip, lr
90017294:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
90017298:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9001729c:	bfb8      	it	lt
9001729e:	fa1f f08c 	uxthlt.w	r0, ip
900172a2:	428b      	cmp	r3, r1
900172a4:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
900172a8:	bfb8      	it	lt
900172aa:	b29a      	uxthlt	r2, r3
900172ac:	1b80      	subs	r0, r0, r6
900172ae:	f8ad 5046 	strh.w	r5, [sp, #70]	@ 0x46
900172b2:	1b52      	subs	r2, r2, r5
900172b4:	f8ad 0048 	strh.w	r0, [sp, #72]	@ 0x48
900172b8:	f8ad 204a 	strh.w	r2, [sp, #74]	@ 0x4a
900172bc:	ab11      	add	r3, sp, #68	@ 0x44
900172be:	ad13      	add	r5, sp, #76	@ 0x4c
900172c0:	6822      	ldr	r2, [r4, #0]
900172c2:	1d26      	adds	r6, r4, #4
900172c4:	9307      	str	r3, [sp, #28]
900172c6:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900172c8:	e893 0003 	ldmia.w	r3, {r0, r1}
900172cc:	e885 0003 	stmia.w	r5, {r0, r1}
900172d0:	4629      	mov	r1, r5
900172d2:	4620      	mov	r0, r4
900172d4:	4790      	blx	r2
900172d6:	4621      	mov	r1, r4
900172d8:	a815      	add	r0, sp, #84	@ 0x54
900172da:	f004 fde1 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900172de:	a815      	add	r0, sp, #84	@ 0x54
900172e0:	f003 faee 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900172e4:	9b07      	ldr	r3, [sp, #28]
900172e6:	4631      	mov	r1, r6
900172e8:	4618      	mov	r0, r3
900172ea:	f003 fb2d 	bl	9001a948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900172ee:	4628      	mov	r0, r5
900172f0:	f104 0526 	add.w	r5, r4, #38	@ 0x26
900172f4:	f003 fae4 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900172f8:	4628      	mov	r0, r5
900172fa:	f007 f959 	bl	9001e5b0 <_ZNK8touchgfx6Bitmap7getDataEv>
900172fe:	9007      	str	r0, [sp, #28]
90017300:	2800      	cmp	r0, #0
90017302:	f000 80ce 	beq.w	900174a2 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x262>
90017306:	f8db 2000 	ldr.w	r2, [fp]
9001730a:	a90d      	add	r1, sp, #52	@ 0x34
9001730c:	a809      	add	r0, sp, #36	@ 0x24
9001730e:	9209      	str	r2, [sp, #36]	@ 0x24
90017310:	f8db 2004 	ldr.w	r2, [fp, #4]
90017314:	920a      	str	r2, [sp, #40]	@ 0x28
90017316:	f8db 2008 	ldr.w	r2, [fp, #8]
9001731a:	920b      	str	r2, [sp, #44]	@ 0x2c
9001731c:	f8db 200c 	ldr.w	r2, [fp, #12]
90017320:	920c      	str	r2, [sp, #48]	@ 0x30
90017322:	f8da 2000 	ldr.w	r2, [sl]
90017326:	920d      	str	r2, [sp, #52]	@ 0x34
90017328:	f8da 2004 	ldr.w	r2, [sl, #4]
9001732c:	920e      	str	r2, [sp, #56]	@ 0x38
9001732e:	f8da 2008 	ldr.w	r2, [sl, #8]
90017332:	920f      	str	r2, [sp, #60]	@ 0x3c
90017334:	f8da 200c 	ldr.w	r2, [sl, #12]
90017338:	9210      	str	r2, [sp, #64]	@ 0x40
9001733a:	4632      	mov	r2, r6
9001733c:	f003 fae8 	bl	9001a910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90017340:	4632      	mov	r2, r6
90017342:	a90e      	add	r1, sp, #56	@ 0x38
90017344:	a80a      	add	r0, sp, #40	@ 0x28
90017346:	f003 fae3 	bl	9001a910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9001734a:	4632      	mov	r2, r6
9001734c:	a90f      	add	r1, sp, #60	@ 0x3c
9001734e:	a80b      	add	r0, sp, #44	@ 0x2c
90017350:	f003 fade 	bl	9001a910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90017354:	4632      	mov	r2, r6
90017356:	a910      	add	r1, sp, #64	@ 0x40
90017358:	a80c      	add	r0, sp, #48	@ 0x30
9001735a:	f003 fad9 	bl	9001a910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9001735e:	eddd 7a0d 	vldr	s15, [sp, #52]	@ 0x34
90017362:	edd7 3a00 	vldr	s7, [r7]
90017366:	eef0 6a67 	vmov.f32	s13, s15
9001736a:	eddd 7a0a 	vldr	s15, [sp, #40]	@ 0x28
9001736e:	ed97 5a01 	vldr	s10, [r7, #4]
90017372:	eeb0 7a67 	vmov.f32	s14, s15
90017376:	eddd 7a0e 	vldr	s15, [sp, #56]	@ 0x38
9001737a:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
9001737e:	edd9 2a00 	vldr	s5, [r9]
90017382:	eeb0 6a67 	vmov.f32	s12, s15
90017386:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
9001738a:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
9001738e:	ed98 3a00 	vldr	s6, [r8]
90017392:	ed99 4a01 	vldr	s8, [r9, #4]
90017396:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9001739a:	edd8 4a01 	vldr	s9, [r8, #4]
9001739e:	edd9 5a02 	vldr	s11, [r9, #8]
900173a2:	f8d9 e00c 	ldr.w	lr, [r9, #12]
900173a6:	ee16 6a10 	vmov	r6, s12
900173aa:	eeb0 6a67 	vmov.f32	s12, s15
900173ae:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
900173b2:	f8d8 c00c 	ldr.w	ip, [r8, #12]
900173b6:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900173ba:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
900173be:	edcd 2a20 	vstr	s5, [sp, #128]	@ 0x80
900173c2:	ed8d 3a21 	vstr	s6, [sp, #132]	@ 0x84
900173c6:	ee16 0a10 	vmov	r0, s12
900173ca:	eeb0 6a67 	vmov.f32	s12, s15
900173ce:	eddd 7a0c 	vldr	s15, [sp, #48]	@ 0x30
900173d2:	edcd 3a22 	vstr	s7, [sp, #136]	@ 0x88
900173d6:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900173da:	ed8d 7a23 	vstr	s14, [sp, #140]	@ 0x8c
900173de:	ed8d 4a25 	vstr	s8, [sp, #148]	@ 0x94
900173e2:	edcd 4a26 	vstr	s9, [sp, #152]	@ 0x98
900173e6:	ee16 1a10 	vmov	r1, s12
900173ea:	eeb0 6a67 	vmov.f32	s12, s15
900173ee:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
900173f2:	ed8d 5a27 	vstr	s10, [sp, #156]	@ 0x9c
900173f6:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900173fa:	f8d7 a008 	ldr.w	sl, [r7, #8]
900173fe:	f8d8 b008 	ldr.w	fp, [r8, #8]
90017402:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
90017406:	68ff      	ldr	r7, [r7, #12]
90017408:	ee16 2a10 	vmov	r2, s12
9001740c:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
90017410:	9624      	str	r6, [sp, #144]	@ 0x90
90017412:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90017416:	e9cd 0128 	strd	r0, r1, [sp, #160]	@ 0xa0
9001741a:	ed8d 6a1e 	vstr	s12, [sp, #120]	@ 0x78
9001741e:	4628      	mov	r0, r5
90017420:	edcd 5a2a 	vstr	s11, [sp, #168]	@ 0xa8
90017424:	9b06      	ldr	r3, [sp, #24]
90017426:	922d      	str	r2, [sp, #180]	@ 0xb4
90017428:	4a21      	ldr	r2, [pc, #132]	@ (900174b0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x270>)
9001742a:	9317      	str	r3, [sp, #92]	@ 0x5c
9001742c:	8812      	ldrh	r2, [r2, #0]
9001742e:	9b07      	ldr	r3, [sp, #28]
90017430:	9218      	str	r2, [sp, #96]	@ 0x60
90017432:	9319      	str	r3, [sp, #100]	@ 0x64
90017434:	edcd 7a2e 	vstr	s15, [sp, #184]	@ 0xb8
90017438:	f8cd e0bc 	str.w	lr, [sp, #188]	@ 0xbc
9001743c:	f8cd c0c0 	str.w	ip, [sp, #192]	@ 0xc0
90017440:	f8cd b0ac 	str.w	fp, [sp, #172]	@ 0xac
90017444:	f8cd a0b0 	str.w	sl, [sp, #176]	@ 0xb0
90017448:	9731      	str	r7, [sp, #196]	@ 0xc4
9001744a:	f007 f8e1 	bl	9001e610 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001744e:	901a      	str	r0, [sp, #104]	@ 0x68
90017450:	4628      	mov	r0, r5
90017452:	f006 ffc1 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90017456:	901b      	str	r0, [sp, #108]	@ 0x6c
90017458:	4628      	mov	r0, r5
9001745a:	f006 fff1 	bl	9001e440 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001745e:	901c      	str	r0, [sp, #112]	@ 0x70
90017460:	4628      	mov	r0, r5
90017462:	f006 ffb9 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90017466:	4b13      	ldr	r3, [pc, #76]	@ (900174b4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x274>)
90017468:	901d      	str	r0, [sp, #116]	@ 0x74
9001746a:	681b      	ldr	r3, [r3, #0]
9001746c:	f893 2076 	ldrb.w	r2, [r3, #118]	@ 0x76
90017470:	b10a      	cbz	r2, 90017476 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x236>
90017472:	6cdd      	ldr	r5, [r3, #76]	@ 0x4c
90017474:	b905      	cbnz	r5, 90017478 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x238>
90017476:	689d      	ldr	r5, [r3, #8]
90017478:	682b      	ldr	r3, [r5, #0]
9001747a:	4620      	mov	r0, r4
9001747c:	6c1e      	ldr	r6, [r3, #64]	@ 0x40
9001747e:	f7ff fed5 	bl	9001722c <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
90017482:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90017486:	aa1e      	add	r2, sp, #120	@ 0x78
90017488:	a917      	add	r1, sp, #92	@ 0x5c
9001748a:	9304      	str	r3, [sp, #16]
9001748c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
90017490:	e9cd 0302 	strd	r0, r3, [sp, #8]
90017494:	ab13      	add	r3, sp, #76	@ 0x4c
90017496:	4628      	mov	r0, r5
90017498:	9301      	str	r3, [sp, #4]
9001749a:	ab15      	add	r3, sp, #84	@ 0x54
9001749c:	9300      	str	r3, [sp, #0]
9001749e:	ab19      	add	r3, sp, #100	@ 0x64
900174a0:	47b0      	blx	r6
900174a2:	b033      	add	sp, #204	@ 0xcc
900174a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900174a8:	2300      	movs	r3, #0
900174aa:	9312      	str	r3, [sp, #72]	@ 0x48
900174ac:	e706      	b.n	900172bc <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x7c>
900174ae:	bf00      	nop
900174b0:	24027e96 	.word	0x24027e96
900174b4:	24027e9c 	.word	0x24027e9c

900174b8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
900174b8:	b570      	push	{r4, r5, r6, lr}
900174ba:	ed2d 8b04 	vpush	{d8-d9}
900174be:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
900174c2:	b098      	sub	sp, #96	@ 0x60
900174c4:	4604      	mov	r4, r0
900174c6:	460e      	mov	r6, r1
900174c8:	2b00      	cmp	r3, #0
900174ca:	d065      	beq.n	90017598 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
900174cc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900174d0:	f100 0526 	add.w	r5, r0, #38	@ 0x26
900174d4:	ed9f 8a37 	vldr	s16, [pc, #220]	@ 900175b4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
900174d8:	ee09 3a10 	vmov	s18, r3
900174dc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900174e0:	4628      	mov	r0, r5
900174e2:	ee08 3a90 	vmov	s17, r3
900174e6:	4b34      	ldr	r3, [pc, #208]	@ (900175b8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
900174e8:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
900174ec:	930c      	str	r3, [sp, #48]	@ 0x30
900174ee:	eef8 8ae8 	vcvt.f32.s32	s17, s17
900174f2:	930d      	str	r3, [sp, #52]	@ 0x34
900174f4:	930e      	str	r3, [sp, #56]	@ 0x38
900174f6:	ee39 9a08 	vadd.f32	s18, s18, s16
900174fa:	930f      	str	r3, [sp, #60]	@ 0x3c
900174fc:	f006 ff6c 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90017500:	ee07 0a90 	vmov	s15, r0
90017504:	4628      	mov	r0, r5
90017506:	ee78 8a88 	vadd.f32	s17, s17, s16
9001750a:	eef8 9ae7 	vcvt.f32.s32	s19, s15
9001750e:	f006 ff97 	bl	9001e440 <_ZNK8touchgfx6Bitmap9getHeightEv>
90017512:	4b2a      	ldr	r3, [pc, #168]	@ (900175bc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
90017514:	ee07 0a90 	vmov	s15, r0
90017518:	781b      	ldrb	r3, [r3, #0]
9001751a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9001751e:	eef0 7a48 	vmov.f32	s15, s16
90017522:	2b01      	cmp	r3, #1
90017524:	d13c      	bne.n	900175a0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
90017526:	eef0 6a69 	vmov.f32	s13, s19
9001752a:	ee19 3a90 	vmov	r3, s19
9001752e:	eeb0 6a47 	vmov.f32	s12, s14
90017532:	eef0 5a47 	vmov.f32	s11, s14
90017536:	eef0 9a48 	vmov.f32	s19, s16
9001753a:	eeb0 7a48 	vmov.f32	s14, s16
9001753e:	9314      	str	r3, [sp, #80]	@ 0x50
90017540:	ab14      	add	r3, sp, #80	@ 0x50
90017542:	2200      	movs	r2, #0
90017544:	4631      	mov	r1, r6
90017546:	9303      	str	r3, [sp, #12]
90017548:	ab10      	add	r3, sp, #64	@ 0x40
9001754a:	4620      	mov	r0, r4
9001754c:	edcd 7a04 	vstr	s15, [sp, #16]
90017550:	9302      	str	r3, [sp, #8]
90017552:	ab0c      	add	r3, sp, #48	@ 0x30
90017554:	ed8d 9a05 	vstr	s18, [sp, #20]
90017558:	9301      	str	r3, [sp, #4]
9001755a:	ab08      	add	r3, sp, #32
9001755c:	ed8d 9a06 	vstr	s18, [sp, #24]
90017560:	9300      	str	r3, [sp, #0]
90017562:	ab04      	add	r3, sp, #16
90017564:	edcd 7a07 	vstr	s15, [sp, #28]
90017568:	edcd 7a08 	vstr	s15, [sp, #32]
9001756c:	edcd 7a09 	vstr	s15, [sp, #36]	@ 0x24
90017570:	edcd 8a0a 	vstr	s17, [sp, #40]	@ 0x28
90017574:	edcd 8a0b 	vstr	s17, [sp, #44]	@ 0x2c
90017578:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
9001757c:	edcd 9a11 	vstr	s19, [sp, #68]	@ 0x44
90017580:	edcd 5a12 	vstr	s11, [sp, #72]	@ 0x48
90017584:	ed8d 6a13 	vstr	s12, [sp, #76]	@ 0x4c
90017588:	edcd 7a15 	vstr	s15, [sp, #84]	@ 0x54
9001758c:	ed8d 7a16 	vstr	s14, [sp, #88]	@ 0x58
90017590:	edcd 6a17 	vstr	s13, [sp, #92]	@ 0x5c
90017594:	f7ff fe54 	bl	90017240 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
90017598:	b018      	add	sp, #96	@ 0x60
9001759a:	ecbd 8b04 	vpop	{d8-d9}
9001759e:	bd70      	pop	{r4, r5, r6, pc}
900175a0:	eef0 6a47 	vmov.f32	s13, s14
900175a4:	ee18 3a10 	vmov	r3, s16
900175a8:	eef0 5a69 	vmov.f32	s11, s19
900175ac:	eeb0 6a48 	vmov.f32	s12, s16
900175b0:	e7c5      	b.n	9001753e <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
900175b2:	bf00      	nop
900175b4:	00000000 	.word	0x00000000
900175b8:	42c80000 	.word	0x42c80000
900175bc:	24027e94 	.word	0x24027e94

900175c0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
900175c0:	2000      	movs	r0, #0
900175c2:	4770      	bx	lr

900175c4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
900175c4:	4b07      	ldr	r3, [pc, #28]	@ (900175e4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
900175c6:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
900175c8:	881b      	ldrh	r3, [r3, #0]
900175ca:	4293      	cmp	r3, r2
900175cc:	bf81      	itttt	hi
900175ce:	4b06      	ldrhi	r3, [pc, #24]	@ (900175e8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
900175d0:	681b      	ldrhi	r3, [r3, #0]
900175d2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
900175d6:	7858      	ldrbhi	r0, [r3, #1]
900175d8:	bf8c      	ite	hi
900175da:	f000 0003 	andhi.w	r0, r0, #3
900175de:	2000      	movls	r0, #0
900175e0:	4770      	bx	lr
900175e2:	bf00      	nop
900175e4:	24027ef8 	.word	0x24027ef8
900175e8:	24027ef4 	.word	0x24027ef4

900175ec <_ZN8touchgfx8TextAreaD1Ev>:
900175ec:	4770      	bx	lr
	...

900175f0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
900175f0:	4b11      	ldr	r3, [pc, #68]	@ (90017638 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
900175f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900175f6:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
900175f8:	4604      	mov	r4, r0
900175fa:	881b      	ldrh	r3, [r3, #0]
900175fc:	428b      	cmp	r3, r1
900175fe:	d918      	bls.n	90017632 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90017600:	6803      	ldr	r3, [r0, #0]
90017602:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
90017604:	4b0d      	ldr	r3, [pc, #52]	@ (9001763c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90017606:	6818      	ldr	r0, [r3, #0]
90017608:	f7f1 fb58 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
9001760c:	6823      	ldr	r3, [r4, #0]
9001760e:	4606      	mov	r6, r0
90017610:	4620      	mov	r0, r4
90017612:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90017614:	4798      	blx	r3
90017616:	6823      	ldr	r3, [r4, #0]
90017618:	4607      	mov	r7, r0
9001761a:	4620      	mov	r0, r4
9001761c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90017620:	4798      	blx	r3
90017622:	463a      	mov	r2, r7
90017624:	4603      	mov	r3, r0
90017626:	4631      	mov	r1, r6
90017628:	4620      	mov	r0, r4
9001762a:	46ac      	mov	ip, r5
9001762c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90017630:	4760      	bx	ip
90017632:	2000      	movs	r0, #0
90017634:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017638:	24027ef8 	.word	0x24027ef8
9001763c:	24027f00 	.word	0x24027f00

90017640 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90017640:	4b18      	ldr	r3, [pc, #96]	@ (900176a4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90017642:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90017646:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90017648:	4604      	mov	r4, r0
9001764a:	881b      	ldrh	r3, [r3, #0]
9001764c:	428b      	cmp	r3, r1
9001764e:	d926      	bls.n	9001769e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90017650:	4b15      	ldr	r3, [pc, #84]	@ (900176a8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90017652:	681b      	ldr	r3, [r3, #0]
90017654:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90017658:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
9001765c:	4b13      	ldr	r3, [pc, #76]	@ (900176ac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
9001765e:	7855      	ldrb	r5, [r2, #1]
90017660:	681b      	ldr	r3, [r3, #0]
90017662:	f3c5 0581 	ubfx	r5, r5, #2, #2
90017666:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
9001766a:	6833      	ldr	r3, [r6, #0]
9001766c:	69df      	ldr	r7, [r3, #28]
9001766e:	4b10      	ldr	r3, [pc, #64]	@ (900176b0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
90017670:	6818      	ldr	r0, [r3, #0]
90017672:	f7f1 fb23 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
90017676:	6823      	ldr	r3, [r4, #0]
90017678:	4680      	mov	r8, r0
9001767a:	4620      	mov	r0, r4
9001767c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
9001767e:	4798      	blx	r3
90017680:	6823      	ldr	r3, [r4, #0]
90017682:	4681      	mov	r9, r0
90017684:	4620      	mov	r0, r4
90017686:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
9001768a:	4798      	blx	r3
9001768c:	464b      	mov	r3, r9
9001768e:	9000      	str	r0, [sp, #0]
90017690:	4642      	mov	r2, r8
90017692:	4629      	mov	r1, r5
90017694:	4630      	mov	r0, r6
90017696:	47b8      	blx	r7
90017698:	b003      	add	sp, #12
9001769a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001769e:	2000      	movs	r0, #0
900176a0:	e7fa      	b.n	90017698 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
900176a2:	bf00      	nop
900176a4:	24027ef8 	.word	0x24027ef8
900176a8:	24027ef4 	.word	0x24027ef4
900176ac:	24027efc 	.word	0x24027efc
900176b0:	24027f00 	.word	0x24027f00

900176b4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
900176b4:	b40e      	push	{r1, r2, r3}
900176b6:	4b30      	ldr	r3, [pc, #192]	@ (90017778 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
900176b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900176bc:	881a      	ldrh	r2, [r3, #0]
900176be:	b09d      	sub	sp, #116	@ 0x74
900176c0:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
900176c2:	4604      	mov	r4, r0
900176c4:	429a      	cmp	r2, r3
900176c6:	d954      	bls.n	90017772 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
900176c8:	aa26      	add	r2, sp, #152	@ 0x98
900176ca:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 9001777c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
900176ce:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 90017780 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
900176d2:	9202      	str	r2, [sp, #8]
900176d4:	f8d9 2000 	ldr.w	r2, [r9]
900176d8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
900176dc:	f8d8 3000 	ldr.w	r3, [r8]
900176e0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900176e4:	682b      	ldr	r3, [r5, #0]
900176e6:	4628      	mov	r0, r5
900176e8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900176ea:	4798      	blx	r3
900176ec:	4606      	mov	r6, r0
900176ee:	b207      	sxth	r7, r0
900176f0:	a803      	add	r0, sp, #12
900176f2:	f005 f926 	bl	9001c942 <_ZN8touchgfx12TextProviderC1Ev>
900176f6:	682b      	ldr	r3, [r5, #0]
900176f8:	4628      	mov	r0, r5
900176fa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900176fc:	4798      	blx	r3
900176fe:	682b      	ldr	r3, [r5, #0]
90017700:	4682      	mov	sl, r0
90017702:	4628      	mov	r0, r5
90017704:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90017706:	4798      	blx	r3
90017708:	4653      	mov	r3, sl
9001770a:	9000      	str	r0, [sp, #0]
9001770c:	a803      	add	r0, sp, #12
9001770e:	9a02      	ldr	r2, [sp, #8]
90017710:	9925      	ldr	r1, [sp, #148]	@ 0x94
90017712:	f005 f971 	bl	9001c9f8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017716:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90017718:	f8d9 3000 	ldr.w	r3, [r9]
9001771c:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
90017720:	8925      	ldrh	r5, [r4, #8]
90017722:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90017726:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
9001772a:	eba5 050c 	sub.w	r5, r5, ip
9001772e:	784a      	ldrb	r2, [r1, #1]
90017730:	f8d8 3000 	ldr.w	r3, [r8]
90017734:	b22d      	sxth	r5, r5
90017736:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
9001773a:	f3c2 0281 	ubfx	r2, r2, #2, #2
9001773e:	9500      	str	r5, [sp, #0]
90017740:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90017744:	a803      	add	r0, sp, #12
90017746:	f002 fdc9 	bl	9001a2dc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
9001774a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
9001774e:	b203      	sxth	r3, r0
90017750:	18b9      	adds	r1, r7, r2
90017752:	2900      	cmp	r1, #0
90017754:	dd0b      	ble.n	9001776e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90017756:	3b01      	subs	r3, #1
90017758:	fb13 f302 	smulbb	r3, r3, r2
9001775c:	fb16 3300 	smlabb	r3, r6, r0, r3
90017760:	b21f      	sxth	r7, r3
90017762:	4638      	mov	r0, r7
90017764:	b01d      	add	sp, #116	@ 0x74
90017766:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001776a:	b003      	add	sp, #12
9001776c:	4770      	bx	lr
9001776e:	2b00      	cmp	r3, #0
90017770:	dcf7      	bgt.n	90017762 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90017772:	2700      	movs	r7, #0
90017774:	e7f5      	b.n	90017762 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90017776:	bf00      	nop
90017778:	24027ef8 	.word	0x24027ef8
9001777c:	24027ef4 	.word	0x24027ef4
90017780:	24027efc 	.word	0x24027efc

90017784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90017784:	4bbd      	ldr	r3, [pc, #756]	@ (90017a7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
90017786:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001778a:	460c      	mov	r4, r1
9001778c:	881b      	ldrh	r3, [r3, #0]
9001778e:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
90017790:	b0a9      	sub	sp, #164	@ 0xa4
90017792:	4680      	mov	r8, r0
90017794:	428b      	cmp	r3, r1
90017796:	d809      	bhi.n	900177ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
90017798:	2300      	movs	r3, #0
9001779a:	f04f 32ff 	mov.w	r2, #4294967295
9001779e:	6083      	str	r3, [r0, #8]
900177a0:	e9c0 3200 	strd	r3, r2, [r0]
900177a4:	4640      	mov	r0, r8
900177a6:	b029      	add	sp, #164	@ 0xa4
900177a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900177ac:	4eb4      	ldr	r6, [pc, #720]	@ (90017a80 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
900177ae:	6833      	ldr	r3, [r6, #0]
900177b0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
900177b4:	4bb3      	ldr	r3, [pc, #716]	@ (90017a84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
900177b6:	681b      	ldr	r3, [r3, #0]
900177b8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900177bc:	4bb2      	ldr	r3, [pc, #712]	@ (90017a88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
900177be:	6818      	ldr	r0, [r3, #0]
900177c0:	f7f1 fa7c 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
900177c4:	682b      	ldr	r3, [r5, #0]
900177c6:	4681      	mov	r9, r0
900177c8:	4628      	mov	r0, r5
900177ca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900177cc:	4798      	blx	r3
900177ce:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
900177d0:	b203      	sxth	r3, r0
900177d2:	4682      	mov	sl, r0
900177d4:	4407      	add	r7, r0
900177d6:	a80f      	add	r0, sp, #60	@ 0x3c
900177d8:	9304      	str	r3, [sp, #16]
900177da:	b2bb      	uxth	r3, r7
900177dc:	9303      	str	r3, [sp, #12]
900177de:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
900177e2:	2b00      	cmp	r3, #0
900177e4:	f040 80a5 	bne.w	90017932 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
900177e8:	f005 f8ab 	bl	9001c942 <_ZN8touchgfx12TextProviderC1Ev>
900177ec:	682b      	ldr	r3, [r5, #0]
900177ee:	4628      	mov	r0, r5
900177f0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900177f2:	4798      	blx	r3
900177f4:	682b      	ldr	r3, [r5, #0]
900177f6:	4606      	mov	r6, r0
900177f8:	4628      	mov	r0, r5
900177fa:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900177fc:	4798      	blx	r3
900177fe:	6823      	ldr	r3, [r4, #0]
90017800:	4607      	mov	r7, r0
90017802:	4620      	mov	r0, r4
90017804:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90017806:	4798      	blx	r3
90017808:	6823      	ldr	r3, [r4, #0]
9001780a:	4683      	mov	fp, r0
9001780c:	4620      	mov	r0, r4
9001780e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90017812:	4798      	blx	r3
90017814:	463b      	mov	r3, r7
90017816:	4649      	mov	r1, r9
90017818:	4632      	mov	r2, r6
9001781a:	2600      	movs	r6, #0
9001781c:	e9cd b000 	strd	fp, r0, [sp]
90017820:	a80f      	add	r0, sp, #60	@ 0x3c
90017822:	4637      	mov	r7, r6
90017824:	f005 f8fd 	bl	9001ca22 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90017828:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001782c:	f8df b250 	ldr.w	fp, [pc, #592]	@ 90017a80 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90017830:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90017834:	bf0c      	ite	eq
90017836:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
9001783a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
9001783e:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90017840:	4629      	mov	r1, r5
90017842:	f8db 3000 	ldr.w	r3, [fp]
90017846:	a80f      	add	r0, sp, #60	@ 0x3c
90017848:	3701      	adds	r7, #1
9001784a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9001784e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90017852:	b2bf      	uxth	r7, r7
90017854:	785b      	ldrb	r3, [r3, #1]
90017856:	f3c3 0381 	ubfx	r3, r3, #2, #2
9001785a:	f002 fa5a 	bl	90019d12 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
9001785e:	9b03      	ldr	r3, [sp, #12]
90017860:	4286      	cmp	r6, r0
90017862:	eba9 0903 	sub.w	r9, r9, r3
90017866:	bfb8      	it	lt
90017868:	4606      	movlt	r6, r0
9001786a:	a80f      	add	r0, sp, #60	@ 0x3c
9001786c:	fa0f f989 	sxth.w	r9, r9
90017870:	b236      	sxth	r6, r6
90017872:	f005 f88d 	bl	9001c990 <_ZN8touchgfx12TextProvider11endOfStringEv>
90017876:	b918      	cbnz	r0, 90017880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90017878:	7a2b      	ldrb	r3, [r5, #8]
9001787a:	444b      	add	r3, r9
9001787c:	2b00      	cmp	r3, #0
9001787e:	dcde      	bgt.n	9001783e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90017880:	9b03      	ldr	r3, [sp, #12]
90017882:	4620      	mov	r0, r4
90017884:	9a04      	ldr	r2, [sp, #16]
90017886:	fb13 f707 	smulbb	r7, r3, r7
9001788a:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
9001788c:	f895 9009 	ldrb.w	r9, [r5, #9]
90017890:	1aff      	subs	r7, r7, r3
90017892:	b2bf      	uxth	r7, r7
90017894:	b23b      	sxth	r3, r7
90017896:	429a      	cmp	r2, r3
90017898:	bfa8      	it	ge
9001789a:	4657      	movge	r7, sl
9001789c:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
900178a0:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
900178a4:	6823      	ldr	r3, [r4, #0]
900178a6:	444f      	add	r7, r9
900178a8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
900178aa:	bf08      	it	eq
900178ac:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
900178b0:	fa1f f987 	uxth.w	r9, r7
900178b4:	bf18      	it	ne
900178b6:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
900178ba:	4798      	blx	r3
900178bc:	2801      	cmp	r0, #1
900178be:	fa0f f789 	sxth.w	r7, r9
900178c2:	b2b3      	uxth	r3, r6
900178c4:	f000 80e2 	beq.w	90017a8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
900178c8:	2802      	cmp	r0, #2
900178ca:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
900178ce:	f000 80e3 	beq.w	90017a98 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
900178d2:	7aea      	ldrb	r2, [r5, #11]
900178d4:	b236      	sxth	r6, r6
900178d6:	7b2d      	ldrb	r5, [r5, #12]
900178d8:	1ab6      	subs	r6, r6, r2
900178da:	442a      	add	r2, r5
900178dc:	fa1f fa86 	uxth.w	sl, r6
900178e0:	4413      	add	r3, r2
900178e2:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
900178e6:	fa0f fb8a 	sxth.w	fp, sl
900178ea:	b29b      	uxth	r3, r3
900178ec:	2a02      	cmp	r2, #2
900178ee:	b21e      	sxth	r6, r3
900178f0:	f000 80d6 	beq.w	90017aa0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
900178f4:	2a03      	cmp	r2, #3
900178f6:	f000 80de 	beq.w	90017ab6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
900178fa:	2a01      	cmp	r2, #1
900178fc:	f040 80e6 	bne.w	90017acc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90017900:	8925      	ldrh	r5, [r4, #8]
90017902:	4633      	mov	r3, r6
90017904:	463e      	mov	r6, r7
90017906:	eba5 0909 	sub.w	r9, r5, r9
9001790a:	461f      	mov	r7, r3
9001790c:	465d      	mov	r5, fp
9001790e:	fa0f fb89 	sxth.w	fp, r9
90017912:	4b5d      	ldr	r3, [pc, #372]	@ (90017a88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90017914:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90017916:	6818      	ldr	r0, [r3, #0]
90017918:	f7f1 f9d0 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
9001791c:	f8a8 b000 	strh.w	fp, [r8]
90017920:	f8a8 5002 	strh.w	r5, [r8, #2]
90017924:	f8a8 6004 	strh.w	r6, [r8, #4]
90017928:	f8a8 7006 	strh.w	r7, [r8, #6]
9001792c:	f8c8 0008 	str.w	r0, [r8, #8]
90017930:	e738      	b.n	900177a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
90017932:	f005 f806 	bl	9001c942 <_ZN8touchgfx12TextProviderC1Ev>
90017936:	682b      	ldr	r3, [r5, #0]
90017938:	4628      	mov	r0, r5
9001793a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001793c:	4798      	blx	r3
9001793e:	682b      	ldr	r3, [r5, #0]
90017940:	4607      	mov	r7, r0
90017942:	4628      	mov	r0, r5
90017944:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90017946:	4798      	blx	r3
90017948:	6823      	ldr	r3, [r4, #0]
9001794a:	4683      	mov	fp, r0
9001794c:	4620      	mov	r0, r4
9001794e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90017950:	4798      	blx	r3
90017952:	6822      	ldr	r2, [r4, #0]
90017954:	9005      	str	r0, [sp, #20]
90017956:	4620      	mov	r0, r4
90017958:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
9001795c:	4790      	blx	r2
9001795e:	9b05      	ldr	r3, [sp, #20]
90017960:	463a      	mov	r2, r7
90017962:	4649      	mov	r1, r9
90017964:	9001      	str	r0, [sp, #4]
90017966:	a80f      	add	r0, sp, #60	@ 0x3c
90017968:	9300      	str	r3, [sp, #0]
9001796a:	465b      	mov	r3, fp
9001796c:	f005 f859 	bl	9001ca22 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90017970:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90017974:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90017978:	af0f      	add	r7, sp, #60	@ 0x3c
9001797a:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
9001797e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90017982:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90017984:	bf0a      	itet	eq
90017986:	464a      	moveq	r2, r9
90017988:	461a      	movne	r2, r3
9001798a:	4699      	moveq	r9, r3
9001798c:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
90017990:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
90017994:	1ad2      	subs	r2, r2, r3
90017996:	6833      	ldr	r3, [r6, #0]
90017998:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
9001799c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
900179a0:	7859      	ldrb	r1, [r3, #1]
900179a2:	2300      	movs	r3, #0
900179a4:	9707      	str	r7, [sp, #28]
900179a6:	f3c1 0181 	ubfx	r1, r1, #2, #2
900179aa:	f8ad 3018 	strh.w	r3, [sp, #24]
900179ae:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
900179b2:	f88d 1020 	strb.w	r1, [sp, #32]
900179b6:	9509      	str	r5, [sp, #36]	@ 0x24
900179b8:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
900179bc:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
900179c0:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
900179c4:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900179c8:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
900179cc:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
900179d0:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
900179d4:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900179d8:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
900179dc:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
900179e0:	b350      	cbz	r0, 90017a38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900179e2:	682b      	ldr	r3, [r5, #0]
900179e4:	4628      	mov	r0, r5
900179e6:	695b      	ldr	r3, [r3, #20]
900179e8:	4798      	blx	r3
900179ea:	4607      	mov	r7, r0
900179ec:	b320      	cbz	r0, 90017a38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900179ee:	9809      	ldr	r0, [sp, #36]	@ 0x24
900179f0:	4639      	mov	r1, r7
900179f2:	6803      	ldr	r3, [r0, #0]
900179f4:	68db      	ldr	r3, [r3, #12]
900179f6:	4798      	blx	r3
900179f8:	4606      	mov	r6, r0
900179fa:	b1e8      	cbz	r0, 90017a38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900179fc:	7b43      	ldrb	r3, [r0, #13]
900179fe:	7a82      	ldrb	r2, [r0, #10]
90017a00:	005b      	lsls	r3, r3, #1
90017a02:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90017a06:	4313      	orrs	r3, r2
90017a08:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
90017a0c:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
90017a10:	2b06      	cmp	r3, #6
90017a12:	d111      	bne.n	90017a38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90017a14:	9809      	ldr	r0, [sp, #36]	@ 0x24
90017a16:	4632      	mov	r2, r6
90017a18:	4639      	mov	r1, r7
90017a1a:	6803      	ldr	r3, [r0, #0]
90017a1c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90017a1e:	4798      	blx	r3
90017a20:	7b73      	ldrb	r3, [r6, #13]
90017a22:	005b      	lsls	r3, r3, #1
90017a24:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017a28:	7ab3      	ldrb	r3, [r6, #10]
90017a2a:	4313      	orrs	r3, r2
90017a2c:	4418      	add	r0, r3
90017a2e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90017a32:	4418      	add	r0, r3
90017a34:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
90017a38:	2600      	movs	r6, #0
90017a3a:	4637      	mov	r7, r6
90017a3c:	a806      	add	r0, sp, #24
90017a3e:	3701      	adds	r7, #1
90017a40:	f002 fb49 	bl	9001a0d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90017a44:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
90017a48:	9b03      	ldr	r3, [sp, #12]
90017a4a:	b2bf      	uxth	r7, r7
90017a4c:	4286      	cmp	r6, r0
90017a4e:	eba9 0903 	sub.w	r9, r9, r3
90017a52:	f8bd 3018 	ldrh.w	r3, [sp, #24]
90017a56:	bfb8      	it	lt
90017a58:	4606      	movlt	r6, r0
90017a5a:	fa0f f989 	sxth.w	r9, r9
90017a5e:	b236      	sxth	r6, r6
90017a60:	2b00      	cmp	r3, #0
90017a62:	f43f af0d 	beq.w	90017880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90017a66:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
90017a6a:	2b00      	cmp	r3, #0
90017a6c:	f47f af08 	bne.w	90017880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90017a70:	7a2b      	ldrb	r3, [r5, #8]
90017a72:	444b      	add	r3, r9
90017a74:	2b00      	cmp	r3, #0
90017a76:	dce1      	bgt.n	90017a3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90017a78:	e702      	b.n	90017880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90017a7a:	bf00      	nop
90017a7c:	24027ef8 	.word	0x24027ef8
90017a80:	24027ef4 	.word	0x24027ef4
90017a84:	24027efc 	.word	0x24027efc
90017a88:	24027f00 	.word	0x24027f00
90017a8c:	ebaa 0606 	sub.w	r6, sl, r6
90017a90:	2002      	movs	r0, #2
90017a92:	fb96 f6f0 	sdiv	r6, r6, r0
90017a96:	e71c      	b.n	900178d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90017a98:	441e      	add	r6, r3
90017a9a:	ebaa 0606 	sub.w	r6, sl, r6
90017a9e:	e718      	b.n	900178d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90017aa0:	8925      	ldrh	r5, [r4, #8]
90017aa2:	1aed      	subs	r5, r5, r3
90017aa4:	eba5 050a 	sub.w	r5, r5, sl
90017aa8:	fa0f fb85 	sxth.w	fp, r5
90017aac:	8965      	ldrh	r5, [r4, #10]
90017aae:	eba5 0509 	sub.w	r5, r5, r9
90017ab2:	b22d      	sxth	r5, r5
90017ab4:	e72d      	b.n	90017912 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90017ab6:	8965      	ldrh	r5, [r4, #10]
90017ab8:	f04f 0b00 	mov.w	fp, #0
90017abc:	1aed      	subs	r5, r5, r3
90017abe:	4633      	mov	r3, r6
90017ac0:	463e      	mov	r6, r7
90017ac2:	eba5 050a 	sub.w	r5, r5, sl
90017ac6:	461f      	mov	r7, r3
90017ac8:	b22d      	sxth	r5, r5
90017aca:	e722      	b.n	90017912 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90017acc:	2500      	movs	r5, #0
90017ace:	e720      	b.n	90017912 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

90017ad0 <_ZN8touchgfx8TextAreaD0Ev>:
90017ad0:	b510      	push	{r4, lr}
90017ad2:	4604      	mov	r4, r0
90017ad4:	2148      	movs	r1, #72	@ 0x48
90017ad6:	f013 fd16 	bl	9002b506 <_ZdlPvj>
90017ada:	4620      	mov	r0, r4
90017adc:	bd10      	pop	{r4, pc}
	...

90017ae0 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
90017ae0:	b513      	push	{r0, r1, r4, lr}
90017ae2:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
90017ae6:	4604      	mov	r4, r0
90017ae8:	b1fb      	cbz	r3, 90017b2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90017aea:	4b16      	ldr	r3, [pc, #88]	@ (90017b44 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
90017aec:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90017aee:	881b      	ldrh	r3, [r3, #0]
90017af0:	428b      	cmp	r3, r1
90017af2:	d91a      	bls.n	90017b2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90017af4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90017af8:	2b00      	cmp	r3, #0
90017afa:	dd16      	ble.n	90017b2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90017afc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90017b00:	2b00      	cmp	r3, #0
90017b02:	dd12      	ble.n	90017b2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90017b04:	4b10      	ldr	r3, [pc, #64]	@ (90017b48 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
90017b06:	6818      	ldr	r0, [r3, #0]
90017b08:	f7f1 f8d8 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
90017b0c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
90017b10:	6822      	ldr	r2, [r4, #0]
90017b12:	2b00      	cmp	r3, #0
90017b14:	db06      	blt.n	90017b24 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90017b16:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
90017b1a:	2b00      	cmp	r3, #0
90017b1c:	db02      	blt.n	90017b24 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90017b1e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90017b20:	4298      	cmp	r0, r3
90017b22:	d004      	beq.n	90017b2e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
90017b24:	6953      	ldr	r3, [r2, #20]
90017b26:	4620      	mov	r0, r4
90017b28:	4798      	blx	r3
90017b2a:	b002      	add	sp, #8
90017b2c:	bd10      	pop	{r4, pc}
90017b2e:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
90017b32:	466b      	mov	r3, sp
90017b34:	6912      	ldr	r2, [r2, #16]
90017b36:	c903      	ldmia	r1, {r0, r1}
90017b38:	e883 0003 	stmia.w	r3, {r0, r1}
90017b3c:	4619      	mov	r1, r3
90017b3e:	4620      	mov	r0, r4
90017b40:	4790      	blx	r2
90017b42:	e7f2      	b.n	90017b2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90017b44:	24027ef8 	.word	0x24027ef8
90017b48:	24027f00 	.word	0x24027f00

90017b4c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
90017b4c:	4b45      	ldr	r3, [pc, #276]	@ (90017c64 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
90017b4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017b52:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90017b54:	b08e      	sub	sp, #56	@ 0x38
90017b56:	881b      	ldrh	r3, [r3, #0]
90017b58:	4604      	mov	r4, r0
90017b5a:	4293      	cmp	r3, r2
90017b5c:	d97e      	bls.n	90017c5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90017b5e:	6808      	ldr	r0, [r1, #0]
90017b60:	ab05      	add	r3, sp, #20
90017b62:	6849      	ldr	r1, [r1, #4]
90017b64:	4d40      	ldr	r5, [pc, #256]	@ (90017c68 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
90017b66:	c303      	stmia	r3!, {r0, r1}
90017b68:	4611      	mov	r1, r2
90017b6a:	6828      	ldr	r0, [r5, #0]
90017b6c:	f7f1 f8a6 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
90017b70:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
90017b74:	2b00      	cmp	r3, #0
90017b76:	db11      	blt.n	90017b9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90017b78:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
90017b7c:	2b00      	cmp	r3, #0
90017b7e:	db0d      	blt.n	90017b9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90017b80:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90017b82:	4298      	cmp	r0, r3
90017b84:	d10a      	bne.n	90017b9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90017b86:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
90017b8a:	ab09      	add	r3, sp, #36	@ 0x24
90017b8c:	e892 0003 	ldmia.w	r2, {r0, r1}
90017b90:	e883 0003 	stmia.w	r3, {r0, r1}
90017b94:	4619      	mov	r1, r3
90017b96:	a805      	add	r0, sp, #20
90017b98:	f7fd f8a4 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
90017b9c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90017ba0:	2b00      	cmp	r3, #0
90017ba2:	dd5b      	ble.n	90017c5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90017ba4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90017ba8:	2b00      	cmp	r3, #0
90017baa:	dd57      	ble.n	90017c5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90017bac:	4f2f      	ldr	r7, [pc, #188]	@ (90017c6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
90017bae:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90017bb0:	683b      	ldr	r3, [r7, #0]
90017bb2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90017bb6:	4b2e      	ldr	r3, [pc, #184]	@ (90017c70 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
90017bb8:	681b      	ldr	r3, [r3, #0]
90017bba:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90017bbe:	2e00      	cmp	r6, #0
90017bc0:	d04c      	beq.n	90017c5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90017bc2:	6823      	ldr	r3, [r4, #0]
90017bc4:	4620      	mov	r0, r4
90017bc6:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
90017bca:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90017bcc:	4798      	blx	r3
90017bce:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90017bd0:	683b      	ldr	r3, [r7, #0]
90017bd2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
90017bd6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90017bda:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
90017bde:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
90017be2:	785b      	ldrb	r3, [r3, #1]
90017be4:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
90017be8:	f3c3 0381 	ubfx	r3, r3, #2, #2
90017bec:	6b21      	ldr	r1, [r4, #48]	@ 0x30
90017bee:	9609      	str	r6, [sp, #36]	@ 0x24
90017bf0:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
90017bf4:	4b1f      	ldr	r3, [pc, #124]	@ (90017c74 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
90017bf6:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
90017bfa:	681b      	ldr	r3, [r3, #0]
90017bfc:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
90017c00:	910b      	str	r1, [sp, #44]	@ 0x2c
90017c02:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
90017c06:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
90017c0a:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
90017c0e:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
90017c12:	f893 2076 	ldrb.w	r2, [r3, #118]	@ 0x76
90017c16:	b10a      	cbz	r2, 90017c1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
90017c18:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
90017c1a:	b906      	cbnz	r6, 90017c1e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
90017c1c:	689e      	ldr	r6, [r3, #8]
90017c1e:	af07      	add	r7, sp, #28
90017c20:	4621      	mov	r1, r4
90017c22:	4638      	mov	r0, r7
90017c24:	f004 f93c 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017c28:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90017c2a:	6828      	ldr	r0, [r5, #0]
90017c2c:	f7f1 f846 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
90017c30:	6823      	ldr	r3, [r4, #0]
90017c32:	4605      	mov	r5, r0
90017c34:	4620      	mov	r0, r4
90017c36:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90017c38:	4798      	blx	r3
90017c3a:	6823      	ldr	r3, [r4, #0]
90017c3c:	4680      	mov	r8, r0
90017c3e:	4620      	mov	r0, r4
90017c40:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90017c44:	4798      	blx	r3
90017c46:	ab09      	add	r3, sp, #36	@ 0x24
90017c48:	9501      	str	r5, [sp, #4]
90017c4a:	9300      	str	r3, [sp, #0]
90017c4c:	ab05      	add	r3, sp, #20
90017c4e:	e9cd 8002 	strd	r8, r0, [sp, #8]
90017c52:	4630      	mov	r0, r6
90017c54:	e897 0006 	ldmia.w	r7, {r1, r2}
90017c58:	f7f0 ffe0 	bl	90008c1c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90017c5c:	b00e      	add	sp, #56	@ 0x38
90017c5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017c62:	bf00      	nop
90017c64:	24027ef8 	.word	0x24027ef8
90017c68:	24027f00 	.word	0x24027f00
90017c6c:	24027ef4 	.word	0x24027ef4
90017c70:	24027efc 	.word	0x24027efc
90017c74:	24027e9c 	.word	0x24027e9c

90017c78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90017c78:	b538      	push	{r3, r4, r5, lr}
90017c7a:	4b0e      	ldr	r3, [pc, #56]	@ (90017cb4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
90017c7c:	4604      	mov	r4, r0
90017c7e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90017c80:	881b      	ldrh	r3, [r3, #0]
90017c82:	429a      	cmp	r2, r3
90017c84:	d214      	bcs.n	90017cb0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
90017c86:	6803      	ldr	r3, [r0, #0]
90017c88:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90017c8a:	4798      	blx	r3
90017c8c:	6823      	ldr	r3, [r4, #0]
90017c8e:	4605      	mov	r5, r0
90017c90:	4620      	mov	r0, r4
90017c92:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90017c94:	4798      	blx	r3
90017c96:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90017c9a:	b22d      	sxth	r5, r5
90017c9c:	4601      	mov	r1, r0
90017c9e:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90017ca2:	bf06      	itte	eq
90017ca4:	4602      	moveq	r2, r0
90017ca6:	4629      	moveq	r1, r5
90017ca8:	462a      	movne	r2, r5
90017caa:	4620      	mov	r0, r4
90017cac:	f7fc fdfc 	bl	900148a8 <_ZN8touchgfx8Drawable14setWidthHeightEss>
90017cb0:	bd38      	pop	{r3, r4, r5, pc}
90017cb2:	bf00      	nop
90017cb4:	24027ef8 	.word	0x24027ef8

90017cb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90017cb8:	b530      	push	{r4, r5, lr}
90017cba:	888b      	ldrh	r3, [r1, #4]
90017cbc:	b085      	sub	sp, #20
90017cbe:	4604      	mov	r4, r0
90017cc0:	8583      	strh	r3, [r0, #44]	@ 0x2c
90017cc2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90017cc6:	b923      	cbnz	r3, 90017cd2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90017cc8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90017ccc:	b90b      	cbnz	r3, 90017cd2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90017cce:	f7ff ffd3 	bl	90017c78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90017cd2:	6823      	ldr	r3, [r4, #0]
90017cd4:	466d      	mov	r5, sp
90017cd6:	4621      	mov	r1, r4
90017cd8:	343c      	adds	r4, #60	@ 0x3c
90017cda:	4628      	mov	r0, r5
90017cdc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90017ce0:	4798      	blx	r3
90017ce2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90017ce6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90017cea:	b005      	add	sp, #20
90017cec:	bd30      	pop	{r4, r5, pc}
	...

90017cf0 <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv>:
90017cf0:	4b0b      	ldr	r3, [pc, #44]	@ (90017d20 <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv+0x30>)
90017cf2:	b510      	push	{r4, lr}
90017cf4:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90017cf6:	4604      	mov	r4, r0
90017cf8:	881b      	ldrh	r3, [r3, #0]
90017cfa:	429a      	cmp	r2, r3
90017cfc:	d20f      	bcs.n	90017d1e <_ZN8touchgfx8TextArea25resizeHeightToCurrentTextEv+0x2e>
90017cfe:	6803      	ldr	r3, [r0, #0]
90017d00:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90017d02:	4798      	blx	r3
90017d04:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90017d08:	4601      	mov	r1, r0
90017d0a:	4620      	mov	r0, r4
90017d0c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90017d10:	6823      	ldr	r3, [r4, #0]
90017d12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90017d16:	bf0c      	ite	eq
90017d18:	6bdb      	ldreq	r3, [r3, #60]	@ 0x3c
90017d1a:	6b9b      	ldrne	r3, [r3, #56]	@ 0x38
90017d1c:	4718      	bx	r3
90017d1e:	bd10      	pop	{r4, pc}
90017d20:	24027ef8 	.word	0x24027ef8

90017d24 <_ZNK8touchgfx3Box12getSolidRectEv>:
90017d24:	2300      	movs	r3, #0
90017d26:	8083      	strh	r3, [r0, #4]
90017d28:	80c3      	strh	r3, [r0, #6]
90017d2a:	8003      	strh	r3, [r0, #0]
90017d2c:	8043      	strh	r3, [r0, #2]
90017d2e:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
90017d32:	2bff      	cmp	r3, #255	@ 0xff
90017d34:	bf01      	itttt	eq
90017d36:	890b      	ldrheq	r3, [r1, #8]
90017d38:	8083      	strheq	r3, [r0, #4]
90017d3a:	894b      	ldrheq	r3, [r1, #10]
90017d3c:	80c3      	strheq	r3, [r0, #6]
90017d3e:	4770      	bx	lr

90017d40 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90017d40:	b537      	push	{r0, r1, r2, r4, r5, lr}
90017d42:	4604      	mov	r4, r0
90017d44:	466b      	mov	r3, sp
90017d46:	6808      	ldr	r0, [r1, #0]
90017d48:	6849      	ldr	r1, [r1, #4]
90017d4a:	c303      	stmia	r3!, {r0, r1}
90017d4c:	6823      	ldr	r3, [r4, #0]
90017d4e:	4669      	mov	r1, sp
90017d50:	4620      	mov	r0, r4
90017d52:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90017d54:	4798      	blx	r3
90017d56:	4b08      	ldr	r3, [pc, #32]	@ (90017d78 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90017d58:	681b      	ldr	r3, [r3, #0]
90017d5a:	f893 2076 	ldrb.w	r2, [r3, #118]	@ 0x76
90017d5e:	b10a      	cbz	r2, 90017d64 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90017d60:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90017d62:	b900      	cbnz	r0, 90017d66 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
90017d64:	6898      	ldr	r0, [r3, #8]
90017d66:	6803      	ldr	r3, [r0, #0]
90017d68:	4669      	mov	r1, sp
90017d6a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90017d6c:	6a1d      	ldr	r5, [r3, #32]
90017d6e:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
90017d72:	47a8      	blx	r5
90017d74:	b003      	add	sp, #12
90017d76:	bd30      	pop	{r4, r5, pc}
90017d78:	24027e9c 	.word	0x24027e9c

90017d7c <_ZN8touchgfx3BoxD1Ev>:
90017d7c:	4770      	bx	lr

90017d7e <_ZN8touchgfx3BoxD0Ev>:
90017d7e:	b510      	push	{r4, lr}
90017d80:	4604      	mov	r4, r0
90017d82:	212c      	movs	r1, #44	@ 0x2c
90017d84:	f013 fbbf 	bl	9002b506 <_ZdlPvj>
90017d88:	4620      	mov	r0, r4
90017d8a:	bd10      	pop	{r4, pc}

90017d8c <_ZNK8touchgfx3Box17invalidateContentEv>:
90017d8c:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
90017d90:	b12a      	cbz	r2, 90017d9e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90017d92:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90017d96:	b112      	cbz	r2, 90017d9e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90017d98:	6803      	ldr	r3, [r0, #0]
90017d9a:	695b      	ldr	r3, [r3, #20]
90017d9c:	4718      	bx	r3
90017d9e:	4770      	bx	lr

90017da0 <_ZN8touchgfx5Gauge8setWidthEs>:
90017da0:	8101      	strh	r1, [r0, #8]
90017da2:	f8a0 10bc 	strh.w	r1, [r0, #188]	@ 0xbc
90017da6:	f8a0 1160 	strh.w	r1, [r0, #352]	@ 0x160
90017daa:	4770      	bx	lr

90017dac <_ZN8touchgfx5Gauge9setHeightEs>:
90017dac:	8141      	strh	r1, [r0, #10]
90017dae:	f8a0 10be 	strh.w	r1, [r0, #190]	@ 0xbe
90017db2:	f8a0 1162 	strh.w	r1, [r0, #354]	@ 0x162
90017db6:	4770      	bx	lr

90017db8 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
90017db8:	f8d0 0148 	ldr.w	r0, [r0, #328]	@ 0x148
90017dbc:	4770      	bx	lr

90017dbe <_ZNK8touchgfx5Gauge11getEndAngleEv>:
90017dbe:	f8d0 014c 	ldr.w	r0, [r0, #332]	@ 0x14c
90017dc2:	4770      	bx	lr

90017dc4 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
90017dc4:	4770      	bx	lr

90017dc6 <_ZN8touchgfx5GaugeD1Ev>:
90017dc6:	4770      	bx	lr

90017dc8 <_ZN8touchgfx5Gauge8setAlphaEh>:
90017dc8:	b538      	push	{r3, r4, r5, lr}
90017dca:	4604      	mov	r4, r0
90017dcc:	460d      	mov	r5, r1
90017dce:	f7fc fc83 	bl	900146d8 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
90017dd2:	f884 50dc 	strb.w	r5, [r4, #220]	@ 0xdc
90017dd6:	f884 517e 	strb.w	r5, [r4, #382]	@ 0x17e
90017dda:	bd38      	pop	{r3, r4, r5, pc}

90017ddc <_ZN8touchgfx5GaugeD0Ev>:
90017ddc:	b510      	push	{r4, lr}
90017dde:	4604      	mov	r4, r0
90017de0:	f44f 71d0 	mov.w	r1, #416	@ 0x1a0
90017de4:	f013 fb8f 	bl	9002b506 <_ZdlPvj>
90017de8:	4620      	mov	r0, r4
90017dea:	bd10      	pop	{r4, pc}

90017dec <_ZN8touchgfx5GaugeC1Ev>:
90017dec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90017dee:	4604      	mov	r4, r0
90017df0:	f7fc fd94 	bl	9001491c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
90017df4:	4b18      	ldr	r3, [pc, #96]	@ (90017e58 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
90017df6:	a902      	add	r1, sp, #8
90017df8:	4626      	mov	r6, r4
90017dfa:	2500      	movs	r5, #0
90017dfc:	f504 77ac 	add.w	r7, r4, #344	@ 0x158
90017e00:	f846 3bb4 	str.w	r3, [r6], #180
90017e04:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90017e08:	4630      	mov	r0, r6
90017e0a:	f821 3d04 	strh.w	r3, [r1, #-4]!
90017e0e:	f012 fcd1 	bl	9002a7b4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
90017e12:	2301      	movs	r3, #1
90017e14:	f8c4 5148 	str.w	r5, [r4, #328]	@ 0x148
90017e18:	4638      	mov	r0, r7
90017e1a:	f884 3144 	strb.w	r3, [r4, #324]	@ 0x144
90017e1e:	f884 3145 	strb.w	r3, [r4, #325]	@ 0x145
90017e22:	f8c4 514c 	str.w	r5, [r4, #332]	@ 0x14c
90017e26:	f8c4 5150 	str.w	r5, [r4, #336]	@ 0x150
90017e2a:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
90017e2e:	f7fd ffff 	bl	90015e30 <_ZN8touchgfx6CircleC1Ev>
90017e32:	f104 0158 	add.w	r1, r4, #88	@ 0x58
90017e36:	4620      	mov	r0, r4
90017e38:	f7fc fe11 	bl	90014a5e <_ZN8touchgfx9Container6removeERNS_8DrawableE>
90017e3c:	4639      	mov	r1, r7
90017e3e:	4620      	mov	r0, r4
90017e40:	f7fc fdcc 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90017e44:	4620      	mov	r0, r4
90017e46:	4631      	mov	r1, r6
90017e48:	f7fc fdc8 	bl	900149dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90017e4c:	4620      	mov	r0, r4
90017e4e:	f884 517d 	strb.w	r5, [r4, #381]	@ 0x17d
90017e52:	b003      	add	sp, #12
90017e54:	bdf0      	pop	{r4, r5, r6, r7, pc}
90017e56:	bf00      	nop
90017e58:	900303fc 	.word	0x900303fc

90017e5c <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
90017e5c:	f880 1144 	strb.w	r1, [r0, #324]	@ 0x144
90017e60:	4770      	bx	lr

90017e62 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
90017e62:	f880 1145 	strb.w	r1, [r0, #325]	@ 0x145
90017e66:	4770      	bx	lr

90017e68 <_ZN8touchgfx5Gauge13setArcVisibleEb>:
90017e68:	f880 117d 	strb.w	r1, [r0, #381]	@ 0x17d
90017e6c:	4770      	bx	lr

90017e6e <_ZN8touchgfx5Gauge6getArcEv>:
90017e6e:	f500 70ac 	add.w	r0, r0, #344	@ 0x158
90017e72:	4770      	bx	lr

90017e74 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
90017e74:	b538      	push	{r3, r4, r5, lr}
90017e76:	8902      	ldrh	r2, [r0, #8]
90017e78:	f100 05b4 	add.w	r5, r0, #180	@ 0xb4
90017e7c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90017e80:	4604      	mov	r4, r0
90017e82:	f8a0 20bc 	strh.w	r2, [r0, #188]	@ 0xbc
90017e86:	2200      	movs	r2, #0
90017e88:	f8a0 30be 	strh.w	r3, [r0, #190]	@ 0xbe
90017e8c:	4628      	mov	r0, r5
90017e8e:	4611      	mov	r1, r2
90017e90:	f7fd f9f8 	bl	90015284 <_ZN8touchgfx8Drawable5setXYEss>
90017e94:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	@ 0x156
90017e98:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	@ 0x152
90017e9c:	4628      	mov	r0, r5
90017e9e:	1a9b      	subs	r3, r3, r2
90017ea0:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	@ 0x154
90017ea4:	ee07 3a90 	vmov	s15, r3
90017ea8:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	@ 0x150
90017eac:	1a9b      	subs	r3, r3, r2
90017eae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017eb2:	ee07 3a10 	vmov	s14, r3
90017eb6:	edc4 7a39 	vstr	s15, [r4, #228]	@ 0xe4
90017eba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017ebe:	ed84 7a38 	vstr	s14, [r4, #224]	@ 0xe0
90017ec2:	f012 fcc3 	bl	9002a84c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
90017ec6:	4b16      	ldr	r3, [pc, #88]	@ (90017f20 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
90017ec8:	4628      	mov	r0, r5
90017eca:	f8c4 310c 	str.w	r3, [r4, #268]	@ 0x10c
90017ece:	f012 fcbd 	bl	9002a84c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
90017ed2:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	@ 0x152
90017ed6:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	@ 0x150
90017eda:	4628      	mov	r0, r5
90017edc:	ee07 3a90 	vmov	s15, r3
90017ee0:	f8d4 310c 	ldr.w	r3, [r4, #268]	@ 0x10c
90017ee4:	ee07 2a10 	vmov	s14, r2
90017ee8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017eec:	f8c4 3100 	str.w	r3, [r4, #256]	@ 0x100
90017ef0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017ef4:	edc4 7a3f 	vstr	s15, [r4, #252]	@ 0xfc
90017ef8:	ed84 7a3e 	vstr	s14, [r4, #248]	@ 0xf8
90017efc:	f012 fca6 	bl	9002a84c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
90017f00:	f8d4 30fc 	ldr.w	r3, [r4, #252]	@ 0xfc
90017f04:	f8d4 20f8 	ldr.w	r2, [r4, #248]	@ 0xf8
90017f08:	4628      	mov	r0, r5
90017f0a:	f8c4 3108 	str.w	r3, [r4, #264]	@ 0x108
90017f0e:	f8c4 2104 	str.w	r2, [r4, #260]	@ 0x104
90017f12:	f012 fc9b 	bl	9002a84c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
90017f16:	2301      	movs	r3, #1
90017f18:	f884 30dd 	strb.w	r3, [r4, #221]	@ 0xdd
90017f1c:	bd38      	pop	{r3, r4, r5, pc}
90017f1e:	bf00      	nop
90017f20:	43960000 	.word	0x43960000

90017f24 <_ZN8touchgfx5Gauge9setNeedleEtss>:
90017f24:	b573      	push	{r0, r1, r4, r5, r6, lr}
90017f26:	4604      	mov	r4, r0
90017f28:	a802      	add	r0, sp, #8
90017f2a:	4616      	mov	r6, r2
90017f2c:	461d      	mov	r5, r3
90017f2e:	f820 1d04 	strh.w	r1, [r0, #-4]!
90017f32:	4601      	mov	r1, r0
90017f34:	f104 00b4 	add.w	r0, r4, #180	@ 0xb4
90017f38:	f012 fdde 	bl	9002aaf8 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
90017f3c:	4620      	mov	r0, r4
90017f3e:	f8a4 6154 	strh.w	r6, [r4, #340]	@ 0x154
90017f42:	f8a4 5156 	strh.w	r5, [r4, #342]	@ 0x156
90017f46:	f7ff ff95 	bl	90017e74 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
90017f4a:	b002      	add	sp, #8
90017f4c:	bd70      	pop	{r4, r5, r6, pc}

90017f4e <_ZN8touchgfx5Gauge9setCenterEii>:
90017f4e:	b570      	push	{r4, r5, r6, lr}
90017f50:	4606      	mov	r6, r0
90017f52:	460d      	mov	r5, r1
90017f54:	4614      	mov	r4, r2
90017f56:	f8a6 1150 	strh.w	r1, [r6, #336]	@ 0x150
90017f5a:	f8a6 2152 	strh.w	r2, [r6, #338]	@ 0x152
90017f5e:	f7ff ff89 	bl	90017e74 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
90017f62:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	@ 0x15e
90017f66:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	@ 0x15c
90017f6a:	1aa4      	subs	r4, r4, r2
90017f6c:	1a6d      	subs	r5, r5, r1
90017f6e:	0164      	lsls	r4, r4, #5
90017f70:	016d      	lsls	r5, r5, #5
90017f72:	3410      	adds	r4, #16
90017f74:	3510      	adds	r5, #16
90017f76:	f8c6 4188 	str.w	r4, [r6, #392]	@ 0x188
90017f7a:	f8c6 5184 	str.w	r5, [r6, #388]	@ 0x184
90017f7e:	bd70      	pop	{r4, r5, r6, pc}

90017f80 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
90017f80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90017f82:	0149      	lsls	r1, r1, #5
90017f84:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
90017f86:	4604      	mov	r4, r0
90017f88:	4299      	cmp	r1, r3
90017f8a:	9101      	str	r1, [sp, #4]
90017f8c:	d00b      	beq.n	90017fa6 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
90017f8e:	4601      	mov	r1, r0
90017f90:	aa01      	add	r2, sp, #4
90017f92:	a802      	add	r0, sp, #8
90017f94:	f7fe f951 	bl	9001623a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
90017f98:	9b01      	ldr	r3, [sp, #4]
90017f9a:	a902      	add	r1, sp, #8
90017f9c:	4620      	mov	r0, r4
90017f9e:	63e3      	str	r3, [r4, #60]	@ 0x3c
90017fa0:	6823      	ldr	r3, [r4, #0]
90017fa2:	691b      	ldr	r3, [r3, #16]
90017fa4:	4798      	blx	r3
90017fa6:	b004      	add	sp, #16
90017fa8:	bd10      	pop	{r4, pc}
	...

90017fac <_ZN8touchgfx5Gauge8setValueEi>:
90017fac:	b570      	push	{r4, r5, r6, lr}
90017fae:	4604      	mov	r4, r0
90017fb0:	f7fc fbe5 	bl	9001477e <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
90017fb4:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	@ 0xa4
90017fb8:	f8d4 114c 	ldr.w	r1, [r4, #332]	@ 0x14c
90017fbc:	4620      	mov	r0, r4
90017fbe:	429a      	cmp	r2, r3
90017fc0:	f504 76ac 	add.w	r6, r4, #344	@ 0x158
90017fc4:	bfac      	ite	ge
90017fc6:	f894 3145 	ldrbge.w	r3, [r4, #325]	@ 0x145
90017fca:	f894 3144 	ldrblt.w	r3, [r4, #324]	@ 0x144
90017fce:	f884 30dd 	strb.w	r3, [r4, #221]	@ 0xdd
90017fd2:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
90017fd6:	1ac9      	subs	r1, r1, r3
90017fd8:	2900      	cmp	r1, #0
90017fda:	bfb8      	it	lt
90017fdc:	4249      	neglt	r1, r1
90017fde:	b289      	uxth	r1, r1
90017fe0:	f7fc fbef 	bl	900147c2 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
90017fe4:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
90017fe8:	f8d4 214c 	ldr.w	r2, [r4, #332]	@ 0x14c
90017fec:	4605      	mov	r5, r0
90017fee:	eddf 6a18 	vldr	s13, [pc, #96]	@ 90018050 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
90017ff2:	f104 00b4 	add.w	r0, r4, #180	@ 0xb4
90017ff6:	429a      	cmp	r2, r3
90017ff8:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 90018054 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
90017ffc:	da15      	bge.n	9001802a <_ZN8touchgfx5Gauge8setValueEi+0x7e>
90017ffe:	1b5b      	subs	r3, r3, r5
90018000:	edd4 0a3b 	vldr	s1, [r4, #236]	@ 0xec
90018004:	ed94 0a3a 	vldr	s0, [r4, #232]	@ 0xe8
90018008:	ee07 3a90 	vmov	s15, r3
9001800c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018010:	ee87 1aa6 	vdiv.f32	s2, s15, s13
90018014:	ee21 1a07 	vmul.f32	s2, s2, s14
90018018:	f012 fb87 	bl	9002a72a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
9001801c:	f8d4 1148 	ldr.w	r1, [r4, #328]	@ 0x148
90018020:	1b49      	subs	r1, r1, r5
90018022:	4630      	mov	r0, r6
90018024:	f7ff ffac 	bl	90017f80 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
90018028:	bd70      	pop	{r4, r5, r6, pc}
9001802a:	442b      	add	r3, r5
9001802c:	edd4 0a3b 	vldr	s1, [r4, #236]	@ 0xec
90018030:	ed94 0a3a 	vldr	s0, [r4, #232]	@ 0xe8
90018034:	ee07 3a90 	vmov	s15, r3
90018038:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001803c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
90018040:	ee21 1a07 	vmul.f32	s2, s2, s14
90018044:	f012 fb71 	bl	9002a72a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
90018048:	f8d4 1148 	ldr.w	r1, [r4, #328]	@ 0x148
9001804c:	4429      	add	r1, r5
9001804e:	e7e8      	b.n	90018022 <_ZN8touchgfx5Gauge8setValueEi+0x76>
90018050:	43340000 	.word	0x43340000
90018054:	40490fdb 	.word	0x40490fdb

90018058 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
90018058:	b510      	push	{r4, lr}
9001805a:	f8c0 1148 	str.w	r1, [r0, #328]	@ 0x148
9001805e:	0149      	lsls	r1, r1, #5
90018060:	f8c0 214c 	str.w	r2, [r0, #332]	@ 0x14c
90018064:	0152      	lsls	r2, r2, #5
90018066:	4604      	mov	r4, r0
90018068:	f8c0 1190 	str.w	r1, [r0, #400]	@ 0x190
9001806c:	f8c0 2194 	str.w	r2, [r0, #404]	@ 0x194
90018070:	f7fc fb2f 	bl	900146d2 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
90018074:	4601      	mov	r1, r0
90018076:	4620      	mov	r0, r4
90018078:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001807c:	f7ff bf96 	b.w	90017fac <_ZN8touchgfx5Gauge8setValueEi>

90018080 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
90018080:	4b30      	ldr	r3, [pc, #192]	@ (90018144 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
90018082:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90018086:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90018088:	b08d      	sub	sp, #52	@ 0x34
9001808a:	881b      	ldrh	r3, [r3, #0]
9001808c:	4604      	mov	r4, r0
9001808e:	460f      	mov	r7, r1
90018090:	4293      	cmp	r3, r2
90018092:	d954      	bls.n	9001813e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90018094:	4b2c      	ldr	r3, [pc, #176]	@ (90018148 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
90018096:	6819      	ldr	r1, [r3, #0]
90018098:	eb01 0342 	add.w	r3, r1, r2, lsl #1
9001809c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
900180a0:	4a2a      	ldr	r2, [pc, #168]	@ (9001814c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
900180a2:	6812      	ldr	r2, [r2, #0]
900180a4:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
900180a8:	2900      	cmp	r1, #0
900180aa:	d048      	beq.n	9001813e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
900180ac:	785a      	ldrb	r2, [r3, #1]
900180ae:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
900180b2:	f3c2 0801 	ubfx	r8, r2, #0, #2
900180b6:	f3c2 0281 	ubfx	r2, r2, #2, #2
900180ba:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
900180be:	4b24      	ldr	r3, [pc, #144]	@ (90018150 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
900180c0:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
900180c4:	681a      	ldr	r2, [r3, #0]
900180c6:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
900180ca:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
900180ce:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
900180d2:	6b26      	ldr	r6, [r4, #48]	@ 0x30
900180d4:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
900180d8:	f892 3076 	ldrb.w	r3, [r2, #118]	@ 0x76
900180dc:	9107      	str	r1, [sp, #28]
900180de:	f88d 8020 	strb.w	r8, [sp, #32]
900180e2:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
900180e6:	9609      	str	r6, [sp, #36]	@ 0x24
900180e8:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
900180ec:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
900180f0:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
900180f4:	b10b      	cbz	r3, 900180fa <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
900180f6:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
900180f8:	b905      	cbnz	r5, 900180fc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
900180fa:	6895      	ldr	r5, [r2, #8]
900180fc:	ae05      	add	r6, sp, #20
900180fe:	4621      	mov	r1, r4
90018100:	4630      	mov	r0, r6
90018102:	f003 fecd 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018106:	4b13      	ldr	r3, [pc, #76]	@ (90018154 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
90018108:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
9001810a:	6818      	ldr	r0, [r3, #0]
9001810c:	f7f0 fdd6 	bl	90008cbc <_ZNK8touchgfx5Texts7getTextEt>
90018110:	6823      	ldr	r3, [r4, #0]
90018112:	4680      	mov	r8, r0
90018114:	4620      	mov	r0, r4
90018116:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90018118:	4798      	blx	r3
9001811a:	6823      	ldr	r3, [r4, #0]
9001811c:	4681      	mov	r9, r0
9001811e:	4620      	mov	r0, r4
90018120:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90018124:	4798      	blx	r3
90018126:	ab07      	add	r3, sp, #28
90018128:	f8cd 8004 	str.w	r8, [sp, #4]
9001812c:	9300      	str	r3, [sp, #0]
9001812e:	463b      	mov	r3, r7
90018130:	e9cd 9002 	strd	r9, r0, [sp, #8]
90018134:	4628      	mov	r0, r5
90018136:	e896 0006 	ldmia.w	r6, {r1, r2}
9001813a:	f7f0 fd6f 	bl	90008c1c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
9001813e:	b00d      	add	sp, #52	@ 0x34
90018140:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90018144:	24027ef8 	.word	0x24027ef8
90018148:	24027ef4 	.word	0x24027ef4
9001814c:	24027efc 	.word	0x24027efc
90018150:	24027e9c 	.word	0x24027e9c
90018154:	24027f00 	.word	0x24027f00

90018158 <_ZN8touchgfx13BoxWithBorderD1Ev>:
90018158:	4770      	bx	lr

9001815a <_ZN8touchgfx13BoxWithBorderD0Ev>:
9001815a:	b510      	push	{r4, lr}
9001815c:	4604      	mov	r4, r0
9001815e:	2134      	movs	r1, #52	@ 0x34
90018160:	f013 f9d1 	bl	9002b506 <_ZdlPvj>
90018164:	4620      	mov	r0, r4
90018166:	bd10      	pop	{r4, pc}

90018168 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
90018168:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001816c:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
9001816e:	4604      	mov	r4, r0
90018170:	460e      	mov	r6, r1
90018172:	b08e      	sub	sp, #56	@ 0x38
90018174:	b218      	sxth	r0, r3
90018176:	8921      	ldrh	r1, [r4, #8]
90018178:	005b      	lsls	r3, r3, #1
9001817a:	8962      	ldrh	r2, [r4, #10]
9001817c:	f8ad 0000 	strh.w	r0, [sp]
90018180:	b29b      	uxth	r3, r3
90018182:	f8ad 0002 	strh.w	r0, [sp, #2]
90018186:	1ac9      	subs	r1, r1, r3
90018188:	1ad3      	subs	r3, r2, r3
9001818a:	b209      	sxth	r1, r1
9001818c:	b21b      	sxth	r3, r3
9001818e:	2900      	cmp	r1, #0
90018190:	f8ad 1004 	strh.w	r1, [sp, #4]
90018194:	f8ad 3006 	strh.w	r3, [sp, #6]
90018198:	dd5e      	ble.n	90018258 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
9001819a:	2b00      	cmp	r3, #0
9001819c:	dd5c      	ble.n	90018258 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
9001819e:	6830      	ldr	r0, [r6, #0]
900181a0:	ab02      	add	r3, sp, #8
900181a2:	6871      	ldr	r1, [r6, #4]
900181a4:	c303      	stmia	r3!, {r0, r1}
900181a6:	4669      	mov	r1, sp
900181a8:	a802      	add	r0, sp, #8
900181aa:	f7fc fd9b 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
900181ae:	4620      	mov	r0, r4
900181b0:	a902      	add	r1, sp, #8
900181b2:	f7ff fdc5 	bl	90017d40 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
900181b6:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
900181b8:	2800      	cmp	r0, #0
900181ba:	d05f      	beq.n	9001827c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
900181bc:	8963      	ldrh	r3, [r4, #10]
900181be:	b202      	sxth	r2, r0
900181c0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
900181c4:	2500      	movs	r5, #0
900181c6:	1a1f      	subs	r7, r3, r0
900181c8:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
900181cc:	f8ad 101c 	strh.w	r1, [sp, #28]
900181d0:	b21b      	sxth	r3, r3
900181d2:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
900181d6:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
900181da:	af04      	add	r7, sp, #16
900181dc:	1a09      	subs	r1, r1, r0
900181de:	9506      	str	r5, [sp, #24]
900181e0:	f8ad 201e 	strh.w	r2, [sp, #30]
900181e4:	f8ad 5020 	strh.w	r5, [sp, #32]
900181e8:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
900181ec:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
900181f0:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
900181f4:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
900181f8:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900181fc:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
90018200:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90018204:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90018208:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001820c:	ab06      	add	r3, sp, #24
9001820e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90018212:	e893 0003 	ldmia.w	r3, {r0, r1}
90018216:	e887 0003 	stmia.w	r7, {r0, r1}
9001821a:	4631      	mov	r1, r6
9001821c:	4638      	mov	r0, r7
9001821e:	f7fc fd61 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
90018222:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
90018226:	2b00      	cmp	r3, #0
90018228:	dd12      	ble.n	90018250 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
9001822a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
9001822e:	2b00      	cmp	r3, #0
90018230:	dd0e      	ble.n	90018250 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
90018232:	6823      	ldr	r3, [r4, #0]
90018234:	4639      	mov	r1, r7
90018236:	4620      	mov	r0, r4
90018238:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001823a:	4798      	blx	r3
9001823c:	f7fd f830 	bl	900152a0 <_ZN8touchgfx3HAL3lcdEv>
90018240:	6803      	ldr	r3, [r0, #0]
90018242:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90018244:	4639      	mov	r1, r7
90018246:	f8d3 8020 	ldr.w	r8, [r3, #32]
9001824a:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
9001824e:	47c0      	blx	r8
90018250:	3501      	adds	r5, #1
90018252:	2d04      	cmp	r5, #4
90018254:	d1da      	bne.n	9001820c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
90018256:	e011      	b.n	9001827c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90018258:	6830      	ldr	r0, [r6, #0]
9001825a:	ab06      	add	r3, sp, #24
9001825c:	6871      	ldr	r1, [r6, #4]
9001825e:	c303      	stmia	r3!, {r0, r1}
90018260:	6823      	ldr	r3, [r4, #0]
90018262:	a906      	add	r1, sp, #24
90018264:	4620      	mov	r0, r4
90018266:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90018268:	4798      	blx	r3
9001826a:	f7fd f819 	bl	900152a0 <_ZN8touchgfx3HAL3lcdEv>
9001826e:	6803      	ldr	r3, [r0, #0]
90018270:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90018272:	a906      	add	r1, sp, #24
90018274:	6a1d      	ldr	r5, [r3, #32]
90018276:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
9001827a:	47a8      	blx	r5
9001827c:	b00e      	add	sp, #56	@ 0x38
9001827e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90018282 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
90018282:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
90018286:	4770      	bx	lr

90018288 <_ZNK8touchgfx6Button17invalidateContentEv>:
90018288:	b508      	push	{r3, lr}
9001828a:	f890 3032 	ldrb.w	r3, [r0, #50]	@ 0x32
9001828e:	b10b      	cbz	r3, 90018294 <_ZNK8touchgfx6Button17invalidateContentEv+0xc>
90018290:	f7eb faea 	bl	90003868 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90018294:	bd08      	pop	{r3, pc}

90018296 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
90018296:	4770      	bx	lr

90018298 <_ZN8touchgfx14ButtonWithIconD1Ev>:
90018298:	4770      	bx	lr

9001829a <_ZN8touchgfx14ButtonWithIconD0Ev>:
9001829a:	b510      	push	{r4, lr}
9001829c:	4604      	mov	r4, r0
9001829e:	213c      	movs	r1, #60	@ 0x3c
900182a0:	f013 f931 	bl	9002b506 <_ZdlPvj>
900182a4:	4620      	mov	r0, r4
900182a6:	bd10      	pop	{r4, pc}

900182a8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
900182a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900182ac:	461c      	mov	r4, r3
900182ae:	4606      	mov	r6, r0
900182b0:	9f06      	ldr	r7, [sp, #24]
900182b2:	f012 ff27 	bl	9002b104 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
900182b6:	8823      	ldrh	r3, [r4, #0]
900182b8:	f04f 0802 	mov.w	r8, #2
900182bc:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
900182c0:	4638      	mov	r0, r7
900182c2:	86b3      	strh	r3, [r6, #52]	@ 0x34
900182c4:	883b      	ldrh	r3, [r7, #0]
900182c6:	fb95 f5f8 	sdiv	r5, r5, r8
900182ca:	86f3      	strh	r3, [r6, #54]	@ 0x36
900182cc:	b2ad      	uxth	r5, r5
900182ce:	f006 f883 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
900182d2:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
900182d6:	fb90 f0f8 	sdiv	r0, r0, r8
900182da:	1a2d      	subs	r5, r5, r0
900182dc:	4638      	mov	r0, r7
900182de:	fb94 f4f8 	sdiv	r4, r4, r8
900182e2:	8735      	strh	r5, [r6, #56]	@ 0x38
900182e4:	b2a4      	uxth	r4, r4
900182e6:	f006 f8ab 	bl	9001e440 <_ZNK8touchgfx6Bitmap9getHeightEv>
900182ea:	fb90 f0f8 	sdiv	r0, r0, r8
900182ee:	1a24      	subs	r4, r4, r0
900182f0:	8774      	strh	r4, [r6, #58]	@ 0x3a
900182f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900182f6 <_ZN8touchgfx14AbstractButton13executeActionEv>:
900182f6:	b510      	push	{r4, lr}
900182f8:	4604      	mov	r4, r0
900182fa:	6a80      	ldr	r0, [r0, #40]	@ 0x28
900182fc:	b150      	cbz	r0, 90018314 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900182fe:	6803      	ldr	r3, [r0, #0]
90018300:	68db      	ldr	r3, [r3, #12]
90018302:	4798      	blx	r3
90018304:	b130      	cbz	r0, 90018314 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90018306:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90018308:	4621      	mov	r1, r4
9001830a:	6803      	ldr	r3, [r0, #0]
9001830c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90018310:	689b      	ldr	r3, [r3, #8]
90018312:	4718      	bx	r3
90018314:	bd10      	pop	{r4, pc}
	...

90018318 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
90018318:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001831c:	4604      	mov	r4, r0
9001831e:	b08c      	sub	sp, #48	@ 0x30
90018320:	460d      	mov	r5, r1
90018322:	f012 ff21 	bl	9002b168 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
90018326:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9001832a:	2b00      	cmp	r3, #0
9001832c:	d05d      	beq.n	900183ea <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
9001832e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
90018330:	a805      	add	r0, sp, #20
90018332:	f8ad 3014 	strh.w	r3, [sp, #20]
90018336:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	@ 0x38
9001833a:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	@ 0x3a
9001833e:	f006 f84b 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90018342:	4606      	mov	r6, r0
90018344:	a805      	add	r0, sp, #20
90018346:	f006 f87b 	bl	9001e440 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001834a:	6869      	ldr	r1, [r5, #4]
9001834c:	f8ad 001e 	strh.w	r0, [sp, #30]
90018350:	ab08      	add	r3, sp, #32
90018352:	6828      	ldr	r0, [r5, #0]
90018354:	ad08      	add	r5, sp, #32
90018356:	f8ad 8018 	strh.w	r8, [sp, #24]
9001835a:	f8ad 701a 	strh.w	r7, [sp, #26]
9001835e:	f8ad 601c 	strh.w	r6, [sp, #28]
90018362:	c303      	stmia	r3!, {r0, r1}
90018364:	a906      	add	r1, sp, #24
90018366:	4628      	mov	r0, r5
90018368:	f7fc fcbc 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
9001836c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90018370:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90018374:	429a      	cmp	r2, r3
90018376:	d035      	beq.n	900183e4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90018378:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
9001837c:	2b00      	cmp	r3, #0
9001837e:	dd31      	ble.n	900183e4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90018380:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	@ 0x26
90018384:	2b00      	cmp	r3, #0
90018386:	dd2d      	ble.n	900183e4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90018388:	2300      	movs	r3, #0
9001838a:	a90a      	add	r1, sp, #40	@ 0x28
9001838c:	4620      	mov	r0, r4
9001838e:	e9cd 330a 	strd	r3, r3, [sp, #40]	@ 0x28
90018392:	6823      	ldr	r3, [r4, #0]
90018394:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90018396:	4798      	blx	r3
90018398:	f8bd 3020 	ldrh.w	r3, [sp, #32]
9001839c:	8f22      	ldrh	r2, [r4, #56]	@ 0x38
9001839e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
900183a2:	1a9b      	subs	r3, r3, r2
900183a4:	f8ad 3020 	strh.w	r3, [sp, #32]
900183a8:	8f63      	ldrh	r3, [r4, #58]	@ 0x3a
900183aa:	1ac9      	subs	r1, r1, r3
900183ac:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
900183b0:	490f      	ldr	r1, [pc, #60]	@ (900183f0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
900183b2:	6809      	ldr	r1, [r1, #0]
900183b4:	f891 0076 	ldrb.w	r0, [r1, #118]	@ 0x76
900183b8:	b108      	cbz	r0, 900183be <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
900183ba:	6cc8      	ldr	r0, [r1, #76]	@ 0x4c
900183bc:	b900      	cbnz	r0, 900183c0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
900183be:	6888      	ldr	r0, [r1, #8]
900183c0:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
900183c4:	2601      	movs	r6, #1
900183c6:	440b      	add	r3, r1
900183c8:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
900183cc:	440a      	add	r2, r1
900183ce:	6801      	ldr	r1, [r0, #0]
900183d0:	9602      	str	r6, [sp, #8]
900183d2:	b21b      	sxth	r3, r3
900183d4:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
900183d8:	b212      	sxth	r2, r2
900183da:	e9cd 5400 	strd	r5, r4, [sp]
900183de:	688c      	ldr	r4, [r1, #8]
900183e0:	a905      	add	r1, sp, #20
900183e2:	47a0      	blx	r4
900183e4:	b00c      	add	sp, #48	@ 0x30
900183e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900183ea:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
900183ec:	e7a0      	b.n	90018330 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
900183ee:	bf00      	nop
900183f0:	24027e9c 	.word	0x24027e9c

900183f4 <_ZN8touchgfx14ButtonWithIconC1Ev>:
900183f4:	2101      	movs	r1, #1
900183f6:	2200      	movs	r2, #0
900183f8:	b510      	push	{r4, lr}
900183fa:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
900183fe:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
90018402:	f64f 71ff 	movw	r1, #65535	@ 0xffff
90018406:	4c0d      	ldr	r4, [pc, #52]	@ (9001843c <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
90018408:	8082      	strh	r2, [r0, #4]
9001840a:	80c2      	strh	r2, [r0, #6]
9001840c:	8102      	strh	r2, [r0, #8]
9001840e:	8142      	strh	r2, [r0, #10]
90018410:	8182      	strh	r2, [r0, #12]
90018412:	81c2      	strh	r2, [r0, #14]
90018414:	8202      	strh	r2, [r0, #16]
90018416:	8242      	strh	r2, [r0, #18]
90018418:	61c2      	str	r2, [r0, #28]
9001841a:	8402      	strh	r2, [r0, #32]
9001841c:	8442      	strh	r2, [r0, #34]	@ 0x22
9001841e:	6282      	str	r2, [r0, #40]	@ 0x28
90018420:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
90018424:	85c1      	strh	r1, [r0, #46]	@ 0x2e
90018426:	8601      	strh	r1, [r0, #48]	@ 0x30
90018428:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
9001842c:	6004      	str	r4, [r0, #0]
9001842e:	8681      	strh	r1, [r0, #52]	@ 0x34
90018430:	86c1      	strh	r1, [r0, #54]	@ 0x36
90018432:	8702      	strh	r2, [r0, #56]	@ 0x38
90018434:	8742      	strh	r2, [r0, #58]	@ 0x3a
90018436:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001843a:	bd10      	pop	{r4, pc}
9001843c:	9003054c 	.word	0x9003054c

90018440 <_ZN8touchgfx5ImageD1Ev>:
90018440:	4770      	bx	lr

90018442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
90018442:	b570      	push	{r4, r5, r6, lr}
90018444:	880b      	ldrh	r3, [r1, #0]
90018446:	460d      	mov	r5, r1
90018448:	4604      	mov	r4, r0
9001844a:	84c3      	strh	r3, [r0, #38]	@ 0x26
9001844c:	4608      	mov	r0, r1
9001844e:	f005 ffc3 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90018452:	4606      	mov	r6, r0
90018454:	4628      	mov	r0, r5
90018456:	f005 fff3 	bl	9001e440 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001845a:	6823      	ldr	r3, [r4, #0]
9001845c:	4605      	mov	r5, r0
9001845e:	4631      	mov	r1, r6
90018460:	4620      	mov	r0, r4
90018462:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90018464:	4798      	blx	r3
90018466:	6823      	ldr	r3, [r4, #0]
90018468:	4629      	mov	r1, r5
9001846a:	4620      	mov	r0, r4
9001846c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001846e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90018472:	4718      	bx	r3

90018474 <_ZN8touchgfx5ImageD0Ev>:
90018474:	b510      	push	{r4, lr}
90018476:	4604      	mov	r4, r0
90018478:	212c      	movs	r1, #44	@ 0x2c
9001847a:	f013 f844 	bl	9002b506 <_ZdlPvj>
9001847e:	4620      	mov	r0, r4
90018480:	bd10      	pop	{r4, pc}

90018482 <_ZNK8touchgfx5Image12getSolidRectEv>:
90018482:	b510      	push	{r4, lr}
90018484:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
90018488:	4604      	mov	r4, r0
9001848a:	2bff      	cmp	r3, #255	@ 0xff
9001848c:	d006      	beq.n	9001849c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
9001848e:	2300      	movs	r3, #0
90018490:	8003      	strh	r3, [r0, #0]
90018492:	8043      	strh	r3, [r0, #2]
90018494:	8083      	strh	r3, [r0, #4]
90018496:	80c3      	strh	r3, [r0, #6]
90018498:	4620      	mov	r0, r4
9001849a:	bd10      	pop	{r4, pc}
9001849c:	3126      	adds	r1, #38	@ 0x26
9001849e:	f006 f803 	bl	9001e4a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900184a2:	e7f9      	b.n	90018498 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

900184a4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
900184a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900184a8:	4604      	mov	r4, r0
900184aa:	b088      	sub	sp, #32
900184ac:	2500      	movs	r5, #0
900184ae:	460f      	mov	r7, r1
900184b0:	f854 3b26 	ldr.w	r3, [r4], #38
900184b4:	a904      	add	r1, sp, #16
900184b6:	4606      	mov	r6, r0
900184b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900184ba:	e9cd 5504 	strd	r5, r5, [sp, #16]
900184be:	4798      	blx	r3
900184c0:	4620      	mov	r0, r4
900184c2:	f005 ff89 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
900184c6:	4680      	mov	r8, r0
900184c8:	4620      	mov	r0, r4
900184ca:	f005 ffb9 	bl	9001e440 <_ZNK8touchgfx6Bitmap9getHeightEv>
900184ce:	9506      	str	r5, [sp, #24]
900184d0:	ad06      	add	r5, sp, #24
900184d2:	f8ad 001e 	strh.w	r0, [sp, #30]
900184d6:	4639      	mov	r1, r7
900184d8:	f8ad 801c 	strh.w	r8, [sp, #28]
900184dc:	4628      	mov	r0, r5
900184de:	f7fc fc01 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
900184e2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
900184e6:	2b00      	cmp	r3, #0
900184e8:	dd19      	ble.n	9001851e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
900184ea:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
900184ee:	2b00      	cmp	r3, #0
900184f0:	dd15      	ble.n	9001851e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
900184f2:	4b0c      	ldr	r3, [pc, #48]	@ (90018524 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
900184f4:	681b      	ldr	r3, [r3, #0]
900184f6:	f893 2076 	ldrb.w	r2, [r3, #118]	@ 0x76
900184fa:	b10a      	cbz	r2, 90018500 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
900184fc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900184fe:	b900      	cbnz	r0, 90018502 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90018500:	6898      	ldr	r0, [r3, #8]
90018502:	2701      	movs	r7, #1
90018504:	6801      	ldr	r1, [r0, #0]
90018506:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001850a:	9702      	str	r7, [sp, #8]
9001850c:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
90018510:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90018514:	e9cd 5600 	strd	r5, r6, [sp]
90018518:	688d      	ldr	r5, [r1, #8]
9001851a:	4621      	mov	r1, r4
9001851c:	47a8      	blx	r5
9001851e:	b008      	add	sp, #32
90018520:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018524:	24027e9c 	.word	0x24027e9c

90018528 <_ZN8touchgfx7OutlineD1Ev>:
90018528:	4770      	bx	lr

9001852a <_ZN8touchgfx7OutlineD0Ev>:
9001852a:	b510      	push	{r4, lr}
9001852c:	4604      	mov	r4, r0
9001852e:	2130      	movs	r1, #48	@ 0x30
90018530:	f012 ffe9 	bl	9002b506 <_ZdlPvj>
90018534:	4620      	mov	r0, r4
90018536:	bd10      	pop	{r4, pc}

90018538 <_ZN8touchgfx7Outline5resetEv>:
90018538:	b510      	push	{r4, lr}
9001853a:	4604      	mov	r4, r0
9001853c:	f000 fe86 	bl	9001924c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90018540:	60e0      	str	r0, [r4, #12]
90018542:	f000 fe89 	bl	90019258 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
90018546:	68e3      	ldr	r3, [r4, #12]
90018548:	08c0      	lsrs	r0, r0, #3
9001854a:	2200      	movs	r2, #0
9001854c:	f647 71ff 	movw	r1, #32767	@ 0x7fff
90018550:	6123      	str	r3, [r4, #16]
90018552:	3801      	subs	r0, #1
90018554:	60a2      	str	r2, [r4, #8]
90018556:	6060      	str	r0, [r4, #4]
90018558:	8019      	strh	r1, [r3, #0]
9001855a:	8059      	strh	r1, [r3, #2]
9001855c:	809a      	strh	r2, [r3, #4]
9001855e:	80da      	strh	r2, [r3, #6]
90018560:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90018562:	f023 0301 	bic.w	r3, r3, #1
90018566:	f043 0302 	orr.w	r3, r3, #2
9001856a:	6263      	str	r3, [r4, #36]	@ 0x24
9001856c:	bd10      	pop	{r4, pc}
	...

90018570 <_ZN8touchgfx7OutlineC1Ev>:
90018570:	4b0a      	ldr	r3, [pc, #40]	@ (9001859c <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90018572:	b510      	push	{r4, lr}
90018574:	6003      	str	r3, [r0, #0]
90018576:	2300      	movs	r3, #0
90018578:	4604      	mov	r4, r0
9001857a:	6243      	str	r3, [r0, #36]	@ 0x24
9001857c:	e9c0 3301 	strd	r3, r3, [r0, #4]
90018580:	e9c0 3303 	strd	r3, r3, [r0, #12]
90018584:	e9c0 3305 	strd	r3, r3, [r0, #20]
90018588:	e9c0 3307 	strd	r3, r3, [r0, #28]
9001858c:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
90018590:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
90018594:	f7ff ffd0 	bl	90018538 <_ZN8touchgfx7Outline5resetEv>
90018598:	4620      	mov	r0, r4
9001859a:	bd10      	pop	{r4, pc}
9001859c:	90030630 	.word	0x90030630

900185a0 <_ZN8touchgfx7Outline10renderLineEiiii>:
900185a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900185a4:	b093      	sub	sp, #76	@ 0x4c
900185a6:	1156      	asrs	r6, r2, #5
900185a8:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
900185aa:	9305      	str	r3, [sp, #20]
900185ac:	1153      	asrs	r3, r2, #5
900185ae:	f004 051f 	and.w	r5, r4, #31
900185b2:	9303      	str	r3, [sp, #12]
900185b4:	1163      	asrs	r3, r4, #5
900185b6:	9504      	str	r5, [sp, #16]
900185b8:	1165      	asrs	r5, r4, #5
900185ba:	9306      	str	r3, [sp, #24]
900185bc:	f002 031f 	and.w	r3, r2, #31
900185c0:	42ae      	cmp	r6, r5
900185c2:	f040 80f4 	bne.w	900187ae <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
900185c6:	9c04      	ldr	r4, [sp, #16]
900185c8:	9a05      	ldr	r2, [sp, #20]
900185ca:	42a3      	cmp	r3, r4
900185cc:	ea4f 1e62 	mov.w	lr, r2, asr #5
900185d0:	6902      	ldr	r2, [r0, #16]
900185d2:	d125      	bne.n	90018620 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
900185d4:	f9b2 3000 	ldrsh.w	r3, [r2]
900185d8:	459e      	cmp	lr, r3
900185da:	d103      	bne.n	900185e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
900185dc:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
900185e0:	429e      	cmp	r6, r3
900185e2:	d035      	beq.n	90018650 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900185e4:	88d1      	ldrh	r1, [r2, #6]
900185e6:	8893      	ldrh	r3, [r2, #4]
900185e8:	430b      	orrs	r3, r1
900185ea:	d010      	beq.n	9001860e <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900185ec:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
900185f0:	2b00      	cmp	r3, #0
900185f2:	db0c      	blt.n	9001860e <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900185f4:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
900185f6:	428b      	cmp	r3, r1
900185f8:	da09      	bge.n	9001860e <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900185fa:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
900185fe:	428b      	cmp	r3, r1
90018600:	f103 0301 	add.w	r3, r3, #1
90018604:	bf38      	it	cc
90018606:	3208      	addcc	r2, #8
90018608:	6083      	str	r3, [r0, #8]
9001860a:	bf38      	it	cc
9001860c:	6102      	strcc	r2, [r0, #16]
9001860e:	6903      	ldr	r3, [r0, #16]
90018610:	9a03      	ldr	r2, [sp, #12]
90018612:	f8a3 e000 	strh.w	lr, [r3]
90018616:	805a      	strh	r2, [r3, #2]
90018618:	2200      	movs	r2, #0
9001861a:	809a      	strh	r2, [r3, #4]
9001861c:	80da      	strh	r2, [r3, #6]
9001861e:	e017      	b.n	90018650 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90018620:	9c05      	ldr	r4, [sp, #20]
90018622:	114e      	asrs	r6, r1, #5
90018624:	f001 0c1f 	and.w	ip, r1, #31
90018628:	f8b2 8004 	ldrh.w	r8, [r2, #4]
9001862c:	f004 041f 	and.w	r4, r4, #31
90018630:	4576      	cmp	r6, lr
90018632:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90018636:	9402      	str	r4, [sp, #8]
90018638:	9c04      	ldr	r4, [sp, #16]
9001863a:	eba4 0403 	sub.w	r4, r4, r3
9001863e:	d10a      	bne.n	90018656 <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90018640:	9b02      	ldr	r3, [sp, #8]
90018642:	44a0      	add	r8, r4
90018644:	449c      	add	ip, r3
90018646:	f8a2 8004 	strh.w	r8, [r2, #4]
9001864a:	fb04 a40c 	mla	r4, r4, ip, sl
9001864e:	80d4      	strh	r4, [r2, #6]
90018650:	b013      	add	sp, #76	@ 0x4c
90018652:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018656:	9d05      	ldr	r5, [sp, #20]
90018658:	1a69      	subs	r1, r5, r1
9001865a:	bf51      	iteee	pl
9001865c:	f1cc 0520 	rsbpl	r5, ip, #32
90018660:	fb04 f40c 	mulmi.w	r4, r4, ip
90018664:	4249      	negmi	r1, r1
90018666:	2500      	movmi	r5, #0
90018668:	bf5d      	ittte	pl
9001866a:	436c      	mulpl	r4, r5
9001866c:	2520      	movpl	r5, #32
9001866e:	f04f 0901 	movpl.w	r9, #1
90018672:	f04f 39ff 	movmi.w	r9, #4294967295
90018676:	9501      	str	r5, [sp, #4]
90018678:	9f01      	ldr	r7, [sp, #4]
9001867a:	444e      	add	r6, r9
9001867c:	fb94 f5f1 	sdiv	r5, r4, r1
90018680:	fb01 4415 	mls	r4, r1, r5, r4
90018684:	44bc      	add	ip, r7
90018686:	2c00      	cmp	r4, #0
90018688:	bfbc      	itt	lt
9001868a:	f105 35ff 	addlt.w	r5, r5, #4294967295
9001868e:	1864      	addlt	r4, r4, r1
90018690:	44a8      	add	r8, r5
90018692:	fb05 ac0c 	mla	ip, r5, ip, sl
90018696:	f8a2 8004 	strh.w	r8, [r2, #4]
9001869a:	f8a2 c006 	strh.w	ip, [r2, #6]
9001869e:	f8d0 c010 	ldr.w	ip, [r0, #16]
900186a2:	f8bc 8006 	ldrh.w	r8, [ip, #6]
900186a6:	f8bc 2004 	ldrh.w	r2, [ip, #4]
900186aa:	ea58 0202 	orrs.w	r2, r8, r2
900186ae:	d011      	beq.n	900186d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
900186b0:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
900186b4:	f1b8 0f00 	cmp.w	r8, #0
900186b8:	db0c      	blt.n	900186d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
900186ba:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
900186bc:	4590      	cmp	r8, r2
900186be:	da09      	bge.n	900186d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
900186c0:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
900186c4:	4590      	cmp	r8, r2
900186c6:	bf3c      	itt	cc
900186c8:	f10c 0208 	addcc.w	r2, ip, #8
900186cc:	6102      	strcc	r2, [r0, #16]
900186ce:	f108 0201 	add.w	r2, r8, #1
900186d2:	6082      	str	r2, [r0, #8]
900186d4:	f8d0 c010 	ldr.w	ip, [r0, #16]
900186d8:	2700      	movs	r7, #0
900186da:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
900186de:	45b6      	cmp	lr, r6
900186e0:	f8ac 6000 	strh.w	r6, [ip]
900186e4:	442b      	add	r3, r5
900186e6:	f8ac 2002 	strh.w	r2, [ip, #2]
900186ea:	f8ac 7004 	strh.w	r7, [ip, #4]
900186ee:	f8ac 7006 	strh.w	r7, [ip, #6]
900186f2:	d04b      	beq.n	9001878c <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
900186f4:	9f04      	ldr	r7, [sp, #16]
900186f6:	1a64      	subs	r4, r4, r1
900186f8:	f04f 0a00 	mov.w	sl, #0
900186fc:	1aff      	subs	r7, r7, r3
900186fe:	443d      	add	r5, r7
90018700:	016d      	lsls	r5, r5, #5
90018702:	fb95 f8f1 	sdiv	r8, r5, r1
90018706:	fb01 5518 	mls	r5, r1, r8, r5
9001870a:	2d00      	cmp	r5, #0
9001870c:	bfbc      	itt	lt
9001870e:	f108 38ff 	addlt.w	r8, r8, #4294967295
90018712:	186d      	addlt	r5, r5, r1
90018714:	f108 0701 	add.w	r7, r8, #1
90018718:	9703      	str	r7, [sp, #12]
9001871a:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001871e:	1964      	adds	r4, r4, r5
90018720:	444e      	add	r6, r9
90018722:	bf54      	ite	pl
90018724:	9f03      	ldrpl	r7, [sp, #12]
90018726:	4647      	movmi	r7, r8
90018728:	f8bc b004 	ldrh.w	fp, [ip, #4]
9001872c:	bf58      	it	pl
9001872e:	1a64      	subpl	r4, r4, r1
90018730:	443b      	add	r3, r7
90018732:	44bb      	add	fp, r7
90018734:	f8ac b004 	strh.w	fp, [ip, #4]
90018738:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001873c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90018740:	f8ac b006 	strh.w	fp, [ip, #6]
90018744:	f8d0 c010 	ldr.w	ip, [r0, #16]
90018748:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001874c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90018750:	ea5b 0707 	orrs.w	r7, fp, r7
90018754:	d011      	beq.n	9001877a <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90018756:	f9bc b002 	ldrsh.w	fp, [ip, #2]
9001875a:	f1bb 0f00 	cmp.w	fp, #0
9001875e:	db0c      	blt.n	9001877a <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90018760:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90018762:	45bb      	cmp	fp, r7
90018764:	da09      	bge.n	9001877a <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90018766:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001876a:	45bb      	cmp	fp, r7
9001876c:	bf3c      	itt	cc
9001876e:	f10c 0708 	addcc.w	r7, ip, #8
90018772:	6107      	strcc	r7, [r0, #16]
90018774:	f10b 0701 	add.w	r7, fp, #1
90018778:	6087      	str	r7, [r0, #8]
9001877a:	6907      	ldr	r7, [r0, #16]
9001877c:	45b6      	cmp	lr, r6
9001877e:	803e      	strh	r6, [r7, #0]
90018780:	807a      	strh	r2, [r7, #2]
90018782:	f8a7 a004 	strh.w	sl, [r7, #4]
90018786:	f8a7 a006 	strh.w	sl, [r7, #6]
9001878a:	d1c6      	bne.n	9001871a <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
9001878c:	9a04      	ldr	r2, [sp, #16]
9001878e:	1ad3      	subs	r3, r2, r3
90018790:	6902      	ldr	r2, [r0, #16]
90018792:	8891      	ldrh	r1, [r2, #4]
90018794:	88d6      	ldrh	r6, [r2, #6]
90018796:	4419      	add	r1, r3
90018798:	8091      	strh	r1, [r2, #4]
9001879a:	9902      	ldr	r1, [sp, #8]
9001879c:	f101 0c20 	add.w	ip, r1, #32
900187a0:	9901      	ldr	r1, [sp, #4]
900187a2:	ebac 0c01 	sub.w	ip, ip, r1
900187a6:	fb03 630c 	mla	r3, r3, ip, r6
900187aa:	80d3      	strh	r3, [r2, #6]
900187ac:	e750      	b.n	90018650 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900187ae:	9d05      	ldr	r5, [sp, #20]
900187b0:	1aa2      	subs	r2, r4, r2
900187b2:	eba5 0501 	sub.w	r5, r5, r1
900187b6:	9202      	str	r2, [sp, #8]
900187b8:	9508      	str	r5, [sp, #32]
900187ba:	f140 8128 	bpl.w	90018a0e <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
900187be:	9a03      	ldr	r2, [sp, #12]
900187c0:	2a00      	cmp	r2, #0
900187c2:	f6ff af45 	blt.w	90018650 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900187c6:	9a02      	ldr	r2, [sp, #8]
900187c8:	f04f 34ff 	mov.w	r4, #4294967295
900187cc:	4252      	negs	r2, r2
900187ce:	940b      	str	r4, [sp, #44]	@ 0x2c
900187d0:	2400      	movs	r4, #0
900187d2:	9202      	str	r2, [sp, #8]
900187d4:	9a06      	ldr	r2, [sp, #24]
900187d6:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
900187da:	9206      	str	r2, [sp, #24]
900187dc:	462a      	mov	r2, r5
900187de:	435a      	muls	r2, r3
900187e0:	9401      	str	r4, [sp, #4]
900187e2:	9c02      	ldr	r4, [sp, #8]
900187e4:	9d02      	ldr	r5, [sp, #8]
900187e6:	fb92 f4f4 	sdiv	r4, r2, r4
900187ea:	fb05 2214 	mls	r2, r5, r4, r2
900187ee:	2a00      	cmp	r2, #0
900187f0:	9207      	str	r2, [sp, #28]
900187f2:	bfbc      	itt	lt
900187f4:	1952      	addlt	r2, r2, r5
900187f6:	f104 34ff 	addlt.w	r4, r4, #4294967295
900187fa:	6905      	ldr	r5, [r0, #16]
900187fc:	bfb8      	it	lt
900187fe:	9207      	strlt	r2, [sp, #28]
90018800:	eb04 0901 	add.w	r9, r4, r1
90018804:	9a01      	ldr	r2, [sp, #4]
90018806:	ea4f 1669 	mov.w	r6, r9, asr #5
9001880a:	429a      	cmp	r2, r3
9001880c:	f040 8111 	bne.w	90018a32 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90018810:	f9b5 3000 	ldrsh.w	r3, [r5]
90018814:	429e      	cmp	r6, r3
90018816:	d104      	bne.n	90018822 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90018818:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001881c:	9a03      	ldr	r2, [sp, #12]
9001881e:	429a      	cmp	r2, r3
90018820:	d01b      	beq.n	9001885a <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90018822:	88ea      	ldrh	r2, [r5, #6]
90018824:	88ab      	ldrh	r3, [r5, #4]
90018826:	4313      	orrs	r3, r2
90018828:	d010      	beq.n	9001884c <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001882a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001882e:	2a00      	cmp	r2, #0
90018830:	db0c      	blt.n	9001884c <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90018832:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90018834:	429a      	cmp	r2, r3
90018836:	da09      	bge.n	9001884c <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90018838:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
9001883c:	429a      	cmp	r2, r3
9001883e:	f102 0201 	add.w	r2, r2, #1
90018842:	bf38      	it	cc
90018844:	3508      	addcc	r5, #8
90018846:	6082      	str	r2, [r0, #8]
90018848:	bf38      	it	cc
9001884a:	6105      	strcc	r5, [r0, #16]
9001884c:	6903      	ldr	r3, [r0, #16]
9001884e:	9a03      	ldr	r2, [sp, #12]
90018850:	801e      	strh	r6, [r3, #0]
90018852:	805a      	strh	r2, [r3, #2]
90018854:	2200      	movs	r2, #0
90018856:	809a      	strh	r2, [r3, #4]
90018858:	80da      	strh	r2, [r3, #6]
9001885a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001885c:	9a03      	ldr	r2, [sp, #12]
9001885e:	6901      	ldr	r1, [r0, #16]
90018860:	441a      	add	r2, r3
90018862:	f9b1 3000 	ldrsh.w	r3, [r1]
90018866:	42b3      	cmp	r3, r6
90018868:	d103      	bne.n	90018872 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
9001886a:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
9001886e:	429a      	cmp	r2, r3
90018870:	d01a      	beq.n	900188a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90018872:	88cc      	ldrh	r4, [r1, #6]
90018874:	888b      	ldrh	r3, [r1, #4]
90018876:	4323      	orrs	r3, r4
90018878:	d010      	beq.n	9001889c <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
9001887a:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
9001887e:	2c00      	cmp	r4, #0
90018880:	db0c      	blt.n	9001889c <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90018882:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90018884:	429c      	cmp	r4, r3
90018886:	da09      	bge.n	9001889c <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90018888:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
9001888c:	429c      	cmp	r4, r3
9001888e:	f104 0401 	add.w	r4, r4, #1
90018892:	bf38      	it	cc
90018894:	3108      	addcc	r1, #8
90018896:	6084      	str	r4, [r0, #8]
90018898:	bf38      	it	cc
9001889a:	6101      	strcc	r1, [r0, #16]
9001889c:	6903      	ldr	r3, [r0, #16]
9001889e:	2100      	movs	r1, #0
900188a0:	801e      	strh	r6, [r3, #0]
900188a2:	805a      	strh	r2, [r3, #2]
900188a4:	8099      	strh	r1, [r3, #4]
900188a6:	80d9      	strh	r1, [r3, #6]
900188a8:	9b06      	ldr	r3, [sp, #24]
900188aa:	4293      	cmp	r3, r2
900188ac:	f000 8082 	beq.w	900189b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
900188b0:	9b08      	ldr	r3, [sp, #32]
900188b2:	9902      	ldr	r1, [sp, #8]
900188b4:	015b      	lsls	r3, r3, #5
900188b6:	9c02      	ldr	r4, [sp, #8]
900188b8:	fb93 f1f1 	sdiv	r1, r3, r1
900188bc:	fb04 3311 	mls	r3, r4, r1, r3
900188c0:	9103      	str	r1, [sp, #12]
900188c2:	2b00      	cmp	r3, #0
900188c4:	9308      	str	r3, [sp, #32]
900188c6:	da04      	bge.n	900188d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
900188c8:	1e4b      	subs	r3, r1, #1
900188ca:	9303      	str	r3, [sp, #12]
900188cc:	9b08      	ldr	r3, [sp, #32]
900188ce:	4423      	add	r3, r4
900188d0:	9308      	str	r3, [sp, #32]
900188d2:	9b07      	ldr	r3, [sp, #28]
900188d4:	464f      	mov	r7, r9
900188d6:	9902      	ldr	r1, [sp, #8]
900188d8:	2600      	movs	r6, #0
900188da:	1a5b      	subs	r3, r3, r1
900188dc:	9307      	str	r3, [sp, #28]
900188de:	9b01      	ldr	r3, [sp, #4]
900188e0:	f1c3 0320 	rsb	r3, r3, #32
900188e4:	930e      	str	r3, [sp, #56]	@ 0x38
900188e6:	990e      	ldr	r1, [sp, #56]	@ 0x38
900188e8:	9b01      	ldr	r3, [sp, #4]
900188ea:	1a5b      	subs	r3, r3, r1
900188ec:	930a      	str	r3, [sp, #40]	@ 0x28
900188ee:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
900188f2:	185b      	adds	r3, r3, r1
900188f4:	bf58      	it	pl
900188f6:	9902      	ldrpl	r1, [sp, #8]
900188f8:	9307      	str	r3, [sp, #28]
900188fa:	bf57      	itett	pl
900188fc:	1a5b      	subpl	r3, r3, r1
900188fe:	9903      	ldrmi	r1, [sp, #12]
90018900:	9307      	strpl	r3, [sp, #28]
90018902:	9b03      	ldrpl	r3, [sp, #12]
90018904:	bf58      	it	pl
90018906:	1c59      	addpl	r1, r3, #1
90018908:	2a00      	cmp	r2, #0
9001890a:	4489      	add	r9, r1
9001890c:	ea4f 1a69 	mov.w	sl, r9, asr #5
90018910:	db2e      	blt.n	90018970 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90018912:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90018914:	4293      	cmp	r3, r2
90018916:	dd2b      	ble.n	90018970 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90018918:	9c01      	ldr	r4, [sp, #4]
9001891a:	6905      	ldr	r5, [r0, #16]
9001891c:	46a0      	mov	r8, r4
9001891e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90018920:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90018924:	45a0      	cmp	r8, r4
90018926:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
9001892a:	f040 814c 	bne.w	90018bc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
9001892e:	f9b5 1000 	ldrsh.w	r1, [r5]
90018932:	4551      	cmp	r1, sl
90018934:	d103      	bne.n	9001893e <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90018936:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001893a:	4291      	cmp	r1, r2
9001893c:	d018      	beq.n	90018970 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001893e:	ea5c 010e 	orrs.w	r1, ip, lr
90018942:	d00f      	beq.n	90018964 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90018944:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90018948:	2900      	cmp	r1, #0
9001894a:	db0b      	blt.n	90018964 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
9001894c:	428b      	cmp	r3, r1
9001894e:	dd09      	ble.n	90018964 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90018950:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90018954:	4299      	cmp	r1, r3
90018956:	f101 0101 	add.w	r1, r1, #1
9001895a:	bf38      	it	cc
9001895c:	3508      	addcc	r5, #8
9001895e:	6081      	str	r1, [r0, #8]
90018960:	bf38      	it	cc
90018962:	6105      	strcc	r5, [r0, #16]
90018964:	6903      	ldr	r3, [r0, #16]
90018966:	f8a3 a000 	strh.w	sl, [r3]
9001896a:	805a      	strh	r2, [r3, #2]
9001896c:	809e      	strh	r6, [r3, #4]
9001896e:	80de      	strh	r6, [r3, #6]
90018970:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90018972:	6901      	ldr	r1, [r0, #16]
90018974:	441a      	add	r2, r3
90018976:	88cc      	ldrh	r4, [r1, #6]
90018978:	888b      	ldrh	r3, [r1, #4]
9001897a:	4323      	orrs	r3, r4
9001897c:	d010      	beq.n	900189a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
9001897e:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90018982:	2c00      	cmp	r4, #0
90018984:	db0c      	blt.n	900189a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90018986:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90018988:	429c      	cmp	r4, r3
9001898a:	da09      	bge.n	900189a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
9001898c:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90018990:	429c      	cmp	r4, r3
90018992:	f104 0401 	add.w	r4, r4, #1
90018996:	bf38      	it	cc
90018998:	3108      	addcc	r1, #8
9001899a:	6084      	str	r4, [r0, #8]
9001899c:	bf38      	it	cc
9001899e:	6101      	strcc	r1, [r0, #16]
900189a0:	6903      	ldr	r3, [r0, #16]
900189a2:	464f      	mov	r7, r9
900189a4:	f8a3 a000 	strh.w	sl, [r3]
900189a8:	805a      	strh	r2, [r3, #2]
900189aa:	809e      	strh	r6, [r3, #4]
900189ac:	80de      	strh	r6, [r3, #6]
900189ae:	9b06      	ldr	r3, [sp, #24]
900189b0:	4293      	cmp	r3, r2
900189b2:	d19c      	bne.n	900188ee <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
900189b4:	9b01      	ldr	r3, [sp, #4]
900189b6:	6907      	ldr	r7, [r0, #16]
900189b8:	f1c3 0620 	rsb	r6, r3, #32
900189bc:	9b05      	ldr	r3, [sp, #20]
900189be:	ea4f 1e63 	mov.w	lr, r3, asr #5
900189c2:	9b04      	ldr	r3, [sp, #16]
900189c4:	429e      	cmp	r6, r3
900189c6:	f040 81c7 	bne.w	90018d58 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
900189ca:	f9b7 3000 	ldrsh.w	r3, [r7]
900189ce:	459e      	cmp	lr, r3
900189d0:	d104      	bne.n	900189dc <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
900189d2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900189d6:	429a      	cmp	r2, r3
900189d8:	f43f ae3a 	beq.w	90018650 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900189dc:	88f9      	ldrh	r1, [r7, #6]
900189de:	88bb      	ldrh	r3, [r7, #4]
900189e0:	430b      	orrs	r3, r1
900189e2:	d010      	beq.n	90018a06 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900189e4:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900189e8:	2b00      	cmp	r3, #0
900189ea:	db0c      	blt.n	90018a06 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900189ec:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
900189ee:	428b      	cmp	r3, r1
900189f0:	da09      	bge.n	90018a06 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900189f2:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
900189f6:	428b      	cmp	r3, r1
900189f8:	f103 0301 	add.w	r3, r3, #1
900189fc:	bf38      	it	cc
900189fe:	3708      	addcc	r7, #8
90018a00:	6083      	str	r3, [r0, #8]
90018a02:	bf38      	it	cc
90018a04:	6107      	strcc	r7, [r0, #16]
90018a06:	6903      	ldr	r3, [r0, #16]
90018a08:	f8a3 e000 	strh.w	lr, [r3]
90018a0c:	e603      	b.n	90018616 <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90018a0e:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90018a10:	9c03      	ldr	r4, [sp, #12]
90018a12:	42a2      	cmp	r2, r4
90018a14:	f6ff ae1c 	blt.w	90018650 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90018a18:	9c06      	ldr	r4, [sp, #24]
90018a1a:	42a2      	cmp	r2, r4
90018a1c:	9c08      	ldr	r4, [sp, #32]
90018a1e:	bfbc      	itt	lt
90018a20:	3201      	addlt	r2, #1
90018a22:	9206      	strlt	r2, [sp, #24]
90018a24:	f1c3 0220 	rsb	r2, r3, #32
90018a28:	4362      	muls	r2, r4
90018a2a:	2401      	movs	r4, #1
90018a2c:	940b      	str	r4, [sp, #44]	@ 0x2c
90018a2e:	2420      	movs	r4, #32
90018a30:	e6d6      	b.n	900187e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90018a32:	ea4f 1861 	mov.w	r8, r1, asr #5
90018a36:	f009 021f 	and.w	r2, r9, #31
90018a3a:	f001 011f 	and.w	r1, r1, #31
90018a3e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90018a42:	920c      	str	r2, [sp, #48]	@ 0x30
90018a44:	45b0      	cmp	r8, r6
90018a46:	9a01      	ldr	r2, [sp, #4]
90018a48:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90018a4c:	eba2 0203 	sub.w	r2, r2, r3
90018a50:	d108      	bne.n	90018a64 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90018a52:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90018a54:	4496      	add	lr, r2
90018a56:	4419      	add	r1, r3
90018a58:	f8a5 e004 	strh.w	lr, [r5, #4]
90018a5c:	fb02 a101 	mla	r1, r2, r1, sl
90018a60:	80e9      	strh	r1, [r5, #6]
90018a62:	e6fa      	b.n	9001885a <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90018a64:	2c00      	cmp	r4, #0
90018a66:	f2c0 80a7 	blt.w	90018bb8 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90018a6a:	2701      	movs	r7, #1
90018a6c:	f1c1 0c20 	rsb	ip, r1, #32
90018a70:	970a      	str	r7, [sp, #40]	@ 0x28
90018a72:	2720      	movs	r7, #32
90018a74:	fb02 f20c 	mul.w	r2, r2, ip
90018a78:	9709      	str	r7, [sp, #36]	@ 0x24
90018a7a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90018a7c:	fb92 fcf4 	sdiv	ip, r2, r4
90018a80:	fb04 221c 	mls	r2, r4, ip, r2
90018a84:	4439      	add	r1, r7
90018a86:	2a00      	cmp	r2, #0
90018a88:	bfbc      	itt	lt
90018a8a:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90018a8e:	1912      	addlt	r2, r2, r4
90018a90:	fb0c a101 	mla	r1, ip, r1, sl
90018a94:	44e6      	add	lr, ip
90018a96:	80e9      	strh	r1, [r5, #6]
90018a98:	990a      	ldr	r1, [sp, #40]	@ 0x28
90018a9a:	f8a5 e004 	strh.w	lr, [r5, #4]
90018a9e:	eb08 0501 	add.w	r5, r8, r1
90018aa2:	6901      	ldr	r1, [r0, #16]
90018aa4:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90018aa8:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90018aac:	ea58 070e 	orrs.w	r7, r8, lr
90018ab0:	d010      	beq.n	90018ad4 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90018ab2:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
90018ab6:	f1be 0f00 	cmp.w	lr, #0
90018aba:	db0b      	blt.n	90018ad4 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90018abc:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90018abe:	45be      	cmp	lr, r7
90018ac0:	da08      	bge.n	90018ad4 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90018ac2:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90018ac6:	45be      	cmp	lr, r7
90018ac8:	bf3c      	itt	cc
90018aca:	3108      	addcc	r1, #8
90018acc:	6101      	strcc	r1, [r0, #16]
90018ace:	f10e 0101 	add.w	r1, lr, #1
90018ad2:	6081      	str	r1, [r0, #8]
90018ad4:	6901      	ldr	r1, [r0, #16]
90018ad6:	f04f 0e00 	mov.w	lr, #0
90018ada:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90018ade:	42ae      	cmp	r6, r5
90018ae0:	800d      	strh	r5, [r1, #0]
90018ae2:	4463      	add	r3, ip
90018ae4:	f8a1 8002 	strh.w	r8, [r1, #2]
90018ae8:	f8a1 e004 	strh.w	lr, [r1, #4]
90018aec:	f8a1 e006 	strh.w	lr, [r1, #6]
90018af0:	d053      	beq.n	90018b9a <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90018af2:	9901      	ldr	r1, [sp, #4]
90018af4:	1b12      	subs	r2, r2, r4
90018af6:	1ac9      	subs	r1, r1, r3
90018af8:	4461      	add	r1, ip
90018afa:	0149      	lsls	r1, r1, #5
90018afc:	fb91 fef4 	sdiv	lr, r1, r4
90018b00:	fb04 111e 	mls	r1, r4, lr, r1
90018b04:	2900      	cmp	r1, #0
90018b06:	bfbc      	itt	lt
90018b08:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90018b0c:	1909      	addlt	r1, r1, r4
90018b0e:	f10e 0701 	add.w	r7, lr, #1
90018b12:	970d      	str	r7, [sp, #52]	@ 0x34
90018b14:	f8d0 a010 	ldr.w	sl, [r0, #16]
90018b18:	1852      	adds	r2, r2, r1
90018b1a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90018b1c:	bf54      	ite	pl
90018b1e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
90018b22:	46f4      	movmi	ip, lr
90018b24:	f8ba b004 	ldrh.w	fp, [sl, #4]
90018b28:	bf58      	it	pl
90018b2a:	1b12      	subpl	r2, r2, r4
90018b2c:	4463      	add	r3, ip
90018b2e:	443d      	add	r5, r7
90018b30:	44e3      	add	fp, ip
90018b32:	f8aa b004 	strh.w	fp, [sl, #4]
90018b36:	f8ba b006 	ldrh.w	fp, [sl, #6]
90018b3a:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90018b3e:	f8aa b006 	strh.w	fp, [sl, #6]
90018b42:	f8d0 c010 	ldr.w	ip, [r0, #16]
90018b46:	f8bc b006 	ldrh.w	fp, [ip, #6]
90018b4a:	f8bc a004 	ldrh.w	sl, [ip, #4]
90018b4e:	ea5b 070a 	orrs.w	r7, fp, sl
90018b52:	d014      	beq.n	90018b7e <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90018b54:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90018b58:	f1ba 0f00 	cmp.w	sl, #0
90018b5c:	db0f      	blt.n	90018b7e <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90018b5e:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90018b60:	45ba      	cmp	sl, r7
90018b62:	da0c      	bge.n	90018b7e <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90018b64:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90018b68:	45ba      	cmp	sl, r7
90018b6a:	f10a 0a01 	add.w	sl, sl, #1
90018b6e:	bf38      	it	cc
90018b70:	f10c 0c08 	addcc.w	ip, ip, #8
90018b74:	f8c0 a008 	str.w	sl, [r0, #8]
90018b78:	bf38      	it	cc
90018b7a:	f8c0 c010 	strcc.w	ip, [r0, #16]
90018b7e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90018b82:	f04f 0700 	mov.w	r7, #0
90018b86:	42ae      	cmp	r6, r5
90018b88:	f8ac 5000 	strh.w	r5, [ip]
90018b8c:	f8ac 8002 	strh.w	r8, [ip, #2]
90018b90:	f8ac 7004 	strh.w	r7, [ip, #4]
90018b94:	f8ac 7006 	strh.w	r7, [ip, #6]
90018b98:	d1bc      	bne.n	90018b14 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90018b9a:	6904      	ldr	r4, [r0, #16]
90018b9c:	9a01      	ldr	r2, [sp, #4]
90018b9e:	990c      	ldr	r1, [sp, #48]	@ 0x30
90018ba0:	1ad3      	subs	r3, r2, r3
90018ba2:	88a2      	ldrh	r2, [r4, #4]
90018ba4:	3120      	adds	r1, #32
90018ba6:	441a      	add	r2, r3
90018ba8:	80a2      	strh	r2, [r4, #4]
90018baa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90018bac:	1a89      	subs	r1, r1, r2
90018bae:	88e2      	ldrh	r2, [r4, #6]
90018bb0:	fb03 2301 	mla	r3, r3, r1, r2
90018bb4:	80e3      	strh	r3, [r4, #6]
90018bb6:	e650      	b.n	9001885a <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90018bb8:	f04f 37ff 	mov.w	r7, #4294967295
90018bbc:	434a      	muls	r2, r1
90018bbe:	4264      	negs	r4, r4
90018bc0:	970a      	str	r7, [sp, #40]	@ 0x28
90018bc2:	2700      	movs	r7, #0
90018bc4:	e758      	b.n	90018a78 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
90018bc6:	ea4f 1867 	mov.w	r8, r7, asr #5
90018bca:	f009 031f 	and.w	r3, r9, #31
90018bce:	f007 071f 	and.w	r7, r7, #31
90018bd2:	fa1f fc8c 	uxth.w	ip, ip
90018bd6:	45d0      	cmp	r8, sl
90018bd8:	930f      	str	r3, [sp, #60]	@ 0x3c
90018bda:	fa1f fe8e 	uxth.w	lr, lr
90018bde:	d10a      	bne.n	90018bf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90018be0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90018be2:	449c      	add	ip, r3
90018be4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90018be6:	441f      	add	r7, r3
90018be8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90018bea:	f8a5 c004 	strh.w	ip, [r5, #4]
90018bee:	fb03 e707 	mla	r7, r3, r7, lr
90018bf2:	80ef      	strh	r7, [r5, #6]
90018bf4:	e6bc      	b.n	90018970 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90018bf6:	2900      	cmp	r1, #0
90018bf8:	f2c0 80a6 	blt.w	90018d48 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90018bfc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90018bfe:	f1c7 0320 	rsb	r3, r7, #32
90018c02:	4363      	muls	r3, r4
90018c04:	2401      	movs	r4, #1
90018c06:	940d      	str	r4, [sp, #52]	@ 0x34
90018c08:	2420      	movs	r4, #32
90018c0a:	940c      	str	r4, [sp, #48]	@ 0x30
90018c0c:	fb93 f4f1 	sdiv	r4, r3, r1
90018c10:	fb01 3b14 	mls	fp, r1, r4, r3
90018c14:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90018c16:	f1bb 0f00 	cmp.w	fp, #0
90018c1a:	441f      	add	r7, r3
90018c1c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90018c1e:	bfbc      	itt	lt
90018c20:	f104 34ff 	addlt.w	r4, r4, #4294967295
90018c24:	448b      	addlt	fp, r1
90018c26:	fb04 e707 	mla	r7, r4, r7, lr
90018c2a:	44a4      	add	ip, r4
90018c2c:	80ef      	strh	r7, [r5, #6]
90018c2e:	f8a5 c004 	strh.w	ip, [r5, #4]
90018c32:	eb08 0503 	add.w	r5, r8, r3
90018c36:	f8d0 c010 	ldr.w	ip, [r0, #16]
90018c3a:	f8bc e006 	ldrh.w	lr, [ip, #6]
90018c3e:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90018c42:	ea5e 0307 	orrs.w	r3, lr, r7
90018c46:	d011      	beq.n	90018c6c <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90018c48:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90018c4c:	f1be 0f00 	cmp.w	lr, #0
90018c50:	db0c      	blt.n	90018c6c <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90018c52:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90018c54:	45be      	cmp	lr, r7
90018c56:	da09      	bge.n	90018c6c <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90018c58:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90018c5c:	45be      	cmp	lr, r7
90018c5e:	bf3c      	itt	cc
90018c60:	f10c 0708 	addcc.w	r7, ip, #8
90018c64:	6107      	strcc	r7, [r0, #16]
90018c66:	f10e 0701 	add.w	r7, lr, #1
90018c6a:	6087      	str	r7, [r0, #8]
90018c6c:	6907      	ldr	r7, [r0, #16]
90018c6e:	b213      	sxth	r3, r2
90018c70:	4555      	cmp	r5, sl
90018c72:	9310      	str	r3, [sp, #64]	@ 0x40
90018c74:	807b      	strh	r3, [r7, #2]
90018c76:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90018c78:	803d      	strh	r5, [r7, #0]
90018c7a:	80be      	strh	r6, [r7, #4]
90018c7c:	eb04 0c03 	add.w	ip, r4, r3
90018c80:	80fe      	strh	r6, [r7, #6]
90018c82:	d050      	beq.n	90018d26 <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
90018c84:	9b01      	ldr	r3, [sp, #4]
90018c86:	eba3 070c 	sub.w	r7, r3, ip
90018c8a:	ebab 0301 	sub.w	r3, fp, r1
90018c8e:	443c      	add	r4, r7
90018c90:	9309      	str	r3, [sp, #36]	@ 0x24
90018c92:	0164      	lsls	r4, r4, #5
90018c94:	fb94 f8f1 	sdiv	r8, r4, r1
90018c98:	fb01 4418 	mls	r4, r1, r8, r4
90018c9c:	2c00      	cmp	r4, #0
90018c9e:	bfbc      	itt	lt
90018ca0:	f108 38ff 	addlt.w	r8, r8, #4294967295
90018ca4:	1864      	addlt	r4, r4, r1
90018ca6:	f108 0701 	add.w	r7, r8, #1
90018caa:	9711      	str	r7, [sp, #68]	@ 0x44
90018cac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90018cae:	f8d0 e010 	ldr.w	lr, [r0, #16]
90018cb2:	191b      	adds	r3, r3, r4
90018cb4:	f8be b004 	ldrh.w	fp, [lr, #4]
90018cb8:	bf54      	ite	pl
90018cba:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
90018cbc:	4647      	movmi	r7, r8
90018cbe:	9309      	str	r3, [sp, #36]	@ 0x24
90018cc0:	bf58      	it	pl
90018cc2:	1a5b      	subpl	r3, r3, r1
90018cc4:	44bb      	add	fp, r7
90018cc6:	44bc      	add	ip, r7
90018cc8:	bf58      	it	pl
90018cca:	9309      	strpl	r3, [sp, #36]	@ 0x24
90018ccc:	f8ae b004 	strh.w	fp, [lr, #4]
90018cd0:	f8be b006 	ldrh.w	fp, [lr, #6]
90018cd4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90018cd8:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
90018cda:	f8ae b006 	strh.w	fp, [lr, #6]
90018cde:	443d      	add	r5, r7
90018ce0:	f8d0 e010 	ldr.w	lr, [r0, #16]
90018ce4:	f8be b006 	ldrh.w	fp, [lr, #6]
90018ce8:	f8be 7004 	ldrh.w	r7, [lr, #4]
90018cec:	ea5b 0307 	orrs.w	r3, fp, r7
90018cf0:	d011      	beq.n	90018d16 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90018cf2:	f9be b002 	ldrsh.w	fp, [lr, #2]
90018cf6:	f1bb 0f00 	cmp.w	fp, #0
90018cfa:	db0c      	blt.n	90018d16 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90018cfc:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90018cfe:	45bb      	cmp	fp, r7
90018d00:	da09      	bge.n	90018d16 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90018d02:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90018d06:	45bb      	cmp	fp, r7
90018d08:	bf3c      	itt	cc
90018d0a:	f10e 0708 	addcc.w	r7, lr, #8
90018d0e:	6107      	strcc	r7, [r0, #16]
90018d10:	f10b 0701 	add.w	r7, fp, #1
90018d14:	6087      	str	r7, [r0, #8]
90018d16:	6907      	ldr	r7, [r0, #16]
90018d18:	4555      	cmp	r5, sl
90018d1a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90018d1c:	803d      	strh	r5, [r7, #0]
90018d1e:	807b      	strh	r3, [r7, #2]
90018d20:	80be      	strh	r6, [r7, #4]
90018d22:	80fe      	strh	r6, [r7, #6]
90018d24:	d1c2      	bne.n	90018cac <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
90018d26:	9b01      	ldr	r3, [sp, #4]
90018d28:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90018d2a:	eba3 0c0c 	sub.w	ip, r3, ip
90018d2e:	6903      	ldr	r3, [r0, #16]
90018d30:	3720      	adds	r7, #32
90018d32:	8899      	ldrh	r1, [r3, #4]
90018d34:	4461      	add	r1, ip
90018d36:	8099      	strh	r1, [r3, #4]
90018d38:	990c      	ldr	r1, [sp, #48]	@ 0x30
90018d3a:	1a7f      	subs	r7, r7, r1
90018d3c:	88d9      	ldrh	r1, [r3, #6]
90018d3e:	fb0c 1c07 	mla	ip, ip, r7, r1
90018d42:	f8a3 c006 	strh.w	ip, [r3, #6]
90018d46:	e613      	b.n	90018970 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90018d48:	f04f 34ff 	mov.w	r4, #4294967295
90018d4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90018d4e:	4249      	negs	r1, r1
90018d50:	940d      	str	r4, [sp, #52]	@ 0x34
90018d52:	2400      	movs	r4, #0
90018d54:	437b      	muls	r3, r7
90018d56:	e758      	b.n	90018c0a <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
90018d58:	9905      	ldr	r1, [sp, #20]
90018d5a:	ea4f 1b69 	mov.w	fp, r9, asr #5
90018d5e:	f009 0c1f 	and.w	ip, r9, #31
90018d62:	f8b7 8004 	ldrh.w	r8, [r7, #4]
90018d66:	f001 011f 	and.w	r1, r1, #31
90018d6a:	45f3      	cmp	fp, lr
90018d6c:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90018d70:	9102      	str	r1, [sp, #8]
90018d72:	9904      	ldr	r1, [sp, #16]
90018d74:	eba1 0406 	sub.w	r4, r1, r6
90018d78:	d108      	bne.n	90018d8c <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
90018d7a:	9b02      	ldr	r3, [sp, #8]
90018d7c:	44a0      	add	r8, r4
90018d7e:	449c      	add	ip, r3
90018d80:	f8a7 8004 	strh.w	r8, [r7, #4]
90018d84:	fb04 a40c 	mla	r4, r4, ip, sl
90018d88:	80fc      	strh	r4, [r7, #6]
90018d8a:	e461      	b.n	90018650 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90018d8c:	9905      	ldr	r1, [sp, #20]
90018d8e:	ebb1 0109 	subs.w	r1, r1, r9
90018d92:	bf51      	iteee	pl
90018d94:	f1cc 0520 	rsbpl	r5, ip, #32
90018d98:	fb04 f40c 	mulmi.w	r4, r4, ip
90018d9c:	4249      	negmi	r1, r1
90018d9e:	2500      	movmi	r5, #0
90018da0:	bf5d      	ittte	pl
90018da2:	436c      	mulpl	r4, r5
90018da4:	2520      	movpl	r5, #32
90018da6:	f04f 0901 	movpl.w	r9, #1
90018daa:	f04f 39ff 	movmi.w	r9, #4294967295
90018dae:	9501      	str	r5, [sp, #4]
90018db0:	9b01      	ldr	r3, [sp, #4]
90018db2:	fb94 f5f1 	sdiv	r5, r4, r1
90018db6:	fb01 4415 	mls	r4, r1, r5, r4
90018dba:	449c      	add	ip, r3
90018dbc:	eb0b 0309 	add.w	r3, fp, r9
90018dc0:	2c00      	cmp	r4, #0
90018dc2:	bfbc      	itt	lt
90018dc4:	f105 35ff 	addlt.w	r5, r5, #4294967295
90018dc8:	1864      	addlt	r4, r4, r1
90018dca:	44a8      	add	r8, r5
90018dcc:	fb05 ac0c 	mla	ip, r5, ip, sl
90018dd0:	f8a7 8004 	strh.w	r8, [r7, #4]
90018dd4:	f8a7 c006 	strh.w	ip, [r7, #6]
90018dd8:	f8d0 c010 	ldr.w	ip, [r0, #16]
90018ddc:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90018de0:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90018de4:	ea58 0707 	orrs.w	r7, r8, r7
90018de8:	d011      	beq.n	90018e0e <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90018dea:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90018dee:	f1b8 0f00 	cmp.w	r8, #0
90018df2:	db0c      	blt.n	90018e0e <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90018df4:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90018df6:	45b8      	cmp	r8, r7
90018df8:	da09      	bge.n	90018e0e <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90018dfa:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90018dfe:	45b8      	cmp	r8, r7
90018e00:	bf3c      	itt	cc
90018e02:	f10c 0708 	addcc.w	r7, ip, #8
90018e06:	6107      	strcc	r7, [r0, #16]
90018e08:	f108 0701 	add.w	r7, r8, #1
90018e0c:	6087      	str	r7, [r0, #8]
90018e0e:	6907      	ldr	r7, [r0, #16]
90018e10:	f04f 0c00 	mov.w	ip, #0
90018e14:	b212      	sxth	r2, r2
90018e16:	459e      	cmp	lr, r3
90018e18:	803b      	strh	r3, [r7, #0]
90018e1a:	442e      	add	r6, r5
90018e1c:	807a      	strh	r2, [r7, #2]
90018e1e:	f8a7 c004 	strh.w	ip, [r7, #4]
90018e22:	f8a7 c006 	strh.w	ip, [r7, #6]
90018e26:	d04b      	beq.n	90018ec0 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
90018e28:	9f04      	ldr	r7, [sp, #16]
90018e2a:	1a64      	subs	r4, r4, r1
90018e2c:	f04f 0a00 	mov.w	sl, #0
90018e30:	1bbf      	subs	r7, r7, r6
90018e32:	443d      	add	r5, r7
90018e34:	016d      	lsls	r5, r5, #5
90018e36:	fb95 f8f1 	sdiv	r8, r5, r1
90018e3a:	fb01 5518 	mls	r5, r1, r8, r5
90018e3e:	4565      	cmp	r5, ip
90018e40:	bfbc      	itt	lt
90018e42:	f108 38ff 	addlt.w	r8, r8, #4294967295
90018e46:	186d      	addlt	r5, r5, r1
90018e48:	f108 0701 	add.w	r7, r8, #1
90018e4c:	9703      	str	r7, [sp, #12]
90018e4e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90018e52:	1964      	adds	r4, r4, r5
90018e54:	444b      	add	r3, r9
90018e56:	bf54      	ite	pl
90018e58:	9f03      	ldrpl	r7, [sp, #12]
90018e5a:	4647      	movmi	r7, r8
90018e5c:	f8bc b004 	ldrh.w	fp, [ip, #4]
90018e60:	bf58      	it	pl
90018e62:	1a64      	subpl	r4, r4, r1
90018e64:	443e      	add	r6, r7
90018e66:	44bb      	add	fp, r7
90018e68:	f8ac b004 	strh.w	fp, [ip, #4]
90018e6c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90018e70:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90018e74:	f8ac b006 	strh.w	fp, [ip, #6]
90018e78:	f8d0 c010 	ldr.w	ip, [r0, #16]
90018e7c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90018e80:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90018e84:	ea5b 0707 	orrs.w	r7, fp, r7
90018e88:	d011      	beq.n	90018eae <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90018e8a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90018e8e:	f1bb 0f00 	cmp.w	fp, #0
90018e92:	db0c      	blt.n	90018eae <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90018e94:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90018e96:	45bb      	cmp	fp, r7
90018e98:	da09      	bge.n	90018eae <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90018e9a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90018e9e:	45bb      	cmp	fp, r7
90018ea0:	bf3c      	itt	cc
90018ea2:	f10c 0708 	addcc.w	r7, ip, #8
90018ea6:	6107      	strcc	r7, [r0, #16]
90018ea8:	f10b 0701 	add.w	r7, fp, #1
90018eac:	6087      	str	r7, [r0, #8]
90018eae:	6907      	ldr	r7, [r0, #16]
90018eb0:	459e      	cmp	lr, r3
90018eb2:	803b      	strh	r3, [r7, #0]
90018eb4:	807a      	strh	r2, [r7, #2]
90018eb6:	f8a7 a004 	strh.w	sl, [r7, #4]
90018eba:	f8a7 a006 	strh.w	sl, [r7, #6]
90018ebe:	d1c6      	bne.n	90018e4e <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90018ec0:	9b04      	ldr	r3, [sp, #16]
90018ec2:	1b9e      	subs	r6, r3, r6
90018ec4:	6903      	ldr	r3, [r0, #16]
90018ec6:	889a      	ldrh	r2, [r3, #4]
90018ec8:	4432      	add	r2, r6
90018eca:	809a      	strh	r2, [r3, #4]
90018ecc:	9a02      	ldr	r2, [sp, #8]
90018ece:	f102 0c20 	add.w	ip, r2, #32
90018ed2:	9a01      	ldr	r2, [sp, #4]
90018ed4:	ebac 0c02 	sub.w	ip, ip, r2
90018ed8:	88da      	ldrh	r2, [r3, #6]
90018eda:	fb06 260c 	mla	r6, r6, ip, r2
90018ede:	80de      	strh	r6, [r3, #6]
90018ee0:	f7ff bbb6 	b.w	90018650 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90018ee4 <_ZN8touchgfx7Outline6lineToEii>:
90018ee4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90018ee6:	079b      	lsls	r3, r3, #30
90018ee8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90018eea:	460e      	mov	r6, r1
90018eec:	4615      	mov	r5, r2
90018eee:	d511      	bpl.n	90018f14 <_ZN8touchgfx7Outline6lineToEii+0x30>
90018ef0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90018ef4:	ea86 0701 	eor.w	r7, r6, r1
90018ef8:	ea85 0302 	eor.w	r3, r5, r2
90018efc:	433b      	orrs	r3, r7
90018efe:	d009      	beq.n	90018f14 <_ZN8touchgfx7Outline6lineToEii+0x30>
90018f00:	4633      	mov	r3, r6
90018f02:	9500      	str	r5, [sp, #0]
90018f04:	f7ff fb4c 	bl	900185a0 <_ZN8touchgfx7Outline10renderLineEiiii>
90018f08:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90018f0a:	f043 0301 	orr.w	r3, r3, #1
90018f0e:	e9c0 6505 	strd	r6, r5, [r0, #20]
90018f12:	6243      	str	r3, [r0, #36]	@ 0x24
90018f14:	b003      	add	sp, #12
90018f16:	bdf0      	pop	{r4, r5, r6, r7, pc}

90018f18 <_ZN8touchgfx7Outline6moveToEii>:
90018f18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018f1a:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90018f1c:	4615      	mov	r5, r2
90018f1e:	4604      	mov	r4, r0
90018f20:	460e      	mov	r6, r1
90018f22:	079a      	lsls	r2, r3, #30
90018f24:	d401      	bmi.n	90018f2a <_ZN8touchgfx7Outline6moveToEii+0x12>
90018f26:	f7ff fb07 	bl	90018538 <_ZN8touchgfx7Outline5resetEv>
90018f2a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90018f2c:	07db      	lsls	r3, r3, #31
90018f2e:	d504      	bpl.n	90018f3a <_ZN8touchgfx7Outline6moveToEii+0x22>
90018f30:	4620      	mov	r0, r4
90018f32:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
90018f36:	f7ff ffd5 	bl	90018ee4 <_ZN8touchgfx7Outline6lineToEii>
90018f3a:	6923      	ldr	r3, [r4, #16]
90018f3c:	1170      	asrs	r0, r6, #5
90018f3e:	1169      	asrs	r1, r5, #5
90018f40:	f9b3 2000 	ldrsh.w	r2, [r3]
90018f44:	4290      	cmp	r0, r2
90018f46:	d103      	bne.n	90018f50 <_ZN8touchgfx7Outline6moveToEii+0x38>
90018f48:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90018f4c:	4291      	cmp	r1, r2
90018f4e:	d01a      	beq.n	90018f86 <_ZN8touchgfx7Outline6moveToEii+0x6e>
90018f50:	88df      	ldrh	r7, [r3, #6]
90018f52:	889a      	ldrh	r2, [r3, #4]
90018f54:	433a      	orrs	r2, r7
90018f56:	d010      	beq.n	90018f7a <_ZN8touchgfx7Outline6moveToEii+0x62>
90018f58:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90018f5c:	2a00      	cmp	r2, #0
90018f5e:	db0c      	blt.n	90018f7a <_ZN8touchgfx7Outline6moveToEii+0x62>
90018f60:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
90018f62:	42ba      	cmp	r2, r7
90018f64:	da09      	bge.n	90018f7a <_ZN8touchgfx7Outline6moveToEii+0x62>
90018f66:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
90018f6a:	42ba      	cmp	r2, r7
90018f6c:	f102 0201 	add.w	r2, r2, #1
90018f70:	bf38      	it	cc
90018f72:	3308      	addcc	r3, #8
90018f74:	60a2      	str	r2, [r4, #8]
90018f76:	bf38      	it	cc
90018f78:	6123      	strcc	r3, [r4, #16]
90018f7a:	6923      	ldr	r3, [r4, #16]
90018f7c:	2200      	movs	r2, #0
90018f7e:	8018      	strh	r0, [r3, #0]
90018f80:	8059      	strh	r1, [r3, #2]
90018f82:	809a      	strh	r2, [r3, #4]
90018f84:	80da      	strh	r2, [r3, #6]
90018f86:	6166      	str	r6, [r4, #20]
90018f88:	6225      	str	r5, [r4, #32]
90018f8a:	e9c4 5606 	strd	r5, r6, [r4, #24]
90018f8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90018f90 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90018f90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018f94:	b0d0      	sub	sp, #320	@ 0x140
90018f96:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90018f9a:	466c      	mov	r4, sp
90018f9c:	4627      	mov	r7, r4
90018f9e:	1a0d      	subs	r5, r1, r0
90018fa0:	f100 0308 	add.w	r3, r0, #8
90018fa4:	2d48      	cmp	r5, #72	@ 0x48
90018fa6:	f340 80d5 	ble.w	90019154 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90018faa:	112d      	asrs	r5, r5, #4
90018fac:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90018fb0:	f9b0 9000 	ldrsh.w	r9, [r0]
90018fb4:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90018fb8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90018fbc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90018fc0:	6816      	ldr	r6, [r2, #0]
90018fc2:	6006      	str	r6, [r0, #0]
90018fc4:	6856      	ldr	r6, [r2, #4]
90018fc6:	6046      	str	r6, [r0, #4]
90018fc8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90018fcc:	f8a2 8002 	strh.w	r8, [r2, #2]
90018fd0:	f8a2 e004 	strh.w	lr, [r2, #4]
90018fd4:	f8a2 c006 	strh.w	ip, [r2, #6]
90018fd8:	f1a1 0208 	sub.w	r2, r1, #8
90018fdc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90018fe0:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90018fe4:	4565      	cmp	r5, ip
90018fe6:	db06      	blt.n	90018ff6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90018fe8:	d119      	bne.n	9001901e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90018fea:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90018fee:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
90018ff2:	42ae      	cmp	r6, r5
90018ff4:	dd13      	ble.n	9001901e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90018ff6:	460e      	mov	r6, r1
90018ff8:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90018ffc:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90019000:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90019004:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90019008:	601d      	str	r5, [r3, #0]
9001900a:	6875      	ldr	r5, [r6, #4]
9001900c:	605d      	str	r5, [r3, #4]
9001900e:	f821 9c08 	strh.w	r9, [r1, #-8]
90019012:	f821 cc06 	strh.w	ip, [r1, #-6]
90019016:	f821 8c04 	strh.w	r8, [r1, #-4]
9001901a:	f821 ec02 	strh.w	lr, [r1, #-2]
9001901e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90019022:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
90019026:	42ae      	cmp	r6, r5
90019028:	db06      	blt.n	90019038 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
9001902a:	d116      	bne.n	9001905a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
9001902c:	f9b0 c000 	ldrsh.w	ip, [r0]
90019030:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90019034:	45ac      	cmp	ip, r5
90019036:	da10      	bge.n	9001905a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90019038:	681d      	ldr	r5, [r3, #0]
9001903a:	f9b0 8000 	ldrsh.w	r8, [r0]
9001903e:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90019042:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90019046:	6005      	str	r5, [r0, #0]
90019048:	685d      	ldr	r5, [r3, #4]
9001904a:	f8a0 8008 	strh.w	r8, [r0, #8]
9001904e:	6045      	str	r5, [r0, #4]
90019050:	8146      	strh	r6, [r0, #10]
90019052:	f8a0 e00c 	strh.w	lr, [r0, #12]
90019056:	f8a0 c00e 	strh.w	ip, [r0, #14]
9001905a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
9001905e:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90019062:	4565      	cmp	r5, ip
90019064:	db06      	blt.n	90019074 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
90019066:	d119      	bne.n	9001909c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90019068:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
9001906c:	f9b0 5000 	ldrsh.w	r5, [r0]
90019070:	42ae      	cmp	r6, r5
90019072:	da13      	bge.n	9001909c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90019074:	460e      	mov	r6, r1
90019076:	f9b0 9000 	ldrsh.w	r9, [r0]
9001907a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
9001907e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90019082:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
90019086:	6005      	str	r5, [r0, #0]
90019088:	6875      	ldr	r5, [r6, #4]
9001908a:	6045      	str	r5, [r0, #4]
9001908c:	f821 9c08 	strh.w	r9, [r1, #-8]
90019090:	f821 cc06 	strh.w	ip, [r1, #-6]
90019094:	f821 8c04 	strh.w	r8, [r1, #-4]
90019098:	f821 ec02 	strh.w	lr, [r1, #-2]
9001909c:	3308      	adds	r3, #8
9001909e:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900190a2:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
900190a6:	45e6      	cmp	lr, ip
900190a8:	dbf8      	blt.n	9001909c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900190aa:	d105      	bne.n	900190b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900190ac:	f9b3 6000 	ldrsh.w	r6, [r3]
900190b0:	f9b0 5000 	ldrsh.w	r5, [r0]
900190b4:	42ae      	cmp	r6, r5
900190b6:	dbf1      	blt.n	9001909c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900190b8:	4615      	mov	r5, r2
900190ba:	3a08      	subs	r2, #8
900190bc:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
900190c0:	45b4      	cmp	ip, r6
900190c2:	dbf9      	blt.n	900190b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900190c4:	d105      	bne.n	900190d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
900190c6:	f9b0 8000 	ldrsh.w	r8, [r0]
900190ca:	f9b2 6000 	ldrsh.w	r6, [r2]
900190ce:	45b0      	cmp	r8, r6
900190d0:	dbf2      	blt.n	900190b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900190d2:	4293      	cmp	r3, r2
900190d4:	f1a5 0608 	sub.w	r6, r5, #8
900190d8:	d816      	bhi.n	90019108 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
900190da:	f8d6 c000 	ldr.w	ip, [r6]
900190de:	f9b3 a000 	ldrsh.w	sl, [r3]
900190e2:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
900190e6:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
900190ea:	f8c3 c000 	str.w	ip, [r3]
900190ee:	f8d6 c004 	ldr.w	ip, [r6, #4]
900190f2:	f8c3 c004 	str.w	ip, [r3, #4]
900190f6:	f825 ac08 	strh.w	sl, [r5, #-8]
900190fa:	f825 ec06 	strh.w	lr, [r5, #-6]
900190fe:	f825 9c04 	strh.w	r9, [r5, #-4]
90019102:	f825 8c02 	strh.w	r8, [r5, #-2]
90019106:	e7c9      	b.n	9001909c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90019108:	f8d6 e000 	ldr.w	lr, [r6]
9001910c:	f9b0 a000 	ldrsh.w	sl, [r0]
90019110:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90019114:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
90019118:	f8c0 e000 	str.w	lr, [r0]
9001911c:	f8d6 e004 	ldr.w	lr, [r6, #4]
90019120:	1a16      	subs	r6, r2, r0
90019122:	f8c0 e004 	str.w	lr, [r0, #4]
90019126:	f825 ac08 	strh.w	sl, [r5, #-8]
9001912a:	f825 cc06 	strh.w	ip, [r5, #-6]
9001912e:	f825 9c04 	strh.w	r9, [r5, #-4]
90019132:	f825 8c02 	strh.w	r8, [r5, #-2]
90019136:	1acd      	subs	r5, r1, r3
90019138:	10ed      	asrs	r5, r5, #3
9001913a:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
9001913e:	bfb5      	itete	lt
90019140:	e9c4 0200 	strdlt	r0, r2, [r4]
90019144:	e9c4 3100 	strdge	r3, r1, [r4]
90019148:	460a      	movlt	r2, r1
9001914a:	4603      	movge	r3, r0
9001914c:	3408      	adds	r4, #8
9001914e:	4618      	mov	r0, r3
90019150:	4611      	mov	r1, r2
90019152:	e724      	b.n	90018f9e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90019154:	4299      	cmp	r1, r3
90019156:	d927      	bls.n	900191a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
90019158:	f1a3 0210 	sub.w	r2, r3, #16
9001915c:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90019160:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90019164:	45ac      	cmp	ip, r5
90019166:	db06      	blt.n	90019176 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
90019168:	d11c      	bne.n	900191a4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001916a:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
9001916e:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
90019172:	42ae      	cmp	r6, r5
90019174:	da16      	bge.n	900191a4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90019176:	4615      	mov	r5, r2
90019178:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
9001917c:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
90019180:	3a08      	subs	r2, #8
90019182:	f855 6f08 	ldr.w	r6, [r5, #8]!
90019186:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
9001918a:	6196      	str	r6, [r2, #24]
9001918c:	42a8      	cmp	r0, r5
9001918e:	686e      	ldr	r6, [r5, #4]
90019190:	f8a2 9010 	strh.w	r9, [r2, #16]
90019194:	61d6      	str	r6, [r2, #28]
90019196:	f8a2 c012 	strh.w	ip, [r2, #18]
9001919a:	f8a2 8014 	strh.w	r8, [r2, #20]
9001919e:	f8a2 e016 	strh.w	lr, [r2, #22]
900191a2:	d1db      	bne.n	9001915c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
900191a4:	3308      	adds	r3, #8
900191a6:	e7d5      	b.n	90019154 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900191a8:	42bc      	cmp	r4, r7
900191aa:	d903      	bls.n	900191b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
900191ac:	e954 0102 	ldrd	r0, r1, [r4, #-8]
900191b0:	3c08      	subs	r4, #8
900191b2:	e6f4      	b.n	90018f9e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900191b4:	b050      	add	sp, #320	@ 0x140
900191b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

900191ba <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
900191ba:	b510      	push	{r4, lr}
900191bc:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900191be:	4604      	mov	r4, r0
900191c0:	07da      	lsls	r2, r3, #31
900191c2:	d507      	bpl.n	900191d4 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
900191c4:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
900191c8:	f7ff fe8c 	bl	90018ee4 <_ZN8touchgfx7Outline6lineToEii>
900191cc:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900191ce:	f023 0301 	bic.w	r3, r3, #1
900191d2:	6243      	str	r3, [r0, #36]	@ 0x24
900191d4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900191d6:	079b      	lsls	r3, r3, #30
900191d8:	d521      	bpl.n	9001921e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
900191da:	6923      	ldr	r3, [r4, #16]
900191dc:	88d9      	ldrh	r1, [r3, #6]
900191de:	889a      	ldrh	r2, [r3, #4]
900191e0:	430a      	orrs	r2, r1
900191e2:	d010      	beq.n	90019206 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900191e4:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900191e8:	2a00      	cmp	r2, #0
900191ea:	db0c      	blt.n	90019206 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900191ec:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
900191ee:	428a      	cmp	r2, r1
900191f0:	da09      	bge.n	90019206 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900191f2:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
900191f6:	4291      	cmp	r1, r2
900191f8:	f102 0201 	add.w	r2, r2, #1
900191fc:	bf88      	it	hi
900191fe:	3308      	addhi	r3, #8
90019200:	60a2      	str	r2, [r4, #8]
90019202:	bf88      	it	hi
90019204:	6123      	strhi	r3, [r4, #16]
90019206:	68a1      	ldr	r1, [r4, #8]
90019208:	b129      	cbz	r1, 90019216 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
9001920a:	6863      	ldr	r3, [r4, #4]
9001920c:	4299      	cmp	r1, r3
9001920e:	d802      	bhi.n	90019216 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90019210:	68e0      	ldr	r0, [r4, #12]
90019212:	f7ff febd 	bl	90018f90 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
90019216:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90019218:	f023 0302 	bic.w	r3, r3, #2
9001921c:	6263      	str	r3, [r4, #36]	@ 0x24
9001921e:	68e0      	ldr	r0, [r4, #12]
90019220:	bd10      	pop	{r4, pc}
	...

90019224 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
90019224:	4b02      	ldr	r3, [pc, #8]	@ (90019230 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
90019226:	6018      	str	r0, [r3, #0]
90019228:	4b02      	ldr	r3, [pc, #8]	@ (90019234 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
9001922a:	6019      	str	r1, [r3, #0]
9001922c:	4770      	bx	lr
9001922e:	bf00      	nop
90019230:	24027ea4 	.word	0x24027ea4
90019234:	24027ea8 	.word	0x24027ea8

90019238 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
90019238:	2300      	movs	r3, #0
9001923a:	4a02      	ldr	r2, [pc, #8]	@ (90019244 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
9001923c:	6013      	str	r3, [r2, #0]
9001923e:	4a02      	ldr	r2, [pc, #8]	@ (90019248 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
90019240:	6013      	str	r3, [r2, #0]
90019242:	4770      	bx	lr
90019244:	24027ea4 	.word	0x24027ea4
90019248:	24027ea8 	.word	0x24027ea8

9001924c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
9001924c:	4b01      	ldr	r3, [pc, #4]	@ (90019254 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
9001924e:	6818      	ldr	r0, [r3, #0]
90019250:	4770      	bx	lr
90019252:	bf00      	nop
90019254:	24027ea4 	.word	0x24027ea4

90019258 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90019258:	4b01      	ldr	r3, [pc, #4]	@ (90019260 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
9001925a:	6818      	ldr	r0, [r3, #0]
9001925c:	4770      	bx	lr
9001925e:	bf00      	nop
90019260:	24027ea8 	.word	0x24027ea8

90019264 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90019264:	b510      	push	{r4, lr}
90019266:	6803      	ldr	r3, [r0, #0]
90019268:	460c      	mov	r4, r1
9001926a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001926c:	4798      	blx	r3
9001926e:	1b03      	subs	r3, r0, r4
90019270:	4258      	negs	r0, r3
90019272:	4158      	adcs	r0, r3
90019274:	bd10      	pop	{r4, pc}
	...

90019278 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
90019278:	4b01      	ldr	r3, [pc, #4]	@ (90019280 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
9001927a:	6019      	str	r1, [r3, #0]
9001927c:	4770      	bx	lr
9001927e:	bf00      	nop
90019280:	24027eac 	.word	0x24027eac

90019284 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90019284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019288:	4696      	mov	lr, r2
9001928a:	b097      	sub	sp, #92	@ 0x5c
9001928c:	4605      	mov	r5, r0
9001928e:	4614      	mov	r4, r2
90019290:	460e      	mov	r6, r1
90019292:	461f      	mov	r7, r3
90019294:	f10d 0c1c 	add.w	ip, sp, #28
90019298:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
9001929c:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
900192a0:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
900192a4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900192a8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900192ac:	f8de 3000 	ldr.w	r3, [lr]
900192b0:	f104 0e14 	add.w	lr, r4, #20
900192b4:	f8cc 3000 	str.w	r3, [ip]
900192b8:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
900192bc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900192c0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900192c4:	f8de 3000 	ldr.w	r3, [lr]
900192c8:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
900192cc:	f8cc 3000 	str.w	r3, [ip]
900192d0:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
900192d4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900192d8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900192dc:	f8de 3000 	ldr.w	r3, [lr]
900192e0:	4631      	mov	r1, r6
900192e2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900192e4:	4628      	mov	r0, r5
900192e6:	f8cc 3000 	str.w	r3, [ip]
900192ea:	682b      	ldr	r3, [r5, #0]
900192ec:	9201      	str	r2, [sp, #4]
900192ee:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900192f0:	f8cd 8008 	str.w	r8, [sp, #8]
900192f4:	9200      	str	r2, [sp, #0]
900192f6:	aa07      	add	r2, sp, #28
900192f8:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900192fc:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
90019300:	463b      	mov	r3, r7
90019302:	47d8      	blx	fp
90019304:	46a6      	mov	lr, r4
90019306:	f10d 0c1c 	add.w	ip, sp, #28
9001930a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001930e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90019312:	f8de 3000 	ldr.w	r3, [lr]
90019316:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
9001931a:	343c      	adds	r4, #60	@ 0x3c
9001931c:	f8cc 3000 	str.w	r3, [ip]
90019320:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90019324:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90019328:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001932c:	f8de 3000 	ldr.w	r3, [lr]
90019330:	f8cc 3000 	str.w	r3, [ip]
90019334:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90019338:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9001933a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001933e:	6823      	ldr	r3, [r4, #0]
90019340:	4631      	mov	r1, r6
90019342:	4628      	mov	r0, r5
90019344:	f8cc 3000 	str.w	r3, [ip]
90019348:	682b      	ldr	r3, [r5, #0]
9001934a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
9001934e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90019350:	f8cd 8008 	str.w	r8, [sp, #8]
90019354:	9201      	str	r2, [sp, #4]
90019356:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90019358:	9200      	str	r2, [sp, #0]
9001935a:	aa07      	add	r2, sp, #28
9001935c:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
9001935e:	463b      	mov	r3, r7
90019360:	47a0      	blx	r4
90019362:	b017      	add	sp, #92	@ 0x5c
90019364:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019368 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90019368:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001936c:	b08d      	sub	sp, #52	@ 0x34
9001936e:	4688      	mov	r8, r1
90019370:	f8d3 c000 	ldr.w	ip, [r3]
90019374:	9916      	ldr	r1, [sp, #88]	@ 0x58
90019376:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
9001937a:	680f      	ldr	r7, [r1, #0]
9001937c:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
90019380:	eba7 070c 	sub.w	r7, r7, ip
90019384:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
90019388:	edd3 6a07 	vldr	s13, [r3, #28]
9001938c:	42bc      	cmp	r4, r7
9001938e:	9918      	ldr	r1, [sp, #96]	@ 0x60
90019390:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
90019394:	bfa8      	it	ge
90019396:	463c      	movge	r4, r7
90019398:	f9b1 9000 	ldrsh.w	r9, [r1]
9001939c:	f9ba 1000 	ldrsh.w	r1, [sl]
900193a0:	ee07 4a90 	vmov	s15, r4
900193a4:	eb09 0e0c 	add.w	lr, r9, ip
900193a8:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
900193ac:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
900193b0:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
900193b4:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
900193b8:	4571      	cmp	r1, lr
900193ba:	ee25 4a04 	vmul.f32	s8, s10, s8
900193be:	ee65 4a24 	vmul.f32	s9, s10, s9
900193c2:	ee25 5a27 	vmul.f32	s10, s10, s15
900193c6:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
900193ca:	ee71 0aa4 	vadd.f32	s1, s3, s9
900193ce:	ee32 1a05 	vadd.f32	s2, s4, s10
900193d2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
900193d6:	ee36 0a84 	vadd.f32	s0, s13, s8
900193da:	ee61 1a87 	vmul.f32	s3, s3, s14
900193de:	ee22 2a07 	vmul.f32	s4, s4, s14
900193e2:	f340 808c 	ble.w	900194fe <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
900193e6:	eba1 060e 	sub.w	r6, r1, lr
900193ea:	fb96 f5f4 	sdiv	r5, r6, r4
900193ee:	ee07 5a10 	vmov	s14, r5
900193f2:	2d00      	cmp	r5, #0
900193f4:	fb04 6615 	mls	r6, r4, r5, r6
900193f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900193fc:	eea7 0a04 	vfma.f32	s0, s14, s8
90019400:	eee7 0a24 	vfma.f32	s1, s14, s9
90019404:	eea7 1a05 	vfma.f32	s2, s14, s10
90019408:	dd12      	ble.n	90019430 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
9001940a:	ee70 6a44 	vsub.f32	s13, s0, s8
9001940e:	ee70 1ae4 	vsub.f32	s3, s1, s9
90019412:	ee31 2a45 	vsub.f32	s4, s2, s10
90019416:	eef5 6a40 	vcmp.f32	s13, #0.0
9001941a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001941e:	bf14      	ite	ne
90019420:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90019424:	eeb0 7a67 	vmoveq.f32	s14, s15
90019428:	ee61 1a87 	vmul.f32	s3, s3, s14
9001942c:	ee22 2a07 	vmul.f32	s4, s4, s14
90019430:	fb05 f204 	mul.w	r2, r5, r4
90019434:	1abf      	subs	r7, r7, r2
90019436:	4494      	add	ip, r2
90019438:	f8ba 2004 	ldrh.w	r2, [sl, #4]
9001943c:	4411      	add	r1, r2
9001943e:	eb09 020c 	add.w	r2, r9, ip
90019442:	b209      	sxth	r1, r1
90019444:	443a      	add	r2, r7
90019446:	428a      	cmp	r2, r1
90019448:	bfc4      	itt	gt
9001944a:	eba1 0209 	subgt.w	r2, r1, r9
9001944e:	eba2 070c 	subgt.w	r7, r2, ip
90019452:	2f00      	cmp	r7, #0
90019454:	dd50      	ble.n	900194f8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90019456:	fb97 f1f4 	sdiv	r1, r7, r4
9001945a:	fb04 7211 	mls	r2, r4, r1, r7
9001945e:	b90a      	cbnz	r2, 90019464 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90019460:	3901      	subs	r1, #1
90019462:	4622      	mov	r2, r4
90019464:	eec7 3a80 	vdiv.f32	s7, s15, s0
90019468:	6840      	ldr	r0, [r0, #4]
9001946a:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
9001946e:	44b6      	add	lr, r6
90019470:	f8d0 a000 	ldr.w	sl, [r0]
90019474:	2900      	cmp	r1, #0
90019476:	bfcc      	ite	gt
90019478:	46a1      	movgt	r9, r4
9001947a:	4691      	movle	r9, r2
9001947c:	900b      	str	r0, [sp, #44]	@ 0x2c
9001947e:	9817      	ldr	r0, [sp, #92]	@ 0x5c
90019480:	fb04 e505 	mla	r5, r4, r5, lr
90019484:	eef0 6a42 	vmov.f32	s13, s4
90019488:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
9001948c:	9008      	str	r0, [sp, #32]
9001948e:	eeb0 7a61 	vmov.f32	s14, s3
90019492:	9818      	ldr	r0, [sp, #96]	@ 0x60
90019494:	695b      	ldr	r3, [r3, #20]
90019496:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001949a:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
9001949e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
900194a2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
900194a4:	445b      	add	r3, fp
900194a6:	9307      	str	r3, [sp, #28]
900194a8:	ee16 3a90 	vmov	r3, s13
900194ac:	e9cd 8505 	strd	r8, r5, [sp, #20]
900194b0:	ee60 2aa3 	vmul.f32	s5, s1, s7
900194b4:	ee21 3a23 	vmul.f32	s6, s2, s7
900194b8:	ee72 7ae1 	vsub.f32	s15, s5, s3
900194bc:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
900194c0:	ee17 7a90 	vmov	r7, s15
900194c4:	ee73 7a42 	vsub.f32	s15, s6, s4
900194c8:	fb97 f7f4 	sdiv	r7, r7, r4
900194cc:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
900194d0:	ee17 ca90 	vmov	ip, s15
900194d4:	fb9c fcf4 	sdiv	ip, ip, r4
900194d8:	fb0c 3306 	mla	r3, ip, r6, r3
900194dc:	9302      	str	r3, [sp, #8]
900194de:	ee17 3a10 	vmov	r3, s14
900194e2:	e9cd 7c03 	strd	r7, ip, [sp, #12]
900194e6:	fb07 3706 	mla	r7, r7, r6, r3
900194ea:	eba9 0306 	sub.w	r3, r9, r6
900194ee:	e9cd 4700 	strd	r4, r7, [sp]
900194f2:	f8da 4008 	ldr.w	r4, [sl, #8]
900194f6:	47a0      	blx	r4
900194f8:	b00d      	add	sp, #52	@ 0x34
900194fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900194fe:	2500      	movs	r5, #0
90019500:	462e      	mov	r6, r5
90019502:	e799      	b.n	90019438 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90019504 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90019504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019508:	b0db      	sub	sp, #364	@ 0x16c
9001950a:	461d      	mov	r5, r3
9001950c:	4614      	mov	r4, r2
9001950e:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
90019512:	910f      	str	r1, [sp, #60]	@ 0x3c
90019514:	4629      	mov	r1, r5
90019516:	930a      	str	r3, [sp, #40]	@ 0x28
90019518:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
9001951c:	9009      	str	r0, [sp, #36]	@ 0x24
9001951e:	930b      	str	r3, [sp, #44]	@ 0x2c
90019520:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
90019524:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
90019528:	9310      	str	r3, [sp, #64]	@ 0x40
9001952a:	6803      	ldr	r3, [r0, #0]
9001952c:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
9001952e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
90019532:	47b8      	blx	r7
90019534:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90019536:	6058      	str	r0, [r3, #4]
90019538:	2800      	cmp	r0, #0
9001953a:	f000 83a1 	beq.w	90019c80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001953e:	682b      	ldr	r3, [r5, #0]
90019540:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
90019544:	ed94 7a02 	vldr	s14, [r4, #8]
90019548:	9314      	str	r3, [sp, #80]	@ 0x50
9001954a:	686b      	ldr	r3, [r5, #4]
9001954c:	eeb4 7ae7 	vcmpe.f32	s14, s15
90019550:	9315      	str	r3, [sp, #84]	@ 0x54
90019552:	4bc1      	ldr	r3, [pc, #772]	@ (90019858 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90019554:	7819      	ldrb	r1, [r3, #0]
90019556:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
9001955a:	2900      	cmp	r1, #0
9001955c:	bf16      	itet	ne
9001955e:	4619      	movne	r1, r3
90019560:	4611      	moveq	r1, r2
90019562:	4613      	movne	r3, r2
90019564:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90019568:	9116      	str	r1, [sp, #88]	@ 0x58
9001956a:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
9001956e:	f240 8387 	bls.w	90019c80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90019572:	ed94 7a07 	vldr	s14, [r4, #28]
90019576:	eeb4 7ae7 	vcmpe.f32	s14, s15
9001957a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001957e:	f240 837f 	bls.w	90019c80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90019582:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
90019586:	eeb4 7ae7 	vcmpe.f32	s14, s15
9001958a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001958e:	f240 8377 	bls.w	90019c80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90019592:	6822      	ldr	r2, [r4, #0]
90019594:	4bb1      	ldr	r3, [pc, #708]	@ (9001985c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90019596:	429a      	cmp	r2, r3
90019598:	f2c0 8372 	blt.w	90019c80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001959c:	49b0      	ldr	r1, [pc, #704]	@ (90019860 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
9001959e:	6963      	ldr	r3, [r4, #20]
900195a0:	428a      	cmp	r2, r1
900195a2:	f300 836d 	bgt.w	90019c80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900195a6:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
900195aa:	48ae      	ldr	r0, [pc, #696]	@ (90019864 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
900195ac:	33ff      	adds	r3, #255	@ 0xff
900195ae:	4283      	cmp	r3, r0
900195b0:	f200 8366 	bhi.w	90019c80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900195b4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
900195b6:	4dac      	ldr	r5, [pc, #688]	@ (90019868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
900195b8:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
900195bc:	33ff      	adds	r3, #255	@ 0xff
900195be:	42ab      	cmp	r3, r5
900195c0:	f200 835e 	bhi.w	90019c80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900195c4:	6862      	ldr	r2, [r4, #4]
900195c6:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
900195ca:	33ff      	adds	r3, #255	@ 0xff
900195cc:	4283      	cmp	r3, r0
900195ce:	f200 8357 	bhi.w	90019c80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900195d2:	69a1      	ldr	r1, [r4, #24]
900195d4:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
900195d8:	33ff      	adds	r3, #255	@ 0xff
900195da:	4283      	cmp	r3, r0
900195dc:	f200 8350 	bhi.w	90019c80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900195e0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900195e2:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
900195e6:	30ff      	adds	r0, #255	@ 0xff
900195e8:	42a8      	cmp	r0, r5
900195ea:	f200 8349 	bhi.w	90019c80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900195ee:	428a      	cmp	r2, r1
900195f0:	f280 8110 	bge.w	90019814 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
900195f4:	429a      	cmp	r2, r3
900195f6:	f300 8119 	bgt.w	9001982c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
900195fa:	4299      	cmp	r1, r3
900195fc:	f280 811d 	bge.w	9001983a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90019600:	2502      	movs	r5, #2
90019602:	2701      	movs	r7, #1
90019604:	46a9      	mov	r9, r5
90019606:	46b8      	mov	r8, r7
90019608:	f04f 0a00 	mov.w	sl, #0
9001960c:	4621      	mov	r1, r4
9001960e:	a849      	add	r0, sp, #292	@ 0x124
90019610:	f003 fee2 	bl	9001d3d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90019614:	4622      	mov	r2, r4
90019616:	4653      	mov	r3, sl
90019618:	a949      	add	r1, sp, #292	@ 0x124
9001961a:	f8cd 9000 	str.w	r9, [sp]
9001961e:	a819      	add	r0, sp, #100	@ 0x64
90019620:	f004 f80a 	bl	9001d638 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90019624:	4622      	mov	r2, r4
90019626:	4653      	mov	r3, sl
90019628:	a949      	add	r1, sp, #292	@ 0x124
9001962a:	f8cd 8000 	str.w	r8, [sp]
9001962e:	a829      	add	r0, sp, #164	@ 0xa4
90019630:	f004 f802 	bl	9001d638 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90019634:	4643      	mov	r3, r8
90019636:	4622      	mov	r2, r4
90019638:	a949      	add	r1, sp, #292	@ 0x124
9001963a:	f8cd 9000 	str.w	r9, [sp]
9001963e:	a839      	add	r0, sp, #228	@ 0xe4
90019640:	f003 fffa 	bl	9001d638 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90019644:	42af      	cmp	r7, r5
90019646:	af12      	add	r7, sp, #72	@ 0x48
90019648:	bfb7      	itett	lt
9001964a:	2300      	movlt	r3, #0
9001964c:	2301      	movge	r3, #1
9001964e:	ad29      	addlt	r5, sp, #164	@ 0xa4
90019650:	ac19      	addlt	r4, sp, #100	@ 0x64
90019652:	bfb1      	iteee	lt
90019654:	930e      	strlt	r3, [sp, #56]	@ 0x38
90019656:	ad19      	addge	r5, sp, #100	@ 0x64
90019658:	930e      	strge	r3, [sp, #56]	@ 0x38
9001965a:	ac29      	addge	r4, sp, #164	@ 0xa4
9001965c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001965e:	e893 0003 	ldmia.w	r3, {r0, r1}
90019662:	e887 0003 	stmia.w	r7, {r0, r1}
90019666:	b928      	cbnz	r0, 90019674 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90019668:	4b80      	ldr	r3, [pc, #512]	@ (9001986c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
9001966a:	6818      	ldr	r0, [r3, #0]
9001966c:	6803      	ldr	r3, [r0, #0]
9001966e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90019670:	4798      	blx	r3
90019672:	6038      	str	r0, [r7, #0]
90019674:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90019676:	f8bb 0006 	ldrh.w	r0, [fp, #6]
9001967a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001967e:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
90019680:	930c      	str	r3, [sp, #48]	@ 0x30
90019682:	990c      	ldr	r1, [sp, #48]	@ 0x30
90019684:	6963      	ldr	r3, [r4, #20]
90019686:	440b      	add	r3, r1
90019688:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
9001968c:	4408      	add	r0, r1
9001968e:	b200      	sxth	r0, r0
90019690:	4283      	cmp	r3, r0
90019692:	900d      	str	r0, [sp, #52]	@ 0x34
90019694:	f280 80dd 	bge.w	90019852 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90019698:	428b      	cmp	r3, r1
9001969a:	da08      	bge.n	900196ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
9001969c:	2a00      	cmp	r2, #0
9001969e:	dd06      	ble.n	900196ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
900196a0:	1acb      	subs	r3, r1, r3
900196a2:	429a      	cmp	r2, r3
900196a4:	f2c0 80e4 	blt.w	90019870 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
900196a8:	2b00      	cmp	r3, #0
900196aa:	f300 80e2 	bgt.w	90019872 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
900196ae:	6967      	ldr	r7, [r4, #20]
900196b0:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
900196b4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900196b6:	443b      	add	r3, r7
900196b8:	461f      	mov	r7, r3
900196ba:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900196bc:	1bdf      	subs	r7, r3, r7
900196be:	4297      	cmp	r7, r2
900196c0:	bfa8      	it	ge
900196c2:	4617      	movge	r7, r2
900196c4:	2f00      	cmp	r7, #0
900196c6:	f340 8166 	ble.w	90019996 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
900196ca:	9b64      	ldr	r3, [sp, #400]	@ 0x190
900196cc:	6829      	ldr	r1, [r5, #0]
900196ce:	f9b3 2000 	ldrsh.w	r2, [r3]
900196d2:	f9bb 3000 	ldrsh.w	r3, [fp]
900196d6:	4411      	add	r1, r2
900196d8:	6820      	ldr	r0, [r4, #0]
900196da:	4299      	cmp	r1, r3
900196dc:	dd1a      	ble.n	90019714 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
900196de:	f8bb 1004 	ldrh.w	r1, [fp, #4]
900196e2:	4402      	add	r2, r0
900196e4:	440b      	add	r3, r1
900196e6:	b21b      	sxth	r3, r3
900196e8:	429a      	cmp	r2, r3
900196ea:	dc13      	bgt.n	90019714 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
900196ec:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900196ee:	a912      	add	r1, sp, #72	@ 0x48
900196f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900196f2:	9809      	ldr	r0, [sp, #36]	@ 0x24
900196f4:	681b      	ldr	r3, [r3, #0]
900196f6:	9206      	str	r2, [sp, #24]
900196f8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900196fa:	9500      	str	r5, [sp, #0]
900196fc:	9205      	str	r2, [sp, #20]
900196fe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90019700:	e9cd b203 	strd	fp, r2, [sp, #12]
90019704:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90019706:	e9cd 8201 	strd	r8, r2, [sp, #4]
9001970a:	aa49      	add	r2, sp, #292	@ 0x124
9001970c:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90019710:	4623      	mov	r3, r4
90019712:	47c8      	blx	r9
90019714:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90019718:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
9001971c:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90019720:	ee37 7a27 	vadd.f32	s14, s14, s15
90019724:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90019728:	68a1      	ldr	r1, [r4, #8]
9001972a:	ee77 7aa6 	vadd.f32	s15, s15, s13
9001972e:	ed94 6a08 	vldr	s12, [r4, #32]
90019732:	edd4 6a07 	vldr	s13, [r4, #28]
90019736:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
9001973a:	ee76 6a86 	vadd.f32	s13, s13, s12
9001973e:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90019742:	e9d4 2300 	ldrd	r2, r3, [r4]
90019746:	edc4 6a07 	vstr	s13, [r4, #28]
9001974a:	441a      	add	r2, r3
9001974c:	6963      	ldr	r3, [r4, #20]
9001974e:	3301      	adds	r3, #1
90019750:	6022      	str	r2, [r4, #0]
90019752:	6163      	str	r3, [r4, #20]
90019754:	69a3      	ldr	r3, [r4, #24]
90019756:	3b01      	subs	r3, #1
90019758:	61a3      	str	r3, [r4, #24]
9001975a:	6923      	ldr	r3, [r4, #16]
9001975c:	440b      	add	r3, r1
9001975e:	68e1      	ldr	r1, [r4, #12]
90019760:	428b      	cmp	r3, r1
90019762:	6123      	str	r3, [r4, #16]
90019764:	db15      	blt.n	90019792 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90019766:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
9001976a:	3201      	adds	r2, #1
9001976c:	1a5b      	subs	r3, r3, r1
9001976e:	ee76 6a26 	vadd.f32	s13, s12, s13
90019772:	6022      	str	r2, [r4, #0]
90019774:	6123      	str	r3, [r4, #16]
90019776:	edc4 6a07 	vstr	s13, [r4, #28]
9001977a:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
9001977e:	ee36 7a87 	vadd.f32	s14, s13, s14
90019782:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90019786:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
9001978a:	ee77 7a27 	vadd.f32	s15, s14, s15
9001978e:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90019792:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90019796:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
9001979a:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
9001979e:	ee37 7a27 	vadd.f32	s14, s14, s15
900197a2:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
900197a6:	68a9      	ldr	r1, [r5, #8]
900197a8:	ee77 7aa6 	vadd.f32	s15, s15, s13
900197ac:	ed95 6a08 	vldr	s12, [r5, #32]
900197b0:	edd5 6a07 	vldr	s13, [r5, #28]
900197b4:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
900197b8:	ee76 6a86 	vadd.f32	s13, s13, s12
900197bc:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
900197c0:	e9d5 2300 	ldrd	r2, r3, [r5]
900197c4:	edc5 6a07 	vstr	s13, [r5, #28]
900197c8:	441a      	add	r2, r3
900197ca:	696b      	ldr	r3, [r5, #20]
900197cc:	3301      	adds	r3, #1
900197ce:	602a      	str	r2, [r5, #0]
900197d0:	616b      	str	r3, [r5, #20]
900197d2:	69ab      	ldr	r3, [r5, #24]
900197d4:	3b01      	subs	r3, #1
900197d6:	61ab      	str	r3, [r5, #24]
900197d8:	692b      	ldr	r3, [r5, #16]
900197da:	440b      	add	r3, r1
900197dc:	68e9      	ldr	r1, [r5, #12]
900197de:	428b      	cmp	r3, r1
900197e0:	612b      	str	r3, [r5, #16]
900197e2:	db15      	blt.n	90019810 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
900197e4:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
900197e8:	3201      	adds	r2, #1
900197ea:	1a5b      	subs	r3, r3, r1
900197ec:	ee76 6a26 	vadd.f32	s13, s12, s13
900197f0:	602a      	str	r2, [r5, #0]
900197f2:	612b      	str	r3, [r5, #16]
900197f4:	edc5 6a07 	vstr	s13, [r5, #28]
900197f8:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
900197fc:	ee36 7a87 	vadd.f32	s14, s13, s14
90019800:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90019804:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90019808:	ee77 7a27 	vadd.f32	s15, s14, s15
9001980c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90019810:	3f01      	subs	r7, #1
90019812:	e757      	b.n	900196c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90019814:	4299      	cmp	r1, r3
90019816:	dc13      	bgt.n	90019840 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90019818:	429a      	cmp	r2, r3
9001981a:	da14      	bge.n	90019846 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
9001981c:	2502      	movs	r5, #2
9001981e:	2703      	movs	r7, #3
90019820:	f04f 0800 	mov.w	r8, #0
90019824:	46a9      	mov	r9, r5
90019826:	f04f 0a01 	mov.w	sl, #1
9001982a:	e6ef      	b.n	9001960c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
9001982c:	2501      	movs	r5, #1
9001982e:	2700      	movs	r7, #0
90019830:	46a9      	mov	r9, r5
90019832:	46b8      	mov	r8, r7
90019834:	f04f 0a02 	mov.w	sl, #2
90019838:	e6e8      	b.n	9001960c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
9001983a:	2501      	movs	r5, #1
9001983c:	2702      	movs	r7, #2
9001983e:	e6e1      	b.n	90019604 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90019840:	2500      	movs	r5, #0
90019842:	2701      	movs	r7, #1
90019844:	e7f4      	b.n	90019830 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90019846:	2702      	movs	r7, #2
90019848:	2503      	movs	r5, #3
9001984a:	f04f 0900 	mov.w	r9, #0
9001984e:	46b8      	mov	r8, r7
90019850:	e7e9      	b.n	90019826 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90019852:	4613      	mov	r3, r2
90019854:	e728      	b.n	900196a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90019856:	bf00      	nop
90019858:	24027e94 	.word	0x24027e94
9001985c:	fffd8f01 	.word	0xfffd8f01
90019860:	00027100 	.word	0x00027100
90019864:	0004e1ff 	.word	0x0004e1ff
90019868:	0004e1fe 	.word	0x0004e1fe
9001986c:	24027e9c 	.word	0x24027e9c
90019870:	4613      	mov	r3, r2
90019872:	992b      	ldr	r1, [sp, #172]	@ 0xac
90019874:	469e      	mov	lr, r3
90019876:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
90019878:	469c      	mov	ip, r3
9001987a:	9111      	str	r1, [sp, #68]	@ 0x44
9001987c:	f04f 0900 	mov.w	r9, #0
90019880:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
90019884:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
90019888:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
9001988c:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
90019890:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
90019894:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
90019898:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
9001989c:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
900198a0:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
900198a4:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
900198a8:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
900198ac:	f1bc 0f00 	cmp.w	ip, #0
900198b0:	d147      	bne.n	90019942 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
900198b2:	eb03 0c07 	add.w	ip, r3, r7
900198b6:	1ad7      	subs	r7, r2, r3
900198b8:	f1b9 0f00 	cmp.w	r9, #0
900198bc:	d009      	beq.n	900198d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
900198be:	9029      	str	r0, [sp, #164]	@ 0xa4
900198c0:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
900198c4:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
900198c8:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
900198cc:	912d      	str	r1, [sp, #180]	@ 0xb4
900198ce:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
900198d2:	991b      	ldr	r1, [sp, #108]	@ 0x6c
900198d4:	f04f 0800 	mov.w	r8, #0
900198d8:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
900198dc:	9111      	str	r1, [sp, #68]	@ 0x44
900198de:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
900198e2:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
900198e6:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
900198ea:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
900198ee:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
900198f2:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
900198f6:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
900198fa:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
900198fe:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90019902:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90019906:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
9001990a:	f1be 0f00 	cmp.w	lr, #0
9001990e:	d031      	beq.n	90019974 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90019910:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90019912:	4450      	add	r0, sl
90019914:	ee76 6aa4 	vadd.f32	s13, s13, s9
90019918:	4431      	add	r1, r6
9001991a:	ee37 7a04 	vadd.f32	s14, s14, s8
9001991e:	ee77 7aa3 	vadd.f32	s15, s15, s7
90019922:	4549      	cmp	r1, r9
90019924:	db08      	blt.n	90019938 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90019926:	ee77 7a85 	vadd.f32	s15, s15, s10
9001992a:	3001      	adds	r0, #1
9001992c:	ee76 6aa5 	vadd.f32	s13, s13, s11
90019930:	eba1 0109 	sub.w	r1, r1, r9
90019934:	ee37 7a06 	vadd.f32	s14, s14, s12
90019938:	f10e 3eff 	add.w	lr, lr, #4294967295
9001993c:	f04f 0801 	mov.w	r8, #1
90019940:	e7e3      	b.n	9001990a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90019942:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90019944:	4450      	add	r0, sl
90019946:	ee37 7a24 	vadd.f32	s14, s14, s9
9001994a:	4431      	add	r1, r6
9001994c:	ee77 7a84 	vadd.f32	s15, s15, s8
90019950:	ee76 6aa3 	vadd.f32	s13, s13, s7
90019954:	4541      	cmp	r1, r8
90019956:	db08      	blt.n	9001996a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90019958:	ee76 6a85 	vadd.f32	s13, s13, s10
9001995c:	3001      	adds	r0, #1
9001995e:	ee37 7a25 	vadd.f32	s14, s14, s11
90019962:	eba1 0108 	sub.w	r1, r1, r8
90019966:	ee77 7a86 	vadd.f32	s15, s15, s12
9001996a:	f10c 3cff 	add.w	ip, ip, #4294967295
9001996e:	f04f 0901 	mov.w	r9, #1
90019972:	e79b      	b.n	900198ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90019974:	449c      	add	ip, r3
90019976:	1aff      	subs	r7, r7, r3
90019978:	f1b8 0f00 	cmp.w	r8, #0
9001997c:	d009      	beq.n	90019992 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
9001997e:	9019      	str	r0, [sp, #100]	@ 0x64
90019980:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90019984:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90019988:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
9001998c:	911d      	str	r1, [sp, #116]	@ 0x74
9001998e:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90019992:	1ad2      	subs	r2, r2, r3
90019994:	e68b      	b.n	900196ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90019996:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019998:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
9001999a:	2b00      	cmp	r3, #0
9001999c:	f000 80d1 	beq.w	90019b42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
900199a0:	ad19      	add	r5, sp, #100	@ 0x64
900199a2:	ac39      	add	r4, sp, #228	@ 0xe4
900199a4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
900199a6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
900199aa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900199ae:	930c      	str	r3, [sp, #48]	@ 0x30
900199b0:	990c      	ldr	r1, [sp, #48]	@ 0x30
900199b2:	6963      	ldr	r3, [r4, #20]
900199b4:	440b      	add	r3, r1
900199b6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
900199ba:	4408      	add	r0, r1
900199bc:	b200      	sxth	r0, r0
900199be:	4283      	cmp	r3, r0
900199c0:	900d      	str	r0, [sp, #52]	@ 0x34
900199c2:	f280 80c1 	bge.w	90019b48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
900199c6:	428b      	cmp	r3, r1
900199c8:	da08      	bge.n	900199dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900199ca:	2a00      	cmp	r2, #0
900199cc:	dd06      	ble.n	900199dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900199ce:	1acb      	subs	r3, r1, r3
900199d0:	429a      	cmp	r2, r3
900199d2:	f2c0 80bb 	blt.w	90019b4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
900199d6:	2b00      	cmp	r3, #0
900199d8:	f300 80b9 	bgt.w	90019b4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
900199dc:	6967      	ldr	r7, [r4, #20]
900199de:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
900199e2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900199e4:	443b      	add	r3, r7
900199e6:	461f      	mov	r7, r3
900199e8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900199ea:	1bdf      	subs	r7, r3, r7
900199ec:	4297      	cmp	r7, r2
900199ee:	bfa8      	it	ge
900199f0:	4617      	movge	r7, r2
900199f2:	2f00      	cmp	r7, #0
900199f4:	f340 813c 	ble.w	90019c70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
900199f8:	9b64      	ldr	r3, [sp, #400]	@ 0x190
900199fa:	6829      	ldr	r1, [r5, #0]
900199fc:	f9b3 2000 	ldrsh.w	r2, [r3]
90019a00:	f9bb 3000 	ldrsh.w	r3, [fp]
90019a04:	4411      	add	r1, r2
90019a06:	6820      	ldr	r0, [r4, #0]
90019a08:	4299      	cmp	r1, r3
90019a0a:	dd1a      	ble.n	90019a42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90019a0c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90019a10:	4402      	add	r2, r0
90019a12:	440b      	add	r3, r1
90019a14:	b21b      	sxth	r3, r3
90019a16:	429a      	cmp	r2, r3
90019a18:	dc13      	bgt.n	90019a42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90019a1a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90019a1c:	a912      	add	r1, sp, #72	@ 0x48
90019a1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90019a20:	9809      	ldr	r0, [sp, #36]	@ 0x24
90019a22:	681b      	ldr	r3, [r3, #0]
90019a24:	9206      	str	r2, [sp, #24]
90019a26:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90019a28:	9500      	str	r5, [sp, #0]
90019a2a:	9205      	str	r2, [sp, #20]
90019a2c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90019a2e:	e9cd b203 	strd	fp, r2, [sp, #12]
90019a32:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90019a34:	e9cd 8201 	strd	r8, r2, [sp, #4]
90019a38:	aa49      	add	r2, sp, #292	@ 0x124
90019a3a:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90019a3e:	4623      	mov	r3, r4
90019a40:	47c8      	blx	r9
90019a42:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90019a46:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90019a4a:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90019a4e:	ee37 7a27 	vadd.f32	s14, s14, s15
90019a52:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90019a56:	68a1      	ldr	r1, [r4, #8]
90019a58:	ee77 7aa6 	vadd.f32	s15, s15, s13
90019a5c:	ed94 6a08 	vldr	s12, [r4, #32]
90019a60:	edd4 6a07 	vldr	s13, [r4, #28]
90019a64:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90019a68:	ee76 6a86 	vadd.f32	s13, s13, s12
90019a6c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90019a70:	e9d4 2300 	ldrd	r2, r3, [r4]
90019a74:	edc4 6a07 	vstr	s13, [r4, #28]
90019a78:	441a      	add	r2, r3
90019a7a:	6963      	ldr	r3, [r4, #20]
90019a7c:	3301      	adds	r3, #1
90019a7e:	6022      	str	r2, [r4, #0]
90019a80:	6163      	str	r3, [r4, #20]
90019a82:	69a3      	ldr	r3, [r4, #24]
90019a84:	3b01      	subs	r3, #1
90019a86:	61a3      	str	r3, [r4, #24]
90019a88:	6923      	ldr	r3, [r4, #16]
90019a8a:	440b      	add	r3, r1
90019a8c:	68e1      	ldr	r1, [r4, #12]
90019a8e:	428b      	cmp	r3, r1
90019a90:	6123      	str	r3, [r4, #16]
90019a92:	db15      	blt.n	90019ac0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90019a94:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90019a98:	3201      	adds	r2, #1
90019a9a:	1a5b      	subs	r3, r3, r1
90019a9c:	ee76 6a26 	vadd.f32	s13, s12, s13
90019aa0:	6022      	str	r2, [r4, #0]
90019aa2:	6123      	str	r3, [r4, #16]
90019aa4:	edc4 6a07 	vstr	s13, [r4, #28]
90019aa8:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90019aac:	ee36 7a87 	vadd.f32	s14, s13, s14
90019ab0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90019ab4:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90019ab8:	ee77 7a27 	vadd.f32	s15, s14, s15
90019abc:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90019ac0:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90019ac4:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90019ac8:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90019acc:	ee37 7a27 	vadd.f32	s14, s14, s15
90019ad0:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90019ad4:	68a9      	ldr	r1, [r5, #8]
90019ad6:	ee77 7aa6 	vadd.f32	s15, s15, s13
90019ada:	ed95 6a08 	vldr	s12, [r5, #32]
90019ade:	edd5 6a07 	vldr	s13, [r5, #28]
90019ae2:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90019ae6:	ee76 6a86 	vadd.f32	s13, s13, s12
90019aea:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90019aee:	e9d5 2300 	ldrd	r2, r3, [r5]
90019af2:	edc5 6a07 	vstr	s13, [r5, #28]
90019af6:	441a      	add	r2, r3
90019af8:	696b      	ldr	r3, [r5, #20]
90019afa:	3301      	adds	r3, #1
90019afc:	602a      	str	r2, [r5, #0]
90019afe:	616b      	str	r3, [r5, #20]
90019b00:	69ab      	ldr	r3, [r5, #24]
90019b02:	3b01      	subs	r3, #1
90019b04:	61ab      	str	r3, [r5, #24]
90019b06:	692b      	ldr	r3, [r5, #16]
90019b08:	440b      	add	r3, r1
90019b0a:	68e9      	ldr	r1, [r5, #12]
90019b0c:	428b      	cmp	r3, r1
90019b0e:	612b      	str	r3, [r5, #16]
90019b10:	db15      	blt.n	90019b3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90019b12:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90019b16:	3201      	adds	r2, #1
90019b18:	1a5b      	subs	r3, r3, r1
90019b1a:	ee76 6a26 	vadd.f32	s13, s12, s13
90019b1e:	602a      	str	r2, [r5, #0]
90019b20:	612b      	str	r3, [r5, #16]
90019b22:	edc5 6a07 	vstr	s13, [r5, #28]
90019b26:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90019b2a:	ee36 7a87 	vadd.f32	s14, s13, s14
90019b2e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90019b32:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90019b36:	ee77 7a27 	vadd.f32	s15, s14, s15
90019b3a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90019b3e:	3f01      	subs	r7, #1
90019b40:	e757      	b.n	900199f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90019b42:	ad39      	add	r5, sp, #228	@ 0xe4
90019b44:	ac19      	add	r4, sp, #100	@ 0x64
90019b46:	e72d      	b.n	900199a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90019b48:	4613      	mov	r3, r2
90019b4a:	e744      	b.n	900199d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90019b4c:	4613      	mov	r3, r2
90019b4e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
90019b50:	469e      	mov	lr, r3
90019b52:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
90019b56:	461f      	mov	r7, r3
90019b58:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
90019b5c:	f04f 0900 	mov.w	r9, #0
90019b60:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
90019b64:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
90019b68:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
90019b6c:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
90019b70:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
90019b74:	993d      	ldr	r1, [sp, #244]	@ 0xf4
90019b76:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
90019b7a:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
90019b7e:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
90019b82:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
90019b86:	960e      	str	r6, [sp, #56]	@ 0x38
90019b88:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
90019b8c:	2f00      	cmp	r7, #0
90019b8e:	d146      	bne.n	90019c1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
90019b90:	449c      	add	ip, r3
90019b92:	1ad7      	subs	r7, r2, r3
90019b94:	f1b9 0f00 	cmp.w	r9, #0
90019b98:	d009      	beq.n	90019bae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90019b9a:	9039      	str	r0, [sp, #228]	@ 0xe4
90019b9c:	913d      	str	r1, [sp, #244]	@ 0xf4
90019b9e:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
90019ba2:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
90019ba6:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
90019baa:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
90019bae:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90019bb0:	f04f 0800 	mov.w	r8, #0
90019bb4:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90019bb8:	910e      	str	r1, [sp, #56]	@ 0x38
90019bba:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
90019bbe:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
90019bc2:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90019bc6:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90019bca:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
90019bce:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
90019bd2:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90019bd6:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90019bda:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90019bde:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90019be2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90019be6:	f1be 0f00 	cmp.w	lr, #0
90019bea:	d030      	beq.n	90019c4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90019bec:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90019bee:	4450      	add	r0, sl
90019bf0:	ee76 6aa4 	vadd.f32	s13, s13, s9
90019bf4:	4431      	add	r1, r6
90019bf6:	ee37 7a04 	vadd.f32	s14, s14, s8
90019bfa:	ee77 7aa3 	vadd.f32	s15, s15, s7
90019bfe:	4549      	cmp	r1, r9
90019c00:	db08      	blt.n	90019c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90019c02:	ee77 7a85 	vadd.f32	s15, s15, s10
90019c06:	3001      	adds	r0, #1
90019c08:	ee76 6aa5 	vadd.f32	s13, s13, s11
90019c0c:	eba1 0109 	sub.w	r1, r1, r9
90019c10:	ee37 7a06 	vadd.f32	s14, s14, s12
90019c14:	f10e 3eff 	add.w	lr, lr, #4294967295
90019c18:	f04f 0801 	mov.w	r8, #1
90019c1c:	e7e3      	b.n	90019be6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90019c1e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90019c20:	4450      	add	r0, sl
90019c22:	ee37 7a24 	vadd.f32	s14, s14, s9
90019c26:	4431      	add	r1, r6
90019c28:	ee77 7a84 	vadd.f32	s15, s15, s8
90019c2c:	ee76 6aa3 	vadd.f32	s13, s13, s7
90019c30:	4541      	cmp	r1, r8
90019c32:	db08      	blt.n	90019c46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90019c34:	ee76 6a85 	vadd.f32	s13, s13, s10
90019c38:	3001      	adds	r0, #1
90019c3a:	ee37 7a25 	vadd.f32	s14, s14, s11
90019c3e:	eba1 0108 	sub.w	r1, r1, r8
90019c42:	ee77 7a86 	vadd.f32	s15, s15, s12
90019c46:	3f01      	subs	r7, #1
90019c48:	f04f 0901 	mov.w	r9, #1
90019c4c:	e79e      	b.n	90019b8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90019c4e:	449c      	add	ip, r3
90019c50:	1aff      	subs	r7, r7, r3
90019c52:	f1b8 0f00 	cmp.w	r8, #0
90019c56:	d009      	beq.n	90019c6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90019c58:	9019      	str	r0, [sp, #100]	@ 0x64
90019c5a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90019c5e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90019c62:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90019c66:	911d      	str	r1, [sp, #116]	@ 0x74
90019c68:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90019c6c:	1ad2      	subs	r2, r2, r3
90019c6e:	e6b5      	b.n	900199dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90019c70:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90019c72:	681b      	ldr	r3, [r3, #0]
90019c74:	b923      	cbnz	r3, 90019c80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90019c76:	4b04      	ldr	r3, [pc, #16]	@ (90019c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
90019c78:	6818      	ldr	r0, [r3, #0]
90019c7a:	6803      	ldr	r3, [r0, #0]
90019c7c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90019c7e:	4798      	blx	r3
90019c80:	b05b      	add	sp, #364	@ 0x16c
90019c82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019c86:	bf00      	nop
90019c88:	24027e9c 	.word	0x24027e9c

90019c8c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90019c8c:	b570      	push	{r4, r5, r6, lr}
90019c8e:	4604      	mov	r4, r0
90019c90:	2500      	movs	r5, #0
90019c92:	9805      	ldr	r0, [sp, #20]
90019c94:	f89d 601c 	ldrb.w	r6, [sp, #28]
90019c98:	6061      	str	r1, [r4, #4]
90019c9a:	8263      	strh	r3, [r4, #18]
90019c9c:	f89d 1010 	ldrb.w	r1, [sp, #16]
90019ca0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90019ca4:	8025      	strh	r5, [r4, #0]
90019ca6:	7221      	strb	r1, [r4, #8]
90019ca8:	7266      	strb	r6, [r4, #9]
90019caa:	60e0      	str	r0, [r4, #12]
90019cac:	8222      	strh	r2, [r4, #16]
90019cae:	82a3      	strh	r3, [r4, #20]
90019cb0:	82e5      	strh	r5, [r4, #22]
90019cb2:	8325      	strh	r5, [r4, #24]
90019cb4:	8365      	strh	r5, [r4, #26]
90019cb6:	83a5      	strh	r5, [r4, #28]
90019cb8:	83e5      	strh	r5, [r4, #30]
90019cba:	8425      	strh	r5, [r4, #32]
90019cbc:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
90019cc0:	b32e      	cbz	r6, 90019d0e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90019cc2:	6803      	ldr	r3, [r0, #0]
90019cc4:	695b      	ldr	r3, [r3, #20]
90019cc6:	4798      	blx	r3
90019cc8:	4606      	mov	r6, r0
90019cca:	b300      	cbz	r0, 90019d0e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90019ccc:	68e0      	ldr	r0, [r4, #12]
90019cce:	4631      	mov	r1, r6
90019cd0:	6803      	ldr	r3, [r0, #0]
90019cd2:	68db      	ldr	r3, [r3, #12]
90019cd4:	4798      	blx	r3
90019cd6:	4605      	mov	r5, r0
90019cd8:	b1c8      	cbz	r0, 90019d0e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90019cda:	7b43      	ldrb	r3, [r0, #13]
90019cdc:	7a82      	ldrb	r2, [r0, #10]
90019cde:	005b      	lsls	r3, r3, #1
90019ce0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90019ce4:	4313      	orrs	r3, r2
90019ce6:	8423      	strh	r3, [r4, #32]
90019ce8:	7a63      	ldrb	r3, [r4, #9]
90019cea:	2b06      	cmp	r3, #6
90019cec:	d10f      	bne.n	90019d0e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90019cee:	68e0      	ldr	r0, [r4, #12]
90019cf0:	462a      	mov	r2, r5
90019cf2:	4631      	mov	r1, r6
90019cf4:	6803      	ldr	r3, [r0, #0]
90019cf6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90019cf8:	4798      	blx	r3
90019cfa:	7b6b      	ldrb	r3, [r5, #13]
90019cfc:	005b      	lsls	r3, r3, #1
90019cfe:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019d02:	7aab      	ldrb	r3, [r5, #10]
90019d04:	4313      	orrs	r3, r2
90019d06:	4418      	add	r0, r3
90019d08:	8c23      	ldrh	r3, [r4, #32]
90019d0a:	4418      	add	r0, r3
90019d0c:	8420      	strh	r0, [r4, #32]
90019d0e:	4620      	mov	r0, r4
90019d10:	bd70      	pop	{r4, r5, r6, pc}

90019d12 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90019d12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019d16:	2400      	movs	r4, #0
90019d18:	b085      	sub	sp, #20
90019d1a:	4681      	mov	r9, r0
90019d1c:	4688      	mov	r8, r1
90019d1e:	4692      	mov	sl, r2
90019d20:	469b      	mov	fp, r3
90019d22:	4627      	mov	r7, r4
90019d24:	4625      	mov	r5, r4
90019d26:	4626      	mov	r6, r4
90019d28:	4554      	cmp	r4, sl
90019d2a:	da2a      	bge.n	90019d82 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90019d2c:	2300      	movs	r3, #0
90019d2e:	9303      	str	r3, [sp, #12]
90019d30:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90019d34:	429d      	cmp	r5, r3
90019d36:	d004      	beq.n	90019d42 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
90019d38:	f242 030b 	movw	r3, #8203	@ 0x200b
90019d3c:	429d      	cmp	r5, r3
90019d3e:	bf18      	it	ne
90019d40:	462f      	movne	r7, r5
90019d42:	ab03      	add	r3, sp, #12
90019d44:	4642      	mov	r2, r8
90019d46:	4659      	mov	r1, fp
90019d48:	4648      	mov	r0, r9
90019d4a:	f003 f95b 	bl	9001d004 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90019d4e:	4605      	mov	r5, r0
90019d50:	b1b8      	cbz	r0, 90019d82 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90019d52:	280a      	cmp	r0, #10
90019d54:	d015      	beq.n	90019d82 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90019d56:	9a03      	ldr	r2, [sp, #12]
90019d58:	b18a      	cbz	r2, 90019d7e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
90019d5a:	7b50      	ldrb	r0, [r2, #13]
90019d5c:	4639      	mov	r1, r7
90019d5e:	7a93      	ldrb	r3, [r2, #10]
90019d60:	0040      	lsls	r0, r0, #1
90019d62:	8895      	ldrh	r5, [r2, #4]
90019d64:	f400 7080 	and.w	r0, r0, #256	@ 0x100
90019d68:	4303      	orrs	r3, r0
90019d6a:	4640      	mov	r0, r8
90019d6c:	9301      	str	r3, [sp, #4]
90019d6e:	f8d8 3000 	ldr.w	r3, [r8]
90019d72:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90019d74:	4798      	blx	r3
90019d76:	9b01      	ldr	r3, [sp, #4]
90019d78:	4418      	add	r0, r3
90019d7a:	4406      	add	r6, r0
90019d7c:	b2b6      	uxth	r6, r6
90019d7e:	3401      	adds	r4, #1
90019d80:	e7d2      	b.n	90019d28 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
90019d82:	4630      	mov	r0, r6
90019d84:	b005      	add	sp, #20
90019d86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019d8a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
90019d8a:	2a02      	cmp	r2, #2
90019d8c:	b530      	push	{r4, r5, lr}
90019d8e:	d011      	beq.n	90019db4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
90019d90:	2a03      	cmp	r2, #3
90019d92:	d01c      	beq.n	90019dce <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90019d94:	2a01      	cmp	r2, #1
90019d96:	d10c      	bne.n	90019db2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90019d98:	888b      	ldrh	r3, [r1, #4]
90019d9a:	8801      	ldrh	r1, [r0, #0]
90019d9c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90019da0:	1a5b      	subs	r3, r3, r1
90019da2:	8844      	ldrh	r4, [r0, #2]
90019da4:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90019da8:	1a9b      	subs	r3, r3, r2
90019daa:	8004      	strh	r4, [r0, #0]
90019dac:	8081      	strh	r1, [r0, #4]
90019dae:	8043      	strh	r3, [r0, #2]
90019db0:	80c2      	strh	r2, [r0, #6]
90019db2:	bd30      	pop	{r4, r5, pc}
90019db4:	88cb      	ldrh	r3, [r1, #6]
90019db6:	8842      	ldrh	r2, [r0, #2]
90019db8:	1a9b      	subs	r3, r3, r2
90019dba:	88c2      	ldrh	r2, [r0, #6]
90019dbc:	1a9b      	subs	r3, r3, r2
90019dbe:	888a      	ldrh	r2, [r1, #4]
90019dc0:	8801      	ldrh	r1, [r0, #0]
90019dc2:	8043      	strh	r3, [r0, #2]
90019dc4:	1a52      	subs	r2, r2, r1
90019dc6:	8881      	ldrh	r1, [r0, #4]
90019dc8:	1a52      	subs	r2, r2, r1
90019dca:	8002      	strh	r2, [r0, #0]
90019dcc:	e7f1      	b.n	90019db2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90019dce:	88cb      	ldrh	r3, [r1, #6]
90019dd0:	8841      	ldrh	r1, [r0, #2]
90019dd2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90019dd6:	1a5b      	subs	r3, r3, r1
90019dd8:	f9b0 5000 	ldrsh.w	r5, [r0]
90019ddc:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90019de0:	1a9b      	subs	r3, r3, r2
90019de2:	8045      	strh	r5, [r0, #2]
90019de4:	8082      	strh	r2, [r0, #4]
90019de6:	8003      	strh	r3, [r0, #0]
90019de8:	80c4      	strh	r4, [r0, #6]
90019dea:	e7e2      	b.n	90019db2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90019dec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90019dec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019df0:	b09f      	sub	sp, #124	@ 0x7c
90019df2:	9116      	str	r1, [sp, #88]	@ 0x58
90019df4:	9317      	str	r3, [sp, #92]	@ 0x5c
90019df6:	9929      	ldr	r1, [sp, #164]	@ 0xa4
90019df8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90019dfa:	8809      	ldrh	r1, [r1, #0]
90019dfc:	889b      	ldrh	r3, [r3, #4]
90019dfe:	f8dd 80a8 	ldr.w	r8, [sp, #168]	@ 0xa8
90019e02:	440b      	add	r3, r1
90019e04:	9212      	str	r2, [sp, #72]	@ 0x48
90019e06:	f89d 20b8 	ldrb.w	r2, [sp, #184]	@ 0xb8
90019e0a:	b21b      	sxth	r3, r3
90019e0c:	9011      	str	r0, [sp, #68]	@ 0x44
90019e0e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
90019e12:	9310      	str	r3, [sp, #64]	@ 0x40
90019e14:	f8d8 3000 	ldr.w	r3, [r8]
90019e18:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
90019e1c:	7b19      	ldrb	r1, [r3, #12]
90019e1e:	7adb      	ldrb	r3, [r3, #11]
90019e20:	9114      	str	r1, [sp, #80]	@ 0x50
90019e22:	9315      	str	r3, [sp, #84]	@ 0x54
90019e24:	2a00      	cmp	r2, #0
90019e26:	d06a      	beq.n	90019efe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90019e28:	f898 3010 	ldrb.w	r3, [r8, #16]
90019e2c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90019e2e:	2b06      	cmp	r3, #6
90019e30:	bf14      	ite	ne
90019e32:	2301      	movne	r3, #1
90019e34:	2302      	moveq	r3, #2
90019e36:	4413      	add	r3, r2
90019e38:	f04f 0900 	mov.w	r9, #0
90019e3c:	930f      	str	r3, [sp, #60]	@ 0x3c
90019e3e:	464c      	mov	r4, r9
90019e40:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
90019e44:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
90019e48:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	@ 0x38
90019e4c:	4293      	cmp	r3, r2
90019e4e:	f280 808f 	bge.w	90019f70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
90019e52:	2300      	movs	r3, #0
90019e54:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
90019e58:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
90019e5c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90019e60:	429c      	cmp	r4, r3
90019e62:	d006      	beq.n	90019e72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
90019e64:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90019e66:	f242 020b 	movw	r2, #8203	@ 0x200b
90019e6a:	4294      	cmp	r4, r2
90019e6c:	bf18      	it	ne
90019e6e:	4623      	movne	r3, r4
90019e70:	930d      	str	r3, [sp, #52]	@ 0x34
90019e72:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019e74:	992d      	ldr	r1, [sp, #180]	@ 0xb4
90019e76:	f8d8 2000 	ldr.w	r2, [r8]
90019e7a:	428b      	cmp	r3, r1
90019e7c:	db41      	blt.n	90019f02 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
90019e7e:	6813      	ldr	r3, [r2, #0]
90019e80:	4610      	mov	r0, r2
90019e82:	695b      	ldr	r3, [r3, #20]
90019e84:	4798      	blx	r3
90019e86:	4604      	mov	r4, r0
90019e88:	f8d8 0000 	ldr.w	r0, [r8]
90019e8c:	aa1d      	add	r2, sp, #116	@ 0x74
90019e8e:	4621      	mov	r1, r4
90019e90:	6803      	ldr	r3, [r0, #0]
90019e92:	689d      	ldr	r5, [r3, #8]
90019e94:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
90019e98:	47a8      	blx	r5
90019e9a:	901c      	str	r0, [sp, #112]	@ 0x70
90019e9c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90019ea0:	429c      	cmp	r4, r3
90019ea2:	f000 80ec 	beq.w	9001a07e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90019ea6:	f242 030b 	movw	r3, #8203	@ 0x200b
90019eaa:	429c      	cmp	r4, r3
90019eac:	f000 80e7 	beq.w	9001a07e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90019eb0:	2c00      	cmp	r4, #0
90019eb2:	f000 80f9 	beq.w	9001a0a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
90019eb6:	2c0a      	cmp	r4, #10
90019eb8:	d060      	beq.n	90019f7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
90019eba:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90019ebc:	b36a      	cbz	r2, 90019f1a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
90019ebe:	8894      	ldrh	r4, [r2, #4]
90019ec0:	f1bb 0f00 	cmp.w	fp, #0
90019ec4:	d03b      	beq.n	90019f3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90019ec6:	f892 900d 	ldrb.w	r9, [r2, #13]
90019eca:	f1bb 0f01 	cmp.w	fp, #1
90019ece:	ea4f 0949 	mov.w	r9, r9, lsl #1
90019ed2:	f409 7380 	and.w	r3, r9, #256	@ 0x100
90019ed6:	f892 900a 	ldrb.w	r9, [r2, #10]
90019eda:	ea49 0903 	orr.w	r9, r9, r3
90019ede:	d134      	bne.n	90019f4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
90019ee0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90019ee2:	eba6 0609 	sub.w	r6, r6, r9
90019ee6:	2b00      	cmp	r3, #0
90019ee8:	d14f      	bne.n	90019f8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
90019eea:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90019eec:	eb09 0306 	add.w	r3, r9, r6
90019ef0:	4413      	add	r3, r2
90019ef2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90019ef4:	f9b2 2000 	ldrsh.w	r2, [r2]
90019ef8:	4293      	cmp	r3, r2
90019efa:	da51      	bge.n	90019fa0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
90019efc:	e038      	b.n	90019f70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
90019efe:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90019f00:	e79a      	b.n	90019e38 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
90019f02:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
90019f06:	4659      	mov	r1, fp
90019f08:	982c      	ldr	r0, [sp, #176]	@ 0xb0
90019f0a:	9301      	str	r3, [sp, #4]
90019f0c:	ab1d      	add	r3, sp, #116	@ 0x74
90019f0e:	9300      	str	r3, [sp, #0]
90019f10:	ab1c      	add	r3, sp, #112	@ 0x70
90019f12:	f003 f8c0 	bl	9001d096 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
90019f16:	4604      	mov	r4, r0
90019f18:	e7c0      	b.n	90019e9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
90019f1a:	f8d8 0000 	ldr.w	r0, [r8]
90019f1e:	6803      	ldr	r3, [r0, #0]
90019f20:	691b      	ldr	r3, [r3, #16]
90019f22:	4798      	blx	r3
90019f24:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90019f28:	4298      	cmp	r0, r3
90019f2a:	f000 80a8 	beq.w	9001a07e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90019f2e:	f242 030b 	movw	r3, #8203	@ 0x200b
90019f32:	4298      	cmp	r0, r3
90019f34:	f000 80a3 	beq.w	9001a07e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90019f38:	f1bb 0f00 	cmp.w	fp, #0
90019f3c:	d100      	bne.n	90019f40 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
90019f3e:	444e      	add	r6, r9
90019f40:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90019f42:	2a00      	cmp	r2, #0
90019f44:	d1bf      	bne.n	90019ec6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90019f46:	4691      	mov	r9, r2
90019f48:	e099      	b.n	9001a07e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90019f4a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90019f4c:	2b00      	cmp	r3, #0
90019f4e:	f000 80ad 	beq.w	9001a0ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
90019f52:	f1bb 0f00 	cmp.w	fp, #0
90019f56:	d118      	bne.n	90019f8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
90019f58:	f8d8 0000 	ldr.w	r0, [r8]
90019f5c:	990d      	ldr	r1, [sp, #52]	@ 0x34
90019f5e:	6803      	ldr	r3, [r0, #0]
90019f60:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90019f62:	4798      	blx	r3
90019f64:	4406      	add	r6, r0
90019f66:	9b15      	ldr	r3, [sp, #84]	@ 0x54
90019f68:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90019f6a:	1af3      	subs	r3, r6, r3
90019f6c:	4293      	cmp	r3, r2
90019f6e:	dd17      	ble.n	90019fa0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
90019f70:	2c00      	cmp	r4, #0
90019f72:	f000 8099 	beq.w	9001a0a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
90019f76:	2c0a      	cmp	r4, #10
90019f78:	f040 8087 	bne.w	9001a08a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
90019f7c:	240a      	movs	r4, #10
90019f7e:	fab4 f084 	clz	r0, r4
90019f82:	0940      	lsrs	r0, r0, #5
90019f84:	b01f      	add	sp, #124	@ 0x7c
90019f86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019f8a:	f8d8 0000 	ldr.w	r0, [r8]
90019f8e:	990d      	ldr	r1, [sp, #52]	@ 0x34
90019f90:	6803      	ldr	r3, [r0, #0]
90019f92:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90019f94:	4798      	blx	r3
90019f96:	f1bb 0f01 	cmp.w	fp, #1
90019f9a:	eba6 0600 	sub.w	r6, r6, r0
90019f9e:	d0a4      	beq.n	90019eea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
90019fa0:	981c      	ldr	r0, [sp, #112]	@ 0x70
90019fa2:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90019fa4:	f990 1009 	ldrsb.w	r1, [r0, #9]
90019fa8:	f9b3 7000 	ldrsh.w	r7, [r3]
90019fac:	7b43      	ldrb	r3, [r0, #13]
90019fae:	4431      	add	r1, r6
90019fb0:	015b      	lsls	r3, r3, #5
90019fb2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019fb6:	7983      	ldrb	r3, [r0, #6]
90019fb8:	4313      	orrs	r3, r2
90019fba:	440b      	add	r3, r1
90019fbc:	42bb      	cmp	r3, r7
90019fbe:	db5e      	blt.n	9001a07e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90019fc0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019fc2:	4299      	cmp	r1, r3
90019fc4:	da5b      	bge.n	9001a07e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90019fc6:	f8d8 0000 	ldr.w	r0, [r8]
90019fca:	42b7      	cmp	r7, r6
90019fcc:	6803      	ldr	r3, [r0, #0]
90019fce:	bfcc      	ite	gt
90019fd0:	1bbf      	subgt	r7, r7, r6
90019fd2:	2700      	movle	r7, #0
90019fd4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90019fd6:	bfc8      	it	gt
90019fd8:	b2bf      	uxthgt	r7, r7
90019fda:	4798      	blx	r3
90019fdc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90019fde:	7b5a      	ldrb	r2, [r3, #13]
90019fe0:	00d1      	lsls	r1, r2, #3
90019fe2:	f401 7580 	and.w	r5, r1, #256	@ 0x100
90019fe6:	7a19      	ldrb	r1, [r3, #8]
90019fe8:	4329      	orrs	r1, r5
90019fea:	0655      	lsls	r5, r2, #25
90019fec:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
90019fee:	bf48      	it	mi
90019ff0:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
90019ff4:	4405      	add	r5, r0
90019ff6:	bf48      	it	mi
90019ff8:	b209      	sxthmi	r1, r1
90019ffa:	1a6d      	subs	r5, r5, r1
90019ffc:	9929      	ldr	r1, [sp, #164]	@ 0xa4
90019ffe:	b2ad      	uxth	r5, r5
9001a000:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
9001a004:	fa0f fa85 	sxth.w	sl, r5
9001a008:	4551      	cmp	r1, sl
9001a00a:	dd3c      	ble.n	9001a086 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
9001a00c:	0112      	lsls	r2, r2, #4
9001a00e:	79d8      	ldrb	r0, [r3, #7]
9001a010:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9001a014:	4302      	orrs	r2, r0
9001a016:	4492      	add	sl, r2
9001a018:	4551      	cmp	r1, sl
9001a01a:	dc30      	bgt.n	9001a07e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001a01c:	1b4d      	subs	r5, r1, r5
9001a01e:	468a      	mov	sl, r1
9001a020:	b22d      	sxth	r5, r5
9001a022:	9319      	str	r3, [sp, #100]	@ 0x64
9001a024:	b2ad      	uxth	r5, r5
9001a026:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9001a028:	f8d8 0000 	ldr.w	r0, [r8]
9001a02c:	681a      	ldr	r2, [r3, #0]
9001a02e:	6801      	ldr	r1, [r0, #0]
9001a030:	6cd3      	ldr	r3, [r2, #76]	@ 0x4c
9001a032:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
9001a034:	9313      	str	r3, [sp, #76]	@ 0x4c
9001a036:	9218      	str	r2, [sp, #96]	@ 0x60
9001a038:	6c09      	ldr	r1, [r1, #64]	@ 0x40
9001a03a:	4788      	blx	r1
9001a03c:	f898 1006 	ldrb.w	r1, [r8, #6]
9001a040:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9001a042:	910b      	str	r1, [sp, #44]	@ 0x2c
9001a044:	f898 100e 	ldrb.w	r1, [r8, #14]
9001a048:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001a04a:	910a      	str	r1, [sp, #40]	@ 0x28
9001a04c:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
9001a050:	9109      	str	r1, [sp, #36]	@ 0x24
9001a052:	f8d8 1008 	ldr.w	r1, [r8, #8]
9001a056:	9305      	str	r3, [sp, #20]
9001a058:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9001a05a:	9206      	str	r2, [sp, #24]
9001a05c:	9304      	str	r3, [sp, #16]
9001a05e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9001a060:	f8cd a004 	str.w	sl, [sp, #4]
9001a064:	e9cd 7502 	strd	r7, r5, [sp, #8]
9001a068:	4437      	add	r7, r6
9001a06a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001a06c:	b23f      	sxth	r7, r7
9001a06e:	e9cd 0107 	strd	r0, r1, [sp, #28]
9001a072:	9700      	str	r7, [sp, #0]
9001a074:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001a076:	681a      	ldr	r2, [r3, #0]
9001a078:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001a07a:	685b      	ldr	r3, [r3, #4]
9001a07c:	47a8      	blx	r5
9001a07e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a080:	3301      	adds	r3, #1
9001a082:	930e      	str	r3, [sp, #56]	@ 0x38
9001a084:	e6e0      	b.n	90019e48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
9001a086:	2500      	movs	r5, #0
9001a088:	e7cb      	b.n	9001a022 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
9001a08a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9001a08c:	3501      	adds	r5, #1
9001a08e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
9001a090:	429d      	cmp	r5, r3
9001a092:	f6bf af74 	bge.w	90019f7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
9001a096:	4659      	mov	r1, fp
9001a098:	982c      	ldr	r0, [sp, #176]	@ 0xb0
9001a09a:	f7ee fd6d 	bl	90008b78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001a09e:	4604      	mov	r4, r0
9001a0a0:	b110      	cbz	r0, 9001a0a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
9001a0a2:	280a      	cmp	r0, #10
9001a0a4:	d1f2      	bne.n	9001a08c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
9001a0a6:	e769      	b.n	90019f7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
9001a0a8:	2400      	movs	r4, #0
9001a0aa:	e768      	b.n	90019f7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
9001a0ac:	f1bb 0f00 	cmp.w	fp, #0
9001a0b0:	f43f af59 	beq.w	90019f66 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
9001a0b4:	e774      	b.n	90019fa0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

9001a0b6 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
9001a0b6:	b530      	push	{r4, r5, lr}
9001a0b8:	8ac4      	ldrh	r4, [r0, #22]
9001a0ba:	8b45      	ldrh	r5, [r0, #26]
9001a0bc:	8343      	strh	r3, [r0, #26]
9001a0be:	442c      	add	r4, r5
9001a0c0:	1ae4      	subs	r4, r4, r3
9001a0c2:	8b83      	ldrh	r3, [r0, #28]
9001a0c4:	82c4      	strh	r4, [r0, #22]
9001a0c6:	8b04      	ldrh	r4, [r0, #24]
9001a0c8:	4422      	add	r2, r4
9001a0ca:	440c      	add	r4, r1
9001a0cc:	1a59      	subs	r1, r3, r1
9001a0ce:	83c2      	strh	r2, [r0, #30]
9001a0d0:	8304      	strh	r4, [r0, #24]
9001a0d2:	8381      	strh	r1, [r0, #28]
9001a0d4:	bd30      	pop	{r4, r5, pc}

9001a0d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
9001a0d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a0da:	4604      	mov	r4, r0
9001a0dc:	8a47      	ldrh	r7, [r0, #18]
9001a0de:	68c0      	ldr	r0, [r0, #12]
9001a0e0:	b085      	sub	sp, #20
9001a0e2:	6803      	ldr	r3, [r0, #0]
9001a0e4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001a0e6:	4798      	blx	r3
9001a0e8:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
9001a0ec:	7a63      	ldrb	r3, [r4, #9]
9001a0ee:	eb06 0640 	add.w	r6, r6, r0, lsl #1
9001a0f2:	3b01      	subs	r3, #1
9001a0f4:	42b7      	cmp	r7, r6
9001a0f6:	bfac      	ite	ge
9001a0f8:	f04f 0900 	movge.w	r9, #0
9001a0fc:	f04f 0901 	movlt.w	r9, #1
9001a100:	2b05      	cmp	r3, #5
9001a102:	d804      	bhi.n	9001a10e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
9001a104:	e8df f003 	tbb	[pc, r3]
9001a108:	470f0854 	.word	0x470f0854
9001a10c:	4c4c      	.short	0x4c4c
9001a10e:	2500      	movs	r5, #0
9001a110:	46a9      	mov	r9, r5
9001a112:	462e      	mov	r6, r5
9001a114:	462f      	mov	r7, r5
9001a116:	e00e      	b.n	9001a136 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001a118:	42b7      	cmp	r7, r6
9001a11a:	f04f 0500 	mov.w	r5, #0
9001a11e:	bfb4      	ite	lt
9001a120:	2600      	movlt	r6, #0
9001a122:	2601      	movge	r6, #1
9001a124:	e7f6      	b.n	9001a114 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
9001a126:	42b7      	cmp	r7, r6
9001a128:	464d      	mov	r5, r9
9001a12a:	f04f 0900 	mov.w	r9, #0
9001a12e:	bfb4      	ite	lt
9001a130:	2600      	movlt	r6, #0
9001a132:	2601      	movge	r6, #1
9001a134:	464f      	mov	r7, r9
9001a136:	f04f 0800 	mov.w	r8, #0
9001a13a:	f8a4 8016 	strh.w	r8, [r4, #22]
9001a13e:	f8a4 8018 	strh.w	r8, [r4, #24]
9001a142:	f8cd 8004 	str.w	r8, [sp, #4]
9001a146:	2300      	movs	r3, #0
9001a148:	9303      	str	r3, [sp, #12]
9001a14a:	8823      	ldrh	r3, [r4, #0]
9001a14c:	2b20      	cmp	r3, #32
9001a14e:	d033      	beq.n	9001a1b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
9001a150:	f242 010b 	movw	r1, #8203	@ 0x200b
9001a154:	1a5a      	subs	r2, r3, r1
9001a156:	f1d2 0a00 	rsbs	sl, r2, #0
9001a15a:	eb4a 0a02 	adc.w	sl, sl, r2
9001a15e:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
9001a162:	4293      	cmp	r3, r2
9001a164:	d008      	beq.n	9001a178 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
9001a166:	428b      	cmp	r3, r1
9001a168:	9a01      	ldr	r2, [sp, #4]
9001a16a:	bf0e      	itee	eq
9001a16c:	f04f 0a01 	moveq.w	sl, #1
9001a170:	461a      	movne	r2, r3
9001a172:	f04f 0a00 	movne.w	sl, #0
9001a176:	9201      	str	r2, [sp, #4]
9001a178:	ab03      	add	r3, sp, #12
9001a17a:	68e2      	ldr	r2, [r4, #12]
9001a17c:	7a21      	ldrb	r1, [r4, #8]
9001a17e:	6860      	ldr	r0, [r4, #4]
9001a180:	f002 ff40 	bl	9001d004 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001a184:	8020      	strh	r0, [r4, #0]
9001a186:	b9d8      	cbnz	r0, 9001a1c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
9001a188:	8ba2      	ldrh	r2, [r4, #28]
9001a18a:	2300      	movs	r3, #0
9001a18c:	4611      	mov	r1, r2
9001a18e:	4620      	mov	r0, r4
9001a190:	f7ff ff91 	bl	9001a0b6 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
9001a194:	e06e      	b.n	9001a274 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
9001a196:	2500      	movs	r5, #0
9001a198:	2701      	movs	r7, #1
9001a19a:	46a9      	mov	r9, r5
9001a19c:	462e      	mov	r6, r5
9001a19e:	e7ca      	b.n	9001a136 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001a1a0:	42b7      	cmp	r7, r6
9001a1a2:	f04f 0500 	mov.w	r5, #0
9001a1a6:	bfb4      	ite	lt
9001a1a8:	2700      	movlt	r7, #0
9001a1aa:	2701      	movge	r7, #1
9001a1ac:	462e      	mov	r6, r5
9001a1ae:	e7c2      	b.n	9001a136 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001a1b0:	2500      	movs	r5, #0
9001a1b2:	2601      	movs	r6, #1
9001a1b4:	46a9      	mov	r9, r5
9001a1b6:	e7ad      	b.n	9001a114 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
9001a1b8:	9301      	str	r3, [sp, #4]
9001a1ba:	f04f 0a01 	mov.w	sl, #1
9001a1be:	e7db      	b.n	9001a178 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
9001a1c0:	8b63      	ldrh	r3, [r4, #26]
9001a1c2:	280a      	cmp	r0, #10
9001a1c4:	f103 0301 	add.w	r3, r3, #1
9001a1c8:	8363      	strh	r3, [r4, #26]
9001a1ca:	d0dd      	beq.n	9001a188 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
9001a1cc:	9a03      	ldr	r2, [sp, #12]
9001a1ce:	bb62      	cbnz	r2, 9001a22a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
9001a1d0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001a1d4:	4298      	cmp	r0, r3
9001a1d6:	d003      	beq.n	9001a1e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
9001a1d8:	f242 030b 	movw	r3, #8203	@ 0x200b
9001a1dc:	4298      	cmp	r0, r3
9001a1de:	d1b2      	bne.n	9001a146 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a1e0:	8823      	ldrh	r3, [r4, #0]
9001a1e2:	8ba1      	ldrh	r1, [r4, #28]
9001a1e4:	2b20      	cmp	r3, #32
9001a1e6:	d003      	beq.n	9001a1f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
9001a1e8:	f242 000b 	movw	r0, #8203	@ 0x200b
9001a1ec:	4283      	cmp	r3, r0
9001a1ee:	d131      	bne.n	9001a254 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
9001a1f0:	f1ba 0f00 	cmp.w	sl, #0
9001a1f4:	bf0a      	itet	eq
9001a1f6:	4688      	moveq	r8, r1
9001a1f8:	4650      	movne	r0, sl
9001a1fa:	2001      	moveq	r0, #1
9001a1fc:	440a      	add	r2, r1
9001a1fe:	8b23      	ldrh	r3, [r4, #24]
9001a200:	f8b4 c010 	ldrh.w	ip, [r4, #16]
9001a204:	b292      	uxth	r2, r2
9001a206:	83a2      	strh	r2, [r4, #28]
9001a208:	4413      	add	r3, r2
9001a20a:	f1b9 0f00 	cmp.w	r9, #0
9001a20e:	d102      	bne.n	9001a216 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
9001a210:	2d00      	cmp	r5, #0
9001a212:	d042      	beq.n	9001a29a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
9001a214:	b300      	cbz	r0, 9001a258 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
9001a216:	8c21      	ldrh	r1, [r4, #32]
9001a218:	4419      	add	r1, r3
9001a21a:	458c      	cmp	ip, r1
9001a21c:	da37      	bge.n	9001a28e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
9001a21e:	8ae1      	ldrh	r1, [r4, #22]
9001a220:	2900      	cmp	r1, #0
9001a222:	d034      	beq.n	9001a28e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
9001a224:	4563      	cmp	r3, ip
9001a226:	dd8e      	ble.n	9001a146 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a228:	e01d      	b.n	9001a266 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
9001a22a:	8893      	ldrh	r3, [r2, #4]
9001a22c:	9901      	ldr	r1, [sp, #4]
9001a22e:	8023      	strh	r3, [r4, #0]
9001a230:	f892 b00d 	ldrb.w	fp, [r2, #13]
9001a234:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
9001a238:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
9001a23c:	f892 b00a 	ldrb.w	fp, [r2, #10]
9001a240:	ea4b 0b00 	orr.w	fp, fp, r0
9001a244:	68e0      	ldr	r0, [r4, #12]
9001a246:	6803      	ldr	r3, [r0, #0]
9001a248:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001a24a:	4798      	blx	r3
9001a24c:	eb0b 0200 	add.w	r2, fp, r0
9001a250:	b292      	uxth	r2, r2
9001a252:	e7c5      	b.n	9001a1e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
9001a254:	2000      	movs	r0, #0
9001a256:	e7d1      	b.n	9001a1fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
9001a258:	4563      	cmp	r3, ip
9001a25a:	f77f af74 	ble.w	9001a146 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a25e:	8ae3      	ldrh	r3, [r4, #22]
9001a260:	2b00      	cmp	r3, #0
9001a262:	f43f af70 	beq.w	9001a146 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a266:	2301      	movs	r3, #1
9001a268:	8c22      	ldrh	r2, [r4, #32]
9001a26a:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
9001a26e:	8be3      	ldrh	r3, [r4, #30]
9001a270:	4413      	add	r3, r2
9001a272:	83e3      	strh	r3, [r4, #30]
9001a274:	68e0      	ldr	r0, [r4, #12]
9001a276:	6803      	ldr	r3, [r0, #0]
9001a278:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001a27a:	4798      	blx	r3
9001a27c:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
9001a280:	4418      	add	r0, r3
9001a282:	8a63      	ldrh	r3, [r4, #18]
9001a284:	1a18      	subs	r0, r3, r0
9001a286:	8260      	strh	r0, [r4, #18]
9001a288:	b005      	add	sp, #20
9001a28a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a28e:	2300      	movs	r3, #0
9001a290:	4611      	mov	r1, r2
9001a292:	4620      	mov	r0, r4
9001a294:	f7ff ff0f 	bl	9001a0b6 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
9001a298:	e755      	b.n	9001a146 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a29a:	4563      	cmp	r3, ip
9001a29c:	dd14      	ble.n	9001a2c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
9001a29e:	b117      	cbz	r7, 9001a2a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
9001a2a0:	2301      	movs	r3, #1
9001a2a2:	460a      	mov	r2, r1
9001a2a4:	e772      	b.n	9001a18c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
9001a2a6:	2e00      	cmp	r6, #0
9001a2a8:	f43f af4d 	beq.w	9001a146 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a2ac:	2800      	cmp	r0, #0
9001a2ae:	f47f af4a 	bne.w	9001a146 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a2b2:	f1ba 0f00 	cmp.w	sl, #0
9001a2b6:	d002      	beq.n	9001a2be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
9001a2b8:	2301      	movs	r3, #1
9001a2ba:	4642      	mov	r2, r8
9001a2bc:	e767      	b.n	9001a18e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
9001a2be:	8ae3      	ldrh	r3, [r4, #22]
9001a2c0:	2b00      	cmp	r3, #0
9001a2c2:	f43f af40 	beq.w	9001a146 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a2c6:	e7d5      	b.n	9001a274 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
9001a2c8:	2800      	cmp	r0, #0
9001a2ca:	f47f af3c 	bne.w	9001a146 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a2ce:	f1ba 0f00 	cmp.w	sl, #0
9001a2d2:	f43f af38 	beq.w	9001a146 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001a2d6:	2301      	movs	r3, #1
9001a2d8:	4642      	mov	r2, r8
9001a2da:	e7da      	b.n	9001a292 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

9001a2dc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
9001a2dc:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a2de:	4605      	mov	r5, r0
9001a2e0:	b08f      	sub	sp, #60	@ 0x3c
9001a2e2:	4617      	mov	r7, r2
9001a2e4:	461c      	mov	r4, r3
9001a2e6:	460e      	mov	r6, r1
9001a2e8:	b1d1      	cbz	r1, 9001a320 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
9001a2ea:	681b      	ldr	r3, [r3, #0]
9001a2ec:	4620      	mov	r0, r4
9001a2ee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001a2f0:	4798      	blx	r3
9001a2f2:	4240      	negs	r0, r0
9001a2f4:	9603      	str	r6, [sp, #12]
9001a2f6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
9001a2fa:	b200      	sxth	r0, r0
9001a2fc:	9700      	str	r7, [sp, #0]
9001a2fe:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
9001a302:	4629      	mov	r1, r5
9001a304:	e9cd 4001 	strd	r4, r0, [sp, #4]
9001a308:	2401      	movs	r4, #1
9001a30a:	a805      	add	r0, sp, #20
9001a30c:	f7ff fcbe 	bl	90019c8c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
9001a310:	a805      	add	r0, sp, #20
9001a312:	f7ff fee0 	bl	9001a0d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001a316:	f8bd 3014 	ldrh.w	r3, [sp, #20]
9001a31a:	b163      	cbz	r3, 9001a336 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
9001a31c:	3401      	adds	r4, #1
9001a31e:	e7f7      	b.n	9001a310 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
9001a320:	2401      	movs	r4, #1
9001a322:	f002 ff3b 	bl	9001d19c <_ZN8touchgfx12TextProvider11getNextCharEv>
9001a326:	280a      	cmp	r0, #10
9001a328:	4628      	mov	r0, r5
9001a32a:	bf08      	it	eq
9001a32c:	3401      	addeq	r4, #1
9001a32e:	f002 ff35 	bl	9001d19c <_ZN8touchgfx12TextProvider11getNextCharEv>
9001a332:	2800      	cmp	r0, #0
9001a334:	d1f7      	bne.n	9001a326 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
9001a336:	b2a0      	uxth	r0, r4
9001a338:	b00f      	add	sp, #60	@ 0x3c
9001a33a:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001a33c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
9001a33c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a340:	b0e3      	sub	sp, #396	@ 0x18c
9001a342:	461c      	mov	r4, r3
9001a344:	4683      	mov	fp, r0
9001a346:	4688      	mov	r8, r1
9001a348:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
9001a34a:	2b00      	cmp	r3, #0
9001a34c:	f000 810f 	beq.w	9001a56e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
9001a350:	6823      	ldr	r3, [r4, #0]
9001a352:	2b00      	cmp	r3, #0
9001a354:	f000 810b 	beq.w	9001a56e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
9001a358:	7ba3      	ldrb	r3, [r4, #14]
9001a35a:	2b00      	cmp	r3, #0
9001a35c:	f000 8107 	beq.w	9001a56e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
9001a360:	ad0a      	add	r5, sp, #40	@ 0x28
9001a362:	6810      	ldr	r0, [r2, #0]
9001a364:	6851      	ldr	r1, [r2, #4]
9001a366:	462b      	mov	r3, r5
9001a368:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
9001a36c:	c303      	stmia	r3!, {r0, r1}
9001a36e:	2100      	movs	r1, #0
9001a370:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
9001a374:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
9001a378:	4628      	mov	r0, r5
9001a37a:	910c      	str	r1, [sp, #48]	@ 0x30
9001a37c:	a90c      	add	r1, sp, #48	@ 0x30
9001a37e:	79a2      	ldrb	r2, [r4, #6]
9001a380:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001a384:	f7ff fd01 	bl	90019d8a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
9001a388:	a90c      	add	r1, sp, #48	@ 0x30
9001a38a:	79a2      	ldrb	r2, [r4, #6]
9001a38c:	4608      	mov	r0, r1
9001a38e:	f7ff fcfc 	bl	90019d8a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
9001a392:	a817      	add	r0, sp, #92	@ 0x5c
9001a394:	f002 fad5 	bl	9001c942 <_ZN8touchgfx12TextProviderC1Ev>
9001a398:	6820      	ldr	r0, [r4, #0]
9001a39a:	6803      	ldr	r3, [r0, #0]
9001a39c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001a39e:	4798      	blx	r3
9001a3a0:	4606      	mov	r6, r0
9001a3a2:	6820      	ldr	r0, [r4, #0]
9001a3a4:	6803      	ldr	r3, [r0, #0]
9001a3a6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001a3a8:	4798      	blx	r3
9001a3aa:	4633      	mov	r3, r6
9001a3ac:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
9001a3ae:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
9001a3b0:	9000      	str	r0, [sp, #0]
9001a3b2:	a817      	add	r0, sp, #92	@ 0x5c
9001a3b4:	f002 fb20 	bl	9001c9f8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a3b8:	6820      	ldr	r0, [r4, #0]
9001a3ba:	f894 a004 	ldrb.w	sl, [r4, #4]
9001a3be:	6803      	ldr	r3, [r0, #0]
9001a3c0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001a3c2:	4798      	blx	r3
9001a3c4:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
9001a3c8:	6823      	ldr	r3, [r4, #0]
9001a3ca:	4607      	mov	r7, r0
9001a3cc:	4406      	add	r6, r0
9001a3ce:	a830      	add	r0, sp, #192	@ 0xc0
9001a3d0:	f893 9009 	ldrb.w	r9, [r3, #9]
9001a3d4:	f002 fab5 	bl	9001c942 <_ZN8touchgfx12TextProviderC1Ev>
9001a3d8:	7c23      	ldrb	r3, [r4, #16]
9001a3da:	b17b      	cbz	r3, 9001a3fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
9001a3dc:	6820      	ldr	r0, [r4, #0]
9001a3de:	6803      	ldr	r3, [r0, #0]
9001a3e0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001a3e2:	4798      	blx	r3
9001a3e4:	9009      	str	r0, [sp, #36]	@ 0x24
9001a3e6:	6820      	ldr	r0, [r4, #0]
9001a3e8:	6802      	ldr	r2, [r0, #0]
9001a3ea:	6d12      	ldr	r2, [r2, #80]	@ 0x50
9001a3ec:	4790      	blx	r2
9001a3ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001a3f0:	9000      	str	r0, [sp, #0]
9001a3f2:	a830      	add	r0, sp, #192	@ 0xc0
9001a3f4:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
9001a3f6:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
9001a3f8:	f002 fafe 	bl	9001c9f8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a3fc:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
9001a400:	a80e      	add	r0, sp, #56	@ 0x38
9001a402:	7be2      	ldrb	r2, [r4, #15]
9001a404:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
9001a408:	1a8a      	subs	r2, r1, r2
9001a40a:	7c21      	ldrb	r1, [r4, #16]
9001a40c:	9103      	str	r1, [sp, #12]
9001a40e:	b292      	uxth	r2, r2
9001a410:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9001a414:	9102      	str	r1, [sp, #8]
9001a416:	6821      	ldr	r1, [r4, #0]
9001a418:	9101      	str	r1, [sp, #4]
9001a41a:	7961      	ldrb	r1, [r4, #5]
9001a41c:	9100      	str	r1, [sp, #0]
9001a41e:	a930      	add	r1, sp, #192	@ 0xc0
9001a420:	f7ff fc34 	bl	90019c8c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
9001a424:	2e00      	cmp	r6, #0
9001a426:	dc5b      	bgt.n	9001a4e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
9001a428:	af17      	add	r7, sp, #92	@ 0x5c
9001a42a:	f04f 0900 	mov.w	r9, #0
9001a42e:	7c23      	ldrb	r3, [r4, #16]
9001a430:	2b00      	cmp	r3, #0
9001a432:	f000 80ae 	beq.w	9001a592 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
9001a436:	a80e      	add	r0, sp, #56	@ 0x38
9001a438:	f7ff fe4d 	bl	9001a0d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001a43c:	f1ba 0f00 	cmp.w	sl, #0
9001a440:	f000 80a2 	beq.w	9001a588 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24c>
9001a444:	7c23      	ldrb	r3, [r4, #16]
9001a446:	2264      	movs	r2, #100	@ 0x64
9001a448:	4639      	mov	r1, r7
9001a44a:	a849      	add	r0, sp, #292	@ 0x124
9001a44c:	9309      	str	r3, [sp, #36]	@ 0x24
9001a44e:	f011 fdb4 	bl	9002bfba <memcpy>
9001a452:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001a454:	2b00      	cmp	r3, #0
9001a456:	f000 80a4 	beq.w	9001a5a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x266>
9001a45a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
9001a45e:	7922      	ldrb	r2, [r4, #4]
9001a460:	2a01      	cmp	r2, #1
9001a462:	f040 8087 	bne.w	9001a574 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001a466:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
9001a46a:	1ac0      	subs	r0, r0, r3
9001a46c:	2302      	movs	r3, #2
9001a46e:	fb90 f0f3 	sdiv	r0, r0, r3
9001a472:	b200      	sxth	r0, r0
9001a474:	7c23      	ldrb	r3, [r4, #16]
9001a476:	2b00      	cmp	r3, #0
9001a478:	f000 8088 	beq.w	9001a58c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x250>
9001a47c:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
9001a480:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
9001a484:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001a488:	e9cd 2105 	strd	r2, r1, [sp, #20]
9001a48c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
9001a490:	2100      	movs	r1, #0
9001a492:	4410      	add	r0, r2
9001a494:	4642      	mov	r2, r8
9001a496:	b200      	sxth	r0, r0
9001a498:	e9cd 9703 	strd	r9, r7, [sp, #12]
9001a49c:	9000      	str	r0, [sp, #0]
9001a49e:	4658      	mov	r0, fp
9001a4a0:	e9cd 5401 	strd	r5, r4, [sp, #4]
9001a4a4:	f7ff fca2 	bl	90019dec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
9001a4a8:	2800      	cmp	r0, #0
9001a4aa:	d160      	bne.n	9001a56e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
9001a4ac:	b2b2      	uxth	r2, r6
9001a4ae:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
9001a4b2:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
9001a4b6:	4413      	add	r3, r2
9001a4b8:	1a8a      	subs	r2, r1, r2
9001a4ba:	b21b      	sxth	r3, r3
9001a4bc:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
9001a4c0:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
9001a4c4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001a4c8:	2a00      	cmp	r2, #0
9001a4ca:	d150      	bne.n	9001a56e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
9001a4cc:	6822      	ldr	r2, [r4, #0]
9001a4ce:	8869      	ldrh	r1, [r5, #2]
9001a4d0:	7a12      	ldrb	r2, [r2, #8]
9001a4d2:	1a9b      	subs	r3, r3, r2
9001a4d4:	88ea      	ldrh	r2, [r5, #6]
9001a4d6:	440a      	add	r2, r1
9001a4d8:	b212      	sxth	r2, r2
9001a4da:	4293      	cmp	r3, r2
9001a4dc:	dda7      	ble.n	9001a42e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
9001a4de:	e046      	b.n	9001a56e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
9001a4e0:	7c23      	ldrb	r3, [r4, #16]
9001a4e2:	444f      	add	r7, r9
9001a4e4:	b1c3      	cbz	r3, 9001a518 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
9001a4e6:	f64f 79ff 	movw	r9, #65535	@ 0xffff
9001a4ea:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001a4ee:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001a4f2:	443b      	add	r3, r7
9001a4f4:	4293      	cmp	r3, r2
9001a4f6:	da97      	bge.n	9001a428 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
9001a4f8:	a80e      	add	r0, sp, #56	@ 0x38
9001a4fa:	f7ff fdec 	bl	9001a0d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001a4fe:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
9001a502:	3b01      	subs	r3, #1
9001a504:	b29b      	uxth	r3, r3
9001a506:	454b      	cmp	r3, r9
9001a508:	9309      	str	r3, [sp, #36]	@ 0x24
9001a50a:	d021      	beq.n	9001a550 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
9001a50c:	7961      	ldrb	r1, [r4, #5]
9001a50e:	a817      	add	r0, sp, #92	@ 0x5c
9001a510:	f7ee fb32 	bl	90008b78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001a514:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001a516:	e7f4      	b.n	9001a502 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
9001a518:	fa1f f986 	uxth.w	r9, r6
9001a51c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001a520:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001a524:	443b      	add	r3, r7
9001a526:	4293      	cmp	r3, r2
9001a528:	f6bf af7e 	bge.w	9001a428 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
9001a52c:	a817      	add	r0, sp, #92	@ 0x5c
9001a52e:	f002 fe35 	bl	9001d19c <_ZN8touchgfx12TextProvider11getNextCharEv>
9001a532:	b1e0      	cbz	r0, 9001a56e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
9001a534:	280a      	cmp	r0, #10
9001a536:	d1f1      	bne.n	9001a51c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
9001a538:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
9001a53c:	444b      	add	r3, r9
9001a53e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001a542:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
9001a546:	eba3 0309 	sub.w	r3, r3, r9
9001a54a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001a54e:	e7e5      	b.n	9001a51c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
9001a550:	b2b3      	uxth	r3, r6
9001a552:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
9001a556:	441a      	add	r2, r3
9001a558:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001a55c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
9001a560:	1ad3      	subs	r3, r2, r3
9001a562:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001a566:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001a56a:	2b00      	cmp	r3, #0
9001a56c:	d1bd      	bne.n	9001a4ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
9001a56e:	b063      	add	sp, #396	@ 0x18c
9001a570:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a574:	2a02      	cmp	r2, #2
9001a576:	d105      	bne.n	9001a584 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
9001a578:	7be2      	ldrb	r2, [r4, #15]
9001a57a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
9001a57e:	1a80      	subs	r0, r0, r2
9001a580:	1ac0      	subs	r0, r0, r3
9001a582:	e776      	b.n	9001a472 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
9001a584:	2000      	movs	r0, #0
9001a586:	e775      	b.n	9001a474 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
9001a588:	7be0      	ldrb	r0, [r4, #15]
9001a58a:	e773      	b.n	9001a474 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
9001a58c:	f647 72ff 	movw	r2, #32767	@ 0x7fff
9001a590:	e776      	b.n	9001a480 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
9001a592:	f1ba 0f00 	cmp.w	sl, #0
9001a596:	d0f7      	beq.n	9001a588 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24c>
9001a598:	2264      	movs	r2, #100	@ 0x64
9001a59a:	4639      	mov	r1, r7
9001a59c:	a849      	add	r0, sp, #292	@ 0x124
9001a59e:	f011 fd0c 	bl	9002bfba <memcpy>
9001a5a2:	2300      	movs	r3, #0
9001a5a4:	f647 72ff 	movw	r2, #32767	@ 0x7fff
9001a5a8:	6821      	ldr	r1, [r4, #0]
9001a5aa:	a849      	add	r0, sp, #292	@ 0x124
9001a5ac:	f7ff fbb1 	bl	90019d12 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
9001a5b0:	b203      	sxth	r3, r0
9001a5b2:	e754      	b.n	9001a45e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

9001a5b4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
9001a5b4:	2b03      	cmp	r3, #3
9001a5b6:	d818      	bhi.n	9001a5ea <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
9001a5b8:	e8df f003 	tbb	[pc, r3]
9001a5bc:	130d0602 	.word	0x130d0602
9001a5c0:	f9b0 2000 	ldrsh.w	r2, [r0]
9001a5c4:	1850      	adds	r0, r2, r1
9001a5c6:	4770      	bx	lr
9001a5c8:	8803      	ldrh	r3, [r0, #0]
9001a5ca:	8880      	ldrh	r0, [r0, #4]
9001a5cc:	4418      	add	r0, r3
9001a5ce:	b200      	sxth	r0, r0
9001a5d0:	1a80      	subs	r0, r0, r2
9001a5d2:	3801      	subs	r0, #1
9001a5d4:	4770      	bx	lr
9001a5d6:	8803      	ldrh	r3, [r0, #0]
9001a5d8:	8880      	ldrh	r0, [r0, #4]
9001a5da:	4418      	add	r0, r3
9001a5dc:	b200      	sxth	r0, r0
9001a5de:	1a40      	subs	r0, r0, r1
9001a5e0:	e7f7      	b.n	9001a5d2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
9001a5e2:	f9b0 0000 	ldrsh.w	r0, [r0]
9001a5e6:	4410      	add	r0, r2
9001a5e8:	4770      	bx	lr
9001a5ea:	2000      	movs	r0, #0
9001a5ec:	4770      	bx	lr

9001a5ee <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
9001a5ee:	2b03      	cmp	r3, #3
9001a5f0:	d817      	bhi.n	9001a622 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
9001a5f2:	e8df f003 	tbb	[pc, r3]
9001a5f6:	0602      	.short	0x0602
9001a5f8:	1009      	.short	0x1009
9001a5fa:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
9001a5fe:	1850      	adds	r0, r2, r1
9001a600:	4770      	bx	lr
9001a602:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
9001a606:	e7fa      	b.n	9001a5fe <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
9001a608:	8843      	ldrh	r3, [r0, #2]
9001a60a:	88c0      	ldrh	r0, [r0, #6]
9001a60c:	4418      	add	r0, r3
9001a60e:	b200      	sxth	r0, r0
9001a610:	1a80      	subs	r0, r0, r2
9001a612:	3801      	subs	r0, #1
9001a614:	4770      	bx	lr
9001a616:	8843      	ldrh	r3, [r0, #2]
9001a618:	88c0      	ldrh	r0, [r0, #6]
9001a61a:	4418      	add	r0, r3
9001a61c:	b200      	sxth	r0, r0
9001a61e:	1a40      	subs	r0, r0, r1
9001a620:	e7f7      	b.n	9001a612 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
9001a622:	2000      	movs	r0, #0
9001a624:	4770      	bx	lr
	...

9001a628 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
9001a628:	4b01      	ldr	r3, [pc, #4]	@ (9001a630 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
9001a62a:	2200      	movs	r2, #0
9001a62c:	601a      	str	r2, [r3, #0]
9001a62e:	4770      	bx	lr
9001a630:	24027eac 	.word	0x24027eac

9001a634 <_ZN8touchgfx16TouchCalibration4clzuEm>:
9001a634:	4603      	mov	r3, r0
9001a636:	b1c8      	cbz	r0, 9001a66c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
9001a638:	0c02      	lsrs	r2, r0, #16
9001a63a:	0412      	lsls	r2, r2, #16
9001a63c:	b9a2      	cbnz	r2, 9001a668 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
9001a63e:	0403      	lsls	r3, r0, #16
9001a640:	2010      	movs	r0, #16
9001a642:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
9001a646:	bf04      	itt	eq
9001a648:	021b      	lsleq	r3, r3, #8
9001a64a:	3008      	addeq	r0, #8
9001a64c:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
9001a650:	bf04      	itt	eq
9001a652:	011b      	lsleq	r3, r3, #4
9001a654:	3004      	addeq	r0, #4
9001a656:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
9001a65a:	bf04      	itt	eq
9001a65c:	009b      	lsleq	r3, r3, #2
9001a65e:	3002      	addeq	r0, #2
9001a660:	2b00      	cmp	r3, #0
9001a662:	db04      	blt.n	9001a66e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
9001a664:	3001      	adds	r0, #1
9001a666:	4770      	bx	lr
9001a668:	2000      	movs	r0, #0
9001a66a:	e7ea      	b.n	9001a642 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
9001a66c:	2020      	movs	r0, #32
9001a66e:	4770      	bx	lr

9001a670 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
9001a670:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a674:	b087      	sub	sp, #28
9001a676:	4681      	mov	r9, r0
9001a678:	4698      	mov	r8, r3
9001a67a:	4610      	mov	r0, r2
9001a67c:	460d      	mov	r5, r1
9001a67e:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
9001a682:	b981      	cbnz	r1, 9001a6a6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
9001a684:	b14b      	cbz	r3, 9001a69a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
9001a686:	460b      	mov	r3, r1
9001a688:	464a      	mov	r2, r9
9001a68a:	4641      	mov	r1, r8
9001a68c:	e9cd 4700 	strd	r4, r7, [sp]
9001a690:	f7ff ffee 	bl	9001a670 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001a694:	b007      	add	sp, #28
9001a696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a69a:	f04f 33ff 	mov.w	r3, #4294967295
9001a69e:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
9001a6a2:	603b      	str	r3, [r7, #0]
9001a6a4:	e7f6      	b.n	9001a694 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
9001a6a6:	fa32 fa01 	lsrs.w	sl, r2, r1
9001a6aa:	d107      	bne.n	9001a6bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
9001a6ac:	fb09 f602 	mul.w	r6, r9, r2
9001a6b0:	fbb6 f0f4 	udiv	r0, r6, r4
9001a6b4:	fb04 6610 	mls	r6, r4, r0, r6
9001a6b8:	603e      	str	r6, [r7, #0]
9001a6ba:	e7eb      	b.n	9001a694 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
9001a6bc:	2601      	movs	r6, #1
9001a6be:	fa09 fb01 	lsl.w	fp, r9, r1
9001a6c2:	408e      	lsls	r6, r1
9001a6c4:	fbbb f3f4 	udiv	r3, fp, r4
9001a6c8:	3e01      	subs	r6, #1
9001a6ca:	9302      	str	r3, [sp, #8]
9001a6cc:	fb0a f303 	mul.w	r3, sl, r3
9001a6d0:	4016      	ands	r6, r2
9001a6d2:	9303      	str	r3, [sp, #12]
9001a6d4:	4630      	mov	r0, r6
9001a6d6:	f7ff ffad 	bl	9001a634 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001a6da:	464a      	mov	r2, r9
9001a6dc:	460b      	mov	r3, r1
9001a6de:	4601      	mov	r1, r0
9001a6e0:	4630      	mov	r0, r6
9001a6e2:	e9cd 4700 	strd	r4, r7, [sp]
9001a6e6:	f7ff ffc3 	bl	9001a670 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001a6ea:	9b02      	ldr	r3, [sp, #8]
9001a6ec:	4606      	mov	r6, r0
9001a6ee:	eb05 0108 	add.w	r1, r5, r8
9001a6f2:	fb04 bb13 	mls	fp, r4, r3, fp
9001a6f6:	4658      	mov	r0, fp
9001a6f8:	f7ff ff9c 	bl	9001a634 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001a6fc:	ab05      	add	r3, sp, #20
9001a6fe:	465a      	mov	r2, fp
9001a700:	e9cd 4300 	strd	r4, r3, [sp]
9001a704:	4603      	mov	r3, r0
9001a706:	4650      	mov	r0, sl
9001a708:	f7ff ffb2 	bl	9001a670 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001a70c:	6839      	ldr	r1, [r7, #0]
9001a70e:	9a05      	ldr	r2, [sp, #20]
9001a710:	9b03      	ldr	r3, [sp, #12]
9001a712:	4411      	add	r1, r2
9001a714:	fbb1 f2f4 	udiv	r2, r1, r4
9001a718:	18d3      	adds	r3, r2, r3
9001a71a:	fb04 1412 	mls	r4, r4, r2, r1
9001a71e:	441e      	add	r6, r3
9001a720:	603c      	str	r4, [r7, #0]
9001a722:	4430      	add	r0, r6
9001a724:	e7b6      	b.n	9001a694 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

9001a726 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
9001a726:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001a72a:	b085      	sub	sp, #20
9001a72c:	f1b0 0900 	subs.w	r9, r0, #0
9001a730:	461d      	mov	r5, r3
9001a732:	4617      	mov	r7, r2
9001a734:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
9001a736:	bfbb      	ittet	lt
9001a738:	f1c9 0900 	rsblt	r9, r9, #0
9001a73c:	f04f 36ff 	movlt.w	r6, #4294967295
9001a740:	2601      	movge	r6, #1
9001a742:	6823      	ldrlt	r3, [r4, #0]
9001a744:	bfbc      	itt	lt
9001a746:	425b      	neglt	r3, r3
9001a748:	6023      	strlt	r3, [r4, #0]
9001a74a:	2a00      	cmp	r2, #0
9001a74c:	da04      	bge.n	9001a758 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
9001a74e:	6823      	ldr	r3, [r4, #0]
9001a750:	4257      	negs	r7, r2
9001a752:	4276      	negs	r6, r6
9001a754:	425b      	negs	r3, r3
9001a756:	6023      	str	r3, [r4, #0]
9001a758:	2d00      	cmp	r5, #0
9001a75a:	4638      	mov	r0, r7
9001a75c:	bfba      	itte	lt
9001a75e:	426d      	neglt	r5, r5
9001a760:	f04f 38ff 	movlt.w	r8, #4294967295
9001a764:	f04f 0801 	movge.w	r8, #1
9001a768:	f7ff ff64 	bl	9001a634 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001a76c:	ab03      	add	r3, sp, #12
9001a76e:	463a      	mov	r2, r7
9001a770:	e9cd 5300 	strd	r5, r3, [sp]
9001a774:	4603      	mov	r3, r0
9001a776:	4648      	mov	r0, r9
9001a778:	f7ff ff7a 	bl	9001a670 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001a77c:	6823      	ldr	r3, [r4, #0]
9001a77e:	9a03      	ldr	r2, [sp, #12]
9001a780:	4546      	cmp	r6, r8
9001a782:	441a      	add	r2, r3
9001a784:	fb92 f3f5 	sdiv	r3, r2, r5
9001a788:	4418      	add	r0, r3
9001a78a:	fb05 2313 	mls	r3, r5, r3, r2
9001a78e:	bf18      	it	ne
9001a790:	4240      	negne	r0, r0
9001a792:	1c72      	adds	r2, r6, #1
9001a794:	6023      	str	r3, [r4, #0]
9001a796:	d105      	bne.n	9001a7a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
9001a798:	2b00      	cmp	r3, #0
9001a79a:	f1c3 0200 	rsb	r2, r3, #0
9001a79e:	db0b      	blt.n	9001a7b8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
9001a7a0:	6022      	str	r2, [r4, #0]
9001a7a2:	e006      	b.n	9001a7b2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
9001a7a4:	2e01      	cmp	r6, #1
9001a7a6:	d104      	bne.n	9001a7b2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
9001a7a8:	2b00      	cmp	r3, #0
9001a7aa:	da02      	bge.n	9001a7b2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
9001a7ac:	442b      	add	r3, r5
9001a7ae:	3801      	subs	r0, #1
9001a7b0:	6023      	str	r3, [r4, #0]
9001a7b2:	b005      	add	sp, #20
9001a7b4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001a7b8:	3801      	subs	r0, #1
9001a7ba:	1b52      	subs	r2, r2, r5
9001a7bc:	e7f0      	b.n	9001a7a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

9001a7c0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
9001a7c0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9001a7c4:	4c1c      	ldr	r4, [pc, #112]	@ (9001a838 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
9001a7c6:	4605      	mov	r5, r0
9001a7c8:	6807      	ldr	r7, [r0, #0]
9001a7ca:	69a3      	ldr	r3, [r4, #24]
9001a7cc:	b92b      	cbnz	r3, 9001a7da <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
9001a7ce:	6840      	ldr	r0, [r0, #4]
9001a7d0:	e9c5 7000 	strd	r7, r0, [r5]
9001a7d4:	b004      	add	sp, #16
9001a7d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001a7da:	f04f 0802 	mov.w	r8, #2
9001a7de:	68a2      	ldr	r2, [r4, #8]
9001a7e0:	ae04      	add	r6, sp, #16
9001a7e2:	6820      	ldr	r0, [r4, #0]
9001a7e4:	fb93 f1f8 	sdiv	r1, r3, r8
9001a7e8:	440a      	add	r2, r1
9001a7ea:	69e1      	ldr	r1, [r4, #28]
9001a7ec:	f846 2d04 	str.w	r2, [r6, #-4]!
9001a7f0:	463a      	mov	r2, r7
9001a7f2:	9600      	str	r6, [sp, #0]
9001a7f4:	f7ff ff97 	bl	9001a726 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001a7f8:	69a3      	ldr	r3, [r4, #24]
9001a7fa:	4607      	mov	r7, r0
9001a7fc:	686a      	ldr	r2, [r5, #4]
9001a7fe:	6a21      	ldr	r1, [r4, #32]
9001a800:	9600      	str	r6, [sp, #0]
9001a802:	6860      	ldr	r0, [r4, #4]
9001a804:	f7ff ff8f 	bl	9001a726 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001a808:	69a3      	ldr	r3, [r4, #24]
9001a80a:	6962      	ldr	r2, [r4, #20]
9001a80c:	4407      	add	r7, r0
9001a80e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9001a810:	9600      	str	r6, [sp, #0]
9001a812:	68e0      	ldr	r0, [r4, #12]
9001a814:	fb93 f8f8 	sdiv	r8, r3, r8
9001a818:	4442      	add	r2, r8
9001a81a:	9203      	str	r2, [sp, #12]
9001a81c:	682a      	ldr	r2, [r5, #0]
9001a81e:	f7ff ff82 	bl	9001a726 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001a822:	4680      	mov	r8, r0
9001a824:	9600      	str	r6, [sp, #0]
9001a826:	69a3      	ldr	r3, [r4, #24]
9001a828:	686a      	ldr	r2, [r5, #4]
9001a82a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9001a82c:	6920      	ldr	r0, [r4, #16]
9001a82e:	f7ff ff7a 	bl	9001a726 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001a832:	4440      	add	r0, r8
9001a834:	e7cc      	b.n	9001a7d0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
9001a836:	bf00      	nop
9001a838:	24027eb0 	.word	0x24027eb0

9001a83c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
9001a83c:	4b07      	ldr	r3, [pc, #28]	@ (9001a85c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
9001a83e:	781b      	ldrb	r3, [r3, #0]
9001a840:	2b01      	cmp	r3, #1
9001a842:	d109      	bne.n	9001a858 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
9001a844:	f9b1 3000 	ldrsh.w	r3, [r1]
9001a848:	f9b0 2000 	ldrsh.w	r2, [r0]
9001a84c:	8003      	strh	r3, [r0, #0]
9001a84e:	4b04      	ldr	r3, [pc, #16]	@ (9001a860 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
9001a850:	881b      	ldrh	r3, [r3, #0]
9001a852:	3b01      	subs	r3, #1
9001a854:	1a9b      	subs	r3, r3, r2
9001a856:	800b      	strh	r3, [r1, #0]
9001a858:	4770      	bx	lr
9001a85a:	bf00      	nop
9001a85c:	24027e94 	.word	0x24027e94
9001a860:	24027e90 	.word	0x24027e90

9001a864 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
9001a864:	4b07      	ldr	r3, [pc, #28]	@ (9001a884 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
9001a866:	b510      	push	{r4, lr}
9001a868:	781b      	ldrb	r3, [r3, #0]
9001a86a:	2b01      	cmp	r3, #1
9001a86c:	d108      	bne.n	9001a880 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
9001a86e:	4b06      	ldr	r3, [pc, #24]	@ (9001a888 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
9001a870:	880c      	ldrh	r4, [r1, #0]
9001a872:	881b      	ldrh	r3, [r3, #0]
9001a874:	f9b0 2000 	ldrsh.w	r2, [r0]
9001a878:	3b01      	subs	r3, #1
9001a87a:	1b1b      	subs	r3, r3, r4
9001a87c:	8003      	strh	r3, [r0, #0]
9001a87e:	800a      	strh	r2, [r1, #0]
9001a880:	bd10      	pop	{r4, pc}
9001a882:	bf00      	nop
9001a884:	24027e94 	.word	0x24027e94
9001a888:	24027e90 	.word	0x24027e90

9001a88c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
9001a88c:	4b0a      	ldr	r3, [pc, #40]	@ (9001a8b8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
9001a88e:	b510      	push	{r4, lr}
9001a890:	781b      	ldrb	r3, [r3, #0]
9001a892:	2b01      	cmp	r3, #1
9001a894:	d10e      	bne.n	9001a8b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
9001a896:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
9001a89a:	8843      	ldrh	r3, [r0, #2]
9001a89c:	f9b0 4000 	ldrsh.w	r4, [r0]
9001a8a0:	18ca      	adds	r2, r1, r3
9001a8a2:	4b06      	ldr	r3, [pc, #24]	@ (9001a8bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
9001a8a4:	8044      	strh	r4, [r0, #2]
9001a8a6:	881b      	ldrh	r3, [r3, #0]
9001a8a8:	1a9b      	subs	r3, r3, r2
9001a8aa:	8003      	strh	r3, [r0, #0]
9001a8ac:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001a8b0:	8081      	strh	r1, [r0, #4]
9001a8b2:	80c3      	strh	r3, [r0, #6]
9001a8b4:	bd10      	pop	{r4, pc}
9001a8b6:	bf00      	nop
9001a8b8:	24027e94 	.word	0x24027e94
9001a8bc:	24027e90 	.word	0x24027e90

9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
9001a8c0:	4b08      	ldr	r3, [pc, #32]	@ (9001a8e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
9001a8c2:	781b      	ldrb	r3, [r3, #0]
9001a8c4:	2b01      	cmp	r3, #1
9001a8c6:	d10c      	bne.n	9001a8e2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
9001a8c8:	8803      	ldrh	r3, [r0, #0]
9001a8ca:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
9001a8ce:	8842      	ldrh	r2, [r0, #2]
9001a8d0:	8002      	strh	r2, [r0, #0]
9001a8d2:	185a      	adds	r2, r3, r1
9001a8d4:	4b04      	ldr	r3, [pc, #16]	@ (9001a8e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
9001a8d6:	881b      	ldrh	r3, [r3, #0]
9001a8d8:	1a9b      	subs	r3, r3, r2
9001a8da:	8043      	strh	r3, [r0, #2]
9001a8dc:	88c3      	ldrh	r3, [r0, #6]
9001a8de:	80c1      	strh	r1, [r0, #6]
9001a8e0:	8083      	strh	r3, [r0, #4]
9001a8e2:	4770      	bx	lr
9001a8e4:	24027e94 	.word	0x24027e94
9001a8e8:	24027e90 	.word	0x24027e90

9001a8ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
9001a8ec:	4b07      	ldr	r3, [pc, #28]	@ (9001a90c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
9001a8ee:	b510      	push	{r4, lr}
9001a8f0:	781b      	ldrb	r3, [r3, #0]
9001a8f2:	2b01      	cmp	r3, #1
9001a8f4:	d108      	bne.n	9001a908 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
9001a8f6:	f9b1 3000 	ldrsh.w	r3, [r1]
9001a8fa:	f9b0 4000 	ldrsh.w	r4, [r0]
9001a8fe:	8003      	strh	r3, [r0, #0]
9001a900:	8893      	ldrh	r3, [r2, #4]
9001a902:	3b01      	subs	r3, #1
9001a904:	1b1b      	subs	r3, r3, r4
9001a906:	800b      	strh	r3, [r1, #0]
9001a908:	bd10      	pop	{r4, pc}
9001a90a:	bf00      	nop
9001a90c:	24027e94 	.word	0x24027e94

9001a910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
9001a910:	4b0b      	ldr	r3, [pc, #44]	@ (9001a940 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
9001a912:	781b      	ldrb	r3, [r3, #0]
9001a914:	2b01      	cmp	r3, #1
9001a916:	d111      	bne.n	9001a93c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
9001a918:	680b      	ldr	r3, [r1, #0]
9001a91a:	ed90 7a00 	vldr	s14, [r0]
9001a91e:	6003      	str	r3, [r0, #0]
9001a920:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
9001a924:	eddf 6a07 	vldr	s13, [pc, #28]	@ 9001a944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
9001a928:	ee07 3a90 	vmov	s15, r3
9001a92c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a930:	ee77 7ae6 	vsub.f32	s15, s15, s13
9001a934:	ee77 7ac7 	vsub.f32	s15, s15, s14
9001a938:	edc1 7a00 	vstr	s15, [r1]
9001a93c:	4770      	bx	lr
9001a93e:	bf00      	nop
9001a940:	24027e94 	.word	0x24027e94
9001a944:	38d1b717 	.word	0x38d1b717

9001a948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
9001a948:	4b0a      	ldr	r3, [pc, #40]	@ (9001a974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
9001a94a:	460a      	mov	r2, r1
9001a94c:	b510      	push	{r4, lr}
9001a94e:	781b      	ldrb	r3, [r3, #0]
9001a950:	2b01      	cmp	r3, #1
9001a952:	d10d      	bne.n	9001a970 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
9001a954:	8881      	ldrh	r1, [r0, #4]
9001a956:	8803      	ldrh	r3, [r0, #0]
9001a958:	440b      	add	r3, r1
9001a95a:	4601      	mov	r1, r0
9001a95c:	3b01      	subs	r3, #1
9001a95e:	f821 3b02 	strh.w	r3, [r1], #2
9001a962:	f7ff ffc3 	bl	9001a8ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
9001a966:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001a96a:	88c2      	ldrh	r2, [r0, #6]
9001a96c:	80c3      	strh	r3, [r0, #6]
9001a96e:	8082      	strh	r2, [r0, #4]
9001a970:	bd10      	pop	{r4, pc}
9001a972:	bf00      	nop
9001a974:	24027e94 	.word	0x24027e94

9001a978 <_ZN8touchgfx11Application19changeToStartScreenEv>:
9001a978:	4770      	bx	lr
	...

9001a97c <_ZN8touchgfx11Application13requestRedrawEv>:
9001a97c:	4b06      	ldr	r3, [pc, #24]	@ (9001a998 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
9001a97e:	2100      	movs	r1, #0
9001a980:	f9b3 2000 	ldrsh.w	r2, [r3]
9001a984:	4b05      	ldr	r3, [pc, #20]	@ (9001a99c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
9001a986:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
9001a98a:	f9b3 3000 	ldrsh.w	r3, [r3]
9001a98e:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
9001a992:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
9001a996:	4770      	bx	lr
9001a998:	24027e90 	.word	0x24027e90
9001a99c:	24027e92 	.word	0x24027e92

9001a9a0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
9001a9a0:	4b03      	ldr	r3, [pc, #12]	@ (9001a9b0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
9001a9a2:	6818      	ldr	r0, [r3, #0]
9001a9a4:	b110      	cbz	r0, 9001a9ac <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
9001a9a6:	6803      	ldr	r3, [r0, #0]
9001a9a8:	699b      	ldr	r3, [r3, #24]
9001a9aa:	4718      	bx	r3
9001a9ac:	4770      	bx	lr
9001a9ae:	bf00      	nop
9001a9b0:	24027ee0 	.word	0x24027ee0

9001a9b4 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
9001a9b4:	4770      	bx	lr
	...

9001a9b8 <_ZN8touchgfx11Application4drawEv>:
9001a9b8:	4b09      	ldr	r3, [pc, #36]	@ (9001a9e0 <_ZN8touchgfx11Application4drawEv+0x28>)
9001a9ba:	b507      	push	{r0, r1, r2, lr}
9001a9bc:	f9b3 2000 	ldrsh.w	r2, [r3]
9001a9c0:	2100      	movs	r1, #0
9001a9c2:	4b08      	ldr	r3, [pc, #32]	@ (9001a9e4 <_ZN8touchgfx11Application4drawEv+0x2c>)
9001a9c4:	9100      	str	r1, [sp, #0]
9001a9c6:	4669      	mov	r1, sp
9001a9c8:	f9b3 3000 	ldrsh.w	r3, [r3]
9001a9cc:	f8ad 2004 	strh.w	r2, [sp, #4]
9001a9d0:	f8ad 3006 	strh.w	r3, [sp, #6]
9001a9d4:	6803      	ldr	r3, [r0, #0]
9001a9d6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001a9d8:	4798      	blx	r3
9001a9da:	b003      	add	sp, #12
9001a9dc:	f85d fb04 	ldr.w	pc, [sp], #4
9001a9e0:	24027e90 	.word	0x24027e90
9001a9e4:	24027e92 	.word	0x24027e92

9001a9e8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
9001a9e8:	4b03      	ldr	r3, [pc, #12]	@ (9001a9f8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
9001a9ea:	6818      	ldr	r0, [r3, #0]
9001a9ec:	b110      	cbz	r0, 9001a9f4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
9001a9ee:	6803      	ldr	r3, [r0, #0]
9001a9f0:	69db      	ldr	r3, [r3, #28]
9001a9f2:	4718      	bx	r3
9001a9f4:	4770      	bx	lr
9001a9f6:	bf00      	nop
9001a9f8:	24027ee0 	.word	0x24027ee0

9001a9fc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
9001a9fc:	4b03      	ldr	r3, [pc, #12]	@ (9001aa0c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
9001a9fe:	6818      	ldr	r0, [r3, #0]
9001aa00:	b110      	cbz	r0, 9001aa08 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
9001aa02:	6803      	ldr	r3, [r0, #0]
9001aa04:	6a1b      	ldr	r3, [r3, #32]
9001aa06:	4718      	bx	r3
9001aa08:	4770      	bx	lr
9001aa0a:	bf00      	nop
9001aa0c:	24027ee0 	.word	0x24027ee0

9001aa10 <_ZN8touchgfx11Application16clearCachedAreasEv>:
9001aa10:	2300      	movs	r3, #0
9001aa12:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
9001aa16:	4770      	bx	lr

9001aa18 <_ZN8touchgfx11Application14handleKeyEventEh>:
9001aa18:	4b03      	ldr	r3, [pc, #12]	@ (9001aa28 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
9001aa1a:	6818      	ldr	r0, [r3, #0]
9001aa1c:	b110      	cbz	r0, 9001aa24 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
9001aa1e:	6803      	ldr	r3, [r0, #0]
9001aa20:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001aa22:	4718      	bx	r3
9001aa24:	4770      	bx	lr
9001aa26:	bf00      	nop
9001aa28:	24027ee0 	.word	0x24027ee0

9001aa2c <_ZN8touchgfx11ApplicationD1Ev>:
9001aa2c:	4770      	bx	lr

9001aa2e <_ZN8touchgfx11ApplicationD0Ev>:
9001aa2e:	b510      	push	{r4, lr}
9001aa30:	4604      	mov	r4, r0
9001aa32:	f44f 719e 	mov.w	r1, #316	@ 0x13c
9001aa36:	f010 fd66 	bl	9002b506 <_ZdlPvj>
9001aa3a:	4620      	mov	r0, r4
9001aa3c:	bd10      	pop	{r4, pc}

9001aa3e <_ZNK8touchgfx4Rect9intersectERKS0_>:
9001aa3e:	b510      	push	{r4, lr}
9001aa40:	f9b1 4000 	ldrsh.w	r4, [r1]
9001aa44:	888a      	ldrh	r2, [r1, #4]
9001aa46:	f9b0 3000 	ldrsh.w	r3, [r0]
9001aa4a:	4422      	add	r2, r4
9001aa4c:	b212      	sxth	r2, r2
9001aa4e:	4293      	cmp	r3, r2
9001aa50:	da15      	bge.n	9001aa7e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
9001aa52:	8882      	ldrh	r2, [r0, #4]
9001aa54:	4413      	add	r3, r2
9001aa56:	b21b      	sxth	r3, r3
9001aa58:	429c      	cmp	r4, r3
9001aa5a:	da10      	bge.n	9001aa7e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
9001aa5c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
9001aa60:	88c9      	ldrh	r1, [r1, #6]
9001aa62:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
9001aa66:	4419      	add	r1, r3
9001aa68:	b209      	sxth	r1, r1
9001aa6a:	428a      	cmp	r2, r1
9001aa6c:	da07      	bge.n	9001aa7e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
9001aa6e:	88c0      	ldrh	r0, [r0, #6]
9001aa70:	4410      	add	r0, r2
9001aa72:	b200      	sxth	r0, r0
9001aa74:	4283      	cmp	r3, r0
9001aa76:	bfac      	ite	ge
9001aa78:	2000      	movge	r0, #0
9001aa7a:	2001      	movlt	r0, #1
9001aa7c:	bd10      	pop	{r4, pc}
9001aa7e:	2000      	movs	r0, #0
9001aa80:	e7fc      	b.n	9001aa7c <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

9001aa82 <_ZN8touchgfx4Rect10restrictToEss>:
9001aa82:	f9b0 3000 	ldrsh.w	r3, [r0]
9001aa86:	2b00      	cmp	r3, #0
9001aa88:	b510      	push	{r4, lr}
9001aa8a:	da04      	bge.n	9001aa96 <_ZN8touchgfx4Rect10restrictToEss+0x14>
9001aa8c:	8884      	ldrh	r4, [r0, #4]
9001aa8e:	4423      	add	r3, r4
9001aa90:	8083      	strh	r3, [r0, #4]
9001aa92:	2300      	movs	r3, #0
9001aa94:	8003      	strh	r3, [r0, #0]
9001aa96:	f9b0 4000 	ldrsh.w	r4, [r0]
9001aa9a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001aa9e:	1b09      	subs	r1, r1, r4
9001aaa0:	428b      	cmp	r3, r1
9001aaa2:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9001aaa6:	bfc8      	it	gt
9001aaa8:	8081      	strhgt	r1, [r0, #4]
9001aaaa:	2b00      	cmp	r3, #0
9001aaac:	da04      	bge.n	9001aab8 <_ZN8touchgfx4Rect10restrictToEss+0x36>
9001aaae:	88c1      	ldrh	r1, [r0, #6]
9001aab0:	440b      	add	r3, r1
9001aab2:	80c3      	strh	r3, [r0, #6]
9001aab4:	2300      	movs	r3, #0
9001aab6:	8043      	strh	r3, [r0, #2]
9001aab8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
9001aabc:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
9001aac0:	1a52      	subs	r2, r2, r1
9001aac2:	4293      	cmp	r3, r2
9001aac4:	bfc8      	it	gt
9001aac6:	80c2      	strhgt	r2, [r0, #6]
9001aac8:	bd10      	pop	{r4, pc}
	...

9001aacc <_ZN8touchgfx11Application4drawERNS_4RectE>:
9001aacc:	4b10      	ldr	r3, [pc, #64]	@ (9001ab10 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
9001aace:	b510      	push	{r4, lr}
9001aad0:	460c      	mov	r4, r1
9001aad2:	f9b3 2000 	ldrsh.w	r2, [r3]
9001aad6:	4b0f      	ldr	r3, [pc, #60]	@ (9001ab14 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
9001aad8:	4620      	mov	r0, r4
9001aada:	f9b3 1000 	ldrsh.w	r1, [r3]
9001aade:	f7ff ffd0 	bl	9001aa82 <_ZN8touchgfx4Rect10restrictToEss>
9001aae2:	4b0d      	ldr	r3, [pc, #52]	@ (9001ab18 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
9001aae4:	6818      	ldr	r0, [r3, #0]
9001aae6:	b190      	cbz	r0, 9001ab0e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
9001aae8:	6803      	ldr	r3, [r0, #0]
9001aaea:	4621      	mov	r1, r4
9001aaec:	689b      	ldr	r3, [r3, #8]
9001aaee:	4798      	blx	r3
9001aaf0:	4b0a      	ldr	r3, [pc, #40]	@ (9001ab1c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
9001aaf2:	6818      	ldr	r0, [r3, #0]
9001aaf4:	b118      	cbz	r0, 9001aafe <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
9001aaf6:	6803      	ldr	r3, [r0, #0]
9001aaf8:	4621      	mov	r1, r4
9001aafa:	689b      	ldr	r3, [r3, #8]
9001aafc:	4798      	blx	r3
9001aafe:	4b08      	ldr	r3, [pc, #32]	@ (9001ab20 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
9001ab00:	4621      	mov	r1, r4
9001ab02:	6818      	ldr	r0, [r3, #0]
9001ab04:	6803      	ldr	r3, [r0, #0]
9001ab06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001ab0a:	69db      	ldr	r3, [r3, #28]
9001ab0c:	4718      	bx	r3
9001ab0e:	bd10      	pop	{r4, pc}
9001ab10:	24027e92 	.word	0x24027e92
9001ab14:	24027e90 	.word	0x24027e90
9001ab18:	24027ee0 	.word	0x24027ee0
9001ab1c:	24027edc 	.word	0x24027edc
9001ab20:	24027e9c 	.word	0x24027e9c

9001ab24 <_ZNK8touchgfx4Rect8includesERKS0_>:
9001ab24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001ab26:	4606      	mov	r6, r0
9001ab28:	4608      	mov	r0, r1
9001ab2a:	460f      	mov	r7, r1
9001ab2c:	f7fa f91d 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
9001ab30:	b9e8      	cbnz	r0, 9001ab6e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001ab32:	f9b7 5000 	ldrsh.w	r5, [r7]
9001ab36:	f9b6 4000 	ldrsh.w	r4, [r6]
9001ab3a:	42a5      	cmp	r5, r4
9001ab3c:	db17      	blt.n	9001ab6e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001ab3e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
9001ab42:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
9001ab46:	429a      	cmp	r2, r3
9001ab48:	db11      	blt.n	9001ab6e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001ab4a:	88b9      	ldrh	r1, [r7, #4]
9001ab4c:	440d      	add	r5, r1
9001ab4e:	88b1      	ldrh	r1, [r6, #4]
9001ab50:	440c      	add	r4, r1
9001ab52:	b22d      	sxth	r5, r5
9001ab54:	b224      	sxth	r4, r4
9001ab56:	42a5      	cmp	r5, r4
9001ab58:	dc09      	bgt.n	9001ab6e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001ab5a:	88f8      	ldrh	r0, [r7, #6]
9001ab5c:	4410      	add	r0, r2
9001ab5e:	88f2      	ldrh	r2, [r6, #6]
9001ab60:	4413      	add	r3, r2
9001ab62:	b200      	sxth	r0, r0
9001ab64:	b21b      	sxth	r3, r3
9001ab66:	4298      	cmp	r0, r3
9001ab68:	bfcc      	ite	gt
9001ab6a:	2000      	movgt	r0, #0
9001ab6c:	2001      	movle	r0, #1
9001ab6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9001ab70 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
9001ab70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001ab72:	4604      	mov	r4, r0
9001ab74:	4608      	mov	r0, r1
9001ab76:	460d      	mov	r5, r1
9001ab78:	f7fa f8f7 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
9001ab7c:	b978      	cbnz	r0, 9001ab9e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
9001ab7e:	4620      	mov	r0, r4
9001ab80:	f7fa f8f3 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
9001ab84:	f9b5 6000 	ldrsh.w	r6, [r5]
9001ab88:	b150      	cbz	r0, 9001aba0 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
9001ab8a:	8026      	strh	r6, [r4, #0]
9001ab8c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001ab90:	8063      	strh	r3, [r4, #2]
9001ab92:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
9001ab96:	80a3      	strh	r3, [r4, #4]
9001ab98:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
9001ab9c:	80e3      	strh	r3, [r4, #6]
9001ab9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001aba0:	f9b4 1000 	ldrsh.w	r1, [r4]
9001aba4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001aba8:	42b1      	cmp	r1, r6
9001abaa:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001abae:	f8b5 c004 	ldrh.w	ip, [r5, #4]
9001abb2:	460f      	mov	r7, r1
9001abb4:	88ed      	ldrh	r5, [r5, #6]
9001abb6:	bfa8      	it	ge
9001abb8:	4637      	movge	r7, r6
9001abba:	4293      	cmp	r3, r2
9001abbc:	4618      	mov	r0, r3
9001abbe:	4466      	add	r6, ip
9001abc0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
9001abc4:	bfa8      	it	ge
9001abc6:	4610      	movge	r0, r2
9001abc8:	442a      	add	r2, r5
9001abca:	88e5      	ldrh	r5, [r4, #6]
9001abcc:	4461      	add	r1, ip
9001abce:	b236      	sxth	r6, r6
9001abd0:	8027      	strh	r7, [r4, #0]
9001abd2:	442b      	add	r3, r5
9001abd4:	b209      	sxth	r1, r1
9001abd6:	b212      	sxth	r2, r2
9001abd8:	8060      	strh	r0, [r4, #2]
9001abda:	b21b      	sxth	r3, r3
9001abdc:	428e      	cmp	r6, r1
9001abde:	bfac      	ite	ge
9001abe0:	ebc7 0106 	rsbge	r1, r7, r6
9001abe4:	ebc7 0101 	rsblt	r1, r7, r1
9001abe8:	429a      	cmp	r2, r3
9001abea:	bfac      	ite	ge
9001abec:	ebc0 0202 	rsbge	r2, r0, r2
9001abf0:	ebc0 0203 	rsblt	r2, r0, r3
9001abf4:	80a1      	strh	r1, [r4, #4]
9001abf6:	80e2      	strh	r2, [r4, #6]
9001abf8:	e7d1      	b.n	9001ab9e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

9001abfc <_ZN8touchgfx11Application11getInstanceEv>:
9001abfc:	4b01      	ldr	r3, [pc, #4]	@ (9001ac04 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
9001abfe:	6818      	ldr	r0, [r3, #0]
9001ac00:	4770      	bx	lr
9001ac02:	bf00      	nop
9001ac04:	24027ef0 	.word	0x24027ef0

9001ac08 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
9001ac08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001ac0a:	4b10      	ldr	r3, [pc, #64]	@ (9001ac4c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
9001ac0c:	4605      	mov	r5, r0
9001ac0e:	781b      	ldrb	r3, [r3, #0]
9001ac10:	b1d3      	cbz	r3, 9001ac48 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
9001ac12:	4b0f      	ldr	r3, [pc, #60]	@ (9001ac50 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
9001ac14:	f100 06ee 	add.w	r6, r0, #238	@ 0xee
9001ac18:	4f0e      	ldr	r7, [pc, #56]	@ (9001ac54 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
9001ac1a:	881c      	ldrh	r4, [r3, #0]
9001ac1c:	f8b5 312e 	ldrh.w	r3, [r5, #302]	@ 0x12e
9001ac20:	42a3      	cmp	r3, r4
9001ac22:	d90e      	bls.n	9001ac42 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
9001ac24:	683b      	ldr	r3, [r7, #0]
9001ac26:	f893 2076 	ldrb.w	r2, [r3, #118]	@ 0x76
9001ac2a:	b10a      	cbz	r2, 9001ac30 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
9001ac2c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9001ac2e:	b900      	cbnz	r0, 9001ac32 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
9001ac30:	6898      	ldr	r0, [r3, #8]
9001ac32:	6803      	ldr	r3, [r0, #0]
9001ac34:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
9001ac38:	3401      	adds	r4, #1
9001ac3a:	69db      	ldr	r3, [r3, #28]
9001ac3c:	4798      	blx	r3
9001ac3e:	b2a4      	uxth	r4, r4
9001ac40:	e7ec      	b.n	9001ac1c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
9001ac42:	2300      	movs	r3, #0
9001ac44:	f8a5 312e 	strh.w	r3, [r5, #302]	@ 0x12e
9001ac48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001ac4a:	bf00      	nop
9001ac4c:	24027e9a 	.word	0x24027e9a
9001ac50:	24000068 	.word	0x24000068
9001ac54:	24027e9c 	.word	0x24027e9c

9001ac58 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
9001ac58:	2300      	movs	r3, #0
9001ac5a:	b510      	push	{r4, lr}
9001ac5c:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
9001ac60:	4604      	mov	r4, r0
9001ac62:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
9001ac66:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
9001ac6a:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
9001ac6e:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
9001ac72:	429a      	cmp	r2, r3
9001ac74:	d90e      	bls.n	9001ac94 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
9001ac76:	18e2      	adds	r2, r4, r3
9001ac78:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
9001ac7c:	b122      	cbz	r2, 9001ac88 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
9001ac7e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
9001ac82:	6803      	ldr	r3, [r0, #0]
9001ac84:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001ac86:	4798      	blx	r3
9001ac88:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
9001ac8c:	3301      	adds	r3, #1
9001ac8e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
9001ac92:	e7ea      	b.n	9001ac6a <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
9001ac94:	bd10      	pop	{r4, pc}

9001ac96 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
9001ac96:	b530      	push	{r4, r5, lr}
9001ac98:	2200      	movs	r2, #0
9001ac9a:	f8b0 5080 	ldrh.w	r5, [r0, #128]	@ 0x80
9001ac9e:	b293      	uxth	r3, r2
9001aca0:	429d      	cmp	r5, r3
9001aca2:	d90e      	bls.n	9001acc2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
9001aca4:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
9001aca8:	428b      	cmp	r3, r1
9001acaa:	d10b      	bne.n	9001acc4 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
9001acac:	1884      	adds	r4, r0, r2
9001acae:	f894 3084 	ldrb.w	r3, [r4, #132]	@ 0x84
9001acb2:	b13b      	cbz	r3, 9001acc4 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
9001acb4:	3b01      	subs	r3, #1
9001acb6:	b2db      	uxtb	r3, r3
9001acb8:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
9001acbc:	b90b      	cbnz	r3, 9001acc2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
9001acbe:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
9001acc2:	bd30      	pop	{r4, r5, pc}
9001acc4:	3201      	adds	r2, #1
9001acc6:	e7ea      	b.n	9001ac9e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

9001acc8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
9001acc8:	2300      	movs	r3, #0
9001acca:	f100 0284 	add.w	r2, r0, #132	@ 0x84
9001acce:	30a4      	adds	r0, #164	@ 0xa4
9001acd0:	f820 3c24 	strh.w	r3, [r0, #-36]
9001acd4:	f802 3b01 	strb.w	r3, [r2], #1
9001acd8:	4282      	cmp	r2, r0
9001acda:	d1fb      	bne.n	9001acd4 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
9001acdc:	4770      	bx	lr
	...

9001ace0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
9001ace0:	b570      	push	{r4, r5, r6, lr}
9001ace2:	4c0b      	ldr	r4, [pc, #44]	@ (9001ad10 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
9001ace4:	4605      	mov	r5, r0
9001ace6:	460e      	mov	r6, r1
9001ace8:	6820      	ldr	r0, [r4, #0]
9001acea:	b110      	cbz	r0, 9001acf2 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
9001acec:	6803      	ldr	r3, [r0, #0]
9001acee:	695b      	ldr	r3, [r3, #20]
9001acf0:	4798      	blx	r3
9001acf2:	1d28      	adds	r0, r5, #4
9001acf4:	f7ff ffe8 	bl	9001acc8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
9001acf8:	6026      	str	r6, [r4, #0]
9001acfa:	6833      	ldr	r3, [r6, #0]
9001acfc:	4630      	mov	r0, r6
9001acfe:	68db      	ldr	r3, [r3, #12]
9001ad00:	4798      	blx	r3
9001ad02:	682b      	ldr	r3, [r5, #0]
9001ad04:	4628      	mov	r0, r5
9001ad06:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001ad08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001ad0c:	4718      	bx	r3
9001ad0e:	bf00      	nop
9001ad10:	24027ee0 	.word	0x24027ee0

9001ad14 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
9001ad14:	2300      	movs	r3, #0
9001ad16:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
9001ad1a:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
9001ad1e:	461a      	mov	r2, r3
9001ad20:	b5f0      	push	{r4, r5, r6, r7, lr}
9001ad22:	461c      	mov	r4, r3
9001ad24:	461d      	mov	r5, r3
9001ad26:	459c      	cmp	ip, r3
9001ad28:	dd1a      	ble.n	9001ad60 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
9001ad2a:	18c6      	adds	r6, r0, r3
9001ad2c:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
9001ad30:	b16e      	cbz	r6, 9001ad4e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
9001ad32:	429a      	cmp	r2, r3
9001ad34:	d008      	beq.n	9001ad48 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
9001ad36:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
9001ad3a:	fa1f fe82 	uxth.w	lr, r2
9001ad3e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
9001ad42:	1887      	adds	r7, r0, r2
9001ad44:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
9001ad48:	3201      	adds	r2, #1
9001ad4a:	3301      	adds	r3, #1
9001ad4c:	e7eb      	b.n	9001ad26 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
9001ad4e:	4299      	cmp	r1, r3
9001ad50:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
9001ad54:	bfa8      	it	ge
9001ad56:	3501      	addge	r5, #1
9001ad58:	429e      	cmp	r6, r3
9001ad5a:	bfc8      	it	gt
9001ad5c:	3401      	addgt	r4, #1
9001ad5e:	e7f4      	b.n	9001ad4a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
9001ad60:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
9001ad64:	1b49      	subs	r1, r1, r5
9001ad66:	1b1b      	subs	r3, r3, r4
9001ad68:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
9001ad6c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
9001ad70:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
9001ad74:	4293      	cmp	r3, r2
9001ad76:	dd03      	ble.n	9001ad80 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
9001ad78:	3b01      	subs	r3, #1
9001ad7a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
9001ad7e:	e7f7      	b.n	9001ad70 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
9001ad80:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

9001ad84 <_ZN8touchgfx11Application15handleTickEventEv>:
9001ad84:	b570      	push	{r4, r5, r6, lr}
9001ad86:	4d16      	ldr	r5, [pc, #88]	@ (9001ade0 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
9001ad88:	4604      	mov	r4, r0
9001ad8a:	6828      	ldr	r0, [r5, #0]
9001ad8c:	b140      	cbz	r0, 9001ada0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001ad8e:	7a03      	ldrb	r3, [r0, #8]
9001ad90:	b933      	cbnz	r3, 9001ada0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001ad92:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
9001ad96:	6803      	ldr	r3, [r0, #0]
9001ad98:	689b      	ldr	r3, [r3, #8]
9001ad9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001ad9e:	4718      	bx	r3
9001ada0:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
9001ada4:	4e0f      	ldr	r6, [pc, #60]	@ (9001ade4 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
9001ada6:	b973      	cbnz	r3, 9001adc6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001ada8:	b168      	cbz	r0, 9001adc6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001adaa:	7a03      	ldrb	r3, [r0, #8]
9001adac:	b15b      	cbz	r3, 9001adc6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001adae:	6830      	ldr	r0, [r6, #0]
9001adb0:	b110      	cbz	r0, 9001adb8 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
9001adb2:	6803      	ldr	r3, [r0, #0]
9001adb4:	691b      	ldr	r3, [r3, #16]
9001adb6:	4798      	blx	r3
9001adb8:	6828      	ldr	r0, [r5, #0]
9001adba:	6803      	ldr	r3, [r0, #0]
9001adbc:	68db      	ldr	r3, [r3, #12]
9001adbe:	4798      	blx	r3
9001adc0:	2301      	movs	r3, #1
9001adc2:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
9001adc6:	3404      	adds	r4, #4
9001adc8:	4620      	mov	r0, r4
9001adca:	f7ff ff45 	bl	9001ac58 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
9001adce:	4620      	mov	r0, r4
9001add0:	f7ff ffa0 	bl	9001ad14 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
9001add4:	6830      	ldr	r0, [r6, #0]
9001add6:	b110      	cbz	r0, 9001adde <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
9001add8:	6803      	ldr	r3, [r0, #0]
9001adda:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001addc:	e7dd      	b.n	9001ad9a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
9001adde:	bd70      	pop	{r4, r5, r6, pc}
9001ade0:	24027ee4 	.word	0x24027ee4
9001ade4:	24027ee0 	.word	0x24027ee0

9001ade8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
9001ade8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001adea:	2300      	movs	r3, #0
9001adec:	4604      	mov	r4, r0
9001adee:	460d      	mov	r5, r1
9001adf0:	f8b0 1080 	ldrh.w	r1, [r0, #128]	@ 0x80
9001adf4:	4618      	mov	r0, r3
9001adf6:	b29a      	uxth	r2, r3
9001adf8:	4291      	cmp	r1, r2
9001adfa:	d912      	bls.n	9001ae22 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x3a>
9001adfc:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
9001ae00:	18e6      	adds	r6, r4, r3
9001ae02:	42af      	cmp	r7, r5
9001ae04:	f896 2084 	ldrb.w	r2, [r6, #132]	@ 0x84
9001ae08:	d105      	bne.n	9001ae16 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
9001ae0a:	2aff      	cmp	r2, #255	@ 0xff
9001ae0c:	d002      	beq.n	9001ae14 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
9001ae0e:	3201      	adds	r2, #1
9001ae10:	f886 2084 	strb.w	r2, [r6, #132]	@ 0x84
9001ae14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001ae16:	2a00      	cmp	r2, #0
9001ae18:	f103 0301 	add.w	r3, r3, #1
9001ae1c:	bf08      	it	eq
9001ae1e:	2001      	moveq	r0, #1
9001ae20:	e7e9      	b.n	9001adf6 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
9001ae22:	b120      	cbz	r0, 9001ae2e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
9001ae24:	2920      	cmp	r1, #32
9001ae26:	d102      	bne.n	9001ae2e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
9001ae28:	4620      	mov	r0, r4
9001ae2a:	f7ff ff73 	bl	9001ad14 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
9001ae2e:	f8b4 3080 	ldrh.w	r3, [r4, #128]	@ 0x80
9001ae32:	2b1f      	cmp	r3, #31
9001ae34:	d8ee      	bhi.n	9001ae14 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
9001ae36:	18e2      	adds	r2, r4, r3
9001ae38:	2101      	movs	r1, #1
9001ae3a:	f882 1084 	strb.w	r1, [r2, #132]	@ 0x84
9001ae3e:	185a      	adds	r2, r3, r1
9001ae40:	f8a4 2080 	strh.w	r2, [r4, #128]	@ 0x80
9001ae44:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
9001ae48:	e7e4      	b.n	9001ae14 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

9001ae4a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
9001ae4a:	4603      	mov	r3, r0
9001ae4c:	f100 0140 	add.w	r1, r0, #64	@ 0x40
9001ae50:	2200      	movs	r2, #0
9001ae52:	801a      	strh	r2, [r3, #0]
9001ae54:	3308      	adds	r3, #8
9001ae56:	f823 2c06 	strh.w	r2, [r3, #-6]
9001ae5a:	f823 2c04 	strh.w	r2, [r3, #-4]
9001ae5e:	f823 2c02 	strh.w	r2, [r3, #-2]
9001ae62:	428b      	cmp	r3, r1
9001ae64:	d1f5      	bne.n	9001ae52 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
9001ae66:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
9001ae6a:	4770      	bx	lr

9001ae6c <_ZN8touchgfx11ApplicationC1Ev>:
9001ae6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001ae6e:	4b1d      	ldr	r3, [pc, #116]	@ (9001aee4 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
9001ae70:	4606      	mov	r6, r0
9001ae72:	4604      	mov	r4, r0
9001ae74:	2500      	movs	r5, #0
9001ae76:	f846 3b04 	str.w	r3, [r6], #4
9001ae7a:	22a8      	movs	r2, #168	@ 0xa8
9001ae7c:	2100      	movs	r1, #0
9001ae7e:	4630      	mov	r0, r6
9001ae80:	f010 ffba 	bl	9002bdf8 <memset>
9001ae84:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
9001ae88:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
9001ae8c:	4f16      	ldr	r7, [pc, #88]	@ (9001aee8 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
9001ae8e:	f7ff ffdc 	bl	9001ae4a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001ae92:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
9001ae96:	f7ff ffd8 	bl	9001ae4a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001ae9a:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
9001ae9e:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
9001aea2:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
9001aea6:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
9001aeaa:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
9001aeae:	490f      	ldr	r1, [pc, #60]	@ (9001aeec <_ZN8touchgfx11ApplicationC1Ev+0x80>)
9001aeb0:	480f      	ldr	r0, [pc, #60]	@ (9001aef0 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
9001aeb2:	f00e ff69 	bl	90029d88 <CRC_Lock>
9001aeb6:	4b0f      	ldr	r3, [pc, #60]	@ (9001aef4 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
9001aeb8:	b158      	cbz	r0, 9001aed2 <_ZN8touchgfx11ApplicationC1Ev+0x66>
9001aeba:	801d      	strh	r5, [r3, #0]
9001aebc:	2300      	movs	r3, #0
9001aebe:	4a0e      	ldr	r2, [pc, #56]	@ (9001aef8 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
9001aec0:	4630      	mov	r0, r6
9001aec2:	6013      	str	r3, [r2, #0]
9001aec4:	4a0d      	ldr	r2, [pc, #52]	@ (9001aefc <_ZN8touchgfx11ApplicationC1Ev+0x90>)
9001aec6:	603b      	str	r3, [r7, #0]
9001aec8:	6013      	str	r3, [r2, #0]
9001aeca:	f7ff fefd 	bl	9001acc8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
9001aece:	4620      	mov	r0, r4
9001aed0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001aed2:	f44f 6280 	mov.w	r2, #1024	@ 0x400
9001aed6:	2002      	movs	r0, #2
9001aed8:	801a      	strh	r2, [r3, #0]
9001aeda:	6038      	str	r0, [r7, #0]
9001aedc:	f001 fb12 	bl	9001c504 <_ZN8touchgfx6Screen4drawEv>
9001aee0:	e7ec      	b.n	9001aebc <_ZN8touchgfx11ApplicationC1Ev+0x50>
9001aee2:	bf00      	nop
9001aee4:	90030640 	.word	0x90030640
9001aee8:	24027ee0 	.word	0x24027ee0
9001aeec:	b5e8b5cd 	.word	0xb5e8b5cd
9001aef0:	f407a5c2 	.word	0xf407a5c2
9001aef4:	24000068 	.word	0x24000068
9001aef8:	24027ef0 	.word	0x24027ef0
9001aefc:	24027ee4 	.word	0x24027ee4

9001af00 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
9001af00:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
9001af04:	3b01      	subs	r3, #1
9001af06:	b29b      	uxth	r3, r3
9001af08:	428b      	cmp	r3, r1
9001af0a:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
9001af0e:	b510      	push	{r4, lr}
9001af10:	d908      	bls.n	9001af24 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
9001af12:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001af16:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
9001af1a:	681a      	ldr	r2, [r3, #0]
9001af1c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
9001af20:	685a      	ldr	r2, [r3, #4]
9001af22:	6062      	str	r2, [r4, #4]
9001af24:	bd10      	pop	{r4, pc}
	...

9001af28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
9001af28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001af2c:	b08f      	sub	sp, #60	@ 0x3c
9001af2e:	4b8f      	ldr	r3, [pc, #572]	@ (9001b16c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
9001af30:	4683      	mov	fp, r0
9001af32:	ac0a      	add	r4, sp, #40	@ 0x28
9001af34:	e884 0006 	stmia.w	r4, {r1, r2}
9001af38:	f9b3 2000 	ldrsh.w	r2, [r3]
9001af3c:	4620      	mov	r0, r4
9001af3e:	4b8c      	ldr	r3, [pc, #560]	@ (9001b170 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
9001af40:	f9b3 1000 	ldrsh.w	r1, [r3]
9001af44:	f7ff fd9d 	bl	9001aa82 <_ZN8touchgfx4Rect10restrictToEss>
9001af48:	4620      	mov	r0, r4
9001af4a:	f7f9 ff0e 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
9001af4e:	2800      	cmp	r0, #0
9001af50:	d16a      	bne.n	9001b028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001af52:	9403      	str	r4, [sp, #12]
9001af54:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
9001af58:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
9001af5c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
9001af60:	9301      	str	r3, [sp, #4]
9001af62:	35a4      	adds	r5, #164	@ 0xa4
9001af64:	b15c      	cbz	r4, 9001af7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
9001af66:	4629      	mov	r1, r5
9001af68:	9803      	ldr	r0, [sp, #12]
9001af6a:	f7ff fddb 	bl	9001ab24 <_ZNK8touchgfx4Rect8includesERKS0_>
9001af6e:	3c01      	subs	r4, #1
9001af70:	b118      	cbz	r0, 9001af7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
9001af72:	b2a1      	uxth	r1, r4
9001af74:	9801      	ldr	r0, [sp, #4]
9001af76:	f7ff ffc3 	bl	9001af00 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001af7a:	3d08      	subs	r5, #8
9001af7c:	e7f2      	b.n	9001af64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
9001af7e:	f8bb 80ec 	ldrh.w	r8, [fp, #236]	@ 0xec
9001af82:	f108 33ff 	add.w	r3, r8, #4294967295
9001af86:	f8cd 8010 	str.w	r8, [sp, #16]
9001af8a:	9302      	str	r3, [sp, #8]
9001af8c:	ea4f 03c8 	mov.w	r3, r8, lsl #3
9001af90:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
9001af94:	9306      	str	r3, [sp, #24]
9001af96:	445c      	add	r4, fp
9001af98:	2500      	movs	r5, #0
9001af9a:	4626      	mov	r6, r4
9001af9c:	f8cd 8014 	str.w	r8, [sp, #20]
9001afa0:	462f      	mov	r7, r5
9001afa2:	9b05      	ldr	r3, [sp, #20]
9001afa4:	2b00      	cmp	r3, #0
9001afa6:	d073      	beq.n	9001b090 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
9001afa8:	9903      	ldr	r1, [sp, #12]
9001afaa:	4630      	mov	r0, r6
9001afac:	f7ff fd47 	bl	9001aa3e <_ZNK8touchgfx4Rect9intersectERKS0_>
9001afb0:	b350      	cbz	r0, 9001b008 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
9001afb2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
9001afb6:	f9b6 c000 	ldrsh.w	ip, [r6]
9001afba:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
9001afbe:	45e6      	cmp	lr, ip
9001afc0:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
9001afc4:	db33      	blt.n	9001b02e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
9001afc6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
9001afca:	88b3      	ldrh	r3, [r6, #4]
9001afcc:	4472      	add	r2, lr
9001afce:	4463      	add	r3, ip
9001afd0:	b212      	sxth	r2, r2
9001afd2:	b21b      	sxth	r3, r3
9001afd4:	429a      	cmp	r2, r3
9001afd6:	dc2a      	bgt.n	9001b02e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
9001afd8:	fa1f f289 	uxth.w	r2, r9
9001afdc:	88f3      	ldrh	r3, [r6, #6]
9001afde:	45ca      	cmp	sl, r9
9001afe0:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
9001afe4:	4413      	add	r3, r2
9001afe6:	fa1f fc8a 	uxth.w	ip, sl
9001afea:	b29b      	uxth	r3, r3
9001afec:	fa0f fe83 	sxth.w	lr, r3
9001aff0:	db0f      	blt.n	9001b012 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
9001aff2:	eba3 030c 	sub.w	r3, r3, ip
9001aff6:	1ac9      	subs	r1, r1, r3
9001aff8:	b209      	sxth	r1, r1
9001affa:	2900      	cmp	r1, #0
9001affc:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
9001b000:	dd12      	ble.n	9001b028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001b002:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
9001b006:	4605      	mov	r5, r0
9001b008:	9b05      	ldr	r3, [sp, #20]
9001b00a:	3e08      	subs	r6, #8
9001b00c:	3b01      	subs	r3, #1
9001b00e:	9305      	str	r3, [sp, #20]
9001b010:	e7c7      	b.n	9001afa2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
9001b012:	4461      	add	r1, ip
9001b014:	b209      	sxth	r1, r1
9001b016:	4571      	cmp	r1, lr
9001b018:	dc38      	bgt.n	9001b08c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001b01a:	eba2 020c 	sub.w	r2, r2, ip
9001b01e:	b212      	sxth	r2, r2
9001b020:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
9001b024:	2a00      	cmp	r2, #0
9001b026:	dcee      	bgt.n	9001b006 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
9001b028:	b00f      	add	sp, #60	@ 0x3c
9001b02a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b02e:	45ca      	cmp	sl, r9
9001b030:	db2c      	blt.n	9001b08c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001b032:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
9001b036:	449a      	add	sl, r3
9001b038:	88f3      	ldrh	r3, [r6, #6]
9001b03a:	4499      	add	r9, r3
9001b03c:	fa0f fa8a 	sxth.w	sl, sl
9001b040:	fa0f f989 	sxth.w	r9, r9
9001b044:	45ca      	cmp	sl, r9
9001b046:	dc21      	bgt.n	9001b08c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001b048:	fa1f f28c 	uxth.w	r2, ip
9001b04c:	88b3      	ldrh	r3, [r6, #4]
9001b04e:	45e6      	cmp	lr, ip
9001b050:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001b054:	4413      	add	r3, r2
9001b056:	fa1f f98e 	uxth.w	r9, lr
9001b05a:	b29b      	uxth	r3, r3
9001b05c:	fa0f fa83 	sxth.w	sl, r3
9001b060:	db0a      	blt.n	9001b078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
9001b062:	eba3 0309 	sub.w	r3, r3, r9
9001b066:	1ac9      	subs	r1, r1, r3
9001b068:	b209      	sxth	r1, r1
9001b06a:	2900      	cmp	r1, #0
9001b06c:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
9001b070:	ddda      	ble.n	9001b028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001b072:	f8ad a028 	strh.w	sl, [sp, #40]	@ 0x28
9001b076:	e7c6      	b.n	9001b006 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
9001b078:	4449      	add	r1, r9
9001b07a:	b209      	sxth	r1, r1
9001b07c:	4551      	cmp	r1, sl
9001b07e:	dc05      	bgt.n	9001b08c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001b080:	eba2 0209 	sub.w	r2, r2, r9
9001b084:	b212      	sxth	r2, r2
9001b086:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
9001b08a:	e7cb      	b.n	9001b024 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
9001b08c:	4607      	mov	r7, r0
9001b08e:	e7bb      	b.n	9001b008 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
9001b090:	2d00      	cmp	r5, #0
9001b092:	d181      	bne.n	9001af98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
9001b094:	2f00      	cmp	r7, #0
9001b096:	f000 81dd 	beq.w	9001b454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
9001b09a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
9001b09e:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
9001b0a2:	b2b3      	uxth	r3, r6
9001b0a4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
9001b0a8:	b2b9      	uxth	r1, r7
9001b0aa:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
9001b0ae:	441a      	add	r2, r3
9001b0b0:	448a      	add	sl, r1
9001b0b2:	9105      	str	r1, [sp, #20]
9001b0b4:	b292      	uxth	r2, r2
9001b0b6:	fa1f fa8a 	uxth.w	sl, sl
9001b0ba:	fa0f f882 	sxth.w	r8, r2
9001b0be:	fa0f f98a 	sxth.w	r9, sl
9001b0c2:	e9cd 2307 	strd	r2, r3, [sp, #28]
9001b0c6:	9b04      	ldr	r3, [sp, #16]
9001b0c8:	2b00      	cmp	r3, #0
9001b0ca:	d053      	beq.n	9001b174 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
9001b0cc:	9903      	ldr	r1, [sp, #12]
9001b0ce:	4620      	mov	r0, r4
9001b0d0:	f7ff fcb5 	bl	9001aa3e <_ZNK8touchgfx4Rect9intersectERKS0_>
9001b0d4:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
9001b0d8:	b1c0      	cbz	r0, 9001b10c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
9001b0da:	f9b4 e000 	ldrsh.w	lr, [r4]
9001b0de:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001b0e2:	4576      	cmp	r6, lr
9001b0e4:	dc23      	bgt.n	9001b12e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
9001b0e6:	f8b4 c004 	ldrh.w	ip, [r4, #4]
9001b0ea:	44f4      	add	ip, lr
9001b0ec:	fa0f fc8c 	sxth.w	ip, ip
9001b0f0:	45e0      	cmp	r8, ip
9001b0f2:	db1c      	blt.n	9001b12e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
9001b0f4:	428f      	cmp	r7, r1
9001b0f6:	fa1f fc81 	uxth.w	ip, r1
9001b0fa:	88e1      	ldrh	r1, [r4, #6]
9001b0fc:	dc0d      	bgt.n	9001b11a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
9001b0fe:	ebaa 0c0c 	sub.w	ip, sl, ip
9001b102:	f8a4 9002 	strh.w	r9, [r4, #2]
9001b106:	eba1 010c 	sub.w	r1, r1, ip
9001b10a:	80e1      	strh	r1, [r4, #6]
9001b10c:	4628      	mov	r0, r5
9001b10e:	9904      	ldr	r1, [sp, #16]
9001b110:	3c08      	subs	r4, #8
9001b112:	4605      	mov	r5, r0
9001b114:	3901      	subs	r1, #1
9001b116:	9104      	str	r1, [sp, #16]
9001b118:	e7d3      	b.n	9001b0c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19a>
9001b11a:	4461      	add	r1, ip
9001b11c:	b209      	sxth	r1, r1
9001b11e:	4549      	cmp	r1, r9
9001b120:	dcf5      	bgt.n	9001b10e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001b122:	9905      	ldr	r1, [sp, #20]
9001b124:	eba1 0c0c 	sub.w	ip, r1, ip
9001b128:	f8a4 c006 	strh.w	ip, [r4, #6]
9001b12c:	e7ee      	b.n	9001b10c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
9001b12e:	428f      	cmp	r7, r1
9001b130:	dced      	bgt.n	9001b10e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001b132:	f8b4 c006 	ldrh.w	ip, [r4, #6]
9001b136:	4461      	add	r1, ip
9001b138:	b209      	sxth	r1, r1
9001b13a:	4589      	cmp	r9, r1
9001b13c:	dbe7      	blt.n	9001b10e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001b13e:	4576      	cmp	r6, lr
9001b140:	fa1f fc8e 	uxth.w	ip, lr
9001b144:	88a1      	ldrh	r1, [r4, #4]
9001b146:	dc07      	bgt.n	9001b158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
9001b148:	eba2 0c0c 	sub.w	ip, r2, ip
9001b14c:	f8a4 8000 	strh.w	r8, [r4]
9001b150:	eba1 010c 	sub.w	r1, r1, ip
9001b154:	80a1      	strh	r1, [r4, #4]
9001b156:	e7d9      	b.n	9001b10c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
9001b158:	4461      	add	r1, ip
9001b15a:	b209      	sxth	r1, r1
9001b15c:	4588      	cmp	r8, r1
9001b15e:	dbd6      	blt.n	9001b10e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001b160:	eba3 0c0c 	sub.w	ip, r3, ip
9001b164:	f8a4 c004 	strh.w	ip, [r4, #4]
9001b168:	e7d0      	b.n	9001b10c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
9001b16a:	bf00      	nop
9001b16c:	24027e92 	.word	0x24027e92
9001b170:	24027e90 	.word	0x24027e90
9001b174:	2d00      	cmp	r5, #0
9001b176:	f000 816d 	beq.w	9001b454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
9001b17a:	9b06      	ldr	r3, [sp, #24]
9001b17c:	445b      	add	r3, fp
9001b17e:	461c      	mov	r4, r3
9001b180:	9b02      	ldr	r3, [sp, #8]
9001b182:	3301      	adds	r3, #1
9001b184:	f000 8166 	beq.w	9001b454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
9001b188:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
9001b18c:	9803      	ldr	r0, [sp, #12]
9001b18e:	4629      	mov	r1, r5
9001b190:	f7ff fcc8 	bl	9001ab24 <_ZNK8touchgfx4Rect8includesERKS0_>
9001b194:	b120      	cbz	r0, 9001b1a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
9001b196:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001b19a:	9801      	ldr	r0, [sp, #4]
9001b19c:	f7ff feb0 	bl	9001af00 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001b1a0:	9903      	ldr	r1, [sp, #12]
9001b1a2:	4628      	mov	r0, r5
9001b1a4:	f7ff fc4b 	bl	9001aa3e <_ZNK8touchgfx4Rect9intersectERKS0_>
9001b1a8:	2800      	cmp	r0, #0
9001b1aa:	f000 809c 	beq.w	9001b2e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
9001b1ae:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
9001b1b2:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
9001b1b6:	fa1f f189 	uxth.w	r1, r9
9001b1ba:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
9001b1be:	9309      	str	r3, [sp, #36]	@ 0x24
9001b1c0:	eb01 0c03 	add.w	ip, r1, r3
9001b1c4:	b283      	uxth	r3, r0
9001b1c6:	4548      	cmp	r0, r9
9001b1c8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
9001b1cc:	fa1f fa8c 	uxth.w	sl, ip
9001b1d0:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
9001b1d4:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
9001b1d8:	eb03 050c 	add.w	r5, r3, ip
9001b1dc:	b2ad      	uxth	r5, r5
9001b1de:	9505      	str	r5, [sp, #20]
9001b1e0:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
9001b1e4:	9504      	str	r5, [sp, #16]
9001b1e6:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
9001b1ea:	f340 8099 	ble.w	9001b320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
9001b1ee:	1a5b      	subs	r3, r3, r1
9001b1f0:	4596      	cmp	lr, r2
9001b1f2:	fa0f f08a 	sxth.w	r0, sl
9001b1f6:	b29b      	uxth	r3, r3
9001b1f8:	b21e      	sxth	r6, r3
9001b1fa:	dd2e      	ble.n	9001b25a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
9001b1fc:	9f02      	ldr	r7, [sp, #8]
9001b1fe:	fa1f fe8e 	uxth.w	lr, lr
9001b202:	b292      	uxth	r2, r2
9001b204:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
9001b208:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
9001b20c:	9f04      	ldr	r7, [sp, #16]
9001b20e:	ebae 0102 	sub.w	r1, lr, r2
9001b212:	44a6      	add	lr, r4
9001b214:	1a3f      	subs	r7, r7, r0
9001b216:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
9001b21a:	b289      	uxth	r1, r1
9001b21c:	4402      	add	r2, r0
9001b21e:	fa0f fe8e 	sxth.w	lr, lr
9001b222:	b20d      	sxth	r5, r1
9001b224:	b212      	sxth	r2, r2
9001b226:	436f      	muls	r7, r5
9001b228:	ebae 0202 	sub.w	r2, lr, r2
9001b22c:	4372      	muls	r2, r6
9001b22e:	4297      	cmp	r7, r2
9001b230:	db09      	blt.n	9001b246 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
9001b232:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
9001b236:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
9001b23a:	449c      	add	ip, r3
9001b23c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001b240:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
9001b244:	e686      	b.n	9001af54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001b246:	4421      	add	r1, r4
9001b248:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
9001b24c:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
9001b250:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
9001b254:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001b258:	e67c      	b.n	9001af54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001b25a:	9f04      	ldr	r7, [sp, #16]
9001b25c:	42b8      	cmp	r0, r7
9001b25e:	da27      	bge.n	9001b2b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
9001b260:	9902      	ldr	r1, [sp, #8]
9001b262:	1a3f      	subs	r7, r7, r0
9001b264:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
9001b268:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
9001b26c:	eb05 010e 	add.w	r1, r5, lr
9001b270:	fa1f f881 	uxth.w	r8, r1
9001b274:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
9001b278:	4411      	add	r1, r2
9001b27a:	fa0f f988 	sxth.w	r9, r8
9001b27e:	eba2 020e 	sub.w	r2, r2, lr
9001b282:	eba1 0108 	sub.w	r1, r1, r8
9001b286:	4372      	muls	r2, r6
9001b288:	b289      	uxth	r1, r1
9001b28a:	fa0f f881 	sxth.w	r8, r1
9001b28e:	fb08 f707 	mul.w	r7, r8, r7
9001b292:	42ba      	cmp	r2, r7
9001b294:	dc06      	bgt.n	9001b2a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
9001b296:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
9001b29a:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
9001b29e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
9001b2a2:	e7ca      	b.n	9001b23a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
9001b2a4:	4429      	add	r1, r5
9001b2a6:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
9001b2aa:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
9001b2ae:	e651      	b.n	9001af54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001b2b0:	9805      	ldr	r0, [sp, #20]
9001b2b2:	2d06      	cmp	r5, #6
9001b2b4:	ebaa 0000 	sub.w	r0, sl, r0
9001b2b8:	b280      	uxth	r0, r0
9001b2ba:	fa0f fe80 	sxth.w	lr, r0
9001b2be:	d817      	bhi.n	9001b2f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
9001b2c0:	9b04      	ldr	r3, [sp, #16]
9001b2c2:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
9001b2c6:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
9001b2ca:	1c6b      	adds	r3, r5, #1
9001b2cc:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
9001b2d0:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
9001b2d4:	9b01      	ldr	r3, [sp, #4]
9001b2d6:	9801      	ldr	r0, [sp, #4]
9001b2d8:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001b2dc:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
9001b2e0:	805a      	strh	r2, [r3, #2]
9001b2e2:	809e      	strh	r6, [r3, #4]
9001b2e4:	80d9      	strh	r1, [r3, #6]
9001b2e6:	9b02      	ldr	r3, [sp, #8]
9001b2e8:	3c08      	subs	r4, #8
9001b2ea:	3b01      	subs	r3, #1
9001b2ec:	9302      	str	r3, [sp, #8]
9001b2ee:	e747      	b.n	9001b180 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
9001b2f0:	9a02      	ldr	r2, [sp, #8]
9001b2f2:	45b6      	cmp	lr, r6
9001b2f4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
9001b2f8:	db0d      	blt.n	9001b316 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
9001b2fa:	449c      	add	ip, r3
9001b2fc:	445a      	add	r2, fp
9001b2fe:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
9001b302:	fa1f fc8c 	uxth.w	ip, ip
9001b306:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
9001b30a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
9001b30e:	448c      	add	ip, r1
9001b310:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
9001b314:	e61e      	b.n	9001af54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001b316:	445a      	add	r2, fp
9001b318:	4484      	add	ip, r0
9001b31a:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
9001b31e:	e78f      	b.n	9001b240 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
9001b320:	fa1f f18e 	uxth.w	r1, lr
9001b324:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
9001b328:	b293      	uxth	r3, r2
9001b32a:	4596      	cmp	lr, r2
9001b32c:	eb01 0806 	add.w	r8, r1, r6
9001b330:	9306      	str	r3, [sp, #24]
9001b332:	fa1f f888 	uxth.w	r8, r8
9001b336:	9f06      	ldr	r7, [sp, #24]
9001b338:	fa0f f388 	sxth.w	r3, r8
9001b33c:	9307      	str	r3, [sp, #28]
9001b33e:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
9001b342:	443b      	add	r3, r7
9001b344:	b29b      	uxth	r3, r3
9001b346:	9308      	str	r3, [sp, #32]
9001b348:	da24      	bge.n	9001b394 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
9001b34a:	9905      	ldr	r1, [sp, #20]
9001b34c:	eba3 0308 	sub.w	r3, r3, r8
9001b350:	eba2 020e 	sub.w	r2, r2, lr
9001b354:	eba9 0000 	sub.w	r0, r9, r0
9001b358:	ebaa 0401 	sub.w	r4, sl, r1
9001b35c:	b29b      	uxth	r3, r3
9001b35e:	b2a4      	uxth	r4, r4
9001b360:	b219      	sxth	r1, r3
9001b362:	b225      	sxth	r5, r4
9001b364:	4348      	muls	r0, r1
9001b366:	436a      	muls	r2, r5
9001b368:	4282      	cmp	r2, r0
9001b36a:	9a02      	ldr	r2, [sp, #8]
9001b36c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
9001b370:	445a      	add	r2, fp
9001b372:	dc06      	bgt.n	9001b382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
9001b374:	9b07      	ldr	r3, [sp, #28]
9001b376:	44a4      	add	ip, r4
9001b378:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
9001b37c:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
9001b380:	e75e      	b.n	9001b240 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
9001b382:	9904      	ldr	r1, [sp, #16]
9001b384:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
9001b388:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
9001b38c:	4433      	add	r3, r6
9001b38e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
9001b392:	e5df      	b.n	9001af54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001b394:	9f06      	ldr	r7, [sp, #24]
9001b396:	9b04      	ldr	r3, [sp, #16]
9001b398:	1bc9      	subs	r1, r1, r7
9001b39a:	fa0f f78a 	sxth.w	r7, sl
9001b39e:	b289      	uxth	r1, r1
9001b3a0:	429f      	cmp	r7, r3
9001b3a2:	fa0f fe81 	sxth.w	lr, r1
9001b3a6:	dd23      	ble.n	9001b3f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
9001b3a8:	9a05      	ldr	r2, [sp, #20]
9001b3aa:	eba9 0000 	sub.w	r0, r9, r0
9001b3ae:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
9001b3b2:	ebaa 0202 	sub.w	r2, sl, r2
9001b3b6:	9d07      	ldr	r5, [sp, #28]
9001b3b8:	fb0e f000 	mul.w	r0, lr, r0
9001b3bc:	b292      	uxth	r2, r2
9001b3be:	eba5 0a03 	sub.w	sl, r5, r3
9001b3c2:	9b02      	ldr	r3, [sp, #8]
9001b3c4:	b214      	sxth	r4, r2
9001b3c6:	00db      	lsls	r3, r3, #3
9001b3c8:	fb04 fa0a 	mul.w	sl, r4, sl
9001b3cc:	445b      	add	r3, fp
9001b3ce:	4550      	cmp	r0, sl
9001b3d0:	db03      	blt.n	9001b3da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
9001b3d2:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
9001b3d6:	4494      	add	ip, r2
9001b3d8:	e732      	b.n	9001b240 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
9001b3da:	9a04      	ldr	r2, [sp, #16]
9001b3dc:	4431      	add	r1, r6
9001b3de:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
9001b3e2:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
9001b3e6:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
9001b3ea:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001b3ee:	e75c      	b.n	9001b2aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
9001b3f0:	9b08      	ldr	r3, [sp, #32]
9001b3f2:	2d06      	cmp	r5, #6
9001b3f4:	eba3 0308 	sub.w	r3, r3, r8
9001b3f8:	b29b      	uxth	r3, r3
9001b3fa:	b218      	sxth	r0, r3
9001b3fc:	d813      	bhi.n	9001b426 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
9001b3fe:	9b07      	ldr	r3, [sp, #28]
9001b400:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
9001b404:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
9001b408:	1c6b      	adds	r3, r5, #1
9001b40a:	9901      	ldr	r1, [sp, #4]
9001b40c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
9001b410:	9b01      	ldr	r3, [sp, #4]
9001b412:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
9001b416:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001b41a:	805a      	strh	r2, [r3, #2]
9001b41c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001b41e:	f8a3 e006 	strh.w	lr, [r3, #6]
9001b422:	809a      	strh	r2, [r3, #4]
9001b424:	e75f      	b.n	9001b2e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
9001b426:	9c02      	ldr	r4, [sp, #8]
9001b428:	4570      	cmp	r0, lr
9001b42a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
9001b42e:	db0d      	blt.n	9001b44c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
9001b430:	4431      	add	r1, r6
9001b432:	9b06      	ldr	r3, [sp, #24]
9001b434:	445c      	add	r4, fp
9001b436:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9001b43a:	b289      	uxth	r1, r1
9001b43c:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
9001b440:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
9001b444:	4419      	add	r1, r3
9001b446:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
9001b44a:	e583      	b.n	9001af54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001b44c:	445c      	add	r4, fp
9001b44e:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
9001b452:	e79b      	b.n	9001b38c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
9001b454:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
9001b458:	2e07      	cmp	r6, #7
9001b45a:	ea4f 04c6 	mov.w	r4, r6, lsl #3
9001b45e:	d812      	bhi.n	9001b486 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x55e>
9001b460:	1c75      	adds	r5, r6, #1
9001b462:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
9001b466:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
9001b46a:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
9001b46e:	9d01      	ldr	r5, [sp, #4]
9001b470:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001b474:	442c      	add	r4, r5
9001b476:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
9001b47a:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
9001b47e:	8061      	strh	r1, [r4, #2]
9001b480:	80a2      	strh	r2, [r4, #4]
9001b482:	80e3      	strh	r3, [r4, #6]
9001b484:	e5d0      	b.n	9001b028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001b486:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
9001b48a:	3e01      	subs	r6, #1
9001b48c:	445c      	add	r4, fp
9001b48e:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
9001b492:	f04f 37ff 	mov.w	r7, #4294967295
9001b496:	2500      	movs	r5, #0
9001b498:	9305      	str	r3, [sp, #20]
9001b49a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
9001b49e:	1e72      	subs	r2, r6, #1
9001b4a0:	9302      	str	r3, [sp, #8]
9001b4a2:	4691      	mov	r9, r2
9001b4a4:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
9001b4a8:	9304      	str	r3, [sp, #16]
9001b4aa:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
9001b4ae:	f1b9 3fff 	cmp.w	r9, #4294967295
9001b4b2:	6818      	ldr	r0, [r3, #0]
9001b4b4:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
9001b4b8:	9207      	str	r2, [sp, #28]
9001b4ba:	bf16      	itet	ne
9001b4bc:	9905      	ldrne	r1, [sp, #20]
9001b4be:	f8dd e00c 	ldreq.w	lr, [sp, #12]
9001b4c2:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
9001b4c6:	9306      	str	r3, [sp, #24]
9001b4c8:	f8be 1006 	ldrh.w	r1, [lr, #6]
9001b4cc:	f8be 8004 	ldrh.w	r8, [lr, #4]
9001b4d0:	fb18 f801 	smulbb	r8, r8, r1
9001b4d4:	6859      	ldr	r1, [r3, #4]
9001b4d6:	e8ac 0003 	stmia.w	ip!, {r0, r1}
9001b4da:	4671      	mov	r1, lr
9001b4dc:	a80c      	add	r0, sp, #48	@ 0x30
9001b4de:	f7ff fb47 	bl	9001ab70 <_ZN8touchgfx4Rect11expandToFitERKS0_>
9001b4e2:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
9001b4e6:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
9001b4ea:	f04f 0c08 	mov.w	ip, #8
9001b4ee:	9b04      	ldr	r3, [sp, #16]
9001b4f0:	9a02      	ldr	r2, [sp, #8]
9001b4f2:	fb10 f001 	smulbb	r0, r0, r1
9001b4f6:	fb02 8803 	mla	r8, r2, r3, r8
9001b4fa:	eba0 0108 	sub.w	r1, r0, r8
9001b4fe:	fb90 f0fc 	sdiv	r0, r0, ip
9001b502:	4288      	cmp	r0, r1
9001b504:	dc20      	bgt.n	9001b548 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
9001b506:	4551      	cmp	r1, sl
9001b508:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
9001b50c:	da03      	bge.n	9001b516 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ee>
9001b50e:	b1d9      	cbz	r1, 9001b548 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
9001b510:	468a      	mov	sl, r1
9001b512:	464f      	mov	r7, r9
9001b514:	4635      	mov	r5, r6
9001b516:	f109 39ff 	add.w	r9, r9, #4294967295
9001b51a:	f119 0f02 	cmn.w	r9, #2
9001b51e:	d1c6      	bne.n	9001b4ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x586>
9001b520:	4616      	mov	r6, r2
9001b522:	3201      	adds	r2, #1
9001b524:	f1a4 0408 	sub.w	r4, r4, #8
9001b528:	d1b7      	bne.n	9001b49a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x572>
9001b52a:	9b01      	ldr	r3, [sp, #4]
9001b52c:	b2ac      	uxth	r4, r5
9001b52e:	00ed      	lsls	r5, r5, #3
9001b530:	1958      	adds	r0, r3, r5
9001b532:	1c7b      	adds	r3, r7, #1
9001b534:	d10b      	bne.n	9001b54e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>
9001b536:	4601      	mov	r1, r0
9001b538:	9803      	ldr	r0, [sp, #12]
9001b53a:	f7ff fb19 	bl	9001ab70 <_ZN8touchgfx4Rect11expandToFitERKS0_>
9001b53e:	4621      	mov	r1, r4
9001b540:	9801      	ldr	r0, [sp, #4]
9001b542:	f7ff fcdd 	bl	9001af00 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001b546:	e505      	b.n	9001af54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001b548:	464f      	mov	r7, r9
9001b54a:	4635      	mov	r5, r6
9001b54c:	e7ed      	b.n	9001b52a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x602>
9001b54e:	9b01      	ldr	r3, [sp, #4]
9001b550:	00ff      	lsls	r7, r7, #3
9001b552:	445d      	add	r5, fp
9001b554:	19d9      	adds	r1, r3, r7
9001b556:	445f      	add	r7, fp
9001b558:	f7ff fb0a 	bl	9001ab70 <_ZN8touchgfx4Rect11expandToFitERKS0_>
9001b55c:	9b03      	ldr	r3, [sp, #12]
9001b55e:	cb03      	ldmia	r3!, {r0, r1}
9001b560:	9b03      	ldr	r3, [sp, #12]
9001b562:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
9001b566:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
9001b56a:	f855 0fac 	ldr.w	r0, [r5, #172]!
9001b56e:	6869      	ldr	r1, [r5, #4]
9001b570:	c303      	stmia	r3!, {r0, r1}
9001b572:	e7e4      	b.n	9001b53e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x616>

9001b574 <_ZN8touchgfx11Application10invalidateEv>:
9001b574:	4b09      	ldr	r3, [pc, #36]	@ (9001b59c <_ZN8touchgfx11Application10invalidateEv+0x28>)
9001b576:	b082      	sub	sp, #8
9001b578:	2100      	movs	r1, #0
9001b57a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001b57e:	4b08      	ldr	r3, [pc, #32]	@ (9001b5a0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
9001b580:	9100      	str	r1, [sp, #0]
9001b582:	f9b3 3000 	ldrsh.w	r3, [r3]
9001b586:	f8ad 2004 	strh.w	r2, [sp, #4]
9001b58a:	f8ad 3006 	strh.w	r3, [sp, #6]
9001b58e:	ab02      	add	r3, sp, #8
9001b590:	e913 0006 	ldmdb	r3, {r1, r2}
9001b594:	b002      	add	sp, #8
9001b596:	f7ff bcc7 	b.w	9001af28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
9001b59a:	bf00      	nop
9001b59c:	24027e90 	.word	0x24027e90
9001b5a0:	24027e92 	.word	0x24027e92

9001b5a4 <_ZN8touchgfx11Application15drawCachedAreasEv>:
9001b5a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b5a8:	f500 7698 	add.w	r6, r0, #304	@ 0x130
9001b5ac:	b09b      	sub	sp, #108	@ 0x6c
9001b5ae:	4604      	mov	r4, r0
9001b5b0:	4630      	mov	r0, r6
9001b5b2:	f7f9 fbda 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
9001b5b6:	4605      	mov	r5, r0
9001b5b8:	b940      	cbnz	r0, 9001b5cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
9001b5ba:	4620      	mov	r0, r4
9001b5bc:	e896 0006 	ldmia.w	r6, {r1, r2}
9001b5c0:	f7ff fcb2 	bl	9001af28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
9001b5c4:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
9001b5c8:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
9001b5cc:	4bc8      	ldr	r3, [pc, #800]	@ (9001b8f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
9001b5ce:	681b      	ldr	r3, [r3, #0]
9001b5d0:	2b00      	cmp	r3, #0
9001b5d2:	d03e      	beq.n	9001b652 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
9001b5d4:	4dc7      	ldr	r5, [pc, #796]	@ (9001b8f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
9001b5d6:	4628      	mov	r0, r5
9001b5d8:	f7f9 fbc7 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
9001b5dc:	4606      	mov	r6, r0
9001b5de:	2800      	cmp	r0, #0
9001b5e0:	d137      	bne.n	9001b652 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
9001b5e2:	4628      	mov	r0, r5
9001b5e4:	f7ff f952 	bl	9001a88c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
9001b5e8:	6829      	ldr	r1, [r5, #0]
9001b5ea:	686a      	ldr	r2, [r5, #4]
9001b5ec:	4620      	mov	r0, r4
9001b5ee:	f7ff fc9b 	bl	9001af28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
9001b5f2:	802e      	strh	r6, [r5, #0]
9001b5f4:	806e      	strh	r6, [r5, #2]
9001b5f6:	80ae      	strh	r6, [r5, #4]
9001b5f8:	80ee      	strh	r6, [r5, #6]
9001b5fa:	ae09      	add	r6, sp, #36	@ 0x24
9001b5fc:	4630      	mov	r0, r6
9001b5fe:	f7ff fc24 	bl	9001ae4a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001b602:	4abd      	ldr	r2, [pc, #756]	@ (9001b8f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
9001b604:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
9001b608:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
9001b60c:	8815      	ldrh	r5, [r2, #0]
9001b60e:	9202      	str	r2, [sp, #8]
9001b610:	462b      	mov	r3, r5
9001b612:	429f      	cmp	r7, r3
9001b614:	d924      	bls.n	9001b660 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
9001b616:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
9001b61a:	2907      	cmp	r1, #7
9001b61c:	d816      	bhi.n	9001b64c <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
9001b61e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
9001b622:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
9001b626:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
9001b62a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
9001b62e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
9001b632:	1c4a      	adds	r2, r1, #1
9001b634:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
9001b638:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
9001b63c:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
9001b640:	f8a2 9002 	strh.w	r9, [r2, #2]
9001b644:	f8a2 e004 	strh.w	lr, [r2, #4]
9001b648:	f8a2 c006 	strh.w	ip, [r2, #6]
9001b64c:	3301      	adds	r3, #1
9001b64e:	b29b      	uxth	r3, r3
9001b650:	e7df      	b.n	9001b612 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
9001b652:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
9001b656:	2b00      	cmp	r3, #0
9001b658:	d1cf      	bne.n	9001b5fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
9001b65a:	b01b      	add	sp, #108	@ 0x6c
9001b65c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b660:	462f      	mov	r7, r5
9001b662:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
9001b666:	42bb      	cmp	r3, r7
9001b668:	d90b      	bls.n	9001b682 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
9001b66a:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
9001b66e:	3701      	adds	r7, #1
9001b670:	4620      	mov	r0, r4
9001b672:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
9001b676:	b2bf      	uxth	r7, r7
9001b678:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
9001b67c:	f7ff fc54 	bl	9001af28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
9001b680:	e7ef      	b.n	9001b662 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
9001b682:	4a9e      	ldr	r2, [pc, #632]	@ (9001b8fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
9001b684:	6813      	ldr	r3, [r2, #0]
9001b686:	4690      	mov	r8, r2
9001b688:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
9001b68c:	2b01      	cmp	r3, #1
9001b68e:	f040 80e4 	bne.w	9001b85a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
9001b692:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
9001b696:	4629      	mov	r1, r5
9001b698:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
9001b69c:	2500      	movs	r5, #0
9001b69e:	33ae      	adds	r3, #174	@ 0xae
9001b6a0:	428f      	cmp	r7, r1
9001b6a2:	f103 0308 	add.w	r3, r3, #8
9001b6a6:	dd0a      	ble.n	9001b6be <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
9001b6a8:	f833 2c08 	ldrh.w	r2, [r3, #-8]
9001b6ac:	3101      	adds	r1, #1
9001b6ae:	f833 0c04 	ldrh.w	r0, [r3, #-4]
9001b6b2:	4402      	add	r2, r0
9001b6b4:	b212      	sxth	r2, r2
9001b6b6:	4295      	cmp	r5, r2
9001b6b8:	bfb8      	it	lt
9001b6ba:	4615      	movlt	r5, r2
9001b6bc:	e7f0      	b.n	9001b6a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
9001b6be:	4b90      	ldr	r3, [pc, #576]	@ (9001b900 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
9001b6c0:	f8df b238 	ldr.w	fp, [pc, #568]	@ 9001b8fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>
9001b6c4:	881b      	ldrh	r3, [r3, #0]
9001b6c6:	46d8      	mov	r8, fp
9001b6c8:	2b0f      	cmp	r3, #15
9001b6ca:	bf8c      	ite	hi
9001b6cc:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
9001b6d0:	f04f 0a01 	movls.w	sl, #1
9001b6d4:	2300      	movs	r3, #0
9001b6d6:	e9cd 3305 	strd	r3, r3, [sp, #20]
9001b6da:	f8bd 701a 	ldrh.w	r7, [sp, #26]
9001b6de:	f8bd 0016 	ldrh.w	r0, [sp, #22]
9001b6e2:	4438      	add	r0, r7
9001b6e4:	b207      	sxth	r7, r0
9001b6e6:	f8db 0000 	ldr.w	r0, [fp]
9001b6ea:	42bd      	cmp	r5, r7
9001b6ec:	6803      	ldr	r3, [r0, #0]
9001b6ee:	f340 8084 	ble.w	9001b7fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
9001b6f2:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
9001b6f6:	4798      	blx	r3
9001b6f8:	eb07 030a 	add.w	r3, r7, sl
9001b6fc:	4298      	cmp	r0, r3
9001b6fe:	da07      	bge.n	9001b710 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
9001b700:	4285      	cmp	r5, r0
9001b702:	dd05      	ble.n	9001b710 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
9001b704:	4287      	cmp	r7, r0
9001b706:	dd6d      	ble.n	9001b7e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
9001b708:	2f00      	cmp	r7, #0
9001b70a:	dd6b      	ble.n	9001b7e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
9001b70c:	4628      	mov	r0, r5
9001b70e:	e004      	b.n	9001b71a <_ZN8touchgfx11Application15drawCachedAreasEv+0x176>
9001b710:	4287      	cmp	r7, r0
9001b712:	dcfb      	bgt.n	9001b70c <_ZN8touchgfx11Application15drawCachedAreasEv+0x168>
9001b714:	42a8      	cmp	r0, r5
9001b716:	bfa8      	it	ge
9001b718:	4628      	movge	r0, r5
9001b71a:	4b7a      	ldr	r3, [pc, #488]	@ (9001b904 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
9001b71c:	1bc0      	subs	r0, r0, r7
9001b71e:	2200      	movs	r2, #0
9001b720:	f8ad 7016 	strh.w	r7, [sp, #22]
9001b724:	f9b3 3000 	ldrsh.w	r3, [r3]
9001b728:	f8ad 2014 	strh.w	r2, [sp, #20]
9001b72c:	f8ad 3018 	strh.w	r3, [sp, #24]
9001b730:	9b02      	ldr	r3, [sp, #8]
9001b732:	f8ad 001a 	strh.w	r0, [sp, #26]
9001b736:	881f      	ldrh	r7, [r3, #0]
9001b738:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
9001b73c:	42bb      	cmp	r3, r7
9001b73e:	d9cc      	bls.n	9001b6da <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
9001b740:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
9001b744:	ab07      	add	r3, sp, #28
9001b746:	f852 0fac 	ldr.w	r0, [r2, #172]!
9001b74a:	6851      	ldr	r1, [r2, #4]
9001b74c:	c303      	stmia	r3!, {r0, r1}
9001b74e:	a905      	add	r1, sp, #20
9001b750:	a807      	add	r0, sp, #28
9001b752:	f7ff f974 	bl	9001aa3e <_ZNK8touchgfx4Rect9intersectERKS0_>
9001b756:	2800      	cmp	r0, #0
9001b758:	d04c      	beq.n	9001b7f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
9001b75a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
9001b75e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
9001b762:	f8bd 9020 	ldrh.w	r9, [sp, #32]
9001b766:	4686      	mov	lr, r0
9001b768:	4290      	cmp	r0, r2
9001b76a:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
9001b76e:	4448      	add	r0, r9
9001b770:	f8bd 9018 	ldrh.w	r9, [sp, #24]
9001b774:	bfb8      	it	lt
9001b776:	4696      	movlt	lr, r2
9001b778:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
9001b77c:	444a      	add	r2, r9
9001b77e:	b280      	uxth	r0, r0
9001b780:	4299      	cmp	r1, r3
9001b782:	468c      	mov	ip, r1
9001b784:	b292      	uxth	r2, r2
9001b786:	9303      	str	r3, [sp, #12]
9001b788:	bfb8      	it	lt
9001b78a:	469c      	movlt	ip, r3
9001b78c:	b203      	sxth	r3, r0
9001b78e:	fa0f f982 	sxth.w	r9, r2
9001b792:	f8ad e01c 	strh.w	lr, [sp, #28]
9001b796:	f8ad c01e 	strh.w	ip, [sp, #30]
9001b79a:	454b      	cmp	r3, r9
9001b79c:	bfb8      	it	lt
9001b79e:	4602      	movlt	r2, r0
9001b7a0:	9b03      	ldr	r3, [sp, #12]
9001b7a2:	eba2 020e 	sub.w	r2, r2, lr
9001b7a6:	f8ad 2020 	strh.w	r2, [sp, #32]
9001b7aa:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
9001b7ae:	4411      	add	r1, r2
9001b7b0:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001b7b4:	4413      	add	r3, r2
9001b7b6:	b289      	uxth	r1, r1
9001b7b8:	b29b      	uxth	r3, r3
9001b7ba:	b208      	sxth	r0, r1
9001b7bc:	b21a      	sxth	r2, r3
9001b7be:	4290      	cmp	r0, r2
9001b7c0:	bfb8      	it	lt
9001b7c2:	460b      	movlt	r3, r1
9001b7c4:	eba3 030c 	sub.w	r3, r3, ip
9001b7c8:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001b7cc:	a807      	add	r0, sp, #28
9001b7ce:	f7f9 facc 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
9001b7d2:	b920      	cbnz	r0, 9001b7de <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
9001b7d4:	6823      	ldr	r3, [r4, #0]
9001b7d6:	a907      	add	r1, sp, #28
9001b7d8:	4620      	mov	r0, r4
9001b7da:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001b7dc:	4798      	blx	r3
9001b7de:	3701      	adds	r7, #1
9001b7e0:	b2bf      	uxth	r7, r7
9001b7e2:	e7a9      	b.n	9001b738 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
9001b7e4:	f8d8 0000 	ldr.w	r0, [r8]
9001b7e8:	2101      	movs	r1, #1
9001b7ea:	6803      	ldr	r3, [r0, #0]
9001b7ec:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
9001b7f0:	4798      	blx	r3
9001b7f2:	e772      	b.n	9001b6da <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
9001b7f4:	e9cd 0007 	strd	r0, r0, [sp, #28]
9001b7f8:	e7e8      	b.n	9001b7cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
9001b7fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001b7fc:	4798      	blx	r3
9001b7fe:	4b42      	ldr	r3, [pc, #264]	@ (9001b908 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
9001b800:	781b      	ldrb	r3, [r3, #0]
9001b802:	2b00      	cmp	r3, #0
9001b804:	f43f af29 	beq.w	9001b65a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
9001b808:	2300      	movs	r3, #0
9001b80a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9001b80e:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
9001b812:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
9001b816:	9b02      	ldr	r3, [sp, #8]
9001b818:	881b      	ldrh	r3, [r3, #0]
9001b81a:	429d      	cmp	r5, r3
9001b81c:	f67f af1d 	bls.w	9001b65a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
9001b820:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
9001b824:	2907      	cmp	r1, #7
9001b826:	d815      	bhi.n	9001b854 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
9001b828:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
9001b82c:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
9001b830:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
9001b834:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
9001b838:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
9001b83c:	1c4a      	adds	r2, r1, #1
9001b83e:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
9001b842:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
9001b846:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
9001b84a:	f8a2 e002 	strh.w	lr, [r2, #2]
9001b84e:	f8a2 c004 	strh.w	ip, [r2, #4]
9001b852:	80d7      	strh	r7, [r2, #6]
9001b854:	3301      	adds	r3, #1
9001b856:	b29b      	uxth	r3, r3
9001b858:	e7df      	b.n	9001b81a <_ZN8touchgfx11Application15drawCachedAreasEv+0x276>
9001b85a:	2b02      	cmp	r3, #2
9001b85c:	f040 8135 	bne.w	9001baca <_ZN8touchgfx11Application15drawCachedAreasEv+0x526>
9001b860:	4b2a      	ldr	r3, [pc, #168]	@ (9001b90c <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
9001b862:	f104 09ac 	add.w	r9, r4, #172	@ 0xac
9001b866:	781b      	ldrb	r3, [r3, #0]
9001b868:	2b01      	cmp	r3, #1
9001b86a:	f000 809c 	beq.w	9001b9a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
9001b86e:	9b02      	ldr	r3, [sp, #8]
9001b870:	f8b4 20ec 	ldrh.w	r2, [r4, #236]	@ 0xec
9001b874:	f8b3 b000 	ldrh.w	fp, [r3]
9001b878:	f10b 0b01 	add.w	fp, fp, #1
9001b87c:	fa1f fb8b 	uxth.w	fp, fp
9001b880:	2a00      	cmp	r2, #0
9001b882:	d0bc      	beq.n	9001b7fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001b884:	f8b4 50ae 	ldrh.w	r5, [r4, #174]	@ 0xae
9001b888:	4659      	mov	r1, fp
9001b88a:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
9001b88e:	f04f 0800 	mov.w	r8, #0
9001b892:	441d      	add	r5, r3
9001b894:	b22d      	sxth	r5, r5
9001b896:	b28b      	uxth	r3, r1
9001b898:	ea4f 07c8 	mov.w	r7, r8, lsl #3
9001b89c:	429a      	cmp	r2, r3
9001b89e:	f240 80c0 	bls.w	9001ba22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x47e>
9001b8a2:	4427      	add	r7, r4
9001b8a4:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
9001b8a8:	4608      	mov	r0, r1
9001b8aa:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
9001b8ae:	f9be c0ae 	ldrsh.w	ip, [lr, #174]	@ 0xae
9001b8b2:	4563      	cmp	r3, ip
9001b8b4:	f340 80a2 	ble.w	9001b9fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
9001b8b8:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
9001b8bc:	4465      	add	r5, ip
9001b8be:	b22d      	sxth	r5, r5
9001b8c0:	429d      	cmp	r5, r3
9001b8c2:	bfa8      	it	ge
9001b8c4:	461d      	movge	r5, r3
9001b8c6:	3101      	adds	r1, #1
9001b8c8:	4680      	mov	r8, r0
9001b8ca:	e7e4      	b.n	9001b896 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f2>
9001b8cc:	d10b      	bne.n	9001b8e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x342>
9001b8ce:	f9b5 c0b2 	ldrsh.w	ip, [r5, #178]	@ 0xb2
9001b8d2:	f9ba 10b2 	ldrsh.w	r1, [sl, #178]	@ 0xb2
9001b8d6:	458c      	cmp	ip, r1
9001b8d8:	bfb4      	ite	lt
9001b8da:	469c      	movlt	ip, r3
9001b8dc:	46bc      	movge	ip, r7
9001b8de:	4572      	cmp	r2, lr
9001b8e0:	bfb8      	it	lt
9001b8e2:	4672      	movlt	r2, lr
9001b8e4:	e087      	b.n	9001b9f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x452>
9001b8e6:	428a      	cmp	r2, r1
9001b8e8:	46bc      	mov	ip, r7
9001b8ea:	bfb8      	it	lt
9001b8ec:	460a      	movlt	r2, r1
9001b8ee:	e082      	b.n	9001b9f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x452>
9001b8f0:	24027edc 	.word	0x24027edc
9001b8f4:	24027ee8 	.word	0x24027ee8
9001b8f8:	24000068 	.word	0x24000068
9001b8fc:	24027e9c 	.word	0x24027e9c
9001b900:	24027e92 	.word	0x24027e92
9001b904:	24027e90 	.word	0x24027e90
9001b908:	24027e9a 	.word	0x24027e9a
9001b90c:	24027e94 	.word	0x24027e94
9001b910:	1961      	adds	r1, r4, r5
9001b912:	ab07      	add	r3, sp, #28
9001b914:	f851 0fac 	ldr.w	r0, [r1, #172]!
9001b918:	6849      	ldr	r1, [r1, #4]
9001b91a:	c303      	stmia	r3!, {r0, r1}
9001b91c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
9001b920:	a807      	add	r0, sp, #28
9001b922:	f8bd 101c 	ldrh.w	r1, [sp, #28]
9001b926:	2b13      	cmp	r3, #19
9001b928:	440b      	add	r3, r1
9001b92a:	bfd8      	it	le
9001b92c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
9001b930:	1a9b      	subs	r3, r3, r2
9001b932:	f8ad 201c 	strh.w	r2, [sp, #28]
9001b936:	f8ad 3020 	strh.w	r3, [sp, #32]
9001b93a:	f7fe ffc1 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b93e:	a807      	add	r0, sp, #28
9001b940:	f7f9 fa13 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
9001b944:	bb78      	cbnz	r0, 9001b9a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
9001b946:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
9001b94a:	4425      	add	r5, r4
9001b94c:	f8d8 0000 	ldr.w	r0, [r8]
9001b950:	f1bc 0f14 	cmp.w	ip, #20
9001b954:	f8bd 3020 	ldrh.w	r3, [sp, #32]
9001b958:	f8d0 e000 	ldr.w	lr, [r0]
9001b95c:	bfa8      	it	ge
9001b95e:	f04f 0c14 	movge.w	ip, #20
9001b962:	f8bd 201e 	ldrh.w	r2, [sp, #30]
9001b966:	f8bd 101c 	ldrh.w	r1, [sp, #28]
9001b96a:	fa1f fc8c 	uxth.w	ip, ip
9001b96e:	f8cd c000 	str.w	ip, [sp]
9001b972:	f8de a090 	ldr.w	sl, [lr, #144]	@ 0x90
9001b976:	47d0      	blx	sl
9001b978:	4682      	mov	sl, r0
9001b97a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
9001b97e:	a807      	add	r0, sp, #28
9001b980:	f7fe ff84 	bl	9001a88c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
9001b984:	6823      	ldr	r3, [r4, #0]
9001b986:	4620      	mov	r0, r4
9001b988:	a907      	add	r1, sp, #28
9001b98a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001b98c:	4798      	blx	r3
9001b98e:	f8b5 00b0 	ldrh.w	r0, [r5, #176]	@ 0xb0
9001b992:	eba0 000a 	sub.w	r0, r0, sl
9001b996:	b200      	sxth	r0, r0
9001b998:	f8a5 00b0 	strh.w	r0, [r5, #176]	@ 0xb0
9001b99c:	b918      	cbnz	r0, 9001b9a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
9001b99e:	b2b9      	uxth	r1, r7
9001b9a0:	4648      	mov	r0, r9
9001b9a2:	f7ff faad 	bl	9001af00 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001b9a6:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
9001b9aa:	f1bb 0f00 	cmp.w	fp, #0
9001b9ae:	f43f af26 	beq.w	9001b7fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001b9b2:	9b02      	ldr	r3, [sp, #8]
9001b9b4:	2700      	movs	r7, #0
9001b9b6:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
9001b9ba:	881b      	ldrh	r3, [r3, #0]
9001b9bc:	3301      	adds	r3, #1
9001b9be:	b29b      	uxth	r3, r3
9001b9c0:	b299      	uxth	r1, r3
9001b9c2:	00fd      	lsls	r5, r7, #3
9001b9c4:	458b      	cmp	fp, r1
9001b9c6:	d9a3      	bls.n	9001b910 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>
9001b9c8:	4425      	add	r5, r4
9001b9ca:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
9001b9ce:	469c      	mov	ip, r3
9001b9d0:	f8b5 10b0 	ldrh.w	r1, [r5, #176]	@ 0xb0
9001b9d4:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	@ 0xac
9001b9d8:	f9ba e0ac 	ldrsh.w	lr, [sl, #172]	@ 0xac
9001b9dc:	4408      	add	r0, r1
9001b9de:	f8ba 10b0 	ldrh.w	r1, [sl, #176]	@ 0xb0
9001b9e2:	4471      	add	r1, lr
9001b9e4:	b200      	sxth	r0, r0
9001b9e6:	b209      	sxth	r1, r1
9001b9e8:	4288      	cmp	r0, r1
9001b9ea:	f6bf af6f 	bge.w	9001b8cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x328>
9001b9ee:	4586      	cmp	lr, r0
9001b9f0:	4672      	mov	r2, lr
9001b9f2:	bfb8      	it	lt
9001b9f4:	4602      	movlt	r2, r0
9001b9f6:	3301      	adds	r3, #1
9001b9f8:	4667      	mov	r7, ip
9001b9fa:	e7e1      	b.n	9001b9c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x41c>
9001b9fc:	d10c      	bne.n	9001ba18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x474>
9001b9fe:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
9001ba02:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
9001ba06:	4287      	cmp	r7, r0
9001ba08:	bfb4      	ite	lt
9001ba0a:	4608      	movlt	r0, r1
9001ba0c:	4640      	movge	r0, r8
9001ba0e:	f8be 70b2 	ldrh.w	r7, [lr, #178]	@ 0xb2
9001ba12:	443b      	add	r3, r7
9001ba14:	b21b      	sxth	r3, r3
9001ba16:	e753      	b.n	9001b8c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
9001ba18:	4565      	cmp	r5, ip
9001ba1a:	4640      	mov	r0, r8
9001ba1c:	bfa8      	it	ge
9001ba1e:	4665      	movge	r5, ip
9001ba20:	e751      	b.n	9001b8c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
9001ba22:	eb09 0007 	add.w	r0, r9, r7
9001ba26:	4427      	add	r7, r4
9001ba28:	9203      	str	r2, [sp, #12]
9001ba2a:	f9b7 a0b2 	ldrsh.w	sl, [r7, #178]	@ 0xb2
9001ba2e:	f1ba 0f13 	cmp.w	sl, #19
9001ba32:	bfde      	ittt	le
9001ba34:	f8b7 50ae 	ldrhle.w	r5, [r7, #174]	@ 0xae
9001ba38:	4455      	addle	r5, sl
9001ba3a:	b22d      	sxthle	r5, r5
9001ba3c:	f7f9 f995 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
9001ba40:	9a03      	ldr	r2, [sp, #12]
9001ba42:	2800      	cmp	r0, #0
9001ba44:	f47f af1c 	bne.w	9001b880 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2dc>
9001ba48:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
9001ba4c:	fa1f fa8a 	uxth.w	sl, sl
9001ba50:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
9001ba54:	1aad      	subs	r5, r5, r2
9001ba56:	4829      	ldr	r0, [pc, #164]	@ (9001bafc <_ZN8touchgfx11Application15drawCachedAreasEv+0x558>)
9001ba58:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
9001ba5c:	2d14      	cmp	r5, #20
9001ba5e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
9001ba62:	6800      	ldr	r0, [r0, #0]
9001ba64:	bfa8      	it	ge
9001ba66:	2514      	movge	r5, #20
9001ba68:	f8ad 101c 	strh.w	r1, [sp, #28]
9001ba6c:	f8ad 201e 	strh.w	r2, [sp, #30]
9001ba70:	b289      	uxth	r1, r1
9001ba72:	f8ad 3020 	strh.w	r3, [sp, #32]
9001ba76:	b2ad      	uxth	r5, r5
9001ba78:	f8d0 c000 	ldr.w	ip, [r0]
9001ba7c:	b292      	uxth	r2, r2
9001ba7e:	4555      	cmp	r5, sl
9001ba80:	bf94      	ite	ls
9001ba82:	9500      	strls	r5, [sp, #0]
9001ba84:	f8cd a000 	strhi.w	sl, [sp]
9001ba88:	b29b      	uxth	r3, r3
9001ba8a:	f8dc 5090 	ldr.w	r5, [ip, #144]	@ 0x90
9001ba8e:	47a8      	blx	r5
9001ba90:	6823      	ldr	r3, [r4, #0]
9001ba92:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
9001ba96:	a907      	add	r1, sp, #28
9001ba98:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001ba9a:	4620      	mov	r0, r4
9001ba9c:	4798      	blx	r3
9001ba9e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
9001baa2:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
9001baa6:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
9001baaa:	1a5b      	subs	r3, r3, r1
9001baac:	440a      	add	r2, r1
9001baae:	b21b      	sxth	r3, r3
9001bab0:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
9001bab4:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
9001bab8:	2b00      	cmp	r3, #0
9001baba:	f47f aed8 	bne.w	9001b86e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
9001babe:	fa1f f188 	uxth.w	r1, r8
9001bac2:	4648      	mov	r0, r9
9001bac4:	f7ff fa1c 	bl	9001af00 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001bac8:	e6d1      	b.n	9001b86e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
9001baca:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
9001bace:	42ab      	cmp	r3, r5
9001bad0:	f67f ae95 	bls.w	9001b7fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001bad4:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
9001bad8:	ab07      	add	r3, sp, #28
9001bada:	f852 0fac 	ldr.w	r0, [r2, #172]!
9001bade:	6851      	ldr	r1, [r2, #4]
9001bae0:	c303      	stmia	r3!, {r0, r1}
9001bae2:	a807      	add	r0, sp, #28
9001bae4:	f7f9 f941 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
9001bae8:	b920      	cbnz	r0, 9001baf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>
9001baea:	6823      	ldr	r3, [r4, #0]
9001baec:	a907      	add	r1, sp, #28
9001baee:	4620      	mov	r0, r4
9001baf0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001baf2:	4798      	blx	r3
9001baf4:	3501      	adds	r5, #1
9001baf6:	b2ad      	uxth	r5, r5
9001baf8:	e7e7      	b.n	9001baca <_ZN8touchgfx11Application15drawCachedAreasEv+0x526>
9001bafa:	bf00      	nop
9001bafc:	24027e9c 	.word	0x24027e9c

9001bb00 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
9001bb00:	4b03      	ldr	r3, [pc, #12]	@ (9001bb10 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
9001bb02:	2200      	movs	r2, #0
9001bb04:	801a      	strh	r2, [r3, #0]
9001bb06:	805a      	strh	r2, [r3, #2]
9001bb08:	809a      	strh	r2, [r3, #4]
9001bb0a:	80da      	strh	r2, [r3, #6]
9001bb0c:	4770      	bx	lr
9001bb0e:	bf00      	nop
9001bb10:	24027ee8 	.word	0x24027ee8

9001bb14 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
9001bb14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bb18:	b09d      	sub	sp, #116	@ 0x74
9001bb1a:	4606      	mov	r6, r0
9001bb1c:	4614      	mov	r4, r2
9001bb1e:	468a      	mov	sl, r1
9001bb20:	a803      	add	r0, sp, #12
9001bb22:	461d      	mov	r5, r3
9001bb24:	f000 ff0d 	bl	9001c942 <_ZN8touchgfx12TextProviderC1Ev>
9001bb28:	6833      	ldr	r3, [r6, #0]
9001bb2a:	4630      	mov	r0, r6
9001bb2c:	f242 0b0b 	movw	fp, #8203	@ 0x200b
9001bb30:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001bb32:	4798      	blx	r3
9001bb34:	6833      	ldr	r3, [r6, #0]
9001bb36:	4607      	mov	r7, r0
9001bb38:	4630      	mov	r0, r6
9001bb3a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001bb3c:	4798      	blx	r3
9001bb3e:	462a      	mov	r2, r5
9001bb40:	2500      	movs	r5, #0
9001bb42:	4621      	mov	r1, r4
9001bb44:	9000      	str	r0, [sp, #0]
9001bb46:	463b      	mov	r3, r7
9001bb48:	462c      	mov	r4, r5
9001bb4a:	46a9      	mov	r9, r5
9001bb4c:	46a8      	mov	r8, r5
9001bb4e:	a803      	add	r0, sp, #12
9001bb50:	f000 ff52 	bl	9001c9f8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001bb54:	2300      	movs	r3, #0
9001bb56:	9302      	str	r3, [sp, #8]
9001bb58:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001bb5c:	429c      	cmp	r4, r3
9001bb5e:	d002      	beq.n	9001bb66 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
9001bb60:	455c      	cmp	r4, fp
9001bb62:	bf18      	it	ne
9001bb64:	4625      	movne	r5, r4
9001bb66:	ab02      	add	r3, sp, #8
9001bb68:	4632      	mov	r2, r6
9001bb6a:	4651      	mov	r1, sl
9001bb6c:	a803      	add	r0, sp, #12
9001bb6e:	f001 fa49 	bl	9001d004 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001bb72:	4604      	mov	r4, r0
9001bb74:	b108      	cbz	r0, 9001bb7a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
9001bb76:	280a      	cmp	r0, #10
9001bb78:	d10a      	bne.n	9001bb90 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
9001bb7a:	45c1      	cmp	r9, r8
9001bb7c:	bf38      	it	cc
9001bb7e:	46c1      	movcc	r9, r8
9001bb80:	f04f 0800 	mov.w	r8, #0
9001bb84:	2c00      	cmp	r4, #0
9001bb86:	d1e5      	bne.n	9001bb54 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
9001bb88:	4648      	mov	r0, r9
9001bb8a:	b01d      	add	sp, #116	@ 0x74
9001bb8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001bb90:	9a02      	ldr	r2, [sp, #8]
9001bb92:	2a00      	cmp	r2, #0
9001bb94:	d0de      	beq.n	9001bb54 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
9001bb96:	7b57      	ldrb	r7, [r2, #13]
9001bb98:	4629      	mov	r1, r5
9001bb9a:	6833      	ldr	r3, [r6, #0]
9001bb9c:	007f      	lsls	r7, r7, #1
9001bb9e:	8894      	ldrh	r4, [r2, #4]
9001bba0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001bba2:	f407 7080 	and.w	r0, r7, #256	@ 0x100
9001bba6:	7a97      	ldrb	r7, [r2, #10]
9001bba8:	4307      	orrs	r7, r0
9001bbaa:	4630      	mov	r0, r6
9001bbac:	4798      	blx	r3
9001bbae:	4438      	add	r0, r7
9001bbb0:	4480      	add	r8, r0
9001bbb2:	fa1f f888 	uxth.w	r8, r8
9001bbb6:	e7e5      	b.n	9001bb84 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

9001bbb8 <_ZNK8touchgfx4Font12getCharWidthEt>:
9001bbb8:	b508      	push	{r3, lr}
9001bbba:	6803      	ldr	r3, [r0, #0]
9001bbbc:	68db      	ldr	r3, [r3, #12]
9001bbbe:	4798      	blx	r3
9001bbc0:	b128      	cbz	r0, 9001bbce <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
9001bbc2:	7b43      	ldrb	r3, [r0, #13]
9001bbc4:	7a80      	ldrb	r0, [r0, #10]
9001bbc6:	005b      	lsls	r3, r3, #1
9001bbc8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001bbcc:	4318      	orrs	r0, r3
9001bbce:	bd08      	pop	{r3, pc}

9001bbd0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
9001bbd0:	b40e      	push	{r1, r2, r3}
9001bbd2:	b5f0      	push	{r4, r5, r6, r7, lr}
9001bbd4:	b09e      	sub	sp, #120	@ 0x78
9001bbd6:	4605      	mov	r5, r0
9001bbd8:	ab23      	add	r3, sp, #140	@ 0x8c
9001bbda:	a805      	add	r0, sp, #20
9001bbdc:	f853 4b04 	ldr.w	r4, [r3], #4
9001bbe0:	9303      	str	r3, [sp, #12]
9001bbe2:	f000 feae 	bl	9001c942 <_ZN8touchgfx12TextProviderC1Ev>
9001bbe6:	682b      	ldr	r3, [r5, #0]
9001bbe8:	4628      	mov	r0, r5
9001bbea:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001bbec:	4798      	blx	r3
9001bbee:	682b      	ldr	r3, [r5, #0]
9001bbf0:	4606      	mov	r6, r0
9001bbf2:	4628      	mov	r0, r5
9001bbf4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001bbf6:	4798      	blx	r3
9001bbf8:	4633      	mov	r3, r6
9001bbfa:	4621      	mov	r1, r4
9001bbfc:	ae1e      	add	r6, sp, #120	@ 0x78
9001bbfe:	2400      	movs	r4, #0
9001bc00:	9000      	str	r0, [sp, #0]
9001bc02:	9a03      	ldr	r2, [sp, #12]
9001bc04:	a805      	add	r0, sp, #20
9001bc06:	f000 fef7 	bl	9001c9f8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001bc0a:	f846 4d68 	str.w	r4, [r6, #-104]!
9001bc0e:	462a      	mov	r2, r5
9001bc10:	4633      	mov	r3, r6
9001bc12:	4621      	mov	r1, r4
9001bc14:	a805      	add	r0, sp, #20
9001bc16:	f001 f9f5 	bl	9001d004 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001bc1a:	b300      	cbz	r0, 9001bc5e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
9001bc1c:	280a      	cmp	r0, #10
9001bc1e:	d01a      	beq.n	9001bc56 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
9001bc20:	9f04      	ldr	r7, [sp, #16]
9001bc22:	b1c7      	cbz	r7, 9001bc56 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
9001bc24:	7b78      	ldrb	r0, [r7, #13]
9001bc26:	7a3b      	ldrb	r3, [r7, #8]
9001bc28:	00c1      	lsls	r1, r0, #3
9001bc2a:	88ea      	ldrh	r2, [r5, #6]
9001bc2c:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001bc30:	4319      	orrs	r1, r3
9001bc32:	0643      	lsls	r3, r0, #25
9001bc34:	ea4f 1000 	mov.w	r0, r0, lsl #4
9001bc38:	bf48      	it	mi
9001bc3a:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
9001bc3e:	f400 7080 	and.w	r0, r0, #256	@ 0x100
9001bc42:	bf48      	it	mi
9001bc44:	b219      	sxthmi	r1, r3
9001bc46:	79fb      	ldrb	r3, [r7, #7]
9001bc48:	4303      	orrs	r3, r0
9001bc4a:	4413      	add	r3, r2
9001bc4c:	1a5b      	subs	r3, r3, r1
9001bc4e:	b21b      	sxth	r3, r3
9001bc50:	429c      	cmp	r4, r3
9001bc52:	bfb8      	it	lt
9001bc54:	461c      	movlt	r4, r3
9001bc56:	4633      	mov	r3, r6
9001bc58:	462a      	mov	r2, r5
9001bc5a:	2100      	movs	r1, #0
9001bc5c:	e7da      	b.n	9001bc14 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
9001bc5e:	b2a0      	uxth	r0, r4
9001bc60:	b01e      	add	sp, #120	@ 0x78
9001bc62:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001bc66:	b003      	add	sp, #12
9001bc68:	4770      	bx	lr

9001bc6a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
9001bc6a:	7a43      	ldrb	r3, [r0, #9]
9001bc6c:	8880      	ldrh	r0, [r0, #4]
9001bc6e:	4418      	add	r0, r3
9001bc70:	b280      	uxth	r0, r0
9001bc72:	4770      	bx	lr

9001bc74 <_ZNK8touchgfx4Font13getFontHeightEv>:
9001bc74:	6803      	ldr	r3, [r0, #0]
9001bc76:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001bc78:	4718      	bx	r3

9001bc7a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
9001bc7a:	b40e      	push	{r1, r2, r3}
9001bc7c:	b570      	push	{r4, r5, r6, lr}
9001bc7e:	b09d      	sub	sp, #116	@ 0x74
9001bc80:	4604      	mov	r4, r0
9001bc82:	ab21      	add	r3, sp, #132	@ 0x84
9001bc84:	a803      	add	r0, sp, #12
9001bc86:	f853 5b04 	ldr.w	r5, [r3], #4
9001bc8a:	9302      	str	r3, [sp, #8]
9001bc8c:	f000 fe59 	bl	9001c942 <_ZN8touchgfx12TextProviderC1Ev>
9001bc90:	6823      	ldr	r3, [r4, #0]
9001bc92:	4620      	mov	r0, r4
9001bc94:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001bc96:	4798      	blx	r3
9001bc98:	6823      	ldr	r3, [r4, #0]
9001bc9a:	4606      	mov	r6, r0
9001bc9c:	4620      	mov	r0, r4
9001bc9e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001bca0:	2401      	movs	r4, #1
9001bca2:	4798      	blx	r3
9001bca4:	4633      	mov	r3, r6
9001bca6:	9000      	str	r0, [sp, #0]
9001bca8:	4629      	mov	r1, r5
9001bcaa:	9a02      	ldr	r2, [sp, #8]
9001bcac:	a803      	add	r0, sp, #12
9001bcae:	f000 fea3 	bl	9001c9f8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001bcb2:	a803      	add	r0, sp, #12
9001bcb4:	f001 fa72 	bl	9001d19c <_ZN8touchgfx12TextProvider11getNextCharEv>
9001bcb8:	b2a3      	uxth	r3, r4
9001bcba:	b138      	cbz	r0, 9001bccc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
9001bcbc:	280a      	cmp	r0, #10
9001bcbe:	a803      	add	r0, sp, #12
9001bcc0:	bf04      	itt	eq
9001bcc2:	3301      	addeq	r3, #1
9001bcc4:	b21c      	sxtheq	r4, r3
9001bcc6:	f001 fa69 	bl	9001d19c <_ZN8touchgfx12TextProvider11getNextCharEv>
9001bcca:	e7f5      	b.n	9001bcb8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
9001bccc:	4618      	mov	r0, r3
9001bcce:	b01d      	add	sp, #116	@ 0x74
9001bcd0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001bcd4:	b003      	add	sp, #12
9001bcd6:	4770      	bx	lr

9001bcd8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
9001bcd8:	b40e      	push	{r1, r2, r3}
9001bcda:	b5f0      	push	{r4, r5, r6, r7, lr}
9001bcdc:	b09e      	sub	sp, #120	@ 0x78
9001bcde:	4604      	mov	r4, r0
9001bce0:	ab23      	add	r3, sp, #140	@ 0x8c
9001bce2:	a805      	add	r0, sp, #20
9001bce4:	f853 5b04 	ldr.w	r5, [r3], #4
9001bce8:	9303      	str	r3, [sp, #12]
9001bcea:	f000 fe2a 	bl	9001c942 <_ZN8touchgfx12TextProviderC1Ev>
9001bcee:	6823      	ldr	r3, [r4, #0]
9001bcf0:	4620      	mov	r0, r4
9001bcf2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001bcf4:	4798      	blx	r3
9001bcf6:	6823      	ldr	r3, [r4, #0]
9001bcf8:	4606      	mov	r6, r0
9001bcfa:	4620      	mov	r0, r4
9001bcfc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001bcfe:	4798      	blx	r3
9001bd00:	4633      	mov	r3, r6
9001bd02:	4629      	mov	r1, r5
9001bd04:	9000      	str	r0, [sp, #0]
9001bd06:	9a03      	ldr	r2, [sp, #12]
9001bd08:	a805      	add	r0, sp, #20
9001bd0a:	f000 fe75 	bl	9001c9f8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001bd0e:	ad1e      	add	r5, sp, #120	@ 0x78
9001bd10:	2100      	movs	r1, #0
9001bd12:	f647 76ff 	movw	r6, #32767	@ 0x7fff
9001bd16:	4622      	mov	r2, r4
9001bd18:	a805      	add	r0, sp, #20
9001bd1a:	f845 1d68 	str.w	r1, [r5, #-104]!
9001bd1e:	462b      	mov	r3, r5
9001bd20:	f001 f970 	bl	9001d004 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001bd24:	b1d8      	cbz	r0, 9001bd5e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
9001bd26:	280a      	cmp	r0, #10
9001bd28:	d012      	beq.n	9001bd50 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001bd2a:	9804      	ldr	r0, [sp, #16]
9001bd2c:	b180      	cbz	r0, 9001bd50 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001bd2e:	7b47      	ldrb	r7, [r0, #13]
9001bd30:	88e2      	ldrh	r2, [r4, #6]
9001bd32:	00fb      	lsls	r3, r7, #3
9001bd34:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001bd38:	7a03      	ldrb	r3, [r0, #8]
9001bd3a:	430b      	orrs	r3, r1
9001bd3c:	0679      	lsls	r1, r7, #25
9001bd3e:	bf44      	itt	mi
9001bd40:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001bd44:	b21b      	sxthmi	r3, r3
9001bd46:	1ad3      	subs	r3, r2, r3
9001bd48:	b21b      	sxth	r3, r3
9001bd4a:	429e      	cmp	r6, r3
9001bd4c:	bfa8      	it	ge
9001bd4e:	461e      	movge	r6, r3
9001bd50:	462b      	mov	r3, r5
9001bd52:	4622      	mov	r2, r4
9001bd54:	2100      	movs	r1, #0
9001bd56:	a805      	add	r0, sp, #20
9001bd58:	f001 f954 	bl	9001d004 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001bd5c:	e7e2      	b.n	9001bd24 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
9001bd5e:	4630      	mov	r0, r6
9001bd60:	b01e      	add	sp, #120	@ 0x78
9001bd62:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001bd66:	b003      	add	sp, #12
9001bd68:	4770      	bx	lr

9001bd6a <_ZNK8touchgfx8Drawable10invalidateEv>:
9001bd6a:	b513      	push	{r0, r1, r4, lr}
9001bd6c:	6803      	ldr	r3, [r0, #0]
9001bd6e:	2400      	movs	r4, #0
9001bd70:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001bd74:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001bd78:	f8ad 1004 	strh.w	r1, [sp, #4]
9001bd7c:	4669      	mov	r1, sp
9001bd7e:	691b      	ldr	r3, [r3, #16]
9001bd80:	9400      	str	r4, [sp, #0]
9001bd82:	f8ad 2006 	strh.w	r2, [sp, #6]
9001bd86:	4798      	blx	r3
9001bd88:	b002      	add	sp, #8
9001bd8a:	bd10      	pop	{r4, pc}

9001bd8c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
9001bd8c:	b538      	push	{r3, r4, r5, lr}
9001bd8e:	680b      	ldr	r3, [r1, #0]
9001bd90:	460c      	mov	r4, r1
9001bd92:	4605      	mov	r5, r0
9001bd94:	68db      	ldr	r3, [r3, #12]
9001bd96:	4798      	blx	r3
9001bd98:	6823      	ldr	r3, [r4, #0]
9001bd9a:	4620      	mov	r0, r4
9001bd9c:	4629      	mov	r1, r5
9001bd9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001bda0:	4798      	blx	r3
9001bda2:	4628      	mov	r0, r5
9001bda4:	bd38      	pop	{r3, r4, r5, pc}

9001bda6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
9001bda6:	b410      	push	{r4}
9001bda8:	880a      	ldrh	r2, [r1, #0]
9001bdaa:	8884      	ldrh	r4, [r0, #4]
9001bdac:	4422      	add	r2, r4
9001bdae:	800a      	strh	r2, [r1, #0]
9001bdb0:	884a      	ldrh	r2, [r1, #2]
9001bdb2:	88c4      	ldrh	r4, [r0, #6]
9001bdb4:	4422      	add	r2, r4
9001bdb6:	804a      	strh	r2, [r1, #2]
9001bdb8:	6940      	ldr	r0, [r0, #20]
9001bdba:	b120      	cbz	r0, 9001bdc6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
9001bdbc:	6803      	ldr	r3, [r0, #0]
9001bdbe:	f85d 4b04 	ldr.w	r4, [sp], #4
9001bdc2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001bdc4:	4718      	bx	r3
9001bdc6:	f85d 4b04 	ldr.w	r4, [sp], #4
9001bdca:	4770      	bx	lr

9001bdcc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
9001bdcc:	b570      	push	{r4, r5, r6, lr}
9001bdce:	8882      	ldrh	r2, [r0, #4]
9001bdd0:	460c      	mov	r4, r1
9001bdd2:	880b      	ldrh	r3, [r1, #0]
9001bdd4:	4605      	mov	r5, r0
9001bdd6:	4413      	add	r3, r2
9001bdd8:	800b      	strh	r3, [r1, #0]
9001bdda:	884b      	ldrh	r3, [r1, #2]
9001bddc:	88c2      	ldrh	r2, [r0, #6]
9001bdde:	4413      	add	r3, r2
9001bde0:	804b      	strh	r3, [r1, #2]
9001bde2:	1d01      	adds	r1, r0, #4
9001bde4:	4620      	mov	r0, r4
9001bde6:	f7f8 ff7d 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
9001bdea:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001bdee:	2b00      	cmp	r3, #0
9001bdf0:	dd0b      	ble.n	9001be0a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001bdf2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001bdf6:	2b00      	cmp	r3, #0
9001bdf8:	dd07      	ble.n	9001be0a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001bdfa:	6968      	ldr	r0, [r5, #20]
9001bdfc:	b128      	cbz	r0, 9001be0a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001bdfe:	6803      	ldr	r3, [r0, #0]
9001be00:	4621      	mov	r1, r4
9001be02:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001be04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001be08:	4718      	bx	r3
9001be0a:	bd70      	pop	{r4, r5, r6, pc}

9001be0c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
9001be0c:	b570      	push	{r4, r5, r6, lr}
9001be0e:	8882      	ldrh	r2, [r0, #4]
9001be10:	460c      	mov	r4, r1
9001be12:	880b      	ldrh	r3, [r1, #0]
9001be14:	4605      	mov	r5, r0
9001be16:	4413      	add	r3, r2
9001be18:	800b      	strh	r3, [r1, #0]
9001be1a:	884b      	ldrh	r3, [r1, #2]
9001be1c:	88c2      	ldrh	r2, [r0, #6]
9001be1e:	4413      	add	r3, r2
9001be20:	804b      	strh	r3, [r1, #2]
9001be22:	1d01      	adds	r1, r0, #4
9001be24:	4620      	mov	r0, r4
9001be26:	f7f8 ff5d 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
9001be2a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001be2e:	2b00      	cmp	r3, #0
9001be30:	dd18      	ble.n	9001be64 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
9001be32:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001be36:	2b00      	cmp	r3, #0
9001be38:	dd14      	ble.n	9001be64 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
9001be3a:	6968      	ldr	r0, [r5, #20]
9001be3c:	b128      	cbz	r0, 9001be4a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
9001be3e:	6803      	ldr	r3, [r0, #0]
9001be40:	4621      	mov	r1, r4
9001be42:	691b      	ldr	r3, [r3, #16]
9001be44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001be48:	4718      	bx	r3
9001be4a:	4b07      	ldr	r3, [pc, #28]	@ (9001be68 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
9001be4c:	681b      	ldr	r3, [r3, #0]
9001be4e:	3304      	adds	r3, #4
9001be50:	429d      	cmp	r5, r3
9001be52:	d107      	bne.n	9001be64 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
9001be54:	f7fe fed2 	bl	9001abfc <_ZN8touchgfx11Application11getInstanceEv>
9001be58:	6821      	ldr	r1, [r4, #0]
9001be5a:	6862      	ldr	r2, [r4, #4]
9001be5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001be60:	f7ff b862 	b.w	9001af28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
9001be64:	bd70      	pop	{r4, r5, r6, pc}
9001be66:	bf00      	nop
9001be68:	24027ee0 	.word	0x24027ee0

9001be6c <_ZN8touchgfx8Drawable12moveRelativeEss>:
9001be6c:	b570      	push	{r4, r5, r6, lr}
9001be6e:	4604      	mov	r4, r0
9001be70:	4616      	mov	r6, r2
9001be72:	460d      	mov	r5, r1
9001be74:	b901      	cbnz	r1, 9001be78 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
9001be76:	b192      	cbz	r2, 9001be9e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
9001be78:	6823      	ldr	r3, [r4, #0]
9001be7a:	4620      	mov	r0, r4
9001be7c:	699b      	ldr	r3, [r3, #24]
9001be7e:	4798      	blx	r3
9001be80:	88e2      	ldrh	r2, [r4, #6]
9001be82:	88a1      	ldrh	r1, [r4, #4]
9001be84:	4620      	mov	r0, r4
9001be86:	4432      	add	r2, r6
9001be88:	4429      	add	r1, r5
9001be8a:	b212      	sxth	r2, r2
9001be8c:	b209      	sxth	r1, r1
9001be8e:	f7f9 f9f9 	bl	90015284 <_ZN8touchgfx8Drawable5setXYEss>
9001be92:	6823      	ldr	r3, [r4, #0]
9001be94:	4620      	mov	r0, r4
9001be96:	699b      	ldr	r3, [r3, #24]
9001be98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001be9c:	4718      	bx	r3
9001be9e:	bd70      	pop	{r4, r5, r6, pc}

9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
9001bea0:	b510      	push	{r4, lr}
9001bea2:	2300      	movs	r3, #0
9001bea4:	4604      	mov	r4, r0
9001bea6:	4608      	mov	r0, r1
9001bea8:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
9001beac:	8023      	strh	r3, [r4, #0]
9001beae:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001beb2:	8063      	strh	r3, [r4, #2]
9001beb4:	6803      	ldr	r3, [r0, #0]
9001beb6:	80a1      	strh	r1, [r4, #4]
9001beb8:	4621      	mov	r1, r4
9001beba:	80e2      	strh	r2, [r4, #6]
9001bebc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001bebe:	4798      	blx	r3
9001bec0:	4620      	mov	r0, r4
9001bec2:	bd10      	pop	{r4, pc}

9001bec4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
9001bec4:	b530      	push	{r4, r5, lr}
9001bec6:	8083      	strh	r3, [r0, #4]
9001bec8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
9001becc:	f89d 5018 	ldrb.w	r5, [sp, #24]
9001bed0:	80c3      	strh	r3, [r0, #6]
9001bed2:	f89d 3010 	ldrb.w	r3, [sp, #16]
9001bed6:	6141      	str	r1, [r0, #20]
9001bed8:	7203      	strb	r3, [r0, #8]
9001beda:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001bede:	8302      	strh	r2, [r0, #24]
9001bee0:	7243      	strb	r3, [r0, #9]
9001bee2:	7a83      	ldrb	r3, [r0, #10]
9001bee4:	f365 0306 	bfi	r3, r5, #0, #7
9001bee8:	f89d 501c 	ldrb.w	r5, [sp, #28]
9001beec:	f365 13c7 	bfi	r3, r5, #7, #1
9001bef0:	7283      	strb	r3, [r0, #10]
9001bef2:	f89d 3020 	ldrb.w	r3, [sp, #32]
9001bef6:	72c3      	strb	r3, [r0, #11]
9001bef8:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
9001befc:	7303      	strb	r3, [r0, #12]
9001befe:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001bf02:	81c3      	strh	r3, [r0, #14]
9001bf04:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
9001bf08:	8203      	strh	r3, [r0, #16]
9001bf0a:	4b01      	ldr	r3, [pc, #4]	@ (9001bf10 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
9001bf0c:	6003      	str	r3, [r0, #0]
9001bf0e:	bd30      	pop	{r4, r5, pc}
9001bf10:	900306f4 	.word	0x900306f4

9001bf14 <_ZNK8touchgfx9ConstFont4findEt>:
9001bf14:	b5f0      	push	{r4, r5, r6, r7, lr}
9001bf16:	6944      	ldr	r4, [r0, #20]
9001bf18:	b3bc      	cbz	r4, 9001bf8a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001bf1a:	88a3      	ldrh	r3, [r4, #4]
9001bf1c:	8b02      	ldrh	r2, [r0, #24]
9001bf1e:	1acb      	subs	r3, r1, r3
9001bf20:	f102 32ff 	add.w	r2, r2, #4294967295
9001bf24:	d431      	bmi.n	9001bf8a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001bf26:	4293      	cmp	r3, r2
9001bf28:	dd0c      	ble.n	9001bf44 <_ZNK8touchgfx9ConstFont4findEt+0x30>
9001bf2a:	230e      	movs	r3, #14
9001bf2c:	fb03 4302 	mla	r3, r3, r2, r4
9001bf30:	889b      	ldrh	r3, [r3, #4]
9001bf32:	1a5b      	subs	r3, r3, r1
9001bf34:	1ad3      	subs	r3, r2, r3
9001bf36:	429a      	cmp	r2, r3
9001bf38:	db27      	blt.n	9001bf8a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001bf3a:	2b00      	cmp	r3, #0
9001bf3c:	bfbc      	itt	lt
9001bf3e:	2302      	movlt	r3, #2
9001bf40:	fb92 f3f3 	sdivlt	r3, r2, r3
9001bf44:	2500      	movs	r5, #0
9001bf46:	260e      	movs	r6, #14
9001bf48:	4295      	cmp	r5, r2
9001bf4a:	dc1e      	bgt.n	9001bf8a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001bf4c:	fb06 4003 	mla	r0, r6, r3, r4
9001bf50:	8887      	ldrh	r7, [r0, #4]
9001bf52:	42b9      	cmp	r1, r7
9001bf54:	d01a      	beq.n	9001bf8c <_ZNK8touchgfx9ConstFont4findEt+0x78>
9001bf56:	d20d      	bcs.n	9001bf74 <_ZNK8touchgfx9ConstFont4findEt+0x60>
9001bf58:	1e5a      	subs	r2, r3, #1
9001bf5a:	4295      	cmp	r5, r2
9001bf5c:	dc15      	bgt.n	9001bf8a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001bf5e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
9001bf62:	1a5b      	subs	r3, r3, r1
9001bf64:	1ad3      	subs	r3, r2, r3
9001bf66:	429a      	cmp	r2, r3
9001bf68:	db0f      	blt.n	9001bf8a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001bf6a:	429d      	cmp	r5, r3
9001bf6c:	ddec      	ble.n	9001bf48 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001bf6e:	1953      	adds	r3, r2, r5
9001bf70:	105b      	asrs	r3, r3, #1
9001bf72:	e7e9      	b.n	9001bf48 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001bf74:	1c5d      	adds	r5, r3, #1
9001bf76:	42aa      	cmp	r2, r5
9001bf78:	db07      	blt.n	9001bf8a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001bf7a:	8a43      	ldrh	r3, [r0, #18]
9001bf7c:	1acb      	subs	r3, r1, r3
9001bf7e:	442b      	add	r3, r5
9001bf80:	429d      	cmp	r5, r3
9001bf82:	dc02      	bgt.n	9001bf8a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001bf84:	429a      	cmp	r2, r3
9001bf86:	dadf      	bge.n	9001bf48 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001bf88:	e7f1      	b.n	9001bf6e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
9001bf8a:	2000      	movs	r0, #0
9001bf8c:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001bf8e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
9001bf8e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001bf90:	4604      	mov	r4, r0
9001bf92:	4617      	mov	r7, r2
9001bf94:	461e      	mov	r6, r3
9001bf96:	b911      	cbnz	r1, 9001bf9e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
9001bf98:	2500      	movs	r5, #0
9001bf9a:	4628      	mov	r0, r5
9001bf9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001bf9e:	290a      	cmp	r1, #10
9001bfa0:	d0fa      	beq.n	9001bf98 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001bfa2:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
9001bfa6:	4291      	cmp	r1, r2
9001bfa8:	d0f6      	beq.n	9001bf98 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001bfaa:	f242 020b 	movw	r2, #8203	@ 0x200b
9001bfae:	4291      	cmp	r1, r2
9001bfb0:	d0f2      	beq.n	9001bf98 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001bfb2:	f7ff ffaf 	bl	9001bf14 <_ZNK8touchgfx9ConstFont4findEt>
9001bfb6:	4605      	mov	r5, r0
9001bfb8:	b950      	cbnz	r0, 9001bfd0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
9001bfba:	6823      	ldr	r3, [r4, #0]
9001bfbc:	4620      	mov	r0, r4
9001bfbe:	691b      	ldr	r3, [r3, #16]
9001bfc0:	4798      	blx	r3
9001bfc2:	4601      	mov	r1, r0
9001bfc4:	4620      	mov	r0, r4
9001bfc6:	f7ff ffa5 	bl	9001bf14 <_ZNK8touchgfx9ConstFont4findEt>
9001bfca:	4605      	mov	r5, r0
9001bfcc:	2800      	cmp	r0, #0
9001bfce:	d0e3      	beq.n	9001bf98 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001bfd0:	6823      	ldr	r3, [r4, #0]
9001bfd2:	4629      	mov	r1, r5
9001bfd4:	4620      	mov	r0, r4
9001bfd6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9001bfd8:	4798      	blx	r3
9001bfda:	6038      	str	r0, [r7, #0]
9001bfdc:	6823      	ldr	r3, [r4, #0]
9001bfde:	4620      	mov	r0, r4
9001bfe0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001bfe2:	4798      	blx	r3
9001bfe4:	7030      	strb	r0, [r6, #0]
9001bfe6:	e7d8      	b.n	9001bf9a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

9001bfe8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
9001bfe8:	b538      	push	{r3, r4, r5, lr}
9001bfea:	4605      	mov	r5, r0
9001bfec:	f002 fb64 	bl	9001e6b8 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001bff0:	4604      	mov	r4, r0
9001bff2:	4628      	mov	r0, r5
9001bff4:	f002 faa4 	bl	9001e540 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001bff8:	2800      	cmp	r0, #0
9001bffa:	bf14      	ite	ne
9001bffc:	2002      	movne	r0, #2
9001bffe:	2000      	moveq	r0, #0
9001c000:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
9001c004:	b280      	uxth	r0, r0
9001c006:	bd38      	pop	{r3, r4, r5, pc}

9001c008 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
9001c008:	b538      	push	{r3, r4, r5, lr}
9001c00a:	4605      	mov	r5, r0
9001c00c:	f002 fb54 	bl	9001e6b8 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001c010:	4604      	mov	r4, r0
9001c012:	4628      	mov	r0, r5
9001c014:	f002 fa94 	bl	9001e540 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001c018:	2800      	cmp	r0, #0
9001c01a:	bf14      	ite	ne
9001c01c:	2002      	movne	r0, #2
9001c01e:	2000      	moveq	r0, #0
9001c020:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
9001c024:	f040 0001 	orr.w	r0, r0, #1
9001c028:	b280      	uxth	r0, r0
9001c02a:	bd38      	pop	{r3, r4, r5, pc}

9001c02c <_ZN8touchgfx4clzuEm>:
9001c02c:	4603      	mov	r3, r0
9001c02e:	b1c8      	cbz	r0, 9001c064 <_ZN8touchgfx4clzuEm+0x38>
9001c030:	0c02      	lsrs	r2, r0, #16
9001c032:	0412      	lsls	r2, r2, #16
9001c034:	b9a2      	cbnz	r2, 9001c060 <_ZN8touchgfx4clzuEm+0x34>
9001c036:	0403      	lsls	r3, r0, #16
9001c038:	2010      	movs	r0, #16
9001c03a:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
9001c03e:	bf04      	itt	eq
9001c040:	021b      	lsleq	r3, r3, #8
9001c042:	3008      	addeq	r0, #8
9001c044:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
9001c048:	bf04      	itt	eq
9001c04a:	011b      	lsleq	r3, r3, #4
9001c04c:	3004      	addeq	r0, #4
9001c04e:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
9001c052:	bf04      	itt	eq
9001c054:	009b      	lsleq	r3, r3, #2
9001c056:	3002      	addeq	r0, #2
9001c058:	2b00      	cmp	r3, #0
9001c05a:	db04      	blt.n	9001c066 <_ZN8touchgfx4clzuEm+0x3a>
9001c05c:	3001      	adds	r0, #1
9001c05e:	4770      	bx	lr
9001c060:	2000      	movs	r0, #0
9001c062:	e7ea      	b.n	9001c03a <_ZN8touchgfx4clzuEm+0xe>
9001c064:	2020      	movs	r0, #32
9001c066:	4770      	bx	lr

9001c068 <_ZN8touchgfx7muldivuEmmmRm>:
9001c068:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c06c:	4680      	mov	r8, r0
9001c06e:	460f      	mov	r7, r1
9001c070:	4615      	mov	r5, r2
9001c072:	461e      	mov	r6, r3
9001c074:	f7ff ffda 	bl	9001c02c <_ZN8touchgfx4clzuEm>
9001c078:	b998      	cbnz	r0, 9001c0a2 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
9001c07a:	4608      	mov	r0, r1
9001c07c:	f7ff ffd6 	bl	9001c02c <_ZN8touchgfx4clzuEm>
9001c080:	2800      	cmp	r0, #0
9001c082:	dd08      	ble.n	9001c096 <_ZN8touchgfx7muldivuEmmmRm+0x2e>
9001c084:	4633      	mov	r3, r6
9001c086:	462a      	mov	r2, r5
9001c088:	4641      	mov	r1, r8
9001c08a:	4638      	mov	r0, r7
9001c08c:	f7ff ffec 	bl	9001c068 <_ZN8touchgfx7muldivuEmmmRm>
9001c090:	b003      	add	sp, #12
9001c092:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c096:	f04f 33ff 	mov.w	r3, #4294967295
9001c09a:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
9001c09e:	6033      	str	r3, [r6, #0]
9001c0a0:	e7f6      	b.n	9001c090 <_ZN8touchgfx7muldivuEmmmRm+0x28>
9001c0a2:	fa31 f900 	lsrs.w	r9, r1, r0
9001c0a6:	fb01 f308 	mul.w	r3, r1, r8
9001c0aa:	d105      	bne.n	9001c0b8 <_ZN8touchgfx7muldivuEmmmRm+0x50>
9001c0ac:	fbb3 f0f5 	udiv	r0, r3, r5
9001c0b0:	fb05 3510 	mls	r5, r5, r0, r3
9001c0b4:	6035      	str	r5, [r6, #0]
9001c0b6:	e7eb      	b.n	9001c090 <_ZN8touchgfx7muldivuEmmmRm+0x28>
9001c0b8:	2301      	movs	r3, #1
9001c0ba:	fa08 fb00 	lsl.w	fp, r8, r0
9001c0be:	462a      	mov	r2, r5
9001c0c0:	4641      	mov	r1, r8
9001c0c2:	fa03 f000 	lsl.w	r0, r3, r0
9001c0c6:	4633      	mov	r3, r6
9001c0c8:	fbbb faf5 	udiv	sl, fp, r5
9001c0cc:	3801      	subs	r0, #1
9001c0ce:	fb09 f40a 	mul.w	r4, r9, sl
9001c0d2:	4038      	ands	r0, r7
9001c0d4:	f7ff ffc8 	bl	9001c068 <_ZN8touchgfx7muldivuEmmmRm>
9001c0d8:	462a      	mov	r2, r5
9001c0da:	4607      	mov	r7, r0
9001c0dc:	ab01      	add	r3, sp, #4
9001c0de:	fb05 b11a 	mls	r1, r5, sl, fp
9001c0e2:	4648      	mov	r0, r9
9001c0e4:	f7ff ffc0 	bl	9001c068 <_ZN8touchgfx7muldivuEmmmRm>
9001c0e8:	9b01      	ldr	r3, [sp, #4]
9001c0ea:	6832      	ldr	r2, [r6, #0]
9001c0ec:	441a      	add	r2, r3
9001c0ee:	fbb2 f3f5 	udiv	r3, r2, r5
9001c0f2:	441c      	add	r4, r3
9001c0f4:	fb05 2513 	mls	r5, r5, r3, r2
9001c0f8:	443c      	add	r4, r7
9001c0fa:	4420      	add	r0, r4
9001c0fc:	e7da      	b.n	9001c0b4 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

9001c0fe <_ZN8touchgfx6muldivElllRl>:
9001c0fe:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001c100:	2800      	cmp	r0, #0
9001c102:	461e      	mov	r6, r3
9001c104:	bfba      	itte	lt
9001c106:	4240      	neglt	r0, r0
9001c108:	f04f 34ff 	movlt.w	r4, #4294967295
9001c10c:	2401      	movge	r4, #1
9001c10e:	2900      	cmp	r1, #0
9001c110:	bfbc      	itt	lt
9001c112:	4249      	neglt	r1, r1
9001c114:	4264      	neglt	r4, r4
9001c116:	2a00      	cmp	r2, #0
9001c118:	bfb6      	itet	lt
9001c11a:	4265      	neglt	r5, r4
9001c11c:	4625      	movge	r5, r4
9001c11e:	4252      	neglt	r2, r2
9001c120:	4288      	cmp	r0, r1
9001c122:	bfc2      	ittt	gt
9001c124:	4603      	movgt	r3, r0
9001c126:	4608      	movgt	r0, r1
9001c128:	4619      	movgt	r1, r3
9001c12a:	ab01      	add	r3, sp, #4
9001c12c:	f7ff ff9c 	bl	9001c068 <_ZN8touchgfx7muldivuEmmmRm>
9001c130:	9b01      	ldr	r3, [sp, #4]
9001c132:	4368      	muls	r0, r5
9001c134:	435c      	muls	r4, r3
9001c136:	6034      	str	r4, [r6, #0]
9001c138:	b002      	add	sp, #8
9001c13a:	bd70      	pop	{r4, r5, r6, pc}

9001c13c <_ZN8touchgfx6muldivElll>:
9001c13c:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001c13e:	4606      	mov	r6, r0
9001c140:	ab01      	add	r3, sp, #4
9001c142:	460d      	mov	r5, r1
9001c144:	4614      	mov	r4, r2
9001c146:	f7ff ffda 	bl	9001c0fe <_ZN8touchgfx6muldivElllRl>
9001c14a:	2e00      	cmp	r6, #0
9001c14c:	db20      	blt.n	9001c190 <_ZN8touchgfx6muldivElll+0x54>
9001c14e:	bf14      	ite	ne
9001c150:	2301      	movne	r3, #1
9001c152:	2300      	moveq	r3, #0
9001c154:	2d00      	cmp	r5, #0
9001c156:	db1e      	blt.n	9001c196 <_ZN8touchgfx6muldivElll+0x5a>
9001c158:	bf14      	ite	ne
9001c15a:	2201      	movne	r2, #1
9001c15c:	2200      	moveq	r2, #0
9001c15e:	2c00      	cmp	r4, #0
9001c160:	fb03 f202 	mul.w	r2, r3, r2
9001c164:	db1a      	blt.n	9001c19c <_ZN8touchgfx6muldivElll+0x60>
9001c166:	bf14      	ite	ne
9001c168:	2301      	movne	r3, #1
9001c16a:	2300      	moveq	r3, #0
9001c16c:	4353      	muls	r3, r2
9001c16e:	2b01      	cmp	r3, #1
9001c170:	d117      	bne.n	9001c1a2 <_ZN8touchgfx6muldivElll+0x66>
9001c172:	2c00      	cmp	r4, #0
9001c174:	9b01      	ldr	r3, [sp, #4]
9001c176:	bfb8      	it	lt
9001c178:	4264      	neglt	r4, r4
9001c17a:	2b00      	cmp	r3, #0
9001c17c:	f104 0401 	add.w	r4, r4, #1
9001c180:	bfb8      	it	lt
9001c182:	425b      	neglt	r3, r3
9001c184:	ebb3 0f64 	cmp.w	r3, r4, asr #1
9001c188:	db00      	blt.n	9001c18c <_ZN8touchgfx6muldivElll+0x50>
9001c18a:	3001      	adds	r0, #1
9001c18c:	b002      	add	sp, #8
9001c18e:	bd70      	pop	{r4, r5, r6, pc}
9001c190:	f04f 33ff 	mov.w	r3, #4294967295
9001c194:	e7de      	b.n	9001c154 <_ZN8touchgfx6muldivElll+0x18>
9001c196:	f04f 32ff 	mov.w	r2, #4294967295
9001c19a:	e7e0      	b.n	9001c15e <_ZN8touchgfx6muldivElll+0x22>
9001c19c:	f04f 33ff 	mov.w	r3, #4294967295
9001c1a0:	e7e4      	b.n	9001c16c <_ZN8touchgfx6muldivElll+0x30>
9001c1a2:	3301      	adds	r3, #1
9001c1a4:	d1f2      	bne.n	9001c18c <_ZN8touchgfx6muldivElll+0x50>
9001c1a6:	9b01      	ldr	r3, [sp, #4]
9001c1a8:	2c00      	cmp	r4, #0
9001c1aa:	bfb8      	it	lt
9001c1ac:	4264      	neglt	r4, r4
9001c1ae:	2b00      	cmp	r3, #0
9001c1b0:	bfb8      	it	lt
9001c1b2:	425b      	neglt	r3, r3
9001c1b4:	ebb3 0f64 	cmp.w	r3, r4, asr #1
9001c1b8:	bfc8      	it	gt
9001c1ba:	f100 30ff 	addgt.w	r0, r0, #4294967295
9001c1be:	e7e5      	b.n	9001c18c <_ZN8touchgfx6muldivElll+0x50>

9001c1c0 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
9001c1c0:	2000      	movs	r0, #0
9001c1c2:	4770      	bx	lr

9001c1c4 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
9001c1c4:	2001      	movs	r0, #1
9001c1c6:	4770      	bx	lr

9001c1c8 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
9001c1c8:	2002      	movs	r0, #2
9001c1ca:	4770      	bx	lr

9001c1cc <_ZN8touchgfx6ScreenD1Ev>:
9001c1cc:	4770      	bx	lr

9001c1ce <_ZN8touchgfx6Screen11setupScreenEv>:
9001c1ce:	4770      	bx	lr

9001c1d0 <_ZN8touchgfx12GestureEventD1Ev>:
9001c1d0:	4770      	bx	lr

9001c1d2 <_ZN8touchgfx9DragEventD1Ev>:
9001c1d2:	4770      	bx	lr

9001c1d4 <_ZN8touchgfx10ClickEventD1Ev>:
9001c1d4:	4770      	bx	lr

9001c1d6 <_ZN8touchgfx10ClickEventD0Ev>:
9001c1d6:	b510      	push	{r4, lr}
9001c1d8:	4604      	mov	r4, r0
9001c1da:	210c      	movs	r1, #12
9001c1dc:	f00f f993 	bl	9002b506 <_ZdlPvj>
9001c1e0:	4620      	mov	r0, r4
9001c1e2:	bd10      	pop	{r4, pc}

9001c1e4 <_ZN8touchgfx9DragEventD0Ev>:
9001c1e4:	b510      	push	{r4, lr}
9001c1e6:	4604      	mov	r4, r0
9001c1e8:	2110      	movs	r1, #16
9001c1ea:	f00f f98c 	bl	9002b506 <_ZdlPvj>
9001c1ee:	4620      	mov	r0, r4
9001c1f0:	bd10      	pop	{r4, pc}

9001c1f2 <_ZN8touchgfx12GestureEventD0Ev>:
9001c1f2:	b510      	push	{r4, lr}
9001c1f4:	4604      	mov	r4, r0
9001c1f6:	210c      	movs	r1, #12
9001c1f8:	f00f f985 	bl	9002b506 <_ZdlPvj>
9001c1fc:	4620      	mov	r0, r4
9001c1fe:	bd10      	pop	{r4, pc}

9001c200 <_ZN8touchgfx6ScreenD0Ev>:
9001c200:	b510      	push	{r4, lr}
9001c202:	4604      	mov	r4, r0
9001c204:	213c      	movs	r1, #60	@ 0x3c
9001c206:	f00f f97e 	bl	9002b506 <_ZdlPvj>
9001c20a:	4620      	mov	r0, r4
9001c20c:	bd10      	pop	{r4, pc}
	...

9001c210 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
9001c210:	b530      	push	{r4, r5, lr}
9001c212:	460d      	mov	r5, r1
9001c214:	6b01      	ldr	r1, [r0, #48]	@ 0x30
9001c216:	b087      	sub	sp, #28
9001c218:	4604      	mov	r4, r0
9001c21a:	b301      	cbz	r1, 9001c25e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
9001c21c:	a801      	add	r0, sp, #4
9001c21e:	f7ff fe3f 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c222:	892a      	ldrh	r2, [r5, #8]
9001c224:	f8bd 3004 	ldrh.w	r3, [sp, #4]
9001c228:	7928      	ldrb	r0, [r5, #4]
9001c22a:	1ad2      	subs	r2, r2, r3
9001c22c:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
9001c22e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
9001c232:	441a      	add	r2, r3
9001c234:	896b      	ldrh	r3, [r5, #10]
9001c236:	f8bd 5006 	ldrh.w	r5, [sp, #6]
9001c23a:	f88d 0010 	strb.w	r0, [sp, #16]
9001c23e:	1b5b      	subs	r3, r3, r5
9001c240:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
9001c242:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9001c244:	442b      	add	r3, r5
9001c246:	4d07      	ldr	r5, [pc, #28]	@ (9001c264 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
9001c248:	f8ad 1012 	strh.w	r1, [sp, #18]
9001c24c:	a903      	add	r1, sp, #12
9001c24e:	9503      	str	r5, [sp, #12]
9001c250:	f8ad 2014 	strh.w	r2, [sp, #20]
9001c254:	f8ad 3016 	strh.w	r3, [sp, #22]
9001c258:	6803      	ldr	r3, [r0, #0]
9001c25a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001c25c:	4798      	blx	r3
9001c25e:	b007      	add	sp, #28
9001c260:	bd30      	pop	{r4, r5, pc}
9001c262:	bf00      	nop
9001c264:	9003077c 	.word	0x9003077c

9001c268 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
9001c268:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001c26c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9001c26e:	b08a      	sub	sp, #40	@ 0x28
9001c270:	4604      	mov	r4, r0
9001c272:	460d      	mov	r5, r1
9001c274:	b113      	cbz	r3, 9001c27c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
9001c276:	790b      	ldrb	r3, [r1, #4]
9001c278:	2b00      	cmp	r3, #0
9001c27a:	d044      	beq.n	9001c306 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001c27c:	f104 0804 	add.w	r8, r4, #4
9001c280:	a803      	add	r0, sp, #12
9001c282:	4641      	mov	r1, r8
9001c284:	f7ff fe0c 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c288:	792b      	ldrb	r3, [r5, #4]
9001c28a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001c28e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
9001c292:	b983      	cbnz	r3, 9001c2b6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
9001c294:	f104 0336 	add.w	r3, r4, #54	@ 0x36
9001c298:	892a      	ldrh	r2, [r5, #8]
9001c29a:	88e9      	ldrh	r1, [r5, #6]
9001c29c:	4640      	mov	r0, r8
9001c29e:	1b92      	subs	r2, r2, r6
9001c2a0:	9301      	str	r3, [sp, #4]
9001c2a2:	1bc9      	subs	r1, r1, r7
9001c2a4:	f104 0334 	add.w	r3, r4, #52	@ 0x34
9001c2a8:	b212      	sxth	r2, r2
9001c2aa:	9300      	str	r3, [sp, #0]
9001c2ac:	b209      	sxth	r1, r1
9001c2ae:	f104 0330 	add.w	r3, r4, #48	@ 0x30
9001c2b2:	f7f8 fc35 	bl	90014b20 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
9001c2b6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9001c2b8:	b329      	cbz	r1, 9001c306 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001c2ba:	a805      	add	r0, sp, #20
9001c2bc:	f7ff fdf0 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c2c0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
9001c2c4:	792b      	ldrb	r3, [r5, #4]
9001c2c6:	a907      	add	r1, sp, #28
9001c2c8:	1abf      	subs	r7, r7, r2
9001c2ca:	88ea      	ldrh	r2, [r5, #6]
9001c2cc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9001c2ce:	4417      	add	r7, r2
9001c2d0:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
9001c2d2:	f88d 3020 	strb.w	r3, [sp, #32]
9001c2d6:	4417      	add	r7, r2
9001c2d8:	f8bd 2016 	ldrh.w	r2, [sp, #22]
9001c2dc:	1ab6      	subs	r6, r6, r2
9001c2de:	892a      	ldrh	r2, [r5, #8]
9001c2e0:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
9001c2e4:	4416      	add	r6, r2
9001c2e6:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001c2e8:	4416      	add	r6, r2
9001c2ea:	4a08      	ldr	r2, [pc, #32]	@ (9001c30c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
9001c2ec:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
9001c2f0:	2600      	movs	r6, #0
9001c2f2:	9207      	str	r2, [sp, #28]
9001c2f4:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
9001c2f8:	6803      	ldr	r3, [r0, #0]
9001c2fa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001c2fc:	4798      	blx	r3
9001c2fe:	792b      	ldrb	r3, [r5, #4]
9001c300:	b10b      	cbz	r3, 9001c306 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001c302:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
9001c306:	b00a      	add	sp, #40	@ 0x28
9001c308:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001c30c:	90030754 	.word	0x90030754

9001c310 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
9001c310:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001c314:	460c      	mov	r4, r1
9001c316:	6b01      	ldr	r1, [r0, #48]	@ 0x30
9001c318:	b088      	sub	sp, #32
9001c31a:	4605      	mov	r5, r0
9001c31c:	2900      	cmp	r1, #0
9001c31e:	d06d      	beq.n	9001c3fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
9001c320:	4668      	mov	r0, sp
9001c322:	f7ff fdbd 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c326:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
9001c328:	88e3      	ldrh	r3, [r4, #6]
9001c32a:	f9bd 8000 	ldrsh.w	r8, [sp]
9001c32e:	440b      	add	r3, r1
9001c330:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
9001c334:	b21b      	sxth	r3, r3
9001c336:	4543      	cmp	r3, r8
9001c338:	db31      	blt.n	9001c39e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001c33a:	f8bd c004 	ldrh.w	ip, [sp, #4]
9001c33e:	44c4      	add	ip, r8
9001c340:	fa0f fc8c 	sxth.w	ip, ip
9001c344:	4563      	cmp	r3, ip
9001c346:	da2a      	bge.n	9001c39e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001c348:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
9001c34a:	8926      	ldrh	r6, [r4, #8]
9001c34c:	4416      	add	r6, r2
9001c34e:	b236      	sxth	r6, r6
9001c350:	42be      	cmp	r6, r7
9001c352:	db24      	blt.n	9001c39e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001c354:	f8bd 0006 	ldrh.w	r0, [sp, #6]
9001c358:	4438      	add	r0, r7
9001c35a:	b200      	sxth	r0, r0
9001c35c:	4286      	cmp	r6, r0
9001c35e:	da1e      	bge.n	9001c39e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001c360:	8963      	ldrh	r3, [r4, #10]
9001c362:	4419      	add	r1, r3
9001c364:	b209      	sxth	r1, r1
9001c366:	4541      	cmp	r1, r8
9001c368:	db08      	blt.n	9001c37c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001c36a:	4561      	cmp	r1, ip
9001c36c:	da06      	bge.n	9001c37c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001c36e:	89a3      	ldrh	r3, [r4, #12]
9001c370:	441a      	add	r2, r3
9001c372:	b212      	sxth	r2, r2
9001c374:	42ba      	cmp	r2, r7
9001c376:	db01      	blt.n	9001c37c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001c378:	4282      	cmp	r2, r0
9001c37a:	db10      	blt.n	9001c39e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001c37c:	4b21      	ldr	r3, [pc, #132]	@ (9001c404 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
9001c37e:	a904      	add	r1, sp, #16
9001c380:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9001c382:	9304      	str	r3, [sp, #16]
9001c384:	2302      	movs	r3, #2
9001c386:	f88d 3014 	strb.w	r3, [sp, #20]
9001c38a:	2300      	movs	r3, #0
9001c38c:	f8ad 3016 	strh.w	r3, [sp, #22]
9001c390:	f8ad 3018 	strh.w	r3, [sp, #24]
9001c394:	f8ad 301a 	strh.w	r3, [sp, #26]
9001c398:	6803      	ldr	r3, [r0, #0]
9001c39a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001c39c:	4798      	blx	r3
9001c39e:	1d29      	adds	r1, r5, #4
9001c3a0:	a802      	add	r0, sp, #8
9001c3a2:	f7ff fd7d 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c3a6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001c3aa:	88e0      	ldrh	r0, [r4, #6]
9001c3ac:	eba3 0808 	sub.w	r8, r3, r8
9001c3b0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001c3b4:	7921      	ldrb	r1, [r4, #4]
9001c3b6:	fa1f f888 	uxth.w	r8, r8
9001c3ba:	1bdf      	subs	r7, r3, r7
9001c3bc:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
9001c3c0:	b2bb      	uxth	r3, r7
9001c3c2:	4440      	add	r0, r8
9001c3c4:	8922      	ldrh	r2, [r4, #8]
9001c3c6:	8967      	ldrh	r7, [r4, #10]
9001c3c8:	4460      	add	r0, ip
9001c3ca:	89a4      	ldrh	r4, [r4, #12]
9001c3cc:	441a      	add	r2, r3
9001c3ce:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
9001c3d0:	44b8      	add	r8, r7
9001c3d2:	4423      	add	r3, r4
9001c3d4:	f8ad 0016 	strh.w	r0, [sp, #22]
9001c3d8:	4432      	add	r2, r6
9001c3da:	44e0      	add	r8, ip
9001c3dc:	4433      	add	r3, r6
9001c3de:	4c0a      	ldr	r4, [pc, #40]	@ (9001c408 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
9001c3e0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9001c3e2:	f88d 1014 	strb.w	r1, [sp, #20]
9001c3e6:	a904      	add	r1, sp, #16
9001c3e8:	9404      	str	r4, [sp, #16]
9001c3ea:	f8ad 2018 	strh.w	r2, [sp, #24]
9001c3ee:	f8ad 801a 	strh.w	r8, [sp, #26]
9001c3f2:	f8ad 301c 	strh.w	r3, [sp, #28]
9001c3f6:	6803      	ldr	r3, [r0, #0]
9001c3f8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001c3fa:	4798      	blx	r3
9001c3fc:	b008      	add	sp, #32
9001c3fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001c402:	bf00      	nop
9001c404:	90030754 	.word	0x90030754
9001c408:	90030768 	.word	0x90030768

9001c40c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
9001c40c:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001c40e:	4604      	mov	r4, r0
9001c410:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
9001c414:	3201      	adds	r2, #1
9001c416:	d112      	bne.n	9001c43e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
9001c418:	2500      	movs	r5, #0
9001c41a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001c41e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001c422:	6803      	ldr	r3, [r0, #0]
9001c424:	9500      	str	r5, [sp, #0]
9001c426:	466d      	mov	r5, sp
9001c428:	f8ad 1004 	strh.w	r1, [sp, #4]
9001c42c:	f8ad 2006 	strh.w	r2, [sp, #6]
9001c430:	4629      	mov	r1, r5
9001c432:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001c434:	4798      	blx	r3
9001c436:	e895 0003 	ldmia.w	r5, {r0, r1}
9001c43a:	e884 0003 	stmia.w	r4, {r0, r1}
9001c43e:	4620      	mov	r0, r4
9001c440:	b003      	add	sp, #12
9001c442:	bd30      	pop	{r4, r5, pc}

9001c444 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
9001c444:	b513      	push	{r0, r1, r4, lr}
9001c446:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
9001c44a:	4604      	mov	r4, r0
9001c44c:	3301      	adds	r3, #1
9001c44e:	d109      	bne.n	9001c464 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
9001c450:	4601      	mov	r1, r0
9001c452:	4668      	mov	r0, sp
9001c454:	f7ff fd24 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c458:	f8bd 3000 	ldrh.w	r3, [sp]
9001c45c:	8423      	strh	r3, [r4, #32]
9001c45e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001c462:	8463      	strh	r3, [r4, #34]	@ 0x22
9001c464:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
9001c468:	b002      	add	sp, #8
9001c46a:	bd10      	pop	{r4, pc}

9001c46c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
9001c46c:	b513      	push	{r0, r1, r4, lr}
9001c46e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
9001c472:	4604      	mov	r4, r0
9001c474:	3301      	adds	r3, #1
9001c476:	d109      	bne.n	9001c48c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
9001c478:	4601      	mov	r1, r0
9001c47a:	4668      	mov	r0, sp
9001c47c:	f7ff fd10 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c480:	f8bd 3000 	ldrh.w	r3, [sp]
9001c484:	8423      	strh	r3, [r4, #32]
9001c486:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001c48a:	8463      	strh	r3, [r4, #34]	@ 0x22
9001c48c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
9001c490:	b002      	add	sp, #8
9001c492:	bd10      	pop	{r4, pc}

9001c494 <_ZN8touchgfx6ScreenC1Ev>:
9001c494:	b570      	push	{r4, r5, r6, lr}
9001c496:	4b17      	ldr	r3, [pc, #92]	@ (9001c4f4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
9001c498:	4605      	mov	r5, r0
9001c49a:	4a17      	ldr	r2, [pc, #92]	@ (9001c4f8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
9001c49c:	2101      	movs	r1, #1
9001c49e:	f845 3b04 	str.w	r3, [r5], #4
9001c4a2:	2300      	movs	r3, #0
9001c4a4:	6042      	str	r2, [r0, #4]
9001c4a6:	4604      	mov	r4, r0
9001c4a8:	8103      	strh	r3, [r0, #8]
9001c4aa:	8143      	strh	r3, [r0, #10]
9001c4ac:	8183      	strh	r3, [r0, #12]
9001c4ae:	81c3      	strh	r3, [r0, #14]
9001c4b0:	8203      	strh	r3, [r0, #16]
9001c4b2:	8243      	strh	r3, [r0, #18]
9001c4b4:	8283      	strh	r3, [r0, #20]
9001c4b6:	82c3      	strh	r3, [r0, #22]
9001c4b8:	6203      	str	r3, [r0, #32]
9001c4ba:	8483      	strh	r3, [r0, #36]	@ 0x24
9001c4bc:	84c3      	strh	r3, [r0, #38]	@ 0x26
9001c4be:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
9001c4c2:	6343      	str	r3, [r0, #52]	@ 0x34
9001c4c4:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
9001c4c8:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
9001c4cc:	e9c0 3306 	strd	r3, r3, [r0, #24]
9001c4d0:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
9001c4d4:	4b09      	ldr	r3, [pc, #36]	@ (9001c4fc <_ZN8touchgfx6ScreenC1Ev+0x68>)
9001c4d6:	4628      	mov	r0, r5
9001c4d8:	f9b3 6000 	ldrsh.w	r6, [r3]
9001c4dc:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9001c4de:	4a08      	ldr	r2, [pc, #32]	@ (9001c500 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
9001c4e0:	f9b2 1000 	ldrsh.w	r1, [r2]
9001c4e4:	4798      	blx	r3
9001c4e6:	6863      	ldr	r3, [r4, #4]
9001c4e8:	4628      	mov	r0, r5
9001c4ea:	4631      	mov	r1, r6
9001c4ec:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001c4ee:	4798      	blx	r3
9001c4f0:	4620      	mov	r0, r4
9001c4f2:	bd70      	pop	{r4, r5, r6, pc}
9001c4f4:	90030790 	.word	0x90030790
9001c4f8:	9002feac 	.word	0x9002feac
9001c4fc:	24027e92 	.word	0x24027e92
9001c500:	24027e90 	.word	0x24027e90

9001c504 <_ZN8touchgfx6Screen4drawEv>:
9001c504:	4b09      	ldr	r3, [pc, #36]	@ (9001c52c <_ZN8touchgfx6Screen4drawEv+0x28>)
9001c506:	b507      	push	{r0, r1, r2, lr}
9001c508:	f9b3 2000 	ldrsh.w	r2, [r3]
9001c50c:	2100      	movs	r1, #0
9001c50e:	4b08      	ldr	r3, [pc, #32]	@ (9001c530 <_ZN8touchgfx6Screen4drawEv+0x2c>)
9001c510:	9100      	str	r1, [sp, #0]
9001c512:	4669      	mov	r1, sp
9001c514:	f9b3 3000 	ldrsh.w	r3, [r3]
9001c518:	f8ad 2004 	strh.w	r2, [sp, #4]
9001c51c:	f8ad 3006 	strh.w	r3, [sp, #6]
9001c520:	6803      	ldr	r3, [r0, #0]
9001c522:	689b      	ldr	r3, [r3, #8]
9001c524:	4798      	blx	r3
9001c526:	b003      	add	sp, #12
9001c528:	f85d fb04 	ldr.w	pc, [sp], #4
9001c52c:	24027e90 	.word	0x24027e90
9001c530:	24027e92 	.word	0x24027e92

9001c534 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
9001c534:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c538:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
9001c53c:	b089      	sub	sp, #36	@ 0x24
9001c53e:	4680      	mov	r8, r0
9001c540:	460c      	mov	r4, r1
9001c542:	2b00      	cmp	r3, #0
9001c544:	4615      	mov	r5, r2
9001c546:	dd0e      	ble.n	9001c566 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001c548:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
9001c54c:	2b00      	cmp	r3, #0
9001c54e:	dd0a      	ble.n	9001c566 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001c550:	4628      	mov	r0, r5
9001c552:	f7ff ff5b 	bl	9001c40c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001c556:	4621      	mov	r1, r4
9001c558:	f7fe fa71 	bl	9001aa3e <_ZNK8touchgfx4Rect9intersectERKS0_>
9001c55c:	69eb      	ldr	r3, [r5, #28]
9001c55e:	b928      	cbnz	r0, 9001c56c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
9001c560:	461d      	mov	r5, r3
9001c562:	2b00      	cmp	r3, #0
9001c564:	d1f4      	bne.n	9001c550 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
9001c566:	b009      	add	sp, #36	@ 0x24
9001c568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c56c:	ae04      	add	r6, sp, #16
9001c56e:	2b00      	cmp	r3, #0
9001c570:	f000 80b5 	beq.w	9001c6de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001c574:	682b      	ldr	r3, [r5, #0]
9001c576:	4629      	mov	r1, r5
9001c578:	a802      	add	r0, sp, #8
9001c57a:	68db      	ldr	r3, [r3, #12]
9001c57c:	4798      	blx	r3
9001c57e:	4628      	mov	r0, r5
9001c580:	f7ff ff60 	bl	9001c444 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001c584:	f8bd 7008 	ldrh.w	r7, [sp, #8]
9001c588:	4407      	add	r7, r0
9001c58a:	4628      	mov	r0, r5
9001c58c:	f7ff ff6e 	bl	9001c46c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001c590:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001c594:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
9001c598:	b23f      	sxth	r7, r7
9001c59a:	4418      	add	r0, r3
9001c59c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
9001c5a0:	4621      	mov	r1, r4
9001c5a2:	f8ad 2014 	strh.w	r2, [sp, #20]
9001c5a6:	f8ad 0012 	strh.w	r0, [sp, #18]
9001c5aa:	4630      	mov	r0, r6
9001c5ac:	f8ad 3016 	strh.w	r3, [sp, #22]
9001c5b0:	f8ad 7010 	strh.w	r7, [sp, #16]
9001c5b4:	f7f8 fb96 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
9001c5b8:	4628      	mov	r0, r5
9001c5ba:	f7ff ff27 	bl	9001c40c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001c5be:	ab06      	add	r3, sp, #24
9001c5c0:	4602      	mov	r2, r0
9001c5c2:	e896 0003 	ldmia.w	r6, {r0, r1}
9001c5c6:	e883 0003 	stmia.w	r3, {r0, r1}
9001c5ca:	4611      	mov	r1, r2
9001c5cc:	4618      	mov	r0, r3
9001c5ce:	f7f8 fb89 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
9001c5d2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001c5d6:	f9b4 1000 	ldrsh.w	r1, [r4]
9001c5da:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
9001c5de:	4299      	cmp	r1, r3
9001c5e0:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
9001c5e4:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
9001c5e8:	d10b      	bne.n	9001c602 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001c5ea:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001c5ee:	4552      	cmp	r2, sl
9001c5f0:	d107      	bne.n	9001c602 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001c5f2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
9001c5f6:	455a      	cmp	r2, fp
9001c5f8:	d103      	bne.n	9001c602 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001c5fa:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001c5fe:	454a      	cmp	r2, r9
9001c600:	d06d      	beq.n	9001c6de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001c602:	f1bb 0f00 	cmp.w	fp, #0
9001c606:	dd65      	ble.n	9001c6d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001c608:	f1b9 0f00 	cmp.w	r9, #0
9001c60c:	dd62      	ble.n	9001c6d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001c60e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001c612:	fa1f f08a 	uxth.w	r0, sl
9001c616:	4552      	cmp	r2, sl
9001c618:	9000      	str	r0, [sp, #0]
9001c61a:	da12      	bge.n	9001c642 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
9001c61c:	9301      	str	r3, [sp, #4]
9001c61e:	9b00      	ldr	r3, [sp, #0]
9001c620:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001c624:	f8ad 2012 	strh.w	r2, [sp, #18]
9001c628:	1a9a      	subs	r2, r3, r2
9001c62a:	f8ad 1010 	strh.w	r1, [sp, #16]
9001c62e:	4631      	mov	r1, r6
9001c630:	f8ad 0014 	strh.w	r0, [sp, #20]
9001c634:	4640      	mov	r0, r8
9001c636:	f8ad 2016 	strh.w	r2, [sp, #22]
9001c63a:	69ea      	ldr	r2, [r5, #28]
9001c63c:	f7ff ff7a 	bl	9001c534 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001c640:	9b01      	ldr	r3, [sp, #4]
9001c642:	f9b4 2000 	ldrsh.w	r2, [r4]
9001c646:	b29f      	uxth	r7, r3
9001c648:	429a      	cmp	r2, r3
9001c64a:	da0d      	bge.n	9001c668 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
9001c64c:	f8ad 2010 	strh.w	r2, [sp, #16]
9001c650:	1aba      	subs	r2, r7, r2
9001c652:	f8ad a012 	strh.w	sl, [sp, #18]
9001c656:	4631      	mov	r1, r6
9001c658:	f8ad 2014 	strh.w	r2, [sp, #20]
9001c65c:	4640      	mov	r0, r8
9001c65e:	f8ad 9016 	strh.w	r9, [sp, #22]
9001c662:	69ea      	ldr	r2, [r5, #28]
9001c664:	f7ff ff66 	bl	9001c534 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001c668:	8822      	ldrh	r2, [r4, #0]
9001c66a:	445f      	add	r7, fp
9001c66c:	88a3      	ldrh	r3, [r4, #4]
9001c66e:	b2bf      	uxth	r7, r7
9001c670:	4413      	add	r3, r2
9001c672:	b23a      	sxth	r2, r7
9001c674:	b29b      	uxth	r3, r3
9001c676:	b219      	sxth	r1, r3
9001c678:	4291      	cmp	r1, r2
9001c67a:	dd0d      	ble.n	9001c698 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
9001c67c:	1bdb      	subs	r3, r3, r7
9001c67e:	f8ad 2010 	strh.w	r2, [sp, #16]
9001c682:	f8ad a012 	strh.w	sl, [sp, #18]
9001c686:	4631      	mov	r1, r6
9001c688:	f8ad 3014 	strh.w	r3, [sp, #20]
9001c68c:	4640      	mov	r0, r8
9001c68e:	f8ad 9016 	strh.w	r9, [sp, #22]
9001c692:	69ea      	ldr	r2, [r5, #28]
9001c694:	f7ff ff4e 	bl	9001c534 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001c698:	88e2      	ldrh	r2, [r4, #6]
9001c69a:	8863      	ldrh	r3, [r4, #2]
9001c69c:	4413      	add	r3, r2
9001c69e:	9a00      	ldr	r2, [sp, #0]
9001c6a0:	444a      	add	r2, r9
9001c6a2:	b29b      	uxth	r3, r3
9001c6a4:	fa1f f982 	uxth.w	r9, r2
9001c6a8:	b219      	sxth	r1, r3
9001c6aa:	fa0f f289 	sxth.w	r2, r9
9001c6ae:	428a      	cmp	r2, r1
9001c6b0:	da15      	bge.n	9001c6de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001c6b2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001c6b6:	eba3 0309 	sub.w	r3, r3, r9
9001c6ba:	f9b4 0000 	ldrsh.w	r0, [r4]
9001c6be:	f8ad 1014 	strh.w	r1, [sp, #20]
9001c6c2:	4631      	mov	r1, r6
9001c6c4:	f8ad 0010 	strh.w	r0, [sp, #16]
9001c6c8:	f8ad 2012 	strh.w	r2, [sp, #18]
9001c6cc:	f8ad 3016 	strh.w	r3, [sp, #22]
9001c6d0:	69ea      	ldr	r2, [r5, #28]
9001c6d2:	e001      	b.n	9001c6d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
9001c6d4:	69ea      	ldr	r2, [r5, #28]
9001c6d6:	4621      	mov	r1, r4
9001c6d8:	4640      	mov	r0, r8
9001c6da:	f7ff ff2b 	bl	9001c534 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001c6de:	4628      	mov	r0, r5
9001c6e0:	f7ff fe94 	bl	9001c40c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001c6e4:	6861      	ldr	r1, [r4, #4]
9001c6e6:	4602      	mov	r2, r0
9001c6e8:	4633      	mov	r3, r6
9001c6ea:	6820      	ldr	r0, [r4, #0]
9001c6ec:	c303      	stmia	r3!, {r0, r1}
9001c6ee:	4611      	mov	r1, r2
9001c6f0:	4630      	mov	r0, r6
9001c6f2:	f7f8 faf7 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
9001c6f6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001c6fa:	2b00      	cmp	r3, #0
9001c6fc:	f77f af33 	ble.w	9001c566 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001c700:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
9001c704:	2b00      	cmp	r3, #0
9001c706:	f77f af2e 	ble.w	9001c566 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001c70a:	4628      	mov	r0, r5
9001c70c:	f7ff fe9a 	bl	9001c444 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001c710:	f8bd 3010 	ldrh.w	r3, [sp, #16]
9001c714:	1a18      	subs	r0, r3, r0
9001c716:	f8ad 0010 	strh.w	r0, [sp, #16]
9001c71a:	4628      	mov	r0, r5
9001c71c:	f7ff fea6 	bl	9001c46c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001c720:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001c724:	4631      	mov	r1, r6
9001c726:	1a18      	subs	r0, r3, r0
9001c728:	f8ad 0012 	strh.w	r0, [sp, #18]
9001c72c:	4628      	mov	r0, r5
9001c72e:	682b      	ldr	r3, [r5, #0]
9001c730:	689b      	ldr	r3, [r3, #8]
9001c732:	4798      	blx	r3
9001c734:	e717      	b.n	9001c566 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

9001c736 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
9001c736:	b570      	push	{r4, r5, r6, lr}
9001c738:	1d06      	adds	r6, r0, #4
9001c73a:	b086      	sub	sp, #24
9001c73c:	460c      	mov	r4, r1
9001c73e:	2300      	movs	r3, #0
9001c740:	4631      	mov	r1, r6
9001c742:	4605      	mov	r5, r0
9001c744:	a802      	add	r0, sp, #8
9001c746:	9301      	str	r3, [sp, #4]
9001c748:	f7ff fbaa 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c74c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001c750:	8822      	ldrh	r2, [r4, #0]
9001c752:	f8bd 100a 	ldrh.w	r1, [sp, #10]
9001c756:	1ad2      	subs	r2, r2, r3
9001c758:	8863      	ldrh	r3, [r4, #2]
9001c75a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001c75e:	1a5b      	subs	r3, r3, r1
9001c760:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9001c764:	f8ad 2010 	strh.w	r2, [sp, #16]
9001c768:	aa01      	add	r2, sp, #4
9001c76a:	f8ad 0014 	strh.w	r0, [sp, #20]
9001c76e:	4630      	mov	r0, r6
9001c770:	f8ad 1016 	strh.w	r1, [sp, #22]
9001c774:	a904      	add	r1, sp, #16
9001c776:	f8ad 3012 	strh.w	r3, [sp, #18]
9001c77a:	f7f8 fb8b 	bl	90014e94 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
9001c77e:	9a01      	ldr	r2, [sp, #4]
9001c780:	b11a      	cbz	r2, 9001c78a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
9001c782:	4621      	mov	r1, r4
9001c784:	4628      	mov	r0, r5
9001c786:	f7ff fed5 	bl	9001c534 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001c78a:	b006      	add	sp, #24
9001c78c:	bd70      	pop	{r4, r5, r6, pc}

9001c78e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
9001c78e:	4602      	mov	r2, r0
9001c790:	b530      	push	{r4, r5, lr}
9001c792:	4604      	mov	r4, r0
9001c794:	b085      	sub	sp, #20
9001c796:	f852 0f08 	ldr.w	r0, [r2, #8]!
9001c79a:	460d      	mov	r5, r1
9001c79c:	466b      	mov	r3, sp
9001c79e:	6851      	ldr	r1, [r2, #4]
9001c7a0:	c303      	stmia	r3!, {r0, r1}
9001c7a2:	4629      	mov	r1, r5
9001c7a4:	4668      	mov	r0, sp
9001c7a6:	f7f8 fa9d 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
9001c7aa:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001c7ae:	b12b      	cbz	r3, 9001c7bc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
9001c7b0:	4669      	mov	r1, sp
9001c7b2:	4620      	mov	r0, r4
9001c7b4:	f7ff ffbf 	bl	9001c736 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
9001c7b8:	b005      	add	sp, #20
9001c7ba:	bd30      	pop	{r4, r5, pc}
9001c7bc:	3404      	adds	r4, #4
9001c7be:	a802      	add	r0, sp, #8
9001c7c0:	4621      	mov	r1, r4
9001c7c2:	f7ff fb6d 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001c7c6:	f8bd 3000 	ldrh.w	r3, [sp]
9001c7ca:	f8bd 2008 	ldrh.w	r2, [sp, #8]
9001c7ce:	4669      	mov	r1, sp
9001c7d0:	4620      	mov	r0, r4
9001c7d2:	1a9b      	subs	r3, r3, r2
9001c7d4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001c7d8:	f8ad 3000 	strh.w	r3, [sp]
9001c7dc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001c7e0:	1a9b      	subs	r3, r3, r2
9001c7e2:	f8ad 3002 	strh.w	r3, [sp, #2]
9001c7e6:	f7f8 fb1c 	bl	90014e22 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
9001c7ea:	e7e5      	b.n	9001c7b8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

9001c7ec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
9001c7ec:	460b      	mov	r3, r1
9001c7ee:	680a      	ldr	r2, [r1, #0]
9001c7f0:	1d01      	adds	r1, r0, #4
9001c7f2:	6992      	ldr	r2, [r2, #24]
9001c7f4:	4618      	mov	r0, r3
9001c7f6:	4710      	bx	r2

9001c7f8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
9001c7f8:	4298      	cmp	r0, r3
9001c7fa:	d200      	bcs.n	9001c7fe <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
9001c7fc:	b913      	cbnz	r3, 9001c804 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
9001c7fe:	440a      	add	r2, r1
9001c800:	b210      	sxth	r0, r2
9001c802:	4770      	bx	lr
9001c804:	ee07 0a90 	vmov	s15, r0
9001c808:	eef8 6a67 	vcvt.f32.u32	s13, s15
9001c80c:	ee07 3a90 	vmov	s15, r3
9001c810:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001c814:	ee86 7aa7 	vdiv.f32	s14, s13, s15
9001c818:	ee07 2a90 	vmov	s15, r2
9001c81c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c820:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
9001c824:	ee07 1a90 	vmov	s15, r1
9001c828:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001c82c:	ee37 7a66 	vsub.f32	s14, s14, s13
9001c830:	ee67 5a07 	vmul.f32	s11, s14, s14
9001c834:	eee5 6a87 	vfma.f32	s13, s11, s14
9001c838:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
9001c83c:	eee6 7a26 	vfma.f32	s15, s12, s13
9001c840:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001c844:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c848:	bfcc      	ite	gt
9001c84a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
9001c84e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
9001c852:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001c856:	ee17 3a90 	vmov	r3, s15
9001c85a:	b218      	sxth	r0, r3
9001c85c:	4770      	bx	lr

9001c85e <_ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst>:
9001c85e:	4298      	cmp	r0, r3
9001c860:	d200      	bcs.n	9001c864 <_ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst+0x6>
9001c862:	b913      	cbnz	r3, 9001c86a <_ZN8touchgfx15EasingEquations14cubicEaseInOutEtsst+0xc>
9001c864:	440a      	add	r2, r1
9001c866:	b210      	sxth	r0, r2
9001c868:	4770      	bx	lr
9001c86a:	ee07 0a90 	vmov	s15, r0
9001c86e:	ee07 3a10 	vmov	s14, r3
9001c872:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9001c876:	eef8 7a67 	vcvt.f32.u32	s15, s15
9001c87a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c87e:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
9001c882:	ee77 7aa7 	vadd.f32	s15, s15, s15
9001c886:	eec7 6a87 	vdiv.f32	s13, s15, s14
9001c88a:	ee07 2a90 	vmov	s15, r2
9001c88e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9001c892:	ee07 1a90 	vmov	s15, r1
9001c896:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001c89a:	ee27 7a06 	vmul.f32	s14, s14, s12
9001c89e:	eef4 6ae5 	vcmpe.f32	s13, s11
9001c8a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c8a6:	bf55      	itete	pl
9001c8a8:	eef0 5a00 	vmovpl.f32	s11, #0	@ 0x40000000  2.0
9001c8ac:	ee26 7a87 	vmulmi.f32	s14, s13, s14
9001c8b0:	ee76 6ae5 	vsubpl.f32	s13, s13, s11
9001c8b4:	ee27 7a26 	vmulmi.f32	s14, s14, s13
9001c8b8:	bf57      	itett	pl
9001c8ba:	ee26 5aa6 	vmulpl.f32	s10, s13, s13
9001c8be:	eee7 7a26 	vfmami.f32	s15, s14, s13
9001c8c2:	eee5 5a26 	vfmapl.f32	s11, s10, s13
9001c8c6:	eee5 7a87 	vfmapl.f32	s15, s11, s14
9001c8ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001c8ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c8d2:	bfcc      	ite	gt
9001c8d4:	ee77 7a86 	vaddgt.f32	s15, s15, s12
9001c8d8:	ee77 7ac6 	vsuble.f32	s15, s15, s12
9001c8dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001c8e0:	ee17 3a90 	vmov	r3, s15
9001c8e4:	b218      	sxth	r0, r3
9001c8e6:	4770      	bx	lr

9001c8e8 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
9001c8e8:	4298      	cmp	r0, r3
9001c8ea:	d200      	bcs.n	9001c8ee <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
9001c8ec:	b913      	cbnz	r3, 9001c8f4 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
9001c8ee:	440a      	add	r2, r1
9001c8f0:	b210      	sxth	r0, r2
9001c8f2:	4770      	bx	lr
9001c8f4:	ee07 2a90 	vmov	s15, r2
9001c8f8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9001c8fc:	ee07 0a90 	vmov	s15, r0
9001c900:	eef8 7a67 	vcvt.f32.u32	s15, s15
9001c904:	ee67 7a27 	vmul.f32	s15, s14, s15
9001c908:	ee07 3a10 	vmov	s14, r3
9001c90c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9001c910:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9001c914:	ee07 1a90 	vmov	s15, r1
9001c918:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001c91c:	ee77 7a27 	vadd.f32	s15, s14, s15
9001c920:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
9001c924:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001c928:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c92c:	bfcc      	ite	gt
9001c92e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
9001c932:	ee77 7ac7 	vsuble.f32	s15, s15, s14
9001c936:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001c93a:	ee17 3a90 	vmov	r3, s15
9001c93e:	b218      	sxth	r0, r3
9001c940:	4770      	bx	lr

9001c942 <_ZN8touchgfx12TextProviderC1Ev>:
9001c942:	b538      	push	{r3, r4, r5, lr}
9001c944:	2500      	movs	r5, #0
9001c946:	2302      	movs	r3, #2
9001c948:	4604      	mov	r4, r0
9001c94a:	220e      	movs	r2, #14
9001c94c:	7403      	strb	r3, [r0, #16]
9001c94e:	4629      	mov	r1, r5
9001c950:	6145      	str	r5, [r0, #20]
9001c952:	7605      	strb	r5, [r0, #24]
9001c954:	83c5      	strh	r5, [r0, #30]
9001c956:	8405      	strh	r5, [r0, #32]
9001c958:	86c5      	strh	r5, [r0, #54]	@ 0x36
9001c95a:	8705      	strh	r5, [r0, #56]	@ 0x38
9001c95c:	87c5      	strh	r5, [r0, #62]	@ 0x3e
9001c95e:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
9001c962:	e9c0 5500 	strd	r5, r5, [r0]
9001c966:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
9001c96a:	304c      	adds	r0, #76	@ 0x4c
9001c96c:	f00f fa44 	bl	9002bdf8 <memset>
9001c970:	2301      	movs	r3, #1
9001c972:	4620      	mov	r0, r4
9001c974:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
9001c978:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001c97c:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
9001c980:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
9001c984:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
9001c988:	f7ec f946 	bl	90008c18 <_ZN8touchgfx12TextProvider18initializeInternalEv>
9001c98c:	4620      	mov	r0, r4
9001c98e:	bd38      	pop	{r3, r4, r5, pc}

9001c990 <_ZN8touchgfx12TextProvider11endOfStringEv>:
9001c990:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001c992:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c996:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
9001c998:	fab0 f080 	clz	r0, r0
9001c99c:	0940      	lsrs	r0, r0, #5
9001c99e:	4770      	bx	lr

9001c9a0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
9001c9a0:	b530      	push	{r4, r5, lr}
9001c9a2:	2500      	movs	r5, #0
9001c9a4:	2401      	movs	r4, #1
9001c9a6:	6843      	ldr	r3, [r0, #4]
9001c9a8:	b913      	cbnz	r3, 9001c9b0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
9001c9aa:	6803      	ldr	r3, [r0, #0]
9001c9ac:	b313      	cbz	r3, 9001c9f4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001c9ae:	6043      	str	r3, [r0, #4]
9001c9b0:	7e03      	ldrb	r3, [r0, #24]
9001c9b2:	b143      	cbz	r3, 9001c9c6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
9001c9b4:	6943      	ldr	r3, [r0, #20]
9001c9b6:	b12b      	cbz	r3, 9001c9c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001c9b8:	881a      	ldrh	r2, [r3, #0]
9001c9ba:	b11a      	cbz	r2, 9001c9c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001c9bc:	1c9a      	adds	r2, r3, #2
9001c9be:	6142      	str	r2, [r0, #20]
9001c9c0:	8818      	ldrh	r0, [r3, #0]
9001c9c2:	bd30      	pop	{r4, r5, pc}
9001c9c4:	7605      	strb	r5, [r0, #24]
9001c9c6:	6843      	ldr	r3, [r0, #4]
9001c9c8:	8819      	ldrh	r1, [r3, #0]
9001c9ca:	b199      	cbz	r1, 9001c9f4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001c9cc:	1c9a      	adds	r2, r3, #2
9001c9ce:	2902      	cmp	r1, #2
9001c9d0:	6042      	str	r2, [r0, #4]
9001c9d2:	d1f5      	bne.n	9001c9c0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
9001c9d4:	7c03      	ldrb	r3, [r0, #16]
9001c9d6:	2b01      	cmp	r3, #1
9001c9d8:	d8e5      	bhi.n	9001c9a6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001c9da:	1c5a      	adds	r2, r3, #1
9001c9dc:	3302      	adds	r3, #2
9001c9de:	7402      	strb	r2, [r0, #16]
9001c9e0:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
9001c9e4:	6143      	str	r3, [r0, #20]
9001c9e6:	2b00      	cmp	r3, #0
9001c9e8:	d0dd      	beq.n	9001c9a6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001c9ea:	881b      	ldrh	r3, [r3, #0]
9001c9ec:	2b00      	cmp	r3, #0
9001c9ee:	d0da      	beq.n	9001c9a6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001c9f0:	7604      	strb	r4, [r0, #24]
9001c9f2:	e7d8      	b.n	9001c9a6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001c9f4:	2000      	movs	r0, #0
9001c9f6:	e7e4      	b.n	9001c9c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

9001c9f8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
9001c9f8:	6001      	str	r1, [r0, #0]
9001c9fa:	2100      	movs	r1, #0
9001c9fc:	b430      	push	{r4, r5}
9001c9fe:	6041      	str	r1, [r0, #4]
9001ca00:	6815      	ldr	r5, [r2, #0]
9001ca02:	6085      	str	r5, [r0, #8]
9001ca04:	6852      	ldr	r2, [r2, #4]
9001ca06:	6443      	str	r3, [r0, #68]	@ 0x44
9001ca08:	9b02      	ldr	r3, [sp, #8]
9001ca0a:	60c2      	str	r2, [r0, #12]
9001ca0c:	7401      	strb	r1, [r0, #16]
9001ca0e:	6141      	str	r1, [r0, #20]
9001ca10:	7601      	strb	r1, [r0, #24]
9001ca12:	8701      	strh	r1, [r0, #56]	@ 0x38
9001ca14:	8401      	strh	r1, [r0, #32]
9001ca16:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
9001ca1a:	6483      	str	r3, [r0, #72]	@ 0x48
9001ca1c:	bc30      	pop	{r4, r5}
9001ca1e:	f7ec b8fb 	b.w	90008c18 <_ZN8touchgfx12TextProvider18initializeInternalEv>

9001ca22 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
9001ca22:	b408      	push	{r3}
9001ca24:	b510      	push	{r4, lr}
9001ca26:	b085      	sub	sp, #20
9001ca28:	ac07      	add	r4, sp, #28
9001ca2a:	f854 3b04 	ldr.w	r3, [r4], #4
9001ca2e:	9300      	str	r3, [sp, #0]
9001ca30:	4613      	mov	r3, r2
9001ca32:	4622      	mov	r2, r4
9001ca34:	9403      	str	r4, [sp, #12]
9001ca36:	f7ff ffdf 	bl	9001c9f8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001ca3a:	b005      	add	sp, #20
9001ca3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001ca40:	b001      	add	sp, #4
9001ca42:	4770      	bx	lr

9001ca44 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
9001ca44:	b5f0      	push	{r4, r5, r6, r7, lr}
9001ca46:	4605      	mov	r5, r0
9001ca48:	4608      	mov	r0, r1
9001ca4a:	b1f1      	cbz	r1, 9001ca8a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
9001ca4c:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
9001ca50:	460b      	mov	r3, r1
9001ca52:	f101 0708 	add.w	r7, r1, #8
9001ca56:	4622      	mov	r2, r4
9001ca58:	6818      	ldr	r0, [r3, #0]
9001ca5a:	3308      	adds	r3, #8
9001ca5c:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001ca60:	4626      	mov	r6, r4
9001ca62:	42bb      	cmp	r3, r7
9001ca64:	c603      	stmia	r6!, {r0, r1}
9001ca66:	4634      	mov	r4, r6
9001ca68:	d1f6      	bne.n	9001ca58 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
9001ca6a:	6818      	ldr	r0, [r3, #0]
9001ca6c:	6030      	str	r0, [r6, #0]
9001ca6e:	4610      	mov	r0, r2
9001ca70:	889b      	ldrh	r3, [r3, #4]
9001ca72:	80b3      	strh	r3, [r6, #4]
9001ca74:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
9001ca78:	015b      	lsls	r3, r3, #5
9001ca7a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001ca7e:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
9001ca82:	430b      	orrs	r3, r1
9001ca84:	425b      	negs	r3, r3
9001ca86:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
9001ca8a:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001ca8c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
9001ca8c:	b538      	push	{r3, r4, r5, lr}
9001ca8e:	460c      	mov	r4, r1
9001ca90:	6811      	ldr	r1, [r2, #0]
9001ca92:	4610      	mov	r0, r2
9001ca94:	68cd      	ldr	r5, [r1, #12]
9001ca96:	4619      	mov	r1, r3
9001ca98:	47a8      	blx	r5
9001ca9a:	2800      	cmp	r0, #0
9001ca9c:	bf08      	it	eq
9001ca9e:	4620      	moveq	r0, r4
9001caa0:	bd38      	pop	{r3, r4, r5, pc}
	...

9001caa4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
9001caa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001caa6:	4604      	mov	r4, r0
9001caa8:	4615      	mov	r5, r2
9001caaa:	4608      	mov	r0, r1
9001caac:	b93a      	cbnz	r2, 9001cabe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
9001caae:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
9001cab2:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
9001cab6:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
9001caba:	4628      	mov	r0, r5
9001cabc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001cabe:	f892 c00d 	ldrb.w	ip, [r2, #13]
9001cac2:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
9001cac6:	8893      	ldrh	r3, [r2, #4]
9001cac8:	ea4f 160c 	mov.w	r6, ip, lsl #4
9001cacc:	f406 7280 	and.w	r2, r6, #256	@ 0x100
9001cad0:	79ee      	ldrb	r6, [r5, #7]
9001cad2:	4316      	orrs	r6, r2
9001cad4:	19da      	adds	r2, r3, r7
9001cad6:	b291      	uxth	r1, r2
9001cad8:	b2b7      	uxth	r7, r6
9001cada:	291d      	cmp	r1, #29
9001cadc:	d87b      	bhi.n	9001cbd6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001cade:	2201      	movs	r2, #1
9001cae0:	10f6      	asrs	r6, r6, #3
9001cae2:	408a      	lsls	r2, r1
9001cae4:	4974      	ldr	r1, [pc, #464]	@ (9001ccb8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
9001cae6:	420a      	tst	r2, r1
9001cae8:	d12e      	bne.n	9001cb48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
9001caea:	f412 7f60 	tst.w	r2, #896	@ 0x380
9001caee:	d072      	beq.n	9001cbd6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001caf0:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
9001caf4:	462b      	mov	r3, r5
9001caf6:	f105 0e08 	add.w	lr, r5, #8
9001cafa:	4615      	mov	r5, r2
9001cafc:	6818      	ldr	r0, [r3, #0]
9001cafe:	3308      	adds	r3, #8
9001cb00:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001cb04:	4694      	mov	ip, r2
9001cb06:	4573      	cmp	r3, lr
9001cb08:	e8ac 0003 	stmia.w	ip!, {r0, r1}
9001cb0c:	4662      	mov	r2, ip
9001cb0e:	d1f5      	bne.n	9001cafc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
9001cb10:	6818      	ldr	r0, [r3, #0]
9001cb12:	f8cc 0000 	str.w	r0, [ip]
9001cb16:	889b      	ldrh	r3, [r3, #4]
9001cb18:	f8ac 3004 	strh.w	r3, [ip, #4]
9001cb1c:	b2b3      	uxth	r3, r6
9001cb1e:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
9001cb22:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
9001cb26:	1aca      	subs	r2, r1, r3
9001cb28:	1bcf      	subs	r7, r1, r7
9001cb2a:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
9001cb2e:	b292      	uxth	r2, r2
9001cb30:	1afb      	subs	r3, r7, r3
9001cb32:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
9001cb36:	10d2      	asrs	r2, r2, #3
9001cb38:	f002 0260 	and.w	r2, r2, #96	@ 0x60
9001cb3c:	4302      	orrs	r2, r0
9001cb3e:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
9001cb42:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
9001cb46:	e7b8      	b.n	9001caba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
9001cb48:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
9001cb4a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001cb4e:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
9001cb50:	f640 6333 	movw	r3, #3635	@ 0xe33
9001cb54:	4299      	cmp	r1, r3
9001cb56:	d110      	bne.n	9001cb7a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
9001cb58:	6803      	ldr	r3, [r0, #0]
9001cb5a:	68db      	ldr	r3, [r3, #12]
9001cb5c:	4798      	blx	r3
9001cb5e:	7b41      	ldrb	r1, [r0, #13]
9001cb60:	00cb      	lsls	r3, r1, #3
9001cb62:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001cb66:	7a03      	ldrb	r3, [r0, #8]
9001cb68:	0648      	lsls	r0, r1, #25
9001cb6a:	ea43 0302 	orr.w	r3, r3, r2
9001cb6e:	bf44      	itt	mi
9001cb70:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001cb74:	b21b      	sxthmi	r3, r3
9001cb76:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001cb7a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
9001cb7e:	462a      	mov	r2, r5
9001cb80:	f105 0c08 	add.w	ip, r5, #8
9001cb84:	443b      	add	r3, r7
9001cb86:	4433      	add	r3, r6
9001cb88:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
9001cb8c:	b29b      	uxth	r3, r3
9001cb8e:	4635      	mov	r5, r6
9001cb90:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001cb94:	6810      	ldr	r0, [r2, #0]
9001cb96:	3208      	adds	r2, #8
9001cb98:	f852 1c04 	ldr.w	r1, [r2, #-4]
9001cb9c:	4637      	mov	r7, r6
9001cb9e:	4562      	cmp	r2, ip
9001cba0:	c703      	stmia	r7!, {r0, r1}
9001cba2:	463e      	mov	r6, r7
9001cba4:	d1f6      	bne.n	9001cb94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
9001cba6:	6810      	ldr	r0, [r2, #0]
9001cba8:	6038      	str	r0, [r7, #0]
9001cbaa:	8892      	ldrh	r2, [r2, #4]
9001cbac:	80ba      	strh	r2, [r7, #4]
9001cbae:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
9001cbb2:	10db      	asrs	r3, r3, #3
9001cbb4:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001cbb8:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001cbbc:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001cbc0:	4313      	orrs	r3, r2
9001cbc2:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
9001cbc6:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001cbca:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
9001cbce:	1a9b      	subs	r3, r3, r2
9001cbd0:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
9001cbd4:	e771      	b.n	9001caba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
9001cbd6:	f023 0204 	bic.w	r2, r3, #4
9001cbda:	f640 611b 	movw	r1, #3611	@ 0xe1b
9001cbde:	428a      	cmp	r2, r1
9001cbe0:	d003      	beq.n	9001cbea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
9001cbe2:	f640 621d 	movw	r2, #3613	@ 0xe1d
9001cbe6:	4293      	cmp	r3, r2
9001cbe8:	d120      	bne.n	9001cc2c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
9001cbea:	3b01      	subs	r3, #1
9001cbec:	4602      	mov	r2, r0
9001cbee:	4629      	mov	r1, r5
9001cbf0:	4620      	mov	r0, r4
9001cbf2:	b29b      	uxth	r3, r3
9001cbf4:	f7ff ff4a 	bl	9001ca8c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001cbf8:	7b41      	ldrb	r1, [r0, #13]
9001cbfa:	00cb      	lsls	r3, r1, #3
9001cbfc:	0649      	lsls	r1, r1, #25
9001cbfe:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001cc02:	7a03      	ldrb	r3, [r0, #8]
9001cc04:	ea43 0302 	orr.w	r3, r3, r2
9001cc08:	bf44      	itt	mi
9001cc0a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001cc0e:	b21b      	sxthmi	r3, r3
9001cc10:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001cc14:	7b6b      	ldrb	r3, [r5, #13]
9001cc16:	7aaa      	ldrb	r2, [r5, #10]
9001cc18:	005b      	lsls	r3, r3, #1
9001cc1a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001cc1e:	4313      	orrs	r3, r2
9001cc20:	115a      	asrs	r2, r3, #5
9001cc22:	eb02 0393 	add.w	r3, r2, r3, lsr #2
9001cc26:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
9001cc2a:	e035      	b.n	9001cc98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
9001cc2c:	ea4f 02cc 	mov.w	r2, ip, lsl #3
9001cc30:	f01c 0f40 	tst.w	ip, #64	@ 0x40
9001cc34:	f402 7180 	and.w	r1, r2, #256	@ 0x100
9001cc38:	7a2a      	ldrb	r2, [r5, #8]
9001cc3a:	ea42 0201 	orr.w	r2, r2, r1
9001cc3e:	f640 6109 	movw	r1, #3593	@ 0xe09
9001cc42:	bf1c      	itt	ne
9001cc44:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
9001cc48:	b212      	sxthne	r2, r2
9001cc4a:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
9001cc4e:	f023 0210 	bic.w	r2, r3, #16
9001cc52:	428a      	cmp	r2, r1
9001cc54:	d003      	beq.n	9001cc5e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
9001cc56:	f640 6213 	movw	r2, #3603	@ 0xe13
9001cc5a:	4293      	cmp	r3, r2
9001cc5c:	d129      	bne.n	9001ccb2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
9001cc5e:	7b6e      	ldrb	r6, [r5, #13]
9001cc60:	4629      	mov	r1, r5
9001cc62:	0076      	lsls	r6, r6, #1
9001cc64:	f406 7280 	and.w	r2, r6, #256	@ 0x100
9001cc68:	7aae      	ldrb	r6, [r5, #10]
9001cc6a:	4316      	orrs	r6, r2
9001cc6c:	f640 6213 	movw	r2, #3603	@ 0xe13
9001cc70:	4293      	cmp	r3, r2
9001cc72:	4602      	mov	r2, r0
9001cc74:	4620      	mov	r0, r4
9001cc76:	bf16      	itet	ne
9001cc78:	f103 33ff 	addne.w	r3, r3, #4294967295
9001cc7c:	f640 630c 	movweq	r3, #3596	@ 0xe0c
9001cc80:	b29b      	uxthne	r3, r3
9001cc82:	f7ff ff03 	bl	9001ca8c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001cc86:	7b43      	ldrb	r3, [r0, #13]
9001cc88:	7a82      	ldrb	r2, [r0, #10]
9001cc8a:	005b      	lsls	r3, r3, #1
9001cc8c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001cc90:	4313      	orrs	r3, r2
9001cc92:	1af6      	subs	r6, r6, r3
9001cc94:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
9001cc98:	7b69      	ldrb	r1, [r5, #13]
9001cc9a:	00cb      	lsls	r3, r1, #3
9001cc9c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001cca0:	7a2b      	ldrb	r3, [r5, #8]
9001cca2:	4313      	orrs	r3, r2
9001cca4:	064a      	lsls	r2, r1, #25
9001cca6:	bf44      	itt	mi
9001cca8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001ccac:	b21b      	sxthmi	r3, r3
9001ccae:	1bdb      	subs	r3, r3, r7
9001ccb0:	e747      	b.n	9001cb42 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
9001ccb2:	2300      	movs	r3, #0
9001ccb4:	e7b7      	b.n	9001cc26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
9001ccb6:	bf00      	nop
9001ccb8:	3fc00079 	.word	0x3fc00079

9001ccbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
9001ccbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001ccc0:	4604      	mov	r4, r0
9001ccc2:	b942      	cbnz	r2, 9001ccd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
9001ccc4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001ccc8:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
9001cccc:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
9001ccd0:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
9001ccd4:	e047      	b.n	9001cd66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001ccd6:	7b51      	ldrb	r1, [r2, #13]
9001ccd8:	8893      	ldrh	r3, [r2, #4]
9001ccda:	010d      	lsls	r5, r1, #4
9001ccdc:	f405 7080 	and.w	r0, r5, #256	@ 0x100
9001cce0:	79d5      	ldrb	r5, [r2, #7]
9001cce2:	4305      	orrs	r5, r0
9001cce4:	2d04      	cmp	r5, #4
9001cce6:	bfcc      	ite	gt
9001cce8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
9001ccec:	f04f 0e01 	movle.w	lr, #1
9001ccf0:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
9001ccf4:	f200 80ab 	bhi.w	9001ce4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
9001ccf8:	f240 60e7 	movw	r0, #1767	@ 0x6e7
9001ccfc:	4283      	cmp	r3, r0
9001ccfe:	d216      	bcs.n	9001cd2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cd00:	f240 605b 	movw	r0, #1627	@ 0x65b
9001cd04:	4283      	cmp	r3, r0
9001cd06:	d859      	bhi.n	9001cdbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
9001cd08:	f240 6057 	movw	r0, #1623	@ 0x657
9001cd0c:	4283      	cmp	r3, r0
9001cd0e:	d20e      	bcs.n	9001cd2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cd10:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
9001cd14:	d24a      	bcs.n	9001cdac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
9001cd16:	f240 604e 	movw	r0, #1614	@ 0x64e
9001cd1a:	4283      	cmp	r3, r0
9001cd1c:	d207      	bcs.n	9001cd2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cd1e:	f240 601a 	movw	r0, #1562	@ 0x61a
9001cd22:	4283      	cmp	r3, r0
9001cd24:	d02a      	beq.n	9001cd7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001cd26:	d821      	bhi.n	9001cd6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
9001cd28:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
9001cd2c:	d35b      	bcc.n	9001cde6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001cd2e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
9001cd32:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001cd36:	f040 80d0 	bne.w	9001ceda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001cd3a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
9001cd3e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001cd42:	f040 80ca 	bne.w	9001ceda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001cd46:	00cb      	lsls	r3, r1, #3
9001cd48:	0649      	lsls	r1, r1, #25
9001cd4a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001cd4e:	7a13      	ldrb	r3, [r2, #8]
9001cd50:	ea43 0300 	orr.w	r3, r3, r0
9001cd54:	bf44      	itt	mi
9001cd56:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001cd5a:	b21b      	sxthmi	r3, r3
9001cd5c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001cd60:	1b5d      	subs	r5, r3, r5
9001cd62:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001cd66:	4610      	mov	r0, r2
9001cd68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001cd6c:	f240 604b 	movw	r0, #1611	@ 0x64b
9001cd70:	4283      	cmp	r3, r0
9001cd72:	d338      	bcc.n	9001cde6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001cd74:	f240 604c 	movw	r0, #1612	@ 0x64c
9001cd78:	4283      	cmp	r3, r0
9001cd7a:	d9d8      	bls.n	9001cd2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cd7c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
9001cd80:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
9001cd84:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001cd88:	f040 80f3 	bne.w	9001cf72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001cd8c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001cd90:	f040 80ef 	bne.w	9001cf72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001cd94:	00cb      	lsls	r3, r1, #3
9001cd96:	064e      	lsls	r6, r1, #25
9001cd98:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001cd9c:	7a13      	ldrb	r3, [r2, #8]
9001cd9e:	ea43 0300 	orr.w	r3, r3, r0
9001cda2:	bf44      	itt	mi
9001cda4:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001cda8:	b21b      	sxthmi	r3, r3
9001cdaa:	e7d9      	b.n	9001cd60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
9001cdac:	f240 6054 	movw	r0, #1620	@ 0x654
9001cdb0:	4283      	cmp	r3, r0
9001cdb2:	d8e3      	bhi.n	9001cd7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001cdb4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
9001cdb8:	d9e0      	bls.n	9001cd7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001cdba:	e7b8      	b.n	9001cd2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cdbc:	f240 6074 	movw	r0, #1652	@ 0x674
9001cdc0:	4283      	cmp	r3, r0
9001cdc2:	d0b4      	beq.n	9001cd2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cdc4:	d82d      	bhi.n	9001ce22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
9001cdc6:	f240 605e 	movw	r0, #1630	@ 0x65e
9001cdca:	4283      	cmp	r3, r0
9001cdcc:	d804      	bhi.n	9001cdd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
9001cdce:	f240 605d 	movw	r0, #1629	@ 0x65d
9001cdd2:	4283      	cmp	r3, r0
9001cdd4:	d3d2      	bcc.n	9001cd7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001cdd6:	e7aa      	b.n	9001cd2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cdd8:	f240 605f 	movw	r0, #1631	@ 0x65f
9001cddc:	4283      	cmp	r3, r0
9001cdde:	d0cd      	beq.n	9001cd7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001cde0:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
9001cde4:	d0a3      	beq.n	9001cd2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001cde6:	00cb      	lsls	r3, r1, #3
9001cde8:	0649      	lsls	r1, r1, #25
9001cdea:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001cdee:	7a13      	ldrb	r3, [r2, #8]
9001cdf0:	ea43 0300 	orr.w	r3, r3, r0
9001cdf4:	bf44      	itt	mi
9001cdf6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001cdfa:	b21b      	sxthmi	r3, r3
9001cdfc:	1b5d      	subs	r5, r3, r5
9001cdfe:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001ce02:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001ce06:	7b53      	ldrb	r3, [r2, #13]
9001ce08:	015b      	lsls	r3, r3, #5
9001ce0a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001ce0e:	7993      	ldrb	r3, [r2, #6]
9001ce10:	430b      	orrs	r3, r1
9001ce12:	2105      	movs	r1, #5
9001ce14:	005b      	lsls	r3, r3, #1
9001ce16:	fb93 f3f1 	sdiv	r3, r3, r1
9001ce1a:	f992 1009 	ldrsb.w	r1, [r2, #9]
9001ce1e:	440b      	add	r3, r1
9001ce20:	e756      	b.n	9001ccd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
9001ce22:	f240 60e2 	movw	r0, #1762	@ 0x6e2
9001ce26:	4283      	cmp	r3, r0
9001ce28:	d809      	bhi.n	9001ce3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
9001ce2a:	f240 60df 	movw	r0, #1759	@ 0x6df
9001ce2e:	4283      	cmp	r3, r0
9001ce30:	f4bf af7d 	bcs.w	9001cd2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ce34:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
9001ce38:	2b05      	cmp	r3, #5
9001ce3a:	d8d4      	bhi.n	9001cde6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001ce3c:	e777      	b.n	9001cd2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ce3e:	f240 60e3 	movw	r0, #1763	@ 0x6e3
9001ce42:	4283      	cmp	r3, r0
9001ce44:	d09a      	beq.n	9001cd7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001ce46:	f240 60e4 	movw	r0, #1764	@ 0x6e4
9001ce4a:	4283      	cmp	r3, r0
9001ce4c:	e7ca      	b.n	9001cde4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
9001ce4e:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
9001ce52:	d22b      	bcs.n	9001ceac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
9001ce54:	f640 00ed 	movw	r0, #2285	@ 0x8ed
9001ce58:	4283      	cmp	r3, r0
9001ce5a:	d28f      	bcs.n	9001cd7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001ce5c:	f640 00e5 	movw	r0, #2277	@ 0x8e5
9001ce60:	4283      	cmp	r3, r0
9001ce62:	d816      	bhi.n	9001ce92 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
9001ce64:	f640 00e4 	movw	r0, #2276	@ 0x8e4
9001ce68:	4283      	cmp	r3, r0
9001ce6a:	f4bf af60 	bcs.w	9001cd2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ce6e:	f240 60ec 	movw	r0, #1772	@ 0x6ec
9001ce72:	4283      	cmp	r3, r0
9001ce74:	d80a      	bhi.n	9001ce8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
9001ce76:	f240 60eb 	movw	r0, #1771	@ 0x6eb
9001ce7a:	4283      	cmp	r3, r0
9001ce7c:	f4bf af57 	bcs.w	9001cd2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ce80:	f240 60ea 	movw	r0, #1770	@ 0x6ea
9001ce84:	4283      	cmp	r3, r0
9001ce86:	f43f af79 	beq.w	9001cd7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001ce8a:	e7ac      	b.n	9001cde6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001ce8c:	f240 60ed 	movw	r0, #1773	@ 0x6ed
9001ce90:	e7f8      	b.n	9001ce84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
9001ce92:	f640 00e8 	movw	r0, #2280	@ 0x8e8
9001ce96:	4283      	cmp	r3, r0
9001ce98:	d802      	bhi.n	9001cea0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
9001ce9a:	f640 00e7 	movw	r0, #2279	@ 0x8e7
9001ce9e:	e798      	b.n	9001cdd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
9001cea0:	f640 00e9 	movw	r0, #2281	@ 0x8e9
9001cea4:	4283      	cmp	r3, r0
9001cea6:	f47f af42 	bne.w	9001cd2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ceaa:	e767      	b.n	9001cd7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001ceac:	f640 00f6 	movw	r0, #2294	@ 0x8f6
9001ceb0:	4283      	cmp	r3, r0
9001ceb2:	f43f af63 	beq.w	9001cd7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001ceb6:	d802      	bhi.n	9001cebe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
9001ceb8:	f640 00f2 	movw	r0, #2290	@ 0x8f2
9001cebc:	e7f2      	b.n	9001cea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
9001cebe:	f640 00fa 	movw	r0, #2298	@ 0x8fa
9001cec2:	4283      	cmp	r3, r0
9001cec4:	d805      	bhi.n	9001ced2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
9001cec6:	f640 00f9 	movw	r0, #2297	@ 0x8f9
9001ceca:	4283      	cmp	r3, r0
9001cecc:	f4ff af2f 	bcc.w	9001cd2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001ced0:	e754      	b.n	9001cd7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001ced2:	f640 00fe 	movw	r0, #2302	@ 0x8fe
9001ced6:	4283      	cmp	r3, r0
9001ced8:	e7af      	b.n	9001ce3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
9001ceda:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
9001cede:	4617      	mov	r7, r2
9001cee0:	f102 0808 	add.w	r8, r2, #8
9001cee4:	4666      	mov	r6, ip
9001cee6:	6838      	ldr	r0, [r7, #0]
9001cee8:	3708      	adds	r7, #8
9001ceea:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001ceee:	46e6      	mov	lr, ip
9001cef0:	4547      	cmp	r7, r8
9001cef2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001cef6:	46f4      	mov	ip, lr
9001cef8:	d1f5      	bne.n	9001cee6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
9001cefa:	6838      	ldr	r0, [r7, #0]
9001cefc:	f8ce 0000 	str.w	r0, [lr]
9001cf00:	88b9      	ldrh	r1, [r7, #4]
9001cf02:	f8ae 1004 	strh.w	r1, [lr, #4]
9001cf06:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
9001cf0a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001cf0e:	d009      	beq.n	9001cf24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
9001cf10:	7b51      	ldrb	r1, [r2, #13]
9001cf12:	7992      	ldrb	r2, [r2, #6]
9001cf14:	0149      	lsls	r1, r1, #5
9001cf16:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001cf1a:	4311      	orrs	r1, r2
9001cf1c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001cf20:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
9001cf24:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001cf28:	b2ad      	uxth	r5, r5
9001cf2a:	d00d      	beq.n	9001cf48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
9001cf2c:	442b      	add	r3, r5
9001cf2e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001cf32:	b29b      	uxth	r3, r3
9001cf34:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001cf38:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
9001cf3c:	10db      	asrs	r3, r3, #3
9001cf3e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001cf42:	4313      	orrs	r3, r2
9001cf44:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001cf48:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
9001cf4c:	00cb      	lsls	r3, r1, #3
9001cf4e:	064f      	lsls	r7, r1, #25
9001cf50:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001cf54:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
9001cf58:	ea43 0302 	orr.w	r3, r3, r2
9001cf5c:	bf44      	itt	mi
9001cf5e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001cf62:	b21b      	sxthmi	r3, r3
9001cf64:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001cf68:	1b5b      	subs	r3, r3, r5
9001cf6a:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
9001cf6e:	4632      	mov	r2, r6
9001cf70:	e6f9      	b.n	9001cd66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001cf72:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
9001cf76:	4617      	mov	r7, r2
9001cf78:	f102 0908 	add.w	r9, r2, #8
9001cf7c:	4666      	mov	r6, ip
9001cf7e:	6838      	ldr	r0, [r7, #0]
9001cf80:	3708      	adds	r7, #8
9001cf82:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001cf86:	46e0      	mov	r8, ip
9001cf88:	454f      	cmp	r7, r9
9001cf8a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
9001cf8e:	46c4      	mov	ip, r8
9001cf90:	d1f5      	bne.n	9001cf7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
9001cf92:	6838      	ldr	r0, [r7, #0]
9001cf94:	f8c8 0000 	str.w	r0, [r8]
9001cf98:	88b9      	ldrh	r1, [r7, #4]
9001cf9a:	f8a8 1004 	strh.w	r1, [r8, #4]
9001cf9e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
9001cfa2:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001cfa6:	d009      	beq.n	9001cfbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
9001cfa8:	7b51      	ldrb	r1, [r2, #13]
9001cfaa:	7992      	ldrb	r2, [r2, #6]
9001cfac:	0149      	lsls	r1, r1, #5
9001cfae:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001cfb2:	4311      	orrs	r1, r2
9001cfb4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001cfb8:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
9001cfbc:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001cfc0:	d00e      	beq.n	9001cfe0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
9001cfc2:	eba3 030e 	sub.w	r3, r3, lr
9001cfc6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001cfca:	b29b      	uxth	r3, r3
9001cfcc:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001cfd0:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
9001cfd4:	10db      	asrs	r3, r3, #3
9001cfd6:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001cfda:	4313      	orrs	r3, r2
9001cfdc:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001cfe0:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
9001cfe4:	00cb      	lsls	r3, r1, #3
9001cfe6:	0648      	lsls	r0, r1, #25
9001cfe8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001cfec:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
9001cff0:	ea43 0302 	orr.w	r3, r3, r2
9001cff4:	bf44      	itt	mi
9001cff6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001cffa:	b21b      	sxthmi	r3, r3
9001cffc:	1b5d      	subs	r5, r3, r5
9001cffe:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001d002:	e7b4      	b.n	9001cf6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

9001d004 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
9001d004:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001d008:	461e      	mov	r6, r3
9001d00a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001d00c:	4604      	mov	r4, r0
9001d00e:	4617      	mov	r7, r2
9001d010:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d014:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001d018:	f7eb fdae 	bl	90008b78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001d01c:	4605      	mov	r5, r0
9001d01e:	b918      	cbnz	r0, 9001d028 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
9001d020:	6030      	str	r0, [r6, #0]
9001d022:	4628      	mov	r0, r5
9001d024:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001d028:	683b      	ldr	r3, [r7, #0]
9001d02a:	4601      	mov	r1, r0
9001d02c:	4638      	mov	r0, r7
9001d02e:	68db      	ldr	r3, [r3, #12]
9001d030:	4798      	blx	r3
9001d032:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
9001d036:	4602      	mov	r2, r0
9001d038:	6030      	str	r0, [r6, #0]
9001d03a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
9001d03e:	d213      	bcs.n	9001d068 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
9001d040:	4643      	mov	r3, r8
9001d042:	4639      	mov	r1, r7
9001d044:	4620      	mov	r0, r4
9001d046:	f7ff fe39 	bl	9001ccbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001d04a:	6030      	str	r0, [r6, #0]
9001d04c:	6833      	ldr	r3, [r6, #0]
9001d04e:	b143      	cbz	r3, 9001d062 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
9001d050:	7b5a      	ldrb	r2, [r3, #13]
9001d052:	7a9b      	ldrb	r3, [r3, #10]
9001d054:	0052      	lsls	r2, r2, #1
9001d056:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9001d05a:	4313      	orrs	r3, r2
9001d05c:	bf0c      	ite	eq
9001d05e:	2301      	moveq	r3, #1
9001d060:	2300      	movne	r3, #0
9001d062:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
9001d066:	e7dc      	b.n	9001d022 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
9001d068:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
9001d06c:	b29b      	uxth	r3, r3
9001d06e:	2b7f      	cmp	r3, #127	@ 0x7f
9001d070:	d804      	bhi.n	9001d07c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
9001d072:	4639      	mov	r1, r7
9001d074:	4620      	mov	r0, r4
9001d076:	f7ff fd15 	bl	9001caa4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001d07a:	e7e6      	b.n	9001d04a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
9001d07c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
9001d080:	2b00      	cmp	r3, #0
9001d082:	d0e3      	beq.n	9001d04c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001d084:	f640 1302 	movw	r3, #2306	@ 0x902
9001d088:	429d      	cmp	r5, r3
9001d08a:	d1df      	bne.n	9001d04c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001d08c:	4601      	mov	r1, r0
9001d08e:	4620      	mov	r0, r4
9001d090:	f7ff fcd8 	bl	9001ca44 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001d094:	e7d9      	b.n	9001d04a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

9001d096 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
9001d096:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9001d09a:	461e      	mov	r6, r3
9001d09c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001d09e:	4604      	mov	r4, r0
9001d0a0:	4617      	mov	r7, r2
9001d0a2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d0a6:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001d0aa:	f7eb fd65 	bl	90008b78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001d0ae:	4605      	mov	r5, r0
9001d0b0:	b918      	cbnz	r0, 9001d0ba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
9001d0b2:	6030      	str	r0, [r6, #0]
9001d0b4:	4628      	mov	r0, r5
9001d0b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9001d0ba:	683b      	ldr	r3, [r7, #0]
9001d0bc:	4601      	mov	r1, r0
9001d0be:	4638      	mov	r0, r7
9001d0c0:	f8d3 9008 	ldr.w	r9, [r3, #8]
9001d0c4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
9001d0c8:	47c8      	blx	r9
9001d0ca:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
9001d0ce:	4602      	mov	r2, r0
9001d0d0:	6030      	str	r0, [r6, #0]
9001d0d2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
9001d0d6:	d213      	bcs.n	9001d100 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
9001d0d8:	4643      	mov	r3, r8
9001d0da:	4639      	mov	r1, r7
9001d0dc:	4620      	mov	r0, r4
9001d0de:	f7ff fded 	bl	9001ccbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001d0e2:	6030      	str	r0, [r6, #0]
9001d0e4:	6833      	ldr	r3, [r6, #0]
9001d0e6:	b143      	cbz	r3, 9001d0fa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
9001d0e8:	7b5a      	ldrb	r2, [r3, #13]
9001d0ea:	7a9b      	ldrb	r3, [r3, #10]
9001d0ec:	0052      	lsls	r2, r2, #1
9001d0ee:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9001d0f2:	4313      	orrs	r3, r2
9001d0f4:	bf0c      	ite	eq
9001d0f6:	2301      	moveq	r3, #1
9001d0f8:	2300      	movne	r3, #0
9001d0fa:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
9001d0fe:	e7d9      	b.n	9001d0b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
9001d100:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
9001d104:	b29b      	uxth	r3, r3
9001d106:	2b7f      	cmp	r3, #127	@ 0x7f
9001d108:	d804      	bhi.n	9001d114 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
9001d10a:	4639      	mov	r1, r7
9001d10c:	4620      	mov	r0, r4
9001d10e:	f7ff fcc9 	bl	9001caa4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001d112:	e7e6      	b.n	9001d0e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
9001d114:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
9001d118:	2b00      	cmp	r3, #0
9001d11a:	d0e3      	beq.n	9001d0e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001d11c:	f640 1302 	movw	r3, #2306	@ 0x902
9001d120:	429d      	cmp	r5, r3
9001d122:	d1df      	bne.n	9001d0e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001d124:	4601      	mov	r1, r0
9001d126:	4620      	mov	r0, r4
9001d128:	f7ff fc8c 	bl	9001ca44 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001d12c:	e7d9      	b.n	9001d0e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

9001d12e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
9001d12e:	b510      	push	{r4, lr}
9001d130:	4604      	mov	r4, r0
9001d132:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
9001d136:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001d138:	b1e1      	cbz	r1, 9001d174 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001d13a:	2b0a      	cmp	r3, #10
9001d13c:	d02d      	beq.n	9001d19a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001d13e:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
9001d140:	3901      	subs	r1, #1
9001d142:	eb04 0042 	add.w	r0, r4, r2, lsl #1
9001d146:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
9001d148:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
9001d14c:	1c51      	adds	r1, r2, #1
9001d14e:	b289      	uxth	r1, r1
9001d150:	2901      	cmp	r1, #1
9001d152:	bf8a      	itet	hi
9001d154:	f102 32ff 	addhi.w	r2, r2, #4294967295
9001d158:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
9001d15a:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
9001d15c:	1c5a      	adds	r2, r3, #1
9001d15e:	8722      	strh	r2, [r4, #56]	@ 0x38
9001d160:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001d162:	4413      	add	r3, r2
9001d164:	b29b      	uxth	r3, r3
9001d166:	2b09      	cmp	r3, #9
9001d168:	bf88      	it	hi
9001d16a:	3b0a      	subhi	r3, #10
9001d16c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001d170:	8458      	strh	r0, [r3, #34]	@ 0x22
9001d172:	e7de      	b.n	9001d132 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
9001d174:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001d176:	2b0a      	cmp	r3, #10
9001d178:	d00f      	beq.n	9001d19a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001d17a:	4620      	mov	r0, r4
9001d17c:	f7ff fc10 	bl	9001c9a0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
9001d180:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001d182:	1c5a      	adds	r2, r3, #1
9001d184:	8722      	strh	r2, [r4, #56]	@ 0x38
9001d186:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001d188:	4413      	add	r3, r2
9001d18a:	b29b      	uxth	r3, r3
9001d18c:	2b09      	cmp	r3, #9
9001d18e:	bf88      	it	hi
9001d190:	3b0a      	subhi	r3, #10
9001d192:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001d196:	8458      	strh	r0, [r3, #34]	@ 0x22
9001d198:	e7ec      	b.n	9001d174 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001d19a:	bd10      	pop	{r4, pc}

9001d19c <_ZN8touchgfx12TextProvider11getNextCharEv>:
9001d19c:	b538      	push	{r3, r4, r5, lr}
9001d19e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001d1a0:	4604      	mov	r4, r0
9001d1a2:	eb00 0243 	add.w	r2, r0, r3, lsl #1
9001d1a6:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
9001d1a8:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
9001d1aa:	3a01      	subs	r2, #1
9001d1ac:	8702      	strh	r2, [r0, #56]	@ 0x38
9001d1ae:	1c5a      	adds	r2, r3, #1
9001d1b0:	b292      	uxth	r2, r2
9001d1b2:	2a09      	cmp	r2, #9
9001d1b4:	bf8a      	itet	hi
9001d1b6:	3b09      	subhi	r3, #9
9001d1b8:	86c2      	strhls	r2, [r0, #54]	@ 0x36
9001d1ba:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
9001d1bc:	f7ff ffb7 	bl	9001d12e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
9001d1c0:	8c23      	ldrh	r3, [r4, #32]
9001d1c2:	2b01      	cmp	r3, #1
9001d1c4:	bf9c      	itt	ls
9001d1c6:	3301      	addls	r3, #1
9001d1c8:	8423      	strhls	r3, [r4, #32]
9001d1ca:	8be3      	ldrh	r3, [r4, #30]
9001d1cc:	b90b      	cbnz	r3, 9001d1d2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001d1ce:	2302      	movs	r3, #2
9001d1d0:	83e3      	strh	r3, [r4, #30]
9001d1d2:	8be3      	ldrh	r3, [r4, #30]
9001d1d4:	4628      	mov	r0, r5
9001d1d6:	3b01      	subs	r3, #1
9001d1d8:	b29b      	uxth	r3, r3
9001d1da:	83e3      	strh	r3, [r4, #30]
9001d1dc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d1e0:	8365      	strh	r5, [r4, #26]
9001d1e2:	bd38      	pop	{r3, r4, r5, pc}

9001d1e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
9001d1e4:	428a      	cmp	r2, r1
9001d1e6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001d1ea:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
9001d1ec:	d932      	bls.n	9001d254 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001d1ee:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
9001d1f0:	1a54      	subs	r4, r2, r1
9001d1f2:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
9001d1f6:	19ee      	adds	r6, r5, r7
9001d1f8:	fa1f fe84 	uxth.w	lr, r4
9001d1fc:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
9001d200:	3e01      	subs	r6, #1
9001d202:	b2b4      	uxth	r4, r6
9001d204:	eba4 090e 	sub.w	r9, r4, lr
9001d208:	fa1f f989 	uxth.w	r9, r9
9001d20c:	2c09      	cmp	r4, #9
9001d20e:	4626      	mov	r6, r4
9001d210:	bf88      	it	hi
9001d212:	f1a4 060a 	subhi.w	r6, r4, #10
9001d216:	f1bc 0f00 	cmp.w	ip, #0
9001d21a:	f104 34ff 	add.w	r4, r4, #4294967295
9001d21e:	bf08      	it	eq
9001d220:	f04f 0c02 	moveq.w	ip, #2
9001d224:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001d228:	b2a4      	uxth	r4, r4
9001d22a:	f10c 3cff 	add.w	ip, ip, #4294967295
9001d22e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
9001d232:	454c      	cmp	r4, r9
9001d234:	fa1f fc8c 	uxth.w	ip, ip
9001d238:	eb00 064c 	add.w	r6, r0, ip, lsl #1
9001d23c:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
9001d240:	d1e4      	bne.n	9001d20c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001d242:	eba5 050e 	sub.w	r5, r5, lr
9001d246:	eb0e 0408 	add.w	r4, lr, r8
9001d24a:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
9001d24e:	8705      	strh	r5, [r0, #56]	@ 0x38
9001d250:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
9001d254:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
9001d256:	250a      	movs	r5, #10
9001d258:	1a64      	subs	r4, r4, r1
9001d25a:	4439      	add	r1, r7
9001d25c:	b289      	uxth	r1, r1
9001d25e:	8704      	strh	r4, [r0, #56]	@ 0x38
9001d260:	2909      	cmp	r1, #9
9001d262:	bf88      	it	hi
9001d264:	390a      	subhi	r1, #10
9001d266:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001d268:	b18a      	cbz	r2, 9001d28e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
9001d26a:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
9001d26c:	3a01      	subs	r2, #1
9001d26e:	3101      	adds	r1, #1
9001d270:	b292      	uxth	r2, r2
9001d272:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
9001d276:	8701      	strh	r1, [r0, #56]	@ 0x38
9001d278:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
9001d27a:	b901      	cbnz	r1, 9001d27e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
9001d27c:	86c5      	strh	r5, [r0, #54]	@ 0x36
9001d27e:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
9001d280:	3901      	subs	r1, #1
9001d282:	b289      	uxth	r1, r1
9001d284:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001d286:	eb00 0141 	add.w	r1, r0, r1, lsl #1
9001d28a:	844c      	strh	r4, [r1, #34]	@ 0x22
9001d28c:	e7ec      	b.n	9001d268 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001d28e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001d292:	f7ff bf4c 	b.w	9001d12e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9001d296 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
9001d296:	b570      	push	{r4, r5, r6, lr}
9001d298:	2500      	movs	r5, #0
9001d29a:	4295      	cmp	r5, r2
9001d29c:	d011      	beq.n	9001d2c2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001d29e:	8bc4      	ldrh	r4, [r0, #30]
9001d2a0:	f831 6b02 	ldrh.w	r6, [r1], #2
9001d2a4:	4414      	add	r4, r2
9001d2a6:	3c01      	subs	r4, #1
9001d2a8:	1b64      	subs	r4, r4, r5
9001d2aa:	b2a4      	uxth	r4, r4
9001d2ac:	2c01      	cmp	r4, #1
9001d2ae:	bf88      	it	hi
9001d2b0:	3c02      	subhi	r4, #2
9001d2b2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001d2b6:	8b64      	ldrh	r4, [r4, #26]
9001d2b8:	42b4      	cmp	r4, r6
9001d2ba:	d117      	bne.n	9001d2ec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
9001d2bc:	3501      	adds	r5, #1
9001d2be:	b2ad      	uxth	r5, r5
9001d2c0:	e7eb      	b.n	9001d29a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
9001d2c2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d2c6:	2400      	movs	r4, #0
9001d2c8:	4413      	add	r3, r2
9001d2ca:	b2a2      	uxth	r2, r4
9001d2cc:	429a      	cmp	r2, r3
9001d2ce:	da0f      	bge.n	9001d2f0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
9001d2d0:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
9001d2d2:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
9001d2d6:	3401      	adds	r4, #1
9001d2d8:	4432      	add	r2, r6
9001d2da:	b292      	uxth	r2, r2
9001d2dc:	2a09      	cmp	r2, #9
9001d2de:	bf88      	it	hi
9001d2e0:	3a0a      	subhi	r2, #10
9001d2e2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001d2e6:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
9001d2e8:	42aa      	cmp	r2, r5
9001d2ea:	d0ee      	beq.n	9001d2ca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
9001d2ec:	2000      	movs	r0, #0
9001d2ee:	bd70      	pop	{r4, r5, r6, pc}
9001d2f0:	2001      	movs	r0, #1
9001d2f2:	e7fc      	b.n	9001d2ee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

9001d2f4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
9001d2f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d2f8:	4605      	mov	r5, r0
9001d2fa:	4616      	mov	r6, r2
9001d2fc:	1c8c      	adds	r4, r1, #2
9001d2fe:	8809      	ldrh	r1, [r1, #0]
9001d300:	ea4f 3a11 	mov.w	sl, r1, lsr #12
9001d304:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
9001d308:	42b3      	cmp	r3, r6
9001d30a:	d124      	bne.n	9001d356 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
9001d30c:	f3c1 2903 	ubfx	r9, r1, #8, #4
9001d310:	f3c1 1803 	ubfx	r8, r1, #4, #4
9001d314:	f001 070f 	and.w	r7, r1, #15
9001d318:	4652      	mov	r2, sl
9001d31a:	f8cd 8000 	str.w	r8, [sp]
9001d31e:	464b      	mov	r3, r9
9001d320:	4621      	mov	r1, r4
9001d322:	4628      	mov	r0, r5
9001d324:	f7ff ffb7 	bl	9001d296 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
9001d328:	4683      	mov	fp, r0
9001d32a:	b168      	cbz	r0, 9001d348 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
9001d32c:	eb0a 0109 	add.w	r1, sl, r9
9001d330:	463a      	mov	r2, r7
9001d332:	4628      	mov	r0, r5
9001d334:	4441      	add	r1, r8
9001d336:	eb04 0341 	add.w	r3, r4, r1, lsl #1
9001d33a:	4649      	mov	r1, r9
9001d33c:	f7ff ff52 	bl	9001d1e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
9001d340:	4658      	mov	r0, fp
9001d342:	b003      	add	sp, #12
9001d344:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d348:	eb07 010a 	add.w	r1, r7, sl
9001d34c:	4449      	add	r1, r9
9001d34e:	4441      	add	r1, r8
9001d350:	eb04 0141 	add.w	r1, r4, r1, lsl #1
9001d354:	e7d2      	b.n	9001d2fc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
9001d356:	f04f 0b00 	mov.w	fp, #0
9001d35a:	e7f1      	b.n	9001d340 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

9001d35c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
9001d35c:	b570      	push	{r4, r5, r6, lr}
9001d35e:	8810      	ldrh	r0, [r2, #0]
9001d360:	4298      	cmp	r0, r3
9001d362:	d817      	bhi.n	9001d394 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001d364:	1e48      	subs	r0, r1, #1
9001d366:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
9001d36a:	4298      	cmp	r0, r3
9001d36c:	d312      	bcc.n	9001d394 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001d36e:	2400      	movs	r4, #0
9001d370:	428c      	cmp	r4, r1
9001d372:	d20f      	bcs.n	9001d394 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001d374:	1860      	adds	r0, r4, r1
9001d376:	1040      	asrs	r0, r0, #1
9001d378:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
9001d37c:	0085      	lsls	r5, r0, #2
9001d37e:	42b3      	cmp	r3, r6
9001d380:	d902      	bls.n	9001d388 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
9001d382:	3001      	adds	r0, #1
9001d384:	b284      	uxth	r4, r0
9001d386:	e7f3      	b.n	9001d370 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001d388:	d201      	bcs.n	9001d38e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
9001d38a:	b281      	uxth	r1, r0
9001d38c:	e7f0      	b.n	9001d370 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001d38e:	442a      	add	r2, r5
9001d390:	8850      	ldrh	r0, [r2, #2]
9001d392:	bd70      	pop	{r4, r5, r6, pc}
9001d394:	2000      	movs	r0, #0
9001d396:	e7fc      	b.n	9001d392 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

9001d398 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
9001d398:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001d39c:	6c45      	ldr	r5, [r0, #68]	@ 0x44
9001d39e:	4604      	mov	r4, r0
9001d3a0:	260b      	movs	r6, #11
9001d3a2:	886f      	ldrh	r7, [r5, #2]
9001d3a4:	087f      	lsrs	r7, r7, #1
9001d3a6:	3e01      	subs	r6, #1
9001d3a8:	d013      	beq.n	9001d3d2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001d3aa:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
9001d3ac:	462a      	mov	r2, r5
9001d3ae:	4639      	mov	r1, r7
9001d3b0:	4620      	mov	r0, r4
9001d3b2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001d3b6:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001d3ba:	4643      	mov	r3, r8
9001d3bc:	f7ff ffce 	bl	9001d35c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
9001d3c0:	b138      	cbz	r0, 9001d3d2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001d3c2:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001d3c6:	4642      	mov	r2, r8
9001d3c8:	4620      	mov	r0, r4
9001d3ca:	f7ff ff93 	bl	9001d2f4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001d3ce:	2800      	cmp	r0, #0
9001d3d0:	d1e9      	bne.n	9001d3a6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001d3d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001d3d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
9001d3d8:	b570      	push	{r4, r5, r6, lr}
9001d3da:	694a      	ldr	r2, [r1, #20]
9001d3dc:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
9001d3de:	684b      	ldr	r3, [r1, #4]
9001d3e0:	1b54      	subs	r4, r2, r5
9001d3e2:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
9001d3e4:	f000 8106 	beq.w	9001d5f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
9001d3e8:	1b9b      	subs	r3, r3, r6
9001d3ea:	d003      	beq.n	9001d3f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001d3ec:	4363      	muls	r3, r4
9001d3ee:	2210      	movs	r2, #16
9001d3f0:	fb93 f3f2 	sdiv	r3, r3, r2
9001d3f4:	680c      	ldr	r4, [r1, #0]
9001d3f6:	698a      	ldr	r2, [r1, #24]
9001d3f8:	1b65      	subs	r5, r4, r5
9001d3fa:	f000 80fd 	beq.w	9001d5f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
9001d3fe:	1b92      	subs	r2, r2, r6
9001d400:	d003      	beq.n	9001d40a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001d402:	436a      	muls	r2, r5
9001d404:	2410      	movs	r4, #16
9001d406:	fb92 f2f4 	sdiv	r2, r2, r4
9001d40a:	1a9b      	subs	r3, r3, r2
9001d40c:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 9001d634 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
9001d410:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001d414:	460a      	mov	r2, r1
9001d416:	ee07 3a90 	vmov	s15, r3
9001d41a:	f100 040c 	add.w	r4, r0, #12
9001d41e:	4603      	mov	r3, r0
9001d420:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001d424:	ee67 7a84 	vmul.f32	s15, s15, s8
9001d428:	ee87 3a27 	vdiv.f32	s6, s14, s15
9001d42c:	eeb1 6a43 	vneg.f32	s12, s6
9001d430:	edd2 7a02 	vldr	s15, [r2, #8]
9001d434:	3214      	adds	r2, #20
9001d436:	eec7 6a27 	vdiv.f32	s13, s14, s15
9001d43a:	ece3 6a01 	vstmia	r3!, {s13}
9001d43e:	429c      	cmp	r4, r3
9001d440:	ed52 7a02 	vldr	s15, [r2, #-8]
9001d444:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001d448:	edc3 7a02 	vstr	s15, [r3, #8]
9001d44c:	ed52 7a01 	vldr	s15, [r2, #-4]
9001d450:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001d454:	edc3 7a05 	vstr	s15, [r3, #20]
9001d458:	d1ea      	bne.n	9001d430 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
9001d45a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001d45c:	698b      	ldr	r3, [r1, #24]
9001d45e:	edd0 4a02 	vldr	s9, [r0, #8]
9001d462:	1a9b      	subs	r3, r3, r2
9001d464:	edd0 3a00 	vldr	s7, [r0]
9001d468:	edd0 6a01 	vldr	s13, [r0, #4]
9001d46c:	ee07 3a90 	vmov	s15, r3
9001d470:	684b      	ldr	r3, [r1, #4]
9001d472:	ee76 6ae4 	vsub.f32	s13, s13, s9
9001d476:	ed90 5a05 	vldr	s10, [r0, #20]
9001d47a:	1a9b      	subs	r3, r3, r2
9001d47c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001d480:	ee73 4ae4 	vsub.f32	s9, s7, s9
9001d484:	ed90 2a03 	vldr	s4, [r0, #12]
9001d488:	ee07 3a10 	vmov	s14, r3
9001d48c:	edd0 5a04 	vldr	s11, [r0, #16]
9001d490:	ee67 7a84 	vmul.f32	s15, s15, s8
9001d494:	ed90 1a07 	vldr	s2, [r0, #28]
9001d498:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001d49c:	edd0 2a06 	vldr	s5, [r0, #24]
9001d4a0:	ee75 5ac5 	vsub.f32	s11, s11, s10
9001d4a4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
9001d4a8:	ee27 7a04 	vmul.f32	s14, s14, s8
9001d4ac:	ee32 5a45 	vsub.f32	s10, s4, s10
9001d4b0:	eee6 7a87 	vfma.f32	s15, s13, s14
9001d4b4:	ee67 7a83 	vmul.f32	s15, s15, s6
9001d4b8:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
9001d4bc:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001d4be:	694a      	ldr	r2, [r1, #20]
9001d4c0:	1b13      	subs	r3, r2, r4
9001d4c2:	ee07 3a10 	vmov	s14, r3
9001d4c6:	680b      	ldr	r3, [r1, #0]
9001d4c8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001d4cc:	1b1b      	subs	r3, r3, r4
9001d4ce:	ee27 7a04 	vmul.f32	s14, s14, s8
9001d4d2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
9001d4d6:	ee07 3a10 	vmov	s14, r3
9001d4da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001d4de:	ee27 7a04 	vmul.f32	s14, s14, s8
9001d4e2:	eee6 4a87 	vfma.f32	s9, s13, s14
9001d4e6:	ee64 4a86 	vmul.f32	s9, s9, s12
9001d4ea:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
9001d4ee:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001d4f0:	698b      	ldr	r3, [r1, #24]
9001d4f2:	1a9b      	subs	r3, r3, r2
9001d4f4:	ee06 3a90 	vmov	s13, r3
9001d4f8:	684b      	ldr	r3, [r1, #4]
9001d4fa:	1a9b      	subs	r3, r3, r2
9001d4fc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001d500:	ee07 3a10 	vmov	s14, r3
9001d504:	ee66 6a84 	vmul.f32	s13, s13, s8
9001d508:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001d50c:	ee65 6a66 	vnmul.f32	s13, s10, s13
9001d510:	ee27 7a04 	vmul.f32	s14, s14, s8
9001d514:	eee5 6a87 	vfma.f32	s13, s11, s14
9001d518:	ee66 6a83 	vmul.f32	s13, s13, s6
9001d51c:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
9001d520:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001d522:	694a      	ldr	r2, [r1, #20]
9001d524:	1b13      	subs	r3, r2, r4
9001d526:	ee07 3a10 	vmov	s14, r3
9001d52a:	680b      	ldr	r3, [r1, #0]
9001d52c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001d530:	1b1b      	subs	r3, r3, r4
9001d532:	ee27 7a04 	vmul.f32	s14, s14, s8
9001d536:	ee25 5a47 	vnmul.f32	s10, s10, s14
9001d53a:	ee07 3a10 	vmov	s14, r3
9001d53e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001d542:	ee27 7a04 	vmul.f32	s14, s14, s8
9001d546:	eea5 5a87 	vfma.f32	s10, s11, s14
9001d54a:	edd0 5a08 	vldr	s11, [r0, #32]
9001d54e:	ee31 1a65 	vsub.f32	s2, s2, s11
9001d552:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001d556:	ee25 5a06 	vmul.f32	s10, s10, s12
9001d55a:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
9001d55e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001d560:	698b      	ldr	r3, [r1, #24]
9001d562:	1a9b      	subs	r3, r3, r2
9001d564:	ee07 3a10 	vmov	s14, r3
9001d568:	684b      	ldr	r3, [r1, #4]
9001d56a:	1a9b      	subs	r3, r3, r2
9001d56c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001d570:	ee01 3a90 	vmov	s3, r3
9001d574:	ee27 7a04 	vmul.f32	s14, s14, s8
9001d578:	eef8 1ae1 	vcvt.f32.s32	s3, s3
9001d57c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001d580:	ee61 1a84 	vmul.f32	s3, s3, s8
9001d584:	eea1 7a21 	vfma.f32	s14, s2, s3
9001d588:	ee27 7a03 	vmul.f32	s14, s14, s6
9001d58c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001d590:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001d592:	694a      	ldr	r2, [r1, #20]
9001d594:	1b13      	subs	r3, r2, r4
9001d596:	ee03 3a10 	vmov	s6, r3
9001d59a:	680b      	ldr	r3, [r1, #0]
9001d59c:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001d5a0:	1b1b      	subs	r3, r3, r4
9001d5a2:	ee23 3a04 	vmul.f32	s6, s6, s8
9001d5a6:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001d5aa:	ee03 3a10 	vmov	s6, r3
9001d5ae:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001d5b2:	ee23 4a04 	vmul.f32	s8, s6, s8
9001d5b6:	eee1 5a04 	vfma.f32	s11, s2, s8
9001d5ba:	ee25 6a86 	vmul.f32	s12, s11, s12
9001d5be:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001d5c2:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
9001d5c6:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001d5ca:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001d5ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001d5d2:	dd13      	ble.n	9001d5fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
9001d5d4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001d5d8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001d5dc:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001d5de:	eee3 7a87 	vfma.f32	s15, s7, s14
9001d5e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001d5e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001d5ea:	dd15      	ble.n	9001d618 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001d5ec:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001d5f0:	6403      	str	r3, [r0, #64]	@ 0x40
9001d5f2:	bd70      	pop	{r4, r5, r6, pc}
9001d5f4:	4623      	mov	r3, r4
9001d5f6:	e6fd      	b.n	9001d3f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001d5f8:	462a      	mov	r2, r5
9001d5fa:	e706      	b.n	9001d40a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001d5fc:	d502      	bpl.n	9001d604 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001d5fe:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001d602:	e7e9      	b.n	9001d5d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001d604:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001d608:	eea3 2a85 	vfma.f32	s4, s7, s10
9001d60c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001d610:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001d614:	dade      	bge.n	9001d5d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001d616:	e7f2      	b.n	9001d5fe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001d618:	d502      	bpl.n	9001d620 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001d61a:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001d61e:	e7e7      	b.n	9001d5f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001d620:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001d624:	eee3 4a86 	vfma.f32	s9, s7, s12
9001d628:	eef5 4ac0 	vcmpe.f32	s9, #0.0
9001d62c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001d630:	dadc      	bge.n	9001d5ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001d632:	e7f2      	b.n	9001d61a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001d634:	3d800000 	.word	0x3d800000

9001d638 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001d638:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001d63c:	2714      	movs	r7, #20
9001d63e:	435f      	muls	r7, r3
9001d640:	eb02 0c07 	add.w	ip, r2, r7
9001d644:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001d648:	f115 0e0f 	adds.w	lr, r5, #15
9001d64c:	f100 80a2 	bmi.w	9001d794 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001d650:	ea4f 1e2e 	mov.w	lr, lr, asr #4
9001d654:	9c08      	ldr	r4, [sp, #32]
9001d656:	2614      	movs	r6, #20
9001d658:	f8c0 e014 	str.w	lr, [r0, #20]
9001d65c:	4366      	muls	r6, r4
9001d65e:	eb02 0806 	add.w	r8, r2, r6
9001d662:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001d666:	f115 040f 	adds.w	r4, r5, #15
9001d66a:	f100 809f 	bmi.w	9001d7ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001d66e:	1124      	asrs	r4, r4, #4
9001d670:	eba4 040e 	sub.w	r4, r4, lr
9001d674:	6184      	str	r4, [r0, #24]
9001d676:	2c00      	cmp	r4, #0
9001d678:	f000 808a 	beq.w	9001d790 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
9001d67c:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001d680:	f8d8 4004 	ldr.w	r4, [r8, #4]
9001d684:	5995      	ldr	r5, [r2, r6]
9001d686:	eba4 0809 	sub.w	r8, r4, r9
9001d68a:	59d4      	ldr	r4, [r2, r7]
9001d68c:	eba5 0a04 	sub.w	sl, r5, r4
9001d690:	ea4f 1608 	mov.w	r6, r8, lsl #4
9001d694:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001d698:	fb0e fe05 	mul.w	lr, lr, r5
9001d69c:	fb0a ee19 	mls	lr, sl, r9, lr
9001d6a0:	fb08 e404 	mla	r4, r8, r4, lr
9001d6a4:	3c01      	subs	r4, #1
9001d6a6:	19a4      	adds	r4, r4, r6
9001d6a8:	f100 808c 	bmi.w	9001d7c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001d6ac:	fb94 fef6 	sdiv	lr, r4, r6
9001d6b0:	fb06 441e 	mls	r4, r6, lr, r4
9001d6b4:	f8c0 e000 	str.w	lr, [r0]
9001d6b8:	6104      	str	r4, [r0, #16]
9001d6ba:	2d00      	cmp	r5, #0
9001d6bc:	f2c0 8095 	blt.w	9001d7ea <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001d6c0:	fb95 f4f6 	sdiv	r4, r5, r6
9001d6c4:	fb06 5514 	mls	r5, r6, r4, r5
9001d6c8:	6044      	str	r4, [r0, #4]
9001d6ca:	6085      	str	r5, [r0, #8]
9001d6cc:	60c6      	str	r6, [r0, #12]
9001d6ce:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001d6d2:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001d6d6:	6945      	ldr	r5, [r0, #20]
9001d6d8:	59d2      	ldr	r2, [r2, r7]
9001d6da:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001d6de:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 9001d80c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001d6e2:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001d6e6:	ee07 4a10 	vmov	s14, r4
9001d6ea:	6804      	ldr	r4, [r0, #0]
9001d6ec:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001d6f0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001d6f4:	ee07 2a90 	vmov	s15, r2
9001d6f8:	ee27 7a26 	vmul.f32	s14, s14, s13
9001d6fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001d700:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001d704:	edd3 6a00 	vldr	s13, [r3]
9001d708:	eee6 6a07 	vfma.f32	s13, s12, s14
9001d70c:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
9001d710:	eee6 6a27 	vfma.f32	s13, s12, s15
9001d714:	edc0 6a07 	vstr	s13, [r0, #28]
9001d718:	edd0 6a01 	vldr	s13, [r0, #4]
9001d71c:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
9001d720:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001d724:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001d728:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001d72c:	ed80 6a08 	vstr	s12, [r0, #32]
9001d730:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
9001d732:	6242      	str	r2, [r0, #36]	@ 0x24
9001d734:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
9001d738:	ed93 6a03 	vldr	s12, [r3, #12]
9001d73c:	eea5 6a87 	vfma.f32	s12, s11, s14
9001d740:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001d744:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001d748:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
9001d74c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001d750:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
9001d754:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001d758:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
9001d75c:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001d75e:	6302      	str	r2, [r0, #48]	@ 0x30
9001d760:	ed93 6a06 	vldr	s12, [r3, #24]
9001d764:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
9001d768:	eea5 6a87 	vfma.f32	s12, s11, s14
9001d76c:	eeb0 7a46 	vmov.f32	s14, s12
9001d770:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
9001d774:	eea6 7a27 	vfma.f32	s14, s12, s15
9001d778:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001d77c:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
9001d780:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
9001d784:	eee6 7a87 	vfma.f32	s15, s13, s14
9001d788:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
9001d78c:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
9001d78e:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001d790:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001d794:	2410      	movs	r4, #16
9001d796:	f1c5 0501 	rsb	r5, r5, #1
9001d79a:	fb9e fef4 	sdiv	lr, lr, r4
9001d79e:	f015 050f 	ands.w	r5, r5, #15
9001d7a2:	bf18      	it	ne
9001d7a4:	2501      	movne	r5, #1
9001d7a6:	ebae 0e05 	sub.w	lr, lr, r5
9001d7aa:	e753      	b.n	9001d654 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001d7ac:	f04f 0910 	mov.w	r9, #16
9001d7b0:	f1c5 0501 	rsb	r5, r5, #1
9001d7b4:	fb94 f4f9 	sdiv	r4, r4, r9
9001d7b8:	f015 050f 	ands.w	r5, r5, #15
9001d7bc:	bf18      	it	ne
9001d7be:	2501      	movne	r5, #1
9001d7c0:	1b64      	subs	r4, r4, r5
9001d7c2:	e755      	b.n	9001d670 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
9001d7c4:	4264      	negs	r4, r4
9001d7c6:	fb94 fef6 	sdiv	lr, r4, r6
9001d7ca:	f1ce 0800 	rsb	r8, lr, #0
9001d7ce:	fb06 441e 	mls	r4, r6, lr, r4
9001d7d2:	f8c0 8000 	str.w	r8, [r0]
9001d7d6:	6104      	str	r4, [r0, #16]
9001d7d8:	2c00      	cmp	r4, #0
9001d7da:	f43f af6e 	beq.w	9001d6ba <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001d7de:	ea6f 0e0e 	mvn.w	lr, lr
9001d7e2:	1b34      	subs	r4, r6, r4
9001d7e4:	f8c0 e000 	str.w	lr, [r0]
9001d7e8:	e766      	b.n	9001d6b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001d7ea:	426d      	negs	r5, r5
9001d7ec:	fb95 f4f6 	sdiv	r4, r5, r6
9001d7f0:	f1c4 0e00 	rsb	lr, r4, #0
9001d7f4:	fb06 5514 	mls	r5, r6, r4, r5
9001d7f8:	f8c0 e004 	str.w	lr, [r0, #4]
9001d7fc:	6085      	str	r5, [r0, #8]
9001d7fe:	2d00      	cmp	r5, #0
9001d800:	f43f af64 	beq.w	9001d6cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001d804:	43e4      	mvns	r4, r4
9001d806:	1b75      	subs	r5, r6, r5
9001d808:	6044      	str	r4, [r0, #4]
9001d80a:	e75e      	b.n	9001d6ca <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
9001d80c:	3d800000 	.word	0x3d800000

9001d810 <_ZN8touchgfx7Unicode6strlenEPKt>:
9001d810:	4602      	mov	r2, r0
9001d812:	b148      	cbz	r0, 9001d828 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
9001d814:	2300      	movs	r3, #0
9001d816:	b298      	uxth	r0, r3
9001d818:	3301      	adds	r3, #1
9001d81a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9001d81e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
9001d822:	2900      	cmp	r1, #0
9001d824:	d1f7      	bne.n	9001d816 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
9001d826:	4770      	bx	lr
9001d828:	4770      	bx	lr

9001d82a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
9001d82a:	b530      	push	{r4, r5, lr}
9001d82c:	4604      	mov	r4, r0
9001d82e:	b159      	cbz	r1, 9001d848 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
9001d830:	b148      	cbz	r0, 9001d846 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001d832:	2300      	movs	r3, #0
9001d834:	b298      	uxth	r0, r3
9001d836:	4282      	cmp	r2, r0
9001d838:	d905      	bls.n	9001d846 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001d83a:	5ccd      	ldrb	r5, [r1, r3]
9001d83c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
9001d840:	3301      	adds	r3, #1
9001d842:	2d00      	cmp	r5, #0
9001d844:	d1f6      	bne.n	9001d834 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
9001d846:	bd30      	pop	{r4, r5, pc}
9001d848:	4608      	mov	r0, r1
9001d84a:	e7fc      	b.n	9001d846 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

9001d84c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
9001d84c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001d84e:	468c      	mov	ip, r1
9001d850:	b08b      	sub	sp, #44	@ 0x2c
9001d852:	2100      	movs	r1, #0
9001d854:	ae01      	add	r6, sp, #4
9001d856:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
9001d85a:	211f      	movs	r1, #31
9001d85c:	fbb0 f7f3 	udiv	r7, r0, r3
9001d860:	fb03 0517 	mls	r5, r3, r7, r0
9001d864:	4638      	mov	r0, r7
9001d866:	b2ec      	uxtb	r4, r5
9001d868:	2d09      	cmp	r5, #9
9001d86a:	bfd4      	ite	le
9001d86c:	3430      	addle	r4, #48	@ 0x30
9001d86e:	3457      	addgt	r4, #87	@ 0x57
9001d870:	b2e4      	uxtb	r4, r4
9001d872:	558c      	strb	r4, [r1, r6]
9001d874:	1e4c      	subs	r4, r1, #1
9001d876:	b92f      	cbnz	r7, 9001d884 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
9001d878:	4431      	add	r1, r6
9001d87a:	4660      	mov	r0, ip
9001d87c:	f7ff ffd5 	bl	9001d82a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001d880:	b00b      	add	sp, #44	@ 0x2c
9001d882:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001d884:	4621      	mov	r1, r4
9001d886:	e7e9      	b.n	9001d85c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

9001d888 <_ZN8touchgfx7Unicode4itoaElPtti>:
9001d888:	b5f0      	push	{r4, r5, r6, r7, lr}
9001d88a:	4607      	mov	r7, r0
9001d88c:	b08b      	sub	sp, #44	@ 0x2c
9001d88e:	4608      	mov	r0, r1
9001d890:	b341      	cbz	r1, 9001d8e4 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
9001d892:	1e99      	subs	r1, r3, #2
9001d894:	2922      	cmp	r1, #34	@ 0x22
9001d896:	d825      	bhi.n	9001d8e4 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
9001d898:	2100      	movs	r1, #0
9001d89a:	463c      	mov	r4, r7
9001d89c:	261f      	movs	r6, #31
9001d89e:	f10d 0c04 	add.w	ip, sp, #4
9001d8a2:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
9001d8a6:	1e71      	subs	r1, r6, #1
9001d8a8:	fb94 fef3 	sdiv	lr, r4, r3
9001d8ac:	fb03 441e 	mls	r4, r3, lr, r4
9001d8b0:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
9001d8b4:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
9001d8b8:	b2ec      	uxtb	r4, r5
9001d8ba:	2d09      	cmp	r5, #9
9001d8bc:	bfd4      	ite	le
9001d8be:	3430      	addle	r4, #48	@ 0x30
9001d8c0:	3457      	addgt	r4, #87	@ 0x57
9001d8c2:	b2e4      	uxtb	r4, r4
9001d8c4:	f80c 4006 	strb.w	r4, [ip, r6]
9001d8c8:	4674      	mov	r4, lr
9001d8ca:	b96c      	cbnz	r4, 9001d8e8 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
9001d8cc:	2f00      	cmp	r7, #0
9001d8ce:	da05      	bge.n	9001d8dc <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
9001d8d0:	ab0a      	add	r3, sp, #40	@ 0x28
9001d8d2:	4419      	add	r1, r3
9001d8d4:	232d      	movs	r3, #45	@ 0x2d
9001d8d6:	f801 3c24 	strb.w	r3, [r1, #-36]
9001d8da:	1eb1      	subs	r1, r6, #2
9001d8dc:	3101      	adds	r1, #1
9001d8de:	4461      	add	r1, ip
9001d8e0:	f7ff ffa3 	bl	9001d82a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001d8e4:	b00b      	add	sp, #44	@ 0x2c
9001d8e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001d8e8:	460e      	mov	r6, r1
9001d8ea:	e7dc      	b.n	9001d8a6 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

9001d8ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
9001d8ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d8f0:	b085      	sub	sp, #20
9001d8f2:	4691      	mov	r9, r2
9001d8f4:	6802      	ldr	r2, [r0, #0]
9001d8f6:	4688      	mov	r8, r1
9001d8f8:	461c      	mov	r4, r3
9001d8fa:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
9001d8fe:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
9001d902:	4683      	mov	fp, r0
9001d904:	4610      	mov	r0, r2
9001d906:	9103      	str	r1, [sp, #12]
9001d908:	9302      	str	r3, [sp, #8]
9001d90a:	9201      	str	r2, [sp, #4]
9001d90c:	f7ff ff80 	bl	9001d810 <_ZN8touchgfx7Unicode6strlenEPKt>
9001d910:	f1b8 0f00 	cmp.w	r8, #0
9001d914:	bf0c      	ite	eq
9001d916:	4684      	moveq	ip, r0
9001d918:	f100 0c01 	addne.w	ip, r0, #1
9001d91c:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
9001d920:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
9001d924:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001d926:	fa1f fc8c 	uxth.w	ip, ip
9001d92a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001d92c:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
9001d930:	9903      	ldr	r1, [sp, #12]
9001d932:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
9001d936:	d041      	beq.n	9001d9bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001d938:	d834      	bhi.n	9001d9a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
9001d93a:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
9001d93e:	d059      	beq.n	9001d9f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
9001d940:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
9001d944:	d03a      	beq.n	9001d9bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001d946:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
9001d94a:	d034      	beq.n	9001d9b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001d94c:	2400      	movs	r4, #0
9001d94e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
9001d952:	3a01      	subs	r2, #1
9001d954:	b169      	cbz	r1, 9001d972 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001d956:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001d958:	458c      	cmp	ip, r1
9001d95a:	da09      	bge.n	9001d970 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001d95c:	eba1 010c 	sub.w	r1, r1, ip
9001d960:	b289      	uxth	r1, r1
9001d962:	b933      	cbnz	r3, 9001d972 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001d964:	2e00      	cmp	r6, #0
9001d966:	d051      	beq.n	9001da0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001d968:	2800      	cmp	r0, #0
9001d96a:	d04f      	beq.n	9001da0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001d96c:	440c      	add	r4, r1
9001d96e:	b2a4      	uxth	r4, r4
9001d970:	2100      	movs	r1, #0
9001d972:	682b      	ldr	r3, [r5, #0]
9001d974:	4293      	cmp	r3, r2
9001d976:	da07      	bge.n	9001d988 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001d978:	f1b8 0f00 	cmp.w	r8, #0
9001d97c:	d004      	beq.n	9001d988 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001d97e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
9001d982:	682b      	ldr	r3, [r5, #0]
9001d984:	3301      	adds	r3, #1
9001d986:	602b      	str	r3, [r5, #0]
9001d988:	2730      	movs	r7, #48	@ 0x30
9001d98a:	2c00      	cmp	r4, #0
9001d98c:	d04e      	beq.n	9001da2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001d98e:	682e      	ldr	r6, [r5, #0]
9001d990:	3c01      	subs	r4, #1
9001d992:	42b2      	cmp	r2, r6
9001d994:	b2a4      	uxth	r4, r4
9001d996:	dd49      	ble.n	9001da2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001d998:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001d99c:	682b      	ldr	r3, [r5, #0]
9001d99e:	3301      	adds	r3, #1
9001d9a0:	602b      	str	r3, [r5, #0]
9001d9a2:	e7f2      	b.n	9001d98a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
9001d9a4:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
9001d9a8:	d01d      	beq.n	9001d9e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
9001d9aa:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
9001d9ae:	d002      	beq.n	9001d9b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001d9b0:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
9001d9b4:	e7c9      	b.n	9001d94a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
9001d9b6:	4684      	mov	ip, r0
9001d9b8:	f04f 0800 	mov.w	r8, #0
9001d9bc:	2c00      	cmp	r4, #0
9001d9be:	d0c6      	beq.n	9001d94e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001d9c0:	b947      	cbnz	r7, 9001d9d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001d9c2:	2801      	cmp	r0, #1
9001d9c4:	d106      	bne.n	9001d9d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001d9c6:	8814      	ldrh	r4, [r2, #0]
9001d9c8:	2c30      	cmp	r4, #48	@ 0x30
9001d9ca:	bf02      	ittt	eq
9001d9cc:	3202      	addeq	r2, #2
9001d9ce:	4638      	moveq	r0, r7
9001d9d0:	f8cb 2000 	streq.w	r2, [fp]
9001d9d4:	45bc      	cmp	ip, r7
9001d9d6:	da14      	bge.n	9001da02 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
9001d9d8:	b2bf      	uxth	r7, r7
9001d9da:	eba7 040c 	sub.w	r4, r7, ip
9001d9de:	46bc      	mov	ip, r7
9001d9e0:	b2a4      	uxth	r4, r4
9001d9e2:	2600      	movs	r6, #0
9001d9e4:	e7b3      	b.n	9001d94e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001d9e6:	4684      	mov	ip, r0
9001d9e8:	b16c      	cbz	r4, 9001da06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
9001d9ea:	42b8      	cmp	r0, r7
9001d9ec:	dd00      	ble.n	9001d9f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
9001d9ee:	b2b8      	uxth	r0, r7
9001d9f0:	2400      	movs	r4, #0
9001d9f2:	e003      	b.n	9001d9fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
9001d9f4:	f04f 0c01 	mov.w	ip, #1
9001d9f8:	2400      	movs	r4, #0
9001d9fa:	4660      	mov	r0, ip
9001d9fc:	4626      	mov	r6, r4
9001d9fe:	46a0      	mov	r8, r4
9001da00:	e7a5      	b.n	9001d94e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001da02:	2400      	movs	r4, #0
9001da04:	e7ed      	b.n	9001d9e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
9001da06:	4626      	mov	r6, r4
9001da08:	46a0      	mov	r8, r4
9001da0a:	e7a0      	b.n	9001d94e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001da0c:	2900      	cmp	r1, #0
9001da0e:	d0b0      	beq.n	9001d972 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001da10:	2720      	movs	r7, #32
9001da12:	682e      	ldr	r6, [r5, #0]
9001da14:	2900      	cmp	r1, #0
9001da16:	d0ac      	beq.n	9001d972 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001da18:	3901      	subs	r1, #1
9001da1a:	4296      	cmp	r6, r2
9001da1c:	b289      	uxth	r1, r1
9001da1e:	daa7      	bge.n	9001d970 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001da20:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001da24:	682b      	ldr	r3, [r5, #0]
9001da26:	3301      	adds	r3, #1
9001da28:	602b      	str	r3, [r5, #0]
9001da2a:	e7f2      	b.n	9001da12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
9001da2c:	b188      	cbz	r0, 9001da52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001da2e:	682b      	ldr	r3, [r5, #0]
9001da30:	3801      	subs	r0, #1
9001da32:	429a      	cmp	r2, r3
9001da34:	b280      	uxth	r0, r0
9001da36:	dd0c      	ble.n	9001da52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001da38:	f8db 3000 	ldr.w	r3, [fp]
9001da3c:	1c9c      	adds	r4, r3, #2
9001da3e:	f8cb 4000 	str.w	r4, [fp]
9001da42:	881c      	ldrh	r4, [r3, #0]
9001da44:	682b      	ldr	r3, [r5, #0]
9001da46:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
9001da4a:	682b      	ldr	r3, [r5, #0]
9001da4c:	3301      	adds	r3, #1
9001da4e:	602b      	str	r3, [r5, #0]
9001da50:	e7ec      	b.n	9001da2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001da52:	2620      	movs	r6, #32
9001da54:	b151      	cbz	r1, 9001da6c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001da56:	6828      	ldr	r0, [r5, #0]
9001da58:	3901      	subs	r1, #1
9001da5a:	4282      	cmp	r2, r0
9001da5c:	b289      	uxth	r1, r1
9001da5e:	dd05      	ble.n	9001da6c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001da60:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
9001da64:	682b      	ldr	r3, [r5, #0]
9001da66:	3301      	adds	r3, #1
9001da68:	602b      	str	r3, [r5, #0]
9001da6a:	e7f3      	b.n	9001da54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
9001da6c:	b005      	add	sp, #20
9001da6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001da72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
9001da72:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001da76:	2400      	movs	r4, #0
9001da78:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
9001da7c:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
9001da80:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
9001da84:	8014      	strh	r4, [r2, #0]
9001da86:	701c      	strb	r4, [r3, #0]
9001da88:	f888 4000 	strb.w	r4, [r8]
9001da8c:	f88c 4000 	strb.w	r4, [ip]
9001da90:	f88e 4000 	strb.w	r4, [lr]
9001da94:	703c      	strb	r4, [r7, #0]
9001da96:	6804      	ldr	r4, [r0, #0]
9001da98:	b1a4      	cbz	r4, 9001dac4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
9001da9a:	8824      	ldrh	r4, [r4, #0]
9001da9c:	f04f 0901 	mov.w	r9, #1
9001daa0:	b314      	cbz	r4, 9001dae8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001daa2:	2c2b      	cmp	r4, #43	@ 0x2b
9001daa4:	d001      	beq.n	9001daaa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
9001daa6:	2c20      	cmp	r4, #32
9001daa8:	d110      	bne.n	9001dacc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
9001daaa:	8014      	strh	r4, [r2, #0]
9001daac:	6804      	ldr	r4, [r0, #0]
9001daae:	b10c      	cbz	r4, 9001dab4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
9001dab0:	3402      	adds	r4, #2
9001dab2:	6004      	str	r4, [r0, #0]
9001dab4:	680c      	ldr	r4, [r1, #0]
9001dab6:	b10c      	cbz	r4, 9001dabc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
9001dab8:	3401      	adds	r4, #1
9001daba:	600c      	str	r4, [r1, #0]
9001dabc:	6804      	ldr	r4, [r0, #0]
9001dabe:	b17c      	cbz	r4, 9001dae0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
9001dac0:	8824      	ldrh	r4, [r4, #0]
9001dac2:	e7ed      	b.n	9001daa0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001dac4:	680c      	ldr	r4, [r1, #0]
9001dac6:	b17c      	cbz	r4, 9001dae8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001dac8:	7824      	ldrb	r4, [r4, #0]
9001daca:	e7e7      	b.n	9001da9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
9001dacc:	2c2d      	cmp	r4, #45	@ 0x2d
9001dace:	d102      	bne.n	9001dad6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
9001dad0:	f883 9000 	strb.w	r9, [r3]
9001dad4:	e7ea      	b.n	9001daac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001dad6:	2c23      	cmp	r4, #35	@ 0x23
9001dad8:	d107      	bne.n	9001daea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
9001dada:	f888 9000 	strb.w	r9, [r8]
9001dade:	e7e5      	b.n	9001daac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001dae0:	680c      	ldr	r4, [r1, #0]
9001dae2:	b10c      	cbz	r4, 9001dae8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001dae4:	7824      	ldrb	r4, [r4, #0]
9001dae6:	e7db      	b.n	9001daa0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001dae8:	2400      	movs	r4, #0
9001daea:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
9001daee:	2b09      	cmp	r3, #9
9001daf0:	d901      	bls.n	9001daf6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
9001daf2:	2c2a      	cmp	r4, #42	@ 0x2a
9001daf4:	d122      	bne.n	9001db3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001daf6:	2301      	movs	r3, #1
9001daf8:	2c30      	cmp	r4, #48	@ 0x30
9001dafa:	f88e 3000 	strb.w	r3, [lr]
9001dafe:	d10d      	bne.n	9001db1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001db00:	f88c 3000 	strb.w	r3, [ip]
9001db04:	6803      	ldr	r3, [r0, #0]
9001db06:	b10b      	cbz	r3, 9001db0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
9001db08:	3302      	adds	r3, #2
9001db0a:	6003      	str	r3, [r0, #0]
9001db0c:	680b      	ldr	r3, [r1, #0]
9001db0e:	b10b      	cbz	r3, 9001db14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
9001db10:	3301      	adds	r3, #1
9001db12:	600b      	str	r3, [r1, #0]
9001db14:	6803      	ldr	r3, [r0, #0]
9001db16:	2b00      	cmp	r3, #0
9001db18:	d02f      	beq.n	9001db7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
9001db1a:	881c      	ldrh	r4, [r3, #0]
9001db1c:	2c2a      	cmp	r4, #42	@ 0x2a
9001db1e:	d135      	bne.n	9001db8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001db20:	f04f 33ff 	mov.w	r3, #4294967295
9001db24:	6033      	str	r3, [r6, #0]
9001db26:	6803      	ldr	r3, [r0, #0]
9001db28:	b10b      	cbz	r3, 9001db2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
9001db2a:	3302      	adds	r3, #2
9001db2c:	6003      	str	r3, [r0, #0]
9001db2e:	680b      	ldr	r3, [r1, #0]
9001db30:	b10b      	cbz	r3, 9001db36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
9001db32:	3301      	adds	r3, #1
9001db34:	600b      	str	r3, [r1, #0]
9001db36:	6803      	ldr	r3, [r0, #0]
9001db38:	b31b      	cbz	r3, 9001db82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
9001db3a:	881c      	ldrh	r4, [r3, #0]
9001db3c:	2c2e      	cmp	r4, #46	@ 0x2e
9001db3e:	d11a      	bne.n	9001db76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001db40:	2301      	movs	r3, #1
9001db42:	703b      	strb	r3, [r7, #0]
9001db44:	6803      	ldr	r3, [r0, #0]
9001db46:	b10b      	cbz	r3, 9001db4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
9001db48:	3302      	adds	r3, #2
9001db4a:	6003      	str	r3, [r0, #0]
9001db4c:	680b      	ldr	r3, [r1, #0]
9001db4e:	b10b      	cbz	r3, 9001db54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
9001db50:	3301      	adds	r3, #1
9001db52:	600b      	str	r3, [r1, #0]
9001db54:	6803      	ldr	r3, [r0, #0]
9001db56:	2b00      	cmp	r3, #0
9001db58:	d036      	beq.n	9001dbc8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
9001db5a:	881b      	ldrh	r3, [r3, #0]
9001db5c:	2b2a      	cmp	r3, #42	@ 0x2a
9001db5e:	d137      	bne.n	9001dbd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001db60:	f04f 33ff 	mov.w	r3, #4294967295
9001db64:	602b      	str	r3, [r5, #0]
9001db66:	6803      	ldr	r3, [r0, #0]
9001db68:	b10b      	cbz	r3, 9001db6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
9001db6a:	3302      	adds	r3, #2
9001db6c:	6003      	str	r3, [r0, #0]
9001db6e:	680b      	ldr	r3, [r1, #0]
9001db70:	b10b      	cbz	r3, 9001db76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001db72:	3301      	adds	r3, #1
9001db74:	600b      	str	r3, [r1, #0]
9001db76:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001db7a:	680c      	ldr	r4, [r1, #0]
9001db7c:	b134      	cbz	r4, 9001db8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001db7e:	7824      	ldrb	r4, [r4, #0]
9001db80:	e7cc      	b.n	9001db1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001db82:	680b      	ldr	r3, [r1, #0]
9001db84:	2b00      	cmp	r3, #0
9001db86:	d0f6      	beq.n	9001db76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001db88:	781c      	ldrb	r4, [r3, #0]
9001db8a:	e7d7      	b.n	9001db3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001db8c:	2300      	movs	r3, #0
9001db8e:	220a      	movs	r2, #10
9001db90:	6033      	str	r3, [r6, #0]
9001db92:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
9001db96:	fa1f f38c 	uxth.w	r3, ip
9001db9a:	2b09      	cmp	r3, #9
9001db9c:	d8ce      	bhi.n	9001db3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001db9e:	6833      	ldr	r3, [r6, #0]
9001dba0:	fb02 c303 	mla	r3, r2, r3, ip
9001dba4:	6033      	str	r3, [r6, #0]
9001dba6:	6803      	ldr	r3, [r0, #0]
9001dba8:	b10b      	cbz	r3, 9001dbae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
9001dbaa:	3302      	adds	r3, #2
9001dbac:	6003      	str	r3, [r0, #0]
9001dbae:	680b      	ldr	r3, [r1, #0]
9001dbb0:	b10b      	cbz	r3, 9001dbb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
9001dbb2:	3301      	adds	r3, #1
9001dbb4:	600b      	str	r3, [r1, #0]
9001dbb6:	6803      	ldr	r3, [r0, #0]
9001dbb8:	b10b      	cbz	r3, 9001dbbe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
9001dbba:	881c      	ldrh	r4, [r3, #0]
9001dbbc:	e7e9      	b.n	9001db92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001dbbe:	680c      	ldr	r4, [r1, #0]
9001dbc0:	2c00      	cmp	r4, #0
9001dbc2:	d0e6      	beq.n	9001db92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001dbc4:	7824      	ldrb	r4, [r4, #0]
9001dbc6:	e7e4      	b.n	9001db92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001dbc8:	680b      	ldr	r3, [r1, #0]
9001dbca:	b10b      	cbz	r3, 9001dbd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001dbcc:	781b      	ldrb	r3, [r3, #0]
9001dbce:	e7c5      	b.n	9001db5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
9001dbd0:	2200      	movs	r2, #0
9001dbd2:	240a      	movs	r4, #10
9001dbd4:	602a      	str	r2, [r5, #0]
9001dbd6:	3b30      	subs	r3, #48	@ 0x30
9001dbd8:	682a      	ldr	r2, [r5, #0]
9001dbda:	b29e      	uxth	r6, r3
9001dbdc:	2e09      	cmp	r6, #9
9001dbde:	d813      	bhi.n	9001dc08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
9001dbe0:	fb04 3302 	mla	r3, r4, r2, r3
9001dbe4:	602b      	str	r3, [r5, #0]
9001dbe6:	6803      	ldr	r3, [r0, #0]
9001dbe8:	b10b      	cbz	r3, 9001dbee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
9001dbea:	3302      	adds	r3, #2
9001dbec:	6003      	str	r3, [r0, #0]
9001dbee:	680b      	ldr	r3, [r1, #0]
9001dbf0:	b10b      	cbz	r3, 9001dbf6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
9001dbf2:	3301      	adds	r3, #1
9001dbf4:	600b      	str	r3, [r1, #0]
9001dbf6:	6803      	ldr	r3, [r0, #0]
9001dbf8:	b10b      	cbz	r3, 9001dbfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
9001dbfa:	881b      	ldrh	r3, [r3, #0]
9001dbfc:	e7eb      	b.n	9001dbd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001dbfe:	680b      	ldr	r3, [r1, #0]
9001dc00:	2b00      	cmp	r3, #0
9001dc02:	d0e8      	beq.n	9001dbd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001dc04:	781b      	ldrb	r3, [r3, #0]
9001dc06:	e7e6      	b.n	9001dbd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001dc08:	2a06      	cmp	r2, #6
9001dc0a:	bfa8      	it	ge
9001dc0c:	2206      	movge	r2, #6
9001dc0e:	602a      	str	r2, [r5, #0]
9001dc10:	e7b1      	b.n	9001db76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

9001dc12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
9001dc12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001dc16:	b0a3      	sub	sp, #140	@ 0x8c
9001dc18:	2600      	movs	r6, #0
9001dc1a:	4607      	mov	r7, r0
9001dc1c:	4688      	mov	r8, r1
9001dc1e:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
9001dc22:	4631      	mov	r1, r6
9001dc24:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
9001dc26:	4648      	mov	r0, r9
9001dc28:	960d      	str	r6, [sp, #52]	@ 0x34
9001dc2a:	e9cd 3208 	strd	r3, r2, [sp, #32]
9001dc2e:	2242      	movs	r2, #66	@ 0x42
9001dc30:	f00e f8e2 	bl	9002bdf8 <memset>
9001dc34:	b15f      	cbz	r7, 9001dc4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
9001dc36:	f108 3aff 	add.w	sl, r8, #4294967295
9001dc3a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001dc3c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001dc3e:	b152      	cbz	r2, 9001dc56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
9001dc40:	8812      	ldrh	r2, [r2, #0]
9001dc42:	b10a      	cbz	r2, 9001dc48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001dc44:	459a      	cmp	sl, r3
9001dc46:	dc2e      	bgt.n	9001dca6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
9001dc48:	2200      	movs	r2, #0
9001dc4a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001dc4e:	4638      	mov	r0, r7
9001dc50:	b023      	add	sp, #140	@ 0x8c
9001dc52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001dc56:	9a08      	ldr	r2, [sp, #32]
9001dc58:	2a00      	cmp	r2, #0
9001dc5a:	d0f5      	beq.n	9001dc48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001dc5c:	7812      	ldrb	r2, [r2, #0]
9001dc5e:	e7f0      	b.n	9001dc42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
9001dc60:	2d00      	cmp	r5, #0
9001dc62:	d0ea      	beq.n	9001dc3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001dc64:	782a      	ldrb	r2, [r5, #0]
9001dc66:	b142      	cbz	r2, 9001dc7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
9001dc68:	2a25      	cmp	r2, #37	@ 0x25
9001dc6a:	d001      	beq.n	9001dc70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
9001dc6c:	459a      	cmp	sl, r3
9001dc6e:	dc08      	bgt.n	9001dc82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
9001dc70:	f1bb 0f00 	cmp.w	fp, #0
9001dc74:	d121      	bne.n	9001dcba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
9001dc76:	2d00      	cmp	r5, #0
9001dc78:	d0df      	beq.n	9001dc3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001dc7a:	782a      	ldrb	r2, [r5, #0]
9001dc7c:	f04f 0b00 	mov.w	fp, #0
9001dc80:	e01d      	b.n	9001dcbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
9001dc82:	f1bb 0f00 	cmp.w	fp, #0
9001dc86:	d077      	beq.n	9001dd78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
9001dc88:	f8bb 2000 	ldrh.w	r2, [fp]
9001dc8c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001dc90:	f1bb 0f00 	cmp.w	fp, #0
9001dc94:	d002      	beq.n	9001dc9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
9001dc96:	f10b 0202 	add.w	r2, fp, #2
9001dc9a:	9209      	str	r2, [sp, #36]	@ 0x24
9001dc9c:	b10d      	cbz	r5, 9001dca2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
9001dc9e:	3501      	adds	r5, #1
9001dca0:	9508      	str	r5, [sp, #32]
9001dca2:	3301      	adds	r3, #1
9001dca4:	930d      	str	r3, [sp, #52]	@ 0x34
9001dca6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001dca8:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
9001dcac:	f1bb 0f00 	cmp.w	fp, #0
9001dcb0:	d0d6      	beq.n	9001dc60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
9001dcb2:	f8bb 2000 	ldrh.w	r2, [fp]
9001dcb6:	2a00      	cmp	r2, #0
9001dcb8:	d1d6      	bne.n	9001dc68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
9001dcba:	f8bb 2000 	ldrh.w	r2, [fp]
9001dcbe:	2a00      	cmp	r2, #0
9001dcc0:	d0bb      	beq.n	9001dc3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001dcc2:	459a      	cmp	sl, r3
9001dcc4:	ddb9      	ble.n	9001dc3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001dcc6:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
9001dcca:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
9001dcce:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
9001dcd2:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
9001dcd6:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
9001dcda:	960e      	str	r6, [sp, #56]	@ 0x38
9001dcdc:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
9001dce0:	960f      	str	r6, [sp, #60]	@ 0x3c
9001dce2:	f1bb 0f00 	cmp.w	fp, #0
9001dce6:	d002      	beq.n	9001dcee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
9001dce8:	f10b 0302 	add.w	r3, fp, #2
9001dcec:	9309      	str	r3, [sp, #36]	@ 0x24
9001dcee:	b10d      	cbz	r5, 9001dcf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
9001dcf0:	1c6b      	adds	r3, r5, #1
9001dcf2:	9308      	str	r3, [sp, #32]
9001dcf4:	ab0f      	add	r3, sp, #60	@ 0x3c
9001dcf6:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
9001dcfa:	a908      	add	r1, sp, #32
9001dcfc:	a809      	add	r0, sp, #36	@ 0x24
9001dcfe:	9305      	str	r3, [sp, #20]
9001dd00:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
9001dd04:	9304      	str	r3, [sp, #16]
9001dd06:	ab0e      	add	r3, sp, #56	@ 0x38
9001dd08:	9303      	str	r3, [sp, #12]
9001dd0a:	ab0c      	add	r3, sp, #48	@ 0x30
9001dd0c:	9302      	str	r3, [sp, #8]
9001dd0e:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
9001dd12:	9301      	str	r3, [sp, #4]
9001dd14:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
9001dd18:	9300      	str	r3, [sp, #0]
9001dd1a:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
9001dd1e:	f7ff fea8 	bl	9001da72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
9001dd22:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001dd24:	2b00      	cmp	r3, #0
9001dd26:	bfbf      	itttt	lt
9001dd28:	6823      	ldrlt	r3, [r4, #0]
9001dd2a:	3404      	addlt	r4, #4
9001dd2c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001dd30:	930e      	strlt	r3, [sp, #56]	@ 0x38
9001dd32:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001dd34:	2b00      	cmp	r3, #0
9001dd36:	bfbe      	ittt	lt
9001dd38:	6823      	ldrlt	r3, [r4, #0]
9001dd3a:	3404      	addlt	r4, #4
9001dd3c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001dd40:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001dd44:	bfb8      	it	lt
9001dd46:	930f      	strlt	r3, [sp, #60]	@ 0x3c
9001dd48:	b1d9      	cbz	r1, 9001dd82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
9001dd4a:	880b      	ldrh	r3, [r1, #0]
9001dd4c:	2b69      	cmp	r3, #105	@ 0x69
9001dd4e:	d01f      	beq.n	9001dd90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001dd50:	d82f      	bhi.n	9001ddb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
9001dd52:	2b58      	cmp	r3, #88	@ 0x58
9001dd54:	d01c      	beq.n	9001dd90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001dd56:	d818      	bhi.n	9001dd8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
9001dd58:	2b25      	cmp	r3, #37	@ 0x25
9001dd5a:	d034      	beq.n	9001ddc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
9001dd5c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001dd5e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
9001dd62:	f1bb 0f00 	cmp.w	fp, #0
9001dd66:	f000 80b7 	beq.w	9001ded8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
9001dd6a:	f8bb 5000 	ldrh.w	r5, [fp]
9001dd6e:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
9001dd72:	3301      	adds	r3, #1
9001dd74:	930d      	str	r3, [sp, #52]	@ 0x34
9001dd76:	e029      	b.n	9001ddcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001dd78:	b10d      	cbz	r5, 9001dd7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
9001dd7a:	782a      	ldrb	r2, [r5, #0]
9001dd7c:	e786      	b.n	9001dc8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001dd7e:	462a      	mov	r2, r5
9001dd80:	e784      	b.n	9001dc8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001dd82:	2a00      	cmp	r2, #0
9001dd84:	d0ea      	beq.n	9001dd5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001dd86:	7813      	ldrb	r3, [r2, #0]
9001dd88:	e7e0      	b.n	9001dd4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
9001dd8a:	3b63      	subs	r3, #99	@ 0x63
9001dd8c:	2b01      	cmp	r3, #1
9001dd8e:	d8e5      	bhi.n	9001dd5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001dd90:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
9001dd94:	b329      	cbz	r1, 9001dde2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
9001dd96:	880b      	ldrh	r3, [r1, #0]
9001dd98:	2b69      	cmp	r3, #105	@ 0x69
9001dd9a:	d063      	beq.n	9001de64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001dd9c:	d825      	bhi.n	9001ddea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
9001dd9e:	2b63      	cmp	r3, #99	@ 0x63
9001dda0:	d038      	beq.n	9001de14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
9001dda2:	2b64      	cmp	r3, #100	@ 0x64
9001dda4:	d05e      	beq.n	9001de64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001dda6:	2b58      	cmp	r3, #88	@ 0x58
9001dda8:	d07a      	beq.n	9001dea0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
9001ddaa:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
9001ddae:	4625      	mov	r5, r4
9001ddb0:	e036      	b.n	9001de20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001ddb2:	2b73      	cmp	r3, #115	@ 0x73
9001ddb4:	d0ec      	beq.n	9001dd90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001ddb6:	d802      	bhi.n	9001ddbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
9001ddb8:	2b6f      	cmp	r3, #111	@ 0x6f
9001ddba:	d1cf      	bne.n	9001dd5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001ddbc:	e7e8      	b.n	9001dd90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001ddbe:	2b75      	cmp	r3, #117	@ 0x75
9001ddc0:	d0e6      	beq.n	9001dd90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001ddc2:	2b78      	cmp	r3, #120	@ 0x78
9001ddc4:	e7f9      	b.n	9001ddba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
9001ddc6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001ddc8:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
9001ddcc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ddce:	b10b      	cbz	r3, 9001ddd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
9001ddd0:	3302      	adds	r3, #2
9001ddd2:	9309      	str	r3, [sp, #36]	@ 0x24
9001ddd4:	9b08      	ldr	r3, [sp, #32]
9001ddd6:	2b00      	cmp	r3, #0
9001ddd8:	f43f af2f 	beq.w	9001dc3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001dddc:	3301      	adds	r3, #1
9001ddde:	9308      	str	r3, [sp, #32]
9001dde0:	e72b      	b.n	9001dc3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001dde2:	2a00      	cmp	r2, #0
9001dde4:	d0e1      	beq.n	9001ddaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001dde6:	7813      	ldrb	r3, [r2, #0]
9001dde8:	e7d6      	b.n	9001dd98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
9001ddea:	2b73      	cmp	r3, #115	@ 0x73
9001ddec:	d036      	beq.n	9001de5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
9001ddee:	d807      	bhi.n	9001de00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
9001ddf0:	2b6f      	cmp	r3, #111	@ 0x6f
9001ddf2:	d1da      	bne.n	9001ddaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001ddf4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001ddf6:	1d25      	adds	r5, r4, #4
9001ddf8:	2308      	movs	r3, #8
9001ddfa:	eba8 0202 	sub.w	r2, r8, r2
9001ddfe:	e049      	b.n	9001de94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001de00:	2b75      	cmp	r3, #117	@ 0x75
9001de02:	d042      	beq.n	9001de8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
9001de04:	2b78      	cmp	r3, #120	@ 0x78
9001de06:	d1d0      	bne.n	9001ddaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001de08:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001de0a:	1d25      	adds	r5, r4, #4
9001de0c:	2310      	movs	r3, #16
9001de0e:	eba8 0202 	sub.w	r2, r8, r2
9001de12:	e03f      	b.n	9001de94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001de14:	6823      	ldr	r3, [r4, #0]
9001de16:	1d25      	adds	r5, r4, #4
9001de18:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
9001de1c:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
9001de20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001de22:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
9001de26:	2b00      	cmp	r3, #0
9001de28:	d051      	beq.n	9001dece <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
9001de2a:	881a      	ldrh	r2, [r3, #0]
9001de2c:	a80d      	add	r0, sp, #52	@ 0x34
9001de2e:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
9001de32:	462c      	mov	r4, r5
9001de34:	9005      	str	r0, [sp, #20]
9001de36:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
9001de3a:	9004      	str	r0, [sp, #16]
9001de3c:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001de3e:	9003      	str	r0, [sp, #12]
9001de40:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
9001de44:	9002      	str	r0, [sp, #8]
9001de46:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9001de48:	9001      	str	r0, [sp, #4]
9001de4a:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
9001de4e:	e9cd 8706 	strd	r8, r7, [sp, #24]
9001de52:	9000      	str	r0, [sp, #0]
9001de54:	a810      	add	r0, sp, #64	@ 0x40
9001de56:	f7ff fd49 	bl	9001d8ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
9001de5a:	e7b7      	b.n	9001ddcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001de5c:	1d25      	adds	r5, r4, #4
9001de5e:	6823      	ldr	r3, [r4, #0]
9001de60:	9310      	str	r3, [sp, #64]	@ 0x40
9001de62:	e7dd      	b.n	9001de20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001de64:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001de66:	230a      	movs	r3, #10
9001de68:	4649      	mov	r1, r9
9001de6a:	6820      	ldr	r0, [r4, #0]
9001de6c:	eba8 0202 	sub.w	r2, r8, r2
9001de70:	1d25      	adds	r5, r4, #4
9001de72:	b292      	uxth	r2, r2
9001de74:	f7ff fd08 	bl	9001d888 <_ZN8touchgfx7Unicode4itoaElPtti>
9001de78:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001de7c:	2b2d      	cmp	r3, #45	@ 0x2d
9001de7e:	d1cf      	bne.n	9001de20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001de80:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001de84:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001de86:	3302      	adds	r3, #2
9001de88:	e7ea      	b.n	9001de60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
9001de8a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001de8c:	1d25      	adds	r5, r4, #4
9001de8e:	230a      	movs	r3, #10
9001de90:	eba8 0202 	sub.w	r2, r8, r2
9001de94:	b292      	uxth	r2, r2
9001de96:	4649      	mov	r1, r9
9001de98:	6820      	ldr	r0, [r4, #0]
9001de9a:	f7ff fcd7 	bl	9001d84c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
9001de9e:	e7bf      	b.n	9001de20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001dea0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001dea2:	2310      	movs	r3, #16
9001dea4:	4649      	mov	r1, r9
9001dea6:	6820      	ldr	r0, [r4, #0]
9001dea8:	eba8 0202 	sub.w	r2, r8, r2
9001deac:	1d25      	adds	r5, r4, #4
9001deae:	b292      	uxth	r2, r2
9001deb0:	f7ff fccc 	bl	9001d84c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
9001deb4:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
9001deb8:	f832 3f02 	ldrh.w	r3, [r2, #2]!
9001debc:	2b00      	cmp	r3, #0
9001debe:	d0af      	beq.n	9001de20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001dec0:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
9001dec4:	2919      	cmp	r1, #25
9001dec6:	d8f7      	bhi.n	9001deb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001dec8:	3b20      	subs	r3, #32
9001deca:	8013      	strh	r3, [r2, #0]
9001decc:	e7f4      	b.n	9001deb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001dece:	9a08      	ldr	r2, [sp, #32]
9001ded0:	2a00      	cmp	r2, #0
9001ded2:	d0ab      	beq.n	9001de2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001ded4:	7812      	ldrb	r2, [r2, #0]
9001ded6:	e7a9      	b.n	9001de2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001ded8:	2d00      	cmp	r5, #0
9001deda:	f43f af48 	beq.w	9001dd6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
9001dede:	782d      	ldrb	r5, [r5, #0]
9001dee0:	e745      	b.n	9001dd6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

9001dee2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
9001dee2:	b507      	push	{r0, r1, r2, lr}
9001dee4:	9300      	str	r3, [sp, #0]
9001dee6:	4613      	mov	r3, r2
9001dee8:	2200      	movs	r2, #0
9001deea:	f7ff fe92 	bl	9001dc12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
9001deee:	b003      	add	sp, #12
9001def0:	f85d fb04 	ldr.w	pc, [sp], #4

9001def4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
9001def4:	b40c      	push	{r2, r3}
9001def6:	b507      	push	{r0, r1, r2, lr}
9001def8:	ab04      	add	r3, sp, #16
9001defa:	f853 2b04 	ldr.w	r2, [r3], #4
9001defe:	9301      	str	r3, [sp, #4]
9001df00:	f7ff ffef 	bl	9001dee2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
9001df04:	b003      	add	sp, #12
9001df06:	f85d eb04 	ldr.w	lr, [sp], #4
9001df0a:	b002      	add	sp, #8
9001df0c:	4770      	bx	lr
	...

9001df10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
9001df10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001df14:	b0c3      	sub	sp, #268	@ 0x10c
9001df16:	2600      	movs	r6, #0
9001df18:	4607      	mov	r7, r0
9001df1a:	4689      	mov	r9, r1
9001df1c:	f10d 0840 	add.w	r8, sp, #64	@ 0x40
9001df20:	4631      	mov	r1, r6
9001df22:	f8dd a130 	ldr.w	sl, [sp, #304]	@ 0x130
9001df26:	4640      	mov	r0, r8
9001df28:	960c      	str	r6, [sp, #48]	@ 0x30
9001df2a:	e9cd 3208 	strd	r3, r2, [sp, #32]
9001df2e:	22c8      	movs	r2, #200	@ 0xc8
9001df30:	f00d ff62 	bl	9002bdf8 <memset>
9001df34:	b17f      	cbz	r7, 9001df56 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
9001df36:	eddf 5aa3 	vldr	s11, [pc, #652]	@ 9001e1c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
9001df3a:	f8df b294 	ldr.w	fp, [pc, #660]	@ 9001e1d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>
9001df3e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001df40:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001df42:	b162      	cbz	r2, 9001df5e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
9001df44:	8812      	ldrh	r2, [r2, #0]
9001df46:	b11a      	cbz	r2, 9001df50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
9001df48:	f109 31ff 	add.w	r1, r9, #4294967295
9001df4c:	4299      	cmp	r1, r3
9001df4e:	dc26      	bgt.n	9001df9e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
9001df50:	2200      	movs	r2, #0
9001df52:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001df56:	4638      	mov	r0, r7
9001df58:	b043      	add	sp, #268	@ 0x10c
9001df5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001df5e:	9a08      	ldr	r2, [sp, #32]
9001df60:	2a00      	cmp	r2, #0
9001df62:	d0f5      	beq.n	9001df50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
9001df64:	7812      	ldrb	r2, [r2, #0]
9001df66:	e7ee      	b.n	9001df46 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
9001df68:	2c00      	cmp	r4, #0
9001df6a:	d0e8      	beq.n	9001df3e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
9001df6c:	7822      	ldrb	r2, [r4, #0]
9001df6e:	b132      	cbz	r2, 9001df7e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
9001df70:	2a25      	cmp	r2, #37	@ 0x25
9001df72:	d001      	beq.n	9001df78 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
9001df74:	4299      	cmp	r1, r3
9001df76:	dc05      	bgt.n	9001df84 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
9001df78:	b9cd      	cbnz	r5, 9001dfae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
9001df7a:	2c00      	cmp	r4, #0
9001df7c:	d0df      	beq.n	9001df3e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
9001df7e:	7822      	ldrb	r2, [r4, #0]
9001df80:	2500      	movs	r5, #0
9001df82:	e015      	b.n	9001dfb0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
9001df84:	2d00      	cmp	r5, #0
9001df86:	d073      	beq.n	9001e070 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
9001df88:	882a      	ldrh	r2, [r5, #0]
9001df8a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001df8e:	b10d      	cbz	r5, 9001df94 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
9001df90:	3502      	adds	r5, #2
9001df92:	9509      	str	r5, [sp, #36]	@ 0x24
9001df94:	b10c      	cbz	r4, 9001df9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
9001df96:	3401      	adds	r4, #1
9001df98:	9408      	str	r4, [sp, #32]
9001df9a:	3301      	adds	r3, #1
9001df9c:	930c      	str	r3, [sp, #48]	@ 0x30
9001df9e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001dfa0:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
9001dfa4:	2d00      	cmp	r5, #0
9001dfa6:	d0df      	beq.n	9001df68 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
9001dfa8:	882a      	ldrh	r2, [r5, #0]
9001dfaa:	2a00      	cmp	r2, #0
9001dfac:	d1e0      	bne.n	9001df70 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
9001dfae:	882a      	ldrh	r2, [r5, #0]
9001dfb0:	2a00      	cmp	r2, #0
9001dfb2:	d0c4      	beq.n	9001df3e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
9001dfb4:	4299      	cmp	r1, r3
9001dfb6:	ddc2      	ble.n	9001df3e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
9001dfb8:	2300      	movs	r3, #0
9001dfba:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
9001dfbe:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
9001dfc2:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
9001dfc6:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
9001dfca:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
9001dfce:	930d      	str	r3, [sp, #52]	@ 0x34
9001dfd0:	f88d 302d 	strb.w	r3, [sp, #45]	@ 0x2d
9001dfd4:	930e      	str	r3, [sp, #56]	@ 0x38
9001dfd6:	b10d      	cbz	r5, 9001dfdc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
9001dfd8:	1cab      	adds	r3, r5, #2
9001dfda:	9309      	str	r3, [sp, #36]	@ 0x24
9001dfdc:	b10c      	cbz	r4, 9001dfe2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
9001dfde:	1c63      	adds	r3, r4, #1
9001dfe0:	9308      	str	r3, [sp, #32]
9001dfe2:	ab0e      	add	r3, sp, #56	@ 0x38
9001dfe4:	f10d 022e 	add.w	r2, sp, #46	@ 0x2e
9001dfe8:	a908      	add	r1, sp, #32
9001dfea:	a809      	add	r0, sp, #36	@ 0x24
9001dfec:	9305      	str	r3, [sp, #20]
9001dfee:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
9001dff2:	9304      	str	r3, [sp, #16]
9001dff4:	ab0d      	add	r3, sp, #52	@ 0x34
9001dff6:	9303      	str	r3, [sp, #12]
9001dff8:	ab0b      	add	r3, sp, #44	@ 0x2c
9001dffa:	9302      	str	r3, [sp, #8]
9001dffc:	f10d 032b 	add.w	r3, sp, #43	@ 0x2b
9001e000:	9301      	str	r3, [sp, #4]
9001e002:	f10d 032a 	add.w	r3, sp, #42	@ 0x2a
9001e006:	9300      	str	r3, [sp, #0]
9001e008:	f10d 0329 	add.w	r3, sp, #41	@ 0x29
9001e00c:	f7ff fd31 	bl	9001da72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
9001e010:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e012:	2b00      	cmp	r3, #0
9001e014:	da0b      	bge.n	9001e02e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
9001e016:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
9001e01a:	3601      	adds	r6, #1
9001e01c:	edd3 7a00 	vldr	s15, [r3]
9001e020:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001e024:	ee17 3a90 	vmov	r3, s15
9001e028:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e02c:	930d      	str	r3, [sp, #52]	@ 0x34
9001e02e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e030:	2b00      	cmp	r3, #0
9001e032:	da0b      	bge.n	9001e04c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
9001e034:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
9001e038:	3601      	adds	r6, #1
9001e03a:	edd3 7a00 	vldr	s15, [r3]
9001e03e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001e042:	ee17 3a90 	vmov	r3, s15
9001e046:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e04a:	930e      	str	r3, [sp, #56]	@ 0x38
9001e04c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001e04e:	b1a3      	cbz	r3, 9001e07a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
9001e050:	881a      	ldrh	r2, [r3, #0]
9001e052:	2a25      	cmp	r2, #37	@ 0x25
9001e054:	d016      	beq.n	9001e084 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
9001e056:	2a66      	cmp	r2, #102	@ 0x66
9001e058:	d01a      	beq.n	9001e090 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
9001e05a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001e05c:	e9cd 4508 	strd	r4, r5, [sp, #32]
9001e060:	2d00      	cmp	r5, #0
9001e062:	f000 80fd 	beq.w	9001e260 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x350>
9001e066:	882c      	ldrh	r4, [r5, #0]
9001e068:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
9001e06c:	3301      	adds	r3, #1
9001e06e:	e00d      	b.n	9001e08c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
9001e070:	b10c      	cbz	r4, 9001e076 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
9001e072:	7822      	ldrb	r2, [r4, #0]
9001e074:	e789      	b.n	9001df8a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
9001e076:	4622      	mov	r2, r4
9001e078:	e787      	b.n	9001df8a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
9001e07a:	9b08      	ldr	r3, [sp, #32]
9001e07c:	2b00      	cmp	r3, #0
9001e07e:	d0ec      	beq.n	9001e05a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
9001e080:	781a      	ldrb	r2, [r3, #0]
9001e082:	e7e6      	b.n	9001e052 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
9001e084:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001e086:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001e08a:	3302      	adds	r3, #2
9001e08c:	930c      	str	r3, [sp, #48]	@ 0x30
9001e08e:	e040      	b.n	9001e112 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x202>
9001e090:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
9001e094:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
9001e098:	3601      	adds	r6, #1
9001e09a:	edd3 7a00 	vldr	s15, [r3]
9001e09e:	f89d 302d 	ldrb.w	r3, [sp, #45]	@ 0x2d
9001e0a2:	b923      	cbnz	r3, 9001e0ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
9001e0a4:	2301      	movs	r3, #1
9001e0a6:	f88d 302d 	strb.w	r3, [sp, #45]	@ 0x2d
9001e0aa:	2306      	movs	r3, #6
9001e0ac:	930e      	str	r3, [sp, #56]	@ 0x38
9001e0ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001e0b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001e0b6:	bf42      	ittt	mi
9001e0b8:	eef1 7a67 	vnegmi.f32	s15, s15
9001e0bc:	232d      	movmi	r3, #45	@ 0x2d
9001e0be:	f8ad 302e 	strhmi.w	r3, [sp, #46]	@ 0x2e
9001e0c2:	eeb0 7ae7 	vabs.f32	s14, s15
9001e0c6:	eeb4 7a65 	vcmp.f32	s14, s11
9001e0ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001e0ce:	dd2b      	ble.n	9001e128 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x218>
9001e0d0:	2366      	movs	r3, #102	@ 0x66
9001e0d2:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
9001e0d6:	9311      	str	r3, [sp, #68]	@ 0x44
9001e0d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001e0da:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
9001e0de:	2b00      	cmp	r3, #0
9001e0e0:	f000 80b8 	beq.w	9001e254 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x344>
9001e0e4:	881a      	ldrh	r2, [r3, #0]
9001e0e6:	a80c      	add	r0, sp, #48	@ 0x30
9001e0e8:	f89d 302d 	ldrb.w	r3, [sp, #45]	@ 0x2d
9001e0ec:	9005      	str	r0, [sp, #20]
9001e0ee:	f89d 0029 	ldrb.w	r0, [sp, #41]	@ 0x29
9001e0f2:	9004      	str	r0, [sp, #16]
9001e0f4:	980d      	ldr	r0, [sp, #52]	@ 0x34
9001e0f6:	9003      	str	r0, [sp, #12]
9001e0f8:	f89d 002c 	ldrb.w	r0, [sp, #44]	@ 0x2c
9001e0fc:	9002      	str	r0, [sp, #8]
9001e0fe:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001e100:	9001      	str	r0, [sp, #4]
9001e102:	f89d 002b 	ldrb.w	r0, [sp, #43]	@ 0x2b
9001e106:	e9cd 9706 	strd	r9, r7, [sp, #24]
9001e10a:	9000      	str	r0, [sp, #0]
9001e10c:	a80f      	add	r0, sp, #60	@ 0x3c
9001e10e:	f7ff fbed 	bl	9001d8ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
9001e112:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001e114:	b10b      	cbz	r3, 9001e11a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20a>
9001e116:	3302      	adds	r3, #2
9001e118:	9309      	str	r3, [sp, #36]	@ 0x24
9001e11a:	9b08      	ldr	r3, [sp, #32]
9001e11c:	2b00      	cmp	r3, #0
9001e11e:	f43f af0e 	beq.w	9001df3e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
9001e122:	3301      	adds	r3, #1
9001e124:	9308      	str	r3, [sp, #32]
9001e126:	e70a      	b.n	9001df3e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
9001e128:	eef4 7a67 	vcmp.f32	s15, s15
9001e12c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001e130:	d60b      	bvs.n	9001e14a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23a>
9001e132:	eeb2 6a04 	vmov.f32	s12, #36	@ 0x41200000  10.0
9001e136:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001e138:	2300      	movs	r3, #0
9001e13a:	ed9f 7a23 	vldr	s14, [pc, #140]	@ 9001e1c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
9001e13e:	4283      	cmp	r3, r0
9001e140:	da07      	bge.n	9001e152 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x242>
9001e142:	ee87 7a06 	vdiv.f32	s14, s14, s12
9001e146:	3301      	adds	r3, #1
9001e148:	e7f9      	b.n	9001e13e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x22e>
9001e14a:	4b20      	ldr	r3, [pc, #128]	@ (9001e1cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>)
9001e14c:	9310      	str	r3, [sp, #64]	@ 0x40
9001e14e:	236e      	movs	r3, #110	@ 0x6e
9001e150:	e7c1      	b.n	9001e0d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1c6>
9001e152:	ee77 7a87 	vadd.f32	s15, s15, s14
9001e156:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001e15a:	eeb0 7a67 	vmov.f32	s14, s15
9001e15e:	eeb4 7ac6 	vcmpe.f32	s14, s12
9001e162:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001e166:	da27      	bge.n	9001e1b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2a8>
9001e168:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001e16a:	eeb6 5a00 	vmov.f32	s10, #96	@ 0x3f000000  0.5
9001e16e:	2100      	movs	r1, #0
9001e170:	eba9 0202 	sub.w	r2, r9, r2
9001e174:	eef4 6ac5 	vcmpe.f32	s13, s10
9001e178:	b28c      	uxth	r4, r1
9001e17a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001e17e:	db2a      	blt.n	9001e1d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c6>
9001e180:	1a53      	subs	r3, r2, r1
9001e182:	2b00      	cmp	r3, #0
9001e184:	dd27      	ble.n	9001e1d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c6>
9001e186:	2963      	cmp	r1, #99	@ 0x63
9001e188:	d024      	beq.n	9001e1d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
9001e18a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9001e18e:	eebd 7ac7 	vcvt.s32.f32	s14, s14
9001e192:	ee17 3a10 	vmov	r3, s14
9001e196:	2b09      	cmp	r3, #9
9001e198:	bfa8      	it	ge
9001e19a:	2309      	movge	r3, #9
9001e19c:	ee07 3a10 	vmov	s14, r3
9001e1a0:	f103 0430 	add.w	r4, r3, #48	@ 0x30
9001e1a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001e1a8:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
9001e1ac:	3101      	adds	r1, #1
9001e1ae:	eee7 7a66 	vfms.f32	s15, s14, s13
9001e1b2:	eec6 6a86 	vdiv.f32	s13, s13, s12
9001e1b6:	e7dd      	b.n	9001e174 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x264>
9001e1b8:	ee66 6a86 	vmul.f32	s13, s13, s12
9001e1bc:	ee87 7a06 	vdiv.f32	s14, s14, s12
9001e1c0:	e7cd      	b.n	9001e15e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x24e>
9001e1c2:	bf00      	nop
9001e1c4:	7f7fffff 	.word	0x7f7fffff
9001e1c8:	3f000002 	.word	0x3f000002
9001e1cc:	0061006e 	.word	0x0061006e
9001e1d0:	006e0069 	.word	0x006e0069
9001e1d4:	460c      	mov	r4, r1
9001e1d6:	2a63      	cmp	r2, #99	@ 0x63
9001e1d8:	bfd4      	ite	le
9001e1da:	ebc4 0202 	rsble	r2, r4, r2
9001e1de:	f1c4 0263 	rsbgt	r2, r4, #99	@ 0x63
9001e1e2:	2a00      	cmp	r2, #0
9001e1e4:	dd31      	ble.n	9001e24a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33a>
9001e1e6:	4603      	mov	r3, r0
9001e1e8:	2501      	movs	r5, #1
9001e1ea:	210a      	movs	r1, #10
9001e1ec:	2b00      	cmp	r3, #0
9001e1ee:	dd0d      	ble.n	9001e20c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2fc>
9001e1f0:	ee67 7a86 	vmul.f32	s15, s15, s12
9001e1f4:	3b01      	subs	r3, #1
9001e1f6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
9001e1fa:	ee17 ca10 	vmov	ip, s14
9001e1fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001e202:	fb01 c505 	mla	r5, r1, r5, ip
9001e206:	ee77 7ac7 	vsub.f32	s15, s15, s14
9001e20a:	e7ef      	b.n	9001e1ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2dc>
9001e20c:	2800      	cmp	r0, #0
9001e20e:	f100 33ff 	add.w	r3, r0, #4294967295
9001e212:	ea4f 0444 	mov.w	r4, r4, lsl #1
9001e216:	bfac      	ite	ge
9001e218:	1a18      	subge	r0, r3, r0
9001e21a:	4618      	movlt	r0, r3
9001e21c:	b292      	uxth	r2, r2
9001e21e:	230a      	movs	r3, #10
9001e220:	900e      	str	r0, [sp, #56]	@ 0x38
9001e222:	eb08 0104 	add.w	r1, r8, r4
9001e226:	4628      	mov	r0, r5
9001e228:	f7ff fb2e 	bl	9001d888 <_ZN8touchgfx7Unicode4itoaElPtti>
9001e22c:	2d01      	cmp	r5, #1
9001e22e:	dc0a      	bgt.n	9001e246 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
9001e230:	f89d 302a 	ldrb.w	r3, [sp, #42]	@ 0x2a
9001e234:	2b00      	cmp	r3, #0
9001e236:	bf0c      	ite	eq
9001e238:	2300      	moveq	r3, #0
9001e23a:	232e      	movne	r3, #46	@ 0x2e
9001e23c:	aa42      	add	r2, sp, #264	@ 0x108
9001e23e:	4414      	add	r4, r2
9001e240:	f824 3cc8 	strh.w	r3, [r4, #-200]
9001e244:	e748      	b.n	9001e0d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1c8>
9001e246:	232e      	movs	r3, #46	@ 0x2e
9001e248:	e7f8      	b.n	9001e23c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32c>
9001e24a:	ab42      	add	r3, sp, #264	@ 0x108
9001e24c:	eb03 0444 	add.w	r4, r3, r4, lsl #1
9001e250:	2300      	movs	r3, #0
9001e252:	e7f5      	b.n	9001e240 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x330>
9001e254:	9a08      	ldr	r2, [sp, #32]
9001e256:	2a00      	cmp	r2, #0
9001e258:	f43f af45 	beq.w	9001e0e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1d6>
9001e25c:	7812      	ldrb	r2, [r2, #0]
9001e25e:	e742      	b.n	9001e0e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1d6>
9001e260:	2c00      	cmp	r4, #0
9001e262:	f43f af01 	beq.w	9001e068 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
9001e266:	7824      	ldrb	r4, [r4, #0]
9001e268:	e6fe      	b.n	9001e068 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
9001e26a:	bf00      	nop

9001e26c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
9001e26c:	b507      	push	{r0, r1, r2, lr}
9001e26e:	9300      	str	r3, [sp, #0]
9001e270:	4613      	mov	r3, r2
9001e272:	2200      	movs	r2, #0
9001e274:	f7ff fe4c 	bl	9001df10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
9001e278:	b003      	add	sp, #12
9001e27a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

9001e280 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
9001e280:	4b01      	ldr	r3, [pc, #4]	@ (9001e288 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001e282:	6018      	str	r0, [r3, #0]
9001e284:	4770      	bx	lr
9001e286:	bf00      	nop
9001e288:	24027f04 	.word	0x24027f04

9001e28c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001e28c:	4b06      	ldr	r3, [pc, #24]	@ (9001e2a8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001e28e:	881a      	ldrh	r2, [r3, #0]
9001e290:	4282      	cmp	r2, r0
9001e292:	d807      	bhi.n	9001e2a4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001e294:	4b05      	ldr	r3, [pc, #20]	@ (9001e2ac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001e296:	881b      	ldrh	r3, [r3, #0]
9001e298:	4413      	add	r3, r2
9001e29a:	4298      	cmp	r0, r3
9001e29c:	bfac      	ite	ge
9001e29e:	2000      	movge	r0, #0
9001e2a0:	2001      	movlt	r0, #1
9001e2a2:	4770      	bx	lr
9001e2a4:	2000      	movs	r0, #0
9001e2a6:	4770      	bx	lr
9001e2a8:	24027f24 	.word	0x24027f24
9001e2ac:	24027f28 	.word	0x24027f28

9001e2b0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
9001e2b0:	b508      	push	{r3, lr}
9001e2b2:	4601      	mov	r1, r0
9001e2b4:	f7ff ffea 	bl	9001e28c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001e2b8:	b118      	cbz	r0, 9001e2c2 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001e2ba:	4b02      	ldr	r3, [pc, #8]	@ (9001e2c4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001e2bc:	681b      	ldr	r3, [r3, #0]
9001e2be:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9001e2c2:	bd08      	pop	{r3, pc}
9001e2c4:	24027f08 	.word	0x24027f08

9001e2c8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001e2c8:	b5f0      	push	{r4, r5, r6, r7, lr}
9001e2ca:	4c24      	ldr	r4, [pc, #144]	@ (9001e35c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001e2cc:	6823      	ldr	r3, [r4, #0]
9001e2ce:	2b00      	cmp	r3, #0
9001e2d0:	d042      	beq.n	9001e358 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001e2d2:	4a23      	ldr	r2, [pc, #140]	@ (9001e360 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001e2d4:	4d23      	ldr	r5, [pc, #140]	@ (9001e364 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001e2d6:	8811      	ldrh	r1, [r2, #0]
9001e2d8:	f8b5 c000 	ldrh.w	ip, [r5]
9001e2dc:	4822      	ldr	r0, [pc, #136]	@ (9001e368 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001e2de:	4461      	add	r1, ip
9001e2e0:	1c4a      	adds	r2, r1, #1
9001e2e2:	008f      	lsls	r7, r1, #2
9001e2e4:	f022 0201 	bic.w	r2, r2, #1
9001e2e8:	19de      	adds	r6, r3, r7
9001e2ea:	0412      	lsls	r2, r2, #16
9001e2ec:	6006      	str	r6, [r0, #0]
9001e2ee:	4e1f      	ldr	r6, [pc, #124]	@ (9001e36c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001e2f0:	0c12      	lsrs	r2, r2, #16
9001e2f2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001e2f6:	19da      	adds	r2, r3, r7
9001e2f8:	6032      	str	r2, [r6, #0]
9001e2fa:	220e      	movs	r2, #14
9001e2fc:	fb02 f20c 	mul.w	r2, r2, ip
9001e300:	3203      	adds	r2, #3
9001e302:	f022 0203 	bic.w	r2, r2, #3
9001e306:	443a      	add	r2, r7
9001e308:	4f19      	ldr	r7, [pc, #100]	@ (9001e370 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001e30a:	4413      	add	r3, r2
9001e30c:	603b      	str	r3, [r7, #0]
9001e30e:	2300      	movs	r3, #0
9001e310:	4f18      	ldr	r7, [pc, #96]	@ (9001e374 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001e312:	469c      	mov	ip, r3
9001e314:	803b      	strh	r3, [r7, #0]
9001e316:	4f18      	ldr	r7, [pc, #96]	@ (9001e378 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001e318:	683f      	ldr	r7, [r7, #0]
9001e31a:	1aba      	subs	r2, r7, r2
9001e31c:	4f17      	ldr	r7, [pc, #92]	@ (9001e37c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001e31e:	603a      	str	r2, [r7, #0]
9001e320:	f64f 77ff 	movw	r7, #65535	@ 0xffff
9001e324:	4a16      	ldr	r2, [pc, #88]	@ (9001e380 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001e326:	8013      	strh	r3, [r2, #0]
9001e328:	428b      	cmp	r3, r1
9001e32a:	d10d      	bne.n	9001e348 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001e32c:	882d      	ldrh	r5, [r5, #0]
9001e32e:	2300      	movs	r3, #0
9001e330:	6830      	ldr	r0, [r6, #0]
9001e332:	240e      	movs	r4, #14
9001e334:	429d      	cmp	r5, r3
9001e336:	d90f      	bls.n	9001e358 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001e338:	fb04 0203 	mla	r2, r4, r3, r0
9001e33c:	3301      	adds	r3, #1
9001e33e:	7b11      	ldrb	r1, [r2, #12]
9001e340:	f36f 1145 	bfc	r1, #5, #1
9001e344:	7311      	strb	r1, [r2, #12]
9001e346:	e7f5      	b.n	9001e334 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001e348:	6822      	ldr	r2, [r4, #0]
9001e34a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001e34e:	6802      	ldr	r2, [r0, #0]
9001e350:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001e354:	3301      	adds	r3, #1
9001e356:	e7e7      	b.n	9001e328 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001e358:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001e35a:	bf00      	nop
9001e35c:	24027f08 	.word	0x24027f08
9001e360:	24027f24 	.word	0x24027f24
9001e364:	24027f28 	.word	0x24027f28
9001e368:	24027f1c 	.word	0x24027f1c
9001e36c:	24027f0c 	.word	0x24027f0c
9001e370:	24027f14 	.word	0x24027f14
9001e374:	24027f26 	.word	0x24027f26
9001e378:	24027f10 	.word	0x24027f10
9001e37c:	24027f20 	.word	0x24027f20
9001e380:	24027f18 	.word	0x24027f18

9001e384 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001e384:	4b06      	ldr	r3, [pc, #24]	@ (9001e3a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001e386:	681b      	ldr	r3, [r3, #0]
9001e388:	b943      	cbnz	r3, 9001e39c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001e38a:	b139      	cbz	r1, 9001e39c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001e38c:	4b05      	ldr	r3, [pc, #20]	@ (9001e3a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001e38e:	801a      	strh	r2, [r3, #0]
9001e390:	4b05      	ldr	r3, [pc, #20]	@ (9001e3a8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001e392:	6019      	str	r1, [r3, #0]
9001e394:	4b05      	ldr	r3, [pc, #20]	@ (9001e3ac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001e396:	6018      	str	r0, [r3, #0]
9001e398:	f7ff bf96 	b.w	9001e2c8 <_ZN8touchgfx6Bitmap10clearCacheEv>
9001e39c:	4770      	bx	lr
9001e39e:	bf00      	nop
9001e3a0:	24027f14 	.word	0x24027f14
9001e3a4:	24027f28 	.word	0x24027f28
9001e3a8:	24027f10 	.word	0x24027f10
9001e3ac:	24027f08 	.word	0x24027f08

9001e3b0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001e3b0:	b470      	push	{r4, r5, r6}
9001e3b2:	4c07      	ldr	r4, [pc, #28]	@ (9001e3d0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001e3b4:	4605      	mov	r5, r0
9001e3b6:	4610      	mov	r0, r2
9001e3b8:	9a03      	ldr	r2, [sp, #12]
9001e3ba:	6826      	ldr	r6, [r4, #0]
9001e3bc:	b936      	cbnz	r6, 9001e3cc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001e3be:	6025      	str	r5, [r4, #0]
9001e3c0:	4c04      	ldr	r4, [pc, #16]	@ (9001e3d4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001e3c2:	8021      	strh	r1, [r4, #0]
9001e3c4:	4619      	mov	r1, r3
9001e3c6:	bc70      	pop	{r4, r5, r6}
9001e3c8:	f7ff bfdc 	b.w	9001e384 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001e3cc:	bc70      	pop	{r4, r5, r6}
9001e3ce:	4770      	bx	lr
9001e3d0:	24027f2c 	.word	0x24027f2c
9001e3d4:	24027f24 	.word	0x24027f24

9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001e3d8:	4a12      	ldr	r2, [pc, #72]	@ (9001e424 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001e3da:	8803      	ldrh	r3, [r0, #0]
9001e3dc:	8812      	ldrh	r2, [r2, #0]
9001e3de:	4293      	cmp	r3, r2
9001e3e0:	d207      	bcs.n	9001e3f2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001e3e2:	4a11      	ldr	r2, [pc, #68]	@ (9001e428 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001e3e4:	2114      	movs	r1, #20
9001e3e6:	6812      	ldr	r2, [r2, #0]
9001e3e8:	fb01 2303 	mla	r3, r1, r3, r2
9001e3ec:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001e3f0:	4770      	bx	lr
9001e3f2:	490e      	ldr	r1, [pc, #56]	@ (9001e42c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001e3f4:	8809      	ldrh	r1, [r1, #0]
9001e3f6:	4411      	add	r1, r2
9001e3f8:	428b      	cmp	r3, r1
9001e3fa:	da04      	bge.n	9001e406 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001e3fc:	1a9b      	subs	r3, r3, r2
9001e3fe:	4a0c      	ldr	r2, [pc, #48]	@ (9001e430 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001e400:	210e      	movs	r1, #14
9001e402:	6812      	ldr	r2, [r2, #0]
9001e404:	e7f0      	b.n	9001e3e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001e406:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001e40a:	4293      	cmp	r3, r2
9001e40c:	d108      	bne.n	9001e420 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001e40e:	4b09      	ldr	r3, [pc, #36]	@ (9001e434 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001e410:	781b      	ldrb	r3, [r3, #0]
9001e412:	b91b      	cbnz	r3, 9001e41c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001e414:	4b08      	ldr	r3, [pc, #32]	@ (9001e438 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001e416:	f9b3 0000 	ldrsh.w	r0, [r3]
9001e41a:	4770      	bx	lr
9001e41c:	4b07      	ldr	r3, [pc, #28]	@ (9001e43c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001e41e:	e7fa      	b.n	9001e416 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001e420:	2000      	movs	r0, #0
9001e422:	4770      	bx	lr
9001e424:	24027f24 	.word	0x24027f24
9001e428:	24027f2c 	.word	0x24027f2c
9001e42c:	24027f28 	.word	0x24027f28
9001e430:	24027f0c 	.word	0x24027f0c
9001e434:	24027e94 	.word	0x24027e94
9001e438:	24027e96 	.word	0x24027e96
9001e43c:	24027e98 	.word	0x24027e98

9001e440 <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001e440:	4a12      	ldr	r2, [pc, #72]	@ (9001e48c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001e442:	8803      	ldrh	r3, [r0, #0]
9001e444:	8812      	ldrh	r2, [r2, #0]
9001e446:	4293      	cmp	r3, r2
9001e448:	d207      	bcs.n	9001e45a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001e44a:	4a11      	ldr	r2, [pc, #68]	@ (9001e490 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001e44c:	2114      	movs	r1, #20
9001e44e:	6812      	ldr	r2, [r2, #0]
9001e450:	fb01 2303 	mla	r3, r1, r3, r2
9001e454:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001e458:	4770      	bx	lr
9001e45a:	490e      	ldr	r1, [pc, #56]	@ (9001e494 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001e45c:	8809      	ldrh	r1, [r1, #0]
9001e45e:	4411      	add	r1, r2
9001e460:	428b      	cmp	r3, r1
9001e462:	da04      	bge.n	9001e46e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001e464:	1a9b      	subs	r3, r3, r2
9001e466:	4a0c      	ldr	r2, [pc, #48]	@ (9001e498 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001e468:	210e      	movs	r1, #14
9001e46a:	6812      	ldr	r2, [r2, #0]
9001e46c:	e7f0      	b.n	9001e450 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001e46e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001e472:	4293      	cmp	r3, r2
9001e474:	d108      	bne.n	9001e488 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001e476:	4b09      	ldr	r3, [pc, #36]	@ (9001e49c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001e478:	781b      	ldrb	r3, [r3, #0]
9001e47a:	b91b      	cbnz	r3, 9001e484 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001e47c:	4b08      	ldr	r3, [pc, #32]	@ (9001e4a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001e47e:	f9b3 0000 	ldrsh.w	r0, [r3]
9001e482:	4770      	bx	lr
9001e484:	4b07      	ldr	r3, [pc, #28]	@ (9001e4a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001e486:	e7fa      	b.n	9001e47e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001e488:	2000      	movs	r0, #0
9001e48a:	4770      	bx	lr
9001e48c:	24027f24 	.word	0x24027f24
9001e490:	24027f2c 	.word	0x24027f2c
9001e494:	24027f28 	.word	0x24027f28
9001e498:	24027f0c 	.word	0x24027f0c
9001e49c:	24027e94 	.word	0x24027e94
9001e4a0:	24027e98 	.word	0x24027e98
9001e4a4:	24027e96 	.word	0x24027e96

9001e4a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001e4a8:	4a1f      	ldr	r2, [pc, #124]	@ (9001e528 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
9001e4aa:	b510      	push	{r4, lr}
9001e4ac:	880b      	ldrh	r3, [r1, #0]
9001e4ae:	8812      	ldrh	r2, [r2, #0]
9001e4b0:	4293      	cmp	r3, r2
9001e4b2:	d213      	bcs.n	9001e4dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001e4b4:	4a1d      	ldr	r2, [pc, #116]	@ (9001e52c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
9001e4b6:	2114      	movs	r1, #20
9001e4b8:	6812      	ldr	r2, [r2, #0]
9001e4ba:	fb01 2303 	mla	r3, r1, r3, r2
9001e4be:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001e4c2:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001e4c6:	8a1a      	ldrh	r2, [r3, #16]
9001e4c8:	8a5b      	ldrh	r3, [r3, #18]
9001e4ca:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001e4ce:	8004      	strh	r4, [r0, #0]
9001e4d0:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001e4d4:	8041      	strh	r1, [r0, #2]
9001e4d6:	8082      	strh	r2, [r0, #4]
9001e4d8:	80c3      	strh	r3, [r0, #6]
9001e4da:	e00e      	b.n	9001e4fa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001e4dc:	4914      	ldr	r1, [pc, #80]	@ (9001e530 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
9001e4de:	8809      	ldrh	r1, [r1, #0]
9001e4e0:	4411      	add	r1, r2
9001e4e2:	428b      	cmp	r3, r1
9001e4e4:	da0a      	bge.n	9001e4fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
9001e4e6:	1a9b      	subs	r3, r3, r2
9001e4e8:	4a12      	ldr	r2, [pc, #72]	@ (9001e534 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001e4ea:	210e      	movs	r1, #14
9001e4ec:	6812      	ldr	r2, [r2, #0]
9001e4ee:	fb01 2303 	mla	r3, r1, r3, r2
9001e4f2:	681a      	ldr	r2, [r3, #0]
9001e4f4:	6002      	str	r2, [r0, #0]
9001e4f6:	685a      	ldr	r2, [r3, #4]
9001e4f8:	6042      	str	r2, [r0, #4]
9001e4fa:	bd10      	pop	{r4, pc}
9001e4fc:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001e500:	4293      	cmp	r3, r2
9001e502:	d10b      	bne.n	9001e51c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
9001e504:	4b0c      	ldr	r3, [pc, #48]	@ (9001e538 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001e506:	f9b3 1000 	ldrsh.w	r1, [r3]
9001e50a:	4b0c      	ldr	r3, [pc, #48]	@ (9001e53c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001e50c:	8081      	strh	r1, [r0, #4]
9001e50e:	f9b3 2000 	ldrsh.w	r2, [r3]
9001e512:	2300      	movs	r3, #0
9001e514:	80c2      	strh	r2, [r0, #6]
9001e516:	8003      	strh	r3, [r0, #0]
9001e518:	8043      	strh	r3, [r0, #2]
9001e51a:	e7ee      	b.n	9001e4fa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001e51c:	2300      	movs	r3, #0
9001e51e:	8003      	strh	r3, [r0, #0]
9001e520:	8043      	strh	r3, [r0, #2]
9001e522:	8083      	strh	r3, [r0, #4]
9001e524:	e7d8      	b.n	9001e4d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001e526:	bf00      	nop
9001e528:	24027f24 	.word	0x24027f24
9001e52c:	24027f2c 	.word	0x24027f2c
9001e530:	24027f28 	.word	0x24027f28
9001e534:	24027f0c 	.word	0x24027f0c
9001e538:	24027e90 	.word	0x24027e90
9001e53c:	24027e92 	.word	0x24027e92

9001e540 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001e540:	4a17      	ldr	r2, [pc, #92]	@ (9001e5a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001e542:	8803      	ldrh	r3, [r0, #0]
9001e544:	8812      	ldrh	r2, [r2, #0]
9001e546:	4293      	cmp	r3, r2
9001e548:	d213      	bcs.n	9001e572 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001e54a:	4a16      	ldr	r2, [pc, #88]	@ (9001e5a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001e54c:	2114      	movs	r1, #20
9001e54e:	6812      	ldr	r2, [r2, #0]
9001e550:	fb01 2303 	mla	r3, r1, r3, r2
9001e554:	8a1a      	ldrh	r2, [r3, #16]
9001e556:	8919      	ldrh	r1, [r3, #8]
9001e558:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001e55c:	428a      	cmp	r2, r1
9001e55e:	db1d      	blt.n	9001e59c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001e560:	8a58      	ldrh	r0, [r3, #18]
9001e562:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001e566:	895b      	ldrh	r3, [r3, #10]
9001e568:	4298      	cmp	r0, r3
9001e56a:	bfac      	ite	ge
9001e56c:	2000      	movge	r0, #0
9001e56e:	2001      	movlt	r0, #1
9001e570:	4770      	bx	lr
9001e572:	490d      	ldr	r1, [pc, #52]	@ (9001e5a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001e574:	8809      	ldrh	r1, [r1, #0]
9001e576:	4411      	add	r1, r2
9001e578:	428b      	cmp	r3, r1
9001e57a:	da0d      	bge.n	9001e598 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001e57c:	1a9b      	subs	r3, r3, r2
9001e57e:	4a0b      	ldr	r2, [pc, #44]	@ (9001e5ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001e580:	210e      	movs	r1, #14
9001e582:	6812      	ldr	r2, [r2, #0]
9001e584:	fb01 2303 	mla	r3, r1, r3, r2
9001e588:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001e58c:	891a      	ldrh	r2, [r3, #8]
9001e58e:	4291      	cmp	r1, r2
9001e590:	db04      	blt.n	9001e59c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001e592:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001e596:	e7e6      	b.n	9001e566 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001e598:	2000      	movs	r0, #0
9001e59a:	4770      	bx	lr
9001e59c:	2001      	movs	r0, #1
9001e59e:	4770      	bx	lr
9001e5a0:	24027f24 	.word	0x24027f24
9001e5a4:	24027f2c 	.word	0x24027f2c
9001e5a8:	24027f28 	.word	0x24027f28
9001e5ac:	24027f0c 	.word	0x24027f0c

9001e5b0 <_ZNK8touchgfx6Bitmap7getDataEv>:
9001e5b0:	4a12      	ldr	r2, [pc, #72]	@ (9001e5fc <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001e5b2:	8803      	ldrh	r3, [r0, #0]
9001e5b4:	8811      	ldrh	r1, [r2, #0]
9001e5b6:	428b      	cmp	r3, r1
9001e5b8:	d20b      	bcs.n	9001e5d2 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001e5ba:	4a11      	ldr	r2, [pc, #68]	@ (9001e600 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001e5bc:	6812      	ldr	r2, [r2, #0]
9001e5be:	b112      	cbz	r2, 9001e5c6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001e5c0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001e5c4:	b9c0      	cbnz	r0, 9001e5f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001e5c6:	4a0f      	ldr	r2, [pc, #60]	@ (9001e604 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001e5c8:	6811      	ldr	r1, [r2, #0]
9001e5ca:	2214      	movs	r2, #20
9001e5cc:	4353      	muls	r3, r2
9001e5ce:	58c8      	ldr	r0, [r1, r3]
9001e5d0:	4770      	bx	lr
9001e5d2:	4a0d      	ldr	r2, [pc, #52]	@ (9001e608 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001e5d4:	8812      	ldrh	r2, [r2, #0]
9001e5d6:	440a      	add	r2, r1
9001e5d8:	4293      	cmp	r3, r2
9001e5da:	da04      	bge.n	9001e5e6 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001e5dc:	4a08      	ldr	r2, [pc, #32]	@ (9001e600 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001e5de:	6812      	ldr	r2, [r2, #0]
9001e5e0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001e5e4:	4770      	bx	lr
9001e5e6:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001e5ea:	4293      	cmp	r3, r2
9001e5ec:	d103      	bne.n	9001e5f6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001e5ee:	4b07      	ldr	r3, [pc, #28]	@ (9001e60c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001e5f0:	681b      	ldr	r3, [r3, #0]
9001e5f2:	6c58      	ldr	r0, [r3, #68]	@ 0x44
9001e5f4:	4770      	bx	lr
9001e5f6:	2000      	movs	r0, #0
9001e5f8:	4770      	bx	lr
9001e5fa:	bf00      	nop
9001e5fc:	24027f24 	.word	0x24027f24
9001e600:	24027f08 	.word	0x24027f08
9001e604:	24027f2c 	.word	0x24027f2c
9001e608:	24027f28 	.word	0x24027f28
9001e60c:	24027e9c 	.word	0x24027e9c

9001e610 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001e610:	4b24      	ldr	r3, [pc, #144]	@ (9001e6a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001e612:	8802      	ldrh	r2, [r0, #0]
9001e614:	8818      	ldrh	r0, [r3, #0]
9001e616:	4282      	cmp	r2, r0
9001e618:	d221      	bcs.n	9001e65e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001e61a:	4b23      	ldr	r3, [pc, #140]	@ (9001e6a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001e61c:	6819      	ldr	r1, [r3, #0]
9001e61e:	2314      	movs	r3, #20
9001e620:	fb03 1302 	mla	r3, r3, r2, r1
9001e624:	6858      	ldr	r0, [r3, #4]
9001e626:	2800      	cmp	r0, #0
9001e628:	d03a      	beq.n	9001e6a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001e62a:	4920      	ldr	r1, [pc, #128]	@ (9001e6ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001e62c:	6809      	ldr	r1, [r1, #0]
9001e62e:	2900      	cmp	r1, #0
9001e630:	d036      	beq.n	9001e6a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001e632:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001e636:	2900      	cmp	r1, #0
9001e638:	d032      	beq.n	9001e6a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001e63a:	891a      	ldrh	r2, [r3, #8]
9001e63c:	8958      	ldrh	r0, [r3, #10]
9001e63e:	4350      	muls	r0, r2
9001e640:	7c5a      	ldrb	r2, [r3, #17]
9001e642:	7cdb      	ldrb	r3, [r3, #19]
9001e644:	0952      	lsrs	r2, r2, #5
9001e646:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001e64a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001e64e:	2b0b      	cmp	r3, #11
9001e650:	bf18      	it	ne
9001e652:	0040      	lslne	r0, r0, #1
9001e654:	3003      	adds	r0, #3
9001e656:	f020 0003 	bic.w	r0, r0, #3
9001e65a:	4408      	add	r0, r1
9001e65c:	4770      	bx	lr
9001e65e:	4b14      	ldr	r3, [pc, #80]	@ (9001e6b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001e660:	881b      	ldrh	r3, [r3, #0]
9001e662:	4403      	add	r3, r0
9001e664:	429a      	cmp	r2, r3
9001e666:	da1a      	bge.n	9001e69e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001e668:	4b12      	ldr	r3, [pc, #72]	@ (9001e6b4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001e66a:	1a10      	subs	r0, r2, r0
9001e66c:	210e      	movs	r1, #14
9001e66e:	681b      	ldr	r3, [r3, #0]
9001e670:	fb01 3000 	mla	r0, r1, r0, r3
9001e674:	7b03      	ldrb	r3, [r0, #12]
9001e676:	f003 031f 	and.w	r3, r3, #31
9001e67a:	2b0b      	cmp	r3, #11
9001e67c:	d10b      	bne.n	9001e696 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001e67e:	8903      	ldrh	r3, [r0, #8]
9001e680:	8940      	ldrh	r0, [r0, #10]
9001e682:	4358      	muls	r0, r3
9001e684:	4b09      	ldr	r3, [pc, #36]	@ (9001e6ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001e686:	3003      	adds	r0, #3
9001e688:	6819      	ldr	r1, [r3, #0]
9001e68a:	f020 0303 	bic.w	r3, r0, #3
9001e68e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001e692:	4418      	add	r0, r3
9001e694:	4770      	bx	lr
9001e696:	2b0d      	cmp	r3, #13
9001e698:	d101      	bne.n	9001e69e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001e69a:	300d      	adds	r0, #13
9001e69c:	4770      	bx	lr
9001e69e:	2000      	movs	r0, #0
9001e6a0:	4770      	bx	lr
9001e6a2:	bf00      	nop
9001e6a4:	24027f24 	.word	0x24027f24
9001e6a8:	24027f2c 	.word	0x24027f2c
9001e6ac:	24027f08 	.word	0x24027f08
9001e6b0:	24027f28 	.word	0x24027f28
9001e6b4:	24027f0c 	.word	0x24027f0c

9001e6b8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001e6b8:	4a17      	ldr	r2, [pc, #92]	@ (9001e718 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
9001e6ba:	b510      	push	{r4, lr}
9001e6bc:	8803      	ldrh	r3, [r0, #0]
9001e6be:	8812      	ldrh	r2, [r2, #0]
9001e6c0:	4293      	cmp	r3, r2
9001e6c2:	d20c      	bcs.n	9001e6de <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
9001e6c4:	4a15      	ldr	r2, [pc, #84]	@ (9001e71c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
9001e6c6:	2114      	movs	r1, #20
9001e6c8:	6812      	ldr	r2, [r2, #0]
9001e6ca:	fb01 2303 	mla	r3, r1, r3, r2
9001e6ce:	7c58      	ldrb	r0, [r3, #17]
9001e6d0:	0942      	lsrs	r2, r0, #5
9001e6d2:	7cd8      	ldrb	r0, [r3, #19]
9001e6d4:	f3c0 1042 	ubfx	r0, r0, #5, #3
9001e6d8:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
9001e6dc:	bd10      	pop	{r4, pc}
9001e6de:	4910      	ldr	r1, [pc, #64]	@ (9001e720 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
9001e6e0:	8809      	ldrh	r1, [r1, #0]
9001e6e2:	4411      	add	r1, r2
9001e6e4:	428b      	cmp	r3, r1
9001e6e6:	da09      	bge.n	9001e6fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
9001e6e8:	1a9b      	subs	r3, r3, r2
9001e6ea:	4a0e      	ldr	r2, [pc, #56]	@ (9001e724 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
9001e6ec:	210e      	movs	r1, #14
9001e6ee:	6812      	ldr	r2, [r2, #0]
9001e6f0:	fb01 2303 	mla	r3, r1, r3, r2
9001e6f4:	7b18      	ldrb	r0, [r3, #12]
9001e6f6:	f000 001f 	and.w	r0, r0, #31
9001e6fa:	e7ef      	b.n	9001e6dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001e6fc:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001e700:	4293      	cmp	r3, r2
9001e702:	d106      	bne.n	9001e712 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
9001e704:	f7f6 fdcc 	bl	900152a0 <_ZN8touchgfx3HAL3lcdEv>
9001e708:	6803      	ldr	r3, [r0, #0]
9001e70a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e70e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e710:	4718      	bx	r3
9001e712:	2000      	movs	r0, #0
9001e714:	e7e2      	b.n	9001e6dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001e716:	bf00      	nop
9001e718:	24027f24 	.word	0x24027f24
9001e71c:	24027f2c 	.word	0x24027f2c
9001e720:	24027f28 	.word	0x24027f28
9001e724:	24027f0c 	.word	0x24027f0c

9001e728 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001e728:	2010      	movs	r0, #16
9001e72a:	4770      	bx	lr

9001e72c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001e72c:	4b02      	ldr	r3, [pc, #8]	@ (9001e738 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001e72e:	8818      	ldrh	r0, [r3, #0]
9001e730:	0040      	lsls	r0, r0, #1
9001e732:	b280      	uxth	r0, r0
9001e734:	4770      	bx	lr
9001e736:	bf00      	nop
9001e738:	24027e96 	.word	0x24027e96

9001e73c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001e73c:	2bff      	cmp	r3, #255	@ 0xff
9001e73e:	d050      	beq.n	9001e7e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001e740:	2a0b      	cmp	r2, #11
9001e742:	d04a      	beq.n	9001e7da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001e744:	d80e      	bhi.n	9001e764 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001e746:	2a03      	cmp	r2, #3
9001e748:	d03f      	beq.n	9001e7ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
9001e74a:	d804      	bhi.n	9001e756 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001e74c:	2a01      	cmp	r2, #1
9001e74e:	d03e      	beq.n	9001e7ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
9001e750:	d93f      	bls.n	9001e7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
9001e752:	6b80      	ldr	r0, [r0, #56]	@ 0x38
9001e754:	4770      	bx	lr
9001e756:	2a09      	cmp	r2, #9
9001e758:	d03f      	beq.n	9001e7da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001e75a:	d83c      	bhi.n	9001e7d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001e75c:	2a08      	cmp	r2, #8
9001e75e:	d03a      	beq.n	9001e7d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001e760:	2000      	movs	r0, #0
9001e762:	4770      	bx	lr
9001e764:	2a2f      	cmp	r2, #47	@ 0x2f
9001e766:	d024      	beq.n	9001e7b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
9001e768:	d80d      	bhi.n	9001e786 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
9001e76a:	2a2d      	cmp	r2, #45	@ 0x2d
9001e76c:	d014      	beq.n	9001e798 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
9001e76e:	d826      	bhi.n	9001e7be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001e770:	2a2c      	cmp	r2, #44	@ 0x2c
9001e772:	d1f5      	bne.n	9001e760 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001e774:	684b      	ldr	r3, [r1, #4]
9001e776:	781b      	ldrb	r3, [r3, #0]
9001e778:	2b01      	cmp	r3, #1
9001e77a:	d018      	beq.n	9001e7ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
9001e77c:	d323      	bcc.n	9001e7c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
9001e77e:	2b02      	cmp	r3, #2
9001e780:	d1ee      	bne.n	9001e760 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001e782:	6880      	ldr	r0, [r0, #8]
9001e784:	4770      	bx	lr
9001e786:	2a31      	cmp	r2, #49	@ 0x31
9001e788:	d004      	beq.n	9001e794 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
9001e78a:	d328      	bcc.n	9001e7de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001e78c:	2a32      	cmp	r2, #50	@ 0x32
9001e78e:	d026      	beq.n	9001e7de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001e790:	2a33      	cmp	r2, #51	@ 0x33
9001e792:	d1e5      	bne.n	9001e760 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001e794:	6f00      	ldr	r0, [r0, #112]	@ 0x70
9001e796:	4770      	bx	lr
9001e798:	684b      	ldr	r3, [r1, #4]
9001e79a:	781b      	ldrb	r3, [r3, #0]
9001e79c:	2b01      	cmp	r3, #1
9001e79e:	d004      	beq.n	9001e7aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
9001e7a0:	d30b      	bcc.n	9001e7ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001e7a2:	2b02      	cmp	r3, #2
9001e7a4:	d1dc      	bne.n	9001e760 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001e7a6:	6900      	ldr	r0, [r0, #16]
9001e7a8:	4770      	bx	lr
9001e7aa:	6a00      	ldr	r0, [r0, #32]
9001e7ac:	4770      	bx	lr
9001e7ae:	6980      	ldr	r0, [r0, #24]
9001e7b0:	4770      	bx	lr
9001e7b2:	684b      	ldr	r3, [r1, #4]
9001e7b4:	781b      	ldrb	r3, [r3, #0]
9001e7b6:	2b00      	cmp	r3, #0
9001e7b8:	d1d2      	bne.n	9001e760 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001e7ba:	6b00      	ldr	r0, [r0, #48]	@ 0x30
9001e7bc:	4770      	bx	lr
9001e7be:	684b      	ldr	r3, [r1, #4]
9001e7c0:	781b      	ldrb	r3, [r3, #0]
9001e7c2:	2b00      	cmp	r3, #0
9001e7c4:	d1cc      	bne.n	9001e760 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001e7c6:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9001e7c8:	4770      	bx	lr
9001e7ca:	6c80      	ldr	r0, [r0, #72]	@ 0x48
9001e7cc:	4770      	bx	lr
9001e7ce:	6d00      	ldr	r0, [r0, #80]	@ 0x50
9001e7d0:	4770      	bx	lr
9001e7d2:	6c00      	ldr	r0, [r0, #64]	@ 0x40
9001e7d4:	4770      	bx	lr
9001e7d6:	6d80      	ldr	r0, [r0, #88]	@ 0x58
9001e7d8:	4770      	bx	lr
9001e7da:	6e00      	ldr	r0, [r0, #96]	@ 0x60
9001e7dc:	4770      	bx	lr
9001e7de:	6e80      	ldr	r0, [r0, #104]	@ 0x68
9001e7e0:	4770      	bx	lr
9001e7e2:	2a0b      	cmp	r2, #11
9001e7e4:	d049      	beq.n	9001e87a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001e7e6:	d80e      	bhi.n	9001e806 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
9001e7e8:	2a03      	cmp	r2, #3
9001e7ea:	d040      	beq.n	9001e86e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
9001e7ec:	d804      	bhi.n	9001e7f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
9001e7ee:	2a01      	cmp	r2, #1
9001e7f0:	d03f      	beq.n	9001e872 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
9001e7f2:	d940      	bls.n	9001e876 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
9001e7f4:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
9001e7f6:	4770      	bx	lr
9001e7f8:	2a09      	cmp	r2, #9
9001e7fa:	d03e      	beq.n	9001e87a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001e7fc:	d801      	bhi.n	9001e802 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
9001e7fe:	2a08      	cmp	r2, #8
9001e800:	d1ae      	bne.n	9001e760 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001e802:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
9001e804:	4770      	bx	lr
9001e806:	2a2f      	cmp	r2, #47	@ 0x2f
9001e808:	d024      	beq.n	9001e854 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
9001e80a:	d80d      	bhi.n	9001e828 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
9001e80c:	2a2d      	cmp	r2, #45	@ 0x2d
9001e80e:	d014      	beq.n	9001e83a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
9001e810:	d826      	bhi.n	9001e860 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
9001e812:	2a2c      	cmp	r2, #44	@ 0x2c
9001e814:	d1a4      	bne.n	9001e760 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001e816:	684b      	ldr	r3, [r1, #4]
9001e818:	781b      	ldrb	r3, [r3, #0]
9001e81a:	2b01      	cmp	r3, #1
9001e81c:	d018      	beq.n	9001e850 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
9001e81e:	d324      	bcc.n	9001e86a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
9001e820:	2b02      	cmp	r3, #2
9001e822:	d19d      	bne.n	9001e760 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001e824:	68c0      	ldr	r0, [r0, #12]
9001e826:	4770      	bx	lr
9001e828:	2a31      	cmp	r2, #49	@ 0x31
9001e82a:	d004      	beq.n	9001e836 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
9001e82c:	d327      	bcc.n	9001e87e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001e82e:	2a32      	cmp	r2, #50	@ 0x32
9001e830:	d025      	beq.n	9001e87e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001e832:	2a33      	cmp	r2, #51	@ 0x33
9001e834:	d194      	bne.n	9001e760 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001e836:	6f40      	ldr	r0, [r0, #116]	@ 0x74
9001e838:	4770      	bx	lr
9001e83a:	684b      	ldr	r3, [r1, #4]
9001e83c:	781b      	ldrb	r3, [r3, #0]
9001e83e:	2b01      	cmp	r3, #1
9001e840:	d004      	beq.n	9001e84c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001e842:	d30b      	bcc.n	9001e85c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
9001e844:	2b02      	cmp	r3, #2
9001e846:	d18b      	bne.n	9001e760 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001e848:	6940      	ldr	r0, [r0, #20]
9001e84a:	4770      	bx	lr
9001e84c:	6a40      	ldr	r0, [r0, #36]	@ 0x24
9001e84e:	4770      	bx	lr
9001e850:	69c0      	ldr	r0, [r0, #28]
9001e852:	4770      	bx	lr
9001e854:	684b      	ldr	r3, [r1, #4]
9001e856:	781b      	ldrb	r3, [r3, #0]
9001e858:	2b00      	cmp	r3, #0
9001e85a:	d181      	bne.n	9001e760 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001e85c:	6b40      	ldr	r0, [r0, #52]	@ 0x34
9001e85e:	4770      	bx	lr
9001e860:	684b      	ldr	r3, [r1, #4]
9001e862:	781b      	ldrb	r3, [r3, #0]
9001e864:	2b00      	cmp	r3, #0
9001e866:	f47f af7b 	bne.w	9001e760 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001e86a:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
9001e86c:	4770      	bx	lr
9001e86e:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
9001e870:	4770      	bx	lr
9001e872:	6d40      	ldr	r0, [r0, #84]	@ 0x54
9001e874:	4770      	bx	lr
9001e876:	6c40      	ldr	r0, [r0, #68]	@ 0x44
9001e878:	4770      	bx	lr
9001e87a:	6e40      	ldr	r0, [r0, #100]	@ 0x64
9001e87c:	4770      	bx	lr
9001e87e:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
9001e880:	4770      	bx	lr

9001e882 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e882:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e886:	b087      	sub	sp, #28
9001e888:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001e88a:	9205      	str	r2, [sp, #20]
9001e88c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001e890:	9101      	str	r1, [sp, #4]
9001e892:	9202      	str	r2, [sp, #8]
9001e894:	6841      	ldr	r1, [r0, #4]
9001e896:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001e89a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001e89e:	fb01 2404 	mla	r4, r1, r4, r2
9001e8a2:	6802      	ldr	r2, [r0, #0]
9001e8a4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001e8a8:	f8de 2000 	ldr.w	r2, [lr]
9001e8ac:	9203      	str	r2, [sp, #12]
9001e8ae:	f8de 2004 	ldr.w	r2, [lr, #4]
9001e8b2:	3204      	adds	r2, #4
9001e8b4:	9204      	str	r2, [sp, #16]
9001e8b6:	9a02      	ldr	r2, [sp, #8]
9001e8b8:	43d6      	mvns	r6, r2
9001e8ba:	b2f6      	uxtb	r6, r6
9001e8bc:	9a01      	ldr	r2, [sp, #4]
9001e8be:	2a00      	cmp	r2, #0
9001e8c0:	dc03      	bgt.n	9001e8ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001e8c2:	9a05      	ldr	r2, [sp, #20]
9001e8c4:	2a00      	cmp	r2, #0
9001e8c6:	f340 8129 	ble.w	9001eb1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001e8ca:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001e8cc:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001e8d0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001e8d4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001e8d6:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001e8da:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001e8de:	2b00      	cmp	r3, #0
9001e8e0:	dd0e      	ble.n	9001e900 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001e8e2:	1408      	asrs	r0, r1, #16
9001e8e4:	d405      	bmi.n	9001e8f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001e8e6:	4560      	cmp	r0, ip
9001e8e8:	da03      	bge.n	9001e8f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001e8ea:	1410      	asrs	r0, r2, #16
9001e8ec:	d401      	bmi.n	9001e8f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001e8ee:	42b8      	cmp	r0, r7
9001e8f0:	db07      	blt.n	9001e902 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001e8f2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001e8f4:	3b01      	subs	r3, #1
9001e8f6:	3402      	adds	r4, #2
9001e8f8:	4401      	add	r1, r0
9001e8fa:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001e8fc:	4402      	add	r2, r0
9001e8fe:	e7ee      	b.n	9001e8de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001e900:	d071      	beq.n	9001e9e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001e902:	1e58      	subs	r0, r3, #1
9001e904:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001e906:	fb05 1500 	mla	r5, r5, r0, r1
9001e90a:	142d      	asrs	r5, r5, #16
9001e90c:	d45f      	bmi.n	9001e9ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001e90e:	4565      	cmp	r5, ip
9001e910:	da5d      	bge.n	9001e9ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001e912:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001e914:	fb05 2000 	mla	r0, r5, r0, r2
9001e918:	1400      	asrs	r0, r0, #16
9001e91a:	d458      	bmi.n	9001e9ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001e91c:	42b8      	cmp	r0, r7
9001e91e:	da56      	bge.n	9001e9ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001e920:	4699      	mov	r9, r3
9001e922:	46a2      	mov	sl, r4
9001e924:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001e928:	f1b9 0f00 	cmp.w	r9, #0
9001e92c:	dd57      	ble.n	9001e9de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001e92e:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001e932:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001e936:	9803      	ldr	r0, [sp, #12]
9001e938:	140d      	asrs	r5, r1, #16
9001e93a:	f109 39ff 	add.w	r9, r9, #4294967295
9001e93e:	fb07 000c 	mla	r0, r7, ip, r0
9001e942:	5d40      	ldrb	r0, [r0, r5]
9001e944:	9d04      	ldr	r5, [sp, #16]
9001e946:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001e94a:	f8ba 5000 	ldrh.w	r5, [sl]
9001e94e:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001e952:	122f      	asrs	r7, r5, #8
9001e954:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001e958:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e95c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e960:	00ed      	lsls	r5, r5, #3
9001e962:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001e966:	fb17 f706 	smulbb	r7, r7, r6
9001e96a:	b2ed      	uxtb	r5, r5
9001e96c:	fb18 f806 	smulbb	r8, r8, r6
9001e970:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001e974:	10c7      	asrs	r7, r0, #3
9001e976:	fb15 f506 	smulbb	r5, r5, r6
9001e97a:	00c0      	lsls	r0, r0, #3
9001e97c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e980:	fa1f fc8c 	uxth.w	ip, ip
9001e984:	b2c0      	uxtb	r0, r0
9001e986:	fb07 870b 	mla	r7, r7, fp, r8
9001e98a:	fb00 500b 	mla	r0, r0, fp, r5
9001e98e:	f10c 0501 	add.w	r5, ip, #1
9001e992:	b2bf      	uxth	r7, r7
9001e994:	b280      	uxth	r0, r0
9001e996:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001e99a:	f107 0801 	add.w	r8, r7, #1
9001e99e:	1c45      	adds	r5, r0, #1
9001e9a0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001e9a4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e9a8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001e9ac:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001e9ae:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001e9b2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001e9b6:	4401      	add	r1, r0
9001e9b8:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001e9bc:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001e9be:	ea45 0c0c 	orr.w	ip, r5, ip
9001e9c2:	4402      	add	r2, r0
9001e9c4:	ea4c 0c08 	orr.w	ip, ip, r8
9001e9c8:	f82a cb02 	strh.w	ip, [sl], #2
9001e9cc:	e7ac      	b.n	9001e928 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001e9ce:	f04f 0800 	mov.w	r8, #0
9001e9d2:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001e9d6:	eb03 0008 	add.w	r0, r3, r8
9001e9da:	2800      	cmp	r0, #0
9001e9dc:	dc41      	bgt.n	9001ea62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001e9de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e9e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e9e6:	9b01      	ldr	r3, [sp, #4]
9001e9e8:	2b00      	cmp	r3, #0
9001e9ea:	f340 8097 	ble.w	9001eb1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001e9ee:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001e9f2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e9f4:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e9f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e9fc:	eef0 6a62 	vmov.f32	s13, s5
9001ea00:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001ea04:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ea08:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ea0c:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001ea10:	eef0 6a43 	vmov.f32	s13, s6
9001ea14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ea18:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001ea1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ea20:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ea24:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ea28:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ea2c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ea30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ea34:	ee12 2a90 	vmov	r2, s5
9001ea38:	eef0 2a47 	vmov.f32	s5, s14
9001ea3c:	fb92 f3f3 	sdiv	r3, r2, r3
9001ea40:	ee13 2a10 	vmov	r2, s6
9001ea44:	9313      	str	r3, [sp, #76]	@ 0x4c
9001ea46:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ea48:	eeb0 3a67 	vmov.f32	s6, s15
9001ea4c:	fb92 f3f3 	sdiv	r3, r2, r3
9001ea50:	9314      	str	r3, [sp, #80]	@ 0x50
9001ea52:	9b01      	ldr	r3, [sp, #4]
9001ea54:	9a05      	ldr	r2, [sp, #20]
9001ea56:	3b01      	subs	r3, #1
9001ea58:	9301      	str	r3, [sp, #4]
9001ea5a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ea5c:	bf08      	it	eq
9001ea5e:	4613      	moveq	r3, r2
9001ea60:	e72c      	b.n	9001e8bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001ea62:	140f      	asrs	r7, r1, #16
9001ea64:	d453      	bmi.n	9001eb0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001ea66:	f8de 5008 	ldr.w	r5, [lr, #8]
9001ea6a:	42bd      	cmp	r5, r7
9001ea6c:	dd4f      	ble.n	9001eb0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001ea6e:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001ea72:	d44c      	bmi.n	9001eb0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001ea74:	f8de 000c 	ldr.w	r0, [lr, #12]
9001ea78:	4560      	cmp	r0, ip
9001ea7a:	dd48      	ble.n	9001eb0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001ea7c:	9803      	ldr	r0, [sp, #12]
9001ea7e:	b22d      	sxth	r5, r5
9001ea80:	fb0c 0505 	mla	r5, ip, r5, r0
9001ea84:	5de8      	ldrb	r0, [r5, r7]
9001ea86:	9d04      	ldr	r5, [sp, #16]
9001ea88:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001ea8c:	f06f 0501 	mvn.w	r5, #1
9001ea90:	fb05 fb08 	mul.w	fp, r5, r8
9001ea94:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001ea98:	f834 500b 	ldrh.w	r5, [r4, fp]
9001ea9c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001eaa0:	122f      	asrs	r7, r5, #8
9001eaa2:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001eaa6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001eaaa:	00ed      	lsls	r5, r5, #3
9001eaac:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001eab0:	fb17 f706 	smulbb	r7, r7, r6
9001eab4:	b2ed      	uxtb	r5, r5
9001eab6:	fb19 f906 	smulbb	r9, r9, r6
9001eaba:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001eabe:	10c7      	asrs	r7, r0, #3
9001eac0:	fb15 f506 	smulbb	r5, r5, r6
9001eac4:	00c0      	lsls	r0, r0, #3
9001eac6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001eaca:	fa1f fc8c 	uxth.w	ip, ip
9001eace:	b2c0      	uxtb	r0, r0
9001ead0:	fb07 970a 	mla	r7, r7, sl, r9
9001ead4:	fb00 500a 	mla	r0, r0, sl, r5
9001ead8:	f10c 0501 	add.w	r5, ip, #1
9001eadc:	b2bf      	uxth	r7, r7
9001eade:	b280      	uxth	r0, r0
9001eae0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001eae4:	f107 0901 	add.w	r9, r7, #1
9001eae8:	1c45      	adds	r5, r0, #1
9001eaea:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001eaee:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001eaf2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001eaf6:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001eafa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001eafe:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001eb02:	ea45 0c0c 	orr.w	ip, r5, ip
9001eb06:	ea4c 0c09 	orr.w	ip, ip, r9
9001eb0a:	f824 c00b 	strh.w	ip, [r4, fp]
9001eb0e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001eb10:	f108 38ff 	add.w	r8, r8, #4294967295
9001eb14:	4401      	add	r1, r0
9001eb16:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001eb18:	4402      	add	r2, r0
9001eb1a:	e75c      	b.n	9001e9d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001eb1c:	b007      	add	sp, #28
9001eb1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001eb22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001eb22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001eb26:	b085      	sub	sp, #20
9001eb28:	4693      	mov	fp, r2
9001eb2a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001eb2e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001eb30:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001eb32:	6870      	ldr	r0, [r6, #4]
9001eb34:	9100      	str	r1, [sp, #0]
9001eb36:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001eb3a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001eb3e:	fb00 2404 	mla	r4, r0, r4, r2
9001eb42:	6832      	ldr	r2, [r6, #0]
9001eb44:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001eb48:	682a      	ldr	r2, [r5, #0]
9001eb4a:	9201      	str	r2, [sp, #4]
9001eb4c:	686a      	ldr	r2, [r5, #4]
9001eb4e:	3204      	adds	r2, #4
9001eb50:	9202      	str	r2, [sp, #8]
9001eb52:	9a00      	ldr	r2, [sp, #0]
9001eb54:	2a00      	cmp	r2, #0
9001eb56:	dc03      	bgt.n	9001eb60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001eb58:	f1bb 0f00 	cmp.w	fp, #0
9001eb5c:	f340 80a0 	ble.w	9001eca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001eb60:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001eb62:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001eb66:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001eb6a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001eb6c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001eb70:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001eb74:	2b00      	cmp	r3, #0
9001eb76:	dd0c      	ble.n	9001eb92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001eb78:	1406      	asrs	r6, r0, #16
9001eb7a:	d405      	bmi.n	9001eb88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001eb7c:	454e      	cmp	r6, r9
9001eb7e:	da03      	bge.n	9001eb88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001eb80:	1416      	asrs	r6, r2, #16
9001eb82:	d401      	bmi.n	9001eb88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001eb84:	4546      	cmp	r6, r8
9001eb86:	db05      	blt.n	9001eb94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001eb88:	4470      	add	r0, lr
9001eb8a:	4462      	add	r2, ip
9001eb8c:	3b01      	subs	r3, #1
9001eb8e:	3402      	adds	r4, #2
9001eb90:	e7f0      	b.n	9001eb74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001eb92:	d00f      	beq.n	9001ebb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001eb94:	1e5e      	subs	r6, r3, #1
9001eb96:	fb0e 0706 	mla	r7, lr, r6, r0
9001eb9a:	143f      	asrs	r7, r7, #16
9001eb9c:	d541      	bpl.n	9001ec22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001eb9e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001eba2:	4698      	mov	r8, r3
9001eba4:	9603      	str	r6, [sp, #12]
9001eba6:	f1b8 0f00 	cmp.w	r8, #0
9001ebaa:	dc59      	bgt.n	9001ec60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001ebac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ebb0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ebb4:	9b00      	ldr	r3, [sp, #0]
9001ebb6:	2b00      	cmp	r3, #0
9001ebb8:	dd72      	ble.n	9001eca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001ebba:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ebbe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ebc0:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ebc4:	eeb0 6a62 	vmov.f32	s12, s5
9001ebc8:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ebcc:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ebd0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ebd4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001ebd8:	eeb0 6a43 	vmov.f32	s12, s6
9001ebdc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ebe0:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001ebe4:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ebe8:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ebec:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ebf0:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ebf4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ebf8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ebfc:	ee12 2a90 	vmov	r2, s5
9001ec00:	eef0 2a47 	vmov.f32	s5, s14
9001ec04:	fb92 fef3 	sdiv	lr, r2, r3
9001ec08:	ee13 2a10 	vmov	r2, s6
9001ec0c:	eeb0 3a67 	vmov.f32	s6, s15
9001ec10:	fb92 fcf3 	sdiv	ip, r2, r3
9001ec14:	9b00      	ldr	r3, [sp, #0]
9001ec16:	3b01      	subs	r3, #1
9001ec18:	9300      	str	r3, [sp, #0]
9001ec1a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ec1c:	bf08      	it	eq
9001ec1e:	465b      	moveq	r3, fp
9001ec20:	e797      	b.n	9001eb52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001ec22:	454f      	cmp	r7, r9
9001ec24:	dabb      	bge.n	9001eb9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001ec26:	fb0c 2606 	mla	r6, ip, r6, r2
9001ec2a:	1436      	asrs	r6, r6, #16
9001ec2c:	d4b7      	bmi.n	9001eb9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001ec2e:	4546      	cmp	r6, r8
9001ec30:	dab5      	bge.n	9001eb9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001ec32:	461e      	mov	r6, r3
9001ec34:	46a0      	mov	r8, r4
9001ec36:	2e00      	cmp	r6, #0
9001ec38:	ddb8      	ble.n	9001ebac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001ec3a:	1417      	asrs	r7, r2, #16
9001ec3c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001ec40:	9901      	ldr	r1, [sp, #4]
9001ec42:	ea4f 4920 	mov.w	r9, r0, asr #16
9001ec46:	4462      	add	r2, ip
9001ec48:	4470      	add	r0, lr
9001ec4a:	fb0a 1707 	mla	r7, sl, r7, r1
9001ec4e:	9902      	ldr	r1, [sp, #8]
9001ec50:	3e01      	subs	r6, #1
9001ec52:	f817 7009 	ldrb.w	r7, [r7, r9]
9001ec56:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001ec5a:	f828 7b02 	strh.w	r7, [r8], #2
9001ec5e:	e7ea      	b.n	9001ec36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001ec60:	ea5f 4920 	movs.w	r9, r0, asr #16
9001ec64:	d417      	bmi.n	9001ec96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001ec66:	68ae      	ldr	r6, [r5, #8]
9001ec68:	454e      	cmp	r6, r9
9001ec6a:	dd14      	ble.n	9001ec96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001ec6c:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001ec70:	d411      	bmi.n	9001ec96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001ec72:	68ef      	ldr	r7, [r5, #12]
9001ec74:	4557      	cmp	r7, sl
9001ec76:	dd0e      	ble.n	9001ec96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001ec78:	9f01      	ldr	r7, [sp, #4]
9001ec7a:	b236      	sxth	r6, r6
9001ec7c:	f06f 0101 	mvn.w	r1, #1
9001ec80:	fb0a 7606 	mla	r6, sl, r6, r7
9001ec84:	9f02      	ldr	r7, [sp, #8]
9001ec86:	f816 6009 	ldrb.w	r6, [r6, r9]
9001ec8a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001ec8e:	fb01 f608 	mul.w	r6, r1, r8
9001ec92:	9903      	ldr	r1, [sp, #12]
9001ec94:	538f      	strh	r7, [r1, r6]
9001ec96:	4470      	add	r0, lr
9001ec98:	4462      	add	r2, ip
9001ec9a:	f108 38ff 	add.w	r8, r8, #4294967295
9001ec9e:	e782      	b.n	9001eba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001eca0:	b005      	add	sp, #20
9001eca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001eca6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001eca6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ecaa:	b087      	sub	sp, #28
9001ecac:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001ecae:	9205      	str	r2, [sp, #20]
9001ecb0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001ecb4:	9102      	str	r1, [sp, #8]
9001ecb6:	9203      	str	r2, [sp, #12]
9001ecb8:	6861      	ldr	r1, [r4, #4]
9001ecba:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001ecbe:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001ecc2:	fb01 2000 	mla	r0, r1, r0, r2
9001ecc6:	6822      	ldr	r2, [r4, #0]
9001ecc8:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001eccc:	9200      	str	r2, [sp, #0]
9001ecce:	f8dc 2000 	ldr.w	r2, [ip]
9001ecd2:	9204      	str	r2, [sp, #16]
9001ecd4:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001ecd8:	3204      	adds	r2, #4
9001ecda:	9201      	str	r2, [sp, #4]
9001ecdc:	9a03      	ldr	r2, [sp, #12]
9001ecde:	43d5      	mvns	r5, r2
9001ece0:	b2ed      	uxtb	r5, r5
9001ece2:	9a02      	ldr	r2, [sp, #8]
9001ece4:	2a00      	cmp	r2, #0
9001ece6:	dc03      	bgt.n	9001ecf0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001ece8:	9a05      	ldr	r2, [sp, #20]
9001ecea:	2a00      	cmp	r2, #0
9001ecec:	f340 812c 	ble.w	9001ef48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001ecf0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001ecf2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001ecf6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ecfa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001ecfc:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001ed00:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001ed04:	2b00      	cmp	r3, #0
9001ed06:	dd10      	ble.n	9001ed2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001ed08:	140c      	asrs	r4, r1, #16
9001ed0a:	d405      	bmi.n	9001ed18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ed0c:	4574      	cmp	r4, lr
9001ed0e:	da03      	bge.n	9001ed18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ed10:	1414      	asrs	r4, r2, #16
9001ed12:	d401      	bmi.n	9001ed18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ed14:	42bc      	cmp	r4, r7
9001ed16:	db09      	blt.n	9001ed2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001ed18:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001ed1a:	3b01      	subs	r3, #1
9001ed1c:	9800      	ldr	r0, [sp, #0]
9001ed1e:	4421      	add	r1, r4
9001ed20:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001ed22:	3002      	adds	r0, #2
9001ed24:	4422      	add	r2, r4
9001ed26:	9000      	str	r0, [sp, #0]
9001ed28:	e7ec      	b.n	9001ed04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001ed2a:	d071      	beq.n	9001ee10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001ed2c:	1e5c      	subs	r4, r3, #1
9001ed2e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001ed30:	fb06 1604 	mla	r6, r6, r4, r1
9001ed34:	1436      	asrs	r6, r6, #16
9001ed36:	d45d      	bmi.n	9001edf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001ed38:	4576      	cmp	r6, lr
9001ed3a:	da5b      	bge.n	9001edf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001ed3c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
9001ed3e:	fb06 2404 	mla	r4, r6, r4, r2
9001ed42:	1424      	asrs	r4, r4, #16
9001ed44:	d456      	bmi.n	9001edf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001ed46:	42bc      	cmp	r4, r7
9001ed48:	da54      	bge.n	9001edf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001ed4a:	4698      	mov	r8, r3
9001ed4c:	f8dd 9000 	ldr.w	r9, [sp]
9001ed50:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001ed54:	f1b8 0f00 	cmp.w	r8, #0
9001ed58:	dd54      	ble.n	9001ee04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001ed5a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001ed5e:	1414      	asrs	r4, r2, #16
9001ed60:	9804      	ldr	r0, [sp, #16]
9001ed62:	140e      	asrs	r6, r1, #16
9001ed64:	f108 38ff 	add.w	r8, r8, #4294967295
9001ed68:	fb07 0404 	mla	r4, r7, r4, r0
9001ed6c:	9801      	ldr	r0, [sp, #4]
9001ed6e:	f814 e006 	ldrb.w	lr, [r4, r6]
9001ed72:	f8b9 4000 	ldrh.w	r4, [r9]
9001ed76:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001ed7a:	1227      	asrs	r7, r4, #8
9001ed7c:	eb00 0b0e 	add.w	fp, r0, lr
9001ed80:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001ed84:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ed88:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001ed8a:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001ed8e:	f89b b001 	ldrb.w	fp, [fp, #1]
9001ed92:	4401      	add	r1, r0
9001ed94:	fb16 f60a 	smulbb	r6, r6, sl
9001ed98:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001ed9a:	fb1b fb0a 	smulbb	fp, fp, sl
9001ed9e:	fb07 6705 	mla	r7, r7, r5, r6
9001eda2:	10e6      	asrs	r6, r4, #3
9001eda4:	00e4      	lsls	r4, r4, #3
9001eda6:	4402      	add	r2, r0
9001eda8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001edac:	b2bf      	uxth	r7, r7
9001edae:	b2e4      	uxtb	r4, r4
9001edb0:	fb06 b605 	mla	r6, r6, r5, fp
9001edb4:	fb14 f405 	smulbb	r4, r4, r5
9001edb8:	b2b6      	uxth	r6, r6
9001edba:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001edbe:	1c7c      	adds	r4, r7, #1
9001edc0:	f106 0b01 	add.w	fp, r6, #1
9001edc4:	fa1f fe8e 	uxth.w	lr, lr
9001edc8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001edcc:	f10e 0401 	add.w	r4, lr, #1
9001edd0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001edd4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001edd8:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001eddc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001ede0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001ede4:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001ede8:	4327      	orrs	r7, r4
9001edea:	ea47 070b 	orr.w	r7, r7, fp
9001edee:	f829 7b02 	strh.w	r7, [r9], #2
9001edf2:	e7af      	b.n	9001ed54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001edf4:	f04f 0e00 	mov.w	lr, #0
9001edf8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001edfc:	eb03 040e 	add.w	r4, r3, lr
9001ee00:	2c00      	cmp	r4, #0
9001ee02:	dc43      	bgt.n	9001ee8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001ee04:	9a00      	ldr	r2, [sp, #0]
9001ee06:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ee0a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001ee0e:	9300      	str	r3, [sp, #0]
9001ee10:	9b02      	ldr	r3, [sp, #8]
9001ee12:	2b00      	cmp	r3, #0
9001ee14:	f340 8098 	ble.w	9001ef48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001ee18:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001ee1c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ee1e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ee22:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ee26:	eef0 6a62 	vmov.f32	s13, s5
9001ee2a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001ee2e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ee32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ee36:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001ee3a:	eef0 6a43 	vmov.f32	s13, s6
9001ee3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ee42:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001ee46:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ee4a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ee4e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ee52:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ee56:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ee5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ee5e:	ee12 2a90 	vmov	r2, s5
9001ee62:	eef0 2a47 	vmov.f32	s5, s14
9001ee66:	fb92 f3f3 	sdiv	r3, r2, r3
9001ee6a:	ee13 2a10 	vmov	r2, s6
9001ee6e:	9313      	str	r3, [sp, #76]	@ 0x4c
9001ee70:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ee72:	eeb0 3a67 	vmov.f32	s6, s15
9001ee76:	fb92 f3f3 	sdiv	r3, r2, r3
9001ee7a:	9314      	str	r3, [sp, #80]	@ 0x50
9001ee7c:	9b02      	ldr	r3, [sp, #8]
9001ee7e:	9a05      	ldr	r2, [sp, #20]
9001ee80:	3b01      	subs	r3, #1
9001ee82:	9302      	str	r3, [sp, #8]
9001ee84:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ee86:	bf08      	it	eq
9001ee88:	4613      	moveq	r3, r2
9001ee8a:	e72a      	b.n	9001ece2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001ee8c:	140f      	asrs	r7, r1, #16
9001ee8e:	d454      	bmi.n	9001ef3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001ee90:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001ee94:	42be      	cmp	r6, r7
9001ee96:	dd50      	ble.n	9001ef3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001ee98:	ea5f 4822 	movs.w	r8, r2, asr #16
9001ee9c:	d44d      	bmi.n	9001ef3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001ee9e:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001eea2:	4544      	cmp	r4, r8
9001eea4:	dd49      	ble.n	9001ef3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001eea6:	9c04      	ldr	r4, [sp, #16]
9001eea8:	b236      	sxth	r6, r6
9001eeaa:	f06f 0001 	mvn.w	r0, #1
9001eeae:	fb08 4606 	mla	r6, r8, r6, r4
9001eeb2:	9c01      	ldr	r4, [sp, #4]
9001eeb4:	fb00 fa0e 	mul.w	sl, r0, lr
9001eeb8:	9800      	ldr	r0, [sp, #0]
9001eeba:	f816 8007 	ldrb.w	r8, [r6, r7]
9001eebe:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001eec2:	eb04 0b08 	add.w	fp, r4, r8
9001eec6:	f830 400a 	ldrh.w	r4, [r0, sl]
9001eeca:	9801      	ldr	r0, [sp, #4]
9001eecc:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001eed0:	1227      	asrs	r7, r4, #8
9001eed2:	f89b b001 	ldrb.w	fp, [fp, #1]
9001eed6:	fb16 f609 	smulbb	r6, r6, r9
9001eeda:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001eede:	f810 8008 	ldrb.w	r8, [r0, r8]
9001eee2:	fb1b fb09 	smulbb	fp, fp, r9
9001eee6:	fb07 6705 	mla	r7, r7, r5, r6
9001eeea:	10e6      	asrs	r6, r4, #3
9001eeec:	00e4      	lsls	r4, r4, #3
9001eeee:	9800      	ldr	r0, [sp, #0]
9001eef0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001eef4:	b2bf      	uxth	r7, r7
9001eef6:	b2e4      	uxtb	r4, r4
9001eef8:	fb06 b605 	mla	r6, r6, r5, fp
9001eefc:	fb14 f405 	smulbb	r4, r4, r5
9001ef00:	b2b6      	uxth	r6, r6
9001ef02:	fb08 4809 	mla	r8, r8, r9, r4
9001ef06:	1c7c      	adds	r4, r7, #1
9001ef08:	f106 0b01 	add.w	fp, r6, #1
9001ef0c:	fa1f f888 	uxth.w	r8, r8
9001ef10:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001ef14:	f108 0401 	add.w	r4, r8, #1
9001ef18:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001ef1c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001ef20:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001ef24:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001ef28:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001ef2c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001ef30:	4327      	orrs	r7, r4
9001ef32:	ea47 070b 	orr.w	r7, r7, fp
9001ef36:	f820 700a 	strh.w	r7, [r0, sl]
9001ef3a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001ef3c:	f10e 3eff 	add.w	lr, lr, #4294967295
9001ef40:	4401      	add	r1, r0
9001ef42:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001ef44:	4402      	add	r2, r0
9001ef46:	e759      	b.n	9001edfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001ef48:	b007      	add	sp, #28
9001ef4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001ef50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ef50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ef54:	b085      	sub	sp, #20
9001ef56:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ef5a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001ef5c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001ef5e:	9203      	str	r2, [sp, #12]
9001ef60:	6870      	ldr	r0, [r6, #4]
9001ef62:	686f      	ldr	r7, [r5, #4]
9001ef64:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
9001ef68:	3704      	adds	r7, #4
9001ef6a:	9101      	str	r1, [sp, #4]
9001ef6c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001ef70:	fb00 2404 	mla	r4, r0, r4, r2
9001ef74:	6832      	ldr	r2, [r6, #0]
9001ef76:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ef7a:	682a      	ldr	r2, [r5, #0]
9001ef7c:	9202      	str	r2, [sp, #8]
9001ef7e:	9a01      	ldr	r2, [sp, #4]
9001ef80:	2a00      	cmp	r2, #0
9001ef82:	dc03      	bgt.n	9001ef8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001ef84:	9a03      	ldr	r2, [sp, #12]
9001ef86:	2a00      	cmp	r2, #0
9001ef88:	f340 80cc 	ble.w	9001f124 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001ef8c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001ef8e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001ef92:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001ef96:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001ef98:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001ef9c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001efa0:	2b00      	cmp	r3, #0
9001efa2:	dd0d      	ble.n	9001efc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001efa4:	1406      	asrs	r6, r0, #16
9001efa6:	d405      	bmi.n	9001efb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001efa8:	454e      	cmp	r6, r9
9001efaa:	da03      	bge.n	9001efb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001efac:	1416      	asrs	r6, r2, #16
9001efae:	d401      	bmi.n	9001efb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001efb0:	4546      	cmp	r6, r8
9001efb2:	db06      	blt.n	9001efc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001efb4:	9e12      	ldr	r6, [sp, #72]	@ 0x48
9001efb6:	4460      	add	r0, ip
9001efb8:	3b01      	subs	r3, #1
9001efba:	3402      	adds	r4, #2
9001efbc:	4432      	add	r2, r6
9001efbe:	e7ef      	b.n	9001efa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001efc0:	d00f      	beq.n	9001efe2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001efc2:	1e5e      	subs	r6, r3, #1
9001efc4:	fb0c 0e06 	mla	lr, ip, r6, r0
9001efc8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001efcc:	d543      	bpl.n	9001f056 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001efce:	4698      	mov	r8, r3
9001efd0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001efd4:	f1b8 0f00 	cmp.w	r8, #0
9001efd8:	dc71      	bgt.n	9001f0be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001efda:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001efde:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001efe2:	9b01      	ldr	r3, [sp, #4]
9001efe4:	2b00      	cmp	r3, #0
9001efe6:	f340 809d 	ble.w	9001f124 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001efea:	ee30 0a04 	vadd.f32	s0, s0, s8
9001efee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001eff0:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001eff4:	eeb0 6a62 	vmov.f32	s12, s5
9001eff8:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001effc:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f000:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f004:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001f008:	eeb0 6a43 	vmov.f32	s12, s6
9001f00c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f010:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001f014:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f018:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f01c:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f020:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f024:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f028:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f02c:	ee12 2a90 	vmov	r2, s5
9001f030:	eef0 2a47 	vmov.f32	s5, s14
9001f034:	fb92 fcf3 	sdiv	ip, r2, r3
9001f038:	ee13 2a10 	vmov	r2, s6
9001f03c:	eeb0 3a67 	vmov.f32	s6, s15
9001f040:	fb92 f3f3 	sdiv	r3, r2, r3
9001f044:	9312      	str	r3, [sp, #72]	@ 0x48
9001f046:	9b01      	ldr	r3, [sp, #4]
9001f048:	9a03      	ldr	r2, [sp, #12]
9001f04a:	3b01      	subs	r3, #1
9001f04c:	9301      	str	r3, [sp, #4]
9001f04e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001f050:	bf08      	it	eq
9001f052:	4613      	moveq	r3, r2
9001f054:	e793      	b.n	9001ef7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001f056:	45ce      	cmp	lr, r9
9001f058:	dab9      	bge.n	9001efce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001f05a:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001f05c:	fb01 2606 	mla	r6, r1, r6, r2
9001f060:	1436      	asrs	r6, r6, #16
9001f062:	d4b4      	bmi.n	9001efce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001f064:	4546      	cmp	r6, r8
9001f066:	dab2      	bge.n	9001efce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001f068:	4698      	mov	r8, r3
9001f06a:	46a2      	mov	sl, r4
9001f06c:	f1b8 0f00 	cmp.w	r8, #0
9001f070:	ddb3      	ble.n	9001efda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001f072:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001f076:	1416      	asrs	r6, r2, #16
9001f078:	9902      	ldr	r1, [sp, #8]
9001f07a:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001f07e:	f108 38ff 	add.w	r8, r8, #4294967295
9001f082:	4460      	add	r0, ip
9001f084:	fb09 1606 	mla	r6, r9, r6, r1
9001f088:	4928      	ldr	r1, [pc, #160]	@ (9001f12c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001f08a:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001f08e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001f092:	eb07 0b0e 	add.w	fp, r7, lr
9001f096:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001f09a:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001f09e:	00f6      	lsls	r6, r6, #3
9001f0a0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001f0a4:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001f0a6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001f0aa:	440a      	add	r2, r1
9001f0ac:	ea49 0606 	orr.w	r6, r9, r6
9001f0b0:	f817 900e 	ldrb.w	r9, [r7, lr]
9001f0b4:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001f0b8:	f82a 6b02 	strh.w	r6, [sl], #2
9001f0bc:	e7d6      	b.n	9001f06c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001f0be:	ea5f 4920 	movs.w	r9, r0, asr #16
9001f0c2:	d429      	bmi.n	9001f118 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001f0c4:	68ae      	ldr	r6, [r5, #8]
9001f0c6:	454e      	cmp	r6, r9
9001f0c8:	dd26      	ble.n	9001f118 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001f0ca:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001f0ce:	d423      	bmi.n	9001f118 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001f0d0:	68e9      	ldr	r1, [r5, #12]
9001f0d2:	4559      	cmp	r1, fp
9001f0d4:	dd20      	ble.n	9001f118 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001f0d6:	fa0f fe86 	sxth.w	lr, r6
9001f0da:	9902      	ldr	r1, [sp, #8]
9001f0dc:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001f0e0:	f06f 0101 	mvn.w	r1, #1
9001f0e4:	f81e e009 	ldrb.w	lr, [lr, r9]
9001f0e8:	fb01 f908 	mul.w	r9, r1, r8
9001f0ec:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
9001f0f0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001f0f4:	eb07 060e 	add.w	r6, r7, lr
9001f0f8:	f896 b002 	ldrb.w	fp, [r6, #2]
9001f0fc:	7876      	ldrb	r6, [r6, #1]
9001f0fe:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001f102:	00f6      	lsls	r6, r6, #3
9001f104:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001f108:	ea4b 0606 	orr.w	r6, fp, r6
9001f10c:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001f110:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001f114:	f82a 6009 	strh.w	r6, [sl, r9]
9001f118:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001f11a:	4460      	add	r0, ip
9001f11c:	f108 38ff 	add.w	r8, r8, #4294967295
9001f120:	440a      	add	r2, r1
9001f122:	e757      	b.n	9001efd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001f124:	b005      	add	sp, #20
9001f126:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f12a:	bf00      	nop
9001f12c:	fffff800 	.word	0xfffff800

9001f130 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f134:	b087      	sub	sp, #28
9001f136:	468b      	mov	fp, r1
9001f138:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001f13c:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001f13e:	9204      	str	r2, [sp, #16]
9001f140:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001f144:	6841      	ldr	r1, [r0, #4]
9001f146:	9205      	str	r2, [sp, #20]
9001f148:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001f14c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001f150:	fb01 2404 	mla	r4, r1, r4, r2
9001f154:	6802      	ldr	r2, [r0, #0]
9001f156:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001f15a:	f8dc 2000 	ldr.w	r2, [ip]
9001f15e:	9201      	str	r2, [sp, #4]
9001f160:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001f164:	3204      	adds	r2, #4
9001f166:	9202      	str	r2, [sp, #8]
9001f168:	f1bb 0f00 	cmp.w	fp, #0
9001f16c:	dc03      	bgt.n	9001f176 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001f16e:	9a04      	ldr	r2, [sp, #16]
9001f170:	2a00      	cmp	r2, #0
9001f172:	f340 8138 	ble.w	9001f3e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001f176:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001f178:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001f17c:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001f180:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001f182:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001f186:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001f18a:	2b00      	cmp	r3, #0
9001f18c:	dd0e      	ble.n	9001f1ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001f18e:	1402      	asrs	r2, r0, #16
9001f190:	d405      	bmi.n	9001f19e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001f192:	42ba      	cmp	r2, r7
9001f194:	da03      	bge.n	9001f19e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001f196:	140a      	asrs	r2, r1, #16
9001f198:	d401      	bmi.n	9001f19e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001f19a:	42b2      	cmp	r2, r6
9001f19c:	db07      	blt.n	9001f1ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001f19e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001f1a0:	3b01      	subs	r3, #1
9001f1a2:	3402      	adds	r4, #2
9001f1a4:	4410      	add	r0, r2
9001f1a6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f1a8:	4411      	add	r1, r2
9001f1aa:	e7ee      	b.n	9001f18a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001f1ac:	d019      	beq.n	9001f1e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001f1ae:	1e5a      	subs	r2, r3, #1
9001f1b0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001f1b2:	fb05 0502 	mla	r5, r5, r2, r0
9001f1b6:	142d      	asrs	r5, r5, #16
9001f1b8:	d409      	bmi.n	9001f1ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001f1ba:	42bd      	cmp	r5, r7
9001f1bc:	da07      	bge.n	9001f1ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001f1be:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001f1c0:	fb05 1202 	mla	r2, r5, r2, r1
9001f1c4:	1412      	asrs	r2, r2, #16
9001f1c6:	d402      	bmi.n	9001f1ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001f1c8:	42b2      	cmp	r2, r6
9001f1ca:	f2c0 80ac 	blt.w	9001f326 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001f1ce:	f04f 0e00 	mov.w	lr, #0
9001f1d2:	eb03 020e 	add.w	r2, r3, lr
9001f1d6:	2a00      	cmp	r2, #0
9001f1d8:	dc3e      	bgt.n	9001f258 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001f1da:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f1de:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001f1e2:	f1bb 0f00 	cmp.w	fp, #0
9001f1e6:	f340 80fe 	ble.w	9001f3e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001f1ea:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f1ee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f1f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f1f4:	f1bb 0b01 	subs.w	fp, fp, #1
9001f1f8:	eeb0 6a62 	vmov.f32	s12, s5
9001f1fc:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001f200:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f204:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f208:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001f20c:	eeb0 6a43 	vmov.f32	s12, s6
9001f210:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f214:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001f218:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f21c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f220:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f224:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f228:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f22c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f230:	ee12 2a90 	vmov	r2, s5
9001f234:	eef0 2a47 	vmov.f32	s5, s14
9001f238:	fb92 f3f3 	sdiv	r3, r2, r3
9001f23c:	ee13 2a10 	vmov	r2, s6
9001f240:	9313      	str	r3, [sp, #76]	@ 0x4c
9001f242:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f244:	eeb0 3a67 	vmov.f32	s6, s15
9001f248:	fb92 f3f3 	sdiv	r3, r2, r3
9001f24c:	9a04      	ldr	r2, [sp, #16]
9001f24e:	9314      	str	r3, [sp, #80]	@ 0x50
9001f250:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f252:	bf08      	it	eq
9001f254:	4613      	moveq	r3, r2
9001f256:	e787      	b.n	9001f168 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001f258:	1406      	asrs	r6, r0, #16
9001f25a:	d45d      	bmi.n	9001f318 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001f25c:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001f260:	42b5      	cmp	r5, r6
9001f262:	dd59      	ble.n	9001f318 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001f264:	140f      	asrs	r7, r1, #16
9001f266:	d457      	bmi.n	9001f318 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001f268:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001f26c:	42ba      	cmp	r2, r7
9001f26e:	dd53      	ble.n	9001f318 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001f270:	9a01      	ldr	r2, [sp, #4]
9001f272:	b22d      	sxth	r5, r5
9001f274:	fb07 2505 	mla	r5, r7, r5, r2
9001f278:	5daa      	ldrb	r2, [r5, r6]
9001f27a:	9d02      	ldr	r5, [sp, #8]
9001f27c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001f280:	0e2e      	lsrs	r6, r5, #24
9001f282:	d049      	beq.n	9001f318 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001f284:	f06f 0201 	mvn.w	r2, #1
9001f288:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001f28c:	fb02 f20e 	mul.w	r2, r2, lr
9001f290:	f834 8002 	ldrh.w	r8, [r4, r2]
9001f294:	9203      	str	r2, [sp, #12]
9001f296:	9a05      	ldr	r2, [sp, #20]
9001f298:	ea4f 2728 	mov.w	r7, r8, asr #8
9001f29c:	4356      	muls	r6, r2
9001f29e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001f2a2:	1c72      	adds	r2, r6, #1
9001f2a4:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001f2a8:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001f2ac:	b2ed      	uxtb	r5, r5
9001f2ae:	1212      	asrs	r2, r2, #8
9001f2b0:	fa1f f982 	uxth.w	r9, r2
9001f2b4:	43d2      	mvns	r2, r2
9001f2b6:	fb16 f609 	smulbb	r6, r6, r9
9001f2ba:	b2d2      	uxtb	r2, r2
9001f2bc:	fb15 f509 	smulbb	r5, r5, r9
9001f2c0:	fb07 6702 	mla	r7, r7, r2, r6
9001f2c4:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001f2c8:	fb1a fa09 	smulbb	sl, sl, r9
9001f2cc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001f2d0:	b2bf      	uxth	r7, r7
9001f2d2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001f2d6:	fa5f f888 	uxtb.w	r8, r8
9001f2da:	fb06 a602 	mla	r6, r6, r2, sl
9001f2de:	fb08 5502 	mla	r5, r8, r2, r5
9001f2e2:	1c7a      	adds	r2, r7, #1
9001f2e4:	b2b6      	uxth	r6, r6
9001f2e6:	b2ad      	uxth	r5, r5
9001f2e8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001f2ec:	9a03      	ldr	r2, [sp, #12]
9001f2ee:	f105 0a01 	add.w	sl, r5, #1
9001f2f2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001f2f6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f2fa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001f2fe:	ea4a 0707 	orr.w	r7, sl, r7
9001f302:	f106 0a01 	add.w	sl, r6, #1
9001f306:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001f30a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f30e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001f312:	ea47 070a 	orr.w	r7, r7, sl
9001f316:	52a7      	strh	r7, [r4, r2]
9001f318:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001f31a:	f10e 3eff 	add.w	lr, lr, #4294967295
9001f31e:	4410      	add	r0, r2
9001f320:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f322:	4411      	add	r1, r2
9001f324:	e755      	b.n	9001f1d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001f326:	f04f 0800 	mov.w	r8, #0
9001f32a:	eba3 0208 	sub.w	r2, r3, r8
9001f32e:	2a00      	cmp	r2, #0
9001f330:	f77f af53 	ble.w	9001f1da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001f334:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001f338:	140a      	asrs	r2, r1, #16
9001f33a:	9f01      	ldr	r7, [sp, #4]
9001f33c:	1405      	asrs	r5, r0, #16
9001f33e:	fb06 7202 	mla	r2, r6, r2, r7
9001f342:	5d52      	ldrb	r2, [r2, r5]
9001f344:	9d02      	ldr	r5, [sp, #8]
9001f346:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001f34a:	0e2e      	lsrs	r6, r5, #24
9001f34c:	d044      	beq.n	9001f3d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001f34e:	9a05      	ldr	r2, [sp, #20]
9001f350:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001f354:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001f358:	4356      	muls	r6, r2
9001f35a:	ea4f 272e 	mov.w	r7, lr, asr #8
9001f35e:	1c72      	adds	r2, r6, #1
9001f360:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001f364:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001f368:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001f36c:	b2ed      	uxtb	r5, r5
9001f36e:	1212      	asrs	r2, r2, #8
9001f370:	fa1f f982 	uxth.w	r9, r2
9001f374:	43d2      	mvns	r2, r2
9001f376:	fb16 f609 	smulbb	r6, r6, r9
9001f37a:	b2d2      	uxtb	r2, r2
9001f37c:	fb15 f509 	smulbb	r5, r5, r9
9001f380:	fb07 6702 	mla	r7, r7, r2, r6
9001f384:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001f388:	fb1a fa09 	smulbb	sl, sl, r9
9001f38c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001f390:	b2bf      	uxth	r7, r7
9001f392:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001f396:	fa5f fe8e 	uxtb.w	lr, lr
9001f39a:	fb06 a602 	mla	r6, r6, r2, sl
9001f39e:	fb0e 5502 	mla	r5, lr, r2, r5
9001f3a2:	1c7a      	adds	r2, r7, #1
9001f3a4:	b2b6      	uxth	r6, r6
9001f3a6:	b2ad      	uxth	r5, r5
9001f3a8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001f3ac:	f105 0a01 	add.w	sl, r5, #1
9001f3b0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001f3b4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f3b8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001f3bc:	ea4a 0707 	orr.w	r7, sl, r7
9001f3c0:	f106 0a01 	add.w	sl, r6, #1
9001f3c4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001f3c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f3cc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001f3d0:	ea47 070a 	orr.w	r7, r7, sl
9001f3d4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001f3d8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001f3da:	f108 0801 	add.w	r8, r8, #1
9001f3de:	4410      	add	r0, r2
9001f3e0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f3e2:	4411      	add	r1, r2
9001f3e4:	e7a1      	b.n	9001f32a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001f3e6:	b007      	add	sp, #28
9001f3e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001f3ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f3ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f3f0:	b085      	sub	sp, #20
9001f3f2:	468b      	mov	fp, r1
9001f3f4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001f3f8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001f3fa:	9203      	str	r2, [sp, #12]
9001f3fc:	6841      	ldr	r1, [r0, #4]
9001f3fe:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001f402:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001f406:	fb01 2404 	mla	r4, r1, r4, r2
9001f40a:	6802      	ldr	r2, [r0, #0]
9001f40c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001f410:	f8de 2000 	ldr.w	r2, [lr]
9001f414:	9200      	str	r2, [sp, #0]
9001f416:	f8de 2004 	ldr.w	r2, [lr, #4]
9001f41a:	3204      	adds	r2, #4
9001f41c:	9201      	str	r2, [sp, #4]
9001f41e:	f1bb 0f00 	cmp.w	fp, #0
9001f422:	dc03      	bgt.n	9001f42c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001f424:	9a03      	ldr	r2, [sp, #12]
9001f426:	2a00      	cmp	r2, #0
9001f428:	f340 8153 	ble.w	9001f6d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001f42c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001f42e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001f432:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001f436:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001f438:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001f43c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001f440:	2b00      	cmp	r3, #0
9001f442:	dd0e      	ble.n	9001f462 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001f444:	1408      	asrs	r0, r1, #16
9001f446:	d405      	bmi.n	9001f454 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001f448:	42b8      	cmp	r0, r7
9001f44a:	da03      	bge.n	9001f454 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001f44c:	1410      	asrs	r0, r2, #16
9001f44e:	d401      	bmi.n	9001f454 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001f450:	42b0      	cmp	r0, r6
9001f452:	db07      	blt.n	9001f464 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001f454:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001f456:	3b01      	subs	r3, #1
9001f458:	3402      	adds	r4, #2
9001f45a:	4401      	add	r1, r0
9001f45c:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001f45e:	4402      	add	r2, r0
9001f460:	e7ee      	b.n	9001f440 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001f462:	d017      	beq.n	9001f494 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001f464:	1e58      	subs	r0, r3, #1
9001f466:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001f468:	fb05 1500 	mla	r5, r5, r0, r1
9001f46c:	142d      	asrs	r5, r5, #16
9001f46e:	d409      	bmi.n	9001f484 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001f470:	42bd      	cmp	r5, r7
9001f472:	da07      	bge.n	9001f484 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001f474:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001f476:	fb05 2000 	mla	r0, r5, r0, r2
9001f47a:	1400      	asrs	r0, r0, #16
9001f47c:	d402      	bmi.n	9001f484 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001f47e:	42b0      	cmp	r0, r6
9001f480:	f2c0 80bc 	blt.w	9001f5fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001f484:	2600      	movs	r6, #0
9001f486:	1998      	adds	r0, r3, r6
9001f488:	2800      	cmp	r0, #0
9001f48a:	dc3e      	bgt.n	9001f50a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001f48c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f490:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001f494:	f1bb 0f00 	cmp.w	fp, #0
9001f498:	f340 811b 	ble.w	9001f6d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001f49c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f4a0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001f4a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f4a6:	f1bb 0b01 	subs.w	fp, fp, #1
9001f4aa:	eeb0 6a62 	vmov.f32	s12, s5
9001f4ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001f4b2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f4b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f4ba:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001f4be:	eeb0 6a43 	vmov.f32	s12, s6
9001f4c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f4c6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001f4ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f4ce:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f4d2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f4d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f4da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f4de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f4e2:	ee12 2a90 	vmov	r2, s5
9001f4e6:	eef0 2a47 	vmov.f32	s5, s14
9001f4ea:	fb92 f3f3 	sdiv	r3, r2, r3
9001f4ee:	ee13 2a10 	vmov	r2, s6
9001f4f2:	9311      	str	r3, [sp, #68]	@ 0x44
9001f4f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001f4f6:	eeb0 3a67 	vmov.f32	s6, s15
9001f4fa:	fb92 f3f3 	sdiv	r3, r2, r3
9001f4fe:	9a03      	ldr	r2, [sp, #12]
9001f500:	9312      	str	r3, [sp, #72]	@ 0x48
9001f502:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001f504:	bf08      	it	eq
9001f506:	4613      	moveq	r3, r2
9001f508:	e789      	b.n	9001f41e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001f50a:	140f      	asrs	r7, r1, #16
9001f50c:	d426      	bmi.n	9001f55c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001f50e:	f8de 5008 	ldr.w	r5, [lr, #8]
9001f512:	42bd      	cmp	r5, r7
9001f514:	dd22      	ble.n	9001f55c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001f516:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001f51a:	d41f      	bmi.n	9001f55c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001f51c:	f8de 000c 	ldr.w	r0, [lr, #12]
9001f520:	4560      	cmp	r0, ip
9001f522:	dd1b      	ble.n	9001f55c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001f524:	9800      	ldr	r0, [sp, #0]
9001f526:	b22d      	sxth	r5, r5
9001f528:	fb0c 0505 	mla	r5, ip, r5, r0
9001f52c:	5de8      	ldrb	r0, [r5, r7]
9001f52e:	9d01      	ldr	r5, [sp, #4]
9001f530:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001f534:	0e07      	lsrs	r7, r0, #24
9001f536:	2fff      	cmp	r7, #255	@ 0xff
9001f538:	d116      	bne.n	9001f568 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001f53a:	f06f 0501 	mvn.w	r5, #1
9001f53e:	fb05 f706 	mul.w	r7, r5, r6
9001f542:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001f546:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001f54a:	0945      	lsrs	r5, r0, #5
9001f54c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001f550:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f554:	ea4c 0505 	orr.w	r5, ip, r5
9001f558:	4305      	orrs	r5, r0
9001f55a:	53e5      	strh	r5, [r4, r7]
9001f55c:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001f55e:	3e01      	subs	r6, #1
9001f560:	4401      	add	r1, r0
9001f562:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001f564:	4402      	add	r2, r0
9001f566:	e78e      	b.n	9001f486 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001f568:	b2fd      	uxtb	r5, r7
9001f56a:	2f00      	cmp	r7, #0
9001f56c:	d0f6      	beq.n	9001f55c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001f56e:	f06f 0701 	mvn.w	r7, #1
9001f572:	fa1f f985 	uxth.w	r9, r5
9001f576:	43ed      	mvns	r5, r5
9001f578:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001f57c:	4377      	muls	r7, r6
9001f57e:	fb1a fa09 	smulbb	sl, sl, r9
9001f582:	b2ed      	uxtb	r5, r5
9001f584:	f834 8007 	ldrh.w	r8, [r4, r7]
9001f588:	9702      	str	r7, [sp, #8]
9001f58a:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001f58e:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001f592:	fb17 f709 	smulbb	r7, r7, r9
9001f596:	b2c0      	uxtb	r0, r0
9001f598:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001f59c:	fb10 f009 	smulbb	r0, r0, r9
9001f5a0:	fb0c 7c05 	mla	ip, ip, r5, r7
9001f5a4:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001f5a8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001f5ac:	fa1f fc8c 	uxth.w	ip, ip
9001f5b0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001f5b4:	fa5f f888 	uxtb.w	r8, r8
9001f5b8:	fb07 a705 	mla	r7, r7, r5, sl
9001f5bc:	fb08 0005 	mla	r0, r8, r5, r0
9001f5c0:	f10c 0501 	add.w	r5, ip, #1
9001f5c4:	b2bf      	uxth	r7, r7
9001f5c6:	b280      	uxth	r0, r0
9001f5c8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001f5cc:	f100 0a01 	add.w	sl, r0, #1
9001f5d0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001f5d4:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001f5d8:	9802      	ldr	r0, [sp, #8]
9001f5da:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001f5de:	ea4a 0c0c 	orr.w	ip, sl, ip
9001f5e2:	f107 0a01 	add.w	sl, r7, #1
9001f5e6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001f5ea:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f5ee:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001f5f2:	ea4c 0c0a 	orr.w	ip, ip, sl
9001f5f6:	f824 c000 	strh.w	ip, [r4, r0]
9001f5fa:	e7af      	b.n	9001f55c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001f5fc:	f04f 0800 	mov.w	r8, #0
9001f600:	eba3 0008 	sub.w	r0, r3, r8
9001f604:	2800      	cmp	r0, #0
9001f606:	f77f af41 	ble.w	9001f48c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001f60a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001f60e:	1410      	asrs	r0, r2, #16
9001f610:	9f00      	ldr	r7, [sp, #0]
9001f612:	140d      	asrs	r5, r1, #16
9001f614:	fb06 7000 	mla	r0, r6, r0, r7
9001f618:	5d40      	ldrb	r0, [r0, r5]
9001f61a:	9d01      	ldr	r5, [sp, #4]
9001f61c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001f620:	0e2e      	lsrs	r6, r5, #24
9001f622:	2eff      	cmp	r6, #255	@ 0xff
9001f624:	d112      	bne.n	9001f64c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001f626:	482c      	ldr	r0, [pc, #176]	@ (9001f6d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001f628:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001f62c:	0968      	lsrs	r0, r5, #5
9001f62e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001f632:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001f636:	4330      	orrs	r0, r6
9001f638:	4328      	orrs	r0, r5
9001f63a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001f63e:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001f640:	f108 0801 	add.w	r8, r8, #1
9001f644:	4401      	add	r1, r0
9001f646:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001f648:	4402      	add	r2, r0
9001f64a:	e7d9      	b.n	9001f600 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001f64c:	b2f0      	uxtb	r0, r6
9001f64e:	2e00      	cmp	r6, #0
9001f650:	d0f5      	beq.n	9001f63e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001f652:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001f656:	fa1f f980 	uxth.w	r9, r0
9001f65a:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001f65e:	43c0      	mvns	r0, r0
9001f660:	ea4f 272c 	mov.w	r7, ip, asr #8
9001f664:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001f668:	fb16 f609 	smulbb	r6, r6, r9
9001f66c:	b2c0      	uxtb	r0, r0
9001f66e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001f672:	b2ed      	uxtb	r5, r5
9001f674:	fb1a fa09 	smulbb	sl, sl, r9
9001f678:	fb07 6700 	mla	r7, r7, r0, r6
9001f67c:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001f680:	fb15 f509 	smulbb	r5, r5, r9
9001f684:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f688:	b2bf      	uxth	r7, r7
9001f68a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001f68e:	fa5f fc8c 	uxtb.w	ip, ip
9001f692:	fb06 a600 	mla	r6, r6, r0, sl
9001f696:	fb0c 5500 	mla	r5, ip, r0, r5
9001f69a:	1c78      	adds	r0, r7, #1
9001f69c:	b2b6      	uxth	r6, r6
9001f69e:	b2ad      	uxth	r5, r5
9001f6a0:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001f6a4:	f105 0a01 	add.w	sl, r5, #1
9001f6a8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001f6ac:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f6b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001f6b4:	ea4a 0707 	orr.w	r7, sl, r7
9001f6b8:	f106 0a01 	add.w	sl, r6, #1
9001f6bc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001f6c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f6c4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001f6c8:	ea47 070a 	orr.w	r7, r7, sl
9001f6cc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001f6d0:	e7b5      	b.n	9001f63e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001f6d2:	b005      	add	sp, #20
9001f6d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f6d8:	fffff800 	.word	0xfffff800

9001f6dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f6dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f6e0:	b087      	sub	sp, #28
9001f6e2:	468b      	mov	fp, r1
9001f6e4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001f6e8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001f6ea:	9204      	str	r2, [sp, #16]
9001f6ec:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001f6f0:	6861      	ldr	r1, [r4, #4]
9001f6f2:	9205      	str	r2, [sp, #20]
9001f6f4:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001f6f8:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001f6fc:	fb01 2000 	mla	r0, r1, r0, r2
9001f700:	6822      	ldr	r2, [r4, #0]
9001f702:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001f706:	f8de 2000 	ldr.w	r2, [lr]
9001f70a:	9201      	str	r2, [sp, #4]
9001f70c:	f8de 2004 	ldr.w	r2, [lr, #4]
9001f710:	9202      	str	r2, [sp, #8]
9001f712:	f1bb 0f00 	cmp.w	fp, #0
9001f716:	dc03      	bgt.n	9001f720 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001f718:	9a04      	ldr	r2, [sp, #16]
9001f71a:	2a00      	cmp	r2, #0
9001f71c:	f340 8142 	ble.w	9001f9a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001f720:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001f722:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001f726:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001f72a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001f72c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001f730:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001f734:	2b00      	cmp	r3, #0
9001f736:	dd0e      	ble.n	9001f756 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001f738:	140c      	asrs	r4, r1, #16
9001f73a:	d405      	bmi.n	9001f748 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001f73c:	42bc      	cmp	r4, r7
9001f73e:	da03      	bge.n	9001f748 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001f740:	1414      	asrs	r4, r2, #16
9001f742:	d401      	bmi.n	9001f748 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001f744:	42b4      	cmp	r4, r6
9001f746:	db07      	blt.n	9001f758 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001f748:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001f74a:	3b01      	subs	r3, #1
9001f74c:	3002      	adds	r0, #2
9001f74e:	4421      	add	r1, r4
9001f750:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001f752:	4422      	add	r2, r4
9001f754:	e7ee      	b.n	9001f734 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001f756:	d019      	beq.n	9001f78c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001f758:	1e5c      	subs	r4, r3, #1
9001f75a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001f75c:	fb05 1504 	mla	r5, r5, r4, r1
9001f760:	142d      	asrs	r5, r5, #16
9001f762:	d409      	bmi.n	9001f778 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001f764:	42bd      	cmp	r5, r7
9001f766:	da07      	bge.n	9001f778 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001f768:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001f76a:	fb05 2404 	mla	r4, r5, r4, r2
9001f76e:	1424      	asrs	r4, r4, #16
9001f770:	d402      	bmi.n	9001f778 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001f772:	42b4      	cmp	r4, r6
9001f774:	f2c0 80b1 	blt.w	9001f8da <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001f778:	f04f 0800 	mov.w	r8, #0
9001f77c:	eb03 0408 	add.w	r4, r3, r8
9001f780:	2c00      	cmp	r4, #0
9001f782:	dc3e      	bgt.n	9001f802 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001f784:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f788:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f78c:	f1bb 0f00 	cmp.w	fp, #0
9001f790:	f340 8108 	ble.w	9001f9a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001f794:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f798:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f79a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f79e:	f1bb 0b01 	subs.w	fp, fp, #1
9001f7a2:	eeb0 6a62 	vmov.f32	s12, s5
9001f7a6:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001f7aa:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f7ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f7b2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001f7b6:	eeb0 6a43 	vmov.f32	s12, s6
9001f7ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001f7be:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001f7c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f7c6:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f7ca:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f7ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f7d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f7d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f7da:	ee12 2a90 	vmov	r2, s5
9001f7de:	eef0 2a47 	vmov.f32	s5, s14
9001f7e2:	fb92 f3f3 	sdiv	r3, r2, r3
9001f7e6:	ee13 2a10 	vmov	r2, s6
9001f7ea:	9313      	str	r3, [sp, #76]	@ 0x4c
9001f7ec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f7ee:	eeb0 3a67 	vmov.f32	s6, s15
9001f7f2:	fb92 f3f3 	sdiv	r3, r2, r3
9001f7f6:	9a04      	ldr	r2, [sp, #16]
9001f7f8:	9314      	str	r3, [sp, #80]	@ 0x50
9001f7fa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f7fc:	bf08      	it	eq
9001f7fe:	4613      	moveq	r3, r2
9001f800:	e787      	b.n	9001f712 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001f802:	140e      	asrs	r6, r1, #16
9001f804:	d462      	bmi.n	9001f8cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001f806:	f8de 5008 	ldr.w	r5, [lr, #8]
9001f80a:	42b5      	cmp	r5, r6
9001f80c:	dd5e      	ble.n	9001f8cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001f80e:	1417      	asrs	r7, r2, #16
9001f810:	d45c      	bmi.n	9001f8cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001f812:	f8de 400c 	ldr.w	r4, [lr, #12]
9001f816:	42bc      	cmp	r4, r7
9001f818:	dd58      	ble.n	9001f8cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001f81a:	b22d      	sxth	r5, r5
9001f81c:	9c02      	ldr	r4, [sp, #8]
9001f81e:	fb07 6505 	mla	r5, r7, r5, r6
9001f822:	5d66      	ldrb	r6, [r4, r5]
9001f824:	2e00      	cmp	r6, #0
9001f826:	d051      	beq.n	9001f8cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001f828:	9c01      	ldr	r4, [sp, #4]
9001f82a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001f82e:	f06f 0401 	mvn.w	r4, #1
9001f832:	fb04 f408 	mul.w	r4, r4, r8
9001f836:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001f83a:	5b05      	ldrh	r5, [r0, r4]
9001f83c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001f840:	9403      	str	r4, [sp, #12]
9001f842:	9c05      	ldr	r4, [sp, #20]
9001f844:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001f848:	4366      	muls	r6, r4
9001f84a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001f84e:	1c74      	adds	r4, r6, #1
9001f850:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001f854:	122e      	asrs	r6, r5, #8
9001f856:	1224      	asrs	r4, r4, #8
9001f858:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001f85c:	00ed      	lsls	r5, r5, #3
9001f85e:	b2a7      	uxth	r7, r4
9001f860:	43e4      	mvns	r4, r4
9001f862:	b2ed      	uxtb	r5, r5
9001f864:	b2e4      	uxtb	r4, r4
9001f866:	fb16 f604 	smulbb	r6, r6, r4
9001f86a:	fb15 f504 	smulbb	r5, r5, r4
9001f86e:	fb0c 6c07 	mla	ip, ip, r7, r6
9001f872:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001f876:	fb1a fa04 	smulbb	sl, sl, r4
9001f87a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001f87e:	fa1f fc8c 	uxth.w	ip, ip
9001f882:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001f886:	fa5f f989 	uxtb.w	r9, r9
9001f88a:	fb06 a607 	mla	r6, r6, r7, sl
9001f88e:	f10c 0401 	add.w	r4, ip, #1
9001f892:	fb09 5507 	mla	r5, r9, r7, r5
9001f896:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001f89a:	9c03      	ldr	r4, [sp, #12]
9001f89c:	b2ad      	uxth	r5, r5
9001f89e:	b2b6      	uxth	r6, r6
9001f8a0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001f8a4:	f105 0a01 	add.w	sl, r5, #1
9001f8a8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f8ac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001f8b0:	ea4a 0c0c 	orr.w	ip, sl, ip
9001f8b4:	f106 0a01 	add.w	sl, r6, #1
9001f8b8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001f8bc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f8c0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001f8c4:	ea4c 0c0a 	orr.w	ip, ip, sl
9001f8c8:	f820 c004 	strh.w	ip, [r0, r4]
9001f8cc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001f8ce:	f108 38ff 	add.w	r8, r8, #4294967295
9001f8d2:	4421      	add	r1, r4
9001f8d4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001f8d6:	4422      	add	r2, r4
9001f8d8:	e750      	b.n	9001f77c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001f8da:	f04f 0900 	mov.w	r9, #0
9001f8de:	eba3 0409 	sub.w	r4, r3, r9
9001f8e2:	2c00      	cmp	r4, #0
9001f8e4:	f77f af4e 	ble.w	9001f784 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001f8e8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001f8ec:	140d      	asrs	r5, r1, #16
9001f8ee:	1414      	asrs	r4, r2, #16
9001f8f0:	fb06 5404 	mla	r4, r6, r4, r5
9001f8f4:	9d02      	ldr	r5, [sp, #8]
9001f8f6:	5d2e      	ldrb	r6, [r5, r4]
9001f8f8:	2e00      	cmp	r6, #0
9001f8fa:	d04c      	beq.n	9001f996 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001f8fc:	9d01      	ldr	r5, [sp, #4]
9001f8fe:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001f902:	9c05      	ldr	r4, [sp, #20]
9001f904:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001f908:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001f90c:	4366      	muls	r6, r4
9001f90e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001f912:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001f916:	1c74      	adds	r4, r6, #1
9001f918:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001f91c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001f920:	122e      	asrs	r6, r5, #8
9001f922:	1224      	asrs	r4, r4, #8
9001f924:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001f928:	00ed      	lsls	r5, r5, #3
9001f92a:	b2a7      	uxth	r7, r4
9001f92c:	43e4      	mvns	r4, r4
9001f92e:	b2ed      	uxtb	r5, r5
9001f930:	b2e4      	uxtb	r4, r4
9001f932:	fb16 f604 	smulbb	r6, r6, r4
9001f936:	fb15 f504 	smulbb	r5, r5, r4
9001f93a:	fb0c 6c07 	mla	ip, ip, r7, r6
9001f93e:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001f942:	fb1a fa04 	smulbb	sl, sl, r4
9001f946:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001f94a:	fa1f fc8c 	uxth.w	ip, ip
9001f94e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001f952:	fa5f f888 	uxtb.w	r8, r8
9001f956:	fb06 a607 	mla	r6, r6, r7, sl
9001f95a:	f10c 0401 	add.w	r4, ip, #1
9001f95e:	fb08 5507 	mla	r5, r8, r7, r5
9001f962:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001f966:	b2ad      	uxth	r5, r5
9001f968:	b2b6      	uxth	r6, r6
9001f96a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001f96e:	f105 0a01 	add.w	sl, r5, #1
9001f972:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f976:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001f97a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001f97e:	f106 0a01 	add.w	sl, r6, #1
9001f982:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001f986:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f98a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001f98e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001f992:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001f996:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001f998:	f109 0901 	add.w	r9, r9, #1
9001f99c:	4421      	add	r1, r4
9001f99e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001f9a0:	4422      	add	r2, r4
9001f9a2:	e79c      	b.n	9001f8de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001f9a4:	b007      	add	sp, #28
9001f9a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001f9aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f9aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f9ae:	b085      	sub	sp, #20
9001f9b0:	468b      	mov	fp, r1
9001f9b2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001f9b6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001f9b8:	9203      	str	r2, [sp, #12]
9001f9ba:	6861      	ldr	r1, [r4, #4]
9001f9bc:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001f9c0:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
9001f9c4:	fb01 2000 	mla	r0, r1, r0, r2
9001f9c8:	6822      	ldr	r2, [r4, #0]
9001f9ca:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001f9ce:	f8d8 2000 	ldr.w	r2, [r8]
9001f9d2:	9200      	str	r2, [sp, #0]
9001f9d4:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001f9d8:	9201      	str	r2, [sp, #4]
9001f9da:	f1bb 0f00 	cmp.w	fp, #0
9001f9de:	dc03      	bgt.n	9001f9e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001f9e0:	9a03      	ldr	r2, [sp, #12]
9001f9e2:	2a00      	cmp	r2, #0
9001f9e4:	f340 8146 	ble.w	9001fc74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001f9e8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001f9ea:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001f9ee:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001f9f2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001f9f4:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001f9f8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001f9fc:	2b00      	cmp	r3, #0
9001f9fe:	dd0e      	ble.n	9001fa1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001fa00:	140c      	asrs	r4, r1, #16
9001fa02:	d405      	bmi.n	9001fa10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001fa04:	42bc      	cmp	r4, r7
9001fa06:	da03      	bge.n	9001fa10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001fa08:	1414      	asrs	r4, r2, #16
9001fa0a:	d401      	bmi.n	9001fa10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001fa0c:	42b4      	cmp	r4, r6
9001fa0e:	db07      	blt.n	9001fa20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001fa10:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001fa12:	3b01      	subs	r3, #1
9001fa14:	3002      	adds	r0, #2
9001fa16:	4421      	add	r1, r4
9001fa18:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001fa1a:	4422      	add	r2, r4
9001fa1c:	e7ee      	b.n	9001f9fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001fa1e:	d017      	beq.n	9001fa50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001fa20:	1e5c      	subs	r4, r3, #1
9001fa22:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001fa24:	fb05 1504 	mla	r5, r5, r4, r1
9001fa28:	142d      	asrs	r5, r5, #16
9001fa2a:	d409      	bmi.n	9001fa40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001fa2c:	42bd      	cmp	r5, r7
9001fa2e:	da07      	bge.n	9001fa40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001fa30:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001fa32:	fb05 2404 	mla	r4, r5, r4, r2
9001fa36:	1424      	asrs	r4, r4, #16
9001fa38:	d402      	bmi.n	9001fa40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001fa3a:	42b4      	cmp	r4, r6
9001fa3c:	f2c0 80b3 	blt.w	9001fba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001fa40:	2600      	movs	r6, #0
9001fa42:	199c      	adds	r4, r3, r6
9001fa44:	2c00      	cmp	r4, #0
9001fa46:	dc3e      	bgt.n	9001fac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001fa48:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001fa4c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fa50:	f1bb 0f00 	cmp.w	fp, #0
9001fa54:	f340 810e 	ble.w	9001fc74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001fa58:	ee30 0a04 	vadd.f32	s0, s0, s8
9001fa5c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001fa5e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001fa62:	f1bb 0b01 	subs.w	fp, fp, #1
9001fa66:	eeb0 6a62 	vmov.f32	s12, s5
9001fa6a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001fa6e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001fa72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001fa76:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001fa7a:	eeb0 6a43 	vmov.f32	s12, s6
9001fa7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001fa82:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001fa86:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001fa8a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001fa8e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001fa92:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001fa96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001fa9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001fa9e:	ee12 2a90 	vmov	r2, s5
9001faa2:	eef0 2a47 	vmov.f32	s5, s14
9001faa6:	fb92 f3f3 	sdiv	r3, r2, r3
9001faaa:	ee13 2a10 	vmov	r2, s6
9001faae:	9311      	str	r3, [sp, #68]	@ 0x44
9001fab0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001fab2:	eeb0 3a67 	vmov.f32	s6, s15
9001fab6:	fb92 f3f3 	sdiv	r3, r2, r3
9001faba:	9a03      	ldr	r2, [sp, #12]
9001fabc:	9312      	str	r3, [sp, #72]	@ 0x48
9001fabe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001fac0:	bf08      	it	eq
9001fac2:	4613      	moveq	r3, r2
9001fac4:	e789      	b.n	9001f9da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001fac6:	140f      	asrs	r7, r1, #16
9001fac8:	d418      	bmi.n	9001fafc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001faca:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001face:	42bd      	cmp	r5, r7
9001fad0:	dd14      	ble.n	9001fafc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001fad2:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001fad6:	d411      	bmi.n	9001fafc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001fad8:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001fadc:	4564      	cmp	r4, ip
9001fade:	dd0d      	ble.n	9001fafc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001fae0:	b22d      	sxth	r5, r5
9001fae2:	9c01      	ldr	r4, [sp, #4]
9001fae4:	fb0c 7505 	mla	r5, ip, r5, r7
9001fae8:	5d64      	ldrb	r4, [r4, r5]
9001faea:	2cff      	cmp	r4, #255	@ 0xff
9001faec:	d10c      	bne.n	9001fb08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001faee:	9c00      	ldr	r4, [sp, #0]
9001faf0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001faf4:	f06f 0401 	mvn.w	r4, #1
9001faf8:	4374      	muls	r4, r6
9001fafa:	5305      	strh	r5, [r0, r4]
9001fafc:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001fafe:	3e01      	subs	r6, #1
9001fb00:	4421      	add	r1, r4
9001fb02:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001fb04:	4422      	add	r2, r4
9001fb06:	e79c      	b.n	9001fa42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001fb08:	2c00      	cmp	r4, #0
9001fb0a:	d0f7      	beq.n	9001fafc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001fb0c:	9f00      	ldr	r7, [sp, #0]
9001fb0e:	fa1f fc84 	uxth.w	ip, r4
9001fb12:	43e4      	mvns	r4, r4
9001fb14:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001fb18:	f06f 0501 	mvn.w	r5, #1
9001fb1c:	b2e4      	uxtb	r4, r4
9001fb1e:	4375      	muls	r5, r6
9001fb20:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001fb24:	9502      	str	r5, [sp, #8]
9001fb26:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001fb2a:	5b45      	ldrh	r5, [r0, r5]
9001fb2c:	122f      	asrs	r7, r5, #8
9001fb2e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001fb32:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001fb36:	00ed      	lsls	r5, r5, #3
9001fb38:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001fb3c:	fb17 f704 	smulbb	r7, r7, r4
9001fb40:	b2ed      	uxtb	r5, r5
9001fb42:	fb1a fa04 	smulbb	sl, sl, r4
9001fb46:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001fb4a:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001fb4e:	fb15 f504 	smulbb	r5, r5, r4
9001fb52:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001fb56:	fa1f fe8e 	uxth.w	lr, lr
9001fb5a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001fb5e:	fa5f f989 	uxtb.w	r9, r9
9001fb62:	fb07 a70c 	mla	r7, r7, ip, sl
9001fb66:	f10e 0401 	add.w	r4, lr, #1
9001fb6a:	fb09 550c 	mla	r5, r9, ip, r5
9001fb6e:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001fb72:	9c02      	ldr	r4, [sp, #8]
9001fb74:	b2ad      	uxth	r5, r5
9001fb76:	b2bf      	uxth	r7, r7
9001fb78:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001fb7c:	f105 0a01 	add.w	sl, r5, #1
9001fb80:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001fb84:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001fb88:	ea4a 0e0e 	orr.w	lr, sl, lr
9001fb8c:	f107 0a01 	add.w	sl, r7, #1
9001fb90:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001fb94:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001fb98:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001fb9c:	ea4e 0e0a 	orr.w	lr, lr, sl
9001fba0:	f820 e004 	strh.w	lr, [r0, r4]
9001fba4:	e7aa      	b.n	9001fafc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001fba6:	f04f 0900 	mov.w	r9, #0
9001fbaa:	eba3 0409 	sub.w	r4, r3, r9
9001fbae:	2c00      	cmp	r4, #0
9001fbb0:	f77f af4a 	ble.w	9001fa48 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001fbb4:	1414      	asrs	r4, r2, #16
9001fbb6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001fbba:	140d      	asrs	r5, r1, #16
9001fbbc:	fb06 5504 	mla	r5, r6, r4, r5
9001fbc0:	9c01      	ldr	r4, [sp, #4]
9001fbc2:	5d64      	ldrb	r4, [r4, r5]
9001fbc4:	2cff      	cmp	r4, #255	@ 0xff
9001fbc6:	d10b      	bne.n	9001fbe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001fbc8:	9c00      	ldr	r4, [sp, #0]
9001fbca:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001fbce:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001fbd2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001fbd4:	f109 0901 	add.w	r9, r9, #1
9001fbd8:	4421      	add	r1, r4
9001fbda:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001fbdc:	4422      	add	r2, r4
9001fbde:	e7e4      	b.n	9001fbaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001fbe0:	2c00      	cmp	r4, #0
9001fbe2:	d0f6      	beq.n	9001fbd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001fbe4:	9e00      	ldr	r6, [sp, #0]
9001fbe6:	b2a7      	uxth	r7, r4
9001fbe8:	43e4      	mvns	r4, r4
9001fbea:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001fbee:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001fbf2:	b2e4      	uxtb	r4, r4
9001fbf4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001fbf8:	122e      	asrs	r6, r5, #8
9001fbfa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001fbfe:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001fc02:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001fc06:	00ed      	lsls	r5, r5, #3
9001fc08:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001fc0c:	fb16 f604 	smulbb	r6, r6, r4
9001fc10:	b2ed      	uxtb	r5, r5
9001fc12:	fb1a fa04 	smulbb	sl, sl, r4
9001fc16:	fb0c 6c07 	mla	ip, ip, r7, r6
9001fc1a:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001fc1e:	fb15 f504 	smulbb	r5, r5, r4
9001fc22:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001fc26:	fa1f fc8c 	uxth.w	ip, ip
9001fc2a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001fc2e:	fa5f fe8e 	uxtb.w	lr, lr
9001fc32:	fb06 a607 	mla	r6, r6, r7, sl
9001fc36:	f10c 0401 	add.w	r4, ip, #1
9001fc3a:	fb0e 5507 	mla	r5, lr, r7, r5
9001fc3e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001fc42:	b2ad      	uxth	r5, r5
9001fc44:	b2b6      	uxth	r6, r6
9001fc46:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001fc4a:	f105 0a01 	add.w	sl, r5, #1
9001fc4e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001fc52:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001fc56:	ea4a 0c0c 	orr.w	ip, sl, ip
9001fc5a:	f106 0a01 	add.w	sl, r6, #1
9001fc5e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001fc62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001fc66:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001fc6a:	ea4c 0c0a 	orr.w	ip, ip, sl
9001fc6e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001fc72:	e7ae      	b.n	9001fbd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001fc74:	b005      	add	sp, #20
9001fc76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001fc7a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001fc7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fc7e:	b085      	sub	sp, #20
9001fc80:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001fc82:	9203      	str	r2, [sp, #12]
9001fc84:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
9001fc88:	9100      	str	r1, [sp, #0]
9001fc8a:	9201      	str	r2, [sp, #4]
9001fc8c:	6841      	ldr	r1, [r0, #4]
9001fc8e:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001fc92:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001fc96:	fb01 2404 	mla	r4, r1, r4, r2
9001fc9a:	6802      	ldr	r2, [r0, #0]
9001fc9c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001fca0:	f8de 2000 	ldr.w	r2, [lr]
9001fca4:	9202      	str	r2, [sp, #8]
9001fca6:	9a01      	ldr	r2, [sp, #4]
9001fca8:	43d6      	mvns	r6, r2
9001fcaa:	b2f6      	uxtb	r6, r6
9001fcac:	9a00      	ldr	r2, [sp, #0]
9001fcae:	2a00      	cmp	r2, #0
9001fcb0:	dc03      	bgt.n	9001fcba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001fcb2:	9a03      	ldr	r2, [sp, #12]
9001fcb4:	2a00      	cmp	r2, #0
9001fcb6:	f340 8124 	ble.w	9001ff02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001fcba:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001fcbc:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001fcc0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001fcc4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001fcc6:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001fcca:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001fcce:	2b00      	cmp	r3, #0
9001fcd0:	dd0e      	ble.n	9001fcf0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001fcd2:	1408      	asrs	r0, r1, #16
9001fcd4:	d405      	bmi.n	9001fce2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001fcd6:	4560      	cmp	r0, ip
9001fcd8:	da03      	bge.n	9001fce2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001fcda:	1410      	asrs	r0, r2, #16
9001fcdc:	d401      	bmi.n	9001fce2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001fcde:	42b8      	cmp	r0, r7
9001fce0:	db07      	blt.n	9001fcf2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001fce2:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001fce4:	3b01      	subs	r3, #1
9001fce6:	3402      	adds	r4, #2
9001fce8:	4401      	add	r1, r0
9001fcea:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001fcec:	4402      	add	r2, r0
9001fcee:	e7ee      	b.n	9001fcce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001fcf0:	d06e      	beq.n	9001fdd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001fcf2:	1e58      	subs	r0, r3, #1
9001fcf4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001fcf6:	fb05 1500 	mla	r5, r5, r0, r1
9001fcfa:	142d      	asrs	r5, r5, #16
9001fcfc:	d45c      	bmi.n	9001fdb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001fcfe:	4565      	cmp	r5, ip
9001fd00:	da5a      	bge.n	9001fdb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001fd02:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001fd04:	fb05 2000 	mla	r0, r5, r0, r2
9001fd08:	1400      	asrs	r0, r0, #16
9001fd0a:	d455      	bmi.n	9001fdb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001fd0c:	42b8      	cmp	r0, r7
9001fd0e:	da53      	bge.n	9001fdb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001fd10:	4699      	mov	r9, r3
9001fd12:	46a2      	mov	sl, r4
9001fd14:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001fd18:	f1b9 0f00 	cmp.w	r9, #0
9001fd1c:	dd54      	ble.n	9001fdc8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001fd1e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001fd22:	140d      	asrs	r5, r1, #16
9001fd24:	1410      	asrs	r0, r2, #16
9001fd26:	f109 39ff 	add.w	r9, r9, #4294967295
9001fd2a:	fb07 5000 	mla	r0, r7, r0, r5
9001fd2e:	9d02      	ldr	r5, [sp, #8]
9001fd30:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001fd34:	f8ba 5000 	ldrh.w	r5, [sl]
9001fd38:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001fd3c:	122f      	asrs	r7, r5, #8
9001fd3e:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001fd42:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001fd46:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001fd4a:	00ed      	lsls	r5, r5, #3
9001fd4c:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001fd50:	fb17 f706 	smulbb	r7, r7, r6
9001fd54:	b2ed      	uxtb	r5, r5
9001fd56:	fb18 f806 	smulbb	r8, r8, r6
9001fd5a:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001fd5e:	10c7      	asrs	r7, r0, #3
9001fd60:	fb15 f506 	smulbb	r5, r5, r6
9001fd64:	00c0      	lsls	r0, r0, #3
9001fd66:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001fd6a:	fa1f fc8c 	uxth.w	ip, ip
9001fd6e:	b2c0      	uxtb	r0, r0
9001fd70:	fb07 870b 	mla	r7, r7, fp, r8
9001fd74:	fb00 500b 	mla	r0, r0, fp, r5
9001fd78:	f10c 0501 	add.w	r5, ip, #1
9001fd7c:	b2bf      	uxth	r7, r7
9001fd7e:	b280      	uxth	r0, r0
9001fd80:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001fd84:	f107 0801 	add.w	r8, r7, #1
9001fd88:	1c45      	adds	r5, r0, #1
9001fd8a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001fd8e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001fd92:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001fd96:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001fd98:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001fd9c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001fda0:	4401      	add	r1, r0
9001fda2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001fda6:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001fda8:	ea45 0c0c 	orr.w	ip, r5, ip
9001fdac:	4402      	add	r2, r0
9001fdae:	ea4c 0c08 	orr.w	ip, ip, r8
9001fdb2:	f82a cb02 	strh.w	ip, [sl], #2
9001fdb6:	e7af      	b.n	9001fd18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001fdb8:	f04f 0800 	mov.w	r8, #0
9001fdbc:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001fdc0:	eb03 0008 	add.w	r0, r3, r8
9001fdc4:	2800      	cmp	r0, #0
9001fdc6:	dc41      	bgt.n	9001fe4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001fdc8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001fdcc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001fdd0:	9b00      	ldr	r3, [sp, #0]
9001fdd2:	2b00      	cmp	r3, #0
9001fdd4:	f340 8095 	ble.w	9001ff02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001fdd8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001fddc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001fdde:	ee30 0a04 	vadd.f32	s0, s0, s8
9001fde2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001fde6:	eef0 6a62 	vmov.f32	s13, s5
9001fdea:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001fdee:	ee31 1a05 	vadd.f32	s2, s2, s10
9001fdf2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001fdf6:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
9001fdfa:	eef0 6a43 	vmov.f32	s13, s6
9001fdfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001fe02:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
9001fe06:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001fe0a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001fe0e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001fe12:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001fe16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001fe1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001fe1e:	ee12 2a90 	vmov	r2, s5
9001fe22:	eef0 2a47 	vmov.f32	s5, s14
9001fe26:	fb92 f3f3 	sdiv	r3, r2, r3
9001fe2a:	ee13 2a10 	vmov	r2, s6
9001fe2e:	9311      	str	r3, [sp, #68]	@ 0x44
9001fe30:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001fe32:	eeb0 3a67 	vmov.f32	s6, s15
9001fe36:	fb92 f3f3 	sdiv	r3, r2, r3
9001fe3a:	9312      	str	r3, [sp, #72]	@ 0x48
9001fe3c:	9b00      	ldr	r3, [sp, #0]
9001fe3e:	9a03      	ldr	r2, [sp, #12]
9001fe40:	3b01      	subs	r3, #1
9001fe42:	9300      	str	r3, [sp, #0]
9001fe44:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001fe46:	bf08      	it	eq
9001fe48:	4613      	moveq	r3, r2
9001fe4a:	e72f      	b.n	9001fcac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001fe4c:	140f      	asrs	r7, r1, #16
9001fe4e:	d451      	bmi.n	9001fef4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001fe50:	f8de 5008 	ldr.w	r5, [lr, #8]
9001fe54:	42bd      	cmp	r5, r7
9001fe56:	dd4d      	ble.n	9001fef4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001fe58:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001fe5c:	d44a      	bmi.n	9001fef4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001fe5e:	f8de 000c 	ldr.w	r0, [lr, #12]
9001fe62:	4560      	cmp	r0, ip
9001fe64:	dd46      	ble.n	9001fef4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001fe66:	b22d      	sxth	r5, r5
9001fe68:	9802      	ldr	r0, [sp, #8]
9001fe6a:	fb0c 7505 	mla	r5, ip, r5, r7
9001fe6e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001fe72:	f06f 0501 	mvn.w	r5, #1
9001fe76:	fb05 fb08 	mul.w	fp, r5, r8
9001fe7a:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001fe7e:	f834 500b 	ldrh.w	r5, [r4, fp]
9001fe82:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001fe86:	122f      	asrs	r7, r5, #8
9001fe88:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001fe8c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001fe90:	00ed      	lsls	r5, r5, #3
9001fe92:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001fe96:	fb17 f706 	smulbb	r7, r7, r6
9001fe9a:	b2ed      	uxtb	r5, r5
9001fe9c:	fb19 f906 	smulbb	r9, r9, r6
9001fea0:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001fea4:	10c7      	asrs	r7, r0, #3
9001fea6:	fb15 f506 	smulbb	r5, r5, r6
9001feaa:	00c0      	lsls	r0, r0, #3
9001feac:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001feb0:	fa1f fc8c 	uxth.w	ip, ip
9001feb4:	b2c0      	uxtb	r0, r0
9001feb6:	fb07 970a 	mla	r7, r7, sl, r9
9001feba:	fb00 500a 	mla	r0, r0, sl, r5
9001febe:	f10c 0501 	add.w	r5, ip, #1
9001fec2:	b2bf      	uxth	r7, r7
9001fec4:	b280      	uxth	r0, r0
9001fec6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001feca:	f107 0901 	add.w	r9, r7, #1
9001fece:	1c45      	adds	r5, r0, #1
9001fed0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001fed4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001fed8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001fedc:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001fee0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001fee4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001fee8:	ea45 0c0c 	orr.w	ip, r5, ip
9001feec:	ea4c 0c09 	orr.w	ip, ip, r9
9001fef0:	f824 c00b 	strh.w	ip, [r4, fp]
9001fef4:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001fef6:	f108 38ff 	add.w	r8, r8, #4294967295
9001fefa:	4401      	add	r1, r0
9001fefc:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001fefe:	4402      	add	r2, r0
9001ff00:	e75e      	b.n	9001fdc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001ff02:	b005      	add	sp, #20
9001ff04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ff08 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ff08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ff0c:	b085      	sub	sp, #20
9001ff0e:	4693      	mov	fp, r2
9001ff10:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ff14:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001ff16:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001ff18:	6870      	ldr	r0, [r6, #4]
9001ff1a:	9101      	str	r1, [sp, #4]
9001ff1c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001ff20:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001ff24:	fb00 2404 	mla	r4, r0, r4, r2
9001ff28:	6832      	ldr	r2, [r6, #0]
9001ff2a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ff2e:	682a      	ldr	r2, [r5, #0]
9001ff30:	9202      	str	r2, [sp, #8]
9001ff32:	9a01      	ldr	r2, [sp, #4]
9001ff34:	2a00      	cmp	r2, #0
9001ff36:	dc03      	bgt.n	9001ff40 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001ff38:	f1bb 0f00 	cmp.w	fp, #0
9001ff3c:	f340 809a 	ble.w	90020074 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001ff40:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001ff42:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001ff46:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001ff4a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001ff4c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001ff50:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001ff54:	2b00      	cmp	r3, #0
9001ff56:	dd0c      	ble.n	9001ff72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001ff58:	1406      	asrs	r6, r0, #16
9001ff5a:	d405      	bmi.n	9001ff68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001ff5c:	454e      	cmp	r6, r9
9001ff5e:	da03      	bge.n	9001ff68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001ff60:	1416      	asrs	r6, r2, #16
9001ff62:	d401      	bmi.n	9001ff68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001ff64:	4546      	cmp	r6, r8
9001ff66:	db05      	blt.n	9001ff74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001ff68:	4470      	add	r0, lr
9001ff6a:	4462      	add	r2, ip
9001ff6c:	3b01      	subs	r3, #1
9001ff6e:	3402      	adds	r4, #2
9001ff70:	e7f0      	b.n	9001ff54 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001ff72:	d00f      	beq.n	9001ff94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001ff74:	1e5e      	subs	r6, r3, #1
9001ff76:	fb0e 0706 	mla	r7, lr, r6, r0
9001ff7a:	143f      	asrs	r7, r7, #16
9001ff7c:	d541      	bpl.n	90020002 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001ff7e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001ff82:	4698      	mov	r8, r3
9001ff84:	9603      	str	r6, [sp, #12]
9001ff86:	f1b8 0f00 	cmp.w	r8, #0
9001ff8a:	dc56      	bgt.n	9002003a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001ff8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ff90:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ff94:	9b01      	ldr	r3, [sp, #4]
9001ff96:	2b00      	cmp	r3, #0
9001ff98:	dd6c      	ble.n	90020074 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001ff9a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ff9e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ffa0:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ffa4:	eeb0 6a62 	vmov.f32	s12, s5
9001ffa8:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ffac:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ffb0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ffb4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001ffb8:	eeb0 6a43 	vmov.f32	s12, s6
9001ffbc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ffc0:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001ffc4:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ffc8:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ffcc:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ffd0:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ffd4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ffd8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ffdc:	ee12 2a90 	vmov	r2, s5
9001ffe0:	eef0 2a47 	vmov.f32	s5, s14
9001ffe4:	fb92 fef3 	sdiv	lr, r2, r3
9001ffe8:	ee13 2a10 	vmov	r2, s6
9001ffec:	eeb0 3a67 	vmov.f32	s6, s15
9001fff0:	fb92 fcf3 	sdiv	ip, r2, r3
9001fff4:	9b01      	ldr	r3, [sp, #4]
9001fff6:	3b01      	subs	r3, #1
9001fff8:	9301      	str	r3, [sp, #4]
9001fffa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001fffc:	bf08      	it	eq
9001fffe:	465b      	moveq	r3, fp
90020000:	e797      	b.n	9001ff32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90020002:	454f      	cmp	r7, r9
90020004:	dabb      	bge.n	9001ff7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90020006:	fb0c 2606 	mla	r6, ip, r6, r2
9002000a:	1436      	asrs	r6, r6, #16
9002000c:	d4b7      	bmi.n	9001ff7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002000e:	4546      	cmp	r6, r8
90020010:	dab5      	bge.n	9001ff7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90020012:	461e      	mov	r6, r3
90020014:	46a0      	mov	r8, r4
90020016:	2e00      	cmp	r6, #0
90020018:	ddb8      	ble.n	9001ff8c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002001a:	1417      	asrs	r7, r2, #16
9002001c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90020020:	ea4f 4920 	mov.w	r9, r0, asr #16
90020024:	9902      	ldr	r1, [sp, #8]
90020026:	4470      	add	r0, lr
90020028:	4462      	add	r2, ip
9002002a:	fb0a 9707 	mla	r7, sl, r7, r9
9002002e:	3e01      	subs	r6, #1
90020030:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
90020034:	f828 7b02 	strh.w	r7, [r8], #2
90020038:	e7ed      	b.n	90020016 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9002003a:	ea5f 4920 	movs.w	r9, r0, asr #16
9002003e:	d414      	bmi.n	9002006a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90020040:	68ae      	ldr	r6, [r5, #8]
90020042:	454e      	cmp	r6, r9
90020044:	dd11      	ble.n	9002006a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90020046:	ea5f 4a22 	movs.w	sl, r2, asr #16
9002004a:	d40e      	bmi.n	9002006a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9002004c:	68ef      	ldr	r7, [r5, #12]
9002004e:	4557      	cmp	r7, sl
90020050:	dd0b      	ble.n	9002006a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90020052:	b236      	sxth	r6, r6
90020054:	f06f 0101 	mvn.w	r1, #1
90020058:	9f02      	ldr	r7, [sp, #8]
9002005a:	fb0a 9606 	mla	r6, sl, r6, r9
9002005e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
90020062:	fb01 f608 	mul.w	r6, r1, r8
90020066:	9903      	ldr	r1, [sp, #12]
90020068:	538f      	strh	r7, [r1, r6]
9002006a:	4470      	add	r0, lr
9002006c:	4462      	add	r2, ip
9002006e:	f108 38ff 	add.w	r8, r8, #4294967295
90020072:	e788      	b.n	9001ff86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90020074:	b005      	add	sp, #20
90020076:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002007a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002007a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002007e:	b087      	sub	sp, #28
90020080:	468b      	mov	fp, r1
90020082:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90020086:	9815      	ldr	r0, [sp, #84]	@ 0x54
90020088:	9203      	str	r2, [sp, #12]
9002008a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9002008e:	6841      	ldr	r1, [r0, #4]
90020090:	9204      	str	r2, [sp, #16]
90020092:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
90020096:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9002009a:	fb01 2505 	mla	r5, r1, r5, r2
9002009e:	6802      	ldr	r2, [r0, #0]
900200a0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
900200a4:	f8d9 2000 	ldr.w	r2, [r9]
900200a8:	9201      	str	r2, [sp, #4]
900200aa:	f1bb 0f00 	cmp.w	fp, #0
900200ae:	dc03      	bgt.n	900200b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
900200b0:	9a03      	ldr	r2, [sp, #12]
900200b2:	2a00      	cmp	r2, #0
900200b4:	f340 8158 	ble.w	90020368 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
900200b8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900200ba:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
900200be:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
900200c2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900200c4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
900200c8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
900200cc:	2b00      	cmp	r3, #0
900200ce:	dd0e      	ble.n	900200ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900200d0:	1402      	asrs	r2, r0, #16
900200d2:	d405      	bmi.n	900200e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900200d4:	42ba      	cmp	r2, r7
900200d6:	da03      	bge.n	900200e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900200d8:	140a      	asrs	r2, r1, #16
900200da:	d401      	bmi.n	900200e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900200dc:	42b2      	cmp	r2, r6
900200de:	db07      	blt.n	900200f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900200e0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900200e2:	3b01      	subs	r3, #1
900200e4:	3502      	adds	r5, #2
900200e6:	4410      	add	r0, r2
900200e8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900200ea:	4411      	add	r1, r2
900200ec:	e7ee      	b.n	900200cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900200ee:	d017      	beq.n	90020120 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
900200f0:	1e5a      	subs	r2, r3, #1
900200f2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900200f4:	fb04 0402 	mla	r4, r4, r2, r0
900200f8:	1424      	asrs	r4, r4, #16
900200fa:	d409      	bmi.n	90020110 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900200fc:	42bc      	cmp	r4, r7
900200fe:	da07      	bge.n	90020110 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90020100:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90020102:	fb04 1202 	mla	r2, r4, r2, r1
90020106:	1412      	asrs	r2, r2, #16
90020108:	d402      	bmi.n	90020110 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9002010a:	42b2      	cmp	r2, r6
9002010c:	f2c0 80bf 	blt.w	9002028e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90020110:	2700      	movs	r7, #0
90020112:	19da      	adds	r2, r3, r7
90020114:	2a00      	cmp	r2, #0
90020116:	dc3e      	bgt.n	90020196 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90020118:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9002011c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
90020120:	f1bb 0f00 	cmp.w	fp, #0
90020124:	f340 8120 	ble.w	90020368 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
90020128:	ee30 0a04 	vadd.f32	s0, s0, s8
9002012c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9002012e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020132:	f1bb 0b01 	subs.w	fp, fp, #1
90020136:	eeb0 6a62 	vmov.f32	s12, s5
9002013a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9002013e:	ee31 1a05 	vadd.f32	s2, s2, s10
90020142:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90020146:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9002014a:	eeb0 6a43 	vmov.f32	s12, s6
9002014e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90020152:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
90020156:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002015a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002015e:	ee77 2a62 	vsub.f32	s5, s14, s5
90020162:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020166:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002016a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002016e:	ee12 2a90 	vmov	r2, s5
90020172:	eef0 2a47 	vmov.f32	s5, s14
90020176:	fb92 f3f3 	sdiv	r3, r2, r3
9002017a:	ee13 2a10 	vmov	r2, s6
9002017e:	9313      	str	r3, [sp, #76]	@ 0x4c
90020180:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020182:	eeb0 3a67 	vmov.f32	s6, s15
90020186:	fb92 f3f3 	sdiv	r3, r2, r3
9002018a:	9a03      	ldr	r2, [sp, #12]
9002018c:	9314      	str	r3, [sp, #80]	@ 0x50
9002018e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020190:	bf08      	it	eq
90020192:	4613      	moveq	r3, r2
90020194:	e789      	b.n	900200aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90020196:	1406      	asrs	r6, r0, #16
90020198:	d42d      	bmi.n	900201f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9002019a:	f8d9 4008 	ldr.w	r4, [r9, #8]
9002019e:	42b4      	cmp	r4, r6
900201a0:	dd29      	ble.n	900201f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
900201a2:	ea5f 4c21 	movs.w	ip, r1, asr #16
900201a6:	d426      	bmi.n	900201f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
900201a8:	f8d9 200c 	ldr.w	r2, [r9, #12]
900201ac:	4562      	cmp	r2, ip
900201ae:	dd22      	ble.n	900201f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
900201b0:	b224      	sxth	r4, r4
900201b2:	9a01      	ldr	r2, [sp, #4]
900201b4:	fb0c 6404 	mla	r4, ip, r4, r6
900201b8:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
900201bc:	0e22      	lsrs	r2, r4, #24
900201be:	d01a      	beq.n	900201f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
900201c0:	9e04      	ldr	r6, [sp, #16]
900201c2:	4372      	muls	r2, r6
900201c4:	1c56      	adds	r6, r2, #1
900201c6:	eb06 2222 	add.w	r2, r6, r2, asr #8
900201ca:	0a26      	lsrs	r6, r4, #8
900201cc:	1212      	asrs	r2, r2, #8
900201ce:	9605      	str	r6, [sp, #20]
900201d0:	2aff      	cmp	r2, #255	@ 0xff
900201d2:	d116      	bne.n	90020202 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
900201d4:	f06f 0201 	mvn.w	r2, #1
900201d8:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
900201dc:	fb02 fc07 	mul.w	ip, r2, r7
900201e0:	0962      	lsrs	r2, r4, #5
900201e2:	f026 0607 	bic.w	r6, r6, #7
900201e6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
900201ea:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900201ee:	4316      	orrs	r6, r2
900201f0:	4326      	orrs	r6, r4
900201f2:	f825 600c 	strh.w	r6, [r5, ip]
900201f6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900201f8:	3f01      	subs	r7, #1
900201fa:	4410      	add	r0, r2
900201fc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900201fe:	4411      	add	r1, r2
90020200:	e787      	b.n	90020112 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90020202:	f06f 0601 	mvn.w	r6, #1
90020206:	fa1f fa82 	uxth.w	sl, r2
9002020a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9002020e:	43d2      	mvns	r2, r2
90020210:	437e      	muls	r6, r7
90020212:	b2e4      	uxtb	r4, r4
90020214:	fb1c fc0a 	smulbb	ip, ip, sl
90020218:	b2d2      	uxtb	r2, r2
9002021a:	f835 8006 	ldrh.w	r8, [r5, r6]
9002021e:	fb14 f40a 	smulbb	r4, r4, sl
90020222:	9602      	str	r6, [sp, #8]
90020224:	ea4f 2e28 	mov.w	lr, r8, asr #8
90020228:	f89d 6014 	ldrb.w	r6, [sp, #20]
9002022c:	fb16 f60a 	smulbb	r6, r6, sl
90020230:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90020234:	fb0e ce02 	mla	lr, lr, r2, ip
90020238:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9002023c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90020240:	fa1f fe8e 	uxth.w	lr, lr
90020244:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90020248:	fa5f f888 	uxtb.w	r8, r8
9002024c:	fb0c 6c02 	mla	ip, ip, r2, r6
90020250:	fb08 4402 	mla	r4, r8, r2, r4
90020254:	f10e 0201 	add.w	r2, lr, #1
90020258:	fa1f fc8c 	uxth.w	ip, ip
9002025c:	b2a4      	uxth	r4, r4
9002025e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
90020262:	9a02      	ldr	r2, [sp, #8]
90020264:	1c66      	adds	r6, r4, #1
90020266:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9002026a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9002026e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
90020272:	ea46 0e0e 	orr.w	lr, r6, lr
90020276:	f10c 0601 	add.w	r6, ip, #1
9002027a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9002027e:	0976      	lsrs	r6, r6, #5
90020280:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90020284:	ea4e 0e06 	orr.w	lr, lr, r6
90020288:	f825 e002 	strh.w	lr, [r5, r2]
9002028c:	e7b3      	b.n	900201f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9002028e:	f04f 0800 	mov.w	r8, #0
90020292:	eba3 0208 	sub.w	r2, r3, r8
90020296:	2a00      	cmp	r2, #0
90020298:	f77f af3e 	ble.w	90020118 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9002029c:	1404      	asrs	r4, r0, #16
9002029e:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
900202a2:	140a      	asrs	r2, r1, #16
900202a4:	fb06 4202 	mla	r2, r6, r2, r4
900202a8:	9c01      	ldr	r4, [sp, #4]
900202aa:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
900202ae:	0e22      	lsrs	r2, r4, #24
900202b0:	d015      	beq.n	900202de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
900202b2:	9e04      	ldr	r6, [sp, #16]
900202b4:	4372      	muls	r2, r6
900202b6:	1c56      	adds	r6, r2, #1
900202b8:	eb06 2222 	add.w	r2, r6, r2, asr #8
900202bc:	0a26      	lsrs	r6, r4, #8
900202be:	1212      	asrs	r2, r2, #8
900202c0:	2aff      	cmp	r2, #255	@ 0xff
900202c2:	d113      	bne.n	900202ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
900202c4:	0962      	lsrs	r2, r4, #5
900202c6:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
900202ca:	f3c4 04c4 	ubfx	r4, r4, #3, #5
900202ce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900202d2:	f026 0607 	bic.w	r6, r6, #7
900202d6:	4316      	orrs	r6, r2
900202d8:	4326      	orrs	r6, r4
900202da:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
900202de:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900202e0:	f108 0801 	add.w	r8, r8, #1
900202e4:	4410      	add	r0, r2
900202e6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900202e8:	4411      	add	r1, r2
900202ea:	e7d2      	b.n	90020292 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
900202ec:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
900202f0:	fa1f fa82 	uxth.w	sl, r2
900202f4:	f3c4 4707 	ubfx	r7, r4, #16, #8
900202f8:	43d2      	mvns	r2, r2
900202fa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
900202fe:	fb17 f70a 	smulbb	r7, r7, sl
90020302:	b2d2      	uxtb	r2, r2
90020304:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90020308:	b2e4      	uxtb	r4, r4
9002030a:	b2f6      	uxtb	r6, r6
9002030c:	fb0c 7c02 	mla	ip, ip, r2, r7
90020310:	ea4f 07ee 	mov.w	r7, lr, asr #3
90020314:	fb14 f40a 	smulbb	r4, r4, sl
90020318:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002031c:	fa1f fc8c 	uxth.w	ip, ip
90020320:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90020324:	fb16 f60a 	smulbb	r6, r6, sl
90020328:	fa5f fe8e 	uxtb.w	lr, lr
9002032c:	fb0e 4402 	mla	r4, lr, r2, r4
90020330:	fb07 6702 	mla	r7, r7, r2, r6
90020334:	f10c 0201 	add.w	r2, ip, #1
90020338:	b2a4      	uxth	r4, r4
9002033a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9002033e:	1c66      	adds	r6, r4, #1
90020340:	b2bf      	uxth	r7, r7
90020342:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90020346:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9002034a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9002034e:	ea46 0c0c 	orr.w	ip, r6, ip
90020352:	1c7e      	adds	r6, r7, #1
90020354:	eb06 2617 	add.w	r6, r6, r7, lsr #8
90020358:	0976      	lsrs	r6, r6, #5
9002035a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9002035e:	ea4c 0c06 	orr.w	ip, ip, r6
90020362:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
90020366:	e7ba      	b.n	900202de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
90020368:	b007      	add	sp, #28
9002036a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

90020370 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020370:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020374:	b085      	sub	sp, #20
90020376:	468b      	mov	fp, r1
90020378:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9002037c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9002037e:	9203      	str	r2, [sp, #12]
90020380:	6841      	ldr	r1, [r0, #4]
90020382:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
90020386:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9002038a:	fb01 2404 	mla	r4, r1, r4, r2
9002038e:	6802      	ldr	r2, [r0, #0]
90020390:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90020394:	f8d8 2000 	ldr.w	r2, [r8]
90020398:	9201      	str	r2, [sp, #4]
9002039a:	f1bb 0f00 	cmp.w	fp, #0
9002039e:	dc03      	bgt.n	900203a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900203a0:	9a03      	ldr	r2, [sp, #12]
900203a2:	2a00      	cmp	r2, #0
900203a4:	f340 814f 	ble.w	90020646 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
900203a8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900203aa:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
900203ae:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
900203b2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900203b4:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
900203b8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
900203bc:	2b00      	cmp	r3, #0
900203be:	dd0e      	ble.n	900203de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
900203c0:	1408      	asrs	r0, r1, #16
900203c2:	d405      	bmi.n	900203d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
900203c4:	42b8      	cmp	r0, r7
900203c6:	da03      	bge.n	900203d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
900203c8:	1410      	asrs	r0, r2, #16
900203ca:	d401      	bmi.n	900203d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
900203cc:	42b0      	cmp	r0, r6
900203ce:	db07      	blt.n	900203e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900203d0:	9811      	ldr	r0, [sp, #68]	@ 0x44
900203d2:	3b01      	subs	r3, #1
900203d4:	3402      	adds	r4, #2
900203d6:	4401      	add	r1, r0
900203d8:	9812      	ldr	r0, [sp, #72]	@ 0x48
900203da:	4402      	add	r2, r0
900203dc:	e7ee      	b.n	900203bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
900203de:	d017      	beq.n	90020410 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
900203e0:	1e58      	subs	r0, r3, #1
900203e2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900203e4:	fb05 1500 	mla	r5, r5, r0, r1
900203e8:	142d      	asrs	r5, r5, #16
900203ea:	d409      	bmi.n	90020400 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900203ec:	42bd      	cmp	r5, r7
900203ee:	da07      	bge.n	90020400 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900203f0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900203f2:	fb05 2000 	mla	r0, r5, r0, r2
900203f6:	1400      	asrs	r0, r0, #16
900203f8:	d402      	bmi.n	90020400 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900203fa:	42b0      	cmp	r0, r6
900203fc:	f2c0 80ba 	blt.w	90020574 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90020400:	2600      	movs	r6, #0
90020402:	1998      	adds	r0, r3, r6
90020404:	2800      	cmp	r0, #0
90020406:	dc3e      	bgt.n	90020486 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90020408:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9002040c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90020410:	f1bb 0f00 	cmp.w	fp, #0
90020414:	f340 8117 	ble.w	90020646 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90020418:	ee30 0a04 	vadd.f32	s0, s0, s8
9002041c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002041e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020422:	f1bb 0b01 	subs.w	fp, fp, #1
90020426:	eeb0 6a62 	vmov.f32	s12, s5
9002042a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9002042e:	ee31 1a05 	vadd.f32	s2, s2, s10
90020432:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90020436:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9002043a:	eeb0 6a43 	vmov.f32	s12, s6
9002043e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90020442:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
90020446:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002044a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002044e:	ee77 2a62 	vsub.f32	s5, s14, s5
90020452:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020456:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002045a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002045e:	ee12 2a90 	vmov	r2, s5
90020462:	eef0 2a47 	vmov.f32	s5, s14
90020466:	fb92 f3f3 	sdiv	r3, r2, r3
9002046a:	ee13 2a10 	vmov	r2, s6
9002046e:	9311      	str	r3, [sp, #68]	@ 0x44
90020470:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90020472:	eeb0 3a67 	vmov.f32	s6, s15
90020476:	fb92 f3f3 	sdiv	r3, r2, r3
9002047a:	9a03      	ldr	r2, [sp, #12]
9002047c:	9312      	str	r3, [sp, #72]	@ 0x48
9002047e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90020480:	bf08      	it	eq
90020482:	4613      	moveq	r3, r2
90020484:	e789      	b.n	9002039a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90020486:	140f      	asrs	r7, r1, #16
90020488:	d424      	bmi.n	900204d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002048a:	f8d8 5008 	ldr.w	r5, [r8, #8]
9002048e:	42bd      	cmp	r5, r7
90020490:	dd20      	ble.n	900204d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90020492:	ea5f 4c22 	movs.w	ip, r2, asr #16
90020496:	d41d      	bmi.n	900204d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90020498:	f8d8 000c 	ldr.w	r0, [r8, #12]
9002049c:	4560      	cmp	r0, ip
9002049e:	dd19      	ble.n	900204d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900204a0:	b22d      	sxth	r5, r5
900204a2:	9801      	ldr	r0, [sp, #4]
900204a4:	fb0c 7505 	mla	r5, ip, r5, r7
900204a8:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
900204ac:	0e07      	lsrs	r7, r0, #24
900204ae:	2fff      	cmp	r7, #255	@ 0xff
900204b0:	d116      	bne.n	900204e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
900204b2:	f06f 0501 	mvn.w	r5, #1
900204b6:	fb05 f706 	mul.w	r7, r5, r6
900204ba:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
900204be:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
900204c2:	0945      	lsrs	r5, r0, #5
900204c4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
900204c8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900204cc:	ea4c 0505 	orr.w	r5, ip, r5
900204d0:	4305      	orrs	r5, r0
900204d2:	53e5      	strh	r5, [r4, r7]
900204d4:	9811      	ldr	r0, [sp, #68]	@ 0x44
900204d6:	3e01      	subs	r6, #1
900204d8:	4401      	add	r1, r0
900204da:	9812      	ldr	r0, [sp, #72]	@ 0x48
900204dc:	4402      	add	r2, r0
900204de:	e790      	b.n	90020402 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900204e0:	b2fd      	uxtb	r5, r7
900204e2:	2f00      	cmp	r7, #0
900204e4:	d0f6      	beq.n	900204d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900204e6:	f06f 0701 	mvn.w	r7, #1
900204ea:	fa1f f985 	uxth.w	r9, r5
900204ee:	43ed      	mvns	r5, r5
900204f0:	f3c0 2a07 	ubfx	sl, r0, #8, #8
900204f4:	4377      	muls	r7, r6
900204f6:	fb1a fa09 	smulbb	sl, sl, r9
900204fa:	b2ed      	uxtb	r5, r5
900204fc:	f834 e007 	ldrh.w	lr, [r4, r7]
90020500:	9702      	str	r7, [sp, #8]
90020502:	f3c0 4707 	ubfx	r7, r0, #16, #8
90020506:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9002050a:	fb17 f709 	smulbb	r7, r7, r9
9002050e:	b2c0      	uxtb	r0, r0
90020510:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90020514:	fb10 f009 	smulbb	r0, r0, r9
90020518:	fb0c 7c05 	mla	ip, ip, r5, r7
9002051c:	ea4f 07ee 	mov.w	r7, lr, asr #3
90020520:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90020524:	fa1f fc8c 	uxth.w	ip, ip
90020528:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9002052c:	fa5f fe8e 	uxtb.w	lr, lr
90020530:	fb07 a705 	mla	r7, r7, r5, sl
90020534:	fb0e 0005 	mla	r0, lr, r5, r0
90020538:	f10c 0501 	add.w	r5, ip, #1
9002053c:	b2bf      	uxth	r7, r7
9002053e:	b280      	uxth	r0, r0
90020540:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90020544:	f100 0a01 	add.w	sl, r0, #1
90020548:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9002054c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
90020550:	9802      	ldr	r0, [sp, #8]
90020552:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90020556:	ea4a 0c0c 	orr.w	ip, sl, ip
9002055a:	f107 0a01 	add.w	sl, r7, #1
9002055e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
90020562:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90020566:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9002056a:	ea4c 0c0a 	orr.w	ip, ip, sl
9002056e:	f824 c000 	strh.w	ip, [r4, r0]
90020572:	e7af      	b.n	900204d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90020574:	f04f 0e00 	mov.w	lr, #0
90020578:	eba3 000e 	sub.w	r0, r3, lr
9002057c:	2800      	cmp	r0, #0
9002057e:	f77f af43 	ble.w	90020408 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90020582:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
90020586:	140d      	asrs	r5, r1, #16
90020588:	1410      	asrs	r0, r2, #16
9002058a:	fb06 5000 	mla	r0, r6, r0, r5
9002058e:	9d01      	ldr	r5, [sp, #4]
90020590:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
90020594:	0e2e      	lsrs	r6, r5, #24
90020596:	2eff      	cmp	r6, #255	@ 0xff
90020598:	d112      	bne.n	900205c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9002059a:	482c      	ldr	r0, [pc, #176]	@ (9002064c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9002059c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
900205a0:	0968      	lsrs	r0, r5, #5
900205a2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
900205a6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900205aa:	4330      	orrs	r0, r6
900205ac:	4328      	orrs	r0, r5
900205ae:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
900205b2:	9811      	ldr	r0, [sp, #68]	@ 0x44
900205b4:	f10e 0e01 	add.w	lr, lr, #1
900205b8:	4401      	add	r1, r0
900205ba:	9812      	ldr	r0, [sp, #72]	@ 0x48
900205bc:	4402      	add	r2, r0
900205be:	e7db      	b.n	90020578 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
900205c0:	b2f0      	uxtb	r0, r6
900205c2:	2e00      	cmp	r6, #0
900205c4:	d0f5      	beq.n	900205b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900205c6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
900205ca:	fa1f f980 	uxth.w	r9, r0
900205ce:	f3c5 4607 	ubfx	r6, r5, #16, #8
900205d2:	43c0      	mvns	r0, r0
900205d4:	ea4f 272c 	mov.w	r7, ip, asr #8
900205d8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
900205dc:	fb16 f609 	smulbb	r6, r6, r9
900205e0:	b2c0      	uxtb	r0, r0
900205e2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900205e6:	b2ed      	uxtb	r5, r5
900205e8:	fb1a fa09 	smulbb	sl, sl, r9
900205ec:	fb07 6700 	mla	r7, r7, r0, r6
900205f0:	ea4f 06ec 	mov.w	r6, ip, asr #3
900205f4:	fb15 f509 	smulbb	r5, r5, r9
900205f8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900205fc:	b2bf      	uxth	r7, r7
900205fe:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90020602:	fa5f fc8c 	uxtb.w	ip, ip
90020606:	fb06 a600 	mla	r6, r6, r0, sl
9002060a:	fb0c 5500 	mla	r5, ip, r0, r5
9002060e:	1c78      	adds	r0, r7, #1
90020610:	b2b6      	uxth	r6, r6
90020612:	b2ad      	uxth	r5, r5
90020614:	eb00 2717 	add.w	r7, r0, r7, lsr #8
90020618:	f105 0a01 	add.w	sl, r5, #1
9002061c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90020620:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90020624:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90020628:	ea4a 0707 	orr.w	r7, sl, r7
9002062c:	f106 0a01 	add.w	sl, r6, #1
90020630:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90020634:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90020638:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9002063c:	ea47 070a 	orr.w	r7, r7, sl
90020640:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
90020644:	e7b5      	b.n	900205b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90020646:	b005      	add	sp, #20
90020648:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002064c:	fffff800 	.word	0xfffff800

90020650 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020654:	b087      	sub	sp, #28
90020656:	468b      	mov	fp, r1
90020658:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9002065c:	9815      	ldr	r0, [sp, #84]	@ 0x54
9002065e:	9203      	str	r2, [sp, #12]
90020660:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90020664:	6841      	ldr	r1, [r0, #4]
90020666:	9204      	str	r2, [sp, #16]
90020668:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9002066c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
90020670:	fb01 2404 	mla	r4, r1, r4, r2
90020674:	6802      	ldr	r2, [r0, #0]
90020676:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9002067a:	f8d9 2008 	ldr.w	r2, [r9, #8]
9002067e:	3201      	adds	r2, #1
90020680:	f022 0201 	bic.w	r2, r2, #1
90020684:	9200      	str	r2, [sp, #0]
90020686:	f8d9 2000 	ldr.w	r2, [r9]
9002068a:	9201      	str	r2, [sp, #4]
9002068c:	f1bb 0f00 	cmp.w	fp, #0
90020690:	dc03      	bgt.n	9002069a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90020692:	9a03      	ldr	r2, [sp, #12]
90020694:	2a00      	cmp	r2, #0
90020696:	f340 816a 	ble.w	9002096e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9002069a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9002069c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
900206a0:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
900206a4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900206a6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
900206aa:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
900206ae:	2b00      	cmp	r3, #0
900206b0:	dd0e      	ble.n	900206d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
900206b2:	1402      	asrs	r2, r0, #16
900206b4:	d405      	bmi.n	900206c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900206b6:	42ba      	cmp	r2, r7
900206b8:	da03      	bge.n	900206c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900206ba:	140a      	asrs	r2, r1, #16
900206bc:	d401      	bmi.n	900206c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900206be:	42b2      	cmp	r2, r6
900206c0:	db07      	blt.n	900206d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900206c2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900206c4:	3b01      	subs	r3, #1
900206c6:	3402      	adds	r4, #2
900206c8:	4410      	add	r0, r2
900206ca:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900206cc:	4411      	add	r1, r2
900206ce:	e7ee      	b.n	900206ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
900206d0:	d017      	beq.n	90020702 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
900206d2:	1e5a      	subs	r2, r3, #1
900206d4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900206d6:	fb05 0502 	mla	r5, r5, r2, r0
900206da:	142d      	asrs	r5, r5, #16
900206dc:	d409      	bmi.n	900206f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
900206de:	42bd      	cmp	r5, r7
900206e0:	da07      	bge.n	900206f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
900206e2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900206e4:	fb05 1202 	mla	r2, r5, r2, r1
900206e8:	1412      	asrs	r2, r2, #16
900206ea:	d402      	bmi.n	900206f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
900206ec:	42b2      	cmp	r2, r6
900206ee:	f2c0 80c8 	blt.w	90020882 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
900206f2:	2700      	movs	r7, #0
900206f4:	19da      	adds	r2, r3, r7
900206f6:	2a00      	cmp	r2, #0
900206f8:	dc3e      	bgt.n	90020778 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
900206fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900206fe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90020702:	f1bb 0f00 	cmp.w	fp, #0
90020706:	f340 8132 	ble.w	9002096e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9002070a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002070e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020710:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020714:	f1bb 0b01 	subs.w	fp, fp, #1
90020718:	eeb0 6a62 	vmov.f32	s12, s5
9002071c:	eec6 7a80 	vdiv.f32	s15, s13, s0
90020720:	ee31 1a05 	vadd.f32	s2, s2, s10
90020724:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90020728:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9002072c:	eeb0 6a43 	vmov.f32	s12, s6
90020730:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90020734:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
90020738:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002073c:	ee61 7a27 	vmul.f32	s15, s2, s15
90020740:	ee77 2a62 	vsub.f32	s5, s14, s5
90020744:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020748:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002074c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020750:	ee12 2a90 	vmov	r2, s5
90020754:	eef0 2a47 	vmov.f32	s5, s14
90020758:	fb92 f3f3 	sdiv	r3, r2, r3
9002075c:	ee13 2a10 	vmov	r2, s6
90020760:	9313      	str	r3, [sp, #76]	@ 0x4c
90020762:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020764:	eeb0 3a67 	vmov.f32	s6, s15
90020768:	fb92 f3f3 	sdiv	r3, r2, r3
9002076c:	9a03      	ldr	r2, [sp, #12]
9002076e:	9314      	str	r3, [sp, #80]	@ 0x50
90020770:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020772:	bf08      	it	eq
90020774:	4613      	moveq	r3, r2
90020776:	e789      	b.n	9002068c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90020778:	1405      	asrs	r5, r0, #16
9002077a:	d436      	bmi.n	900207ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9002077c:	f8d9 2008 	ldr.w	r2, [r9, #8]
90020780:	42aa      	cmp	r2, r5
90020782:	dd32      	ble.n	900207ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90020784:	140e      	asrs	r6, r1, #16
90020786:	d430      	bmi.n	900207ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90020788:	f8d9 200c 	ldr.w	r2, [r9, #12]
9002078c:	42b2      	cmp	r2, r6
9002078e:	dd2c      	ble.n	900207ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90020790:	9a00      	ldr	r2, [sp, #0]
90020792:	fb06 5502 	mla	r5, r6, r2, r5
90020796:	9e01      	ldr	r6, [sp, #4]
90020798:	086a      	lsrs	r2, r5, #1
9002079a:	5cb2      	ldrb	r2, [r6, r2]
9002079c:	07ee      	lsls	r6, r5, #31
9002079e:	bf54      	ite	pl
900207a0:	f002 020f 	andpl.w	r2, r2, #15
900207a4:	1112      	asrmi	r2, r2, #4
900207a6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900207aa:	b2d2      	uxtb	r2, r2
900207ac:	b1ea      	cbz	r2, 900207ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
900207ae:	9d04      	ldr	r5, [sp, #16]
900207b0:	436a      	muls	r2, r5
900207b2:	1c55      	adds	r5, r2, #1
900207b4:	eb05 2222 	add.w	r2, r5, r2, asr #8
900207b8:	4d6e      	ldr	r5, [pc, #440]	@ (90020974 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
900207ba:	1212      	asrs	r2, r2, #8
900207bc:	682d      	ldr	r5, [r5, #0]
900207be:	2aff      	cmp	r2, #255	@ 0xff
900207c0:	ea4f 2615 	mov.w	r6, r5, lsr #8
900207c4:	9605      	str	r6, [sp, #20]
900207c6:	d116      	bne.n	900207f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
900207c8:	f06f 0201 	mvn.w	r2, #1
900207cc:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
900207d0:	fb02 fc07 	mul.w	ip, r2, r7
900207d4:	096a      	lsrs	r2, r5, #5
900207d6:	f026 0607 	bic.w	r6, r6, #7
900207da:	f3c5 05c4 	ubfx	r5, r5, #3, #5
900207de:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900207e2:	4316      	orrs	r6, r2
900207e4:	432e      	orrs	r6, r5
900207e6:	f824 600c 	strh.w	r6, [r4, ip]
900207ea:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900207ec:	3f01      	subs	r7, #1
900207ee:	4410      	add	r0, r2
900207f0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900207f2:	4411      	add	r1, r2
900207f4:	e77e      	b.n	900206f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
900207f6:	f06f 0601 	mvn.w	r6, #1
900207fa:	fa1f fa82 	uxth.w	sl, r2
900207fe:	f3c5 4c07 	ubfx	ip, r5, #16, #8
90020802:	43d2      	mvns	r2, r2
90020804:	437e      	muls	r6, r7
90020806:	b2ed      	uxtb	r5, r5
90020808:	fb1c fc0a 	smulbb	ip, ip, sl
9002080c:	b2d2      	uxtb	r2, r2
9002080e:	f834 8006 	ldrh.w	r8, [r4, r6]
90020812:	fb15 f50a 	smulbb	r5, r5, sl
90020816:	9602      	str	r6, [sp, #8]
90020818:	ea4f 2e28 	mov.w	lr, r8, asr #8
9002081c:	f89d 6014 	ldrb.w	r6, [sp, #20]
90020820:	fb16 f60a 	smulbb	r6, r6, sl
90020824:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90020828:	fb0e ce02 	mla	lr, lr, r2, ip
9002082c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
90020830:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90020834:	fa1f fe8e 	uxth.w	lr, lr
90020838:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9002083c:	fa5f f888 	uxtb.w	r8, r8
90020840:	fb0c 6c02 	mla	ip, ip, r2, r6
90020844:	fb08 5502 	mla	r5, r8, r2, r5
90020848:	f10e 0201 	add.w	r2, lr, #1
9002084c:	fa1f fc8c 	uxth.w	ip, ip
90020850:	b2ad      	uxth	r5, r5
90020852:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
90020856:	9a02      	ldr	r2, [sp, #8]
90020858:	1c6e      	adds	r6, r5, #1
9002085a:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9002085e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
90020862:	f3c6 26c4 	ubfx	r6, r6, #11, #5
90020866:	ea46 0e0e 	orr.w	lr, r6, lr
9002086a:	f10c 0601 	add.w	r6, ip, #1
9002086e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
90020872:	0976      	lsrs	r6, r6, #5
90020874:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90020878:	ea4e 0e06 	orr.w	lr, lr, r6
9002087c:	f824 e002 	strh.w	lr, [r4, r2]
90020880:	e7b3      	b.n	900207ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90020882:	f04f 0800 	mov.w	r8, #0
90020886:	eba3 0208 	sub.w	r2, r3, r8
9002088a:	2a00      	cmp	r2, #0
9002088c:	f77f af35 	ble.w	900206fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
90020890:	1402      	asrs	r2, r0, #16
90020892:	9e00      	ldr	r6, [sp, #0]
90020894:	140d      	asrs	r5, r1, #16
90020896:	fb06 2505 	mla	r5, r6, r5, r2
9002089a:	9e01      	ldr	r6, [sp, #4]
9002089c:	086a      	lsrs	r2, r5, #1
9002089e:	07ed      	lsls	r5, r5, #31
900208a0:	5cb2      	ldrb	r2, [r6, r2]
900208a2:	bf54      	ite	pl
900208a4:	f002 020f 	andpl.w	r2, r2, #15
900208a8:	1112      	asrmi	r2, r2, #4
900208aa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900208ae:	b2d2      	uxtb	r2, r2
900208b0:	b1c2      	cbz	r2, 900208e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
900208b2:	9d04      	ldr	r5, [sp, #16]
900208b4:	436a      	muls	r2, r5
900208b6:	1c55      	adds	r5, r2, #1
900208b8:	eb05 2222 	add.w	r2, r5, r2, asr #8
900208bc:	4d2d      	ldr	r5, [pc, #180]	@ (90020974 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
900208be:	1212      	asrs	r2, r2, #8
900208c0:	682e      	ldr	r6, [r5, #0]
900208c2:	2aff      	cmp	r2, #255	@ 0xff
900208c4:	ea4f 2516 	mov.w	r5, r6, lsr #8
900208c8:	d113      	bne.n	900208f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
900208ca:	0972      	lsrs	r2, r6, #5
900208cc:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
900208d0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
900208d4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900208d8:	f025 0507 	bic.w	r5, r5, #7
900208dc:	4315      	orrs	r5, r2
900208de:	4335      	orrs	r5, r6
900208e0:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
900208e4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900208e6:	f108 0801 	add.w	r8, r8, #1
900208ea:	4410      	add	r0, r2
900208ec:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900208ee:	4411      	add	r1, r2
900208f0:	e7c9      	b.n	90020886 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
900208f2:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
900208f6:	fa1f fa82 	uxth.w	sl, r2
900208fa:	f3c6 4707 	ubfx	r7, r6, #16, #8
900208fe:	43d2      	mvns	r2, r2
90020900:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90020904:	fb17 f70a 	smulbb	r7, r7, sl
90020908:	b2d2      	uxtb	r2, r2
9002090a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9002090e:	b2f6      	uxtb	r6, r6
90020910:	b2ed      	uxtb	r5, r5
90020912:	fb0c 7c02 	mla	ip, ip, r2, r7
90020916:	ea4f 07ee 	mov.w	r7, lr, asr #3
9002091a:	fb16 f60a 	smulbb	r6, r6, sl
9002091e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90020922:	fa1f fc8c 	uxth.w	ip, ip
90020926:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9002092a:	fb15 f50a 	smulbb	r5, r5, sl
9002092e:	fa5f fe8e 	uxtb.w	lr, lr
90020932:	fb0e 6602 	mla	r6, lr, r2, r6
90020936:	fb07 5702 	mla	r7, r7, r2, r5
9002093a:	f10c 0201 	add.w	r2, ip, #1
9002093e:	b2b6      	uxth	r6, r6
90020940:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
90020944:	1c75      	adds	r5, r6, #1
90020946:	b2bf      	uxth	r7, r7
90020948:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9002094c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
90020950:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90020954:	ea45 0c0c 	orr.w	ip, r5, ip
90020958:	1c7d      	adds	r5, r7, #1
9002095a:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9002095e:	096d      	lsrs	r5, r5, #5
90020960:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90020964:	ea4c 0c05 	orr.w	ip, ip, r5
90020968:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9002096c:	e7ba      	b.n	900208e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9002096e:	b007      	add	sp, #28
90020970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020974:	24027eac 	.word	0x24027eac

90020978 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002097c:	b087      	sub	sp, #28
9002097e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90020982:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 90020c8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
90020986:	9815      	ldr	r0, [sp, #84]	@ 0x54
90020988:	9101      	str	r1, [sp, #4]
9002098a:	9205      	str	r2, [sp, #20]
9002098c:	6841      	ldr	r1, [r0, #4]
9002098e:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
90020992:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
90020996:	fb01 2404 	mla	r4, r1, r4, r2
9002099a:	6802      	ldr	r2, [r0, #0]
9002099c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
900209a0:	f8db 2008 	ldr.w	r2, [fp, #8]
900209a4:	3201      	adds	r2, #1
900209a6:	f022 0201 	bic.w	r2, r2, #1
900209aa:	9202      	str	r2, [sp, #8]
900209ac:	f8db 2000 	ldr.w	r2, [fp]
900209b0:	9203      	str	r2, [sp, #12]
900209b2:	9a01      	ldr	r2, [sp, #4]
900209b4:	2a00      	cmp	r2, #0
900209b6:	dc03      	bgt.n	900209c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900209b8:	9a05      	ldr	r2, [sp, #20]
900209ba:	2a00      	cmp	r2, #0
900209bc:	f340 8162 	ble.w	90020c84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
900209c0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900209c2:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
900209c6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
900209ca:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900209cc:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
900209d0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
900209d4:	2b00      	cmp	r3, #0
900209d6:	dd0e      	ble.n	900209f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
900209d8:	1402      	asrs	r2, r0, #16
900209da:	d405      	bmi.n	900209e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900209dc:	42ba      	cmp	r2, r7
900209de:	da03      	bge.n	900209e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900209e0:	140a      	asrs	r2, r1, #16
900209e2:	d401      	bmi.n	900209e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900209e4:	42b2      	cmp	r2, r6
900209e6:	db07      	blt.n	900209f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
900209e8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900209ea:	3b01      	subs	r3, #1
900209ec:	3402      	adds	r4, #2
900209ee:	4410      	add	r0, r2
900209f0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900209f2:	4411      	add	r1, r2
900209f4:	e7ee      	b.n	900209d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
900209f6:	d017      	beq.n	90020a28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
900209f8:	1e5a      	subs	r2, r3, #1
900209fa:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900209fc:	fb05 0502 	mla	r5, r5, r2, r0
90020a00:	142d      	asrs	r5, r5, #16
90020a02:	d409      	bmi.n	90020a18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
90020a04:	42bd      	cmp	r5, r7
90020a06:	da07      	bge.n	90020a18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
90020a08:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90020a0a:	fb05 1202 	mla	r2, r5, r2, r1
90020a0e:	1412      	asrs	r2, r2, #16
90020a10:	d402      	bmi.n	90020a18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
90020a12:	42b2      	cmp	r2, r6
90020a14:	f2c0 80c3 	blt.w	90020b9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
90020a18:	2500      	movs	r5, #0
90020a1a:	195a      	adds	r2, r3, r5
90020a1c:	2a00      	cmp	r2, #0
90020a1e:	dc3f      	bgt.n	90020aa0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
90020a20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90020a24:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90020a28:	9b01      	ldr	r3, [sp, #4]
90020a2a:	2b00      	cmp	r3, #0
90020a2c:	f340 812a 	ble.w	90020c84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
90020a30:	ee30 0a04 	vadd.f32	s0, s0, s8
90020a34:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020a36:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020a3a:	eeb0 6a62 	vmov.f32	s12, s5
90020a3e:	eec6 7a80 	vdiv.f32	s15, s13, s0
90020a42:	ee31 1a05 	vadd.f32	s2, s2, s10
90020a46:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90020a4a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
90020a4e:	eeb0 6a43 	vmov.f32	s12, s6
90020a52:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90020a56:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
90020a5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020a5e:	ee61 7a27 	vmul.f32	s15, s2, s15
90020a62:	ee77 2a62 	vsub.f32	s5, s14, s5
90020a66:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020a6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020a6e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020a72:	ee12 2a90 	vmov	r2, s5
90020a76:	eef0 2a47 	vmov.f32	s5, s14
90020a7a:	fb92 f3f3 	sdiv	r3, r2, r3
90020a7e:	ee13 2a10 	vmov	r2, s6
90020a82:	9313      	str	r3, [sp, #76]	@ 0x4c
90020a84:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020a86:	eeb0 3a67 	vmov.f32	s6, s15
90020a8a:	fb92 f3f3 	sdiv	r3, r2, r3
90020a8e:	9314      	str	r3, [sp, #80]	@ 0x50
90020a90:	9b01      	ldr	r3, [sp, #4]
90020a92:	9a05      	ldr	r2, [sp, #20]
90020a94:	3b01      	subs	r3, #1
90020a96:	9301      	str	r3, [sp, #4]
90020a98:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020a9a:	bf08      	it	eq
90020a9c:	4613      	moveq	r3, r2
90020a9e:	e788      	b.n	900209b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90020aa0:	1406      	asrs	r6, r0, #16
90020aa2:	d42c      	bmi.n	90020afe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020aa4:	f8db 2008 	ldr.w	r2, [fp, #8]
90020aa8:	42b2      	cmp	r2, r6
90020aaa:	dd28      	ble.n	90020afe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020aac:	140f      	asrs	r7, r1, #16
90020aae:	d426      	bmi.n	90020afe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020ab0:	f8db 200c 	ldr.w	r2, [fp, #12]
90020ab4:	42ba      	cmp	r2, r7
90020ab6:	dd22      	ble.n	90020afe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020ab8:	9a02      	ldr	r2, [sp, #8]
90020aba:	fb07 6602 	mla	r6, r7, r2, r6
90020abe:	9f03      	ldr	r7, [sp, #12]
90020ac0:	0872      	lsrs	r2, r6, #1
90020ac2:	07f6      	lsls	r6, r6, #31
90020ac4:	5cba      	ldrb	r2, [r7, r2]
90020ac6:	bf54      	ite	pl
90020ac8:	f002 020f 	andpl.w	r2, r2, #15
90020acc:	1112      	asrmi	r2, r2, #4
90020ace:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90020ad2:	b2d2      	uxtb	r2, r2
90020ad4:	2aff      	cmp	r2, #255	@ 0xff
90020ad6:	d118      	bne.n	90020b0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
90020ad8:	f06f 0601 	mvn.w	r6, #1
90020adc:	f8d8 2000 	ldr.w	r2, [r8]
90020ae0:	fb06 f705 	mul.w	r7, r6, r5
90020ae4:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
90020ae8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
90020aec:	0956      	lsrs	r6, r2, #5
90020aee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90020af2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90020af6:	ea4c 0606 	orr.w	r6, ip, r6
90020afa:	4316      	orrs	r6, r2
90020afc:	53e6      	strh	r6, [r4, r7]
90020afe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90020b00:	3d01      	subs	r5, #1
90020b02:	4410      	add	r0, r2
90020b04:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90020b06:	4411      	add	r1, r2
90020b08:	e787      	b.n	90020a1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
90020b0a:	2a00      	cmp	r2, #0
90020b0c:	d0f7      	beq.n	90020afe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020b0e:	f06f 0601 	mvn.w	r6, #1
90020b12:	f8d8 c000 	ldr.w	ip, [r8]
90020b16:	fa1f f982 	uxth.w	r9, r2
90020b1a:	43d2      	mvns	r2, r2
90020b1c:	436e      	muls	r6, r5
90020b1e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
90020b22:	b2d2      	uxtb	r2, r2
90020b24:	f834 e006 	ldrh.w	lr, [r4, r6]
90020b28:	fb1a fa09 	smulbb	sl, sl, r9
90020b2c:	9604      	str	r6, [sp, #16]
90020b2e:	f3cc 4607 	ubfx	r6, ip, #16, #8
90020b32:	ea4f 272e 	mov.w	r7, lr, asr #8
90020b36:	fb16 f609 	smulbb	r6, r6, r9
90020b3a:	fa5f fc8c 	uxtb.w	ip, ip
90020b3e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90020b42:	fb1c fc09 	smulbb	ip, ip, r9
90020b46:	fb07 6702 	mla	r7, r7, r2, r6
90020b4a:	ea4f 06ee 	mov.w	r6, lr, asr #3
90020b4e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90020b52:	b2bf      	uxth	r7, r7
90020b54:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90020b58:	fa5f fe8e 	uxtb.w	lr, lr
90020b5c:	fb06 a602 	mla	r6, r6, r2, sl
90020b60:	fb0e cc02 	mla	ip, lr, r2, ip
90020b64:	1c7a      	adds	r2, r7, #1
90020b66:	b2b6      	uxth	r6, r6
90020b68:	fa1f fc8c 	uxth.w	ip, ip
90020b6c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90020b70:	9a04      	ldr	r2, [sp, #16]
90020b72:	f10c 0a01 	add.w	sl, ip, #1
90020b76:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90020b7a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
90020b7e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90020b82:	ea4a 0707 	orr.w	r7, sl, r7
90020b86:	f106 0a01 	add.w	sl, r6, #1
90020b8a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90020b8e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90020b92:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90020b96:	ea47 070a 	orr.w	r7, r7, sl
90020b9a:	52a7      	strh	r7, [r4, r2]
90020b9c:	e7af      	b.n	90020afe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020b9e:	f04f 0e00 	mov.w	lr, #0
90020ba2:	eba3 020e 	sub.w	r2, r3, lr
90020ba6:	2a00      	cmp	r2, #0
90020ba8:	f77f af3a 	ble.w	90020a20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
90020bac:	1402      	asrs	r2, r0, #16
90020bae:	9e02      	ldr	r6, [sp, #8]
90020bb0:	140d      	asrs	r5, r1, #16
90020bb2:	fb06 2505 	mla	r5, r6, r5, r2
90020bb6:	9e03      	ldr	r6, [sp, #12]
90020bb8:	086a      	lsrs	r2, r5, #1
90020bba:	07ed      	lsls	r5, r5, #31
90020bbc:	5cb2      	ldrb	r2, [r6, r2]
90020bbe:	bf54      	ite	pl
90020bc0:	f002 020f 	andpl.w	r2, r2, #15
90020bc4:	1112      	asrmi	r2, r2, #4
90020bc6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90020bca:	b2d2      	uxtb	r2, r2
90020bcc:	2aff      	cmp	r2, #255	@ 0xff
90020bce:	d115      	bne.n	90020bfc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
90020bd0:	f8d8 5000 	ldr.w	r5, [r8]
90020bd4:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
90020bd8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
90020bdc:	096a      	lsrs	r2, r5, #5
90020bde:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90020be2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90020be6:	4332      	orrs	r2, r6
90020be8:	432a      	orrs	r2, r5
90020bea:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
90020bee:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90020bf0:	f10e 0e01 	add.w	lr, lr, #1
90020bf4:	4410      	add	r0, r2
90020bf6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90020bf8:	4411      	add	r1, r2
90020bfa:	e7d2      	b.n	90020ba2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90020bfc:	2a00      	cmp	r2, #0
90020bfe:	d0f6      	beq.n	90020bee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
90020c00:	f8d8 7000 	ldr.w	r7, [r8]
90020c04:	fa1f f982 	uxth.w	r9, r2
90020c08:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
90020c0c:	43d2      	mvns	r2, r2
90020c0e:	f3c7 4507 	ubfx	r5, r7, #16, #8
90020c12:	f3c7 2a07 	ubfx	sl, r7, #8, #8
90020c16:	ea4f 262c 	mov.w	r6, ip, asr #8
90020c1a:	fb15 f509 	smulbb	r5, r5, r9
90020c1e:	b2d2      	uxtb	r2, r2
90020c20:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90020c24:	b2ff      	uxtb	r7, r7
90020c26:	fb1a fa09 	smulbb	sl, sl, r9
90020c2a:	fb06 5602 	mla	r6, r6, r2, r5
90020c2e:	ea4f 05ec 	mov.w	r5, ip, asr #3
90020c32:	fb17 f709 	smulbb	r7, r7, r9
90020c36:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90020c3a:	b2b6      	uxth	r6, r6
90020c3c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90020c40:	fa5f fc8c 	uxtb.w	ip, ip
90020c44:	fb05 a502 	mla	r5, r5, r2, sl
90020c48:	fb0c 7702 	mla	r7, ip, r2, r7
90020c4c:	1c72      	adds	r2, r6, #1
90020c4e:	b2ad      	uxth	r5, r5
90020c50:	b2bf      	uxth	r7, r7
90020c52:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90020c56:	f107 0a01 	add.w	sl, r7, #1
90020c5a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90020c5e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
90020c62:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90020c66:	ea4a 0606 	orr.w	r6, sl, r6
90020c6a:	f105 0a01 	add.w	sl, r5, #1
90020c6e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90020c72:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90020c76:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90020c7a:	ea46 060a 	orr.w	r6, r6, sl
90020c7e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
90020c82:	e7b4      	b.n	90020bee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
90020c84:	b007      	add	sp, #28
90020c86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020c8a:	bf00      	nop
90020c8c:	24027eac 	.word	0x24027eac

90020c90 <_ZN8touchgfx8LCD16bppD1Ev>:
90020c90:	4770      	bx	lr

90020c92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
90020c92:	4770      	bx	lr

90020c94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
90020c94:	4770      	bx	lr

90020c96 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
90020c96:	4770      	bx	lr

90020c98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
90020c98:	4770      	bx	lr

90020c9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
90020c9a:	4770      	bx	lr

90020c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
90020c9c:	4770      	bx	lr

90020c9e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
90020c9e:	4770      	bx	lr

90020ca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
90020ca0:	4770      	bx	lr

90020ca2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
90020ca2:	4770      	bx	lr

90020ca4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
90020ca4:	4770      	bx	lr

90020ca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
90020ca6:	4770      	bx	lr

90020ca8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
90020ca8:	4770      	bx	lr

90020caa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
90020caa:	4770      	bx	lr

90020cac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
90020cac:	4770      	bx	lr

90020cae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
90020cae:	4770      	bx	lr

90020cb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
90020cb0:	4770      	bx	lr

90020cb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
90020cb2:	4770      	bx	lr

90020cb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
90020cb4:	4770      	bx	lr

90020cb6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
90020cb6:	4770      	bx	lr

90020cb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
90020cb8:	4770      	bx	lr

90020cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
90020cba:	4770      	bx	lr

90020cbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
90020cbc:	4770      	bx	lr

90020cbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
90020cbe:	4770      	bx	lr

90020cc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
90020cc0:	4770      	bx	lr

90020cc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
90020cc2:	4770      	bx	lr

90020cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
90020cc4:	4770      	bx	lr

90020cc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
90020cc6:	4770      	bx	lr

90020cc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
90020cc8:	4770      	bx	lr

90020cca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
90020cca:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90020cce:	b088      	sub	sp, #32
90020cd0:	4606      	mov	r6, r0
90020cd2:	4688      	mov	r8, r1
90020cd4:	4691      	mov	r9, r2
90020cd6:	ac08      	add	r4, sp, #32
90020cd8:	f824 3d0c 	strh.w	r3, [r4, #-12]!
90020cdc:	4620      	mov	r0, r4
90020cde:	f7fd fc67 	bl	9001e5b0 <_ZNK8touchgfx6Bitmap7getDataEv>
90020ce2:	6833      	ldr	r3, [r6, #0]
90020ce4:	4605      	mov	r5, r0
90020ce6:	4620      	mov	r0, r4
90020ce8:	699f      	ldr	r7, [r3, #24]
90020cea:	f7fd fb75 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90020cee:	4682      	mov	sl, r0
90020cf0:	4620      	mov	r0, r4
90020cf2:	f7fd fba5 	bl	9001e440 <_ZNK8touchgfx6Bitmap9getHeightEv>
90020cf6:	9500      	str	r5, [sp, #0]
90020cf8:	464b      	mov	r3, r9
90020cfa:	4642      	mov	r2, r8
90020cfc:	4631      	mov	r1, r6
90020cfe:	e9cd a001 	strd	sl, r0, [sp, #4]
90020d02:	a806      	add	r0, sp, #24
90020d04:	47b8      	blx	r7
90020d06:	4628      	mov	r0, r5
90020d08:	b008      	add	sp, #32
90020d0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

90020d10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
90020d10:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
90020d14:	2300      	movs	r3, #0
90020d16:	9300      	str	r3, [sp, #0]
90020d18:	4b3d      	ldr	r3, [pc, #244]	@ (90020e10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
90020d1a:	781b      	ldrb	r3, [r3, #0]
90020d1c:	2b00      	cmp	r3, #0
90020d1e:	d137      	bne.n	90020d90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
90020d20:	4a3c      	ldr	r2, [pc, #240]	@ (90020e14 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
90020d22:	f9b2 2000 	ldrsh.w	r2, [r2]
90020d26:	f8ad 2004 	strh.w	r2, [sp, #4]
90020d2a:	2b00      	cmp	r3, #0
90020d2c:	d132      	bne.n	90020d94 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
90020d2e:	4b3a      	ldr	r3, [pc, #232]	@ (90020e18 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
90020d30:	f9b3 3000 	ldrsh.w	r3, [r3]
90020d34:	ac02      	add	r4, sp, #8
90020d36:	6808      	ldr	r0, [r1, #0]
90020d38:	f8ad 3006 	strh.w	r3, [sp, #6]
90020d3c:	ab02      	add	r3, sp, #8
90020d3e:	6849      	ldr	r1, [r1, #4]
90020d40:	4d36      	ldr	r5, [pc, #216]	@ (90020e1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
90020d42:	c303      	stmia	r3!, {r0, r1}
90020d44:	4669      	mov	r1, sp
90020d46:	4620      	mov	r0, r4
90020d48:	f7f9 fdfe 	bl	9001a948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020d4c:	4668      	mov	r0, sp
90020d4e:	f7f9 fdb7 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020d52:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90020d56:	f8bd 2000 	ldrh.w	r2, [sp]
90020d5a:	462f      	mov	r7, r5
90020d5c:	6828      	ldr	r0, [r5, #0]
90020d5e:	4413      	add	r3, r2
90020d60:	f8bd 2002 	ldrh.w	r2, [sp, #2]
90020d64:	f8ad 3008 	strh.w	r3, [sp, #8]
90020d68:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90020d6c:	4413      	add	r3, r2
90020d6e:	f8ad 300a 	strh.w	r3, [sp, #10]
90020d72:	6803      	ldr	r3, [r0, #0]
90020d74:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90020d76:	4798      	blx	r3
90020d78:	f010 0f01 	tst.w	r0, #1
90020d7c:	d00c      	beq.n	90020d98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
90020d7e:	6828      	ldr	r0, [r5, #0]
90020d80:	6803      	ldr	r3, [r0, #0]
90020d82:	e894 0006 	ldmia.w	r4, {r1, r2}
90020d86:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90020d88:	4798      	blx	r3
90020d8a:	b004      	add	sp, #16
90020d8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90020d90:	4a21      	ldr	r2, [pc, #132]	@ (90020e18 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
90020d92:	e7c6      	b.n	90020d22 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
90020d94:	4b1f      	ldr	r3, [pc, #124]	@ (90020e14 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
90020d96:	e7cb      	b.n	90020d30 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
90020d98:	6838      	ldr	r0, [r7, #0]
90020d9a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90020d9e:	6803      	ldr	r3, [r0, #0]
90020da0:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
90020da4:	ea4f 0848 	mov.w	r8, r8, lsl #1
90020da8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020daa:	4798      	blx	r3
90020dac:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
90020db0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90020db4:	f8bd 6004 	ldrh.w	r6, [sp, #4]
90020db8:	fb16 3602 	smlabb	r6, r6, r2, r3
90020dbc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90020dc0:	6838      	ldr	r0, [r7, #0]
90020dc2:	6803      	ldr	r3, [r0, #0]
90020dc4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90020dc6:	4798      	blx	r3
90020dc8:	4a12      	ldr	r2, [pc, #72]	@ (90020e14 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
90020dca:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
90020dce:	8813      	ldrh	r3, [r2, #0]
90020dd0:	4691      	mov	r9, r2
90020dd2:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
90020dd6:	435d      	muls	r5, r3
90020dd8:	fb03 1404 	mla	r4, r3, r4, r1
90020ddc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90020de0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
90020de4:	6838      	ldr	r0, [r7, #0]
90020de6:	42ac      	cmp	r4, r5
90020de8:	6803      	ldr	r3, [r0, #0]
90020dea:	d20e      	bcs.n	90020e0a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
90020dec:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
90020df0:	4632      	mov	r2, r6
90020df2:	4643      	mov	r3, r8
90020df4:	4621      	mov	r1, r4
90020df6:	47d0      	blx	sl
90020df8:	f8b9 3000 	ldrh.w	r3, [r9]
90020dfc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90020e00:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90020e04:	eb06 0643 	add.w	r6, r6, r3, lsl #1
90020e08:	e7ec      	b.n	90020de4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
90020e0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020e0c:	4798      	blx	r3
90020e0e:	e7bc      	b.n	90020d8a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
90020e10:	24027e94 	.word	0x24027e94
90020e14:	24027e96 	.word	0x24027e96
90020e18:	24027e98 	.word	0x24027e98
90020e1c:	24027e9c 	.word	0x24027e9c

90020e20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
90020e20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020e24:	b08b      	sub	sp, #44	@ 0x2c
90020e26:	460f      	mov	r7, r1
90020e28:	4616      	mov	r6, r2
90020e2a:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
90020e2e:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
90020e32:	f1bb 0f00 	cmp.w	fp, #0
90020e36:	d049      	beq.n	90020ecc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
90020e38:	6810      	ldr	r0, [r2, #0]
90020e3a:	ad06      	add	r5, sp, #24
90020e3c:	6851      	ldr	r1, [r2, #4]
90020e3e:	c503      	stmia	r5!, {r0, r1}
90020e40:	6818      	ldr	r0, [r3, #0]
90020e42:	ad08      	add	r5, sp, #32
90020e44:	6859      	ldr	r1, [r3, #4]
90020e46:	c503      	stmia	r5!, {r0, r1}
90020e48:	a806      	add	r0, sp, #24
90020e4a:	f7f9 fd39 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020e4e:	4631      	mov	r1, r6
90020e50:	a808      	add	r0, sp, #32
90020e52:	f7f9 fd79 	bl	9001a948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020e56:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90020e5a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
90020e5e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
90020e62:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
90020e66:	fb16 2103 	smlabb	r1, r6, r3, r2
90020e6a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
90020e6e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
90020e72:	f8bd 1018 	ldrh.w	r1, [sp, #24]
90020e76:	4f5f      	ldr	r7, [pc, #380]	@ (90020ff4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
90020e78:	440a      	add	r2, r1
90020e7a:	6838      	ldr	r0, [r7, #0]
90020e7c:	46b9      	mov	r9, r7
90020e7e:	f8ad 2020 	strh.w	r2, [sp, #32]
90020e82:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90020e86:	4413      	add	r3, r2
90020e88:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90020e8c:	6803      	ldr	r3, [r0, #0]
90020e8e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90020e90:	4798      	blx	r3
90020e92:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
90020e96:	d01c      	beq.n	90020ed2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
90020e98:	f010 0f04 	tst.w	r0, #4
90020e9c:	d01d      	beq.n	90020eda <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
90020e9e:	f8d9 0000 	ldr.w	r0, [r9]
90020ea2:	2700      	movs	r7, #0
90020ea4:	b2ad      	uxth	r5, r5
90020ea6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
90020eaa:	6801      	ldr	r1, [r0, #0]
90020eac:	f8bd 2020 	ldrh.w	r2, [sp, #32]
90020eb0:	f8cd b00c 	str.w	fp, [sp, #12]
90020eb4:	9501      	str	r5, [sp, #4]
90020eb6:	e9cd 4704 	strd	r4, r7, [sp, #16]
90020eba:	f8bd 401c 	ldrh.w	r4, [sp, #28]
90020ebe:	9402      	str	r4, [sp, #8]
90020ec0:	fa1f f488 	uxth.w	r4, r8
90020ec4:	9400      	str	r4, [sp, #0]
90020ec6:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
90020ec8:	4631      	mov	r1, r6
90020eca:	47a0      	blx	r4
90020ecc:	b00b      	add	sp, #44	@ 0x2c
90020ece:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020ed2:	b914      	cbnz	r4, 90020eda <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
90020ed4:	f010 0f01 	tst.w	r0, #1
90020ed8:	e7e0      	b.n	90020e9c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
90020eda:	f8d9 0000 	ldr.w	r0, [r9]
90020ede:	ea4f 0748 	mov.w	r7, r8, lsl #1
90020ee2:	6803      	ldr	r3, [r0, #0]
90020ee4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90020ee6:	4798      	blx	r3
90020ee8:	4b43      	ldr	r3, [pc, #268]	@ (90020ff8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
90020eea:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
90020eee:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
90020ef2:	881a      	ldrh	r2, [r3, #0]
90020ef4:	469a      	mov	sl, r3
90020ef6:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
90020efa:	fb05 f502 	mul.w	r5, r5, r2
90020efe:	fb02 1404 	mla	r4, r2, r4, r1
90020f02:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90020f06:	d059      	beq.n	90020fbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
90020f08:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
90020f0c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
90020f10:	fa1f f28b 	uxth.w	r2, fp
90020f14:	469e      	mov	lr, r3
90020f16:	fa1f f989 	uxth.w	r9, r9
90020f1a:	42ac      	cmp	r4, r5
90020f1c:	d264      	bcs.n	90020fe8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
90020f1e:	eb04 0a07 	add.w	sl, r4, r7
90020f22:	4554      	cmp	r4, sl
90020f24:	d23d      	bcs.n	90020fa2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
90020f26:	8821      	ldrh	r1, [r4, #0]
90020f28:	f836 3b02 	ldrh.w	r3, [r6], #2
90020f2c:	1208      	asrs	r0, r1, #8
90020f2e:	ea4f 2c23 	mov.w	ip, r3, asr #8
90020f32:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90020f36:	ea4f 0be1 	mov.w	fp, r1, asr #3
90020f3a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90020f3e:	00c9      	lsls	r1, r1, #3
90020f40:	fb10 f009 	smulbb	r0, r0, r9
90020f44:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90020f48:	b2c9      	uxtb	r1, r1
90020f4a:	fb0c 0c02 	mla	ip, ip, r2, r0
90020f4e:	10d8      	asrs	r0, r3, #3
90020f50:	fb1b fb09 	smulbb	fp, fp, r9
90020f54:	00db      	lsls	r3, r3, #3
90020f56:	fa1f fc8c 	uxth.w	ip, ip
90020f5a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90020f5e:	fb11 f109 	smulbb	r1, r1, r9
90020f62:	b2db      	uxtb	r3, r3
90020f64:	fb00 b002 	mla	r0, r0, r2, fp
90020f68:	f10c 0b01 	add.w	fp, ip, #1
90020f6c:	fb03 1302 	mla	r3, r3, r2, r1
90020f70:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
90020f74:	b29b      	uxth	r3, r3
90020f76:	b280      	uxth	r0, r0
90020f78:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
90020f7c:	f103 0c01 	add.w	ip, r3, #1
90020f80:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90020f84:	1c43      	adds	r3, r0, #1
90020f86:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90020f8a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90020f8e:	0940      	lsrs	r0, r0, #5
90020f90:	ea4c 0c0b 	orr.w	ip, ip, fp
90020f94:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90020f98:	ea4c 0c00 	orr.w	ip, ip, r0
90020f9c:	f824 cb02 	strh.w	ip, [r4], #2
90020fa0:	e7bf      	b.n	90020f22 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
90020fa2:	f8be 3000 	ldrh.w	r3, [lr]
90020fa6:	eba3 0308 	sub.w	r3, r3, r8
90020faa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90020fae:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90020fb2:	eba3 0308 	sub.w	r3, r3, r8
90020fb6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
90020fba:	e7ae      	b.n	90020f1a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
90020fbc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
90020fc0:	f8d9 0000 	ldr.w	r0, [r9]
90020fc4:	42ac      	cmp	r4, r5
90020fc6:	6803      	ldr	r3, [r0, #0]
90020fc8:	d20e      	bcs.n	90020fe8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
90020fca:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
90020fce:	4632      	mov	r2, r6
90020fd0:	463b      	mov	r3, r7
90020fd2:	4621      	mov	r1, r4
90020fd4:	47c0      	blx	r8
90020fd6:	f8ba 3000 	ldrh.w	r3, [sl]
90020fda:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90020fde:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90020fe2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
90020fe6:	e7eb      	b.n	90020fc0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
90020fe8:	4b02      	ldr	r3, [pc, #8]	@ (90020ff4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
90020fea:	6818      	ldr	r0, [r3, #0]
90020fec:	6803      	ldr	r3, [r0, #0]
90020fee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020ff0:	4798      	blx	r3
90020ff2:	e76b      	b.n	90020ecc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
90020ff4:	24027e9c 	.word	0x24027e9c
90020ff8:	24027e96 	.word	0x24027e96

90020ffc <_ZN8touchgfx8LCD16bppD0Ev>:
90020ffc:	b510      	push	{r4, lr}
90020ffe:	4604      	mov	r4, r0
90021000:	2178      	movs	r1, #120	@ 0x78
90021002:	f00a fa80 	bl	9002b506 <_ZdlPvj>
90021006:	4620      	mov	r0, r4
90021008:	bd10      	pop	{r4, pc}

9002100a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9002100a:	b510      	push	{r4, lr}
9002100c:	4604      	mov	r4, r0
9002100e:	2104      	movs	r1, #4
90021010:	f00a fa79 	bl	9002b506 <_ZdlPvj>
90021014:	4620      	mov	r0, r4
90021016:	bd10      	pop	{r4, pc}

90021018 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
90021018:	b510      	push	{r4, lr}
9002101a:	4604      	mov	r4, r0
9002101c:	2104      	movs	r1, #4
9002101e:	f00a fa72 	bl	9002b506 <_ZdlPvj>
90021022:	4620      	mov	r0, r4
90021024:	bd10      	pop	{r4, pc}

90021026 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
90021026:	b510      	push	{r4, lr}
90021028:	4604      	mov	r4, r0
9002102a:	2104      	movs	r1, #4
9002102c:	f00a fa6b 	bl	9002b506 <_ZdlPvj>
90021030:	4620      	mov	r0, r4
90021032:	bd10      	pop	{r4, pc}

90021034 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
90021034:	b510      	push	{r4, lr}
90021036:	4604      	mov	r4, r0
90021038:	2104      	movs	r1, #4
9002103a:	f00a fa64 	bl	9002b506 <_ZdlPvj>
9002103e:	4620      	mov	r0, r4
90021040:	bd10      	pop	{r4, pc}

90021042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
90021042:	b510      	push	{r4, lr}
90021044:	4604      	mov	r4, r0
90021046:	2104      	movs	r1, #4
90021048:	f00a fa5d 	bl	9002b506 <_ZdlPvj>
9002104c:	4620      	mov	r0, r4
9002104e:	bd10      	pop	{r4, pc}

90021050 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
90021050:	b510      	push	{r4, lr}
90021052:	4604      	mov	r4, r0
90021054:	2104      	movs	r1, #4
90021056:	f00a fa56 	bl	9002b506 <_ZdlPvj>
9002105a:	4620      	mov	r0, r4
9002105c:	bd10      	pop	{r4, pc}

9002105e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9002105e:	b510      	push	{r4, lr}
90021060:	4604      	mov	r4, r0
90021062:	2104      	movs	r1, #4
90021064:	f00a fa4f 	bl	9002b506 <_ZdlPvj>
90021068:	4620      	mov	r0, r4
9002106a:	bd10      	pop	{r4, pc}

9002106c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9002106c:	b510      	push	{r4, lr}
9002106e:	4604      	mov	r4, r0
90021070:	2104      	movs	r1, #4
90021072:	f00a fa48 	bl	9002b506 <_ZdlPvj>
90021076:	4620      	mov	r0, r4
90021078:	bd10      	pop	{r4, pc}

9002107a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9002107a:	b510      	push	{r4, lr}
9002107c:	4604      	mov	r4, r0
9002107e:	2104      	movs	r1, #4
90021080:	f00a fa41 	bl	9002b506 <_ZdlPvj>
90021084:	4620      	mov	r0, r4
90021086:	bd10      	pop	{r4, pc}

90021088 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
90021088:	b510      	push	{r4, lr}
9002108a:	4604      	mov	r4, r0
9002108c:	2104      	movs	r1, #4
9002108e:	f00a fa3a 	bl	9002b506 <_ZdlPvj>
90021092:	4620      	mov	r0, r4
90021094:	bd10      	pop	{r4, pc}

90021096 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
90021096:	b510      	push	{r4, lr}
90021098:	4604      	mov	r4, r0
9002109a:	2104      	movs	r1, #4
9002109c:	f00a fa33 	bl	9002b506 <_ZdlPvj>
900210a0:	4620      	mov	r0, r4
900210a2:	bd10      	pop	{r4, pc}

900210a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
900210a4:	b510      	push	{r4, lr}
900210a6:	4604      	mov	r4, r0
900210a8:	2104      	movs	r1, #4
900210aa:	f00a fa2c 	bl	9002b506 <_ZdlPvj>
900210ae:	4620      	mov	r0, r4
900210b0:	bd10      	pop	{r4, pc}

900210b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
900210b2:	b510      	push	{r4, lr}
900210b4:	4604      	mov	r4, r0
900210b6:	2104      	movs	r1, #4
900210b8:	f00a fa25 	bl	9002b506 <_ZdlPvj>
900210bc:	4620      	mov	r0, r4
900210be:	bd10      	pop	{r4, pc}

900210c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
900210c0:	b510      	push	{r4, lr}
900210c2:	4604      	mov	r4, r0
900210c4:	2104      	movs	r1, #4
900210c6:	f00a fa1e 	bl	9002b506 <_ZdlPvj>
900210ca:	4620      	mov	r0, r4
900210cc:	bd10      	pop	{r4, pc}

900210ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
900210ce:	b510      	push	{r4, lr}
900210d0:	4604      	mov	r4, r0
900210d2:	2104      	movs	r1, #4
900210d4:	f00a fa17 	bl	9002b506 <_ZdlPvj>
900210d8:	4620      	mov	r0, r4
900210da:	bd10      	pop	{r4, pc}

900210dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
900210dc:	b510      	push	{r4, lr}
900210de:	4604      	mov	r4, r0
900210e0:	2104      	movs	r1, #4
900210e2:	f00a fa10 	bl	9002b506 <_ZdlPvj>
900210e6:	4620      	mov	r0, r4
900210e8:	bd10      	pop	{r4, pc}

900210ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
900210ea:	b510      	push	{r4, lr}
900210ec:	4604      	mov	r4, r0
900210ee:	2104      	movs	r1, #4
900210f0:	f00a fa09 	bl	9002b506 <_ZdlPvj>
900210f4:	4620      	mov	r0, r4
900210f6:	bd10      	pop	{r4, pc}

900210f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
900210f8:	b510      	push	{r4, lr}
900210fa:	4604      	mov	r4, r0
900210fc:	2104      	movs	r1, #4
900210fe:	f00a fa02 	bl	9002b506 <_ZdlPvj>
90021102:	4620      	mov	r0, r4
90021104:	bd10      	pop	{r4, pc}

90021106 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
90021106:	b510      	push	{r4, lr}
90021108:	4604      	mov	r4, r0
9002110a:	2104      	movs	r1, #4
9002110c:	f00a f9fb 	bl	9002b506 <_ZdlPvj>
90021110:	4620      	mov	r0, r4
90021112:	bd10      	pop	{r4, pc}

90021114 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
90021114:	b510      	push	{r4, lr}
90021116:	4604      	mov	r4, r0
90021118:	2104      	movs	r1, #4
9002111a:	f00a f9f4 	bl	9002b506 <_ZdlPvj>
9002111e:	4620      	mov	r0, r4
90021120:	bd10      	pop	{r4, pc}

90021122 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
90021122:	b510      	push	{r4, lr}
90021124:	4604      	mov	r4, r0
90021126:	2104      	movs	r1, #4
90021128:	f00a f9ed 	bl	9002b506 <_ZdlPvj>
9002112c:	4620      	mov	r0, r4
9002112e:	bd10      	pop	{r4, pc}

90021130 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
90021130:	b510      	push	{r4, lr}
90021132:	4604      	mov	r4, r0
90021134:	2104      	movs	r1, #4
90021136:	f00a f9e6 	bl	9002b506 <_ZdlPvj>
9002113a:	4620      	mov	r0, r4
9002113c:	bd10      	pop	{r4, pc}

9002113e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9002113e:	b510      	push	{r4, lr}
90021140:	4604      	mov	r4, r0
90021142:	2104      	movs	r1, #4
90021144:	f00a f9df 	bl	9002b506 <_ZdlPvj>
90021148:	4620      	mov	r0, r4
9002114a:	bd10      	pop	{r4, pc}

9002114c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9002114c:	b510      	push	{r4, lr}
9002114e:	4604      	mov	r4, r0
90021150:	2104      	movs	r1, #4
90021152:	f00a f9d8 	bl	9002b506 <_ZdlPvj>
90021156:	4620      	mov	r0, r4
90021158:	bd10      	pop	{r4, pc}

9002115a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9002115a:	b510      	push	{r4, lr}
9002115c:	4604      	mov	r4, r0
9002115e:	2104      	movs	r1, #4
90021160:	f00a f9d1 	bl	9002b506 <_ZdlPvj>
90021164:	4620      	mov	r0, r4
90021166:	bd10      	pop	{r4, pc}

90021168 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
90021168:	b510      	push	{r4, lr}
9002116a:	4604      	mov	r4, r0
9002116c:	2104      	movs	r1, #4
9002116e:	f00a f9ca 	bl	9002b506 <_ZdlPvj>
90021172:	4620      	mov	r0, r4
90021174:	bd10      	pop	{r4, pc}

90021176 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
90021176:	b510      	push	{r4, lr}
90021178:	4604      	mov	r4, r0
9002117a:	2104      	movs	r1, #4
9002117c:	f00a f9c3 	bl	9002b506 <_ZdlPvj>
90021180:	4620      	mov	r0, r4
90021182:	bd10      	pop	{r4, pc}

90021184 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
90021184:	b510      	push	{r4, lr}
90021186:	4604      	mov	r4, r0
90021188:	2104      	movs	r1, #4
9002118a:	f00a f9bc 	bl	9002b506 <_ZdlPvj>
9002118e:	4620      	mov	r0, r4
90021190:	bd10      	pop	{r4, pc}
	...

90021194 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
90021194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021198:	b091      	sub	sp, #68	@ 0x44
9002119a:	469b      	mov	fp, r3
9002119c:	4616      	mov	r6, r2
9002119e:	f9b3 2000 	ldrsh.w	r2, [r3]
900211a2:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
900211a6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900211aa:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
900211ae:	4604      	mov	r4, r0
900211b0:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
900211b4:	4640      	mov	r0, r8
900211b6:	460d      	mov	r5, r1
900211b8:	4659      	mov	r1, fp
900211ba:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
900211be:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
900211c2:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
900211c6:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
900211ca:	f7f3 fd8b 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
900211ce:	4631      	mov	r1, r6
900211d0:	4640      	mov	r0, r8
900211d2:	f7f3 fd87 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
900211d6:	4b74      	ldr	r3, [pc, #464]	@ (900213a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
900211d8:	8818      	ldrh	r0, [r3, #0]
900211da:	4b74      	ldr	r3, [pc, #464]	@ (900213ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
900211dc:	b202      	sxth	r2, r0
900211de:	8819      	ldrh	r1, [r3, #0]
900211e0:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
900211e4:	b20e      	sxth	r6, r1
900211e6:	2b00      	cmp	r3, #0
900211e8:	da07      	bge.n	900211fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
900211ea:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
900211ee:	4463      	add	r3, ip
900211f0:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
900211f4:	2300      	movs	r3, #0
900211f6:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
900211fa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
900211fe:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90021202:	1ad2      	subs	r2, r2, r3
90021204:	4594      	cmp	ip, r2
90021206:	bfc4      	itt	gt
90021208:	1ac2      	subgt	r2, r0, r3
9002120a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
9002120e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90021212:	2a00      	cmp	r2, #0
90021214:	da07      	bge.n	90021226 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
90021216:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
9002121a:	4462      	add	r2, ip
9002121c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90021220:	2200      	movs	r2, #0
90021222:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
90021226:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
9002122a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9002122e:	eba6 060a 	sub.w	r6, r6, sl
90021232:	42b2      	cmp	r2, r6
90021234:	bfc4      	itt	gt
90021236:	eba1 020a 	subgt.w	r2, r1, sl
9002123a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
9002123e:	4a5c      	ldr	r2, [pc, #368]	@ (900213b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
90021240:	7812      	ldrb	r2, [r2, #0]
90021242:	b9a2      	cbnz	r2, 9002126e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
90021244:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
90021248:	4286      	cmp	r6, r0
9002124a:	4640      	mov	r0, r8
9002124c:	9303      	str	r3, [sp, #12]
9002124e:	bf14      	ite	ne
90021250:	2600      	movne	r6, #0
90021252:	2601      	moveq	r6, #1
90021254:	f7f3 fd89 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
90021258:	9b03      	ldr	r3, [sp, #12]
9002125a:	b160      	cbz	r0, 90021276 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9002125c:	2300      	movs	r3, #0
9002125e:	8023      	strh	r3, [r4, #0]
90021260:	8063      	strh	r3, [r4, #2]
90021262:	80a3      	strh	r3, [r4, #4]
90021264:	4620      	mov	r0, r4
90021266:	80e3      	strh	r3, [r4, #6]
90021268:	b011      	add	sp, #68	@ 0x44
9002126a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002126e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
90021272:	428e      	cmp	r6, r1
90021274:	e7e9      	b.n	9002124a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
90021276:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9002127a:	a90e      	add	r1, sp, #56	@ 0x38
9002127c:	900e      	str	r0, [sp, #56]	@ 0x38
9002127e:	a80c      	add	r0, sp, #48	@ 0x30
90021280:	9205      	str	r2, [sp, #20]
90021282:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
90021286:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
9002128a:	9206      	str	r2, [sp, #24]
9002128c:	f8bb 2000 	ldrh.w	r2, [fp]
90021290:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
90021294:	1a9b      	subs	r3, r3, r2
90021296:	b21b      	sxth	r3, r3
90021298:	9303      	str	r3, [sp, #12]
9002129a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9002129e:	f8df b118 	ldr.w	fp, [pc, #280]	@ 900213b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
900212a2:	ebaa 0a03 	sub.w	sl, sl, r3
900212a6:	fa0f f38a 	sxth.w	r3, sl
900212aa:	9304      	str	r3, [sp, #16]
900212ac:	9b03      	ldr	r3, [sp, #12]
900212ae:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
900212b2:	9b04      	ldr	r3, [sp, #16]
900212b4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
900212b8:	9b05      	ldr	r3, [sp, #20]
900212ba:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
900212be:	9b06      	ldr	r3, [sp, #24]
900212c0:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900212c4:	f7f9 fb40 	bl	9001a948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900212c8:	4640      	mov	r0, r8
900212ca:	f7f9 faf9 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900212ce:	a80e      	add	r0, sp, #56	@ 0x38
900212d0:	f7f9 faf6 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900212d4:	4b37      	ldr	r3, [pc, #220]	@ (900213b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
900212d6:	4628      	mov	r0, r5
900212d8:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
900212dc:	881b      	ldrh	r3, [r3, #0]
900212de:	9307      	str	r3, [sp, #28]
900212e0:	682b      	ldr	r3, [r5, #0]
900212e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900212e4:	4798      	blx	r3
900212e6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
900212ea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
900212ee:	4681      	mov	r9, r0
900212f0:	f8db 0000 	ldr.w	r0, [fp]
900212f4:	fb1a 3305 	smlabb	r3, sl, r5, r3
900212f8:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
900212fa:	eb05 0543 	add.w	r5, r5, r3, lsl #1
900212fe:	6803      	ldr	r3, [r0, #0]
90021300:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90021302:	4798      	blx	r3
90021304:	4607      	mov	r7, r0
90021306:	f8db 0000 	ldr.w	r0, [fp]
9002130a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
9002130e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90021312:	6803      	ldr	r3, [r0, #0]
90021314:	9109      	str	r1, [sp, #36]	@ 0x24
90021316:	9208      	str	r2, [sp, #32]
90021318:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9002131a:	4798      	blx	r3
9002131c:	f010 0f01 	tst.w	r0, #1
90021320:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90021324:	d012      	beq.n	9002134c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
90021326:	f8db 0000 	ldr.w	r0, [fp]
9002132a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
9002132e:	6803      	ldr	r3, [r0, #0]
90021330:	9200      	str	r2, [sp, #0]
90021332:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
90021334:	462b      	mov	r3, r5
90021336:	e898 0006 	ldmia.w	r8, {r1, r2}
9002133a:	47b0      	blx	r6
9002133c:	9b03      	ldr	r3, [sp, #12]
9002133e:	8023      	strh	r3, [r4, #0]
90021340:	9b04      	ldr	r3, [sp, #16]
90021342:	8063      	strh	r3, [r4, #2]
90021344:	9b05      	ldr	r3, [sp, #20]
90021346:	80a3      	strh	r3, [r4, #4]
90021348:	9b06      	ldr	r3, [sp, #24]
9002134a:	e78b      	b.n	90021264 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9002134c:	fb09 f202 	mul.w	r2, r9, r2
90021350:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
90021354:	eb02 0141 	add.w	r1, r2, r1, lsl #1
90021358:	440f      	add	r7, r1
9002135a:	b166      	cbz	r6, 90021376 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9002135c:	9a07      	ldr	r2, [sp, #28]
9002135e:	4592      	cmp	sl, r2
90021360:	d109      	bne.n	90021376 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
90021362:	f8db 0000 	ldr.w	r0, [fp]
90021366:	fb09 f303 	mul.w	r3, r9, r3
9002136a:	4629      	mov	r1, r5
9002136c:	6802      	ldr	r2, [r0, #0]
9002136e:	6b56      	ldr	r6, [r2, #52]	@ 0x34
90021370:	463a      	mov	r2, r7
90021372:	47b0      	blx	r6
90021374:	e7e2      	b.n	9002133c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
90021376:	fb0a f303 	mul.w	r3, sl, r3
9002137a:	ea4f 064a 	mov.w	r6, sl, lsl #1
9002137e:	f8df b038 	ldr.w	fp, [pc, #56]	@ 900213b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
90021382:	eb05 0843 	add.w	r8, r5, r3, lsl #1
90021386:	4545      	cmp	r5, r8
90021388:	d2d8      	bcs.n	9002133c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9002138a:	f8db 0000 	ldr.w	r0, [fp]
9002138e:	4629      	mov	r1, r5
90021390:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90021394:	4435      	add	r5, r6
90021396:	6802      	ldr	r2, [r0, #0]
90021398:	005b      	lsls	r3, r3, #1
9002139a:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
9002139e:	463a      	mov	r2, r7
900213a0:	47d0      	blx	sl
900213a2:	444f      	add	r7, r9
900213a4:	e7ef      	b.n	90021386 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
900213a6:	bf00      	nop
900213a8:	24027e90 	.word	0x24027e90
900213ac:	24027e92 	.word	0x24027e92
900213b0:	24027e94 	.word	0x24027e94
900213b4:	24027e96 	.word	0x24027e96
900213b8:	24027e9c 	.word	0x24027e9c

900213bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
900213bc:	b5f0      	push	{r4, r5, r6, r7, lr}
900213be:	4606      	mov	r6, r0
900213c0:	b087      	sub	sp, #28
900213c2:	460c      	mov	r4, r1
900213c4:	4617      	mov	r7, r2
900213c6:	461d      	mov	r5, r3
900213c8:	b333      	cbz	r3, 90021418 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
900213ca:	4608      	mov	r0, r1
900213cc:	f7f3 fccd 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
900213d0:	bb10      	cbnz	r0, 90021418 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
900213d2:	6820      	ldr	r0, [r4, #0]
900213d4:	ab04      	add	r3, sp, #16
900213d6:	6861      	ldr	r1, [r4, #4]
900213d8:	4c1b      	ldr	r4, [pc, #108]	@ (90021448 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
900213da:	c303      	stmia	r3!, {r0, r1}
900213dc:	a804      	add	r0, sp, #16
900213de:	f7f9 fa6f 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900213e2:	6820      	ldr	r0, [r4, #0]
900213e4:	6803      	ldr	r3, [r0, #0]
900213e6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900213e8:	4798      	blx	r3
900213ea:	2dff      	cmp	r5, #255	@ 0xff
900213ec:	d016      	beq.n	9002141c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
900213ee:	f010 0f08 	tst.w	r0, #8
900213f2:	6820      	ldr	r0, [r4, #0]
900213f4:	d015      	beq.n	90021422 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
900213f6:	2400      	movs	r4, #0
900213f8:	6801      	ldr	r1, [r0, #0]
900213fa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
900213fe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90021402:	e9cd 5402 	strd	r5, r4, [sp, #8]
90021406:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9002140a:	9401      	str	r4, [sp, #4]
9002140c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
90021410:	9400      	str	r4, [sp, #0]
90021412:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
90021414:	4639      	mov	r1, r7
90021416:	47a0      	blx	r4
90021418:	b007      	add	sp, #28
9002141a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002141c:	f010 0f02 	tst.w	r0, #2
90021420:	e7e7      	b.n	900213f2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
90021422:	6803      	ldr	r3, [r0, #0]
90021424:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90021426:	4798      	blx	r3
90021428:	4b08      	ldr	r3, [pc, #32]	@ (9002144c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9002142a:	4601      	mov	r1, r0
9002142c:	4630      	mov	r0, r6
9002142e:	881a      	ldrh	r2, [r3, #0]
90021430:	6833      	ldr	r3, [r6, #0]
90021432:	e9cd 7500 	strd	r7, r5, [sp]
90021436:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
90021438:	ab04      	add	r3, sp, #16
9002143a:	47a8      	blx	r5
9002143c:	6820      	ldr	r0, [r4, #0]
9002143e:	6803      	ldr	r3, [r0, #0]
90021440:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021442:	4798      	blx	r3
90021444:	e7e8      	b.n	90021418 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
90021446:	bf00      	nop
90021448:	24027e9c 	.word	0x24027e9c
9002144c:	24027e96 	.word	0x24027e96

90021450 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
90021450:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90021454:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
90021458:	4688      	mov	r8, r1
9002145a:	4614      	mov	r4, r2
9002145c:	461d      	mov	r5, r3
9002145e:	9e08      	ldr	r6, [sp, #32]
90021460:	2f00      	cmp	r7, #0
90021462:	f000 80ab 	beq.w	900215bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90021466:	4618      	mov	r0, r3
90021468:	f7f3 fc7f 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
9002146c:	2800      	cmp	r0, #0
9002146e:	f040 80a5 	bne.w	900215bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90021472:	f9b5 1000 	ldrsh.w	r1, [r5]
90021476:	2fff      	cmp	r7, #255	@ 0xff
90021478:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9002147c:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
90021480:	fb04 1303 	mla	r3, r4, r3, r1
90021484:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
90021488:	eba4 0200 	sub.w	r2, r4, r0
9002148c:	eb08 0143 	add.w	r1, r8, r3, lsl #1
90021490:	fb04 f505 	mul.w	r5, r4, r5
90021494:	ea4f 2816 	mov.w	r8, r6, lsr #8
90021498:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9002149c:	d04a      	beq.n	90021534 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9002149e:	b2bc      	uxth	r4, r7
900214a0:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
900214a4:	f3c6 4e07 	ubfx	lr, r6, #16, #8
900214a8:	fa5f f788 	uxtb.w	r7, r8
900214ac:	b2f3      	uxtb	r3, r6
900214ae:	0040      	lsls	r0, r0, #1
900214b0:	fb0e fe04 	mul.w	lr, lr, r4
900214b4:	4367      	muls	r7, r4
900214b6:	ea4f 0842 	mov.w	r8, r2, lsl #1
900214ba:	4363      	muls	r3, r4
900214bc:	fa1f fc8c 	uxth.w	ip, ip
900214c0:	42a9      	cmp	r1, r5
900214c2:	d27b      	bcs.n	900215bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
900214c4:	eb01 0900 	add.w	r9, r1, r0
900214c8:	4549      	cmp	r1, r9
900214ca:	d231      	bcs.n	90021530 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
900214cc:	880a      	ldrh	r2, [r1, #0]
900214ce:	1214      	asrs	r4, r2, #8
900214d0:	10d6      	asrs	r6, r2, #3
900214d2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900214d6:	00d2      	lsls	r2, r2, #3
900214d8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
900214dc:	b2d2      	uxtb	r2, r2
900214de:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
900214e2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
900214e6:	fb14 f40c 	smulbb	r4, r4, ip
900214ea:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
900214ee:	fb12 f20c 	smulbb	r2, r2, ip
900214f2:	fb16 f60c 	smulbb	r6, r6, ip
900214f6:	4474      	add	r4, lr
900214f8:	441a      	add	r2, r3
900214fa:	b2a4      	uxth	r4, r4
900214fc:	443e      	add	r6, r7
900214fe:	b292      	uxth	r2, r2
90021500:	f104 0a01 	add.w	sl, r4, #1
90021504:	b2b6      	uxth	r6, r6
90021506:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9002150a:	f102 0a01 	add.w	sl, r2, #1
9002150e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
90021512:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90021516:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002151a:	4322      	orrs	r2, r4
9002151c:	1c74      	adds	r4, r6, #1
9002151e:	eb04 2616 	add.w	r6, r4, r6, lsr #8
90021522:	0976      	lsrs	r6, r6, #5
90021524:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90021528:	4332      	orrs	r2, r6
9002152a:	f821 2b02 	strh.w	r2, [r1], #2
9002152e:	e7cb      	b.n	900214c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
90021530:	4441      	add	r1, r8
90021532:	e7c5      	b.n	900214c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
90021534:	0973      	lsrs	r3, r6, #5
90021536:	4f22      	ldr	r7, [pc, #136]	@ (900215c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
90021538:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9002153c:	ea08 0707 	and.w	r7, r8, r7
90021540:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021544:	433b      	orrs	r3, r7
90021546:	07e7      	lsls	r7, r4, #31
90021548:	ea43 0306 	orr.w	r3, r3, r6
9002154c:	b29b      	uxth	r3, r3
9002154e:	d50b      	bpl.n	90021568 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
90021550:	0040      	lsls	r0, r0, #1
90021552:	0052      	lsls	r2, r2, #1
90021554:	42a9      	cmp	r1, r5
90021556:	d231      	bcs.n	900215bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90021558:	180c      	adds	r4, r1, r0
9002155a:	42a1      	cmp	r1, r4
9002155c:	d202      	bcs.n	90021564 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9002155e:	f821 3b02 	strh.w	r3, [r1], #2
90021562:	e7fa      	b.n	9002155a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
90021564:	4411      	add	r1, r2
90021566:	e7f5      	b.n	90021554 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
90021568:	078e      	lsls	r6, r1, #30
9002156a:	d008      	beq.n	9002157e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9002156c:	0066      	lsls	r6, r4, #1
9002156e:	460a      	mov	r2, r1
90021570:	42aa      	cmp	r2, r5
90021572:	d202      	bcs.n	9002157a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
90021574:	8013      	strh	r3, [r2, #0]
90021576:	4432      	add	r2, r6
90021578:	e7fa      	b.n	90021570 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9002157a:	3102      	adds	r1, #2
9002157c:	3801      	subs	r0, #1
9002157e:	07c2      	lsls	r2, r0, #31
90021580:	d50b      	bpl.n	9002159a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
90021582:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
90021586:	0066      	lsls	r6, r4, #1
90021588:	3a01      	subs	r2, #1
9002158a:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9002158e:	42aa      	cmp	r2, r5
90021590:	d202      	bcs.n	90021598 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
90021592:	8013      	strh	r3, [r2, #0]
90021594:	4432      	add	r2, r6
90021596:	e7fa      	b.n	9002158e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
90021598:	3801      	subs	r0, #1
9002159a:	b178      	cbz	r0, 900215bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9002159c:	1040      	asrs	r0, r0, #1
9002159e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
900215a2:	0080      	lsls	r0, r0, #2
900215a4:	0064      	lsls	r4, r4, #1
900215a6:	42a9      	cmp	r1, r5
900215a8:	d208      	bcs.n	900215bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
900215aa:	180e      	adds	r6, r1, r0
900215ac:	460a      	mov	r2, r1
900215ae:	42b2      	cmp	r2, r6
900215b0:	d202      	bcs.n	900215b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
900215b2:	f842 3b04 	str.w	r3, [r2], #4
900215b6:	e7fa      	b.n	900215ae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
900215b8:	4421      	add	r1, r4
900215ba:	e7f4      	b.n	900215a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
900215bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900215c0:	00fff800 	.word	0x00fff800

900215c4 <_ZN8touchgfx8LCD16bppC1Ev>:
900215c4:	2200      	movs	r2, #0
900215c6:	4910      	ldr	r1, [pc, #64]	@ (90021608 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
900215c8:	6042      	str	r2, [r0, #4]
900215ca:	6001      	str	r1, [r0, #0]
900215cc:	e9c0 2202 	strd	r2, r2, [r0, #8]
900215d0:	e9c0 2204 	strd	r2, r2, [r0, #16]
900215d4:	e9c0 2206 	strd	r2, r2, [r0, #24]
900215d8:	e9c0 2208 	strd	r2, r2, [r0, #32]
900215dc:	e9c0 220a 	strd	r2, r2, [r0, #40]	@ 0x28
900215e0:	e9c0 220c 	strd	r2, r2, [r0, #48]	@ 0x30
900215e4:	e9c0 220e 	strd	r2, r2, [r0, #56]	@ 0x38
900215e8:	e9c0 2210 	strd	r2, r2, [r0, #64]	@ 0x40
900215ec:	e9c0 2212 	strd	r2, r2, [r0, #72]	@ 0x48
900215f0:	e9c0 2214 	strd	r2, r2, [r0, #80]	@ 0x50
900215f4:	e9c0 2216 	strd	r2, r2, [r0, #88]	@ 0x58
900215f8:	e9c0 2218 	strd	r2, r2, [r0, #96]	@ 0x60
900215fc:	e9c0 221a 	strd	r2, r2, [r0, #104]	@ 0x68
90021600:	e9c0 221c 	strd	r2, r2, [r0, #112]	@ 0x70
90021604:	4770      	bx	lr
90021606:	bf00      	nop
90021608:	900309f4 	.word	0x900309f4

9002160c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9002160c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021610:	b08d      	sub	sp, #52	@ 0x34
90021612:	460d      	mov	r5, r1
90021614:	4604      	mov	r4, r0
90021616:	4699      	mov	r9, r3
90021618:	6808      	ldr	r0, [r1, #0]
9002161a:	ab08      	add	r3, sp, #32
9002161c:	6849      	ldr	r1, [r1, #4]
9002161e:	c303      	stmia	r3!, {r0, r1}
90021620:	6810      	ldr	r0, [r2, #0]
90021622:	ab0a      	add	r3, sp, #40	@ 0x28
90021624:	6851      	ldr	r1, [r2, #4]
90021626:	c303      	stmia	r3!, {r0, r1}
90021628:	a808      	add	r0, sp, #32
9002162a:	f7f9 f949 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002162e:	4629      	mov	r1, r5
90021630:	a80a      	add	r0, sp, #40	@ 0x28
90021632:	4d67      	ldr	r5, [pc, #412]	@ (900217d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
90021634:	f7f9 f988 	bl	9001a948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021638:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
9002163c:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
90021640:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
90021644:	6828      	ldr	r0, [r5, #0]
90021646:	fb11 2103 	smlabb	r1, r1, r3, r2
9002164a:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
9002164e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
90021652:	eb04 0481 	add.w	r4, r4, r1, lsl #2
90021656:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9002165a:	440a      	add	r2, r1
9002165c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90021660:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
90021664:	4413      	add	r3, r2
90021666:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9002166a:	6803      	ldr	r3, [r0, #0]
9002166c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9002166e:	4798      	blx	r3
90021670:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90021674:	d119      	bne.n	900216aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
90021676:	f010 0f20 	tst.w	r0, #32
9002167a:	6828      	ldr	r0, [r5, #0]
9002167c:	d018      	beq.n	900216b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9002167e:	2500      	movs	r5, #0
90021680:	6801      	ldr	r1, [r0, #0]
90021682:	b2b6      	uxth	r6, r6
90021684:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90021688:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9002168c:	9601      	str	r6, [sp, #4]
9002168e:	e9cd 9503 	strd	r9, r5, [sp, #12]
90021692:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
90021696:	9502      	str	r5, [sp, #8]
90021698:	fa1f f588 	uxth.w	r5, r8
9002169c:	9500      	str	r5, [sp, #0]
9002169e:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
900216a0:	4621      	mov	r1, r4
900216a2:	47a8      	blx	r5
900216a4:	b00d      	add	sp, #52	@ 0x34
900216a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900216aa:	f010 0f40 	tst.w	r0, #64	@ 0x40
900216ae:	e7e4      	b.n	9002167a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
900216b0:	6803      	ldr	r3, [r0, #0]
900216b2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900216b4:	4798      	blx	r3
900216b6:	4947      	ldr	r1, [pc, #284]	@ (900217d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
900216b8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
900216bc:	880b      	ldrh	r3, [r1, #0]
900216be:	468a      	mov	sl, r1
900216c0:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
900216c4:	fb03 5202 	mla	r2, r3, r2, r5
900216c8:	4373      	muls	r3, r6
900216ca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900216ce:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900216d2:	9307      	str	r3, [sp, #28]
900216d4:	ea4f 0348 	mov.w	r3, r8, lsl #1
900216d8:	9306      	str	r3, [sp, #24]
900216da:	9b07      	ldr	r3, [sp, #28]
900216dc:	4298      	cmp	r0, r3
900216de:	d270      	bcs.n	900217c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
900216e0:	9b06      	ldr	r3, [sp, #24]
900216e2:	4621      	mov	r1, r4
900216e4:	eb00 0b03 	add.w	fp, r0, r3
900216e8:	4558      	cmp	r0, fp
900216ea:	d25d      	bcs.n	900217a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
900216ec:	f851 4b04 	ldr.w	r4, [r1], #4
900216f0:	0e23      	lsrs	r3, r4, #24
900216f2:	d014      	beq.n	9002171e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
900216f4:	2bff      	cmp	r3, #255	@ 0xff
900216f6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
900216fa:	d112      	bne.n	90021722 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
900216fc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90021700:	d10f      	bne.n	90021722 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
90021702:	0963      	lsrs	r3, r4, #5
90021704:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90021708:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9002170c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021710:	f02c 0c07 	bic.w	ip, ip, #7
90021714:	ea43 0c0c 	orr.w	ip, r3, ip
90021718:	ea4c 0404 	orr.w	r4, ip, r4
9002171c:	8004      	strh	r4, [r0, #0]
9002171e:	3002      	adds	r0, #2
90021720:	e7e2      	b.n	900216e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
90021722:	fb09 f303 	mul.w	r3, r9, r3
90021726:	8807      	ldrh	r7, [r0, #0]
90021728:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9002172c:	fa5f fc8c 	uxtb.w	ip, ip
90021730:	1c5a      	adds	r2, r3, #1
90021732:	123e      	asrs	r6, r7, #8
90021734:	10fd      	asrs	r5, r7, #3
90021736:	eb02 2223 	add.w	r2, r2, r3, asr #8
9002173a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9002173e:	00ff      	lsls	r7, r7, #3
90021740:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90021744:	1212      	asrs	r2, r2, #8
90021746:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9002174a:	b293      	uxth	r3, r2
9002174c:	43d2      	mvns	r2, r2
9002174e:	b2ff      	uxtb	r7, r7
90021750:	fb1e fe03 	smulbb	lr, lr, r3
90021754:	b2d2      	uxtb	r2, r2
90021756:	fb1c fc03 	smulbb	ip, ip, r3
9002175a:	b2e4      	uxtb	r4, r4
9002175c:	fb06 e602 	mla	r6, r6, r2, lr
90021760:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
90021764:	fb14 f403 	smulbb	r4, r4, r3
90021768:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9002176c:	b2b6      	uxth	r6, r6
9002176e:	fb05 c502 	mla	r5, r5, r2, ip
90021772:	fb07 4702 	mla	r7, r7, r2, r4
90021776:	f106 0e01 	add.w	lr, r6, #1
9002177a:	b2ad      	uxth	r5, r5
9002177c:	b2bf      	uxth	r7, r7
9002177e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
90021782:	f105 0c01 	add.w	ip, r5, #1
90021786:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
9002178a:	1c7e      	adds	r6, r7, #1
9002178c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90021790:	eb06 2617 	add.w	r6, r6, r7, lsr #8
90021794:	096d      	lsrs	r5, r5, #5
90021796:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9002179a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002179e:	ea46 060e 	orr.w	r6, r6, lr
900217a2:	432e      	orrs	r6, r5
900217a4:	8006      	strh	r6, [r0, #0]
900217a6:	e7ba      	b.n	9002171e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
900217a8:	f8ba 3000 	ldrh.w	r3, [sl]
900217ac:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
900217b0:	eba3 0308 	sub.w	r3, r3, r8
900217b4:	eba4 0408 	sub.w	r4, r4, r8
900217b8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900217bc:	eb01 0484 	add.w	r4, r1, r4, lsl #2
900217c0:	e78b      	b.n	900216da <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
900217c2:	4b03      	ldr	r3, [pc, #12]	@ (900217d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
900217c4:	6818      	ldr	r0, [r3, #0]
900217c6:	6803      	ldr	r3, [r0, #0]
900217c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900217ca:	4798      	blx	r3
900217cc:	e76a      	b.n	900216a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
900217ce:	bf00      	nop
900217d0:	24027e9c 	.word	0x24027e9c
900217d4:	24027e96 	.word	0x24027e96

900217d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
900217d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900217dc:	b085      	sub	sp, #20
900217de:	6810      	ldr	r0, [r2, #0]
900217e0:	460c      	mov	r4, r1
900217e2:	6851      	ldr	r1, [r2, #4]
900217e4:	466d      	mov	r5, sp
900217e6:	4616      	mov	r6, r2
900217e8:	c503      	stmia	r5!, {r0, r1}
900217ea:	6818      	ldr	r0, [r3, #0]
900217ec:	6859      	ldr	r1, [r3, #4]
900217ee:	c503      	stmia	r5!, {r0, r1}
900217f0:	4668      	mov	r0, sp
900217f2:	4d2e      	ldr	r5, [pc, #184]	@ (900218ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
900217f4:	f7f9 f864 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900217f8:	4631      	mov	r1, r6
900217fa:	a802      	add	r0, sp, #8
900217fc:	4e2c      	ldr	r6, [pc, #176]	@ (900218b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
900217fe:	f7f9 f8a3 	bl	9001a948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021802:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
90021806:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9002180a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9002180e:	6828      	ldr	r0, [r5, #0]
90021810:	fb11 2103 	smlabb	r1, r1, r3, r2
90021814:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90021818:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9002181c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
90021820:	f8bd 1000 	ldrh.w	r1, [sp]
90021824:	440a      	add	r2, r1
90021826:	f8ad 2008 	strh.w	r2, [sp, #8]
9002182a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9002182e:	4413      	add	r3, r2
90021830:	f8ad 300a 	strh.w	r3, [sp, #10]
90021834:	6803      	ldr	r3, [r0, #0]
90021836:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90021838:	4798      	blx	r3
9002183a:	8833      	ldrh	r3, [r6, #0]
9002183c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
90021840:	ea4f 0c47 	mov.w	ip, r7, lsl #1
90021844:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
90021848:	f8df e068 	ldr.w	lr, [pc, #104]	@ 900218b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9002184c:	fb03 1202 	mla	r2, r3, r2, r1
90021850:	fb08 f303 	mul.w	r3, r8, r3
90021854:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90021858:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9002185c:	4298      	cmp	r0, r3
9002185e:	d21d      	bcs.n	9002189c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
90021860:	eb00 080c 	add.w	r8, r0, ip
90021864:	4540      	cmp	r0, r8
90021866:	d20f      	bcs.n	90021888 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
90021868:	f854 1b04 	ldr.w	r1, [r4], #4
9002186c:	ea4f 1951 	mov.w	r9, r1, lsr #5
90021870:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
90021874:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90021878:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9002187c:	ea42 0209 	orr.w	r2, r2, r9
90021880:	430a      	orrs	r2, r1
90021882:	f820 2b02 	strh.w	r2, [r0], #2
90021886:	e7ed      	b.n	90021864 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
90021888:	8832      	ldrh	r2, [r6, #0]
9002188a:	1bd2      	subs	r2, r2, r7
9002188c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90021890:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
90021894:	1bd2      	subs	r2, r2, r7
90021896:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9002189a:	e7df      	b.n	9002185c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9002189c:	6828      	ldr	r0, [r5, #0]
9002189e:	6803      	ldr	r3, [r0, #0]
900218a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900218a2:	4798      	blx	r3
900218a4:	b005      	add	sp, #20
900218a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900218aa:	bf00      	nop
900218ac:	24027e9c 	.word	0x24027e9c
900218b0:	24027e96 	.word	0x24027e96
900218b4:	fffff800 	.word	0xfffff800

900218b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
900218b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900218bc:	b08e      	sub	sp, #56	@ 0x38
900218be:	460e      	mov	r6, r1
900218c0:	4604      	mov	r4, r0
900218c2:	461d      	mov	r5, r3
900218c4:	6808      	ldr	r0, [r1, #0]
900218c6:	ab0a      	add	r3, sp, #40	@ 0x28
900218c8:	6849      	ldr	r1, [r1, #4]
900218ca:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 90021aa0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
900218ce:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 90021aa4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
900218d2:	c303      	stmia	r3!, {r0, r1}
900218d4:	6810      	ldr	r0, [r2, #0]
900218d6:	ab0c      	add	r3, sp, #48	@ 0x30
900218d8:	6851      	ldr	r1, [r2, #4]
900218da:	c303      	stmia	r3!, {r0, r1}
900218dc:	a80a      	add	r0, sp, #40	@ 0x28
900218de:	f7f8 ffef 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900218e2:	4631      	mov	r1, r6
900218e4:	a80c      	add	r0, sp, #48	@ 0x30
900218e6:	f7f9 f82f 	bl	9001a948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900218ea:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
900218ee:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
900218f2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
900218f6:	f8d8 0000 	ldr.w	r0, [r8]
900218fa:	fb11 2103 	smlabb	r1, r1, r3, r2
900218fe:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
90021902:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
90021906:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002190a:	440c      	add	r4, r1
9002190c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
90021910:	440a      	add	r2, r1
90021912:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90021916:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9002191a:	4413      	add	r3, r2
9002191c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90021920:	6803      	ldr	r3, [r0, #0]
90021922:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90021924:	4798      	blx	r3
90021926:	2dff      	cmp	r5, #255	@ 0xff
90021928:	d124      	bne.n	90021974 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9002192a:	f010 0f01 	tst.w	r0, #1
9002192e:	f8d8 0000 	ldr.w	r0, [r8]
90021932:	d022      	beq.n	9002197a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
90021934:	2100      	movs	r1, #0
90021936:	f04f 0e01 	mov.w	lr, #1
9002193a:	f8d0 c000 	ldr.w	ip, [r0]
9002193e:	b2b6      	uxth	r6, r6
90021940:	f8cd e018 	str.w	lr, [sp, #24]
90021944:	b2bf      	uxth	r7, r7
90021946:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
9002194a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
9002194e:	e9cd 1107 	strd	r1, r1, [sp, #28]
90021952:	f8b9 e000 	ldrh.w	lr, [r9]
90021956:	9503      	str	r5, [sp, #12]
90021958:	9601      	str	r6, [sp, #4]
9002195a:	9700      	str	r7, [sp, #0]
9002195c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
90021960:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90021964:	9102      	str	r1, [sp, #8]
90021966:	4621      	mov	r1, r4
90021968:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
9002196c:	47a8      	blx	r5
9002196e:	b00e      	add	sp, #56	@ 0x38
90021970:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90021974:	f010 0f04 	tst.w	r0, #4
90021978:	e7d9      	b.n	9002192e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9002197a:	6803      	ldr	r3, [r0, #0]
9002197c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002197e:	4798      	blx	r3
90021980:	f8b9 3000 	ldrh.w	r3, [r9]
90021984:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
90021988:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9002198c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
90021990:	435e      	muls	r6, r3
90021992:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90021996:	2dff      	cmp	r5, #255	@ 0xff
90021998:	fb03 1202 	mla	r2, r3, r2, r1
9002199c:	ebac 0c07 	sub.w	ip, ip, r7
900219a0:	eba3 0707 	sub.w	r7, r3, r7
900219a4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900219a8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
900219ac:	eb00 0646 	add.w	r6, r0, r6, lsl #1
900219b0:	ea4f 0747 	mov.w	r7, r7, lsl #1
900219b4:	d049      	beq.n	90021a4a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
900219b6:	43eb      	mvns	r3, r5
900219b8:	fa1f f985 	uxth.w	r9, r5
900219bc:	b2db      	uxtb	r3, r3
900219be:	42b0      	cmp	r0, r6
900219c0:	d266      	bcs.n	90021a90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
900219c2:	eb00 0a0e 	add.w	sl, r0, lr
900219c6:	4550      	cmp	r0, sl
900219c8:	4621      	mov	r1, r4
900219ca:	f104 0403 	add.w	r4, r4, #3
900219ce:	d25b      	bcs.n	90021a88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
900219d0:	8802      	ldrh	r2, [r0, #0]
900219d2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
900219d6:	ea4f 2822 	mov.w	r8, r2, asr #8
900219da:	fb11 f109 	smulbb	r1, r1, r9
900219de:	10d5      	asrs	r5, r2, #3
900219e0:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
900219e4:	00d2      	lsls	r2, r2, #3
900219e6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
900219ea:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
900219ee:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
900219f2:	fb08 1803 	mla	r8, r8, r3, r1
900219f6:	f814 1c02 	ldrb.w	r1, [r4, #-2]
900219fa:	b2d2      	uxtb	r2, r2
900219fc:	fb11 f109 	smulbb	r1, r1, r9
90021a00:	fa1f f888 	uxth.w	r8, r8
90021a04:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90021a08:	fb05 1503 	mla	r5, r5, r3, r1
90021a0c:	f814 1c03 	ldrb.w	r1, [r4, #-3]
90021a10:	fb11 f109 	smulbb	r1, r1, r9
90021a14:	b2ad      	uxth	r5, r5
90021a16:	fb02 1203 	mla	r2, r2, r3, r1
90021a1a:	f108 0101 	add.w	r1, r8, #1
90021a1e:	b292      	uxth	r2, r2
90021a20:	eb01 2818 	add.w	r8, r1, r8, lsr #8
90021a24:	1c51      	adds	r1, r2, #1
90021a26:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
90021a2a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90021a2e:	1c69      	adds	r1, r5, #1
90021a30:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90021a34:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021a38:	096d      	lsrs	r5, r5, #5
90021a3a:	ea42 0208 	orr.w	r2, r2, r8
90021a3e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90021a42:	432a      	orrs	r2, r5
90021a44:	f820 2b02 	strh.w	r2, [r0], #2
90021a48:	e7bd      	b.n	900219c6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
90021a4a:	4a14      	ldr	r2, [pc, #80]	@ (90021a9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
90021a4c:	42b0      	cmp	r0, r6
90021a4e:	d21f      	bcs.n	90021a90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
90021a50:	eb00 050e 	add.w	r5, r0, lr
90021a54:	42a8      	cmp	r0, r5
90021a56:	4621      	mov	r1, r4
90021a58:	f104 0403 	add.w	r4, r4, #3
90021a5c:	d210      	bcs.n	90021a80 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
90021a5e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
90021a62:	f814 1c01 	ldrb.w	r1, [r4, #-1]
90021a66:	00db      	lsls	r3, r3, #3
90021a68:	ea02 2101 	and.w	r1, r2, r1, lsl #8
90021a6c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021a70:	430b      	orrs	r3, r1
90021a72:	f814 1c03 	ldrb.w	r1, [r4, #-3]
90021a76:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
90021a7a:	f820 3b02 	strh.w	r3, [r0], #2
90021a7e:	e7e9      	b.n	90021a54 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
90021a80:	4438      	add	r0, r7
90021a82:	eb01 040c 	add.w	r4, r1, ip
90021a86:	e7e1      	b.n	90021a4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
90021a88:	4438      	add	r0, r7
90021a8a:	eb01 040c 	add.w	r4, r1, ip
90021a8e:	e796      	b.n	900219be <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
90021a90:	4b03      	ldr	r3, [pc, #12]	@ (90021aa0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
90021a92:	6818      	ldr	r0, [r3, #0]
90021a94:	6803      	ldr	r3, [r0, #0]
90021a96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021a98:	4798      	blx	r3
90021a9a:	e768      	b.n	9002196e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
90021a9c:	fffff800 	.word	0xfffff800
90021aa0:	24027e9c 	.word	0x24027e9c
90021aa4:	24027e96 	.word	0x24027e96

90021aa8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
90021aa8:	b4f0      	push	{r4, r5, r6, r7}
90021aaa:	4616      	mov	r6, r2
90021aac:	461c      	mov	r4, r3
90021aae:	460d      	mov	r5, r1
90021ab0:	9a04      	ldr	r2, [sp, #16]
90021ab2:	2e01      	cmp	r6, #1
90021ab4:	f89d 3014 	ldrb.w	r3, [sp, #20]
90021ab8:	f89d 7018 	ldrb.w	r7, [sp, #24]
90021abc:	d012      	beq.n	90021ae4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
90021abe:	d303      	bcc.n	90021ac8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
90021ac0:	2e02      	cmp	r6, #2
90021ac2:	d00a      	beq.n	90021ada <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
90021ac4:	bcf0      	pop	{r4, r5, r6, r7}
90021ac6:	4770      	bx	lr
90021ac8:	6805      	ldr	r5, [r0, #0]
90021aca:	e9cd 3704 	strd	r3, r7, [sp, #16]
90021ace:	68ed      	ldr	r5, [r5, #12]
90021ad0:	4613      	mov	r3, r2
90021ad2:	4622      	mov	r2, r4
90021ad4:	46ac      	mov	ip, r5
90021ad6:	bcf0      	pop	{r4, r5, r6, r7}
90021ad8:	4760      	bx	ip
90021ada:	4621      	mov	r1, r4
90021adc:	4628      	mov	r0, r5
90021ade:	bcf0      	pop	{r4, r5, r6, r7}
90021ae0:	f7ff bd94 	b.w	9002160c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021ae4:	4621      	mov	r1, r4
90021ae6:	4628      	mov	r0, r5
90021ae8:	bcf0      	pop	{r4, r5, r6, r7}
90021aea:	f7ff bee5 	b.w	900218b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

90021af0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
90021af0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021af4:	b093      	sub	sp, #76	@ 0x4c
90021af6:	4681      	mov	r9, r0
90021af8:	4688      	mov	r8, r1
90021afa:	6810      	ldr	r0, [r2, #0]
90021afc:	6851      	ldr	r1, [r2, #4]
90021afe:	ac0e      	add	r4, sp, #56	@ 0x38
90021b00:	4616      	mov	r6, r2
90021b02:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
90021b06:	4f6b      	ldr	r7, [pc, #428]	@ (90021cb4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
90021b08:	c403      	stmia	r4!, {r0, r1}
90021b0a:	6818      	ldr	r0, [r3, #0]
90021b0c:	ac10      	add	r4, sp, #64	@ 0x40
90021b0e:	6859      	ldr	r1, [r3, #4]
90021b10:	c403      	stmia	r4!, {r0, r1}
90021b12:	a80e      	add	r0, sp, #56	@ 0x38
90021b14:	f7f8 fed4 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021b18:	4631      	mov	r1, r6
90021b1a:	a810      	add	r0, sp, #64	@ 0x40
90021b1c:	4e66      	ldr	r6, [pc, #408]	@ (90021cb8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
90021b1e:	f7f8 ff13 	bl	9001a948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021b22:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
90021b26:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
90021b2a:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
90021b2e:	6830      	ldr	r0, [r6, #0]
90021b30:	fb11 2103 	smlabb	r1, r1, r3, r2
90021b34:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
90021b38:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
90021b3c:	4489      	add	r9, r1
90021b3e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
90021b42:	440a      	add	r2, r1
90021b44:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
90021b48:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
90021b4c:	4413      	add	r3, r2
90021b4e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
90021b52:	6803      	ldr	r3, [r0, #0]
90021b54:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90021b56:	4798      	blx	r3
90021b58:	f010 0f80 	tst.w	r0, #128	@ 0x80
90021b5c:	6830      	ldr	r0, [r6, #0]
90021b5e:	d01d      	beq.n	90021b9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
90021b60:	2200      	movs	r2, #0
90021b62:	6801      	ldr	r1, [r0, #0]
90021b64:	b2a4      	uxth	r4, r4
90021b66:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90021b6a:	b2ad      	uxth	r5, r5
90021b6c:	e9cd 2208 	strd	r2, r2, [sp, #32]
90021b70:	220b      	movs	r2, #11
90021b72:	9207      	str	r2, [sp, #28]
90021b74:	883a      	ldrh	r2, [r7, #0]
90021b76:	9502      	str	r5, [sp, #8]
90021b78:	9206      	str	r2, [sp, #24]
90021b7a:	2201      	movs	r2, #1
90021b7c:	9401      	str	r4, [sp, #4]
90021b7e:	e9cd a204 	strd	sl, r2, [sp, #16]
90021b82:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
90021b86:	9203      	str	r2, [sp, #12]
90021b88:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
90021b8c:	9200      	str	r2, [sp, #0]
90021b8e:	4642      	mov	r2, r8
90021b90:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
90021b92:	4649      	mov	r1, r9
90021b94:	47a0      	blx	r4
90021b96:	b013      	add	sp, #76	@ 0x4c
90021b98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021b9c:	6803      	ldr	r3, [r0, #0]
90021b9e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90021ba0:	4798      	blx	r3
90021ba2:	883b      	ldrh	r3, [r7, #0]
90021ba4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
90021ba8:	f04f 0e04 	mov.w	lr, #4
90021bac:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
90021bb0:	435d      	muls	r5, r3
90021bb2:	fb03 1202 	mla	r2, r3, r2, r1
90021bb6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90021bba:	eb00 0245 	add.w	r2, r0, r5, lsl #1
90021bbe:	920c      	str	r2, [sp, #48]	@ 0x30
90021bc0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
90021bc4:	1b12      	subs	r2, r2, r4
90021bc6:	920d      	str	r2, [sp, #52]	@ 0x34
90021bc8:	0062      	lsls	r2, r4, #1
90021bca:	1b1c      	subs	r4, r3, r4
90021bcc:	920a      	str	r2, [sp, #40]	@ 0x28
90021bce:	0063      	lsls	r3, r4, #1
90021bd0:	930b      	str	r3, [sp, #44]	@ 0x2c
90021bd2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021bd4:	4298      	cmp	r0, r3
90021bd6:	d266      	bcs.n	90021ca6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
90021bd8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021bda:	eb00 0b03 	add.w	fp, r0, r3
90021bde:	4558      	cmp	r0, fp
90021be0:	d25c      	bcs.n	90021c9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
90021be2:	f819 3b01 	ldrb.w	r3, [r9], #1
90021be6:	fb1e e303 	smlabb	r3, lr, r3, lr
90021bea:	f858 2003 	ldr.w	r2, [r8, r3]
90021bee:	0e11      	lsrs	r1, r2, #24
90021bf0:	d012      	beq.n	90021c18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
90021bf2:	29ff      	cmp	r1, #255	@ 0xff
90021bf4:	ea4f 2712 	mov.w	r7, r2, lsr #8
90021bf8:	d110      	bne.n	90021c1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90021bfa:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90021bfe:	d10d      	bne.n	90021c1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90021c00:	0953      	lsrs	r3, r2, #5
90021c02:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
90021c06:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90021c0a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021c0e:	f027 0707 	bic.w	r7, r7, #7
90021c12:	431f      	orrs	r7, r3
90021c14:	433a      	orrs	r2, r7
90021c16:	8002      	strh	r2, [r0, #0]
90021c18:	3002      	adds	r0, #2
90021c1a:	e7e0      	b.n	90021bde <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
90021c1c:	fb0a f101 	mul.w	r1, sl, r1
90021c20:	8806      	ldrh	r6, [r0, #0]
90021c22:	f3c2 4c07 	ubfx	ip, r2, #16, #8
90021c26:	b2d2      	uxtb	r2, r2
90021c28:	1c4b      	adds	r3, r1, #1
90021c2a:	1235      	asrs	r5, r6, #8
90021c2c:	10f4      	asrs	r4, r6, #3
90021c2e:	eb03 2321 	add.w	r3, r3, r1, asr #8
90021c32:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90021c36:	00f6      	lsls	r6, r6, #3
90021c38:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90021c3c:	121b      	asrs	r3, r3, #8
90021c3e:	b2f6      	uxtb	r6, r6
90021c40:	b299      	uxth	r1, r3
90021c42:	43db      	mvns	r3, r3
90021c44:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
90021c48:	fb1c fc01 	smulbb	ip, ip, r1
90021c4c:	b2db      	uxtb	r3, r3
90021c4e:	fb12 f201 	smulbb	r2, r2, r1
90021c52:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
90021c56:	fb05 c503 	mla	r5, r5, r3, ip
90021c5a:	b2ff      	uxtb	r7, r7
90021c5c:	fb06 2203 	mla	r2, r6, r3, r2
90021c60:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
90021c64:	fb17 f701 	smulbb	r7, r7, r1
90021c68:	b2ad      	uxth	r5, r5
90021c6a:	b292      	uxth	r2, r2
90021c6c:	fb04 7403 	mla	r4, r4, r3, r7
90021c70:	f105 0c01 	add.w	ip, r5, #1
90021c74:	1c57      	adds	r7, r2, #1
90021c76:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90021c7a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90021c7e:	b2a4      	uxth	r4, r4
90021c80:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90021c84:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90021c88:	433d      	orrs	r5, r7
90021c8a:	1c67      	adds	r7, r4, #1
90021c8c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
90021c90:	0964      	lsrs	r4, r4, #5
90021c92:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90021c96:	4325      	orrs	r5, r4
90021c98:	8005      	strh	r5, [r0, #0]
90021c9a:	e7bd      	b.n	90021c18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
90021c9c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021c9e:	4418      	add	r0, r3
90021ca0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021ca2:	4499      	add	r9, r3
90021ca4:	e795      	b.n	90021bd2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
90021ca6:	4b04      	ldr	r3, [pc, #16]	@ (90021cb8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
90021ca8:	6818      	ldr	r0, [r3, #0]
90021caa:	6803      	ldr	r3, [r0, #0]
90021cac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021cae:	4798      	blx	r3
90021cb0:	e771      	b.n	90021b96 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
90021cb2:	bf00      	nop
90021cb4:	24027e96 	.word	0x24027e96
90021cb8:	24027e9c 	.word	0x24027e9c

90021cbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
90021cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021cc0:	b087      	sub	sp, #28
90021cc2:	4680      	mov	r8, r0
90021cc4:	460d      	mov	r5, r1
90021cc6:	4614      	mov	r4, r2
90021cc8:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
90021ccc:	2e00      	cmp	r6, #0
90021cce:	f000 80b9 	beq.w	90021e44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
90021cd2:	6810      	ldr	r0, [r2, #0]
90021cd4:	af02      	add	r7, sp, #8
90021cd6:	6851      	ldr	r1, [r2, #4]
90021cd8:	c703      	stmia	r7!, {r0, r1}
90021cda:	6818      	ldr	r0, [r3, #0]
90021cdc:	af04      	add	r7, sp, #16
90021cde:	6859      	ldr	r1, [r3, #4]
90021ce0:	c703      	stmia	r7!, {r0, r1}
90021ce2:	a802      	add	r0, sp, #8
90021ce4:	f7f8 fdec 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021ce8:	4621      	mov	r1, r4
90021cea:	a804      	add	r0, sp, #16
90021cec:	f7f8 fe2c 	bl	9001a948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021cf0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90021cf4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90021cf8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
90021cfc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
90021d00:	fb14 2103 	smlabb	r1, r4, r3, r2
90021d04:	eb08 0401 	add.w	r4, r8, r1
90021d08:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90021d0c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
90021d10:	440a      	add	r2, r1
90021d12:	ea4f 0a48 	mov.w	sl, r8, lsl #1
90021d16:	f8ad 2010 	strh.w	r2, [sp, #16]
90021d1a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90021d1e:	4413      	add	r3, r2
90021d20:	f8ad 3012 	strh.w	r3, [sp, #18]
90021d24:	4b49      	ldr	r3, [pc, #292]	@ (90021e4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90021d26:	6818      	ldr	r0, [r3, #0]
90021d28:	6803      	ldr	r3, [r0, #0]
90021d2a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90021d2c:	4798      	blx	r3
90021d2e:	4b48      	ldr	r3, [pc, #288]	@ (90021e50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
90021d30:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
90021d34:	2eff      	cmp	r6, #255	@ 0xff
90021d36:	881a      	ldrh	r2, [r3, #0]
90021d38:	f9bd c010 	ldrsh.w	ip, [sp, #16]
90021d3c:	fb02 c101 	mla	r1, r2, r1, ip
90021d40:	fb02 f207 	mul.w	r2, r2, r7
90021d44:	eb00 0041 	add.w	r0, r0, r1, lsl #1
90021d48:	f105 0104 	add.w	r1, r5, #4
90021d4c:	461d      	mov	r5, r3
90021d4e:	d05a      	beq.n	90021e06 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
90021d50:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
90021d54:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90021d58:	b2b6      	uxth	r6, r6
90021d5a:	9301      	str	r3, [sp, #4]
90021d5c:	fa1f fe8e 	uxth.w	lr, lr
90021d60:	4282      	cmp	r2, r0
90021d62:	d96a      	bls.n	90021e3a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
90021d64:	eb00 0b0a 	add.w	fp, r0, sl
90021d68:	4583      	cmp	fp, r0
90021d6a:	d940      	bls.n	90021dee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
90021d6c:	8805      	ldrh	r5, [r0, #0]
90021d6e:	f814 3b01 	ldrb.w	r3, [r4], #1
90021d72:	122f      	asrs	r7, r5, #8
90021d74:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
90021d78:	ea4f 09e5 	mov.w	r9, r5, asr #3
90021d7c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90021d80:	00ed      	lsls	r5, r5, #3
90021d82:	ea4f 2c23 	mov.w	ip, r3, asr #8
90021d86:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
90021d8a:	fb17 f70e 	smulbb	r7, r7, lr
90021d8e:	b2ed      	uxtb	r5, r5
90021d90:	fb19 f90e 	smulbb	r9, r9, lr
90021d94:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90021d98:	fb15 f50e 	smulbb	r5, r5, lr
90021d9c:	fb0c 7c06 	mla	ip, ip, r6, r7
90021da0:	10df      	asrs	r7, r3, #3
90021da2:	00db      	lsls	r3, r3, #3
90021da4:	fa1f fc8c 	uxth.w	ip, ip
90021da8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90021dac:	b2db      	uxtb	r3, r3
90021dae:	fb07 9706 	mla	r7, r7, r6, r9
90021db2:	f10c 0901 	add.w	r9, ip, #1
90021db6:	fb03 5306 	mla	r3, r3, r6, r5
90021dba:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
90021dbe:	b29b      	uxth	r3, r3
90021dc0:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
90021dc4:	b2bf      	uxth	r7, r7
90021dc6:	f103 0c01 	add.w	ip, r3, #1
90021dca:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90021dce:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90021dd2:	ea4c 0c09 	orr.w	ip, ip, r9
90021dd6:	f107 0901 	add.w	r9, r7, #1
90021dda:	eb09 2717 	add.w	r7, r9, r7, lsr #8
90021dde:	097f      	lsrs	r7, r7, #5
90021de0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90021de4:	ea4c 0c07 	orr.w	ip, ip, r7
90021de8:	f820 cb02 	strh.w	ip, [r0], #2
90021dec:	e7bc      	b.n	90021d68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
90021dee:	9b01      	ldr	r3, [sp, #4]
90021df0:	881b      	ldrh	r3, [r3, #0]
90021df2:	eba3 0308 	sub.w	r3, r3, r8
90021df6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90021dfa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90021dfe:	eba3 0308 	sub.w	r3, r3, r8
90021e02:	441c      	add	r4, r3
90021e04:	e7ac      	b.n	90021d60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
90021e06:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90021e0a:	4282      	cmp	r2, r0
90021e0c:	d915      	bls.n	90021e3a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
90021e0e:	eb00 060a 	add.w	r6, r0, sl
90021e12:	4286      	cmp	r6, r0
90021e14:	d906      	bls.n	90021e24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
90021e16:	f814 3b01 	ldrb.w	r3, [r4], #1
90021e1a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
90021e1e:	f820 3b02 	strh.w	r3, [r0], #2
90021e22:	e7f6      	b.n	90021e12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
90021e24:	882b      	ldrh	r3, [r5, #0]
90021e26:	eba3 0308 	sub.w	r3, r3, r8
90021e2a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90021e2e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90021e32:	eba3 0308 	sub.w	r3, r3, r8
90021e36:	441c      	add	r4, r3
90021e38:	e7e7      	b.n	90021e0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
90021e3a:	4b04      	ldr	r3, [pc, #16]	@ (90021e4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90021e3c:	6818      	ldr	r0, [r3, #0]
90021e3e:	6803      	ldr	r3, [r0, #0]
90021e40:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021e42:	4798      	blx	r3
90021e44:	b007      	add	sp, #28
90021e46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021e4a:	bf00      	nop
90021e4c:	24027e9c 	.word	0x24027e9c
90021e50:	24027e96 	.word	0x24027e96

90021e54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
90021e54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021e58:	b091      	sub	sp, #68	@ 0x44
90021e5a:	4680      	mov	r8, r0
90021e5c:	460f      	mov	r7, r1
90021e5e:	4614      	mov	r4, r2
90021e60:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
90021e64:	2d00      	cmp	r5, #0
90021e66:	d051      	beq.n	90021f0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90021e68:	6810      	ldr	r0, [r2, #0]
90021e6a:	ae0c      	add	r6, sp, #48	@ 0x30
90021e6c:	6851      	ldr	r1, [r2, #4]
90021e6e:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 90022070 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
90021e72:	c603      	stmia	r6!, {r0, r1}
90021e74:	6818      	ldr	r0, [r3, #0]
90021e76:	ae0e      	add	r6, sp, #56	@ 0x38
90021e78:	6859      	ldr	r1, [r3, #4]
90021e7a:	c603      	stmia	r6!, {r0, r1}
90021e7c:	a80c      	add	r0, sp, #48	@ 0x30
90021e7e:	f7f8 fd1f 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021e82:	4621      	mov	r1, r4
90021e84:	a80e      	add	r0, sp, #56	@ 0x38
90021e86:	f7f8 fd5f 	bl	9001a948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021e8a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
90021e8e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
90021e92:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90021e96:	f8d9 0000 	ldr.w	r0, [r9]
90021e9a:	fb11 2103 	smlabb	r1, r1, r3, r2
90021e9e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
90021ea2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
90021ea6:	eb08 0401 	add.w	r4, r8, r1
90021eaa:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
90021eae:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 90022074 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
90021eb2:	440a      	add	r2, r1
90021eb4:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
90021eb8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90021ebc:	4413      	add	r3, r2
90021ebe:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
90021ec2:	6803      	ldr	r3, [r0, #0]
90021ec4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90021ec6:	4798      	blx	r3
90021ec8:	f010 0f80 	tst.w	r0, #128	@ 0x80
90021ecc:	f8d9 0000 	ldr.w	r0, [r9]
90021ed0:	d01f      	beq.n	90021f12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
90021ed2:	2200      	movs	r2, #0
90021ed4:	6801      	ldr	r1, [r0, #0]
90021ed6:	b2b6      	uxth	r6, r6
90021ed8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90021edc:	e9cd 2208 	strd	r2, r2, [sp, #32]
90021ee0:	220b      	movs	r2, #11
90021ee2:	9207      	str	r2, [sp, #28]
90021ee4:	f8b8 2000 	ldrh.w	r2, [r8]
90021ee8:	9601      	str	r6, [sp, #4]
90021eea:	9206      	str	r2, [sp, #24]
90021eec:	2201      	movs	r2, #1
90021eee:	e9cd 5204 	strd	r5, r2, [sp, #16]
90021ef2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
90021ef6:	9203      	str	r2, [sp, #12]
90021ef8:	fa1f f28a 	uxth.w	r2, sl
90021efc:	9202      	str	r2, [sp, #8]
90021efe:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
90021f02:	9200      	str	r2, [sp, #0]
90021f04:	463a      	mov	r2, r7
90021f06:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
90021f08:	4621      	mov	r1, r4
90021f0a:	47a8      	blx	r5
90021f0c:	b011      	add	sp, #68	@ 0x44
90021f0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021f12:	6803      	ldr	r3, [r0, #0]
90021f14:	ea4f 0946 	mov.w	r9, r6, lsl #1
90021f18:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90021f1a:	4798      	blx	r3
90021f1c:	f8b8 2000 	ldrh.w	r2, [r8]
90021f20:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
90021f24:	2dff      	cmp	r5, #255	@ 0xff
90021f26:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
90021f2a:	fb0a fa02 	mul.w	sl, sl, r2
90021f2e:	fb02 1303 	mla	r3, r2, r3, r1
90021f32:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90021f36:	d062      	beq.n	90021ffe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
90021f38:	ea6f 0c05 	mvn.w	ip, r5
90021f3c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
90021f40:	b2ad      	uxth	r5, r5
90021f42:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
90021f46:	fa5f fc8c 	uxtb.w	ip, ip
90021f4a:	930a      	str	r3, [sp, #40]	@ 0x28
90021f4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021f4e:	4298      	cmp	r0, r3
90021f50:	f080 8085 	bcs.w	9002205e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90021f54:	eb00 0b09 	add.w	fp, r0, r9
90021f58:	4558      	cmp	r0, fp
90021f5a:	d246      	bcs.n	90021fea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
90021f5c:	f814 eb01 	ldrb.w	lr, [r4], #1
90021f60:	2303      	movs	r3, #3
90021f62:	2204      	movs	r2, #4
90021f64:	fb13 2e0e 	smlabb	lr, r3, lr, r2
90021f68:	8803      	ldrh	r3, [r0, #0]
90021f6a:	eb07 0a0e 	add.w	sl, r7, lr
90021f6e:	1219      	asrs	r1, r3, #8
90021f70:	10da      	asrs	r2, r3, #3
90021f72:	f817 e00e 	ldrb.w	lr, [r7, lr]
90021f76:	f89a 8002 	ldrb.w	r8, [sl, #2]
90021f7a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90021f7e:	00db      	lsls	r3, r3, #3
90021f80:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90021f84:	fb18 f805 	smulbb	r8, r8, r5
90021f88:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
90021f8c:	fb1e fe05 	smulbb	lr, lr, r5
90021f90:	b2db      	uxtb	r3, r3
90021f92:	fb01 810c 	mla	r1, r1, ip, r8
90021f96:	f89a 8001 	ldrb.w	r8, [sl, #1]
90021f9a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
90021f9e:	fb18 f805 	smulbb	r8, r8, r5
90021fa2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
90021fa6:	b289      	uxth	r1, r1
90021fa8:	fb02 820c 	mla	r2, r2, ip, r8
90021fac:	fb03 e30c 	mla	r3, r3, ip, lr
90021fb0:	f101 0801 	add.w	r8, r1, #1
90021fb4:	b292      	uxth	r2, r2
90021fb6:	b29b      	uxth	r3, r3
90021fb8:	eb08 2111 	add.w	r1, r8, r1, lsr #8
90021fbc:	f102 0801 	add.w	r8, r2, #1
90021fc0:	f103 0e01 	add.w	lr, r3, #1
90021fc4:	eb08 2812 	add.w	r8, r8, r2, lsr #8
90021fc8:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90021fcc:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
90021fd0:	ea4f 1858 	mov.w	r8, r8, lsr #5
90021fd4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90021fd8:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90021fdc:	ea4e 0101 	orr.w	r1, lr, r1
90021fe0:	ea41 0108 	orr.w	r1, r1, r8
90021fe4:	f820 1b02 	strh.w	r1, [r0], #2
90021fe8:	e7b6      	b.n	90021f58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
90021fea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021fec:	881b      	ldrh	r3, [r3, #0]
90021fee:	1b9b      	subs	r3, r3, r6
90021ff0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90021ff4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90021ff8:	1b9b      	subs	r3, r3, r6
90021ffa:	441c      	add	r4, r3
90021ffc:	e7a6      	b.n	90021f4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
90021ffe:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
90022002:	2203      	movs	r2, #3
90022004:	2504      	movs	r5, #4
90022006:	4919      	ldr	r1, [pc, #100]	@ (9002206c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90022008:	4550      	cmp	r0, sl
9002200a:	d228      	bcs.n	9002205e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9002200c:	eb00 0c09 	add.w	ip, r0, r9
90022010:	4560      	cmp	r0, ip
90022012:	4623      	mov	r3, r4
90022014:	d219      	bcs.n	9002204a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
90022016:	f893 e000 	ldrb.w	lr, [r3]
9002201a:	3401      	adds	r4, #1
9002201c:	fb12 5e0e 	smlabb	lr, r2, lr, r5
90022020:	eb07 0b0e 	add.w	fp, r7, lr
90022024:	f817 e00e 	ldrb.w	lr, [r7, lr]
90022028:	f89b 3002 	ldrb.w	r3, [fp, #2]
9002202c:	f89b b001 	ldrb.w	fp, [fp, #1]
90022030:	ea01 2303 	and.w	r3, r1, r3, lsl #8
90022034:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
90022038:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9002203c:	ea43 030b 	orr.w	r3, r3, fp
90022040:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
90022044:	f820 3b02 	strh.w	r3, [r0], #2
90022048:	e7e2      	b.n	90022010 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
9002204a:	f8b8 3000 	ldrh.w	r3, [r8]
9002204e:	1b9b      	subs	r3, r3, r6
90022050:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90022054:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90022058:	1b9b      	subs	r3, r3, r6
9002205a:	441c      	add	r4, r3
9002205c:	e7d4      	b.n	90022008 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9002205e:	4b04      	ldr	r3, [pc, #16]	@ (90022070 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
90022060:	6818      	ldr	r0, [r3, #0]
90022062:	6803      	ldr	r3, [r0, #0]
90022064:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90022066:	4798      	blx	r3
90022068:	e750      	b.n	90021f0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9002206a:	bf00      	nop
9002206c:	fffff800 	.word	0xfffff800
90022070:	24027e9c 	.word	0x24027e9c
90022074:	24027e96 	.word	0x24027e96

90022078 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
90022078:	b430      	push	{r4, r5}
9002207a:	780d      	ldrb	r5, [r1, #0]
9002207c:	f89d 4008 	ldrb.w	r4, [sp, #8]
90022080:	2d01      	cmp	r5, #1
90022082:	d00a      	beq.n	9002209a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
90022084:	d305      	bcc.n	90022092 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
90022086:	2d02      	cmp	r5, #2
90022088:	d10b      	bne.n	900220a2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
9002208a:	9402      	str	r4, [sp, #8]
9002208c:	bc30      	pop	{r4, r5}
9002208e:	f7ff be15 	b.w	90021cbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
90022092:	9402      	str	r4, [sp, #8]
90022094:	bc30      	pop	{r4, r5}
90022096:	f7ff bd2b 	b.w	90021af0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
9002209a:	9402      	str	r4, [sp, #8]
9002209c:	bc30      	pop	{r4, r5}
9002209e:	f7ff bed9 	b.w	90021e54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
900220a2:	bc30      	pop	{r4, r5}
900220a4:	4770      	bx	lr
	...

900220a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
900220a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900220ac:	b087      	sub	sp, #28
900220ae:	4604      	mov	r4, r0
900220b0:	460e      	mov	r6, r1
900220b2:	6810      	ldr	r0, [r2, #0]
900220b4:	6851      	ldr	r1, [r2, #4]
900220b6:	ad02      	add	r5, sp, #8
900220b8:	4617      	mov	r7, r2
900220ba:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
900220be:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 900222f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
900220c2:	c503      	stmia	r5!, {r0, r1}
900220c4:	6818      	ldr	r0, [r3, #0]
900220c6:	ad04      	add	r5, sp, #16
900220c8:	6859      	ldr	r1, [r3, #4]
900220ca:	c503      	stmia	r5!, {r0, r1}
900220cc:	a802      	add	r0, sp, #8
900220ce:	f7f8 fbf7 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900220d2:	4639      	mov	r1, r7
900220d4:	a804      	add	r0, sp, #16
900220d6:	f7f8 fc37 	bl	9001a948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900220da:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900220de:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900220e2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
900220e6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
900220ea:	fb11 2103 	smlabb	r1, r1, r3, r2
900220ee:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
900220f2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
900220f6:	440e      	add	r6, r1
900220f8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900220fc:	440a      	add	r2, r1
900220fe:	f8ad 2010 	strh.w	r2, [sp, #16]
90022102:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90022106:	4413      	add	r3, r2
90022108:	f8ad 3012 	strh.w	r3, [sp, #18]
9002210c:	4b77      	ldr	r3, [pc, #476]	@ (900222ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9002210e:	6818      	ldr	r0, [r3, #0]
90022110:	6803      	ldr	r3, [r0, #0]
90022112:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90022114:	4798      	blx	r3
90022116:	f8b9 b000 	ldrh.w	fp, [r9]
9002211a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9002211e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90022122:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90022126:	fb05 f50b 	mul.w	r5, r5, fp
9002212a:	fb0b 2303 	mla	r3, fp, r3, r2
9002212e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90022132:	ea4f 0348 	mov.w	r3, r8, lsl #1
90022136:	9300      	str	r3, [sp, #0]
90022138:	d069      	beq.n	9002220e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
9002213a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9002213e:	4558      	cmp	r0, fp
90022140:	f080 80cc 	bcs.w	900222dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90022144:	9b00      	ldr	r3, [sp, #0]
90022146:	4631      	mov	r1, r6
90022148:	18c3      	adds	r3, r0, r3
9002214a:	9301      	str	r3, [sp, #4]
9002214c:	9b01      	ldr	r3, [sp, #4]
9002214e:	4298      	cmp	r0, r3
90022150:	d24f      	bcs.n	900221f2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
90022152:	f811 2b01 	ldrb.w	r2, [r1], #1
90022156:	2a00      	cmp	r2, #0
90022158:	d048      	beq.n	900221ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9002215a:	fb0a f202 	mul.w	r2, sl, r2
9002215e:	1c53      	adds	r3, r2, #1
90022160:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022164:	121b      	asrs	r3, r3, #8
90022166:	d041      	beq.n	900221ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90022168:	8802      	ldrh	r2, [r0, #0]
9002216a:	b29e      	uxth	r6, r3
9002216c:	f8b4 c000 	ldrh.w	ip, [r4]
90022170:	43db      	mvns	r3, r3
90022172:	1215      	asrs	r5, r2, #8
90022174:	b2db      	uxtb	r3, r3
90022176:	ea4f 272c 	mov.w	r7, ip, asr #8
9002217a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002217e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
90022182:	fb15 f503 	smulbb	r5, r5, r3
90022186:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9002218a:	00d2      	lsls	r2, r2, #3
9002218c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90022190:	fb07 5706 	mla	r7, r7, r6, r5
90022194:	ea4f 05ec 	mov.w	r5, ip, asr #3
90022198:	b2d2      	uxtb	r2, r2
9002219a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002219e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
900221a2:	fb1e fe03 	smulbb	lr, lr, r3
900221a6:	b2bf      	uxth	r7, r7
900221a8:	fb12 f203 	smulbb	r2, r2, r3
900221ac:	fa5f fc8c 	uxtb.w	ip, ip
900221b0:	fb05 e506 	mla	r5, r5, r6, lr
900221b4:	f107 0e01 	add.w	lr, r7, #1
900221b8:	fb0c 2c06 	mla	ip, ip, r6, r2
900221bc:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
900221c0:	fa1f fc8c 	uxth.w	ip, ip
900221c4:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
900221c8:	b2ad      	uxth	r5, r5
900221ca:	f10c 0701 	add.w	r7, ip, #1
900221ce:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900221d2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900221d6:	ea47 070e 	orr.w	r7, r7, lr
900221da:	f105 0e01 	add.w	lr, r5, #1
900221de:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
900221e2:	096d      	lsrs	r5, r5, #5
900221e4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900221e8:	432f      	orrs	r7, r5
900221ea:	8007      	strh	r7, [r0, #0]
900221ec:	3002      	adds	r0, #2
900221ee:	3402      	adds	r4, #2
900221f0:	e7ac      	b.n	9002214c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
900221f2:	f8b9 3000 	ldrh.w	r3, [r9]
900221f6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
900221fa:	eba3 0308 	sub.w	r3, r3, r8
900221fe:	eba6 0608 	sub.w	r6, r6, r8
90022202:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90022206:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9002220a:	440e      	add	r6, r1
9002220c:	e797      	b.n	9002213e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9002220e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90022212:	42a8      	cmp	r0, r5
90022214:	d262      	bcs.n	900222dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
90022216:	9b00      	ldr	r3, [sp, #0]
90022218:	4631      	mov	r1, r6
9002221a:	eb00 0b03 	add.w	fp, r0, r3
9002221e:	4558      	cmp	r0, fp
90022220:	d24e      	bcs.n	900222c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
90022222:	f811 3b01 	ldrb.w	r3, [r1], #1
90022226:	b12b      	cbz	r3, 90022234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90022228:	2bff      	cmp	r3, #255	@ 0xff
9002222a:	f8b4 e000 	ldrh.w	lr, [r4]
9002222e:	d104      	bne.n	9002223a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
90022230:	f8a0 e000 	strh.w	lr, [r0]
90022234:	3002      	adds	r0, #2
90022236:	3402      	adds	r4, #2
90022238:	e7f1      	b.n	9002221e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
9002223a:	8802      	ldrh	r2, [r0, #0]
9002223c:	b29f      	uxth	r7, r3
9002223e:	43db      	mvns	r3, r3
90022240:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90022244:	1216      	asrs	r6, r2, #8
90022246:	b2db      	uxtb	r3, r3
90022248:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9002224c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90022250:	ea4f 0ae2 	mov.w	sl, r2, asr #3
90022254:	00d2      	lsls	r2, r2, #3
90022256:	fb16 f603 	smulbb	r6, r6, r3
9002225a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9002225e:	b2d2      	uxtb	r2, r2
90022260:	fb0c 6c07 	mla	ip, ip, r7, r6
90022264:	ea4f 06ee 	mov.w	r6, lr, asr #3
90022268:	fb1a fa03 	smulbb	sl, sl, r3
9002226c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90022270:	fa1f fc8c 	uxth.w	ip, ip
90022274:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90022278:	fb12 f303 	smulbb	r3, r2, r3
9002227c:	fa5f fe8e 	uxtb.w	lr, lr
90022280:	fb06 a607 	mla	r6, r6, r7, sl
90022284:	f10c 0201 	add.w	r2, ip, #1
90022288:	fb0e 3307 	mla	r3, lr, r7, r3
9002228c:	b2b6      	uxth	r6, r6
9002228e:	b29b      	uxth	r3, r3
90022290:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
90022294:	f106 0a01 	add.w	sl, r6, #1
90022298:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
9002229c:	f103 0c01 	add.w	ip, r3, #1
900222a0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
900222a4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900222a8:	0976      	lsrs	r6, r6, #5
900222aa:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900222ae:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
900222b2:	ea4c 0c02 	orr.w	ip, ip, r2
900222b6:	ea4c 0c06 	orr.w	ip, ip, r6
900222ba:	f8a0 c000 	strh.w	ip, [r0]
900222be:	e7b9      	b.n	90022234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
900222c0:	f8b9 3000 	ldrh.w	r3, [r9]
900222c4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
900222c8:	eba3 0308 	sub.w	r3, r3, r8
900222cc:	eba6 0608 	sub.w	r6, r6, r8
900222d0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900222d4:	eb04 0446 	add.w	r4, r4, r6, lsl #1
900222d8:	440e      	add	r6, r1
900222da:	e79a      	b.n	90022212 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
900222dc:	4b03      	ldr	r3, [pc, #12]	@ (900222ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
900222de:	6818      	ldr	r0, [r3, #0]
900222e0:	6803      	ldr	r3, [r0, #0]
900222e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900222e4:	4798      	blx	r3
900222e6:	b007      	add	sp, #28
900222e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900222ec:	24027e9c 	.word	0x24027e9c
900222f0:	24027e96 	.word	0x24027e96

900222f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
900222f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900222f8:	b089      	sub	sp, #36	@ 0x24
900222fa:	4682      	mov	sl, r0
900222fc:	460f      	mov	r7, r1
900222fe:	4691      	mov	r9, r2
90022300:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
90022304:	4698      	mov	r8, r3
90022306:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90022308:	2e00      	cmp	r6, #0
9002230a:	d036      	beq.n	9002237a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
9002230c:	4608      	mov	r0, r1
9002230e:	f7fc f863 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90022312:	4605      	mov	r5, r0
90022314:	4638      	mov	r0, r7
90022316:	f7fc f893 	bl	9001e440 <_ZNK8touchgfx6Bitmap9getHeightEv>
9002231a:	f8ad 000e 	strh.w	r0, [sp, #14]
9002231e:	4638      	mov	r0, r7
90022320:	f8ad 9008 	strh.w	r9, [sp, #8]
90022324:	f8ad 500c 	strh.w	r5, [sp, #12]
90022328:	f8ad 800a 	strh.w	r8, [sp, #10]
9002232c:	f7fc f940 	bl	9001e5b0 <_ZNK8touchgfx6Bitmap7getDataEv>
90022330:	4605      	mov	r5, r0
90022332:	4638      	mov	r0, r7
90022334:	f7fc f96c 	bl	9001e610 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90022338:	4681      	mov	r9, r0
9002233a:	4638      	mov	r0, r7
9002233c:	f7fc f9bc 	bl	9001e6b8 <_ZNK8touchgfx6Bitmap9getFormatEv>
90022340:	280b      	cmp	r0, #11
90022342:	d81a      	bhi.n	9002237a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
90022344:	e8df f000 	tbb	[pc, r0]
90022348:	1906aebd 	.word	0x1906aebd
9002234c:	19191919 	.word	0x19191919
90022350:	b5191919 	.word	0xb5191919
90022354:	4bb0      	ldr	r3, [pc, #704]	@ (90022618 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
90022356:	6818      	ldr	r0, [r3, #0]
90022358:	6803      	ldr	r3, [r0, #0]
9002235a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9002235c:	4798      	blx	r3
9002235e:	2eff      	cmp	r6, #255	@ 0xff
90022360:	d121      	bne.n	900223a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
90022362:	0683      	lsls	r3, r0, #26
90022364:	d41f      	bmi.n	900223a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
90022366:	4638      	mov	r0, r7
90022368:	f7fc f8ea 	bl	9001e540 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9002236c:	b940      	cbnz	r0, 90022380 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
9002236e:	4623      	mov	r3, r4
90022370:	aa02      	add	r2, sp, #8
90022372:	4629      	mov	r1, r5
90022374:	4650      	mov	r0, sl
90022376:	f7ff fa2f 	bl	900217d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9002237a:	b009      	add	sp, #36	@ 0x24
9002237c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022380:	f10d 0818 	add.w	r8, sp, #24
90022384:	4639      	mov	r1, r7
90022386:	af04      	add	r7, sp, #16
90022388:	4640      	mov	r0, r8
9002238a:	f7fc f88d 	bl	9001e4a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9002238e:	e898 0003 	ldmia.w	r8, {r0, r1}
90022392:	e887 0003 	stmia.w	r7, {r0, r1}
90022396:	4638      	mov	r0, r7
90022398:	4621      	mov	r1, r4
9002239a:	f7f2 fca3 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
9002239e:	4638      	mov	r0, r7
900223a0:	f7f2 fce3 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
900223a4:	b130      	cbz	r0, 900223b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
900223a6:	4633      	mov	r3, r6
900223a8:	4622      	mov	r2, r4
900223aa:	a902      	add	r1, sp, #8
900223ac:	4628      	mov	r0, r5
900223ae:	f7ff f92d 	bl	9002160c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900223b2:	e7e2      	b.n	9002237a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
900223b4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900223b8:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900223bc:	4293      	cmp	r3, r2
900223be:	dd12      	ble.n	900223e6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
900223c0:	1a9b      	subs	r3, r3, r2
900223c2:	f9b4 0000 	ldrsh.w	r0, [r4]
900223c6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900223ca:	f8ad 0018 	strh.w	r0, [sp, #24]
900223ce:	4628      	mov	r0, r5
900223d0:	f8ad 201a 	strh.w	r2, [sp, #26]
900223d4:	4642      	mov	r2, r8
900223d6:	f8ad 101c 	strh.w	r1, [sp, #28]
900223da:	a902      	add	r1, sp, #8
900223dc:	f8ad 301e 	strh.w	r3, [sp, #30]
900223e0:	4633      	mov	r3, r6
900223e2:	f7ff f913 	bl	9002160c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900223e6:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
900223ea:	f9b4 2000 	ldrsh.w	r2, [r4]
900223ee:	4293      	cmp	r3, r2
900223f0:	dd12      	ble.n	90022418 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
900223f2:	1a9b      	subs	r3, r3, r2
900223f4:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
900223f8:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
900223fc:	f8ad 2018 	strh.w	r2, [sp, #24]
90022400:	4642      	mov	r2, r8
90022402:	f8ad 001a 	strh.w	r0, [sp, #26]
90022406:	4628      	mov	r0, r5
90022408:	f8ad 301c 	strh.w	r3, [sp, #28]
9002240c:	23ff      	movs	r3, #255	@ 0xff
9002240e:	f8ad 101e 	strh.w	r1, [sp, #30]
90022412:	a902      	add	r1, sp, #8
90022414:	f7ff f8fa 	bl	9002160c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90022418:	463b      	mov	r3, r7
9002241a:	aa02      	add	r2, sp, #8
9002241c:	4629      	mov	r1, r5
9002241e:	4650      	mov	r0, sl
90022420:	f7ff f9da 	bl	900217d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90022424:	88a2      	ldrh	r2, [r4, #4]
90022426:	8823      	ldrh	r3, [r4, #0]
90022428:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9002242c:	4413      	add	r3, r2
9002242e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90022432:	440a      	add	r2, r1
90022434:	b29b      	uxth	r3, r3
90022436:	b292      	uxth	r2, r2
90022438:	b218      	sxth	r0, r3
9002243a:	b211      	sxth	r1, r2
9002243c:	4288      	cmp	r0, r1
9002243e:	dd12      	ble.n	90022466 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
90022440:	1a9b      	subs	r3, r3, r2
90022442:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90022446:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9002244a:	4642      	mov	r2, r8
9002244c:	f8ad 1018 	strh.w	r1, [sp, #24]
90022450:	a902      	add	r1, sp, #8
90022452:	f8ad 301c 	strh.w	r3, [sp, #28]
90022456:	23ff      	movs	r3, #255	@ 0xff
90022458:	f8ad 001e 	strh.w	r0, [sp, #30]
9002245c:	4628      	mov	r0, r5
9002245e:	f8ad 601a 	strh.w	r6, [sp, #26]
90022462:	f7ff f8d3 	bl	9002160c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90022466:	88e2      	ldrh	r2, [r4, #6]
90022468:	8863      	ldrh	r3, [r4, #2]
9002246a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9002246e:	4413      	add	r3, r2
90022470:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90022474:	440a      	add	r2, r1
90022476:	b29b      	uxth	r3, r3
90022478:	b292      	uxth	r2, r2
9002247a:	b218      	sxth	r0, r3
9002247c:	b211      	sxth	r1, r2
9002247e:	4288      	cmp	r0, r1
90022480:	f77f af7b 	ble.w	9002237a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
90022484:	1a9b      	subs	r3, r3, r2
90022486:	f9b4 6000 	ldrsh.w	r6, [r4]
9002248a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9002248e:	4642      	mov	r2, r8
90022490:	f8ad 301e 	strh.w	r3, [sp, #30]
90022494:	23ff      	movs	r3, #255	@ 0xff
90022496:	f8ad 6018 	strh.w	r6, [sp, #24]
9002249a:	f8ad 101a 	strh.w	r1, [sp, #26]
9002249e:	f8ad 001c 	strh.w	r0, [sp, #28]
900224a2:	e782      	b.n	900223aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
900224a4:	4633      	mov	r3, r6
900224a6:	4622      	mov	r2, r4
900224a8:	a902      	add	r1, sp, #8
900224aa:	4628      	mov	r0, r5
900224ac:	f7ff fa04 	bl	900218b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
900224b0:	e763      	b.n	9002237a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
900224b2:	9600      	str	r6, [sp, #0]
900224b4:	4623      	mov	r3, r4
900224b6:	aa02      	add	r2, sp, #8
900224b8:	4649      	mov	r1, r9
900224ba:	4628      	mov	r0, r5
900224bc:	f7ff fddc 	bl	90022078 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
900224c0:	e75b      	b.n	9002237a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
900224c2:	4638      	mov	r0, r7
900224c4:	f7fc f83c 	bl	9001e540 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
900224c8:	b950      	cbnz	r0, 900224e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
900224ca:	f8da 3000 	ldr.w	r3, [sl]
900224ce:	aa02      	add	r2, sp, #8
900224d0:	4629      	mov	r1, r5
900224d2:	e9cd 6000 	strd	r6, r0, [sp]
900224d6:	4650      	mov	r0, sl
900224d8:	68de      	ldr	r6, [r3, #12]
900224da:	4623      	mov	r3, r4
900224dc:	47b0      	blx	r6
900224de:	e74c      	b.n	9002237a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
900224e0:	f10d 0818 	add.w	r8, sp, #24
900224e4:	4639      	mov	r1, r7
900224e6:	af04      	add	r7, sp, #16
900224e8:	4640      	mov	r0, r8
900224ea:	f7fb ffdd 	bl	9001e4a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900224ee:	e898 0003 	ldmia.w	r8, {r0, r1}
900224f2:	e887 0003 	stmia.w	r7, {r0, r1}
900224f6:	4638      	mov	r0, r7
900224f8:	4621      	mov	r1, r4
900224fa:	f7f2 fbf3 	bl	90014ce4 <_ZN8touchgfx4RectaNERKS0_>
900224fe:	4638      	mov	r0, r7
90022500:	f7f2 fc33 	bl	90014d6a <_ZNK8touchgfx4Rect7isEmptyEv>
90022504:	b138      	cbz	r0, 90022516 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
90022506:	4623      	mov	r3, r4
90022508:	9600      	str	r6, [sp, #0]
9002250a:	aa02      	add	r2, sp, #8
9002250c:	4649      	mov	r1, r9
9002250e:	4628      	mov	r0, r5
90022510:	f7ff fdca 	bl	900220a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90022514:	e731      	b.n	9002237a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
90022516:	f8da 3000 	ldr.w	r3, [sl]
9002251a:	aa02      	add	r2, sp, #8
9002251c:	4629      	mov	r1, r5
9002251e:	e9cd 6000 	strd	r6, r0, [sp]
90022522:	4650      	mov	r0, sl
90022524:	f8d3 b00c 	ldr.w	fp, [r3, #12]
90022528:	463b      	mov	r3, r7
9002252a:	47d8      	blx	fp
9002252c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90022530:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90022534:	4293      	cmp	r3, r2
90022536:	dd13      	ble.n	90022560 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
90022538:	f9b4 0000 	ldrsh.w	r0, [r4]
9002253c:	1a9b      	subs	r3, r3, r2
9002253e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90022542:	f8ad 0018 	strh.w	r0, [sp, #24]
90022546:	4628      	mov	r0, r5
90022548:	f8ad 201a 	strh.w	r2, [sp, #26]
9002254c:	aa02      	add	r2, sp, #8
9002254e:	f8ad 101c 	strh.w	r1, [sp, #28]
90022552:	4649      	mov	r1, r9
90022554:	f8ad 301e 	strh.w	r3, [sp, #30]
90022558:	4643      	mov	r3, r8
9002255a:	9600      	str	r6, [sp, #0]
9002255c:	f7ff fda4 	bl	900220a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90022560:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90022564:	f9b4 2000 	ldrsh.w	r2, [r4]
90022568:	4293      	cmp	r3, r2
9002256a:	dd13      	ble.n	90022594 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
9002256c:	1a9b      	subs	r3, r3, r2
9002256e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90022572:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90022576:	f8ad 2018 	strh.w	r2, [sp, #24]
9002257a:	aa02      	add	r2, sp, #8
9002257c:	f8ad 001a 	strh.w	r0, [sp, #26]
90022580:	4628      	mov	r0, r5
90022582:	f8ad 301c 	strh.w	r3, [sp, #28]
90022586:	4643      	mov	r3, r8
90022588:	f8ad 101e 	strh.w	r1, [sp, #30]
9002258c:	4649      	mov	r1, r9
9002258e:	9600      	str	r6, [sp, #0]
90022590:	f7ff fd8a 	bl	900220a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90022594:	88a2      	ldrh	r2, [r4, #4]
90022596:	8823      	ldrh	r3, [r4, #0]
90022598:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9002259c:	4413      	add	r3, r2
9002259e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
900225a2:	440a      	add	r2, r1
900225a4:	b29b      	uxth	r3, r3
900225a6:	b292      	uxth	r2, r2
900225a8:	b218      	sxth	r0, r3
900225aa:	b211      	sxth	r1, r2
900225ac:	4288      	cmp	r0, r1
900225ae:	dd13      	ble.n	900225d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
900225b0:	1a9b      	subs	r3, r3, r2
900225b2:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
900225b6:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
900225ba:	aa02      	add	r2, sp, #8
900225bc:	f8ad 1018 	strh.w	r1, [sp, #24]
900225c0:	4649      	mov	r1, r9
900225c2:	f8ad 301c 	strh.w	r3, [sp, #28]
900225c6:	4643      	mov	r3, r8
900225c8:	f8ad 001e 	strh.w	r0, [sp, #30]
900225cc:	4628      	mov	r0, r5
900225ce:	9600      	str	r6, [sp, #0]
900225d0:	f8ad 701a 	strh.w	r7, [sp, #26]
900225d4:	f7ff fd68 	bl	900220a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
900225d8:	88e2      	ldrh	r2, [r4, #6]
900225da:	8863      	ldrh	r3, [r4, #2]
900225dc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
900225e0:	4413      	add	r3, r2
900225e2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
900225e6:	440a      	add	r2, r1
900225e8:	b29b      	uxth	r3, r3
900225ea:	b292      	uxth	r2, r2
900225ec:	b218      	sxth	r0, r3
900225ee:	b211      	sxth	r1, r2
900225f0:	4288      	cmp	r0, r1
900225f2:	f77f aec2 	ble.w	9002237a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
900225f6:	f9b4 7000 	ldrsh.w	r7, [r4]
900225fa:	1a9b      	subs	r3, r3, r2
900225fc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90022600:	f8ad 301e 	strh.w	r3, [sp, #30]
90022604:	4643      	mov	r3, r8
90022606:	f8ad 7018 	strh.w	r7, [sp, #24]
9002260a:	f8ad 101a 	strh.w	r1, [sp, #26]
9002260e:	f8ad 001c 	strh.w	r0, [sp, #28]
90022612:	9600      	str	r6, [sp, #0]
90022614:	e779      	b.n	9002250a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
90022616:	bf00      	nop
90022618:	24027e9c 	.word	0x24027e9c

9002261c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
9002261c:	b180      	cbz	r0, 90022640 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9002261e:	2903      	cmp	r1, #3
90022620:	d81c      	bhi.n	9002265c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90022622:	e8df f001 	tbb	[pc, r1]
90022626:	1d02      	.short	0x1d02
90022628:	1f08      	.short	0x1f08
9002262a:	4b10      	ldr	r3, [pc, #64]	@ (9002266c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9002262c:	8818      	ldrh	r0, [r3, #0]
9002262e:	f3c0 000e 	ubfx	r0, r0, #0, #15
90022632:	4240      	negs	r0, r0
90022634:	4770      	bx	lr
90022636:	4b0d      	ldr	r3, [pc, #52]	@ (9002266c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90022638:	8818      	ldrh	r0, [r3, #0]
9002263a:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002263e:	4770      	bx	lr
90022640:	2903      	cmp	r1, #3
90022642:	d80b      	bhi.n	9002265c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90022644:	a301      	add	r3, pc, #4	@ (adr r3, 9002264c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
90022646:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9002264a:	bf00      	nop
9002264c:	90022661 	.word	0x90022661
90022650:	90022637 	.word	0x90022637
90022654:	90022665 	.word	0x90022665
90022658:	9002262b 	.word	0x9002262b
9002265c:	2000      	movs	r0, #0
9002265e:	4770      	bx	lr
90022660:	2001      	movs	r0, #1
90022662:	4770      	bx	lr
90022664:	f04f 30ff 	mov.w	r0, #4294967295
90022668:	4770      	bx	lr
9002266a:	bf00      	nop
9002266c:	24027e96 	.word	0x24027e96

90022670 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
90022670:	b180      	cbz	r0, 90022694 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
90022672:	2903      	cmp	r1, #3
90022674:	d81c      	bhi.n	900226b0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90022676:	e8df f001 	tbb	[pc, r1]
9002267a:	021d      	.short	0x021d
9002267c:	071f      	.short	0x071f
9002267e:	4b10      	ldr	r3, [pc, #64]	@ (900226c0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90022680:	8818      	ldrh	r0, [r3, #0]
90022682:	f3c0 000e 	ubfx	r0, r0, #0, #15
90022686:	4770      	bx	lr
90022688:	4b0d      	ldr	r3, [pc, #52]	@ (900226c0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9002268a:	8818      	ldrh	r0, [r3, #0]
9002268c:	f3c0 000e 	ubfx	r0, r0, #0, #15
90022690:	4240      	negs	r0, r0
90022692:	4770      	bx	lr
90022694:	2903      	cmp	r1, #3
90022696:	d80b      	bhi.n	900226b0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90022698:	a301      	add	r3, pc, #4	@ (adr r3, 900226a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
9002269a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9002269e:	bf00      	nop
900226a0:	9002267f 	.word	0x9002267f
900226a4:	900226b9 	.word	0x900226b9
900226a8:	90022689 	.word	0x90022689
900226ac:	900226b5 	.word	0x900226b5
900226b0:	2000      	movs	r0, #0
900226b2:	4770      	bx	lr
900226b4:	2001      	movs	r0, #1
900226b6:	4770      	bx	lr
900226b8:	f04f 30ff 	mov.w	r0, #4294967295
900226bc:	4770      	bx	lr
900226be:	bf00      	nop
900226c0:	24027e96 	.word	0x24027e96

900226c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
900226c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900226c8:	b099      	sub	sp, #100	@ 0x64
900226ca:	910b      	str	r1, [sp, #44]	@ 0x2c
900226cc:	a914      	add	r1, sp, #80	@ 0x50
900226ce:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
900226d2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
900226d6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
900226da:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
900226de:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
900226e2:	e881 000c 	stmia.w	r1, {r2, r3}
900226e6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
900226ea:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
900226ee:	9309      	str	r3, [sp, #36]	@ 0x24
900226f0:	f891 900d 	ldrb.w	r9, [r1, #13]
900226f4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
900226f8:	ea4f 1749 	mov.w	r7, r9, lsl #5
900226fc:	9310      	str	r3, [sp, #64]	@ 0x40
900226fe:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
90022702:	930c      	str	r3, [sp, #48]	@ 0x30
90022704:	f407 7380 	and.w	r3, r7, #256	@ 0x100
90022708:	798f      	ldrb	r7, [r1, #6]
9002270a:	431f      	orrs	r7, r3
9002270c:	f000 8195 	beq.w	90022a3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022710:	ea4f 1909 	mov.w	r9, r9, lsl #4
90022714:	f409 7380 	and.w	r3, r9, #256	@ 0x100
90022718:	f891 9007 	ldrb.w	r9, [r1, #7]
9002271c:	ea59 0903 	orrs.w	r9, r9, r3
90022720:	f000 818b 	beq.w	90022a3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022724:	f991 3009 	ldrsb.w	r3, [r1, #9]
90022728:	b29b      	uxth	r3, r3
9002272a:	2d00      	cmp	r5, #0
9002272c:	f000 812e 	beq.w	9002298c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
90022730:	1aed      	subs	r5, r5, r3
90022732:	b2ad      	uxth	r5, r5
90022734:	042b      	lsls	r3, r5, #16
90022736:	d502      	bpl.n	9002273e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90022738:	1b64      	subs	r4, r4, r5
9002273a:	2500      	movs	r5, #0
9002273c:	b224      	sxth	r4, r4
9002273e:	f9b2 1000 	ldrsh.w	r1, [r2]
90022742:	a814      	add	r0, sp, #80	@ 0x50
90022744:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
90022748:	428c      	cmp	r4, r1
9002274a:	b28b      	uxth	r3, r1
9002274c:	bfbf      	itttt	lt
9002274e:	18ed      	addlt	r5, r5, r3
90022750:	1b2c      	sublt	r4, r5, r4
90022752:	b2a5      	uxthlt	r5, r4
90022754:	460c      	movlt	r4, r1
90022756:	8891      	ldrh	r1, [r2, #4]
90022758:	440b      	add	r3, r1
9002275a:	4621      	mov	r1, r4
9002275c:	b21b      	sxth	r3, r3
9002275e:	930f      	str	r3, [sp, #60]	@ 0x3c
90022760:	88d3      	ldrh	r3, [r2, #6]
90022762:	8852      	ldrh	r2, [r2, #2]
90022764:	4413      	add	r3, r2
90022766:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90022768:	b21b      	sxth	r3, r3
9002276a:	930d      	str	r3, [sp, #52]	@ 0x34
9002276c:	4bbd      	ldr	r3, [pc, #756]	@ (90022a64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
9002276e:	f893 b000 	ldrb.w	fp, [r3]
90022772:	f10b 3cff 	add.w	ip, fp, #4294967295
90022776:	f1dc 0300 	rsbs	r3, ip, #0
9002277a:	eb43 030c 	adc.w	r3, r3, ip
9002277e:	930e      	str	r3, [sp, #56]	@ 0x38
90022780:	4653      	mov	r3, sl
90022782:	f7f7 ff17 	bl	9001a5b4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
90022786:	4621      	mov	r1, r4
90022788:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
9002278c:	4653      	mov	r3, sl
9002278e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90022790:	a814      	add	r0, sp, #80	@ 0x50
90022792:	f7f7 ff2c 	bl	9001a5ee <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
90022796:	a918      	add	r1, sp, #96	@ 0x60
90022798:	f821 0d02 	strh.w	r0, [r1, #-2]!
9002279c:	a817      	add	r0, sp, #92	@ 0x5c
9002279e:	f7f8 f84d 	bl	9001a83c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
900227a2:	f1ba 0f00 	cmp.w	sl, #0
900227a6:	f040 80f4 	bne.w	90022992 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
900227aa:	f1bb 0f01 	cmp.w	fp, #1
900227ae:	f040 80f8 	bne.w	900229a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
900227b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900227b4:	2b00      	cmp	r3, #0
900227b6:	f040 8145 	bne.w	90022a44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
900227ba:	b2ba      	uxth	r2, r7
900227bc:	b905      	cbnz	r5, 900227c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
900227be:	b16e      	cbz	r6, 900227dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
900227c0:	fb06 5302 	mla	r3, r6, r2, r5
900227c4:	9828      	ldr	r0, [sp, #160]	@ 0xa0
900227c6:	4631      	mov	r1, r6
900227c8:	fb08 f303 	mul.w	r3, r8, r3
900227cc:	f003 0607 	and.w	r6, r3, #7
900227d0:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
900227d4:	9328      	str	r3, [sp, #160]	@ 0xa0
900227d6:	eba9 0301 	sub.w	r3, r9, r1
900227da:	930a      	str	r3, [sp, #40]	@ 0x28
900227dc:	4651      	mov	r1, sl
900227de:	980e      	ldr	r0, [sp, #56]	@ 0x38
900227e0:	f7ff ff1c 	bl	9002261c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
900227e4:	4681      	mov	r9, r0
900227e6:	980e      	ldr	r0, [sp, #56]	@ 0x38
900227e8:	f7ff ff42 	bl	90022670 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
900227ec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900227ee:	9909      	ldr	r1, [sp, #36]	@ 0x24
900227f0:	4683      	mov	fp, r0
900227f2:	eba3 0a01 	sub.w	sl, r3, r1
900227f6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900227f8:	459a      	cmp	sl, r3
900227fa:	bfa8      	it	ge
900227fc:	469a      	movge	sl, r3
900227fe:	f1ba 0f00 	cmp.w	sl, #0
90022802:	f340 811a 	ble.w	90022a3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022806:	1b64      	subs	r4, r4, r5
90022808:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002280a:	1b1c      	subs	r4, r3, r4
9002280c:	42bc      	cmp	r4, r7
9002280e:	bfd4      	ite	le
90022810:	ebc5 0504 	rsble	r5, r5, r4
90022814:	ebc5 0507 	rsbgt	r5, r5, r7
90022818:	2d00      	cmp	r5, #0
9002281a:	f340 810e 	ble.w	90022a3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9002281e:	1b52      	subs	r2, r2, r5
90022820:	fb08 f302 	mul.w	r3, r8, r2
90022824:	930f      	str	r3, [sp, #60]	@ 0x3c
90022826:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022828:	2b00      	cmp	r3, #0
9002282a:	f040 8116 	bne.w	90022a5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
9002282e:	4b8e      	ldr	r3, [pc, #568]	@ (90022a68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
90022830:	6818      	ldr	r0, [r3, #0]
90022832:	6803      	ldr	r3, [r0, #0]
90022834:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90022836:	4798      	blx	r3
90022838:	2301      	movs	r3, #1
9002283a:	4a8c      	ldr	r2, [pc, #560]	@ (90022a6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
9002283c:	fa03 f308 	lsl.w	r3, r3, r8
90022840:	8811      	ldrh	r1, [r2, #0]
90022842:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
90022846:	3b01      	subs	r3, #1
90022848:	b2db      	uxtb	r3, r3
9002284a:	930e      	str	r3, [sp, #56]	@ 0x38
9002284c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
90022850:	fb01 2303 	mla	r3, r1, r3, r2
90022854:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90022858:	930a      	str	r3, [sp, #40]	@ 0x28
9002285a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002285c:	f3c3 4307 	ubfx	r3, r3, #16, #8
90022860:	9313      	str	r3, [sp, #76]	@ 0x4c
90022862:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022864:	0a19      	lsrs	r1, r3, #8
90022866:	b2cb      	uxtb	r3, r1
90022868:	9312      	str	r3, [sp, #72]	@ 0x48
9002286a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002286c:	b2db      	uxtb	r3, r3
9002286e:	9311      	str	r3, [sp, #68]	@ 0x44
90022870:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022872:	095a      	lsrs	r2, r3, #5
90022874:	4b7e      	ldr	r3, [pc, #504]	@ (90022a70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
90022876:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002287a:	400b      	ands	r3, r1
9002287c:	4313      	orrs	r3, r2
9002287e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
90022880:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90022884:	4313      	orrs	r3, r2
90022886:	b29b      	uxth	r3, r3
90022888:	9310      	str	r3, [sp, #64]	@ 0x40
9002288a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002288c:	781a      	ldrb	r2, [r3, #0]
9002288e:	ea4f 0349 	mov.w	r3, r9, lsl #1
90022892:	fb05 b919 	mls	r9, r5, r9, fp
90022896:	4132      	asrs	r2, r6
90022898:	fb03 fb05 	mul.w	fp, r3, r5
9002289c:	930d      	str	r3, [sp, #52]	@ 0x34
9002289e:	b2d2      	uxtb	r2, r2
900228a0:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
900228a4:	f11a 3aff 	adds.w	sl, sl, #4294967295
900228a8:	f0c0 80f5 	bcc.w	90022a96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
900228ac:	46ae      	mov	lr, r5
900228ae:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
900228b2:	f11e 3eff 	adds.w	lr, lr, #4294967295
900228b6:	f0c0 80dd 	bcc.w	90022a74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
900228ba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900228bc:	4013      	ands	r3, r2
900228be:	d055      	beq.n	9002296c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
900228c0:	20ff      	movs	r0, #255	@ 0xff
900228c2:	990e      	ldr	r1, [sp, #56]	@ 0x38
900228c4:	fb90 f1f1 	sdiv	r1, r0, r1
900228c8:	434b      	muls	r3, r1
900228ca:	2bfe      	cmp	r3, #254	@ 0xfe
900228cc:	dd03      	ble.n	900228d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
900228ce:	990c      	ldr	r1, [sp, #48]	@ 0x30
900228d0:	4281      	cmp	r1, r0
900228d2:	f000 80c4 	beq.w	90022a5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
900228d6:	990c      	ldr	r1, [sp, #48]	@ 0x30
900228d8:	f8bc 4000 	ldrh.w	r4, [ip]
900228dc:	fb11 f303 	smulbb	r3, r1, r3
900228e0:	1220      	asrs	r0, r4, #8
900228e2:	b29b      	uxth	r3, r3
900228e4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900228e8:	1c59      	adds	r1, r3, #1
900228ea:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
900228ee:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900228f2:	10e1      	asrs	r1, r4, #3
900228f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900228f8:	00e4      	lsls	r4, r4, #3
900228fa:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900228fe:	b29f      	uxth	r7, r3
90022900:	43db      	mvns	r3, r3
90022902:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
90022906:	b2db      	uxtb	r3, r3
90022908:	b2e4      	uxtb	r4, r4
9002290a:	9309      	str	r3, [sp, #36]	@ 0x24
9002290c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9002290e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90022912:	fb13 f907 	smulbb	r9, r3, r7
90022916:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022918:	fb00 9003 	mla	r0, r0, r3, r9
9002291c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9002291e:	fb13 f907 	smulbb	r9, r3, r7
90022922:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022924:	b280      	uxth	r0, r0
90022926:	fb01 9103 	mla	r1, r1, r3, r9
9002292a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002292c:	fb13 f707 	smulbb	r7, r3, r7
90022930:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022932:	b289      	uxth	r1, r1
90022934:	fb04 7403 	mla	r4, r4, r3, r7
90022938:	1c43      	adds	r3, r0, #1
9002293a:	b2a4      	uxth	r4, r4
9002293c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90022940:	f104 0901 	add.w	r9, r4, #1
90022944:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90022948:	eb09 2914 	add.w	r9, r9, r4, lsr #8
9002294c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
90022950:	ea49 0000 	orr.w	r0, r9, r0
90022954:	f101 0901 	add.w	r9, r1, #1
90022958:	eb09 2911 	add.w	r9, r9, r1, lsr #8
9002295c:	ea4f 1959 	mov.w	r9, r9, lsr #5
90022960:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90022964:	ea40 0009 	orr.w	r0, r0, r9
90022968:	f8ac 0000 	strh.w	r0, [ip]
9002296c:	4446      	add	r6, r8
9002296e:	b2b6      	uxth	r6, r6
90022970:	2e07      	cmp	r6, #7
90022972:	bf89      	itett	hi
90022974:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
90022976:	fa42 f208 	asrls.w	r2, r2, r8
9002297a:	2600      	movhi	r6, #0
9002297c:	785a      	ldrbhi	r2, [r3, #1]
9002297e:	bf8a      	itet	hi
90022980:	3301      	addhi	r3, #1
90022982:	b2d2      	uxtbls	r2, r2
90022984:	9328      	strhi	r3, [sp, #160]	@ 0xa0
90022986:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90022988:	449c      	add	ip, r3
9002298a:	e792      	b.n	900228b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
9002298c:	441c      	add	r4, r3
9002298e:	b224      	sxth	r4, r4
90022990:	e6d5      	b.n	9002273e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90022992:	f1ba 0f01 	cmp.w	sl, #1
90022996:	f47f af0c 	bne.w	900227b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9002299a:	f1bb 0f01 	cmp.w	fp, #1
9002299e:	f47f af08 	bne.w	900227b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900229a2:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 90022a68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
900229a6:	f8db 0000 	ldr.w	r0, [fp]
900229aa:	6803      	ldr	r3, [r0, #0]
900229ac:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900229ae:	4798      	blx	r3
900229b0:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
900229b4:	465a      	mov	r2, fp
900229b6:	d006      	beq.n	900229c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
900229b8:	f1b8 0f04 	cmp.w	r8, #4
900229bc:	d140      	bne.n	90022a40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
900229be:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900229c0:	3300      	adds	r3, #0
900229c2:	bf18      	it	ne
900229c4:	2301      	movne	r3, #1
900229c6:	0580      	lsls	r0, r0, #22
900229c8:	d56e      	bpl.n	90022aa8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
900229ca:	f1b8 0f08 	cmp.w	r8, #8
900229ce:	d16b      	bne.n	90022aa8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
900229d0:	2b00      	cmp	r3, #0
900229d2:	bf0c      	ite	eq
900229d4:	f44f 7100 	moveq.w	r1, #512	@ 0x200
900229d8:	f44f 7180 	movne.w	r1, #256	@ 0x100
900229dc:	2d00      	cmp	r5, #0
900229de:	f47f aee8 	bne.w	900227b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900229e2:	2e00      	cmp	r6, #0
900229e4:	f47f aee5 	bne.w	900227b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900229e8:	19e3      	adds	r3, r4, r7
900229ea:	980f      	ldr	r0, [sp, #60]	@ 0x3c
900229ec:	4283      	cmp	r3, r0
900229ee:	f73f aee0 	bgt.w	900227b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900229f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900229f4:	980d      	ldr	r0, [sp, #52]	@ 0x34
900229f6:	444b      	add	r3, r9
900229f8:	4283      	cmp	r3, r0
900229fa:	f73f aeda 	bgt.w	900227b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
900229fe:	b2bf      	uxth	r7, r7
90022a00:	f1b8 0f08 	cmp.w	r8, #8
90022a04:	6810      	ldr	r0, [r2, #0]
90022a06:	f04f 0500 	mov.w	r5, #0
90022a0a:	bf18      	it	ne
90022a0c:	3701      	addne	r7, #1
90022a0e:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
90022a12:	6804      	ldr	r4, [r0, #0]
90022a14:	bf18      	it	ne
90022a16:	f027 0701 	bicne.w	r7, r7, #1
90022a1a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90022a1e:	e9cd 1505 	strd	r1, r5, [sp, #20]
90022a22:	990c      	ldr	r1, [sp, #48]	@ 0x30
90022a24:	bf18      	it	ne
90022a26:	b2bf      	uxthne	r7, r7
90022a28:	9104      	str	r1, [sp, #16]
90022a2a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90022a2c:	e9cd 7900 	strd	r7, r9, [sp]
90022a30:	e9cd 7102 	strd	r7, r1, [sp, #8]
90022a34:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90022a36:	6d64      	ldr	r4, [r4, #84]	@ 0x54
90022a38:	47a0      	blx	r4
90022a3a:	b019      	add	sp, #100	@ 0x64
90022a3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022a40:	2300      	movs	r3, #0
90022a42:	e7c0      	b.n	900229c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
90022a44:	2208      	movs	r2, #8
90022a46:	fb92 f3f8 	sdiv	r3, r2, r8
90022a4a:	1e5a      	subs	r2, r3, #1
90022a4c:	443a      	add	r2, r7
90022a4e:	fb92 f2f3 	sdiv	r2, r2, r3
90022a52:	fb12 f203 	smulbb	r2, r2, r3
90022a56:	b292      	uxth	r2, r2
90022a58:	e6b0      	b.n	900227bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
90022a5a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90022a5c:	e6ec      	b.n	90022838 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
90022a5e:	9810      	ldr	r0, [sp, #64]	@ 0x40
90022a60:	e782      	b.n	90022968 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
90022a62:	bf00      	nop
90022a64:	24027e94 	.word	0x24027e94
90022a68:	24027e9c 	.word	0x24027e9c
90022a6c:	24027e96 	.word	0x24027e96
90022a70:	00fff800 	.word	0x00fff800
90022a74:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90022a76:	b153      	cbz	r3, 90022a8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
90022a78:	441e      	add	r6, r3
90022a7a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022a7c:	b2b6      	uxth	r6, r6
90022a7e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
90022a82:	f006 0607 	and.w	r6, r6, #7
90022a86:	781a      	ldrb	r2, [r3, #0]
90022a88:	9328      	str	r3, [sp, #160]	@ 0xa0
90022a8a:	4132      	asrs	r2, r6
90022a8c:	b2d2      	uxtb	r2, r2
90022a8e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022a90:	445b      	add	r3, fp
90022a92:	930a      	str	r3, [sp, #40]	@ 0x28
90022a94:	e706      	b.n	900228a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
90022a96:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022a98:	2b00      	cmp	r3, #0
90022a9a:	d1ce      	bne.n	90022a3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022a9c:	4b05      	ldr	r3, [pc, #20]	@ (90022ab4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
90022a9e:	6818      	ldr	r0, [r3, #0]
90022aa0:	6803      	ldr	r3, [r0, #0]
90022aa2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90022aa4:	4798      	blx	r3
90022aa6:	e7c8      	b.n	90022a3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022aa8:	2b00      	cmp	r3, #0
90022aaa:	f43f ae82 	beq.w	900227b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90022aae:	f44f 7180 	mov.w	r1, #256	@ 0x100
90022ab2:	e793      	b.n	900229dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
90022ab4:	24027e9c 	.word	0x24027e9c

90022ab8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
90022ab8:	b538      	push	{r3, r4, r5, lr}
90022aba:	4c15      	ldr	r4, [pc, #84]	@ (90022b10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
90022abc:	4605      	mov	r5, r0
90022abe:	7823      	ldrb	r3, [r4, #0]
90022ac0:	f3bf 8f5b 	dmb	ish
90022ac4:	07da      	lsls	r2, r3, #31
90022ac6:	d40b      	bmi.n	90022ae0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90022ac8:	4620      	mov	r0, r4
90022aca:	f008 fd1e 	bl	9002b50a <__cxa_guard_acquire>
90022ace:	b138      	cbz	r0, 90022ae0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90022ad0:	4620      	mov	r0, r4
90022ad2:	f008 fd26 	bl	9002b522 <__cxa_guard_release>
90022ad6:	4a0f      	ldr	r2, [pc, #60]	@ (90022b14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90022ad8:	490f      	ldr	r1, [pc, #60]	@ (90022b18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
90022ada:	4810      	ldr	r0, [pc, #64]	@ (90022b1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90022adc:	f008 fd0e 	bl	9002b4fc <__aeabi_atexit>
90022ae0:	4c0f      	ldr	r4, [pc, #60]	@ (90022b20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
90022ae2:	7823      	ldrb	r3, [r4, #0]
90022ae4:	f3bf 8f5b 	dmb	ish
90022ae8:	07db      	lsls	r3, r3, #31
90022aea:	d40b      	bmi.n	90022b04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90022aec:	4620      	mov	r0, r4
90022aee:	f008 fd0c 	bl	9002b50a <__cxa_guard_acquire>
90022af2:	b138      	cbz	r0, 90022b04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90022af4:	4620      	mov	r0, r4
90022af6:	f008 fd14 	bl	9002b522 <__cxa_guard_release>
90022afa:	4a06      	ldr	r2, [pc, #24]	@ (90022b14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90022afc:	4909      	ldr	r1, [pc, #36]	@ (90022b24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
90022afe:	480a      	ldr	r0, [pc, #40]	@ (90022b28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90022b00:	f008 fcfc 	bl	9002b4fc <__aeabi_atexit>
90022b04:	4b05      	ldr	r3, [pc, #20]	@ (90022b1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90022b06:	612b      	str	r3, [r5, #16]
90022b08:	4b07      	ldr	r3, [pc, #28]	@ (90022b28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90022b0a:	616b      	str	r3, [r5, #20]
90022b0c:	bd38      	pop	{r3, r4, r5, pc}
90022b0e:	bf00      	nop
90022b10:	24027f70 	.word	0x24027f70
90022b14:	24000000 	.word	0x24000000
90022b18:	90020cc5 	.word	0x90020cc5
90022b1c:	240000ac 	.word	0x240000ac
90022b20:	24027f74 	.word	0x24027f74
90022b24:	90020cc3 	.word	0x90020cc3
90022b28:	240000b0 	.word	0x240000b0

90022b2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
90022b2c:	b538      	push	{r3, r4, r5, lr}
90022b2e:	4c15      	ldr	r4, [pc, #84]	@ (90022b84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
90022b30:	4605      	mov	r5, r0
90022b32:	7823      	ldrb	r3, [r4, #0]
90022b34:	f3bf 8f5b 	dmb	ish
90022b38:	07da      	lsls	r2, r3, #31
90022b3a:	d40b      	bmi.n	90022b54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90022b3c:	4620      	mov	r0, r4
90022b3e:	f008 fce4 	bl	9002b50a <__cxa_guard_acquire>
90022b42:	b138      	cbz	r0, 90022b54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90022b44:	4620      	mov	r0, r4
90022b46:	f008 fcec 	bl	9002b522 <__cxa_guard_release>
90022b4a:	4a0f      	ldr	r2, [pc, #60]	@ (90022b88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90022b4c:	490f      	ldr	r1, [pc, #60]	@ (90022b8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
90022b4e:	4810      	ldr	r0, [pc, #64]	@ (90022b90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90022b50:	f008 fcd4 	bl	9002b4fc <__aeabi_atexit>
90022b54:	4c0f      	ldr	r4, [pc, #60]	@ (90022b94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
90022b56:	7823      	ldrb	r3, [r4, #0]
90022b58:	f3bf 8f5b 	dmb	ish
90022b5c:	07db      	lsls	r3, r3, #31
90022b5e:	d40b      	bmi.n	90022b78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90022b60:	4620      	mov	r0, r4
90022b62:	f008 fcd2 	bl	9002b50a <__cxa_guard_acquire>
90022b66:	b138      	cbz	r0, 90022b78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90022b68:	4620      	mov	r0, r4
90022b6a:	f008 fcda 	bl	9002b522 <__cxa_guard_release>
90022b6e:	4a06      	ldr	r2, [pc, #24]	@ (90022b88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90022b70:	4909      	ldr	r1, [pc, #36]	@ (90022b98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
90022b72:	480a      	ldr	r0, [pc, #40]	@ (90022b9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90022b74:	f008 fcc2 	bl	9002b4fc <__aeabi_atexit>
90022b78:	4b05      	ldr	r3, [pc, #20]	@ (90022b90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90022b7a:	60ab      	str	r3, [r5, #8]
90022b7c:	4b07      	ldr	r3, [pc, #28]	@ (90022b9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90022b7e:	60eb      	str	r3, [r5, #12]
90022b80:	bd38      	pop	{r3, r4, r5, pc}
90022b82:	bf00      	nop
90022b84:	24027f48 	.word	0x24027f48
90022b88:	24000000 	.word	0x24000000
90022b8c:	90020cc9 	.word	0x90020cc9
90022b90:	24000084 	.word	0x24000084
90022b94:	24027f4c 	.word	0x24027f4c
90022b98:	90020cc7 	.word	0x90020cc7
90022b9c:	24000088 	.word	0x24000088

90022ba0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
90022ba0:	b510      	push	{r4, lr}
90022ba2:	4604      	mov	r4, r0
90022ba4:	f7ff ff88 	bl	90022ab8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
90022ba8:	4620      	mov	r0, r4
90022baa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90022bae:	f7ff bfbd 	b.w	90022b2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

90022bb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
90022bb4:	b538      	push	{r3, r4, r5, lr}
90022bb6:	4c15      	ldr	r4, [pc, #84]	@ (90022c0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
90022bb8:	4605      	mov	r5, r0
90022bba:	7823      	ldrb	r3, [r4, #0]
90022bbc:	f3bf 8f5b 	dmb	ish
90022bc0:	07da      	lsls	r2, r3, #31
90022bc2:	d40b      	bmi.n	90022bdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90022bc4:	4620      	mov	r0, r4
90022bc6:	f008 fca0 	bl	9002b50a <__cxa_guard_acquire>
90022bca:	b138      	cbz	r0, 90022bdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90022bcc:	4620      	mov	r0, r4
90022bce:	f008 fca8 	bl	9002b522 <__cxa_guard_release>
90022bd2:	4a0f      	ldr	r2, [pc, #60]	@ (90022c10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90022bd4:	490f      	ldr	r1, [pc, #60]	@ (90022c14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
90022bd6:	4810      	ldr	r0, [pc, #64]	@ (90022c18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90022bd8:	f008 fc90 	bl	9002b4fc <__aeabi_atexit>
90022bdc:	4c0f      	ldr	r4, [pc, #60]	@ (90022c1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
90022bde:	7823      	ldrb	r3, [r4, #0]
90022be0:	f3bf 8f5b 	dmb	ish
90022be4:	07db      	lsls	r3, r3, #31
90022be6:	d40b      	bmi.n	90022c00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90022be8:	4620      	mov	r0, r4
90022bea:	f008 fc8e 	bl	9002b50a <__cxa_guard_acquire>
90022bee:	b138      	cbz	r0, 90022c00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90022bf0:	4620      	mov	r0, r4
90022bf2:	f008 fc96 	bl	9002b522 <__cxa_guard_release>
90022bf6:	4a06      	ldr	r2, [pc, #24]	@ (90022c10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90022bf8:	4909      	ldr	r1, [pc, #36]	@ (90022c20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
90022bfa:	480a      	ldr	r0, [pc, #40]	@ (90022c24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90022bfc:	f008 fc7e 	bl	9002b4fc <__aeabi_atexit>
90022c00:	4b05      	ldr	r3, [pc, #20]	@ (90022c18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90022c02:	622b      	str	r3, [r5, #32]
90022c04:	4b07      	ldr	r3, [pc, #28]	@ (90022c24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90022c06:	626b      	str	r3, [r5, #36]	@ 0x24
90022c08:	bd38      	pop	{r3, r4, r5, pc}
90022c0a:	bf00      	nop
90022c0c:	24027f78 	.word	0x24027f78
90022c10:	24000000 	.word	0x24000000
90022c14:	90020cbd 	.word	0x90020cbd
90022c18:	240000b4 	.word	0x240000b4
90022c1c:	24027f7c 	.word	0x24027f7c
90022c20:	90020cbb 	.word	0x90020cbb
90022c24:	240000b8 	.word	0x240000b8

90022c28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
90022c28:	b538      	push	{r3, r4, r5, lr}
90022c2a:	4c15      	ldr	r4, [pc, #84]	@ (90022c80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
90022c2c:	4605      	mov	r5, r0
90022c2e:	7823      	ldrb	r3, [r4, #0]
90022c30:	f3bf 8f5b 	dmb	ish
90022c34:	07da      	lsls	r2, r3, #31
90022c36:	d40b      	bmi.n	90022c50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90022c38:	4620      	mov	r0, r4
90022c3a:	f008 fc66 	bl	9002b50a <__cxa_guard_acquire>
90022c3e:	b138      	cbz	r0, 90022c50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90022c40:	4620      	mov	r0, r4
90022c42:	f008 fc6e 	bl	9002b522 <__cxa_guard_release>
90022c46:	4a0f      	ldr	r2, [pc, #60]	@ (90022c84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90022c48:	490f      	ldr	r1, [pc, #60]	@ (90022c88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
90022c4a:	4810      	ldr	r0, [pc, #64]	@ (90022c8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90022c4c:	f008 fc56 	bl	9002b4fc <__aeabi_atexit>
90022c50:	4c0f      	ldr	r4, [pc, #60]	@ (90022c90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
90022c52:	7823      	ldrb	r3, [r4, #0]
90022c54:	f3bf 8f5b 	dmb	ish
90022c58:	07db      	lsls	r3, r3, #31
90022c5a:	d40b      	bmi.n	90022c74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90022c5c:	4620      	mov	r0, r4
90022c5e:	f008 fc54 	bl	9002b50a <__cxa_guard_acquire>
90022c62:	b138      	cbz	r0, 90022c74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90022c64:	4620      	mov	r0, r4
90022c66:	f008 fc5c 	bl	9002b522 <__cxa_guard_release>
90022c6a:	4a06      	ldr	r2, [pc, #24]	@ (90022c84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90022c6c:	4909      	ldr	r1, [pc, #36]	@ (90022c94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
90022c6e:	480a      	ldr	r0, [pc, #40]	@ (90022c98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90022c70:	f008 fc44 	bl	9002b4fc <__aeabi_atexit>
90022c74:	4b05      	ldr	r3, [pc, #20]	@ (90022c8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90022c76:	61ab      	str	r3, [r5, #24]
90022c78:	4b07      	ldr	r3, [pc, #28]	@ (90022c98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90022c7a:	61eb      	str	r3, [r5, #28]
90022c7c:	bd38      	pop	{r3, r4, r5, pc}
90022c7e:	bf00      	nop
90022c80:	24027f50 	.word	0x24027f50
90022c84:	24000000 	.word	0x24000000
90022c88:	90020cc1 	.word	0x90020cc1
90022c8c:	2400008c 	.word	0x2400008c
90022c90:	24027f54 	.word	0x24027f54
90022c94:	90020cbf 	.word	0x90020cbf
90022c98:	24000090 	.word	0x24000090

90022c9c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
90022c9c:	b510      	push	{r4, lr}
90022c9e:	4604      	mov	r4, r0
90022ca0:	f7ff ff88 	bl	90022bb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
90022ca4:	4620      	mov	r0, r4
90022ca6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90022caa:	f7ff bfbd 	b.w	90022c28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

90022cb0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
90022cb0:	b538      	push	{r3, r4, r5, lr}
90022cb2:	4c15      	ldr	r4, [pc, #84]	@ (90022d08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
90022cb4:	4605      	mov	r5, r0
90022cb6:	7823      	ldrb	r3, [r4, #0]
90022cb8:	f3bf 8f5b 	dmb	ish
90022cbc:	07da      	lsls	r2, r3, #31
90022cbe:	d40b      	bmi.n	90022cd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90022cc0:	4620      	mov	r0, r4
90022cc2:	f008 fc22 	bl	9002b50a <__cxa_guard_acquire>
90022cc6:	b138      	cbz	r0, 90022cd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90022cc8:	4620      	mov	r0, r4
90022cca:	f008 fc2a 	bl	9002b522 <__cxa_guard_release>
90022cce:	4a0f      	ldr	r2, [pc, #60]	@ (90022d0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90022cd0:	490f      	ldr	r1, [pc, #60]	@ (90022d10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
90022cd2:	4810      	ldr	r0, [pc, #64]	@ (90022d14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
90022cd4:	f008 fc12 	bl	9002b4fc <__aeabi_atexit>
90022cd8:	4c0f      	ldr	r4, [pc, #60]	@ (90022d18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
90022cda:	7823      	ldrb	r3, [r4, #0]
90022cdc:	f3bf 8f5b 	dmb	ish
90022ce0:	07db      	lsls	r3, r3, #31
90022ce2:	d40b      	bmi.n	90022cfc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90022ce4:	4620      	mov	r0, r4
90022ce6:	f008 fc10 	bl	9002b50a <__cxa_guard_acquire>
90022cea:	b138      	cbz	r0, 90022cfc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90022cec:	4620      	mov	r0, r4
90022cee:	f008 fc18 	bl	9002b522 <__cxa_guard_release>
90022cf2:	4a06      	ldr	r2, [pc, #24]	@ (90022d0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90022cf4:	4909      	ldr	r1, [pc, #36]	@ (90022d1c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
90022cf6:	480a      	ldr	r0, [pc, #40]	@ (90022d20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90022cf8:	f008 fc00 	bl	9002b4fc <__aeabi_atexit>
90022cfc:	4b05      	ldr	r3, [pc, #20]	@ (90022d14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
90022cfe:	632b      	str	r3, [r5, #48]	@ 0x30
90022d00:	4b07      	ldr	r3, [pc, #28]	@ (90022d20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90022d02:	636b      	str	r3, [r5, #52]	@ 0x34
90022d04:	bd38      	pop	{r3, r4, r5, pc}
90022d06:	bf00      	nop
90022d08:	24027f88 	.word	0x24027f88
90022d0c:	24000000 	.word	0x24000000
90022d10:	90020cb5 	.word	0x90020cb5
90022d14:	240000c4 	.word	0x240000c4
90022d18:	24027f8c 	.word	0x24027f8c
90022d1c:	90020cb3 	.word	0x90020cb3
90022d20:	240000c8 	.word	0x240000c8

90022d24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
90022d24:	b538      	push	{r3, r4, r5, lr}
90022d26:	4c15      	ldr	r4, [pc, #84]	@ (90022d7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
90022d28:	4605      	mov	r5, r0
90022d2a:	7823      	ldrb	r3, [r4, #0]
90022d2c:	f3bf 8f5b 	dmb	ish
90022d30:	07da      	lsls	r2, r3, #31
90022d32:	d40b      	bmi.n	90022d4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90022d34:	4620      	mov	r0, r4
90022d36:	f008 fbe8 	bl	9002b50a <__cxa_guard_acquire>
90022d3a:	b138      	cbz	r0, 90022d4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90022d3c:	4620      	mov	r0, r4
90022d3e:	f008 fbf0 	bl	9002b522 <__cxa_guard_release>
90022d42:	4a0f      	ldr	r2, [pc, #60]	@ (90022d80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90022d44:	490f      	ldr	r1, [pc, #60]	@ (90022d84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
90022d46:	4810      	ldr	r0, [pc, #64]	@ (90022d88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90022d48:	f008 fbd8 	bl	9002b4fc <__aeabi_atexit>
90022d4c:	4c0f      	ldr	r4, [pc, #60]	@ (90022d8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
90022d4e:	7823      	ldrb	r3, [r4, #0]
90022d50:	f3bf 8f5b 	dmb	ish
90022d54:	07db      	lsls	r3, r3, #31
90022d56:	d40b      	bmi.n	90022d70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90022d58:	4620      	mov	r0, r4
90022d5a:	f008 fbd6 	bl	9002b50a <__cxa_guard_acquire>
90022d5e:	b138      	cbz	r0, 90022d70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90022d60:	4620      	mov	r0, r4
90022d62:	f008 fbde 	bl	9002b522 <__cxa_guard_release>
90022d66:	4a06      	ldr	r2, [pc, #24]	@ (90022d80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90022d68:	4909      	ldr	r1, [pc, #36]	@ (90022d90 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
90022d6a:	480a      	ldr	r0, [pc, #40]	@ (90022d94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90022d6c:	f008 fbc6 	bl	9002b4fc <__aeabi_atexit>
90022d70:	4b05      	ldr	r3, [pc, #20]	@ (90022d88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90022d72:	62ab      	str	r3, [r5, #40]	@ 0x28
90022d74:	4b07      	ldr	r3, [pc, #28]	@ (90022d94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90022d76:	62eb      	str	r3, [r5, #44]	@ 0x2c
90022d78:	bd38      	pop	{r3, r4, r5, pc}
90022d7a:	bf00      	nop
90022d7c:	24027f58 	.word	0x24027f58
90022d80:	24000000 	.word	0x24000000
90022d84:	90020cb9 	.word	0x90020cb9
90022d88:	24000094 	.word	0x24000094
90022d8c:	24027f5c 	.word	0x24027f5c
90022d90:	90020cb7 	.word	0x90020cb7
90022d94:	24000098 	.word	0x24000098

90022d98 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
90022d98:	b510      	push	{r4, lr}
90022d9a:	4604      	mov	r4, r0
90022d9c:	f7ff ff88 	bl	90022cb0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
90022da0:	4620      	mov	r0, r4
90022da2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90022da6:	f7ff bfbd 	b.w	90022d24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

90022dac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
90022dac:	b538      	push	{r3, r4, r5, lr}
90022dae:	4c15      	ldr	r4, [pc, #84]	@ (90022e04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
90022db0:	4605      	mov	r5, r0
90022db2:	7823      	ldrb	r3, [r4, #0]
90022db4:	f3bf 8f5b 	dmb	ish
90022db8:	07da      	lsls	r2, r3, #31
90022dba:	d40b      	bmi.n	90022dd4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90022dbc:	4620      	mov	r0, r4
90022dbe:	f008 fba4 	bl	9002b50a <__cxa_guard_acquire>
90022dc2:	b138      	cbz	r0, 90022dd4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90022dc4:	4620      	mov	r0, r4
90022dc6:	f008 fbac 	bl	9002b522 <__cxa_guard_release>
90022dca:	4a0f      	ldr	r2, [pc, #60]	@ (90022e08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90022dcc:	490f      	ldr	r1, [pc, #60]	@ (90022e0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
90022dce:	4810      	ldr	r0, [pc, #64]	@ (90022e10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90022dd0:	f008 fb94 	bl	9002b4fc <__aeabi_atexit>
90022dd4:	4c0f      	ldr	r4, [pc, #60]	@ (90022e14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
90022dd6:	7823      	ldrb	r3, [r4, #0]
90022dd8:	f3bf 8f5b 	dmb	ish
90022ddc:	07db      	lsls	r3, r3, #31
90022dde:	d40b      	bmi.n	90022df8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90022de0:	4620      	mov	r0, r4
90022de2:	f008 fb92 	bl	9002b50a <__cxa_guard_acquire>
90022de6:	b138      	cbz	r0, 90022df8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90022de8:	4620      	mov	r0, r4
90022dea:	f008 fb9a 	bl	9002b522 <__cxa_guard_release>
90022dee:	4a06      	ldr	r2, [pc, #24]	@ (90022e08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90022df0:	4909      	ldr	r1, [pc, #36]	@ (90022e18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
90022df2:	480a      	ldr	r0, [pc, #40]	@ (90022e1c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90022df4:	f008 fb82 	bl	9002b4fc <__aeabi_atexit>
90022df8:	4b05      	ldr	r3, [pc, #20]	@ (90022e10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90022dfa:	652b      	str	r3, [r5, #80]	@ 0x50
90022dfc:	4b07      	ldr	r3, [pc, #28]	@ (90022e1c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90022dfe:	656b      	str	r3, [r5, #84]	@ 0x54
90022e00:	bd38      	pop	{r3, r4, r5, pc}
90022e02:	bf00      	nop
90022e04:	24027f90 	.word	0x24027f90
90022e08:	24000000 	.word	0x24000000
90022e0c:	90020ca5 	.word	0x90020ca5
90022e10:	240000cc 	.word	0x240000cc
90022e14:	24027f94 	.word	0x24027f94
90022e18:	90020ca3 	.word	0x90020ca3
90022e1c:	240000d0 	.word	0x240000d0

90022e20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
90022e20:	b538      	push	{r3, r4, r5, lr}
90022e22:	4c15      	ldr	r4, [pc, #84]	@ (90022e78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
90022e24:	4605      	mov	r5, r0
90022e26:	7823      	ldrb	r3, [r4, #0]
90022e28:	f3bf 8f5b 	dmb	ish
90022e2c:	07da      	lsls	r2, r3, #31
90022e2e:	d40b      	bmi.n	90022e48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90022e30:	4620      	mov	r0, r4
90022e32:	f008 fb6a 	bl	9002b50a <__cxa_guard_acquire>
90022e36:	b138      	cbz	r0, 90022e48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90022e38:	4620      	mov	r0, r4
90022e3a:	f008 fb72 	bl	9002b522 <__cxa_guard_release>
90022e3e:	4a0f      	ldr	r2, [pc, #60]	@ (90022e7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90022e40:	490f      	ldr	r1, [pc, #60]	@ (90022e80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
90022e42:	4810      	ldr	r0, [pc, #64]	@ (90022e84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90022e44:	f008 fb5a 	bl	9002b4fc <__aeabi_atexit>
90022e48:	4c0f      	ldr	r4, [pc, #60]	@ (90022e88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
90022e4a:	7823      	ldrb	r3, [r4, #0]
90022e4c:	f3bf 8f5b 	dmb	ish
90022e50:	07db      	lsls	r3, r3, #31
90022e52:	d40b      	bmi.n	90022e6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90022e54:	4620      	mov	r0, r4
90022e56:	f008 fb58 	bl	9002b50a <__cxa_guard_acquire>
90022e5a:	b138      	cbz	r0, 90022e6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90022e5c:	4620      	mov	r0, r4
90022e5e:	f008 fb60 	bl	9002b522 <__cxa_guard_release>
90022e62:	4a06      	ldr	r2, [pc, #24]	@ (90022e7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90022e64:	4909      	ldr	r1, [pc, #36]	@ (90022e8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
90022e66:	480a      	ldr	r0, [pc, #40]	@ (90022e90 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90022e68:	f008 fb48 	bl	9002b4fc <__aeabi_atexit>
90022e6c:	4b05      	ldr	r3, [pc, #20]	@ (90022e84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90022e6e:	64ab      	str	r3, [r5, #72]	@ 0x48
90022e70:	4b07      	ldr	r3, [pc, #28]	@ (90022e90 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90022e72:	64eb      	str	r3, [r5, #76]	@ 0x4c
90022e74:	bd38      	pop	{r3, r4, r5, pc}
90022e76:	bf00      	nop
90022e78:	24027f98 	.word	0x24027f98
90022e7c:	24000000 	.word	0x24000000
90022e80:	90020ca9 	.word	0x90020ca9
90022e84:	240000d4 	.word	0x240000d4
90022e88:	24027f9c 	.word	0x24027f9c
90022e8c:	90020ca7 	.word	0x90020ca7
90022e90:	240000d8 	.word	0x240000d8

90022e94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
90022e94:	b538      	push	{r3, r4, r5, lr}
90022e96:	4c15      	ldr	r4, [pc, #84]	@ (90022eec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
90022e98:	4605      	mov	r5, r0
90022e9a:	7823      	ldrb	r3, [r4, #0]
90022e9c:	f3bf 8f5b 	dmb	ish
90022ea0:	07da      	lsls	r2, r3, #31
90022ea2:	d40b      	bmi.n	90022ebc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90022ea4:	4620      	mov	r0, r4
90022ea6:	f008 fb30 	bl	9002b50a <__cxa_guard_acquire>
90022eaa:	b138      	cbz	r0, 90022ebc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90022eac:	4620      	mov	r0, r4
90022eae:	f008 fb38 	bl	9002b522 <__cxa_guard_release>
90022eb2:	4a0f      	ldr	r2, [pc, #60]	@ (90022ef0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90022eb4:	490f      	ldr	r1, [pc, #60]	@ (90022ef4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
90022eb6:	4810      	ldr	r0, [pc, #64]	@ (90022ef8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90022eb8:	f008 fb20 	bl	9002b4fc <__aeabi_atexit>
90022ebc:	4c0f      	ldr	r4, [pc, #60]	@ (90022efc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
90022ebe:	7823      	ldrb	r3, [r4, #0]
90022ec0:	f3bf 8f5b 	dmb	ish
90022ec4:	07db      	lsls	r3, r3, #31
90022ec6:	d40b      	bmi.n	90022ee0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90022ec8:	4620      	mov	r0, r4
90022eca:	f008 fb1e 	bl	9002b50a <__cxa_guard_acquire>
90022ece:	b138      	cbz	r0, 90022ee0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90022ed0:	4620      	mov	r0, r4
90022ed2:	f008 fb26 	bl	9002b522 <__cxa_guard_release>
90022ed6:	4a06      	ldr	r2, [pc, #24]	@ (90022ef0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90022ed8:	4909      	ldr	r1, [pc, #36]	@ (90022f00 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
90022eda:	480a      	ldr	r0, [pc, #40]	@ (90022f04 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90022edc:	f008 fb0e 	bl	9002b4fc <__aeabi_atexit>
90022ee0:	4b05      	ldr	r3, [pc, #20]	@ (90022ef8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90022ee2:	642b      	str	r3, [r5, #64]	@ 0x40
90022ee4:	4b07      	ldr	r3, [pc, #28]	@ (90022f04 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90022ee6:	646b      	str	r3, [r5, #68]	@ 0x44
90022ee8:	bd38      	pop	{r3, r4, r5, pc}
90022eea:	bf00      	nop
90022eec:	24027f60 	.word	0x24027f60
90022ef0:	24000000 	.word	0x24000000
90022ef4:	90020cad 	.word	0x90020cad
90022ef8:	2400009c 	.word	0x2400009c
90022efc:	24027f64 	.word	0x24027f64
90022f00:	90020cab 	.word	0x90020cab
90022f04:	240000a0 	.word	0x240000a0

90022f08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90022f08:	b538      	push	{r3, r4, r5, lr}
90022f0a:	4c15      	ldr	r4, [pc, #84]	@ (90022f60 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
90022f0c:	4605      	mov	r5, r0
90022f0e:	7823      	ldrb	r3, [r4, #0]
90022f10:	f3bf 8f5b 	dmb	ish
90022f14:	07da      	lsls	r2, r3, #31
90022f16:	d40b      	bmi.n	90022f30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90022f18:	4620      	mov	r0, r4
90022f1a:	f008 faf6 	bl	9002b50a <__cxa_guard_acquire>
90022f1e:	b138      	cbz	r0, 90022f30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90022f20:	4620      	mov	r0, r4
90022f22:	f008 fafe 	bl	9002b522 <__cxa_guard_release>
90022f26:	4a0f      	ldr	r2, [pc, #60]	@ (90022f64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90022f28:	490f      	ldr	r1, [pc, #60]	@ (90022f68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
90022f2a:	4810      	ldr	r0, [pc, #64]	@ (90022f6c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90022f2c:	f008 fae6 	bl	9002b4fc <__aeabi_atexit>
90022f30:	4c0f      	ldr	r4, [pc, #60]	@ (90022f70 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
90022f32:	7823      	ldrb	r3, [r4, #0]
90022f34:	f3bf 8f5b 	dmb	ish
90022f38:	07db      	lsls	r3, r3, #31
90022f3a:	d40b      	bmi.n	90022f54 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90022f3c:	4620      	mov	r0, r4
90022f3e:	f008 fae4 	bl	9002b50a <__cxa_guard_acquire>
90022f42:	b138      	cbz	r0, 90022f54 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90022f44:	4620      	mov	r0, r4
90022f46:	f008 faec 	bl	9002b522 <__cxa_guard_release>
90022f4a:	4a06      	ldr	r2, [pc, #24]	@ (90022f64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90022f4c:	4909      	ldr	r1, [pc, #36]	@ (90022f74 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
90022f4e:	480a      	ldr	r0, [pc, #40]	@ (90022f78 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90022f50:	f008 fad4 	bl	9002b4fc <__aeabi_atexit>
90022f54:	4b05      	ldr	r3, [pc, #20]	@ (90022f6c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90022f56:	63ab      	str	r3, [r5, #56]	@ 0x38
90022f58:	4b07      	ldr	r3, [pc, #28]	@ (90022f78 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90022f5a:	63eb      	str	r3, [r5, #60]	@ 0x3c
90022f5c:	bd38      	pop	{r3, r4, r5, pc}
90022f5e:	bf00      	nop
90022f60:	24027f80 	.word	0x24027f80
90022f64:	24000000 	.word	0x24000000
90022f68:	90020cb1 	.word	0x90020cb1
90022f6c:	240000bc 	.word	0x240000bc
90022f70:	24027f84 	.word	0x24027f84
90022f74:	90020caf 	.word	0x90020caf
90022f78:	240000c0 	.word	0x240000c0

90022f7c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
90022f7c:	b510      	push	{r4, lr}
90022f7e:	4604      	mov	r4, r0
90022f80:	f7ff ff14 	bl	90022dac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
90022f84:	4620      	mov	r0, r4
90022f86:	f7ff ff85 	bl	90022e94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
90022f8a:	4620      	mov	r0, r4
90022f8c:	f7ff ff48 	bl	90022e20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
90022f90:	4620      	mov	r0, r4
90022f92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90022f96:	f7ff bfb7 	b.w	90022f08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

90022f9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
90022f9c:	b538      	push	{r3, r4, r5, lr}
90022f9e:	4c15      	ldr	r4, [pc, #84]	@ (90022ff4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
90022fa0:	4605      	mov	r5, r0
90022fa2:	7823      	ldrb	r3, [r4, #0]
90022fa4:	f3bf 8f5b 	dmb	ish
90022fa8:	07da      	lsls	r2, r3, #31
90022faa:	d40b      	bmi.n	90022fc4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90022fac:	4620      	mov	r0, r4
90022fae:	f008 faac 	bl	9002b50a <__cxa_guard_acquire>
90022fb2:	b138      	cbz	r0, 90022fc4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90022fb4:	4620      	mov	r0, r4
90022fb6:	f008 fab4 	bl	9002b522 <__cxa_guard_release>
90022fba:	4a0f      	ldr	r2, [pc, #60]	@ (90022ff8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90022fbc:	490f      	ldr	r1, [pc, #60]	@ (90022ffc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
90022fbe:	4810      	ldr	r0, [pc, #64]	@ (90023000 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90022fc0:	f008 fa9c 	bl	9002b4fc <__aeabi_atexit>
90022fc4:	4c0f      	ldr	r4, [pc, #60]	@ (90023004 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
90022fc6:	7823      	ldrb	r3, [r4, #0]
90022fc8:	f3bf 8f5b 	dmb	ish
90022fcc:	07db      	lsls	r3, r3, #31
90022fce:	d40b      	bmi.n	90022fe8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90022fd0:	4620      	mov	r0, r4
90022fd2:	f008 fa9a 	bl	9002b50a <__cxa_guard_acquire>
90022fd6:	b138      	cbz	r0, 90022fe8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90022fd8:	4620      	mov	r0, r4
90022fda:	f008 faa2 	bl	9002b522 <__cxa_guard_release>
90022fde:	4a06      	ldr	r2, [pc, #24]	@ (90022ff8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90022fe0:	4909      	ldr	r1, [pc, #36]	@ (90023008 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
90022fe2:	480a      	ldr	r0, [pc, #40]	@ (9002300c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90022fe4:	f008 fa8a 	bl	9002b4fc <__aeabi_atexit>
90022fe8:	4b05      	ldr	r3, [pc, #20]	@ (90023000 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90022fea:	662b      	str	r3, [r5, #96]	@ 0x60
90022fec:	4b07      	ldr	r3, [pc, #28]	@ (9002300c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90022fee:	666b      	str	r3, [r5, #100]	@ 0x64
90022ff0:	bd38      	pop	{r3, r4, r5, pc}
90022ff2:	bf00      	nop
90022ff4:	24027f68 	.word	0x24027f68
90022ff8:	24000000 	.word	0x24000000
90022ffc:	90020c9d 	.word	0x90020c9d
90023000:	240000a4 	.word	0x240000a4
90023004:	24027f6c 	.word	0x24027f6c
90023008:	90020c9b 	.word	0x90020c9b
9002300c:	240000a8 	.word	0x240000a8

90023010 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
90023010:	b538      	push	{r3, r4, r5, lr}
90023012:	4c15      	ldr	r4, [pc, #84]	@ (90023068 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
90023014:	4605      	mov	r5, r0
90023016:	7823      	ldrb	r3, [r4, #0]
90023018:	f3bf 8f5b 	dmb	ish
9002301c:	07da      	lsls	r2, r3, #31
9002301e:	d40b      	bmi.n	90023038 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90023020:	4620      	mov	r0, r4
90023022:	f008 fa72 	bl	9002b50a <__cxa_guard_acquire>
90023026:	b138      	cbz	r0, 90023038 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90023028:	4620      	mov	r0, r4
9002302a:	f008 fa7a 	bl	9002b522 <__cxa_guard_release>
9002302e:	4a0f      	ldr	r2, [pc, #60]	@ (9002306c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90023030:	490f      	ldr	r1, [pc, #60]	@ (90023070 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
90023032:	4810      	ldr	r0, [pc, #64]	@ (90023074 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90023034:	f008 fa62 	bl	9002b4fc <__aeabi_atexit>
90023038:	4c0f      	ldr	r4, [pc, #60]	@ (90023078 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
9002303a:	7823      	ldrb	r3, [r4, #0]
9002303c:	f3bf 8f5b 	dmb	ish
90023040:	07db      	lsls	r3, r3, #31
90023042:	d40b      	bmi.n	9002305c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90023044:	4620      	mov	r0, r4
90023046:	f008 fa60 	bl	9002b50a <__cxa_guard_acquire>
9002304a:	b138      	cbz	r0, 9002305c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9002304c:	4620      	mov	r0, r4
9002304e:	f008 fa68 	bl	9002b522 <__cxa_guard_release>
90023052:	4a06      	ldr	r2, [pc, #24]	@ (9002306c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90023054:	4909      	ldr	r1, [pc, #36]	@ (9002307c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
90023056:	480a      	ldr	r0, [pc, #40]	@ (90023080 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90023058:	f008 fa50 	bl	9002b4fc <__aeabi_atexit>
9002305c:	4b05      	ldr	r3, [pc, #20]	@ (90023074 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9002305e:	65ab      	str	r3, [r5, #88]	@ 0x58
90023060:	4b07      	ldr	r3, [pc, #28]	@ (90023080 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90023062:	65eb      	str	r3, [r5, #92]	@ 0x5c
90023064:	bd38      	pop	{r3, r4, r5, pc}
90023066:	bf00      	nop
90023068:	24027f40 	.word	0x24027f40
9002306c:	24000000 	.word	0x24000000
90023070:	90020ca1 	.word	0x90020ca1
90023074:	2400007c 	.word	0x2400007c
90023078:	24027f44 	.word	0x24027f44
9002307c:	90020c9f 	.word	0x90020c9f
90023080:	24000080 	.word	0x24000080

90023084 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
90023084:	b510      	push	{r4, lr}
90023086:	4604      	mov	r4, r0
90023088:	f7ff ff88 	bl	90022f9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
9002308c:	4620      	mov	r0, r4
9002308e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90023092:	f7ff bfbd 	b.w	90023010 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

90023098 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
90023098:	b538      	push	{r3, r4, r5, lr}
9002309a:	4c15      	ldr	r4, [pc, #84]	@ (900230f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
9002309c:	4605      	mov	r5, r0
9002309e:	7823      	ldrb	r3, [r4, #0]
900230a0:	f3bf 8f5b 	dmb	ish
900230a4:	07da      	lsls	r2, r3, #31
900230a6:	d40b      	bmi.n	900230c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
900230a8:	4620      	mov	r0, r4
900230aa:	f008 fa2e 	bl	9002b50a <__cxa_guard_acquire>
900230ae:	b138      	cbz	r0, 900230c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
900230b0:	4620      	mov	r0, r4
900230b2:	f008 fa36 	bl	9002b522 <__cxa_guard_release>
900230b6:	4a0f      	ldr	r2, [pc, #60]	@ (900230f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
900230b8:	490f      	ldr	r1, [pc, #60]	@ (900230f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
900230ba:	4810      	ldr	r0, [pc, #64]	@ (900230fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
900230bc:	f008 fa1e 	bl	9002b4fc <__aeabi_atexit>
900230c0:	4c0f      	ldr	r4, [pc, #60]	@ (90023100 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
900230c2:	7823      	ldrb	r3, [r4, #0]
900230c4:	f3bf 8f5b 	dmb	ish
900230c8:	07db      	lsls	r3, r3, #31
900230ca:	d40b      	bmi.n	900230e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
900230cc:	4620      	mov	r0, r4
900230ce:	f008 fa1c 	bl	9002b50a <__cxa_guard_acquire>
900230d2:	b138      	cbz	r0, 900230e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
900230d4:	4620      	mov	r0, r4
900230d6:	f008 fa24 	bl	9002b522 <__cxa_guard_release>
900230da:	4a06      	ldr	r2, [pc, #24]	@ (900230f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
900230dc:	4909      	ldr	r1, [pc, #36]	@ (90023104 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
900230de:	480a      	ldr	r0, [pc, #40]	@ (90023108 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
900230e0:	f008 fa0c 	bl	9002b4fc <__aeabi_atexit>
900230e4:	4b05      	ldr	r3, [pc, #20]	@ (900230fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
900230e6:	672b      	str	r3, [r5, #112]	@ 0x70
900230e8:	4b07      	ldr	r3, [pc, #28]	@ (90023108 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
900230ea:	676b      	str	r3, [r5, #116]	@ 0x74
900230ec:	bd38      	pop	{r3, r4, r5, pc}
900230ee:	bf00      	nop
900230f0:	24027f38 	.word	0x24027f38
900230f4:	24000000 	.word	0x24000000
900230f8:	90020c95 	.word	0x90020c95
900230fc:	24000074 	.word	0x24000074
90023100:	24027f3c 	.word	0x24027f3c
90023104:	90020c93 	.word	0x90020c93
90023108:	24000078 	.word	0x24000078

9002310c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9002310c:	b538      	push	{r3, r4, r5, lr}
9002310e:	4c15      	ldr	r4, [pc, #84]	@ (90023164 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
90023110:	4605      	mov	r5, r0
90023112:	7823      	ldrb	r3, [r4, #0]
90023114:	f3bf 8f5b 	dmb	ish
90023118:	07da      	lsls	r2, r3, #31
9002311a:	d40b      	bmi.n	90023134 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9002311c:	4620      	mov	r0, r4
9002311e:	f008 f9f4 	bl	9002b50a <__cxa_guard_acquire>
90023122:	b138      	cbz	r0, 90023134 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90023124:	4620      	mov	r0, r4
90023126:	f008 f9fc 	bl	9002b522 <__cxa_guard_release>
9002312a:	4a0f      	ldr	r2, [pc, #60]	@ (90023168 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9002312c:	490f      	ldr	r1, [pc, #60]	@ (9002316c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9002312e:	4810      	ldr	r0, [pc, #64]	@ (90023170 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90023130:	f008 f9e4 	bl	9002b4fc <__aeabi_atexit>
90023134:	4c0f      	ldr	r4, [pc, #60]	@ (90023174 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
90023136:	7823      	ldrb	r3, [r4, #0]
90023138:	f3bf 8f5b 	dmb	ish
9002313c:	07db      	lsls	r3, r3, #31
9002313e:	d40b      	bmi.n	90023158 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90023140:	4620      	mov	r0, r4
90023142:	f008 f9e2 	bl	9002b50a <__cxa_guard_acquire>
90023146:	b138      	cbz	r0, 90023158 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90023148:	4620      	mov	r0, r4
9002314a:	f008 f9ea 	bl	9002b522 <__cxa_guard_release>
9002314e:	4a06      	ldr	r2, [pc, #24]	@ (90023168 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90023150:	4909      	ldr	r1, [pc, #36]	@ (90023178 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
90023152:	480a      	ldr	r0, [pc, #40]	@ (9002317c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90023154:	f008 f9d2 	bl	9002b4fc <__aeabi_atexit>
90023158:	4b05      	ldr	r3, [pc, #20]	@ (90023170 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9002315a:	66ab      	str	r3, [r5, #104]	@ 0x68
9002315c:	4b07      	ldr	r3, [pc, #28]	@ (9002317c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9002315e:	66eb      	str	r3, [r5, #108]	@ 0x6c
90023160:	bd38      	pop	{r3, r4, r5, pc}
90023162:	bf00      	nop
90023164:	24027f30 	.word	0x24027f30
90023168:	24000000 	.word	0x24000000
9002316c:	90020c99 	.word	0x90020c99
90023170:	2400006c 	.word	0x2400006c
90023174:	24027f34 	.word	0x24027f34
90023178:	90020c97 	.word	0x90020c97
9002317c:	24000070 	.word	0x24000070

90023180 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
90023180:	b510      	push	{r4, lr}
90023182:	4604      	mov	r4, r0
90023184:	f7ff ff88 	bl	90023098 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90023188:	4620      	mov	r0, r4
9002318a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002318e:	f7ff bfbd 	b.w	9002310c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

90023192 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
90023192:	b510      	push	{r4, lr}
90023194:	4604      	mov	r4, r0
90023196:	f7ff fff3 	bl	90023180 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
9002319a:	4620      	mov	r0, r4
9002319c:	f7ff ff72 	bl	90023084 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
900231a0:	4620      	mov	r0, r4
900231a2:	f7ff fdf9 	bl	90022d98 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
900231a6:	4620      	mov	r0, r4
900231a8:	f7ff fcfa 	bl	90022ba0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
900231ac:	4620      	mov	r0, r4
900231ae:	f7ff fd75 	bl	90022c9c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
900231b2:	4620      	mov	r0, r4
900231b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900231b8:	f7ff bee0 	b.w	90022f7c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

900231bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
900231bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900231c0:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
900231c4:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
900231c8:	2d00      	cmp	r5, #0
900231ca:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
900231ce:	fb05 4c0e 	mla	ip, r5, lr, r4
900231d2:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
900231d6:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
900231da:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
900231de:	eb02 0a0c 	add.w	sl, r2, ip
900231e2:	8808      	ldrh	r0, [r1, #0]
900231e4:	f2c0 80b0 	blt.w	90023348 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
900231e8:	45ab      	cmp	fp, r5
900231ea:	f340 80ad 	ble.w	90023348 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
900231ee:	2c00      	cmp	r4, #0
900231f0:	f2c0 80a8 	blt.w	90023344 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
900231f4:	45a6      	cmp	lr, r4
900231f6:	f340 80a5 	ble.w	90023344 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
900231fa:	f812 200c 	ldrb.w	r2, [r2, ip]
900231fe:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
90023202:	1c62      	adds	r2, r4, #1
90023204:	f100 80a3 	bmi.w	9002334e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90023208:	4596      	cmp	lr, r2
9002320a:	f340 80a0 	ble.w	9002334e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9002320e:	f1b9 0f00 	cmp.w	r9, #0
90023212:	f000 809c 	beq.w	9002334e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90023216:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002321a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9002321e:	3501      	adds	r5, #1
90023220:	f100 8099 	bmi.w	90023356 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90023224:	45ab      	cmp	fp, r5
90023226:	f340 8096 	ble.w	90023356 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9002322a:	2f00      	cmp	r7, #0
9002322c:	f000 8093 	beq.w	90023356 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90023230:	2c00      	cmp	r4, #0
90023232:	f2c0 808e 	blt.w	90023352 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90023236:	45a6      	cmp	lr, r4
90023238:	f340 808b 	ble.w	90023352 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9002323c:	f81a 200e 	ldrb.w	r2, [sl, lr]
90023240:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
90023244:	3401      	adds	r4, #1
90023246:	f100 8089 	bmi.w	9002335c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9002324a:	45a6      	cmp	lr, r4
9002324c:	f340 8086 	ble.w	9002335c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90023250:	f1b9 0f00 	cmp.w	r9, #0
90023254:	f000 8082 	beq.w	9002335c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90023258:	44d6      	add	lr, sl
9002325a:	f89e 2001 	ldrb.w	r2, [lr, #1]
9002325e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
90023262:	ea4f 4408 	mov.w	r4, r8, lsl #16
90023266:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
9002326a:	fb19 fe07 	smulbb	lr, r9, r7
9002326e:	f1c7 0210 	rsb	r2, r7, #16
90023272:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90023276:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9002327a:	eba2 0209 	sub.w	r2, r2, r9
9002327e:	ea44 0808 	orr.w	r8, r4, r8
90023282:	ea4f 440c 	mov.w	r4, ip, lsl #16
90023286:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9002328a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9002328e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90023292:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90023296:	ea44 0c0c 	orr.w	ip, r4, ip
9002329a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9002329e:	fb04 f40c 	mul.w	r4, r4, ip
900232a2:	fb02 4808 	mla	r8, r2, r8, r4
900232a6:	041a      	lsls	r2, r3, #16
900232a8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900232ac:	b2b4      	uxth	r4, r6
900232ae:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900232b2:	43f6      	mvns	r6, r6
900232b4:	4313      	orrs	r3, r2
900232b6:	042a      	lsls	r2, r5, #16
900232b8:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900232bc:	b2f6      	uxtb	r6, r6
900232be:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900232c2:	fb0e 8303 	mla	r3, lr, r3, r8
900232c6:	432a      	orrs	r2, r5
900232c8:	fb07 3202 	mla	r2, r7, r2, r3
900232cc:	10c7      	asrs	r7, r0, #3
900232ce:	0d53      	lsrs	r3, r2, #21
900232d0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900232d4:	0952      	lsrs	r2, r2, #5
900232d6:	fb17 f706 	smulbb	r7, r7, r6
900232da:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900232de:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900232e2:	431a      	orrs	r2, r3
900232e4:	b293      	uxth	r3, r2
900232e6:	1202      	asrs	r2, r0, #8
900232e8:	121d      	asrs	r5, r3, #8
900232ea:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900232ee:	00c0      	lsls	r0, r0, #3
900232f0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900232f4:	fb12 f206 	smulbb	r2, r2, r6
900232f8:	b2c0      	uxtb	r0, r0
900232fa:	fb05 2504 	mla	r5, r5, r4, r2
900232fe:	10da      	asrs	r2, r3, #3
90023300:	fb10 f006 	smulbb	r0, r0, r6
90023304:	00db      	lsls	r3, r3, #3
90023306:	b2ad      	uxth	r5, r5
90023308:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002330c:	b2db      	uxtb	r3, r3
9002330e:	fb02 7204 	mla	r2, r2, r4, r7
90023312:	fb03 0004 	mla	r0, r3, r4, r0
90023316:	1c6b      	adds	r3, r5, #1
90023318:	b292      	uxth	r2, r2
9002331a:	b280      	uxth	r0, r0
9002331c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023320:	1c43      	adds	r3, r0, #1
90023322:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90023326:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002332a:	1c50      	adds	r0, r2, #1
9002332c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90023330:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023334:	0952      	lsrs	r2, r2, #5
90023336:	432b      	orrs	r3, r5
90023338:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002333c:	4313      	orrs	r3, r2
9002333e:	800b      	strh	r3, [r1, #0]
90023340:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023344:	4680      	mov	r8, r0
90023346:	e75c      	b.n	90023202 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
90023348:	4684      	mov	ip, r0
9002334a:	4680      	mov	r8, r0
9002334c:	e767      	b.n	9002321e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9002334e:	4684      	mov	ip, r0
90023350:	e765      	b.n	9002321e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90023352:	4605      	mov	r5, r0
90023354:	e776      	b.n	90023244 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
90023356:	4603      	mov	r3, r0
90023358:	4605      	mov	r5, r0
9002335a:	e782      	b.n	90023262 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
9002335c:	4603      	mov	r3, r0
9002335e:	e780      	b.n	90023262 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

90023360 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023364:	b099      	sub	sp, #100	@ 0x64
90023366:	9215      	str	r2, [sp, #84]	@ 0x54
90023368:	9309      	str	r3, [sp, #36]	@ 0x24
9002336a:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
9002336c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
90023370:	9016      	str	r0, [sp, #88]	@ 0x58
90023372:	930d      	str	r3, [sp, #52]	@ 0x34
90023374:	6850      	ldr	r0, [r2, #4]
90023376:	910c      	str	r1, [sp, #48]	@ 0x30
90023378:	6812      	ldr	r2, [r2, #0]
9002337a:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
9002337e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
90023382:	fb00 1303 	mla	r3, r0, r3, r1
90023386:	eb02 0843 	add.w	r8, r2, r3, lsl #1
9002338a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002338c:	681b      	ldr	r3, [r3, #0]
9002338e:	930b      	str	r3, [sp, #44]	@ 0x2c
90023390:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90023392:	685e      	ldr	r6, [r3, #4]
90023394:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90023396:	3604      	adds	r6, #4
90023398:	43db      	mvns	r3, r3
9002339a:	b2db      	uxtb	r3, r3
9002339c:	930a      	str	r3, [sp, #40]	@ 0x28
9002339e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900233a0:	2b00      	cmp	r3, #0
900233a2:	dc03      	bgt.n	900233ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
900233a4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
900233a6:	2b00      	cmp	r3, #0
900233a8:	f340 8225 	ble.w	900237f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
900233ac:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900233ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900233b2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900233b6:	1e48      	subs	r0, r1, #1
900233b8:	1e57      	subs	r7, r2, #1
900233ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900233bc:	2b00      	cmp	r3, #0
900233be:	f340 80e3 	ble.w	90023588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
900233c2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
900233c6:	ea4f 4325 	mov.w	r3, r5, asr #16
900233ca:	d406      	bmi.n	900233da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900233cc:	4584      	cmp	ip, r0
900233ce:	da04      	bge.n	900233da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900233d0:	2b00      	cmp	r3, #0
900233d2:	db02      	blt.n	900233da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900233d4:	42bb      	cmp	r3, r7
900233d6:	f2c0 80d8 	blt.w	9002358a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
900233da:	f11c 0c01 	adds.w	ip, ip, #1
900233de:	f100 80c9 	bmi.w	90023574 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900233e2:	4561      	cmp	r1, ip
900233e4:	f2c0 80c6 	blt.w	90023574 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900233e8:	3301      	adds	r3, #1
900233ea:	f100 80c3 	bmi.w	90023574 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900233ee:	429a      	cmp	r2, r3
900233f0:	f2c0 80c0 	blt.w	90023574 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900233f4:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
900233f8:	4647      	mov	r7, r8
900233fa:	f1bb 0f00 	cmp.w	fp, #0
900233fe:	f340 80e3 	ble.w	900235c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
90023402:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
90023404:	ea4f 4c25 	mov.w	ip, r5, asr #16
90023408:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002340a:	f3ca 3003 	ubfx	r0, sl, #12, #4
9002340e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90023412:	ea5f 422a 	movs.w	r2, sl, asr #16
90023416:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002341a:	689b      	ldr	r3, [r3, #8]
9002341c:	f100 8121 	bmi.w	90023662 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90023420:	f103 39ff 	add.w	r9, r3, #4294967295
90023424:	454a      	cmp	r2, r9
90023426:	f280 811c 	bge.w	90023662 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002342a:	f1bc 0f00 	cmp.w	ip, #0
9002342e:	f2c0 8118 	blt.w	90023662 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90023432:	f10e 39ff 	add.w	r9, lr, #4294967295
90023436:	45cc      	cmp	ip, r9
90023438:	f280 8113 	bge.w	90023662 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002343c:	b21b      	sxth	r3, r3
9002343e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023440:	fb0c 2203 	mla	r2, ip, r3, r2
90023444:	eb04 0902 	add.w	r9, r4, r2
90023448:	5ca2      	ldrb	r2, [r4, r2]
9002344a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9002344e:	2800      	cmp	r0, #0
90023450:	f000 80fe 	beq.w	90023650 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90023454:	f899 2001 	ldrb.w	r2, [r9, #1]
90023458:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002345c:	9211      	str	r2, [sp, #68]	@ 0x44
9002345e:	b151      	cbz	r1, 90023476 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90023460:	eb09 0203 	add.w	r2, r9, r3
90023464:	f819 3003 	ldrb.w	r3, [r9, r3]
90023468:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002346c:	930f      	str	r3, [sp, #60]	@ 0x3c
9002346e:	7853      	ldrb	r3, [r2, #1]
90023470:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90023474:	9312      	str	r3, [sp, #72]	@ 0x48
90023476:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90023478:	fb10 f201 	smulbb	r2, r0, r1
9002347c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9002347e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90023482:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023486:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
9002348a:	10d2      	asrs	r2, r2, #3
9002348c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023490:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
90023494:	ea4c 0c03 	orr.w	ip, ip, r3
90023498:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9002349a:	041b      	lsls	r3, r3, #16
9002349c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900234a0:	4323      	orrs	r3, r4
900234a2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900234a4:	4353      	muls	r3, r2
900234a6:	fb09 330c 	mla	r3, r9, ip, r3
900234aa:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
900234ae:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900234b2:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900234b6:	ea4c 0e0e 	orr.w	lr, ip, lr
900234ba:	f1c1 0c10 	rsb	ip, r1, #16
900234be:	ebac 0c00 	sub.w	ip, ip, r0
900234c2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
900234c6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
900234ca:	fb0c 3c0e 	mla	ip, ip, lr, r3
900234ce:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900234d0:	0418      	lsls	r0, r3, #16
900234d2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900234d6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900234da:	4318      	orrs	r0, r3
900234dc:	fb02 c200 	mla	r2, r2, r0, ip
900234e0:	8838      	ldrh	r0, [r7, #0]
900234e2:	0d53      	lsrs	r3, r2, #21
900234e4:	0952      	lsrs	r2, r2, #5
900234e6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900234ea:	1201      	asrs	r1, r0, #8
900234ec:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900234f0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900234f4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900234f8:	00c0      	lsls	r0, r0, #3
900234fa:	431a      	orrs	r2, r3
900234fc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
90023500:	fb11 f104 	smulbb	r1, r1, r4
90023504:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90023508:	b292      	uxth	r2, r2
9002350a:	fb1e fe04 	smulbb	lr, lr, r4
9002350e:	b2c0      	uxtb	r0, r0
90023510:	ea4f 2c22 	mov.w	ip, r2, asr #8
90023514:	fb10 f004 	smulbb	r0, r0, r4
90023518:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9002351c:	fb0c 1c03 	mla	ip, ip, r3, r1
90023520:	10d1      	asrs	r1, r2, #3
90023522:	00d2      	lsls	r2, r2, #3
90023524:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90023528:	fa1f fc8c 	uxth.w	ip, ip
9002352c:	b2d2      	uxtb	r2, r2
9002352e:	fb01 e103 	mla	r1, r1, r3, lr
90023532:	fb02 0303 	mla	r3, r2, r3, r0
90023536:	b289      	uxth	r1, r1
90023538:	b29a      	uxth	r2, r3
9002353a:	f10c 0301 	add.w	r3, ip, #1
9002353e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90023542:	1c53      	adds	r3, r2, #1
90023544:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023548:	1c4a      	adds	r2, r1, #1
9002354a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9002354e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023552:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023556:	0949      	lsrs	r1, r1, #5
90023558:	ea43 030c 	orr.w	r3, r3, ip
9002355c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023560:	430b      	orrs	r3, r1
90023562:	803b      	strh	r3, [r7, #0]
90023564:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90023566:	3702      	adds	r7, #2
90023568:	f10b 3bff 	add.w	fp, fp, #4294967295
9002356c:	449a      	add	sl, r3
9002356e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90023570:	441d      	add	r5, r3
90023572:	e742      	b.n	900233fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90023574:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90023576:	f108 0802 	add.w	r8, r8, #2
9002357a:	449a      	add	sl, r3
9002357c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002357e:	441d      	add	r5, r3
90023580:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023582:	3b01      	subs	r3, #1
90023584:	9309      	str	r3, [sp, #36]	@ 0x24
90023586:	e718      	b.n	900233ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90023588:	d023      	beq.n	900235d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9002358a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002358c:	9825      	ldr	r0, [sp, #148]	@ 0x94
9002358e:	3b01      	subs	r3, #1
90023590:	fb00 a003 	mla	r0, r0, r3, sl
90023594:	1400      	asrs	r0, r0, #16
90023596:	f53f af2d 	bmi.w	900233f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9002359a:	3901      	subs	r1, #1
9002359c:	4288      	cmp	r0, r1
9002359e:	f6bf af29 	bge.w	900233f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900235a2:	9926      	ldr	r1, [sp, #152]	@ 0x98
900235a4:	fb01 5303 	mla	r3, r1, r3, r5
900235a8:	141b      	asrs	r3, r3, #16
900235aa:	f53f af23 	bmi.w	900233f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900235ae:	3a01      	subs	r2, #1
900235b0:	4293      	cmp	r3, r2
900235b2:	f6bf af1f 	bge.w	900233f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900235b6:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
900235ba:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
900235be:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
900235c2:	f1be 0f00 	cmp.w	lr, #0
900235c6:	dc6c      	bgt.n	900236a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900235c8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900235ca:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900235ce:	eb08 0844 	add.w	r8, r8, r4, lsl #1
900235d2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900235d4:	2b00      	cmp	r3, #0
900235d6:	f340 810e 	ble.w	900237f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
900235da:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900235de:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900235e0:	ee30 0a04 	vadd.f32	s0, s0, s8
900235e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
900235e8:	eef0 6a62 	vmov.f32	s13, s5
900235ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
900235f0:	ee31 1a05 	vadd.f32	s2, s2, s10
900235f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900235f8:	ee16 aa90 	vmov	sl, s13
900235fc:	eef0 6a43 	vmov.f32	s13, s6
90023600:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023604:	ee16 5a90 	vmov	r5, s13
90023608:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002360c:	ee61 7a27 	vmul.f32	s15, s2, s15
90023610:	ee77 2a62 	vsub.f32	s5, s14, s5
90023614:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023618:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002361c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023620:	ee12 2a90 	vmov	r2, s5
90023624:	eef0 2a47 	vmov.f32	s5, s14
90023628:	fb92 f3f3 	sdiv	r3, r2, r3
9002362c:	ee13 2a10 	vmov	r2, s6
90023630:	9325      	str	r3, [sp, #148]	@ 0x94
90023632:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023634:	eeb0 3a67 	vmov.f32	s6, s15
90023638:	fb92 f3f3 	sdiv	r3, r2, r3
9002363c:	9326      	str	r3, [sp, #152]	@ 0x98
9002363e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023640:	9a15      	ldr	r2, [sp, #84]	@ 0x54
90023642:	3b01      	subs	r3, #1
90023644:	930c      	str	r3, [sp, #48]	@ 0x30
90023646:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023648:	bf08      	it	eq
9002364a:	4613      	moveq	r3, r2
9002364c:	9309      	str	r3, [sp, #36]	@ 0x24
9002364e:	e6a6      	b.n	9002339e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90023650:	2900      	cmp	r1, #0
90023652:	f43f af10 	beq.w	90023476 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90023656:	f819 3003 	ldrb.w	r3, [r9, r3]
9002365a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002365e:	930f      	str	r3, [sp, #60]	@ 0x3c
90023660:	e709      	b.n	90023476 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90023662:	f112 0901 	adds.w	r9, r2, #1
90023666:	f53f af7d 	bmi.w	90023564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002366a:	454b      	cmp	r3, r9
9002366c:	f6ff af7a 	blt.w	90023564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90023670:	f11c 0901 	adds.w	r9, ip, #1
90023674:	f53f af76 	bmi.w	90023564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90023678:	45ce      	cmp	lr, r9
9002367a:	f6ff af73 	blt.w	90023564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002367e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023680:	b21b      	sxth	r3, r3
90023682:	9202      	str	r2, [sp, #8]
90023684:	fa0f f28e 	sxth.w	r2, lr
90023688:	9300      	str	r3, [sp, #0]
9002368a:	4633      	mov	r3, r6
9002368c:	9201      	str	r2, [sp, #4]
9002368e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90023690:	e9cd 1405 	strd	r1, r4, [sp, #20]
90023694:	e9cd c003 	strd	ip, r0, [sp, #12]
90023698:	4639      	mov	r1, r7
9002369a:	9816      	ldr	r0, [sp, #88]	@ 0x58
9002369c:	f7ff fd8e 	bl	900231bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
900236a0:	e760      	b.n	90023564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900236a2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900236a4:	ea4f 422a 	mov.w	r2, sl, asr #16
900236a8:	1429      	asrs	r1, r5, #16
900236aa:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900236ac:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900236b0:	f3ca 3c03 	ubfx	ip, sl, #12, #4
900236b4:	f3c5 3003 	ubfx	r0, r5, #12, #4
900236b8:	fb03 2101 	mla	r1, r3, r1, r2
900236bc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900236be:	440a      	add	r2, r1
900236c0:	5c61      	ldrb	r1, [r4, r1]
900236c2:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
900236c6:	f1bc 0f00 	cmp.w	ip, #0
900236ca:	f000 808c 	beq.w	900237e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
900236ce:	7857      	ldrb	r7, [r2, #1]
900236d0:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
900236d4:	9413      	str	r4, [sp, #76]	@ 0x4c
900236d6:	b140      	cbz	r0, 900236ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900236d8:	18d7      	adds	r7, r2, r3
900236da:	5cd3      	ldrb	r3, [r2, r3]
900236dc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900236e0:	9310      	str	r3, [sp, #64]	@ 0x40
900236e2:	787b      	ldrb	r3, [r7, #1]
900236e4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900236e8:	9314      	str	r3, [sp, #80]	@ 0x50
900236ea:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900236ec:	fb1c f200 	smulbb	r2, ip, r0
900236f0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900236f2:	f10e 3eff 	add.w	lr, lr, #4294967295
900236f6:	041f      	lsls	r7, r3, #16
900236f8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900236fc:	10d2      	asrs	r2, r2, #3
900236fe:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
90023702:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
90023706:	431f      	orrs	r7, r3
90023708:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
9002370c:	9317      	str	r3, [sp, #92]	@ 0x5c
9002370e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90023710:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90023712:	041b      	lsls	r3, r3, #16
90023714:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023718:	ea43 030b 	orr.w	r3, r3, fp
9002371c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90023720:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90023724:	4353      	muls	r3, r2
90023726:	fb04 3707 	mla	r7, r4, r7, r3
9002372a:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9002372e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023730:	ea43 0b01 	orr.w	fp, r3, r1
90023734:	f1c0 0110 	rsb	r1, r0, #16
90023738:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9002373a:	eba1 0c0c 	sub.w	ip, r1, ip
9002373e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90023742:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90023746:	fb0c 770b 	mla	r7, ip, fp, r7
9002374a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002374e:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
90023752:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023756:	ea4c 0c0b 	orr.w	ip, ip, fp
9002375a:	fb02 770c 	mla	r7, r2, ip, r7
9002375e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90023760:	0d79      	lsrs	r1, r7, #21
90023762:	8812      	ldrh	r2, [r2, #0]
90023764:	097f      	lsrs	r7, r7, #5
90023766:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002376a:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
9002376e:	430f      	orrs	r7, r1
90023770:	1211      	asrs	r1, r2, #8
90023772:	b2bb      	uxth	r3, r7
90023774:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90023778:	10d7      	asrs	r7, r2, #3
9002377a:	fb11 f104 	smulbb	r1, r1, r4
9002377e:	1218      	asrs	r0, r3, #8
90023780:	00d2      	lsls	r2, r2, #3
90023782:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90023786:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002378a:	fb17 f704 	smulbb	r7, r7, r4
9002378e:	b2d2      	uxtb	r2, r2
90023790:	fb00 1009 	mla	r0, r0, r9, r1
90023794:	10d9      	asrs	r1, r3, #3
90023796:	fb12 f204 	smulbb	r2, r2, r4
9002379a:	00db      	lsls	r3, r3, #3
9002379c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900237a0:	b280      	uxth	r0, r0
900237a2:	b2db      	uxtb	r3, r3
900237a4:	fb01 7109 	mla	r1, r1, r9, r7
900237a8:	fb03 2309 	mla	r3, r3, r9, r2
900237ac:	1c42      	adds	r2, r0, #1
900237ae:	b289      	uxth	r1, r1
900237b0:	b29b      	uxth	r3, r3
900237b2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900237b6:	1c4f      	adds	r7, r1, #1
900237b8:	1c5a      	adds	r2, r3, #1
900237ba:	eb07 2111 	add.w	r1, r7, r1, lsr #8
900237be:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900237c2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900237c6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900237c8:	0949      	lsrs	r1, r1, #5
900237ca:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900237ce:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900237d2:	4310      	orrs	r0, r2
900237d4:	4308      	orrs	r0, r1
900237d6:	f823 0b02 	strh.w	r0, [r3], #2
900237da:	930e      	str	r3, [sp, #56]	@ 0x38
900237dc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900237de:	449a      	add	sl, r3
900237e0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900237e2:	441d      	add	r5, r3
900237e4:	e6ed      	b.n	900235c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
900237e6:	2800      	cmp	r0, #0
900237e8:	f43f af7f 	beq.w	900236ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900237ec:	5cd3      	ldrb	r3, [r2, r3]
900237ee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900237f2:	9310      	str	r3, [sp, #64]	@ 0x40
900237f4:	e779      	b.n	900236ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900237f6:	b019      	add	sp, #100	@ 0x64
900237f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900237fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
900237fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90023800:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
90023804:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90023808:	f1b8 0f00 	cmp.w	r8, #0
9002380c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
90023810:	fb08 470e 	mla	r7, r8, lr, r4
90023814:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
90023818:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
9002381c:	eb02 0907 	add.w	r9, r2, r7
90023820:	8808      	ldrh	r0, [r1, #0]
90023822:	db67      	blt.n	900238f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90023824:	45c2      	cmp	sl, r8
90023826:	dd65      	ble.n	900238f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90023828:	2c00      	cmp	r4, #0
9002382a:	db61      	blt.n	900238f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9002382c:	45a6      	cmp	lr, r4
9002382e:	dd5f      	ble.n	900238f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90023830:	5dd2      	ldrb	r2, [r2, r7]
90023832:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90023836:	1c62      	adds	r2, r4, #1
90023838:	d45f      	bmi.n	900238fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002383a:	4596      	cmp	lr, r2
9002383c:	dd5d      	ble.n	900238fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002383e:	2d00      	cmp	r5, #0
90023840:	d05b      	beq.n	900238fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90023842:	f899 2001 	ldrb.w	r2, [r9, #1]
90023846:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
9002384a:	f118 0801 	adds.w	r8, r8, #1
9002384e:	d458      	bmi.n	90023902 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90023850:	45c2      	cmp	sl, r8
90023852:	dd56      	ble.n	90023902 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90023854:	2e00      	cmp	r6, #0
90023856:	d054      	beq.n	90023902 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90023858:	2c00      	cmp	r4, #0
9002385a:	db50      	blt.n	900238fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9002385c:	45a6      	cmp	lr, r4
9002385e:	dd4e      	ble.n	900238fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90023860:	f819 200e 	ldrb.w	r2, [r9, lr]
90023864:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90023868:	3401      	adds	r4, #1
9002386a:	d407      	bmi.n	9002387c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9002386c:	45a6      	cmp	lr, r4
9002386e:	dd05      	ble.n	9002387c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90023870:	b125      	cbz	r5, 9002387c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90023872:	44ce      	add	lr, r9
90023874:	f89e 0001 	ldrb.w	r0, [lr, #1]
90023878:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
9002387c:	fb15 f406 	smulbb	r4, r5, r6
90023880:	ea4f 430c 	mov.w	r3, ip, lsl #16
90023884:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90023888:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9002388c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023890:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90023894:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90023898:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
9002389c:	ea43 0c0c 	orr.w	ip, r3, ip
900238a0:	f1c6 0310 	rsb	r3, r6, #16
900238a4:	ea4e 0707 	orr.w	r7, lr, r7
900238a8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
900238ac:	1b5b      	subs	r3, r3, r5
900238ae:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
900238b2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900238b6:	437d      	muls	r5, r7
900238b8:	fb03 5c0c 	mla	ip, r3, ip, r5
900238bc:	0403      	lsls	r3, r0, #16
900238be:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900238c2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900238c6:	4318      	orrs	r0, r3
900238c8:	0413      	lsls	r3, r2, #16
900238ca:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900238ce:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900238d2:	fb04 c000 	mla	r0, r4, r0, ip
900238d6:	4313      	orrs	r3, r2
900238d8:	fb06 0003 	mla	r0, r6, r3, r0
900238dc:	0d43      	lsrs	r3, r0, #21
900238de:	0940      	lsrs	r0, r0, #5
900238e0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900238e4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900238e8:	4318      	orrs	r0, r3
900238ea:	8008      	strh	r0, [r1, #0]
900238ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900238f0:	4684      	mov	ip, r0
900238f2:	e7a0      	b.n	90023836 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
900238f4:	4607      	mov	r7, r0
900238f6:	4684      	mov	ip, r0
900238f8:	e7a7      	b.n	9002384a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900238fa:	4607      	mov	r7, r0
900238fc:	e7a5      	b.n	9002384a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900238fe:	4602      	mov	r2, r0
90023900:	e7b2      	b.n	90023868 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
90023902:	4602      	mov	r2, r0
90023904:	e7ba      	b.n	9002387c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

90023906 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023906:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002390a:	b093      	sub	sp, #76	@ 0x4c
9002390c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90023910:	920f      	str	r2, [sp, #60]	@ 0x3c
90023912:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90023914:	9010      	str	r0, [sp, #64]	@ 0x40
90023916:	9108      	str	r1, [sp, #32]
90023918:	6850      	ldr	r0, [r2, #4]
9002391a:	9306      	str	r3, [sp, #24]
9002391c:	6812      	ldr	r2, [r2, #0]
9002391e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90023922:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90023926:	fb00 1303 	mla	r3, r0, r3, r1
9002392a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002392e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023930:	681b      	ldr	r3, [r3, #0]
90023932:	9307      	str	r3, [sp, #28]
90023934:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023936:	685f      	ldr	r7, [r3, #4]
90023938:	3704      	adds	r7, #4
9002393a:	9b08      	ldr	r3, [sp, #32]
9002393c:	2b00      	cmp	r3, #0
9002393e:	dc03      	bgt.n	90023948 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90023940:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90023942:	2b00      	cmp	r3, #0
90023944:	f340 81b2 	ble.w	90023cac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90023948:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002394a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002394e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023952:	1e48      	subs	r0, r1, #1
90023954:	f102 3cff 	add.w	ip, r2, #4294967295
90023958:	9b06      	ldr	r3, [sp, #24]
9002395a:	2b00      	cmp	r3, #0
9002395c:	f340 80a9 	ble.w	90023ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90023960:	ea5f 4e24 	movs.w	lr, r4, asr #16
90023964:	ea4f 4326 	mov.w	r3, r6, asr #16
90023968:	d406      	bmi.n	90023978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002396a:	4586      	cmp	lr, r0
9002396c:	da04      	bge.n	90023978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002396e:	2b00      	cmp	r3, #0
90023970:	db02      	blt.n	90023978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90023972:	4563      	cmp	r3, ip
90023974:	f2c0 809e 	blt.w	90023ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90023978:	f11e 0e01 	adds.w	lr, lr, #1
9002397c:	f100 808f 	bmi.w	90023a9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90023980:	4571      	cmp	r1, lr
90023982:	f2c0 808c 	blt.w	90023a9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90023986:	3301      	adds	r3, #1
90023988:	f100 8089 	bmi.w	90023a9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002398c:	429a      	cmp	r2, r3
9002398e:	f2c0 8086 	blt.w	90023a9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90023992:	f8dd b018 	ldr.w	fp, [sp, #24]
90023996:	46c8      	mov	r8, r9
90023998:	f1bb 0f00 	cmp.w	fp, #0
9002399c:	f340 80a6 	ble.w	90023aec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
900239a0:	9a24      	ldr	r2, [sp, #144]	@ 0x90
900239a2:	ea4f 4c26 	mov.w	ip, r6, asr #16
900239a6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900239a8:	f3c4 3003 	ubfx	r0, r4, #12, #4
900239ac:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900239b0:	1422      	asrs	r2, r4, #16
900239b2:	f3c6 3103 	ubfx	r1, r6, #12, #4
900239b6:	689b      	ldr	r3, [r3, #8]
900239b8:	f100 80e3 	bmi.w	90023b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900239bc:	f103 3aff 	add.w	sl, r3, #4294967295
900239c0:	4552      	cmp	r2, sl
900239c2:	f280 80de 	bge.w	90023b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900239c6:	f1bc 0f00 	cmp.w	ip, #0
900239ca:	f2c0 80da 	blt.w	90023b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900239ce:	f10e 3aff 	add.w	sl, lr, #4294967295
900239d2:	45d4      	cmp	ip, sl
900239d4:	f280 80d5 	bge.w	90023b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900239d8:	b21b      	sxth	r3, r3
900239da:	9d07      	ldr	r5, [sp, #28]
900239dc:	fb0c 2203 	mla	r2, ip, r3, r2
900239e0:	eb05 0a02 	add.w	sl, r5, r2
900239e4:	5caa      	ldrb	r2, [r5, r2]
900239e6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
900239ea:	2800      	cmp	r0, #0
900239ec:	f000 80c0 	beq.w	90023b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
900239f0:	f89a 2001 	ldrb.w	r2, [sl, #1]
900239f4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
900239f8:	920b      	str	r2, [sp, #44]	@ 0x2c
900239fa:	b151      	cbz	r1, 90023a12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900239fc:	eb0a 0203 	add.w	r2, sl, r3
90023a00:	f81a 3003 	ldrb.w	r3, [sl, r3]
90023a04:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90023a08:	9309      	str	r3, [sp, #36]	@ 0x24
90023a0a:	7853      	ldrb	r3, [r2, #1]
90023a0c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90023a10:	930c      	str	r3, [sp, #48]	@ 0x30
90023a12:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023a14:	fb10 f201 	smulbb	r2, r0, r1
90023a18:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90023a1a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90023a1e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023a22:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90023a26:	10d2      	asrs	r2, r2, #3
90023a28:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023a2c:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
90023a30:	ea4c 0c03 	orr.w	ip, ip, r3
90023a34:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023a36:	041b      	lsls	r3, r3, #16
90023a38:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023a3c:	432b      	orrs	r3, r5
90023a3e:	4353      	muls	r3, r2
90023a40:	fb0a 330c 	mla	r3, sl, ip, r3
90023a44:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90023a48:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90023a4c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023a50:	ea4c 0e0e 	orr.w	lr, ip, lr
90023a54:	f1c1 0c10 	rsb	ip, r1, #16
90023a58:	ebac 0c00 	sub.w	ip, ip, r0
90023a5c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90023a60:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90023a64:	fb0c 3c0e 	mla	ip, ip, lr, r3
90023a68:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023a6a:	0418      	lsls	r0, r3, #16
90023a6c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023a70:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90023a74:	4318      	orrs	r0, r3
90023a76:	fb02 c200 	mla	r2, r2, r0, ip
90023a7a:	0d53      	lsrs	r3, r2, #21
90023a7c:	0952      	lsrs	r2, r2, #5
90023a7e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023a82:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023a86:	431a      	orrs	r2, r3
90023a88:	f8a8 2000 	strh.w	r2, [r8]
90023a8c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90023a8e:	f108 0802 	add.w	r8, r8, #2
90023a92:	f10b 3bff 	add.w	fp, fp, #4294967295
90023a96:	441c      	add	r4, r3
90023a98:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023a9a:	441e      	add	r6, r3
90023a9c:	e77c      	b.n	90023998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023a9e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90023aa0:	f109 0902 	add.w	r9, r9, #2
90023aa4:	441c      	add	r4, r3
90023aa6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023aa8:	441e      	add	r6, r3
90023aaa:	9b06      	ldr	r3, [sp, #24]
90023aac:	3b01      	subs	r3, #1
90023aae:	9306      	str	r3, [sp, #24]
90023ab0:	e752      	b.n	90023958 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90023ab2:	d020      	beq.n	90023af6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90023ab4:	9b06      	ldr	r3, [sp, #24]
90023ab6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90023ab8:	3b01      	subs	r3, #1
90023aba:	fb00 4003 	mla	r0, r0, r3, r4
90023abe:	1400      	asrs	r0, r0, #16
90023ac0:	f53f af67 	bmi.w	90023992 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90023ac4:	3901      	subs	r1, #1
90023ac6:	4288      	cmp	r0, r1
90023ac8:	f6bf af63 	bge.w	90023992 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90023acc:	9920      	ldr	r1, [sp, #128]	@ 0x80
90023ace:	fb01 6303 	mla	r3, r1, r3, r6
90023ad2:	141b      	asrs	r3, r3, #16
90023ad4:	f53f af5d 	bmi.w	90023992 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90023ad8:	3a01      	subs	r2, #1
90023ada:	4293      	cmp	r3, r2
90023adc:	f6bf af59 	bge.w	90023992 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90023ae0:	f8dd 8018 	ldr.w	r8, [sp, #24]
90023ae4:	46ca      	mov	sl, r9
90023ae6:	f1b8 0f00 	cmp.w	r8, #0
90023aea:	dc67      	bgt.n	90023bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90023aec:	9b06      	ldr	r3, [sp, #24]
90023aee:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90023af2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90023af6:	9b08      	ldr	r3, [sp, #32]
90023af8:	2b00      	cmp	r3, #0
90023afa:	f340 80d7 	ble.w	90023cac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90023afe:	ee30 0a04 	vadd.f32	s0, s0, s8
90023b02:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023b04:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023b08:	eeb0 6a62 	vmov.f32	s12, s5
90023b0c:	eec6 7a80 	vdiv.f32	s15, s13, s0
90023b10:	ee31 1a05 	vadd.f32	s2, s2, s10
90023b14:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90023b18:	ee16 4a10 	vmov	r4, s12
90023b1c:	eeb0 6a43 	vmov.f32	s12, s6
90023b20:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90023b24:	ee16 6a10 	vmov	r6, s12
90023b28:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023b2c:	ee61 7a27 	vmul.f32	s15, s2, s15
90023b30:	ee77 2a62 	vsub.f32	s5, s14, s5
90023b34:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023b38:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023b3c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023b40:	ee12 2a90 	vmov	r2, s5
90023b44:	eef0 2a47 	vmov.f32	s5, s14
90023b48:	fb92 f3f3 	sdiv	r3, r2, r3
90023b4c:	ee13 2a10 	vmov	r2, s6
90023b50:	931f      	str	r3, [sp, #124]	@ 0x7c
90023b52:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023b54:	eeb0 3a67 	vmov.f32	s6, s15
90023b58:	fb92 f3f3 	sdiv	r3, r2, r3
90023b5c:	9320      	str	r3, [sp, #128]	@ 0x80
90023b5e:	9b08      	ldr	r3, [sp, #32]
90023b60:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90023b62:	3b01      	subs	r3, #1
90023b64:	9308      	str	r3, [sp, #32]
90023b66:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023b68:	bf08      	it	eq
90023b6a:	4613      	moveq	r3, r2
90023b6c:	9306      	str	r3, [sp, #24]
90023b6e:	e6e4      	b.n	9002393a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90023b70:	2900      	cmp	r1, #0
90023b72:	f43f af4e 	beq.w	90023a12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90023b76:	f81a 3003 	ldrb.w	r3, [sl, r3]
90023b7a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90023b7e:	9309      	str	r3, [sp, #36]	@ 0x24
90023b80:	e747      	b.n	90023a12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90023b82:	f112 0a01 	adds.w	sl, r2, #1
90023b86:	d481      	bmi.n	90023a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90023b88:	4553      	cmp	r3, sl
90023b8a:	f6ff af7f 	blt.w	90023a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90023b8e:	f11c 0a01 	adds.w	sl, ip, #1
90023b92:	f53f af7b 	bmi.w	90023a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90023b96:	45d6      	cmp	lr, sl
90023b98:	f6ff af78 	blt.w	90023a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90023b9c:	b21b      	sxth	r3, r3
90023b9e:	e9cd 2c02 	strd	r2, ip, [sp, #8]
90023ba2:	fa0f f28e 	sxth.w	r2, lr
90023ba6:	9300      	str	r3, [sp, #0]
90023ba8:	463b      	mov	r3, r7
90023baa:	9201      	str	r2, [sp, #4]
90023bac:	9a07      	ldr	r2, [sp, #28]
90023bae:	e9cd 0104 	strd	r0, r1, [sp, #16]
90023bb2:	4641      	mov	r1, r8
90023bb4:	9810      	ldr	r0, [sp, #64]	@ 0x40
90023bb6:	f7ff fe21 	bl	900237fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90023bba:	e767      	b.n	90023a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90023bbc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023bbe:	1422      	asrs	r2, r4, #16
90023bc0:	1431      	asrs	r1, r6, #16
90023bc2:	9d07      	ldr	r5, [sp, #28]
90023bc4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90023bc8:	f3c4 3e03 	ubfx	lr, r4, #12, #4
90023bcc:	f3c6 3003 	ubfx	r0, r6, #12, #4
90023bd0:	fb03 2101 	mla	r1, r3, r1, r2
90023bd4:	9a07      	ldr	r2, [sp, #28]
90023bd6:	440a      	add	r2, r1
90023bd8:	5c69      	ldrb	r1, [r5, r1]
90023bda:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
90023bde:	f1be 0f00 	cmp.w	lr, #0
90023be2:	d05c      	beq.n	90023c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
90023be4:	f892 c001 	ldrb.w	ip, [r2, #1]
90023be8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
90023bec:	950d      	str	r5, [sp, #52]	@ 0x34
90023bee:	b150      	cbz	r0, 90023c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90023bf0:	eb02 0c03 	add.w	ip, r2, r3
90023bf4:	5cd3      	ldrb	r3, [r2, r3]
90023bf6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90023bfa:	930a      	str	r3, [sp, #40]	@ 0x28
90023bfc:	f89c 3001 	ldrb.w	r3, [ip, #1]
90023c00:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90023c04:	930e      	str	r3, [sp, #56]	@ 0x38
90023c06:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90023c08:	fb1e f200 	smulbb	r2, lr, r0
90023c0c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90023c0e:	f108 38ff 	add.w	r8, r8, #4294967295
90023c12:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90023c16:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023c1a:	10d2      	asrs	r2, r2, #3
90023c1c:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
90023c20:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023c24:	ea4c 0c03 	orr.w	ip, ip, r3
90023c28:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
90023c2c:	9311      	str	r3, [sp, #68]	@ 0x44
90023c2e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90023c30:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90023c32:	041b      	lsls	r3, r3, #16
90023c34:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023c38:	ea43 030b 	orr.w	r3, r3, fp
90023c3c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90023c40:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90023c44:	4353      	muls	r3, r2
90023c46:	fb05 3c0c 	mla	ip, r5, ip, r3
90023c4a:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
90023c4e:	ea43 0b01 	orr.w	fp, r3, r1
90023c52:	f1c0 0110 	rsb	r1, r0, #16
90023c56:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90023c58:	eba1 0e0e 	sub.w	lr, r1, lr
90023c5c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
90023c60:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90023c64:	fb0e cc0b 	mla	ip, lr, fp, ip
90023c68:	ea4f 4b03 	mov.w	fp, r3, lsl #16
90023c6c:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
90023c70:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90023c74:	ea4b 0e0e 	orr.w	lr, fp, lr
90023c78:	fb02 cc0e 	mla	ip, r2, lr, ip
90023c7c:	ea4f 535c 	mov.w	r3, ip, lsr #21
90023c80:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90023c84:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023c88:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90023c8c:	ea43 0c0c 	orr.w	ip, r3, ip
90023c90:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90023c92:	441c      	add	r4, r3
90023c94:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023c96:	f82a cb02 	strh.w	ip, [sl], #2
90023c9a:	441e      	add	r6, r3
90023c9c:	e723      	b.n	90023ae6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90023c9e:	2800      	cmp	r0, #0
90023ca0:	d0b1      	beq.n	90023c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90023ca2:	5cd3      	ldrb	r3, [r2, r3]
90023ca4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90023ca8:	930a      	str	r3, [sp, #40]	@ 0x28
90023caa:	e7ac      	b.n	90023c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90023cac:	b013      	add	sp, #76	@ 0x4c
90023cae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023cb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
90023cb2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023cb6:	880d      	ldrh	r5, [r1, #0]
90023cb8:	b087      	sub	sp, #28
90023cba:	10ef      	asrs	r7, r5, #3
90023cbc:	9103      	str	r1, [sp, #12]
90023cbe:	ea4f 2a25 	mov.w	sl, r5, asr #8
90023cc2:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
90023cc6:	00ed      	lsls	r5, r5, #3
90023cc8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90023ccc:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
90023cd0:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
90023cd4:	b2ed      	uxtb	r5, r5
90023cd6:	9701      	str	r7, [sp, #4]
90023cd8:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
90023cdc:	9502      	str	r5, [sp, #8]
90023cde:	9d01      	ldr	r5, [sp, #4]
90023ce0:	9902      	ldr	r1, [sp, #8]
90023ce2:	022d      	lsls	r5, r5, #8
90023ce4:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
90023ce8:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
90023cec:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
90023cf0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
90023cf4:	430d      	orrs	r5, r1
90023cf6:	fb06 0709 	mla	r7, r6, r9, r0
90023cfa:	2e00      	cmp	r6, #0
90023cfc:	9505      	str	r5, [sp, #20]
90023cfe:	eb02 0c07 	add.w	ip, r2, r7
90023d02:	f2c0 80b6 	blt.w	90023e72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90023d06:	45b3      	cmp	fp, r6
90023d08:	f340 80b3 	ble.w	90023e72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90023d0c:	2800      	cmp	r0, #0
90023d0e:	f2c0 80ae 	blt.w	90023e6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90023d12:	4581      	cmp	r9, r0
90023d14:	f340 80ab 	ble.w	90023e6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90023d18:	5dd7      	ldrb	r7, [r2, r7]
90023d1a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90023d1e:	441f      	add	r7, r3
90023d20:	1c42      	adds	r2, r0, #1
90023d22:	f100 80a9 	bmi.w	90023e78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90023d26:	4591      	cmp	r9, r2
90023d28:	f340 80a6 	ble.w	90023e78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90023d2c:	2c00      	cmp	r4, #0
90023d2e:	f000 80a3 	beq.w	90023e78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90023d32:	f89c 5001 	ldrb.w	r5, [ip, #1]
90023d36:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90023d3a:	441d      	add	r5, r3
90023d3c:	3601      	adds	r6, #1
90023d3e:	f100 809f 	bmi.w	90023e80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90023d42:	45b3      	cmp	fp, r6
90023d44:	f340 809c 	ble.w	90023e80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90023d48:	f1be 0f00 	cmp.w	lr, #0
90023d4c:	f000 8098 	beq.w	90023e80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90023d50:	2800      	cmp	r0, #0
90023d52:	f2c0 8093 	blt.w	90023e7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90023d56:	4581      	cmp	r9, r0
90023d58:	f340 8090 	ble.w	90023e7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90023d5c:	f81c 6009 	ldrb.w	r6, [ip, r9]
90023d60:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90023d64:	441e      	add	r6, r3
90023d66:	3001      	adds	r0, #1
90023d68:	f100 808d 	bmi.w	90023e86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90023d6c:	4581      	cmp	r9, r0
90023d6e:	f340 808a 	ble.w	90023e86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90023d72:	2c00      	cmp	r4, #0
90023d74:	f000 8087 	beq.w	90023e86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90023d78:	44e1      	add	r9, ip
90023d7a:	f899 2001 	ldrb.w	r2, [r9, #1]
90023d7e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023d82:	4413      	add	r3, r2
90023d84:	b2a4      	uxth	r4, r4
90023d86:	f897 c002 	ldrb.w	ip, [r7, #2]
90023d8a:	fa1f fe8e 	uxth.w	lr, lr
90023d8e:	9901      	ldr	r1, [sp, #4]
90023d90:	fb04 fb0e 	mul.w	fp, r4, lr
90023d94:	0124      	lsls	r4, r4, #4
90023d96:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
90023d9a:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
90023d9e:	eba4 040b 	sub.w	r4, r4, fp
90023da2:	fa1f f08e 	uxth.w	r0, lr
90023da6:	b2a2      	uxth	r2, r4
90023da8:	78ac      	ldrb	r4, [r5, #2]
90023daa:	eba9 0900 	sub.w	r9, r9, r0
90023dae:	fa1f fe88 	uxth.w	lr, r8
90023db2:	4354      	muls	r4, r2
90023db4:	ea6f 0808 	mvn.w	r8, r8
90023db8:	fa1f f989 	uxth.w	r9, r9
90023dbc:	fa5f f888 	uxtb.w	r8, r8
90023dc0:	fb09 440c 	mla	r4, r9, ip, r4
90023dc4:	f896 c002 	ldrb.w	ip, [r6, #2]
90023dc8:	fb1a fa08 	smulbb	sl, sl, r8
90023dcc:	fb00 440c 	mla	r4, r0, ip, r4
90023dd0:	f893 c002 	ldrb.w	ip, [r3, #2]
90023dd4:	fb0b 4c0c 	mla	ip, fp, ip, r4
90023dd8:	787c      	ldrb	r4, [r7, #1]
90023dda:	783f      	ldrb	r7, [r7, #0]
90023ddc:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90023de0:	fb0c ac0e 	mla	ip, ip, lr, sl
90023de4:	f895 a001 	ldrb.w	sl, [r5, #1]
90023de8:	782d      	ldrb	r5, [r5, #0]
90023dea:	fb02 fa0a 	mul.w	sl, r2, sl
90023dee:	fa1f fc8c 	uxth.w	ip, ip
90023df2:	436a      	muls	r2, r5
90023df4:	7835      	ldrb	r5, [r6, #0]
90023df6:	fb09 aa04 	mla	sl, r9, r4, sl
90023dfa:	7874      	ldrb	r4, [r6, #1]
90023dfc:	fb09 2207 	mla	r2, r9, r7, r2
90023e00:	fb00 aa04 	mla	sl, r0, r4, sl
90023e04:	785c      	ldrb	r4, [r3, #1]
90023e06:	fb00 2005 	mla	r0, r0, r5, r2
90023e0a:	781b      	ldrb	r3, [r3, #0]
90023e0c:	fb0b a404 	mla	r4, fp, r4, sl
90023e10:	fb11 fa08 	smulbb	sl, r1, r8
90023e14:	fb0b 0b03 	mla	fp, fp, r3, r0
90023e18:	9b02      	ldr	r3, [sp, #8]
90023e1a:	f3c4 2407 	ubfx	r4, r4, #8, #8
90023e1e:	fb13 f808 	smulbb	r8, r3, r8
90023e22:	f3cb 2b07 	ubfx	fp, fp, #8, #8
90023e26:	fb04 a40e 	mla	r4, r4, lr, sl
90023e2a:	f10c 0301 	add.w	r3, ip, #1
90023e2e:	fb0b 8e0e 	mla	lr, fp, lr, r8
90023e32:	b2a4      	uxth	r4, r4
90023e34:	fa1f fe8e 	uxth.w	lr, lr
90023e38:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90023e3c:	f104 0a01 	add.w	sl, r4, #1
90023e40:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
90023e44:	f10e 0c01 	add.w	ip, lr, #1
90023e48:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90023e4c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90023e50:	0964      	lsrs	r4, r4, #5
90023e52:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90023e56:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90023e5a:	ea4c 0c03 	orr.w	ip, ip, r3
90023e5e:	9b03      	ldr	r3, [sp, #12]
90023e60:	ea4c 0c04 	orr.w	ip, ip, r4
90023e64:	f8a3 c000 	strh.w	ip, [r3]
90023e68:	b007      	add	sp, #28
90023e6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023e6e:	af05      	add	r7, sp, #20
90023e70:	e756      	b.n	90023d20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
90023e72:	ad05      	add	r5, sp, #20
90023e74:	462f      	mov	r7, r5
90023e76:	e761      	b.n	90023d3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90023e78:	ad05      	add	r5, sp, #20
90023e7a:	e75f      	b.n	90023d3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90023e7c:	ae05      	add	r6, sp, #20
90023e7e:	e772      	b.n	90023d66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90023e80:	ab05      	add	r3, sp, #20
90023e82:	461e      	mov	r6, r3
90023e84:	e77e      	b.n	90023d84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
90023e86:	ab05      	add	r3, sp, #20
90023e88:	e77c      	b.n	90023d84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

90023e8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023e8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023e8e:	b095      	sub	sp, #84	@ 0x54
90023e90:	9212      	str	r2, [sp, #72]	@ 0x48
90023e92:	9309      	str	r3, [sp, #36]	@ 0x24
90023e94:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90023e96:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
90023e9a:	9013      	str	r0, [sp, #76]	@ 0x4c
90023e9c:	930f      	str	r3, [sp, #60]	@ 0x3c
90023e9e:	6850      	ldr	r0, [r2, #4]
90023ea0:	910e      	str	r1, [sp, #56]	@ 0x38
90023ea2:	6812      	ldr	r2, [r2, #0]
90023ea4:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
90023ea8:	fb00 1303 	mla	r3, r0, r3, r1
90023eac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023eb0:	930a      	str	r3, [sp, #40]	@ 0x28
90023eb2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90023eb4:	681b      	ldr	r3, [r3, #0]
90023eb6:	930d      	str	r3, [sp, #52]	@ 0x34
90023eb8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90023eba:	685c      	ldr	r4, [r3, #4]
90023ebc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90023ebe:	3404      	adds	r4, #4
90023ec0:	43db      	mvns	r3, r3
90023ec2:	b2db      	uxtb	r3, r3
90023ec4:	930b      	str	r3, [sp, #44]	@ 0x2c
90023ec6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90023ec8:	2b00      	cmp	r3, #0
90023eca:	dc03      	bgt.n	90023ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90023ecc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90023ece:	2b00      	cmp	r3, #0
90023ed0:	f340 8255 	ble.w	9002437e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90023ed4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90023ed6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023eda:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023ede:	1e48      	subs	r0, r1, #1
90023ee0:	1e55      	subs	r5, r2, #1
90023ee2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023ee4:	2b00      	cmp	r3, #0
90023ee6:	f340 80f9 	ble.w	900240dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90023eea:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90023eec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023eee:	1436      	asrs	r6, r6, #16
90023ef0:	ea4f 4323 	mov.w	r3, r3, asr #16
90023ef4:	d406      	bmi.n	90023f04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90023ef6:	4286      	cmp	r6, r0
90023ef8:	da04      	bge.n	90023f04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90023efa:	2b00      	cmp	r3, #0
90023efc:	db02      	blt.n	90023f04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90023efe:	42ab      	cmp	r3, r5
90023f00:	f2c0 80ed 	blt.w	900240de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90023f04:	3601      	adds	r6, #1
90023f06:	f100 80da 	bmi.w	900240be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90023f0a:	42b1      	cmp	r1, r6
90023f0c:	f2c0 80d7 	blt.w	900240be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90023f10:	3301      	adds	r3, #1
90023f12:	f100 80d4 	bmi.w	900240be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90023f16:	429a      	cmp	r2, r3
90023f18:	f2c0 80d1 	blt.w	900240be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90023f1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023f1e:	9311      	str	r3, [sp, #68]	@ 0x44
90023f20:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90023f22:	930c      	str	r3, [sp, #48]	@ 0x30
90023f24:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90023f26:	2b00      	cmp	r3, #0
90023f28:	f340 80fa 	ble.w	90024120 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90023f2c:	9826      	ldr	r0, [sp, #152]	@ 0x98
90023f2e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023f30:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90023f32:	68c6      	ldr	r6, [r0, #12]
90023f34:	141d      	asrs	r5, r3, #16
90023f36:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90023f38:	f3c2 3103 	ubfx	r1, r2, #12, #4
90023f3c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90023f3e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90023f40:	1400      	asrs	r0, r0, #16
90023f42:	f3c3 3303 	ubfx	r3, r3, #12, #4
90023f46:	6892      	ldr	r2, [r2, #8]
90023f48:	f100 813e 	bmi.w	900241c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90023f4c:	1e57      	subs	r7, r2, #1
90023f4e:	42b8      	cmp	r0, r7
90023f50:	f280 813a 	bge.w	900241c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90023f54:	2d00      	cmp	r5, #0
90023f56:	f2c0 8137 	blt.w	900241c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90023f5a:	1e77      	subs	r7, r6, #1
90023f5c:	42bd      	cmp	r5, r7
90023f5e:	f280 8133 	bge.w	900241c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90023f62:	b212      	sxth	r2, r2
90023f64:	fb05 0002 	mla	r0, r5, r2, r0
90023f68:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90023f6a:	f815 a000 	ldrb.w	sl, [r5, r0]
90023f6e:	182e      	adds	r6, r5, r0
90023f70:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90023f74:	eb04 050a 	add.w	r5, r4, sl
90023f78:	2b00      	cmp	r3, #0
90023f7a:	f000 8117 	beq.w	900241ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
90023f7e:	f896 c001 	ldrb.w	ip, [r6, #1]
90023f82:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90023f86:	44a4      	add	ip, r4
90023f88:	2900      	cmp	r1, #0
90023f8a:	f000 8117 	beq.w	900241bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
90023f8e:	18b0      	adds	r0, r6, r2
90023f90:	5cb2      	ldrb	r2, [r6, r2]
90023f92:	7840      	ldrb	r0, [r0, #1]
90023f94:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90023f98:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90023f9c:	4422      	add	r2, r4
90023f9e:	4420      	add	r0, r4
90023fa0:	b29b      	uxth	r3, r3
90023fa2:	f89c 7002 	ldrb.w	r7, [ip, #2]
90023fa6:	b289      	uxth	r1, r1
90023fa8:	f895 b002 	ldrb.w	fp, [r5, #2]
90023fac:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90023fae:	fb03 f901 	mul.w	r9, r3, r1
90023fb2:	011b      	lsls	r3, r3, #4
90023fb4:	f8b6 e000 	ldrh.w	lr, [r6]
90023fb8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90023fbc:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
90023fc0:	eba3 0309 	sub.w	r3, r3, r9
90023fc4:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
90023fc8:	b289      	uxth	r1, r1
90023fca:	f814 a00a 	ldrb.w	sl, [r4, sl]
90023fce:	b29b      	uxth	r3, r3
90023fd0:	eba8 0801 	sub.w	r8, r8, r1
90023fd4:	435f      	muls	r7, r3
90023fd6:	fa1f f888 	uxth.w	r8, r8
90023fda:	9310      	str	r3, [sp, #64]	@ 0x40
90023fdc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023fde:	fb08 770b 	mla	r7, r8, fp, r7
90023fe2:	f892 b002 	ldrb.w	fp, [r2, #2]
90023fe6:	fb01 770b 	mla	r7, r1, fp, r7
90023fea:	f890 b002 	ldrb.w	fp, [r0, #2]
90023fee:	fb09 770b 	mla	r7, r9, fp, r7
90023ff2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
90023ff6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90023ffa:	f3c7 2707 	ubfx	r7, r7, #8, #8
90023ffe:	fb1b fb03 	smulbb	fp, fp, r3
90024002:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90024004:	fb07 b706 	mla	r7, r7, r6, fp
90024008:	f895 b001 	ldrb.w	fp, [r5, #1]
9002400c:	f89c 5001 	ldrb.w	r5, [ip, #1]
90024010:	f89c c000 	ldrb.w	ip, [ip]
90024014:	b2bf      	uxth	r7, r7
90024016:	435d      	muls	r5, r3
90024018:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002401a:	fb08 550b 	mla	r5, r8, fp, r5
9002401e:	f892 b001 	ldrb.w	fp, [r2, #1]
90024022:	fb01 550b 	mla	r5, r1, fp, r5
90024026:	f890 b001 	ldrb.w	fp, [r0, #1]
9002402a:	fb09 550b 	mla	r5, r9, fp, r5
9002402e:	ea4f 0bee 	mov.w	fp, lr, asr #3
90024032:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90024036:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9002403a:	f3c5 2507 	ubfx	r5, r5, #8, #8
9002403e:	fa5f fe8e 	uxtb.w	lr, lr
90024042:	fb1b fb03 	smulbb	fp, fp, r3
90024046:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90024048:	fb03 f30c 	mul.w	r3, r3, ip
9002404c:	f892 c000 	ldrb.w	ip, [r2]
90024050:	fb05 b506 	mla	r5, r5, r6, fp
90024054:	fb08 330a 	mla	r3, r8, sl, r3
90024058:	b2ad      	uxth	r5, r5
9002405a:	fb01 330c 	mla	r3, r1, ip, r3
9002405e:	f890 c000 	ldrb.w	ip, [r0]
90024062:	f105 0b01 	add.w	fp, r5, #1
90024066:	fb09 3c0c 	mla	ip, r9, ip, r3
9002406a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002406c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90024070:	fb1e fe03 	smulbb	lr, lr, r3
90024074:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90024078:	1c7b      	adds	r3, r7, #1
9002407a:	096d      	lsrs	r5, r5, #5
9002407c:	fb0c e606 	mla	r6, ip, r6, lr
90024080:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90024084:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024088:	b2b6      	uxth	r6, r6
9002408a:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
9002408e:	1c77      	adds	r7, r6, #1
90024090:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90024094:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90024098:	431f      	orrs	r7, r3
9002409a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002409c:	433d      	orrs	r5, r7
9002409e:	801d      	strh	r5, [r3, #0]
900240a0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900240a2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900240a4:	3302      	adds	r3, #2
900240a6:	930c      	str	r3, [sp, #48]	@ 0x30
900240a8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900240aa:	4413      	add	r3, r2
900240ac:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900240ae:	931f      	str	r3, [sp, #124]	@ 0x7c
900240b0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900240b2:	4413      	add	r3, r2
900240b4:	9320      	str	r3, [sp, #128]	@ 0x80
900240b6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900240b8:	3b01      	subs	r3, #1
900240ba:	9311      	str	r3, [sp, #68]	@ 0x44
900240bc:	e732      	b.n	90023f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900240be:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900240c0:	9e21      	ldr	r6, [sp, #132]	@ 0x84
900240c2:	4433      	add	r3, r6
900240c4:	9e22      	ldr	r6, [sp, #136]	@ 0x88
900240c6:	931f      	str	r3, [sp, #124]	@ 0x7c
900240c8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900240ca:	4433      	add	r3, r6
900240cc:	9320      	str	r3, [sp, #128]	@ 0x80
900240ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900240d0:	3b01      	subs	r3, #1
900240d2:	9309      	str	r3, [sp, #36]	@ 0x24
900240d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900240d6:	3302      	adds	r3, #2
900240d8:	930a      	str	r3, [sp, #40]	@ 0x28
900240da:	e702      	b.n	90023ee2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900240dc:	d027      	beq.n	9002412e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
900240de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900240e0:	9821      	ldr	r0, [sp, #132]	@ 0x84
900240e2:	3b01      	subs	r3, #1
900240e4:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
900240e6:	fb00 5003 	mla	r0, r0, r3, r5
900240ea:	1400      	asrs	r0, r0, #16
900240ec:	f53f af16 	bmi.w	90023f1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900240f0:	3901      	subs	r1, #1
900240f2:	4288      	cmp	r0, r1
900240f4:	f6bf af12 	bge.w	90023f1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900240f8:	9922      	ldr	r1, [sp, #136]	@ 0x88
900240fa:	9820      	ldr	r0, [sp, #128]	@ 0x80
900240fc:	fb01 0303 	mla	r3, r1, r3, r0
90024100:	141b      	asrs	r3, r3, #16
90024102:	f53f af0b 	bmi.w	90023f1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024106:	3a01      	subs	r2, #1
90024108:	4293      	cmp	r3, r2
9002410a:	f6bf af07 	bge.w	90023f1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002410e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024110:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
90024114:	9311      	str	r3, [sp, #68]	@ 0x44
90024116:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024118:	930c      	str	r3, [sp, #48]	@ 0x30
9002411a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002411c:	2b00      	cmp	r3, #0
9002411e:	dc70      	bgt.n	90024202 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90024120:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024122:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90024124:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90024128:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002412c:	930a      	str	r3, [sp, #40]	@ 0x28
9002412e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90024130:	2b00      	cmp	r3, #0
90024132:	f340 8124 	ble.w	9002437e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90024136:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002413a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002413c:	ee30 0a04 	vadd.f32	s0, s0, s8
90024140:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024144:	eef0 6a62 	vmov.f32	s13, s5
90024148:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002414c:	ee31 1a05 	vadd.f32	s2, s2, s10
90024150:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024154:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90024158:	eef0 6a43 	vmov.f32	s13, s6
9002415c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024160:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
90024164:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024168:	ee61 7a27 	vmul.f32	s15, s2, s15
9002416c:	ee77 2a62 	vsub.f32	s5, s14, s5
90024170:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024174:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024178:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002417c:	ee12 2a90 	vmov	r2, s5
90024180:	eef0 2a47 	vmov.f32	s5, s14
90024184:	fb92 f3f3 	sdiv	r3, r2, r3
90024188:	ee13 2a10 	vmov	r2, s6
9002418c:	9321      	str	r3, [sp, #132]	@ 0x84
9002418e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024190:	eeb0 3a67 	vmov.f32	s6, s15
90024194:	fb92 f3f3 	sdiv	r3, r2, r3
90024198:	9322      	str	r3, [sp, #136]	@ 0x88
9002419a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002419c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9002419e:	3b01      	subs	r3, #1
900241a0:	930e      	str	r3, [sp, #56]	@ 0x38
900241a2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900241a4:	bf08      	it	eq
900241a6:	4613      	moveq	r3, r2
900241a8:	9309      	str	r3, [sp, #36]	@ 0x24
900241aa:	e68c      	b.n	90023ec6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900241ac:	b149      	cbz	r1, 900241c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
900241ae:	5cb2      	ldrb	r2, [r6, r2]
900241b0:	4628      	mov	r0, r5
900241b2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900241b6:	4422      	add	r2, r4
900241b8:	46ac      	mov	ip, r5
900241ba:	e6f1      	b.n	90023fa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900241bc:	4628      	mov	r0, r5
900241be:	462a      	mov	r2, r5
900241c0:	e6ee      	b.n	90023fa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900241c2:	4628      	mov	r0, r5
900241c4:	462a      	mov	r2, r5
900241c6:	e7f7      	b.n	900241b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
900241c8:	1c47      	adds	r7, r0, #1
900241ca:	f53f af69 	bmi.w	900240a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900241ce:	42ba      	cmp	r2, r7
900241d0:	f6ff af66 	blt.w	900240a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900241d4:	1c6f      	adds	r7, r5, #1
900241d6:	f53f af63 	bmi.w	900240a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900241da:	42be      	cmp	r6, r7
900241dc:	f6ff af60 	blt.w	900240a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900241e0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900241e2:	b236      	sxth	r6, r6
900241e4:	b212      	sxth	r2, r2
900241e6:	9002      	str	r0, [sp, #8]
900241e8:	9601      	str	r6, [sp, #4]
900241ea:	9200      	str	r2, [sp, #0]
900241ec:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900241ee:	e9cd 1705 	strd	r1, r7, [sp, #20]
900241f2:	e9cd 5303 	strd	r5, r3, [sp, #12]
900241f6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
900241fa:	4623      	mov	r3, r4
900241fc:	f7ff fd59 	bl	90023cb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90024200:	e74e      	b.n	900240a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90024202:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90024204:	9820      	ldr	r0, [sp, #128]	@ 0x80
90024206:	f3c2 3103 	ubfx	r1, r2, #12, #4
9002420a:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
9002420c:	9a26      	ldr	r2, [sp, #152]	@ 0x98
9002420e:	1400      	asrs	r0, r0, #16
90024210:	142d      	asrs	r5, r5, #16
90024212:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90024214:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90024218:	f3c3 3303 	ubfx	r3, r3, #12, #4
9002421c:	fb02 5000 	mla	r0, r2, r0, r5
90024220:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90024222:	f815 9000 	ldrb.w	r9, [r5, r0]
90024226:	182e      	adds	r6, r5, r0
90024228:	eb09 0949 	add.w	r9, r9, r9, lsl #1
9002422c:	eb04 0509 	add.w	r5, r4, r9
90024230:	2b00      	cmp	r3, #0
90024232:	f000 8096 	beq.w	90024362 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90024236:	7877      	ldrb	r7, [r6, #1]
90024238:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9002423c:	4427      	add	r7, r4
9002423e:	2900      	cmp	r1, #0
90024240:	f000 8097 	beq.w	90024372 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90024244:	18b0      	adds	r0, r6, r2
90024246:	5cb2      	ldrb	r2, [r6, r2]
90024248:	7840      	ldrb	r0, [r0, #1]
9002424a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002424e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90024252:	4422      	add	r2, r4
90024254:	4420      	add	r0, r4
90024256:	b29b      	uxth	r3, r3
90024258:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002425a:	b289      	uxth	r1, r1
9002425c:	f895 b002 	ldrb.w	fp, [r5, #2]
90024260:	f8b6 c000 	ldrh.w	ip, [r6]
90024264:	fb03 f801 	mul.w	r8, r3, r1
90024268:	011b      	lsls	r3, r3, #4
9002426a:	78be      	ldrb	r6, [r7, #2]
9002426c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90024270:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90024274:	eba3 0308 	sub.w	r3, r3, r8
90024278:	f814 9009 	ldrb.w	r9, [r4, r9]
9002427c:	b289      	uxth	r1, r1
9002427e:	b29b      	uxth	r3, r3
90024280:	ebae 0e01 	sub.w	lr, lr, r1
90024284:	435e      	muls	r6, r3
90024286:	fa1f fe8e 	uxth.w	lr, lr
9002428a:	9310      	str	r3, [sp, #64]	@ 0x40
9002428c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002428e:	fb0e 660b 	mla	r6, lr, fp, r6
90024292:	f892 b002 	ldrb.w	fp, [r2, #2]
90024296:	fb01 660b 	mla	r6, r1, fp, r6
9002429a:	f890 b002 	ldrb.w	fp, [r0, #2]
9002429e:	fb08 660b 	mla	r6, r8, fp, r6
900242a2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
900242a6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
900242aa:	f3c6 2607 	ubfx	r6, r6, #8, #8
900242ae:	fb1b fb03 	smulbb	fp, fp, r3
900242b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900242b4:	fb06 b60a 	mla	r6, r6, sl, fp
900242b8:	f895 b001 	ldrb.w	fp, [r5, #1]
900242bc:	787d      	ldrb	r5, [r7, #1]
900242be:	783f      	ldrb	r7, [r7, #0]
900242c0:	b2b6      	uxth	r6, r6
900242c2:	435d      	muls	r5, r3
900242c4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900242c6:	fb0e 550b 	mla	r5, lr, fp, r5
900242ca:	f892 b001 	ldrb.w	fp, [r2, #1]
900242ce:	fb01 550b 	mla	r5, r1, fp, r5
900242d2:	f890 b001 	ldrb.w	fp, [r0, #1]
900242d6:	fb08 550b 	mla	r5, r8, fp, r5
900242da:	ea4f 0bec 	mov.w	fp, ip, asr #3
900242de:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900242e2:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
900242e6:	f3c5 2507 	ubfx	r5, r5, #8, #8
900242ea:	fa5f fc8c 	uxtb.w	ip, ip
900242ee:	fb1b fb03 	smulbb	fp, fp, r3
900242f2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900242f4:	437b      	muls	r3, r7
900242f6:	7817      	ldrb	r7, [r2, #0]
900242f8:	fb05 b50a 	mla	r5, r5, sl, fp
900242fc:	fb0e 3309 	mla	r3, lr, r9, r3
90024300:	b2ad      	uxth	r5, r5
90024302:	fb01 3307 	mla	r3, r1, r7, r3
90024306:	7807      	ldrb	r7, [r0, #0]
90024308:	f105 0b01 	add.w	fp, r5, #1
9002430c:	fb08 3707 	mla	r7, r8, r7, r3
90024310:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024312:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90024316:	fb1c fc03 	smulbb	ip, ip, r3
9002431a:	f3c7 2707 	ubfx	r7, r7, #8, #8
9002431e:	1c73      	adds	r3, r6, #1
90024320:	096d      	lsrs	r5, r5, #5
90024322:	fb07 c70a 	mla	r7, r7, sl, ip
90024326:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9002432a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002432e:	b2bf      	uxth	r7, r7
90024330:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024332:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90024336:	1c7a      	adds	r2, r7, #1
90024338:	eb02 2217 	add.w	r2, r2, r7, lsr #8
9002433c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90024340:	4316      	orrs	r6, r2
90024342:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90024344:	432e      	orrs	r6, r5
90024346:	f823 6b02 	strh.w	r6, [r3], #2
9002434a:	930c      	str	r3, [sp, #48]	@ 0x30
9002434c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002434e:	4413      	add	r3, r2
90024350:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90024352:	931f      	str	r3, [sp, #124]	@ 0x7c
90024354:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024356:	4413      	add	r3, r2
90024358:	9320      	str	r3, [sp, #128]	@ 0x80
9002435a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002435c:	3b01      	subs	r3, #1
9002435e:	9311      	str	r3, [sp, #68]	@ 0x44
90024360:	e6db      	b.n	9002411a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
90024362:	b149      	cbz	r1, 90024378 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90024364:	5cb2      	ldrb	r2, [r6, r2]
90024366:	4628      	mov	r0, r5
90024368:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002436c:	4422      	add	r2, r4
9002436e:	462f      	mov	r7, r5
90024370:	e771      	b.n	90024256 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90024372:	4628      	mov	r0, r5
90024374:	462a      	mov	r2, r5
90024376:	e76e      	b.n	90024256 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90024378:	4628      	mov	r0, r5
9002437a:	462a      	mov	r2, r5
9002437c:	e7f7      	b.n	9002436e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002437e:	b015      	add	sp, #84	@ 0x54
90024380:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024384 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90024384:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024388:	880f      	ldrh	r7, [r1, #0]
9002438a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
9002438e:	023c      	lsls	r4, r7, #8
90024390:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90024394:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
90024398:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
9002439c:	017c      	lsls	r4, r7, #5
9002439e:	00ff      	lsls	r7, r7, #3
900243a0:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
900243a4:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
900243a8:	b2ff      	uxtb	r7, r7
900243aa:	ea4b 0404 	orr.w	r4, fp, r4
900243ae:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
900243b2:	4327      	orrs	r7, r4
900243b4:	fb05 ca0e 	mla	sl, r5, lr, ip
900243b8:	2d00      	cmp	r5, #0
900243ba:	9701      	str	r7, [sp, #4]
900243bc:	eb02 080a 	add.w	r8, r2, sl
900243c0:	db7e      	blt.n	900244c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
900243c2:	45a9      	cmp	r9, r5
900243c4:	dd7c      	ble.n	900244c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
900243c6:	f1bc 0f00 	cmp.w	ip, #0
900243ca:	db77      	blt.n	900244bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
900243cc:	45e6      	cmp	lr, ip
900243ce:	dd75      	ble.n	900244bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
900243d0:	f812 700a 	ldrb.w	r7, [r2, sl]
900243d4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
900243d8:	441f      	add	r7, r3
900243da:	f11c 0201 	adds.w	r2, ip, #1
900243de:	d472      	bmi.n	900244c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900243e0:	4596      	cmp	lr, r2
900243e2:	dd70      	ble.n	900244c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900243e4:	2800      	cmp	r0, #0
900243e6:	d06e      	beq.n	900244c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900243e8:	f898 4001 	ldrb.w	r4, [r8, #1]
900243ec:	eb04 0444 	add.w	r4, r4, r4, lsl #1
900243f0:	441c      	add	r4, r3
900243f2:	3501      	adds	r5, #1
900243f4:	d46b      	bmi.n	900244ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900243f6:	45a9      	cmp	r9, r5
900243f8:	dd69      	ble.n	900244ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900243fa:	2e00      	cmp	r6, #0
900243fc:	d067      	beq.n	900244ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900243fe:	f1bc 0f00 	cmp.w	ip, #0
90024402:	db62      	blt.n	900244ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90024404:	45e6      	cmp	lr, ip
90024406:	dd60      	ble.n	900244ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90024408:	f818 500e 	ldrb.w	r5, [r8, lr]
9002440c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90024410:	441d      	add	r5, r3
90024412:	f11c 0201 	adds.w	r2, ip, #1
90024416:	d45d      	bmi.n	900244d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90024418:	4596      	cmp	lr, r2
9002441a:	dd5b      	ble.n	900244d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9002441c:	2800      	cmp	r0, #0
9002441e:	d059      	beq.n	900244d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90024420:	44c6      	add	lr, r8
90024422:	f89e 2001 	ldrb.w	r2, [lr, #1]
90024426:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002442a:	4413      	add	r3, r2
9002442c:	b280      	uxth	r0, r0
9002442e:	f897 e002 	ldrb.w	lr, [r7, #2]
90024432:	b2b2      	uxth	r2, r6
90024434:	f897 9000 	ldrb.w	r9, [r7]
90024438:	787f      	ldrb	r7, [r7, #1]
9002443a:	fb00 f602 	mul.w	r6, r0, r2
9002443e:	0100      	lsls	r0, r0, #4
90024440:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90024444:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
90024448:	1b80      	subs	r0, r0, r6
9002444a:	fa1f fc82 	uxth.w	ip, r2
9002444e:	b282      	uxth	r2, r0
90024450:	78a0      	ldrb	r0, [r4, #2]
90024452:	eba8 080c 	sub.w	r8, r8, ip
90024456:	4350      	muls	r0, r2
90024458:	fa1f f888 	uxth.w	r8, r8
9002445c:	fb08 0e0e 	mla	lr, r8, lr, r0
90024460:	78a8      	ldrb	r0, [r5, #2]
90024462:	fb0c e000 	mla	r0, ip, r0, lr
90024466:	f893 e002 	ldrb.w	lr, [r3, #2]
9002446a:	fb06 0e0e 	mla	lr, r6, lr, r0
9002446e:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
90024472:	f894 e000 	ldrb.w	lr, [r4]
90024476:	fb02 fe0e 	mul.w	lr, r2, lr
9002447a:	fb08 e909 	mla	r9, r8, r9, lr
9002447e:	f895 e000 	ldrb.w	lr, [r5]
90024482:	fb0c 990e 	mla	r9, ip, lr, r9
90024486:	f893 e000 	ldrb.w	lr, [r3]
9002448a:	785b      	ldrb	r3, [r3, #1]
9002448c:	fb06 9e0e 	mla	lr, r6, lr, r9
90024490:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90024494:	ea4e 0e00 	orr.w	lr, lr, r0
90024498:	7860      	ldrb	r0, [r4, #1]
9002449a:	4350      	muls	r0, r2
9002449c:	786a      	ldrb	r2, [r5, #1]
9002449e:	fb08 0007 	mla	r0, r8, r7, r0
900244a2:	fb0c 0202 	mla	r2, ip, r2, r0
900244a6:	fb06 2303 	mla	r3, r6, r3, r2
900244aa:	095b      	lsrs	r3, r3, #5
900244ac:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900244b0:	ea4e 0303 	orr.w	r3, lr, r3
900244b4:	800b      	strh	r3, [r1, #0]
900244b6:	b003      	add	sp, #12
900244b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900244bc:	af01      	add	r7, sp, #4
900244be:	e78c      	b.n	900243da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
900244c0:	ac01      	add	r4, sp, #4
900244c2:	4627      	mov	r7, r4
900244c4:	e795      	b.n	900243f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
900244c6:	ac01      	add	r4, sp, #4
900244c8:	e793      	b.n	900243f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
900244ca:	ad01      	add	r5, sp, #4
900244cc:	e7a1      	b.n	90024412 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
900244ce:	ab01      	add	r3, sp, #4
900244d0:	461d      	mov	r5, r3
900244d2:	e7ab      	b.n	9002442c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
900244d4:	ab01      	add	r3, sp, #4
900244d6:	e7a9      	b.n	9002442c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

900244d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900244d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900244dc:	b08f      	sub	sp, #60	@ 0x3c
900244de:	920c      	str	r2, [sp, #48]	@ 0x30
900244e0:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
900244e2:	900d      	str	r0, [sp, #52]	@ 0x34
900244e4:	910a      	str	r1, [sp, #40]	@ 0x28
900244e6:	6850      	ldr	r0, [r2, #4]
900244e8:	9306      	str	r3, [sp, #24]
900244ea:	6812      	ldr	r2, [r2, #0]
900244ec:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
900244f0:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
900244f4:	fb00 1303 	mla	r3, r0, r3, r1
900244f8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900244fc:	9307      	str	r3, [sp, #28]
900244fe:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024500:	681b      	ldr	r3, [r3, #0]
90024502:	9308      	str	r3, [sp, #32]
90024504:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024506:	685c      	ldr	r4, [r3, #4]
90024508:	3404      	adds	r4, #4
9002450a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002450c:	2b00      	cmp	r3, #0
9002450e:	dc03      	bgt.n	90024518 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90024510:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024512:	2b00      	cmp	r3, #0
90024514:	f340 81d5 	ble.w	900248c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90024518:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002451a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002451e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024522:	1e48      	subs	r0, r1, #1
90024524:	1e56      	subs	r6, r2, #1
90024526:	9b06      	ldr	r3, [sp, #24]
90024528:	2b00      	cmp	r3, #0
9002452a:	f340 80b6 	ble.w	9002469a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002452e:	ea5f 472b 	movs.w	r7, fp, asr #16
90024532:	ea4f 4325 	mov.w	r3, r5, asr #16
90024536:	d406      	bmi.n	90024546 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90024538:	4287      	cmp	r7, r0
9002453a:	da04      	bge.n	90024546 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9002453c:	2b00      	cmp	r3, #0
9002453e:	db02      	blt.n	90024546 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90024540:	42b3      	cmp	r3, r6
90024542:	f2c0 80ab 	blt.w	9002469c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90024546:	3701      	adds	r7, #1
90024548:	f100 809c 	bmi.w	90024684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002454c:	42b9      	cmp	r1, r7
9002454e:	f2c0 8099 	blt.w	90024684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90024552:	3301      	adds	r3, #1
90024554:	f100 8096 	bmi.w	90024684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90024558:	429a      	cmp	r2, r3
9002455a:	f2c0 8093 	blt.w	90024684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002455e:	9b06      	ldr	r3, [sp, #24]
90024560:	930b      	str	r3, [sp, #44]	@ 0x2c
90024562:	9b07      	ldr	r3, [sp, #28]
90024564:	9309      	str	r3, [sp, #36]	@ 0x24
90024566:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024568:	2b00      	cmp	r3, #0
9002456a:	f340 80b4 	ble.w	900246d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9002456e:	9820      	ldr	r0, [sp, #128]	@ 0x80
90024570:	142e      	asrs	r6, r5, #16
90024572:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90024574:	f3cb 3303 	ubfx	r3, fp, #12, #4
90024578:	68c7      	ldr	r7, [r0, #12]
9002457a:	ea5f 402b 	movs.w	r0, fp, asr #16
9002457e:	f3c5 3103 	ubfx	r1, r5, #12, #4
90024582:	6892      	ldr	r2, [r2, #8]
90024584:	f100 80fb 	bmi.w	9002477e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90024588:	f102 3cff 	add.w	ip, r2, #4294967295
9002458c:	4560      	cmp	r0, ip
9002458e:	f280 80f6 	bge.w	9002477e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90024592:	2e00      	cmp	r6, #0
90024594:	f2c0 80f3 	blt.w	9002477e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90024598:	f107 3cff 	add.w	ip, r7, #4294967295
9002459c:	4566      	cmp	r6, ip
9002459e:	f280 80ee 	bge.w	9002477e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900245a2:	b212      	sxth	r2, r2
900245a4:	fb06 0002 	mla	r0, r6, r2, r0
900245a8:	9e08      	ldr	r6, [sp, #32]
900245aa:	1837      	adds	r7, r6, r0
900245ac:	5c30      	ldrb	r0, [r6, r0]
900245ae:	eb00 0840 	add.w	r8, r0, r0, lsl #1
900245b2:	eb04 0c08 	add.w	ip, r4, r8
900245b6:	2b00      	cmp	r3, #0
900245b8:	f000 80d3 	beq.w	90024762 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
900245bc:	787e      	ldrb	r6, [r7, #1]
900245be:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900245c2:	4426      	add	r6, r4
900245c4:	2900      	cmp	r1, #0
900245c6:	f000 80d4 	beq.w	90024772 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
900245ca:	18b8      	adds	r0, r7, r2
900245cc:	5cba      	ldrb	r2, [r7, r2]
900245ce:	7840      	ldrb	r0, [r0, #1]
900245d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900245d4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900245d8:	4422      	add	r2, r4
900245da:	4420      	add	r0, r4
900245dc:	b29b      	uxth	r3, r3
900245de:	78b7      	ldrb	r7, [r6, #2]
900245e0:	b289      	uxth	r1, r1
900245e2:	f89c a002 	ldrb.w	sl, [ip, #2]
900245e6:	f89c c001 	ldrb.w	ip, [ip, #1]
900245ea:	fb03 f901 	mul.w	r9, r3, r1
900245ee:	011b      	lsls	r3, r3, #4
900245f0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900245f4:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
900245f8:	eba3 0309 	sub.w	r3, r3, r9
900245fc:	b289      	uxth	r1, r1
900245fe:	b29b      	uxth	r3, r3
90024600:	ebae 0e01 	sub.w	lr, lr, r1
90024604:	435f      	muls	r7, r3
90024606:	fa1f fe8e 	uxth.w	lr, lr
9002460a:	fb0e 770a 	mla	r7, lr, sl, r7
9002460e:	f892 a002 	ldrb.w	sl, [r2, #2]
90024612:	fb01 770a 	mla	r7, r1, sl, r7
90024616:	f890 a002 	ldrb.w	sl, [r0, #2]
9002461a:	fb09 7a0a 	mla	sl, r9, sl, r7
9002461e:	f814 7008 	ldrb.w	r7, [r4, r8]
90024622:	f896 8000 	ldrb.w	r8, [r6]
90024626:	7876      	ldrb	r6, [r6, #1]
90024628:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
9002462c:	fb03 f808 	mul.w	r8, r3, r8
90024630:	4373      	muls	r3, r6
90024632:	fb0e 8807 	mla	r8, lr, r7, r8
90024636:	7817      	ldrb	r7, [r2, #0]
90024638:	fb0e 330c 	mla	r3, lr, ip, r3
9002463c:	fb01 8807 	mla	r8, r1, r7, r8
90024640:	7807      	ldrb	r7, [r0, #0]
90024642:	fb09 8707 	mla	r7, r9, r7, r8
90024646:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002464a:	ea47 070a 	orr.w	r7, r7, sl
9002464e:	f892 a001 	ldrb.w	sl, [r2, #1]
90024652:	fb01 310a 	mla	r1, r1, sl, r3
90024656:	f890 a001 	ldrb.w	sl, [r0, #1]
9002465a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002465c:	fb09 1a0a 	mla	sl, r9, sl, r1
90024660:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90024664:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90024668:	ea47 070a 	orr.w	r7, r7, sl
9002466c:	801f      	strh	r7, [r3, #0]
9002466e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024670:	3302      	adds	r3, #2
90024672:	9309      	str	r3, [sp, #36]	@ 0x24
90024674:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90024676:	449b      	add	fp, r3
90024678:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002467a:	441d      	add	r5, r3
9002467c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002467e:	3b01      	subs	r3, #1
90024680:	930b      	str	r3, [sp, #44]	@ 0x2c
90024682:	e770      	b.n	90024566 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024684:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90024686:	449b      	add	fp, r3
90024688:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002468a:	441d      	add	r5, r3
9002468c:	9b06      	ldr	r3, [sp, #24]
9002468e:	3b01      	subs	r3, #1
90024690:	9306      	str	r3, [sp, #24]
90024692:	9b07      	ldr	r3, [sp, #28]
90024694:	3302      	adds	r3, #2
90024696:	9307      	str	r3, [sp, #28]
90024698:	e745      	b.n	90024526 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
9002469a:	d023      	beq.n	900246e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
9002469c:	9b06      	ldr	r3, [sp, #24]
9002469e:	981b      	ldr	r0, [sp, #108]	@ 0x6c
900246a0:	3b01      	subs	r3, #1
900246a2:	fb00 b003 	mla	r0, r0, r3, fp
900246a6:	1400      	asrs	r0, r0, #16
900246a8:	f53f af59 	bmi.w	9002455e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900246ac:	3901      	subs	r1, #1
900246ae:	4288      	cmp	r0, r1
900246b0:	f6bf af55 	bge.w	9002455e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900246b4:	991c      	ldr	r1, [sp, #112]	@ 0x70
900246b6:	fb01 5303 	mla	r3, r1, r3, r5
900246ba:	141b      	asrs	r3, r3, #16
900246bc:	f53f af4f 	bmi.w	9002455e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900246c0:	3a01      	subs	r2, #1
900246c2:	4293      	cmp	r3, r2
900246c4:	f6bf af4b 	bge.w	9002455e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900246c8:	9b06      	ldr	r3, [sp, #24]
900246ca:	9309      	str	r3, [sp, #36]	@ 0x24
900246cc:	9b07      	ldr	r3, [sp, #28]
900246ce:	930b      	str	r3, [sp, #44]	@ 0x2c
900246d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900246d2:	2b00      	cmp	r3, #0
900246d4:	dc70      	bgt.n	900247b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
900246d6:	9b06      	ldr	r3, [sp, #24]
900246d8:	9a07      	ldr	r2, [sp, #28]
900246da:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900246de:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900246e2:	9307      	str	r3, [sp, #28]
900246e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900246e6:	2b00      	cmp	r3, #0
900246e8:	f340 80eb 	ble.w	900248c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
900246ec:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900246f0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900246f2:	ee30 0a04 	vadd.f32	s0, s0, s8
900246f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900246fa:	eef0 6a62 	vmov.f32	s13, s5
900246fe:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024702:	ee31 1a05 	vadd.f32	s2, s2, s10
90024706:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002470a:	ee16 ba90 	vmov	fp, s13
9002470e:	eef0 6a43 	vmov.f32	s13, s6
90024712:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024716:	ee16 5a90 	vmov	r5, s13
9002471a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002471e:	ee61 7a27 	vmul.f32	s15, s2, s15
90024722:	ee77 2a62 	vsub.f32	s5, s14, s5
90024726:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002472a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002472e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024732:	ee12 2a90 	vmov	r2, s5
90024736:	eef0 2a47 	vmov.f32	s5, s14
9002473a:	fb92 f3f3 	sdiv	r3, r2, r3
9002473e:	ee13 2a10 	vmov	r2, s6
90024742:	931b      	str	r3, [sp, #108]	@ 0x6c
90024744:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90024746:	eeb0 3a67 	vmov.f32	s6, s15
9002474a:	fb92 f3f3 	sdiv	r3, r2, r3
9002474e:	931c      	str	r3, [sp, #112]	@ 0x70
90024750:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024752:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90024754:	3b01      	subs	r3, #1
90024756:	930a      	str	r3, [sp, #40]	@ 0x28
90024758:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002475a:	bf08      	it	eq
9002475c:	4613      	moveq	r3, r2
9002475e:	9306      	str	r3, [sp, #24]
90024760:	e6d3      	b.n	9002450a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90024762:	b149      	cbz	r1, 90024778 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90024764:	5cba      	ldrb	r2, [r7, r2]
90024766:	4660      	mov	r0, ip
90024768:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002476c:	4422      	add	r2, r4
9002476e:	4666      	mov	r6, ip
90024770:	e734      	b.n	900245dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90024772:	4660      	mov	r0, ip
90024774:	4662      	mov	r2, ip
90024776:	e731      	b.n	900245dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90024778:	4660      	mov	r0, ip
9002477a:	4662      	mov	r2, ip
9002477c:	e7f7      	b.n	9002476e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9002477e:	f110 0c01 	adds.w	ip, r0, #1
90024782:	f53f af74 	bmi.w	9002466e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024786:	4562      	cmp	r2, ip
90024788:	f6ff af71 	blt.w	9002466e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002478c:	f116 0c01 	adds.w	ip, r6, #1
90024790:	f53f af6d 	bmi.w	9002466e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024794:	4567      	cmp	r7, ip
90024796:	f6ff af6a 	blt.w	9002466e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002479a:	b23f      	sxth	r7, r7
9002479c:	b212      	sxth	r2, r2
9002479e:	9701      	str	r7, [sp, #4]
900247a0:	9200      	str	r2, [sp, #0]
900247a2:	e9cd 3104 	strd	r3, r1, [sp, #16]
900247a6:	e9cd 0602 	strd	r0, r6, [sp, #8]
900247aa:	4623      	mov	r3, r4
900247ac:	980d      	ldr	r0, [sp, #52]	@ 0x34
900247ae:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
900247b2:	f7ff fde7 	bl	90024384 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
900247b6:	e75a      	b.n	9002466e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900247b8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900247ba:	ea4f 462b 	mov.w	r6, fp, asr #16
900247be:	1428      	asrs	r0, r5, #16
900247c0:	f3cb 3303 	ubfx	r3, fp, #12, #4
900247c4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
900247c8:	f3c5 3103 	ubfx	r1, r5, #12, #4
900247cc:	fb02 6000 	mla	r0, r2, r0, r6
900247d0:	9e08      	ldr	r6, [sp, #32]
900247d2:	f816 8000 	ldrb.w	r8, [r6, r0]
900247d6:	1837      	adds	r7, r6, r0
900247d8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
900247dc:	eb04 0c08 	add.w	ip, r4, r8
900247e0:	2b00      	cmp	r3, #0
900247e2:	d060      	beq.n	900248a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
900247e4:	787e      	ldrb	r6, [r7, #1]
900247e6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900247ea:	4426      	add	r6, r4
900247ec:	2900      	cmp	r1, #0
900247ee:	d062      	beq.n	900248b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
900247f0:	18b8      	adds	r0, r7, r2
900247f2:	5cba      	ldrb	r2, [r7, r2]
900247f4:	7840      	ldrb	r0, [r0, #1]
900247f6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900247fa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900247fe:	4422      	add	r2, r4
90024800:	4420      	add	r0, r4
90024802:	b29b      	uxth	r3, r3
90024804:	78b7      	ldrb	r7, [r6, #2]
90024806:	b289      	uxth	r1, r1
90024808:	f89c a002 	ldrb.w	sl, [ip, #2]
9002480c:	f89c c001 	ldrb.w	ip, [ip, #1]
90024810:	fb03 f901 	mul.w	r9, r3, r1
90024814:	011b      	lsls	r3, r3, #4
90024816:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002481a:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
9002481e:	eba3 0309 	sub.w	r3, r3, r9
90024822:	b289      	uxth	r1, r1
90024824:	b29b      	uxth	r3, r3
90024826:	ebae 0e01 	sub.w	lr, lr, r1
9002482a:	435f      	muls	r7, r3
9002482c:	fa1f fe8e 	uxth.w	lr, lr
90024830:	fb0e 770a 	mla	r7, lr, sl, r7
90024834:	f892 a002 	ldrb.w	sl, [r2, #2]
90024838:	fb01 770a 	mla	r7, r1, sl, r7
9002483c:	f890 a002 	ldrb.w	sl, [r0, #2]
90024840:	fb09 7a0a 	mla	sl, r9, sl, r7
90024844:	f814 7008 	ldrb.w	r7, [r4, r8]
90024848:	f896 8000 	ldrb.w	r8, [r6]
9002484c:	7876      	ldrb	r6, [r6, #1]
9002484e:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90024852:	fb03 f808 	mul.w	r8, r3, r8
90024856:	4373      	muls	r3, r6
90024858:	7856      	ldrb	r6, [r2, #1]
9002485a:	fb0e 8807 	mla	r8, lr, r7, r8
9002485e:	7817      	ldrb	r7, [r2, #0]
90024860:	fb0e 330c 	mla	r3, lr, ip, r3
90024864:	fb01 8807 	mla	r8, r1, r7, r8
90024868:	7807      	ldrb	r7, [r0, #0]
9002486a:	fb01 3306 	mla	r3, r1, r6, r3
9002486e:	fb09 8707 	mla	r7, r9, r7, r8
90024872:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90024876:	ea47 070a 	orr.w	r7, r7, sl
9002487a:	f890 a001 	ldrb.w	sl, [r0, #1]
9002487e:	fb09 3a0a 	mla	sl, r9, sl, r3
90024882:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024884:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90024888:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9002488c:	ea47 070a 	orr.w	r7, r7, sl
90024890:	f823 7b02 	strh.w	r7, [r3], #2
90024894:	930b      	str	r3, [sp, #44]	@ 0x2c
90024896:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90024898:	449b      	add	fp, r3
9002489a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002489c:	441d      	add	r5, r3
9002489e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900248a0:	3b01      	subs	r3, #1
900248a2:	9309      	str	r3, [sp, #36]	@ 0x24
900248a4:	e714      	b.n	900246d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
900248a6:	b149      	cbz	r1, 900248bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
900248a8:	5cba      	ldrb	r2, [r7, r2]
900248aa:	4660      	mov	r0, ip
900248ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900248b0:	4422      	add	r2, r4
900248b2:	4666      	mov	r6, ip
900248b4:	e7a5      	b.n	90024802 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900248b6:	4660      	mov	r0, ip
900248b8:	4662      	mov	r2, ip
900248ba:	e7a2      	b.n	90024802 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900248bc:	4660      	mov	r0, ip
900248be:	4662      	mov	r2, ip
900248c0:	e7f7      	b.n	900248b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
900248c2:	b00f      	add	sp, #60	@ 0x3c
900248c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900248c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
900248c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900248cc:	b085      	sub	sp, #20
900248ce:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
900248d2:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
900248d6:	9102      	str	r1, [sp, #8]
900248d8:	2c00      	cmp	r4, #0
900248da:	fb04 710c 	mla	r1, r4, ip, r7
900248de:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
900248e2:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
900248e6:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
900248ea:	eb02 0e01 	add.w	lr, r2, r1
900248ee:	f2c0 8122 	blt.w	90024b36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900248f2:	45a0      	cmp	r8, r4
900248f4:	f340 811f 	ble.w	90024b36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900248f8:	2f00      	cmp	r7, #0
900248fa:	f2c0 811a 	blt.w	90024b32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
900248fe:	45bc      	cmp	ip, r7
90024900:	f340 8117 	ble.w	90024b32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90024904:	5c52      	ldrb	r2, [r2, r1]
90024906:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
9002490a:	1c7a      	adds	r2, r7, #1
9002490c:	f100 8116 	bmi.w	90024b3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90024910:	4594      	cmp	ip, r2
90024912:	f340 8113 	ble.w	90024b3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90024916:	2e00      	cmp	r6, #0
90024918:	f000 8112 	beq.w	90024b40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
9002491c:	f89e 2001 	ldrb.w	r2, [lr, #1]
90024920:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90024924:	3401      	adds	r4, #1
90024926:	f100 810f 	bmi.w	90024b48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9002492a:	45a0      	cmp	r8, r4
9002492c:	f340 810c 	ble.w	90024b48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90024930:	2800      	cmp	r0, #0
90024932:	f000 810c 	beq.w	90024b4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90024936:	2f00      	cmp	r7, #0
90024938:	f2c0 8104 	blt.w	90024b44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9002493c:	45bc      	cmp	ip, r7
9002493e:	f340 8101 	ble.w	90024b44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90024942:	f81e 200c 	ldrb.w	r2, [lr, ip]
90024946:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
9002494a:	3701      	adds	r7, #1
9002494c:	f100 8102 	bmi.w	90024b54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90024950:	45bc      	cmp	ip, r7
90024952:	f340 80ff 	ble.w	90024b54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90024956:	2e00      	cmp	r6, #0
90024958:	f000 80fe 	beq.w	90024b58 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
9002495c:	44f4      	add	ip, lr
9002495e:	f89c 2001 	ldrb.w	r2, [ip, #1]
90024962:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90024966:	b2b6      	uxth	r6, r6
90024968:	b280      	uxth	r0, r0
9002496a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9002496e:	fb00 fe06 	mul.w	lr, r0, r6
90024972:	0136      	lsls	r6, r6, #4
90024974:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90024978:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9002497c:	eba6 070e 	sub.w	r7, r6, lr
90024980:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90024984:	ea4f 6914 	mov.w	r9, r4, lsr #24
90024988:	b280      	uxth	r0, r0
9002498a:	b2bf      	uxth	r7, r7
9002498c:	1a1b      	subs	r3, r3, r0
9002498e:	ea4f 6812 	mov.w	r8, r2, lsr #24
90024992:	fb0a f607 	mul.w	r6, sl, r7
90024996:	b29b      	uxth	r3, r3
90024998:	fb0b 6603 	mla	r6, fp, r3, r6
9002499c:	fb00 6609 	mla	r6, r0, r9, r6
900249a0:	fb0e 6608 	mla	r6, lr, r8, r6
900249a4:	f3c6 2607 	ubfx	r6, r6, #8, #8
900249a8:	9600      	str	r6, [sp, #0]
900249aa:	2e00      	cmp	r6, #0
900249ac:	f000 80be 	beq.w	90024b2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
900249b0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900249b4:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900249b8:	9e02      	ldr	r6, [sp, #8]
900249ba:	fb0b fc0c 	mul.w	ip, fp, ip
900249be:	fb0b f505 	mul.w	r5, fp, r5
900249c2:	8836      	ldrh	r6, [r6, #0]
900249c4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900249c8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900249cc:	9501      	str	r5, [sp, #4]
900249ce:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900249d2:	44dc      	add	ip, fp
900249d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900249d8:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900249dc:	9503      	str	r5, [sp, #12]
900249de:	9d01      	ldr	r5, [sp, #4]
900249e0:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900249e4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900249e8:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900249ec:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900249f0:	fb0a fc0c 	mul.w	ip, sl, ip
900249f4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900249f8:	fb0a fa01 	mul.w	sl, sl, r1
900249fc:	ea4f 251c 	mov.w	r5, ip, lsr #8
90024a00:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90024a04:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90024a08:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90024a0c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90024a10:	4465      	add	r5, ip
90024a12:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024a16:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90024a1a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024a1e:	fb09 fc0c 	mul.w	ip, r9, ip
90024a22:	0a2d      	lsrs	r5, r5, #8
90024a24:	fb09 f904 	mul.w	r9, r9, r4
90024a28:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024a2c:	ea4f 211c 	mov.w	r1, ip, lsr #8
90024a30:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90024a34:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90024a38:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90024a3c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90024a40:	437d      	muls	r5, r7
90024a42:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90024a46:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90024a4a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90024a4e:	4461      	add	r1, ip
90024a50:	fb08 f404 	mul.w	r4, r8, r4
90024a54:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024a58:	fb08 f802 	mul.w	r8, r8, r2
90024a5c:	0a09      	lsrs	r1, r1, #8
90024a5e:	0a22      	lsrs	r2, r4, #8
90024a60:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90024a64:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90024a68:	fb07 f70a 	mul.w	r7, r7, sl
90024a6c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90024a70:	4414      	add	r4, r2
90024a72:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90024a76:	0a24      	lsrs	r4, r4, #8
90024a78:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90024a7c:	9a03      	ldr	r2, [sp, #12]
90024a7e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90024a82:	fb02 5503 	mla	r5, r2, r3, r5
90024a86:	ea4f 2818 	mov.w	r8, r8, lsr #8
90024a8a:	9a00      	ldr	r2, [sp, #0]
90024a8c:	fb04 540e 	mla	r4, r4, lr, r5
90024a90:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90024a94:	1235      	asrs	r5, r6, #8
90024a96:	fb01 4100 	mla	r1, r1, r0, r4
90024a9a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90024a9e:	0a09      	lsrs	r1, r1, #8
90024aa0:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90024aa4:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90024aa8:	fb03 7101 	mla	r1, r3, r1, r7
90024aac:	fb0e 1e08 	mla	lr, lr, r8, r1
90024ab0:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90024ab4:	fb00 e101 	mla	r1, r0, r1, lr
90024ab8:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90024abc:	b287      	uxth	r7, r0
90024abe:	0a09      	lsrs	r1, r1, #8
90024ac0:	437a      	muls	r2, r7
90024ac2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90024ac6:	1c53      	adds	r3, r2, #1
90024ac8:	4321      	orrs	r1, r4
90024aca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024ace:	0c0a      	lsrs	r2, r1, #16
90024ad0:	f3c1 2407 	ubfx	r4, r1, #8, #8
90024ad4:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90024ad8:	b2c8      	uxtb	r0, r1
90024ada:	fb12 f207 	smulbb	r2, r2, r7
90024ade:	fb14 f407 	smulbb	r4, r4, r7
90024ae2:	b2db      	uxtb	r3, r3
90024ae4:	fb10 f007 	smulbb	r0, r0, r7
90024ae8:	fb05 2503 	mla	r5, r5, r3, r2
90024aec:	10f2      	asrs	r2, r6, #3
90024aee:	00f6      	lsls	r6, r6, #3
90024af0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90024af4:	b2ad      	uxth	r5, r5
90024af6:	b2f6      	uxtb	r6, r6
90024af8:	fb02 4203 	mla	r2, r2, r3, r4
90024afc:	fb06 0303 	mla	r3, r6, r3, r0
90024b00:	b294      	uxth	r4, r2
90024b02:	b299      	uxth	r1, r3
90024b04:	1c6b      	adds	r3, r5, #1
90024b06:	1c62      	adds	r2, r4, #1
90024b08:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024b0c:	1c4b      	adds	r3, r1, #1
90024b0e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90024b12:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90024b16:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90024b1a:	0952      	lsrs	r2, r2, #5
90024b1c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024b20:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024b24:	432b      	orrs	r3, r5
90024b26:	4313      	orrs	r3, r2
90024b28:	9a02      	ldr	r2, [sp, #8]
90024b2a:	8013      	strh	r3, [r2, #0]
90024b2c:	b005      	add	sp, #20
90024b2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024b32:	2500      	movs	r5, #0
90024b34:	e6e9      	b.n	9002490a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
90024b36:	2100      	movs	r1, #0
90024b38:	460d      	mov	r5, r1
90024b3a:	e6f3      	b.n	90024924 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90024b3c:	2100      	movs	r1, #0
90024b3e:	e6f1      	b.n	90024924 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90024b40:	4631      	mov	r1, r6
90024b42:	e6ef      	b.n	90024924 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90024b44:	2400      	movs	r4, #0
90024b46:	e700      	b.n	9002494a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90024b48:	2200      	movs	r2, #0
90024b4a:	4614      	mov	r4, r2
90024b4c:	e70b      	b.n	90024966 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90024b4e:	4602      	mov	r2, r0
90024b50:	4604      	mov	r4, r0
90024b52:	e708      	b.n	90024966 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90024b54:	2200      	movs	r2, #0
90024b56:	e706      	b.n	90024966 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90024b58:	4632      	mov	r2, r6
90024b5a:	e704      	b.n	90024966 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

90024b5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024b5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024b60:	b09f      	sub	sp, #124	@ 0x7c
90024b62:	921b      	str	r2, [sp, #108]	@ 0x6c
90024b64:	9309      	str	r3, [sp, #36]	@ 0x24
90024b66:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90024b68:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
90024b6c:	901d      	str	r0, [sp, #116]	@ 0x74
90024b6e:	931c      	str	r3, [sp, #112]	@ 0x70
90024b70:	6850      	ldr	r0, [r2, #4]
90024b72:	9119      	str	r1, [sp, #100]	@ 0x64
90024b74:	6812      	ldr	r2, [r2, #0]
90024b76:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90024b78:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
90024b7c:	fb00 1303 	mla	r3, r0, r3, r1
90024b80:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024b84:	930c      	str	r3, [sp, #48]	@ 0x30
90024b86:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90024b88:	681b      	ldr	r3, [r3, #0]
90024b8a:	9312      	str	r3, [sp, #72]	@ 0x48
90024b8c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90024b8e:	685e      	ldr	r6, [r3, #4]
90024b90:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
90024b94:	3604      	adds	r6, #4
90024b96:	930d      	str	r3, [sp, #52]	@ 0x34
90024b98:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90024b9a:	2b00      	cmp	r3, #0
90024b9c:	dc03      	bgt.n	90024ba6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90024b9e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90024ba0:	2b00      	cmp	r3, #0
90024ba2:	f340 8387 	ble.w	900252b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90024ba6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90024ba8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024bac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024bb0:	1e48      	subs	r0, r1, #1
90024bb2:	1e57      	subs	r7, r2, #1
90024bb4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024bb6:	2b00      	cmp	r3, #0
90024bb8:	f340 8194 	ble.w	90024ee4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90024bbc:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90024bbe:	142b      	asrs	r3, r5, #16
90024bc0:	ea5f 4c24 	movs.w	ip, r4, asr #16
90024bc4:	d406      	bmi.n	90024bd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024bc6:	4584      	cmp	ip, r0
90024bc8:	da04      	bge.n	90024bd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024bca:	2b00      	cmp	r3, #0
90024bcc:	db02      	blt.n	90024bd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024bce:	42bb      	cmp	r3, r7
90024bd0:	f2c0 8189 	blt.w	90024ee6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024bd4:	f11c 0c01 	adds.w	ip, ip, #1
90024bd8:	f100 8177 	bmi.w	90024eca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90024bdc:	4561      	cmp	r1, ip
90024bde:	f2c0 8174 	blt.w	90024eca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90024be2:	3301      	adds	r3, #1
90024be4:	f100 8171 	bmi.w	90024eca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90024be8:	429a      	cmp	r2, r3
90024bea:	f2c0 816e 	blt.w	90024eca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90024bee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024bf0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
90024bf2:	931a      	str	r3, [sp, #104]	@ 0x68
90024bf4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90024bf6:	2b00      	cmp	r3, #0
90024bf8:	f340 8193 	ble.w	90024f22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
90024bfc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90024bfe:	ea4f 4c25 	mov.w	ip, r5, asr #16
90024c02:	f3c5 3103 	ubfx	r1, r5, #12, #4
90024c06:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024c0a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90024c0c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
90024c10:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90024c12:	141b      	asrs	r3, r3, #16
90024c14:	f100 81d6 	bmi.w	90024fc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90024c18:	f100 38ff 	add.w	r8, r0, #4294967295
90024c1c:	4543      	cmp	r3, r8
90024c1e:	f280 81d1 	bge.w	90024fc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90024c22:	f1bc 0f00 	cmp.w	ip, #0
90024c26:	f2c0 81cd 	blt.w	90024fc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90024c2a:	f10e 38ff 	add.w	r8, lr, #4294967295
90024c2e:	45c4      	cmp	ip, r8
90024c30:	f280 81c8 	bge.w	90024fc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90024c34:	b200      	sxth	r0, r0
90024c36:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90024c38:	fb0c 3300 	mla	r3, ip, r0, r3
90024c3c:	eb04 0803 	add.w	r8, r4, r3
90024c40:	5ce3      	ldrb	r3, [r4, r3]
90024c42:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90024c46:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90024c4a:	2a00      	cmp	r2, #0
90024c4c:	f000 81af 	beq.w	90024fae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024c50:	f898 c001 	ldrb.w	ip, [r8, #1]
90024c54:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90024c58:	940e      	str	r4, [sp, #56]	@ 0x38
90024c5a:	0e24      	lsrs	r4, r4, #24
90024c5c:	9415      	str	r4, [sp, #84]	@ 0x54
90024c5e:	b179      	cbz	r1, 90024c80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90024c60:	eb08 0c00 	add.w	ip, r8, r0
90024c64:	f818 0000 	ldrb.w	r0, [r8, r0]
90024c68:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90024c6c:	900a      	str	r0, [sp, #40]	@ 0x28
90024c6e:	0e00      	lsrs	r0, r0, #24
90024c70:	9013      	str	r0, [sp, #76]	@ 0x4c
90024c72:	f89c 0001 	ldrb.w	r0, [ip, #1]
90024c76:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90024c7a:	900f      	str	r0, [sp, #60]	@ 0x3c
90024c7c:	0e00      	lsrs	r0, r0, #24
90024c7e:	9016      	str	r0, [sp, #88]	@ 0x58
90024c80:	b292      	uxth	r2, r2
90024c82:	9815      	ldr	r0, [sp, #84]	@ 0x54
90024c84:	b289      	uxth	r1, r1
90024c86:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90024c88:	fb02 f901 	mul.w	r9, r2, r1
90024c8c:	0112      	lsls	r2, r2, #4
90024c8e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90024c92:	eba2 0809 	sub.w	r8, r2, r9
90024c96:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90024c9a:	b289      	uxth	r1, r1
90024c9c:	fa1f f888 	uxth.w	r8, r8
90024ca0:	1a52      	subs	r2, r2, r1
90024ca2:	fb08 f000 	mul.w	r0, r8, r0
90024ca6:	b292      	uxth	r2, r2
90024ca8:	fb02 000e 	mla	r0, r2, lr, r0
90024cac:	fb01 0004 	mla	r0, r1, r4, r0
90024cb0:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90024cb2:	fb09 0004 	mla	r0, r9, r4, r0
90024cb6:	f3c0 2007 	ubfx	r0, r0, #8, #8
90024cba:	2800      	cmp	r0, #0
90024cbc:	f000 80fa 	beq.w	90024eb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024cc0:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90024cc4:	d01b      	beq.n	90024cfe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024cc6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90024cca:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024cce:	fb0e fa0a 	mul.w	sl, lr, sl
90024cd2:	fb0e fe03 	mul.w	lr, lr, r3
90024cd6:	ea4f 231a 	mov.w	r3, sl, lsr #8
90024cda:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90024cde:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90024ce2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90024ce6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90024cea:	4453      	add	r3, sl
90024cec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024cf0:	0a1b      	lsrs	r3, r3, #8
90024cf2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90024cf6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90024cfa:	ea43 030c 	orr.w	r3, r3, ip
90024cfe:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90024d00:	2cff      	cmp	r4, #255	@ 0xff
90024d02:	d021      	beq.n	90024d48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90024d04:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024d06:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90024d0a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90024d0c:	fb04 fb0b 	mul.w	fp, r4, fp
90024d10:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024d12:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024d16:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90024d18:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024d1c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024d20:	fb04 fa0a 	mul.w	sl, r4, sl
90024d24:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024d28:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024d2c:	44de      	add	lr, fp
90024d2e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024d32:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024d36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024d3a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024d3e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024d42:	ea4e 040a 	orr.w	r4, lr, sl
90024d46:	940e      	str	r4, [sp, #56]	@ 0x38
90024d48:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90024d4a:	2cff      	cmp	r4, #255	@ 0xff
90024d4c:	d021      	beq.n	90024d92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90024d4e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90024d50:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90024d54:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90024d56:	fb04 fb0b 	mul.w	fp, r4, fp
90024d5a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90024d5c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024d60:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90024d62:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024d66:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024d6a:	fb04 fa0a 	mul.w	sl, r4, sl
90024d6e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024d72:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024d76:	44de      	add	lr, fp
90024d78:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024d7c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024d80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024d84:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024d88:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024d8c:	ea4e 040a 	orr.w	r4, lr, sl
90024d90:	940a      	str	r4, [sp, #40]	@ 0x28
90024d92:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90024d94:	2cff      	cmp	r4, #255	@ 0xff
90024d96:	d021      	beq.n	90024ddc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90024d98:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90024d9a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90024d9e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90024da0:	fb04 fb0b 	mul.w	fp, r4, fp
90024da4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90024da6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90024daa:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90024dac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024db0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024db4:	fb04 fa0a 	mul.w	sl, r4, sl
90024db8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024dbc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024dc0:	44de      	add	lr, fp
90024dc2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024dc6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024dca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024dce:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024dd2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024dd6:	ea4e 040a 	orr.w	r4, lr, sl
90024dda:	940f      	str	r4, [sp, #60]	@ 0x3c
90024ddc:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024dde:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
90024de2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024de6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024dea:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90024dec:	fb08 fc0c 	mul.w	ip, r8, ip
90024df0:	fb02 cc0e 	mla	ip, r2, lr, ip
90024df4:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90024df8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90024dfa:	fb01 cc0e 	mla	ip, r1, lr, ip
90024dfe:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90024e02:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90024e04:	fb09 cc0e 	mla	ip, r9, lr, ip
90024e08:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90024e0c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024e0e:	fb08 f80e 	mul.w	r8, r8, lr
90024e12:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024e16:	fb02 8303 	mla	r3, r2, r3, r8
90024e1a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90024e1c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024e20:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90024e24:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90024e26:	fb01 330a 	mla	r3, r1, sl, r3
90024e2a:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
90024e2e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90024e30:	fb09 3901 	mla	r9, r9, r1, r3
90024e34:	883b      	ldrh	r3, [r7, #0]
90024e36:	4342      	muls	r2, r0
90024e38:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024e3c:	1c50      	adds	r0, r2, #1
90024e3e:	1219      	asrs	r1, r3, #8
90024e40:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90024e44:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90024e48:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90024e4c:	ea4c 0c09 	orr.w	ip, ip, r9
90024e50:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90024e54:	ea4f 421c 	mov.w	r2, ip, lsr #16
90024e58:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90024e5c:	b2c0      	uxtb	r0, r0
90024e5e:	fb12 f204 	smulbb	r2, r2, r4
90024e62:	fa5f fc8c 	uxtb.w	ip, ip
90024e66:	fb1e fe04 	smulbb	lr, lr, r4
90024e6a:	fb01 2100 	mla	r1, r1, r0, r2
90024e6e:	10da      	asrs	r2, r3, #3
90024e70:	fb1c fc04 	smulbb	ip, ip, r4
90024e74:	00db      	lsls	r3, r3, #3
90024e76:	b289      	uxth	r1, r1
90024e78:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90024e7c:	b2db      	uxtb	r3, r3
90024e7e:	fb02 e200 	mla	r2, r2, r0, lr
90024e82:	fb03 c300 	mla	r3, r3, r0, ip
90024e86:	b292      	uxth	r2, r2
90024e88:	fa1f fc83 	uxth.w	ip, r3
90024e8c:	1c4b      	adds	r3, r1, #1
90024e8e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90024e92:	f10c 0301 	add.w	r3, ip, #1
90024e96:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90024e9a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90024e9e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024ea2:	430b      	orrs	r3, r1
90024ea4:	1c51      	adds	r1, r2, #1
90024ea6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90024eaa:	0952      	lsrs	r2, r2, #5
90024eac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024eb0:	4313      	orrs	r3, r2
90024eb2:	803b      	strh	r3, [r7, #0]
90024eb4:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90024eb6:	3702      	adds	r7, #2
90024eb8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90024eba:	441a      	add	r2, r3
90024ebc:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90024ebe:	441d      	add	r5, r3
90024ec0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90024ec2:	9229      	str	r2, [sp, #164]	@ 0xa4
90024ec4:	3b01      	subs	r3, #1
90024ec6:	931a      	str	r3, [sp, #104]	@ 0x68
90024ec8:	e694      	b.n	90024bf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90024eca:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90024ecc:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90024ece:	441c      	add	r4, r3
90024ed0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90024ed2:	441d      	add	r5, r3
90024ed4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024ed6:	9429      	str	r4, [sp, #164]	@ 0xa4
90024ed8:	3b01      	subs	r3, #1
90024eda:	9309      	str	r3, [sp, #36]	@ 0x24
90024edc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024ede:	3302      	adds	r3, #2
90024ee0:	930c      	str	r3, [sp, #48]	@ 0x30
90024ee2:	e667      	b.n	90024bb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90024ee4:	d024      	beq.n	90024f30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
90024ee6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024ee8:	982b      	ldr	r0, [sp, #172]	@ 0xac
90024eea:	3b01      	subs	r3, #1
90024eec:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90024eee:	fb00 4003 	mla	r0, r0, r3, r4
90024ef2:	1400      	asrs	r0, r0, #16
90024ef4:	f53f ae7b 	bmi.w	90024bee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024ef8:	3901      	subs	r1, #1
90024efa:	4288      	cmp	r0, r1
90024efc:	f6bf ae77 	bge.w	90024bee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024f00:	992c      	ldr	r1, [sp, #176]	@ 0xb0
90024f02:	fb01 5303 	mla	r3, r1, r3, r5
90024f06:	141b      	asrs	r3, r3, #16
90024f08:	f53f ae71 	bmi.w	90024bee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024f0c:	3a01      	subs	r2, #1
90024f0e:	4293      	cmp	r3, r2
90024f10:	f6bf ae6d 	bge.w	90024bee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024f14:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90024f18:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
90024f1c:	f1bb 0f00 	cmp.w	fp, #0
90024f20:	dc70      	bgt.n	90025004 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
90024f22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024f24:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90024f28:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024f2a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90024f2e:	930c      	str	r3, [sp, #48]	@ 0x30
90024f30:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90024f32:	2b00      	cmp	r3, #0
90024f34:	f340 81be 	ble.w	900252b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90024f38:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024f3c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024f3e:	ee30 0a04 	vadd.f32	s0, s0, s8
90024f42:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024f46:	eef0 6a62 	vmov.f32	s13, s5
90024f4a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024f4e:	ee31 1a05 	vadd.f32	s2, s2, s10
90024f52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024f56:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
90024f5a:	eef0 6a43 	vmov.f32	s13, s6
90024f5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024f62:	ee16 5a90 	vmov	r5, s13
90024f66:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024f6a:	ee61 7a27 	vmul.f32	s15, s2, s15
90024f6e:	ee77 2a62 	vsub.f32	s5, s14, s5
90024f72:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024f76:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024f7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024f7e:	ee12 2a90 	vmov	r2, s5
90024f82:	eef0 2a47 	vmov.f32	s5, s14
90024f86:	fb92 f3f3 	sdiv	r3, r2, r3
90024f8a:	ee13 2a10 	vmov	r2, s6
90024f8e:	932b      	str	r3, [sp, #172]	@ 0xac
90024f90:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024f92:	eeb0 3a67 	vmov.f32	s6, s15
90024f96:	fb92 f3f3 	sdiv	r3, r2, r3
90024f9a:	932c      	str	r3, [sp, #176]	@ 0xb0
90024f9c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90024f9e:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90024fa0:	3b01      	subs	r3, #1
90024fa2:	9319      	str	r3, [sp, #100]	@ 0x64
90024fa4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024fa6:	bf08      	it	eq
90024fa8:	4613      	moveq	r3, r2
90024faa:	9309      	str	r3, [sp, #36]	@ 0x24
90024fac:	e5f4      	b.n	90024b98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90024fae:	2900      	cmp	r1, #0
90024fb0:	f43f ae66 	beq.w	90024c80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90024fb4:	f818 0000 	ldrb.w	r0, [r8, r0]
90024fb8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90024fbc:	900a      	str	r0, [sp, #40]	@ 0x28
90024fbe:	0e00      	lsrs	r0, r0, #24
90024fc0:	9013      	str	r0, [sp, #76]	@ 0x4c
90024fc2:	e65d      	b.n	90024c80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90024fc4:	f113 0801 	adds.w	r8, r3, #1
90024fc8:	f53f af74 	bmi.w	90024eb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024fcc:	4540      	cmp	r0, r8
90024fce:	f6ff af71 	blt.w	90024eb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024fd2:	f11c 0801 	adds.w	r8, ip, #1
90024fd6:	f53f af6d 	bmi.w	90024eb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024fda:	45c6      	cmp	lr, r8
90024fdc:	f6ff af6a 	blt.w	90024eb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024fe0:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90024fe2:	b200      	sxth	r0, r0
90024fe4:	9302      	str	r3, [sp, #8]
90024fe6:	fa0f f38e 	sxth.w	r3, lr
90024fea:	9000      	str	r0, [sp, #0]
90024fec:	9301      	str	r3, [sp, #4]
90024fee:	4633      	mov	r3, r6
90024ff0:	981d      	ldr	r0, [sp, #116]	@ 0x74
90024ff2:	e9cd 1405 	strd	r1, r4, [sp, #20]
90024ff6:	e9cd c203 	strd	ip, r2, [sp, #12]
90024ffa:	4639      	mov	r1, r7
90024ffc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90024ffe:	f7ff fc63 	bl	900248c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90025002:	e757      	b.n	90024eb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025004:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90025006:	f3c5 3003 	ubfx	r0, r5, #12, #4
9002500a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
9002500c:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025010:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90025012:	1427      	asrs	r7, r4, #16
90025014:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90025016:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002501a:	142b      	asrs	r3, r5, #16
9002501c:	fb01 7303 	mla	r3, r1, r3, r7
90025020:	18e7      	adds	r7, r4, r3
90025022:	5ce3      	ldrb	r3, [r4, r3]
90025024:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90025028:	ea4f 6c13 	mov.w	ip, r3, lsr #24
9002502c:	2a00      	cmp	r2, #0
9002502e:	f000 8137 	beq.w	900252a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90025032:	f897 e001 	ldrb.w	lr, [r7, #1]
90025036:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
9002503a:	9410      	str	r4, [sp, #64]	@ 0x40
9002503c:	0e24      	lsrs	r4, r4, #24
9002503e:	9417      	str	r4, [sp, #92]	@ 0x5c
90025040:	b170      	cbz	r0, 90025060 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90025042:	eb07 0e01 	add.w	lr, r7, r1
90025046:	5c79      	ldrb	r1, [r7, r1]
90025048:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002504c:	910b      	str	r1, [sp, #44]	@ 0x2c
9002504e:	0e09      	lsrs	r1, r1, #24
90025050:	9114      	str	r1, [sp, #80]	@ 0x50
90025052:	f89e 1001 	ldrb.w	r1, [lr, #1]
90025056:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002505a:	9111      	str	r1, [sp, #68]	@ 0x44
9002505c:	0e09      	lsrs	r1, r1, #24
9002505e:	9118      	str	r1, [sp, #96]	@ 0x60
90025060:	b292      	uxth	r2, r2
90025062:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90025064:	b280      	uxth	r0, r0
90025066:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90025068:	fb02 f800 	mul.w	r8, r2, r0
9002506c:	0112      	lsls	r2, r2, #4
9002506e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90025072:	eba2 0e08 	sub.w	lr, r2, r8
90025076:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
9002507a:	b280      	uxth	r0, r0
9002507c:	fa1f fe8e 	uxth.w	lr, lr
90025080:	1a12      	subs	r2, r2, r0
90025082:	fb0e f101 	mul.w	r1, lr, r1
90025086:	b292      	uxth	r2, r2
90025088:	fb02 110c 	mla	r1, r2, ip, r1
9002508c:	fb00 1104 	mla	r1, r0, r4, r1
90025090:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90025092:	fb08 1104 	mla	r1, r8, r4, r1
90025096:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002509a:	2900      	cmp	r1, #0
9002509c:	f000 80f5 	beq.w	9002528a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
900250a0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
900250a4:	d019      	beq.n	900250da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
900250a6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900250aa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900250ae:	fb0c fa0a 	mul.w	sl, ip, sl
900250b2:	fb0c fc03 	mul.w	ip, ip, r3
900250b6:	ea4f 231a 	mov.w	r3, sl, lsr #8
900250ba:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900250be:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900250c2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900250c6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900250ca:	4453      	add	r3, sl
900250cc:	0a3f      	lsrs	r7, r7, #8
900250ce:	0a1b      	lsrs	r3, r3, #8
900250d0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900250d4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900250d8:	433b      	orrs	r3, r7
900250da:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900250dc:	2cff      	cmp	r4, #255	@ 0xff
900250de:	d020      	beq.n	90025122 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
900250e0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900250e2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900250e6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900250e8:	4367      	muls	r7, r4
900250ea:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900250ec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900250f0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900250f4:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900250f6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900250fa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900250fe:	fb04 fa0a 	mul.w	sl, r4, sl
90025102:	44bc      	add	ip, r7
90025104:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025108:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002510c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025110:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025114:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025118:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002511c:	ea4c 040a 	orr.w	r4, ip, sl
90025120:	9410      	str	r4, [sp, #64]	@ 0x40
90025122:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90025124:	2cff      	cmp	r4, #255	@ 0xff
90025126:	d020      	beq.n	9002516a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90025128:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002512a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002512e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90025130:	4367      	muls	r7, r4
90025132:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025134:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025138:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002513c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002513e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025142:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025146:	fb04 fa0a 	mul.w	sl, r4, sl
9002514a:	44bc      	add	ip, r7
9002514c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025150:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025154:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025158:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002515c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025160:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025164:	ea4c 040a 	orr.w	r4, ip, sl
90025168:	940b      	str	r4, [sp, #44]	@ 0x2c
9002516a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
9002516c:	2cff      	cmp	r4, #255	@ 0xff
9002516e:	d020      	beq.n	900251b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90025170:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90025172:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90025176:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90025178:	4367      	muls	r7, r4
9002517a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9002517c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025180:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025184:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90025186:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002518a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002518e:	fb04 fa0a 	mul.w	sl, r4, sl
90025192:	44bc      	add	ip, r7
90025194:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025198:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002519c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900251a0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900251a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900251a8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900251ac:	ea4c 040a 	orr.w	r4, ip, sl
900251b0:	9411      	str	r4, [sp, #68]	@ 0x44
900251b2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900251b4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
900251b8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900251bc:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900251c0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900251c2:	fb0e f707 	mul.w	r7, lr, r7
900251c6:	fb02 770c 	mla	r7, r2, ip, r7
900251ca:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900251ce:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900251d0:	fb00 770c 	mla	r7, r0, ip, r7
900251d4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900251d8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900251da:	fb08 770c 	mla	r7, r8, ip, r7
900251de:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
900251e2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900251e4:	fb0e fe0c 	mul.w	lr, lr, ip
900251e8:	0a3f      	lsrs	r7, r7, #8
900251ea:	fb02 e303 	mla	r3, r2, r3, lr
900251ee:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900251f0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900251f4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900251f8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900251fa:	fb00 330a 	mla	r3, r0, sl, r3
900251fe:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90025202:	f8b9 0000 	ldrh.w	r0, [r9]
90025206:	fb08 3c0c 	mla	ip, r8, ip, r3
9002520a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002520c:	1202      	asrs	r2, r0, #8
9002520e:	434b      	muls	r3, r1
90025210:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025214:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90025218:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
9002521c:	1c59      	adds	r1, r3, #1
9002521e:	ea47 070c 	orr.w	r7, r7, ip
90025222:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90025226:	0c3b      	lsrs	r3, r7, #16
90025228:	ea6f 2111 	mvn.w	r1, r1, lsr #8
9002522c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90025230:	b2ff      	uxtb	r7, r7
90025232:	fb13 f304 	smulbb	r3, r3, r4
90025236:	b2c9      	uxtb	r1, r1
90025238:	fb1c fc04 	smulbb	ip, ip, r4
9002523c:	fb02 3201 	mla	r2, r2, r1, r3
90025240:	10c3      	asrs	r3, r0, #3
90025242:	fb17 f704 	smulbb	r7, r7, r4
90025246:	00c0      	lsls	r0, r0, #3
90025248:	b292      	uxth	r2, r2
9002524a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002524e:	b2c0      	uxtb	r0, r0
90025250:	fb03 c301 	mla	r3, r3, r1, ip
90025254:	f102 0c01 	add.w	ip, r2, #1
90025258:	fb00 7001 	mla	r0, r0, r1, r7
9002525c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90025260:	b280      	uxth	r0, r0
90025262:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
90025266:	b29b      	uxth	r3, r3
90025268:	1c42      	adds	r2, r0, #1
9002526a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
9002526e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90025272:	ea42 020c 	orr.w	r2, r2, ip
90025276:	f103 0c01 	add.w	ip, r3, #1
9002527a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
9002527e:	095b      	lsrs	r3, r3, #5
90025280:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025284:	431a      	orrs	r2, r3
90025286:	f8a9 2000 	strh.w	r2, [r9]
9002528a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
9002528c:	f109 0902 	add.w	r9, r9, #2
90025290:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90025292:	f10b 3bff 	add.w	fp, fp, #4294967295
90025296:	441a      	add	r2, r3
90025298:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002529a:	9229      	str	r2, [sp, #164]	@ 0xa4
9002529c:	441d      	add	r5, r3
9002529e:	e63d      	b.n	90024f1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
900252a0:	2800      	cmp	r0, #0
900252a2:	f43f aedd 	beq.w	90025060 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900252a6:	5c79      	ldrb	r1, [r7, r1]
900252a8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900252ac:	910b      	str	r1, [sp, #44]	@ 0x2c
900252ae:	0e09      	lsrs	r1, r1, #24
900252b0:	9114      	str	r1, [sp, #80]	@ 0x50
900252b2:	e6d5      	b.n	90025060 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900252b4:	b01f      	add	sp, #124	@ 0x7c
900252b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900252ba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
900252ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900252be:	b089      	sub	sp, #36	@ 0x24
900252c0:	9101      	str	r1, [sp, #4]
900252c2:	9801      	ldr	r0, [sp, #4]
900252c4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
900252c8:	8800      	ldrh	r0, [r0, #0]
900252ca:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
900252ce:	1206      	asrs	r6, r0, #8
900252d0:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
900252d4:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
900252d8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
900252dc:	9602      	str	r6, [sp, #8]
900252de:	10c6      	asrs	r6, r0, #3
900252e0:	00c0      	lsls	r0, r0, #3
900252e2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
900252e6:	b2c0      	uxtb	r0, r0
900252e8:	9603      	str	r6, [sp, #12]
900252ea:	9004      	str	r0, [sp, #16]
900252ec:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
900252f0:	fb07 100c 	mla	r0, r7, ip, r1
900252f4:	2f00      	cmp	r7, #0
900252f6:	eb02 0e00 	add.w	lr, r2, r0
900252fa:	f2c0 810a 	blt.w	90025512 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900252fe:	45b8      	cmp	r8, r7
90025300:	f340 8107 	ble.w	90025512 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90025304:	2900      	cmp	r1, #0
90025306:	f2c0 8102 	blt.w	9002550e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
9002530a:	458c      	cmp	ip, r1
9002530c:	f340 80ff 	ble.w	9002550e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90025310:	5c12      	ldrb	r2, [r2, r0]
90025312:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90025316:	1c4a      	adds	r2, r1, #1
90025318:	f100 80fe 	bmi.w	90025518 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
9002531c:	4594      	cmp	ip, r2
9002531e:	f340 80fb 	ble.w	90025518 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90025322:	2d00      	cmp	r5, #0
90025324:	f000 80fa 	beq.w	9002551c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90025328:	f89e 2001 	ldrb.w	r2, [lr, #1]
9002532c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90025330:	3701      	adds	r7, #1
90025332:	f100 80f7 	bmi.w	90025524 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90025336:	45b8      	cmp	r8, r7
90025338:	f340 80f4 	ble.w	90025524 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
9002533c:	2c00      	cmp	r4, #0
9002533e:	f000 80f4 	beq.w	9002552a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90025342:	2900      	cmp	r1, #0
90025344:	eb0e 020c 	add.w	r2, lr, ip
90025348:	f2c0 80ea 	blt.w	90025520 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
9002534c:	458c      	cmp	ip, r1
9002534e:	f340 80e7 	ble.w	90025520 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90025352:	f81e 700c 	ldrb.w	r7, [lr, ip]
90025356:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
9002535a:	3101      	adds	r1, #1
9002535c:	f100 80e8 	bmi.w	90025530 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90025360:	458c      	cmp	ip, r1
90025362:	f340 80e5 	ble.w	90025530 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90025366:	2d00      	cmp	r5, #0
90025368:	f000 80e4 	beq.w	90025534 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
9002536c:	7852      	ldrb	r2, [r2, #1]
9002536e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90025372:	0e0b      	lsrs	r3, r1, #24
90025374:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
90025378:	ea4f 6a10 	mov.w	sl, r0, lsr #24
9002537c:	9300      	str	r3, [sp, #0]
9002537e:	b2a4      	uxth	r4, r4
90025380:	b2ab      	uxth	r3, r5
90025382:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
90025386:	ea4f 6b16 	mov.w	fp, r6, lsr #24
9002538a:	fb03 f904 	mul.w	r9, r3, r4
9002538e:	011b      	lsls	r3, r3, #4
90025390:	fb0a f505 	mul.w	r5, sl, r5
90025394:	ea4f 6817 	mov.w	r8, r7, lsr #24
90025398:	eba3 0e09 	sub.w	lr, r3, r9
9002539c:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
900253a0:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
900253a4:	0a28      	lsrs	r0, r5, #8
900253a6:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
900253aa:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900253ae:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900253b2:	fb0a f303 	mul.w	r3, sl, r3
900253b6:	fb08 f707 	mul.w	r7, r8, r7
900253ba:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
900253be:	4405      	add	r5, r0
900253c0:	fb08 fc0c 	mul.w	ip, r8, ip
900253c4:	b2a4      	uxth	r4, r4
900253c6:	0a2d      	lsrs	r5, r5, #8
900253c8:	fa1f fe8e 	uxth.w	lr, lr
900253cc:	1b12      	subs	r2, r2, r4
900253ce:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
900253d2:	b292      	uxth	r2, r2
900253d4:	9005      	str	r0, [sp, #20]
900253d6:	f503 7080 	add.w	r0, r3, #256	@ 0x100
900253da:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900253de:	ea4f 201c 	mov.w	r0, ip, lsr #8
900253e2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900253e6:	0a1b      	lsrs	r3, r3, #8
900253e8:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900253ec:	9306      	str	r3, [sp, #24]
900253ee:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
900253f2:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
900253f6:	4460      	add	r0, ip
900253f8:	fb0b f303 	mul.w	r3, fp, r3
900253fc:	fb0b f606 	mul.w	r6, fp, r6
90025400:	0a00      	lsrs	r0, r0, #8
90025402:	0a1d      	lsrs	r5, r3, #8
90025404:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
90025408:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
9002540c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025410:	441d      	add	r5, r3
90025412:	f506 7380 	add.w	r3, r6, #256	@ 0x100
90025416:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9002541a:	f507 7380 	add.w	r3, r7, #256	@ 0x100
9002541e:	0a2d      	lsrs	r5, r5, #8
90025420:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90025424:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
90025428:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002542c:	0a36      	lsrs	r6, r6, #8
9002542e:	0a1b      	lsrs	r3, r3, #8
90025430:	fb05 f50e 	mul.w	r5, r5, lr
90025434:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90025438:	9307      	str	r3, [sp, #28]
9002543a:	0e0b      	lsrs	r3, r1, #24
9002543c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90025440:	fb0e f606 	mul.w	r6, lr, r6
90025444:	435f      	muls	r7, r3
90025446:	4359      	muls	r1, r3
90025448:	9b05      	ldr	r3, [sp, #20]
9002544a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002544e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025452:	fb03 5502 	mla	r5, r3, r2, r5
90025456:	9b06      	ldr	r3, [sp, #24]
90025458:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002545c:	fb0e fe0b 	mul.w	lr, lr, fp
90025460:	44bc      	add	ip, r7
90025462:	f501 7780 	add.w	r7, r1, #256	@ 0x100
90025466:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002546a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9002546e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025472:	0a09      	lsrs	r1, r1, #8
90025474:	fb0c 5509 	mla	r5, ip, r9, r5
90025478:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002547c:	fb00 5504 	mla	r5, r0, r4, r5
90025480:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
90025484:	9b07      	ldr	r3, [sp, #28]
90025486:	fb02 6000 	mla	r0, r2, r0, r6
9002548a:	0a2d      	lsrs	r5, r5, #8
9002548c:	fb02 e20a 	mla	r2, r2, sl, lr
90025490:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025494:	fb09 0001 	mla	r0, r9, r1, r0
90025498:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002549c:	fb04 0003 	mla	r0, r4, r3, r0
900254a0:	9b00      	ldr	r3, [sp, #0]
900254a2:	fb04 2408 	mla	r4, r4, r8, r2
900254a6:	9a04      	ldr	r2, [sp, #16]
900254a8:	0a00      	lsrs	r0, r0, #8
900254aa:	fb09 4903 	mla	r9, r9, r3, r4
900254ae:	9b02      	ldr	r3, [sp, #8]
900254b0:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
900254b4:	ea6f 2929 	mvn.w	r9, r9, asr #8
900254b8:	4305      	orrs	r5, r0
900254ba:	fa5f f989 	uxtb.w	r9, r9
900254be:	fb03 f109 	mul.w	r1, r3, r9
900254c2:	9b03      	ldr	r3, [sp, #12]
900254c4:	fb03 f309 	mul.w	r3, r3, r9
900254c8:	fb02 f909 	mul.w	r9, r2, r9
900254cc:	1c4a      	adds	r2, r1, #1
900254ce:	1c58      	adds	r0, r3, #1
900254d0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900254d4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900254d8:	0c2a      	lsrs	r2, r5, #16
900254da:	0a2b      	lsrs	r3, r5, #8
900254dc:	eb02 2211 	add.w	r2, r2, r1, lsr #8
900254e0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900254e4:	0212      	lsls	r2, r2, #8
900254e6:	00db      	lsls	r3, r3, #3
900254e8:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
900254ec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900254f0:	4313      	orrs	r3, r2
900254f2:	f109 0201 	add.w	r2, r9, #1
900254f6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
900254fa:	eb05 2519 	add.w	r5, r5, r9, lsr #8
900254fe:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90025502:	431d      	orrs	r5, r3
90025504:	9b01      	ldr	r3, [sp, #4]
90025506:	801d      	strh	r5, [r3, #0]
90025508:	b009      	add	sp, #36	@ 0x24
9002550a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002550e:	2000      	movs	r0, #0
90025510:	e701      	b.n	90025316 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90025512:	2600      	movs	r6, #0
90025514:	4630      	mov	r0, r6
90025516:	e70b      	b.n	90025330 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90025518:	2600      	movs	r6, #0
9002551a:	e709      	b.n	90025330 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
9002551c:	462e      	mov	r6, r5
9002551e:	e707      	b.n	90025330 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90025520:	2700      	movs	r7, #0
90025522:	e71a      	b.n	9002535a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90025524:	2100      	movs	r1, #0
90025526:	460f      	mov	r7, r1
90025528:	e723      	b.n	90025372 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
9002552a:	4621      	mov	r1, r4
9002552c:	4627      	mov	r7, r4
9002552e:	e720      	b.n	90025372 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90025530:	2100      	movs	r1, #0
90025532:	e71e      	b.n	90025372 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90025534:	4629      	mov	r1, r5
90025536:	e71c      	b.n	90025372 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90025538 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002553c:	b09b      	sub	sp, #108	@ 0x6c
9002553e:	9218      	str	r2, [sp, #96]	@ 0x60
90025540:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90025542:	9019      	str	r0, [sp, #100]	@ 0x64
90025544:	9116      	str	r1, [sp, #88]	@ 0x58
90025546:	6850      	ldr	r0, [r2, #4]
90025548:	9307      	str	r3, [sp, #28]
9002554a:	6812      	ldr	r2, [r2, #0]
9002554c:	9d26      	ldr	r5, [sp, #152]	@ 0x98
9002554e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90025552:	fb00 1303 	mla	r3, r0, r3, r1
90025556:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002555a:	930a      	str	r3, [sp, #40]	@ 0x28
9002555c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002555e:	681b      	ldr	r3, [r3, #0]
90025560:	930f      	str	r3, [sp, #60]	@ 0x3c
90025562:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025564:	685e      	ldr	r6, [r3, #4]
90025566:	3604      	adds	r6, #4
90025568:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002556a:	2b00      	cmp	r3, #0
9002556c:	dc03      	bgt.n	90025576 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9002556e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025570:	2b00      	cmp	r3, #0
90025572:	f340 8373 	ble.w	90025c5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90025576:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025578:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002557c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025580:	1e48      	subs	r0, r1, #1
90025582:	1e57      	subs	r7, r2, #1
90025584:	9b07      	ldr	r3, [sp, #28]
90025586:	2b00      	cmp	r3, #0
90025588:	f340 818f 	ble.w	900258aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
9002558c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
9002558e:	142b      	asrs	r3, r5, #16
90025590:	ea5f 4c24 	movs.w	ip, r4, asr #16
90025594:	d406      	bmi.n	900255a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90025596:	4584      	cmp	ip, r0
90025598:	da04      	bge.n	900255a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002559a:	2b00      	cmp	r3, #0
9002559c:	db02      	blt.n	900255a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002559e:	42bb      	cmp	r3, r7
900255a0:	f2c0 8184 	blt.w	900258ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
900255a4:	f11c 0c01 	adds.w	ip, ip, #1
900255a8:	f100 8172 	bmi.w	90025890 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900255ac:	4561      	cmp	r1, ip
900255ae:	f2c0 816f 	blt.w	90025890 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900255b2:	3301      	adds	r3, #1
900255b4:	f100 816c 	bmi.w	90025890 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900255b8:	429a      	cmp	r2, r3
900255ba:	f2c0 8169 	blt.w	90025890 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900255be:	9b07      	ldr	r3, [sp, #28]
900255c0:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
900255c2:	9317      	str	r3, [sp, #92]	@ 0x5c
900255c4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900255c6:	2b00      	cmp	r3, #0
900255c8:	f340 818e 	ble.w	900258e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
900255cc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900255ce:	ea4f 4c25 	mov.w	ip, r5, asr #16
900255d2:	f3c5 3003 	ubfx	r0, r5, #12, #4
900255d6:	f3c3 3203 	ubfx	r2, r3, #12, #4
900255da:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900255dc:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
900255e0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900255e2:	141b      	asrs	r3, r3, #16
900255e4:	f100 81d1 	bmi.w	9002598a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900255e8:	f101 38ff 	add.w	r8, r1, #4294967295
900255ec:	4543      	cmp	r3, r8
900255ee:	f280 81cc 	bge.w	9002598a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900255f2:	f1bc 0f00 	cmp.w	ip, #0
900255f6:	f2c0 81c8 	blt.w	9002598a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900255fa:	f10e 38ff 	add.w	r8, lr, #4294967295
900255fe:	45c4      	cmp	ip, r8
90025600:	f280 81c3 	bge.w	9002598a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025604:	b209      	sxth	r1, r1
90025606:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90025608:	fb0c 3301 	mla	r3, ip, r1, r3
9002560c:	eb04 0803 	add.w	r8, r4, r3
90025610:	5ce3      	ldrb	r3, [r4, r3]
90025612:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90025616:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9002561a:	2a00      	cmp	r2, #0
9002561c:	f000 81aa 	beq.w	90025974 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90025620:	f898 c001 	ldrb.w	ip, [r8, #1]
90025624:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90025628:	940b      	str	r4, [sp, #44]	@ 0x2c
9002562a:	0e24      	lsrs	r4, r4, #24
9002562c:	9412      	str	r4, [sp, #72]	@ 0x48
9002562e:	b178      	cbz	r0, 90025650 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90025630:	eb08 0c01 	add.w	ip, r8, r1
90025634:	f818 1001 	ldrb.w	r1, [r8, r1]
90025638:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002563c:	9108      	str	r1, [sp, #32]
9002563e:	0e09      	lsrs	r1, r1, #24
90025640:	9110      	str	r1, [sp, #64]	@ 0x40
90025642:	f89c 1001 	ldrb.w	r1, [ip, #1]
90025646:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002564a:	910c      	str	r1, [sp, #48]	@ 0x30
9002564c:	0e09      	lsrs	r1, r1, #24
9002564e:	9113      	str	r1, [sp, #76]	@ 0x4c
90025650:	b292      	uxth	r2, r2
90025652:	9912      	ldr	r1, [sp, #72]	@ 0x48
90025654:	b280      	uxth	r0, r0
90025656:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025658:	fb02 f900 	mul.w	r9, r2, r0
9002565c:	0112      	lsls	r2, r2, #4
9002565e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90025662:	eba2 0809 	sub.w	r8, r2, r9
90025666:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
9002566a:	b280      	uxth	r0, r0
9002566c:	fa1f f888 	uxth.w	r8, r8
90025670:	1a12      	subs	r2, r2, r0
90025672:	fb08 f101 	mul.w	r1, r8, r1
90025676:	b292      	uxth	r2, r2
90025678:	fb02 110e 	mla	r1, r2, lr, r1
9002567c:	fb00 1104 	mla	r1, r0, r4, r1
90025680:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90025682:	fb09 1104 	mla	r1, r9, r4, r1
90025686:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002568a:	2900      	cmp	r1, #0
9002568c:	f000 80f5 	beq.w	9002587a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90025690:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90025694:	d01b      	beq.n	900256ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90025696:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002569a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002569e:	fb0e fa0a 	mul.w	sl, lr, sl
900256a2:	fb0e fe03 	mul.w	lr, lr, r3
900256a6:	ea4f 231a 	mov.w	r3, sl, lsr #8
900256aa:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900256ae:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900256b2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900256b6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900256ba:	4453      	add	r3, sl
900256bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900256c0:	0a1b      	lsrs	r3, r3, #8
900256c2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900256c6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900256ca:	ea43 030c 	orr.w	r3, r3, ip
900256ce:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900256d0:	2cff      	cmp	r4, #255	@ 0xff
900256d2:	d021      	beq.n	90025718 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900256d4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900256d6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900256da:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900256dc:	fb04 fb0b 	mul.w	fp, r4, fp
900256e0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900256e2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900256e6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900256e8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900256ec:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900256f0:	fb04 fa0a 	mul.w	sl, r4, sl
900256f4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900256f8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900256fc:	44de      	add	lr, fp
900256fe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025702:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025706:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002570a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002570e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025712:	ea4e 040a 	orr.w	r4, lr, sl
90025716:	940b      	str	r4, [sp, #44]	@ 0x2c
90025718:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002571a:	2cff      	cmp	r4, #255	@ 0xff
9002571c:	d021      	beq.n	90025762 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9002571e:	9c08      	ldr	r4, [sp, #32]
90025720:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90025724:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025726:	fb04 fb0b 	mul.w	fp, r4, fp
9002572a:	9c08      	ldr	r4, [sp, #32]
9002572c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025730:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025732:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025736:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002573a:	fb04 fa0a 	mul.w	sl, r4, sl
9002573e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025742:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025746:	44de      	add	lr, fp
90025748:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002574c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025750:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025754:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025758:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002575c:	ea4e 040a 	orr.w	r4, lr, sl
90025760:	9408      	str	r4, [sp, #32]
90025762:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90025764:	2cff      	cmp	r4, #255	@ 0xff
90025766:	d021      	beq.n	900257ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90025768:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
9002576a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002576e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90025770:	fb04 fb0b 	mul.w	fp, r4, fp
90025774:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90025776:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002577a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002577c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025780:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025784:	fb04 fa0a 	mul.w	sl, r4, sl
90025788:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002578c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025790:	44de      	add	lr, fp
90025792:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025796:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002579a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002579e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900257a2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900257a6:	ea4e 040a 	orr.w	r4, lr, sl
900257aa:	940c      	str	r4, [sp, #48]	@ 0x30
900257ac:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900257ae:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
900257b2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900257b6:	43c9      	mvns	r1, r1
900257b8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900257bc:	9c08      	ldr	r4, [sp, #32]
900257be:	fb08 fc0c 	mul.w	ip, r8, ip
900257c2:	fb02 cc0e 	mla	ip, r2, lr, ip
900257c6:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900257ca:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900257cc:	fb00 cc0e 	mla	ip, r0, lr, ip
900257d0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900257d4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900257d6:	fb09 cc0e 	mla	ip, r9, lr, ip
900257da:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
900257de:	fb08 f80e 	mul.w	r8, r8, lr
900257e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900257e6:	fa5f fe81 	uxtb.w	lr, r1
900257ea:	fb02 8303 	mla	r3, r2, r3, r8
900257ee:	9a08      	ldr	r2, [sp, #32]
900257f0:	f8b7 8000 	ldrh.w	r8, [r7]
900257f4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900257f8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900257fc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900257fe:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90025802:	fb00 330a 	mla	r3, r0, sl, r3
90025806:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
9002580a:	ea4f 2228 	mov.w	r2, r8, asr #8
9002580e:	fb09 3900 	mla	r9, r9, r0, r3
90025812:	ea4f 00e8 	mov.w	r0, r8, asr #3
90025816:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9002581a:	b2c9      	uxtb	r1, r1
9002581c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025820:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90025824:	fb02 f20e 	mul.w	r2, r2, lr
90025828:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
9002582c:	fb00 f00e 	mul.w	r0, r0, lr
90025830:	1c53      	adds	r3, r2, #1
90025832:	fb01 f10e 	mul.w	r1, r1, lr
90025836:	ea4c 0c09 	orr.w	ip, ip, r9
9002583a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
9002583e:	ea4f 431c 	mov.w	r3, ip, lsr #16
90025842:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025846:	4a60      	ldr	r2, [pc, #384]	@ (900259c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90025848:	b2db      	uxtb	r3, r3
9002584a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
9002584e:	1c43      	adds	r3, r0, #1
90025850:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90025854:	ea4f 231c 	mov.w	r3, ip, lsr #8
90025858:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002585c:	00db      	lsls	r3, r3, #3
9002585e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025862:	4313      	orrs	r3, r2
90025864:	1c4a      	adds	r2, r1, #1
90025866:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002586a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
9002586e:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90025872:	ea4c 0c03 	orr.w	ip, ip, r3
90025876:	f8a7 c000 	strh.w	ip, [r7]
9002587a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002587c:	3702      	adds	r7, #2
9002587e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90025880:	441a      	add	r2, r3
90025882:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025884:	441d      	add	r5, r3
90025886:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90025888:	9225      	str	r2, [sp, #148]	@ 0x94
9002588a:	3b01      	subs	r3, #1
9002588c:	9317      	str	r3, [sp, #92]	@ 0x5c
9002588e:	e699      	b.n	900255c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90025890:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90025892:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90025894:	441c      	add	r4, r3
90025896:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025898:	441d      	add	r5, r3
9002589a:	9b07      	ldr	r3, [sp, #28]
9002589c:	9425      	str	r4, [sp, #148]	@ 0x94
9002589e:	3b01      	subs	r3, #1
900258a0:	9307      	str	r3, [sp, #28]
900258a2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900258a4:	3302      	adds	r3, #2
900258a6:	930a      	str	r3, [sp, #40]	@ 0x28
900258a8:	e66c      	b.n	90025584 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
900258aa:	d024      	beq.n	900258f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
900258ac:	9b07      	ldr	r3, [sp, #28]
900258ae:	9827      	ldr	r0, [sp, #156]	@ 0x9c
900258b0:	3b01      	subs	r3, #1
900258b2:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900258b4:	fb00 4003 	mla	r0, r0, r3, r4
900258b8:	1400      	asrs	r0, r0, #16
900258ba:	f53f ae80 	bmi.w	900255be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900258be:	3901      	subs	r1, #1
900258c0:	4288      	cmp	r0, r1
900258c2:	f6bf ae7c 	bge.w	900255be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900258c6:	9928      	ldr	r1, [sp, #160]	@ 0xa0
900258c8:	fb01 5303 	mla	r3, r1, r3, r5
900258cc:	141b      	asrs	r3, r3, #16
900258ce:	f53f ae76 	bmi.w	900255be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900258d2:	3a01      	subs	r2, #1
900258d4:	4293      	cmp	r3, r2
900258d6:	f6bf ae72 	bge.w	900255be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900258da:	f8dd b01c 	ldr.w	fp, [sp, #28]
900258de:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
900258e2:	f1bb 0f00 	cmp.w	fp, #0
900258e6:	dc71      	bgt.n	900259cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900258e8:	9b07      	ldr	r3, [sp, #28]
900258ea:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900258ee:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900258f0:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900258f4:	930a      	str	r3, [sp, #40]	@ 0x28
900258f6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900258f8:	2b00      	cmp	r3, #0
900258fa:	f340 81af 	ble.w	90025c5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
900258fe:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025902:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025904:	ee30 0a04 	vadd.f32	s0, s0, s8
90025908:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002590c:	eef0 6a62 	vmov.f32	s13, s5
90025910:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025914:	ee31 1a05 	vadd.f32	s2, s2, s10
90025918:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002591c:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
90025920:	eef0 6a43 	vmov.f32	s13, s6
90025924:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025928:	ee16 5a90 	vmov	r5, s13
9002592c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025930:	ee61 7a27 	vmul.f32	s15, s2, s15
90025934:	ee77 2a62 	vsub.f32	s5, s14, s5
90025938:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002593c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025940:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025944:	ee12 2a90 	vmov	r2, s5
90025948:	eef0 2a47 	vmov.f32	s5, s14
9002594c:	fb92 f3f3 	sdiv	r3, r2, r3
90025950:	ee13 2a10 	vmov	r2, s6
90025954:	9327      	str	r3, [sp, #156]	@ 0x9c
90025956:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025958:	eeb0 3a67 	vmov.f32	s6, s15
9002595c:	fb92 f3f3 	sdiv	r3, r2, r3
90025960:	9328      	str	r3, [sp, #160]	@ 0xa0
90025962:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90025964:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90025966:	3b01      	subs	r3, #1
90025968:	9316      	str	r3, [sp, #88]	@ 0x58
9002596a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002596c:	bf08      	it	eq
9002596e:	4613      	moveq	r3, r2
90025970:	9307      	str	r3, [sp, #28]
90025972:	e5f9      	b.n	90025568 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90025974:	2800      	cmp	r0, #0
90025976:	f43f ae6b 	beq.w	90025650 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002597a:	f818 1001 	ldrb.w	r1, [r8, r1]
9002597e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025982:	9108      	str	r1, [sp, #32]
90025984:	0e09      	lsrs	r1, r1, #24
90025986:	9110      	str	r1, [sp, #64]	@ 0x40
90025988:	e662      	b.n	90025650 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002598a:	f113 0801 	adds.w	r8, r3, #1
9002598e:	f53f af74 	bmi.w	9002587a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90025992:	4541      	cmp	r1, r8
90025994:	f6ff af71 	blt.w	9002587a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90025998:	f11c 0801 	adds.w	r8, ip, #1
9002599c:	f53f af6d 	bmi.w	9002587a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900259a0:	45c6      	cmp	lr, r8
900259a2:	f6ff af6a 	blt.w	9002587a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900259a6:	b209      	sxth	r1, r1
900259a8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
900259ac:	fa0f f38e 	sxth.w	r3, lr
900259b0:	9100      	str	r1, [sp, #0]
900259b2:	4639      	mov	r1, r7
900259b4:	9301      	str	r3, [sp, #4]
900259b6:	4633      	mov	r3, r6
900259b8:	e9cd 2004 	strd	r2, r0, [sp, #16]
900259bc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900259be:	9819      	ldr	r0, [sp, #100]	@ 0x64
900259c0:	f7ff fc7b 	bl	900252ba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
900259c4:	e759      	b.n	9002587a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900259c6:	bf00      	nop
900259c8:	fffff800 	.word	0xfffff800
900259cc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900259ce:	f3c5 3003 	ubfx	r0, r5, #12, #4
900259d2:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900259d4:	f3c3 3203 	ubfx	r2, r3, #12, #4
900259d8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900259da:	1427      	asrs	r7, r4, #16
900259dc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900259de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900259e2:	142b      	asrs	r3, r5, #16
900259e4:	fb01 7303 	mla	r3, r1, r3, r7
900259e8:	18e7      	adds	r7, r4, r3
900259ea:	5ce3      	ldrb	r3, [r4, r3]
900259ec:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900259f0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900259f4:	2a00      	cmp	r2, #0
900259f6:	f000 8127 	beq.w	90025c48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
900259fa:	f897 e001 	ldrb.w	lr, [r7, #1]
900259fe:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90025a02:	940d      	str	r4, [sp, #52]	@ 0x34
90025a04:	0e24      	lsrs	r4, r4, #24
90025a06:	9414      	str	r4, [sp, #80]	@ 0x50
90025a08:	b170      	cbz	r0, 90025a28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90025a0a:	eb07 0e01 	add.w	lr, r7, r1
90025a0e:	5c79      	ldrb	r1, [r7, r1]
90025a10:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025a14:	9109      	str	r1, [sp, #36]	@ 0x24
90025a16:	0e09      	lsrs	r1, r1, #24
90025a18:	9111      	str	r1, [sp, #68]	@ 0x44
90025a1a:	f89e 1001 	ldrb.w	r1, [lr, #1]
90025a1e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025a22:	910e      	str	r1, [sp, #56]	@ 0x38
90025a24:	0e09      	lsrs	r1, r1, #24
90025a26:	9115      	str	r1, [sp, #84]	@ 0x54
90025a28:	b292      	uxth	r2, r2
90025a2a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90025a2c:	b280      	uxth	r0, r0
90025a2e:	fb02 f800 	mul.w	r8, r2, r0
90025a32:	0112      	lsls	r2, r2, #4
90025a34:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90025a38:	eba2 0e08 	sub.w	lr, r2, r8
90025a3c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90025a40:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90025a42:	b280      	uxth	r0, r0
90025a44:	fa1f fe8e 	uxth.w	lr, lr
90025a48:	1a09      	subs	r1, r1, r0
90025a4a:	fb0e f202 	mul.w	r2, lr, r2
90025a4e:	b289      	uxth	r1, r1
90025a50:	fb01 220c 	mla	r2, r1, ip, r2
90025a54:	fb00 2204 	mla	r2, r0, r4, r2
90025a58:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90025a5a:	fb08 2204 	mla	r2, r8, r4, r2
90025a5e:	f3c2 2207 	ubfx	r2, r2, #8, #8
90025a62:	2a00      	cmp	r2, #0
90025a64:	f000 80e5 	beq.w	90025c32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90025a68:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90025a6c:	d019      	beq.n	90025aa2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
90025a6e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90025a72:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025a76:	fb0c fa0a 	mul.w	sl, ip, sl
90025a7a:	fb0c fc03 	mul.w	ip, ip, r3
90025a7e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90025a82:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90025a86:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90025a8a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025a8e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90025a92:	4453      	add	r3, sl
90025a94:	0a3f      	lsrs	r7, r7, #8
90025a96:	0a1b      	lsrs	r3, r3, #8
90025a98:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90025a9c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025aa0:	433b      	orrs	r3, r7
90025aa2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90025aa4:	2cff      	cmp	r4, #255	@ 0xff
90025aa6:	d020      	beq.n	90025aea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90025aa8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90025aaa:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90025aae:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90025ab0:	4367      	muls	r7, r4
90025ab2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90025ab4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025ab8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025abc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90025abe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025ac2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025ac6:	fb04 fa0a 	mul.w	sl, r4, sl
90025aca:	44bc      	add	ip, r7
90025acc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025ad0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025ad4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025ad8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025adc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025ae0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025ae4:	ea4c 040a 	orr.w	r4, ip, sl
90025ae8:	940d      	str	r4, [sp, #52]	@ 0x34
90025aea:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90025aec:	2cff      	cmp	r4, #255	@ 0xff
90025aee:	d020      	beq.n	90025b32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90025af0:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90025af2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90025af6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90025af8:	4367      	muls	r7, r4
90025afa:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90025afc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025b00:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025b04:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90025b06:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025b0a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025b0e:	fb04 fa0a 	mul.w	sl, r4, sl
90025b12:	44bc      	add	ip, r7
90025b14:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025b18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025b1c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025b20:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025b24:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025b28:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025b2c:	ea4c 040a 	orr.w	r4, ip, sl
90025b30:	9409      	str	r4, [sp, #36]	@ 0x24
90025b32:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90025b34:	2cff      	cmp	r4, #255	@ 0xff
90025b36:	d020      	beq.n	90025b7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90025b38:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90025b3a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90025b3e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90025b40:	4367      	muls	r7, r4
90025b42:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90025b44:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025b48:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025b4c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90025b4e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025b52:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025b56:	fb04 fa0a 	mul.w	sl, r4, sl
90025b5a:	44bc      	add	ip, r7
90025b5c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025b60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025b64:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025b68:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025b6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025b70:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025b74:	ea4c 040a 	orr.w	r4, ip, sl
90025b78:	940e      	str	r4, [sp, #56]	@ 0x38
90025b7a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90025b7c:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90025b80:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025b84:	43d2      	mvns	r2, r2
90025b86:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90025b8a:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90025b8c:	b2d2      	uxtb	r2, r2
90025b8e:	fb0e f707 	mul.w	r7, lr, r7
90025b92:	fb01 770c 	mla	r7, r1, ip, r7
90025b96:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90025b9a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90025b9c:	fb00 770c 	mla	r7, r0, ip, r7
90025ba0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90025ba4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90025ba6:	fb08 770c 	mla	r7, r8, ip, r7
90025baa:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
90025bae:	fb0e fe0c 	mul.w	lr, lr, ip
90025bb2:	0a3f      	lsrs	r7, r7, #8
90025bb4:	fb01 e303 	mla	r3, r1, r3, lr
90025bb8:	9909      	ldr	r1, [sp, #36]	@ 0x24
90025bba:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90025bbe:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90025bc2:	990e      	ldr	r1, [sp, #56]	@ 0x38
90025bc4:	fb00 330a 	mla	r3, r0, sl, r3
90025bc8:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90025bcc:	fb08 3c0c 	mla	ip, r8, ip, r3
90025bd0:	f8b9 3000 	ldrh.w	r3, [r9]
90025bd4:	1218      	asrs	r0, r3, #8
90025bd6:	10d9      	asrs	r1, r3, #3
90025bd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025bdc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025be0:	00db      	lsls	r3, r3, #3
90025be2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90025be6:	4350      	muls	r0, r2
90025be8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90025bec:	b2db      	uxtb	r3, r3
90025bee:	4351      	muls	r1, r2
90025bf0:	ea47 070c 	orr.w	r7, r7, ip
90025bf4:	4353      	muls	r3, r2
90025bf6:	1c42      	adds	r2, r0, #1
90025bf8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90025bfc:	0c3a      	lsrs	r2, r7, #16
90025bfe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90025c02:	4a18      	ldr	r2, [pc, #96]	@ (90025c64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90025c04:	b2c0      	uxtb	r0, r0
90025c06:	ea02 2000 	and.w	r0, r2, r0, lsl #8
90025c0a:	1c4a      	adds	r2, r1, #1
90025c0c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025c10:	0a3a      	lsrs	r2, r7, #8
90025c12:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025c16:	00c9      	lsls	r1, r1, #3
90025c18:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025c1c:	4301      	orrs	r1, r0
90025c1e:	1c58      	adds	r0, r3, #1
90025c20:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90025c24:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90025c28:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90025c2c:	4308      	orrs	r0, r1
90025c2e:	f8a9 0000 	strh.w	r0, [r9]
90025c32:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90025c34:	f109 0902 	add.w	r9, r9, #2
90025c38:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90025c3a:	f10b 3bff 	add.w	fp, fp, #4294967295
90025c3e:	441a      	add	r2, r3
90025c40:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025c42:	9225      	str	r2, [sp, #148]	@ 0x94
90025c44:	441d      	add	r5, r3
90025c46:	e64c      	b.n	900258e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90025c48:	2800      	cmp	r0, #0
90025c4a:	f43f aeed 	beq.w	90025a28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90025c4e:	5c79      	ldrb	r1, [r7, r1]
90025c50:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025c54:	9109      	str	r1, [sp, #36]	@ 0x24
90025c56:	0e09      	lsrs	r1, r1, #24
90025c58:	9111      	str	r1, [sp, #68]	@ 0x44
90025c5a:	e6e5      	b.n	90025a28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90025c5c:	b01b      	add	sp, #108	@ 0x6c
90025c5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025c62:	bf00      	nop
90025c64:	fffff800 	.word	0xfffff800

90025c68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90025c68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025c6c:	b085      	sub	sp, #20
90025c6e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90025c72:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90025c76:	2800      	cmp	r0, #0
90025c78:	9103      	str	r1, [sp, #12]
90025c7a:	fb00 7406 	mla	r4, r0, r6, r7
90025c7e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90025c82:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90025c86:	eb02 0544 	add.w	r5, r2, r4, lsl #1
90025c8a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
90025c8e:	eb03 0904 	add.w	r9, r3, r4
90025c92:	9501      	str	r5, [sp, #4]
90025c94:	f2c0 8150 	blt.w	90025f38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90025c98:	4583      	cmp	fp, r0
90025c9a:	f340 814d 	ble.w	90025f38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90025c9e:	2f00      	cmp	r7, #0
90025ca0:	f2c0 8146 	blt.w	90025f30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90025ca4:	42be      	cmp	r6, r7
90025ca6:	f340 8143 	ble.w	90025f30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90025caa:	f813 c004 	ldrb.w	ip, [r3, r4]
90025cae:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
90025cb2:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90025cb6:	ea4f 02ec 	mov.w	r2, ip, asr #3
90025cba:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
90025cbe:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025cc2:	4355      	muls	r5, r2
90025cc4:	fb0c f203 	mul.w	r2, ip, r3
90025cc8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90025ccc:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90025cd0:	441d      	add	r5, r3
90025cd2:	f102 0320 	add.w	r3, r2, #32
90025cd6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025cda:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90025cde:	0a1b      	lsrs	r3, r3, #8
90025ce0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025ce4:	431c      	orrs	r4, r3
90025ce6:	1c7b      	adds	r3, r7, #1
90025ce8:	f100 812b 	bmi.w	90025f42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90025cec:	429e      	cmp	r6, r3
90025cee:	f340 8128 	ble.w	90025f42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90025cf2:	2900      	cmp	r1, #0
90025cf4:	f000 8128 	beq.w	90025f48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90025cf8:	9a01      	ldr	r2, [sp, #4]
90025cfa:	f899 3001 	ldrb.w	r3, [r9, #1]
90025cfe:	8855      	ldrh	r5, [r2, #2]
90025d00:	ea4f 08e3 	mov.w	r8, r3, asr #3
90025d04:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90025d08:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025d0c:	fb08 f802 	mul.w	r8, r8, r2
90025d10:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90025d14:	435d      	muls	r5, r3
90025d16:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90025d1a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025d1e:	44d0      	add	r8, sl
90025d20:	f105 0a20 	add.w	sl, r5, #32
90025d24:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90025d28:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90025d2c:	0a2d      	lsrs	r5, r5, #8
90025d2e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90025d32:	432a      	orrs	r2, r5
90025d34:	3001      	adds	r0, #1
90025d36:	f100 810d 	bmi.w	90025f54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90025d3a:	4583      	cmp	fp, r0
90025d3c:	f340 810a 	ble.w	90025f54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90025d40:	f1be 0f00 	cmp.w	lr, #0
90025d44:	f000 810b 	beq.w	90025f5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90025d48:	2f00      	cmp	r7, #0
90025d4a:	f2c0 8100 	blt.w	90025f4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90025d4e:	42be      	cmp	r6, r7
90025d50:	f340 80fd 	ble.w	90025f4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90025d54:	9801      	ldr	r0, [sp, #4]
90025d56:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90025d5a:	f819 5006 	ldrb.w	r5, [r9, r6]
90025d5e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90025d62:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90025d66:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90025d6a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90025d6e:	fb0a fa00 	mul.w	sl, sl, r0
90025d72:	fb05 f808 	mul.w	r8, r5, r8
90025d76:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90025d7a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90025d7e:	4482      	add	sl, r0
90025d80:	f108 0020 	add.w	r0, r8, #32
90025d84:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90025d88:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90025d8c:	0a00      	lsrs	r0, r0, #8
90025d8e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025d92:	ea4b 0b00 	orr.w	fp, fp, r0
90025d96:	3701      	adds	r7, #1
90025d98:	f100 80e6 	bmi.w	90025f68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90025d9c:	42be      	cmp	r6, r7
90025d9e:	f340 80e3 	ble.w	90025f68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90025da2:	2900      	cmp	r1, #0
90025da4:	f000 80e3 	beq.w	90025f6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90025da8:	3601      	adds	r6, #1
90025daa:	9801      	ldr	r0, [sp, #4]
90025dac:	f819 7006 	ldrb.w	r7, [r9, r6]
90025db0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90025db4:	ea4f 09e7 	mov.w	r9, r7, asr #3
90025db8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90025dbc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025dc0:	fb09 f906 	mul.w	r9, r9, r6
90025dc4:	fb07 f800 	mul.w	r8, r7, r0
90025dc8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90025dcc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90025dd0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90025dd4:	44d1      	add	r9, sl
90025dd6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90025dda:	f108 0020 	add.w	r0, r8, #32
90025dde:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90025de2:	0a00      	lsrs	r0, r0, #8
90025de4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025de8:	4330      	orrs	r0, r6
90025dea:	b28e      	uxth	r6, r1
90025dec:	fa1f f98e 	uxth.w	r9, lr
90025df0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90025df4:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90025df8:	fb06 f809 	mul.w	r8, r6, r9
90025dfc:	0136      	lsls	r6, r6, #4
90025dfe:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025e02:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90025e06:	9601      	str	r6, [sp, #4]
90025e08:	ea4a 0404 	orr.w	r4, sl, r4
90025e0c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90025e10:	fa1f f689 	uxth.w	r6, r9
90025e14:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025e18:	fb11 f90e 	smulbb	r9, r1, lr
90025e1c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025e20:	9602      	str	r6, [sp, #8]
90025e22:	4626      	mov	r6, r4
90025e24:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90025e28:	f1ce 0410 	rsb	r4, lr, #16
90025e2c:	ea4a 0202 	orr.w	r2, sl, r2
90025e30:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90025e34:	1a64      	subs	r4, r4, r1
90025e36:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90025e3a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90025e3e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025e42:	434a      	muls	r2, r1
90025e44:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90025e48:	ea4a 0000 	orr.w	r0, sl, r0
90025e4c:	9903      	ldr	r1, [sp, #12]
90025e4e:	fb04 2406 	mla	r4, r4, r6, r2
90025e52:	9e02      	ldr	r6, [sp, #8]
90025e54:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90025e58:	fb09 4200 	mla	r2, r9, r0, r4
90025e5c:	ea4f 440b 	mov.w	r4, fp, lsl #16
90025e60:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90025e64:	8808      	ldrh	r0, [r1, #0]
90025e66:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90025e6a:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
90025e6e:	ea44 0b0b 	orr.w	fp, r4, fp
90025e72:	9c01      	ldr	r4, [sp, #4]
90025e74:	b289      	uxth	r1, r1
90025e76:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
90025e7a:	fb0e 2e0b 	mla	lr, lr, fp, r2
90025e7e:	1ba4      	subs	r4, r4, r6
90025e80:	9e01      	ldr	r6, [sp, #4]
90025e82:	ea4f 525e 	mov.w	r2, lr, lsr #21
90025e86:	eba6 0608 	sub.w	r6, r6, r8
90025e8a:	b2a4      	uxth	r4, r4
90025e8c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90025e90:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025e94:	b2b6      	uxth	r6, r6
90025e96:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90025e9a:	4373      	muls	r3, r6
90025e9c:	ea42 0e0e 	orr.w	lr, r2, lr
90025ea0:	fb0c 3304 	mla	r3, ip, r4, r3
90025ea4:	9c02      	ldr	r4, [sp, #8]
90025ea6:	fa1f f28e 	uxth.w	r2, lr
90025eaa:	fb04 3505 	mla	r5, r4, r5, r3
90025eae:	10d4      	asrs	r4, r2, #3
90025eb0:	fb08 5707 	mla	r7, r8, r7, r5
90025eb4:	1215      	asrs	r5, r2, #8
90025eb6:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90025eba:	00d2      	lsls	r2, r2, #3
90025ebc:	f3c7 2707 	ubfx	r7, r7, #8, #8
90025ec0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90025ec4:	b2d2      	uxtb	r2, r2
90025ec6:	434f      	muls	r7, r1
90025ec8:	1c7b      	adds	r3, r7, #1
90025eca:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90025ece:	1203      	asrs	r3, r0, #8
90025ed0:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90025ed4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90025ed8:	b2ff      	uxtb	r7, r7
90025eda:	fb13 f307 	smulbb	r3, r3, r7
90025ede:	fb05 3501 	mla	r5, r5, r1, r3
90025ee2:	10c3      	asrs	r3, r0, #3
90025ee4:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90025ee8:	b2ad      	uxth	r5, r5
90025eea:	fb13 f307 	smulbb	r3, r3, r7
90025eee:	fb04 3401 	mla	r4, r4, r1, r3
90025ef2:	00c3      	lsls	r3, r0, #3
90025ef4:	b2db      	uxtb	r3, r3
90025ef6:	b2a4      	uxth	r4, r4
90025ef8:	fb13 f307 	smulbb	r3, r3, r7
90025efc:	fb02 3101 	mla	r1, r2, r1, r3
90025f00:	1c6b      	adds	r3, r5, #1
90025f02:	1c62      	adds	r2, r4, #1
90025f04:	b289      	uxth	r1, r1
90025f06:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90025f0a:	1c4b      	adds	r3, r1, #1
90025f0c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90025f10:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90025f14:	9a03      	ldr	r2, [sp, #12]
90025f16:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90025f1a:	0964      	lsrs	r4, r4, #5
90025f1c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025f20:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90025f24:	432b      	orrs	r3, r5
90025f26:	4323      	orrs	r3, r4
90025f28:	8013      	strh	r3, [r2, #0]
90025f2a:	b005      	add	sp, #20
90025f2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025f30:	f04f 0c00 	mov.w	ip, #0
90025f34:	4664      	mov	r4, ip
90025f36:	e6d6      	b.n	90025ce6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90025f38:	2300      	movs	r3, #0
90025f3a:	469c      	mov	ip, r3
90025f3c:	461a      	mov	r2, r3
90025f3e:	461c      	mov	r4, r3
90025f40:	e6f8      	b.n	90025d34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90025f42:	2300      	movs	r3, #0
90025f44:	461a      	mov	r2, r3
90025f46:	e6f5      	b.n	90025d34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90025f48:	460b      	mov	r3, r1
90025f4a:	460a      	mov	r2, r1
90025f4c:	e6f2      	b.n	90025d34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90025f4e:	2500      	movs	r5, #0
90025f50:	46ab      	mov	fp, r5
90025f52:	e720      	b.n	90025d96 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90025f54:	2700      	movs	r7, #0
90025f56:	463d      	mov	r5, r7
90025f58:	4638      	mov	r0, r7
90025f5a:	46bb      	mov	fp, r7
90025f5c:	e745      	b.n	90025dea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90025f5e:	4677      	mov	r7, lr
90025f60:	4675      	mov	r5, lr
90025f62:	4670      	mov	r0, lr
90025f64:	46f3      	mov	fp, lr
90025f66:	e740      	b.n	90025dea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90025f68:	2700      	movs	r7, #0
90025f6a:	4638      	mov	r0, r7
90025f6c:	e73d      	b.n	90025dea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90025f6e:	460f      	mov	r7, r1
90025f70:	4608      	mov	r0, r1
90025f72:	e73a      	b.n	90025dea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90025f74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025f74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025f78:	b097      	sub	sp, #92	@ 0x5c
90025f7a:	9214      	str	r2, [sp, #80]	@ 0x50
90025f7c:	9308      	str	r3, [sp, #32]
90025f7e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90025f80:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90025f84:	9015      	str	r0, [sp, #84]	@ 0x54
90025f86:	9312      	str	r3, [sp, #72]	@ 0x48
90025f88:	6850      	ldr	r0, [r2, #4]
90025f8a:	9111      	str	r1, [sp, #68]	@ 0x44
90025f8c:	6812      	ldr	r2, [r2, #0]
90025f8e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90025f92:	fb00 1303 	mla	r3, r0, r3, r1
90025f96:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025f9a:	9309      	str	r3, [sp, #36]	@ 0x24
90025f9c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025f9e:	681b      	ldr	r3, [r3, #0]
90025fa0:	930b      	str	r3, [sp, #44]	@ 0x2c
90025fa2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025fa4:	685b      	ldr	r3, [r3, #4]
90025fa6:	930c      	str	r3, [sp, #48]	@ 0x30
90025fa8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90025fac:	930a      	str	r3, [sp, #40]	@ 0x28
90025fae:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90025fb0:	2b00      	cmp	r3, #0
90025fb2:	dc03      	bgt.n	90025fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025fb4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90025fb6:	2b00      	cmp	r3, #0
90025fb8:	f340 83cd 	ble.w	90026756 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90025fbc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025fbe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025fc2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025fc6:	1e48      	subs	r0, r1, #1
90025fc8:	1e55      	subs	r5, r2, #1
90025fca:	9b08      	ldr	r3, [sp, #32]
90025fcc:	2b00      	cmp	r3, #0
90025fce:	f340 81a5 	ble.w	9002631c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90025fd2:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90025fd4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90025fd6:	1436      	asrs	r6, r6, #16
90025fd8:	ea4f 4323 	mov.w	r3, r3, asr #16
90025fdc:	d406      	bmi.n	90025fec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025fde:	4286      	cmp	r6, r0
90025fe0:	da04      	bge.n	90025fec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025fe2:	2b00      	cmp	r3, #0
90025fe4:	db02      	blt.n	90025fec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025fe6:	42ab      	cmp	r3, r5
90025fe8:	f2c0 8199 	blt.w	9002631e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90025fec:	3601      	adds	r6, #1
90025fee:	f100 8186 	bmi.w	900262fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90025ff2:	42b1      	cmp	r1, r6
90025ff4:	f2c0 8183 	blt.w	900262fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90025ff8:	3301      	adds	r3, #1
90025ffa:	f100 8180 	bmi.w	900262fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90025ffe:	429a      	cmp	r2, r3
90026000:	f2c0 817d 	blt.w	900262fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90026004:	9b08      	ldr	r3, [sp, #32]
90026006:	f64f 061f 	movw	r6, #63519	@ 0xf81f
9002600a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
9002600c:	9313      	str	r3, [sp, #76]	@ 0x4c
9002600e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90026010:	2b00      	cmp	r3, #0
90026012:	f340 81a6 	ble.w	90026362 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90026016:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90026018:	9d21      	ldr	r5, [sp, #132]	@ 0x84
9002601a:	1418      	asrs	r0, r3, #16
9002601c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002601e:	142d      	asrs	r5, r5, #16
90026020:	f3c3 3103 	ubfx	r1, r3, #12, #4
90026024:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90026026:	f3c3 3c03 	ubfx	ip, r3, #12, #4
9002602a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002602c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90026030:	f100 81fa 	bmi.w	90026428 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90026034:	f102 3eff 	add.w	lr, r2, #4294967295
90026038:	4575      	cmp	r5, lr
9002603a:	f280 81f5 	bge.w	90026428 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9002603e:	2800      	cmp	r0, #0
90026040:	f2c0 81f2 	blt.w	90026428 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90026044:	f103 3eff 	add.w	lr, r3, #4294967295
90026048:	4570      	cmp	r0, lr
9002604a:	f280 81ed 	bge.w	90026428 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9002604e:	b212      	sxth	r2, r2
90026050:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90026052:	fa1f fe81 	uxth.w	lr, r1
90026056:	fb00 5002 	mla	r0, r0, r2, r5
9002605a:	ea4f 150e 	mov.w	r5, lr, lsl #4
9002605e:	eb03 0a00 	add.w	sl, r3, r0
90026062:	f813 9000 	ldrb.w	r9, [r3, r0]
90026066:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
9002606a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002606e:	b29b      	uxth	r3, r3
90026070:	f1bc 0f00 	cmp.w	ip, #0
90026074:	f000 81bb 	beq.w	900263ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90026078:	f81a 4002 	ldrb.w	r4, [sl, r2]
9002607c:	eb0a 0b02 	add.w	fp, sl, r2
90026080:	fa1f fa8c 	uxth.w	sl, ip
90026084:	940d      	str	r4, [sp, #52]	@ 0x34
90026086:	fb0a fe0e 	mul.w	lr, sl, lr
9002608a:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002608e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90026092:	eba5 050e 	sub.w	r5, r5, lr
90026096:	940e      	str	r4, [sp, #56]	@ 0x38
90026098:	fa1f fa8a 	uxth.w	sl, sl
9002609c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002609e:	b2ad      	uxth	r5, r5
900260a0:	eba3 030a 	sub.w	r3, r3, sl
900260a4:	fb08 f505 	mul.w	r5, r8, r5
900260a8:	b29b      	uxth	r3, r3
900260aa:	fb09 5303 	mla	r3, r9, r3, r5
900260ae:	fb0a 3304 	mla	r3, sl, r4, r3
900260b2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900260b4:	fb0e 3304 	mla	r3, lr, r4, r3
900260b8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900260bc:	2b00      	cmp	r3, #0
900260be:	f000 8111 	beq.w	900262e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900260c2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900260c4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900260c8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900260cc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
900260d0:	f000 8192 	beq.w	900263f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
900260d4:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900260d8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900260dc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900260e0:	fb0a fe0e 	mul.w	lr, sl, lr
900260e4:	fb09 f000 	mul.w	r0, r9, r0
900260e8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900260ec:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900260f0:	f100 0b20 	add.w	fp, r0, #32
900260f4:	44ce      	add	lr, r9
900260f6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900260fa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900260fe:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026102:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90026106:	ea4e 0909 	orr.w	r9, lr, r9
9002610a:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
9002610e:	8868      	ldrh	r0, [r5, #2]
90026110:	d019      	beq.n	90026146 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90026112:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90026116:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002611a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002611e:	fb0a fe0e 	mul.w	lr, sl, lr
90026122:	fb08 f800 	mul.w	r8, r8, r0
90026126:	ea06 105e 	and.w	r0, r6, lr, lsr #5
9002612a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
9002612e:	f108 0b20 	add.w	fp, r8, #32
90026132:	4486      	add	lr, r0
90026134:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90026138:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9002613c:	0a00      	lsrs	r0, r0, #8
9002613e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026142:	ea4e 0000 	orr.w	r0, lr, r0
90026146:	ea4f 4e09 	mov.w	lr, r9, lsl #16
9002614a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
9002614e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90026152:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026156:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
9002615a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002615e:	ea4e 0909 	orr.w	r9, lr, r9
90026162:	ea4a 0000 	orr.w	r0, sl, r0
90026166:	f1bc 0f00 	cmp.w	ip, #0
9002616a:	f000 8147 	beq.w	900263fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
9002616e:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90026172:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90026174:	3a01      	subs	r2, #1
90026176:	2cff      	cmp	r4, #255	@ 0xff
90026178:	ea4f 0242 	mov.w	r2, r2, lsl #1
9002617c:	f102 0202 	add.w	r2, r2, #2
90026180:	eb05 0e02 	add.w	lr, r5, r2
90026184:	5aaa      	ldrh	r2, [r5, r2]
90026186:	d018      	beq.n	900261ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90026188:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
9002618c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026190:	ea4f 08e4 	mov.w	r8, r4, asr #3
90026194:	fb04 fa02 	mul.w	sl, r4, r2
90026198:	fb08 f805 	mul.w	r8, r8, r5
9002619c:	f10a 0520 	add.w	r5, sl, #32
900261a0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
900261a4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900261a8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
900261ac:	4442      	add	r2, r8
900261ae:	0a2d      	lsrs	r5, r5, #8
900261b0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
900261b4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900261b8:	432a      	orrs	r2, r5
900261ba:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900261bc:	f8be 5002 	ldrh.w	r5, [lr, #2]
900261c0:	2cff      	cmp	r4, #255	@ 0xff
900261c2:	d01a      	beq.n	900261fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
900261c4:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
900261c8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900261cc:	ea4f 08e4 	mov.w	r8, r4, asr #3
900261d0:	fb04 fa05 	mul.w	sl, r4, r5
900261d4:	fb08 f80e 	mul.w	r8, r8, lr
900261d8:	f10a 0e20 	add.w	lr, sl, #32
900261dc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900261e0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900261e4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900261e8:	4445      	add	r5, r8
900261ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900261ee:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900261f2:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
900261f6:	ea45 050e 	orr.w	r5, r5, lr
900261fa:	fb1c fe01 	smulbb	lr, ip, r1
900261fe:	f1cc 0810 	rsb	r8, ip, #16
90026202:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90026206:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002620a:	ea4f 0eee 	mov.w	lr, lr, asr #3
9002620e:	eba8 0801 	sub.w	r8, r8, r1
90026212:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90026216:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002621a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
9002621e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90026222:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90026226:	ea4a 0202 	orr.w	r2, sl, r2
9002622a:	4341      	muls	r1, r0
9002622c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90026230:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90026234:	fb09 1108 	mla	r1, r9, r8, r1
90026238:	ea4b 0505 	orr.w	r5, fp, r5
9002623c:	fb0c 1102 	mla	r1, ip, r2, r1
90026240:	fb0e 1e05 	mla	lr, lr, r5, r1
90026244:	ea4f 525e 	mov.w	r2, lr, lsr #21
90026248:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9002624c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026250:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90026254:	ea42 0e0e 	orr.w	lr, r2, lr
90026258:	fa1f f28e 	uxth.w	r2, lr
9002625c:	2bff      	cmp	r3, #255	@ 0xff
9002625e:	d103      	bne.n	90026268 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90026260:	9912      	ldr	r1, [sp, #72]	@ 0x48
90026262:	29ff      	cmp	r1, #255	@ 0xff
90026264:	f000 80de 	beq.w	90026424 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90026268:	990a      	ldr	r1, [sp, #40]	@ 0x28
9002626a:	1215      	asrs	r5, r2, #8
9002626c:	8838      	ldrh	r0, [r7, #0]
9002626e:	434b      	muls	r3, r1
90026270:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90026274:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90026276:	f103 0c01 	add.w	ip, r3, #1
9002627a:	eb0c 2323 	add.w	r3, ip, r3, asr #8
9002627e:	ea6f 2323 	mvn.w	r3, r3, asr #8
90026282:	fa5f fc83 	uxtb.w	ip, r3
90026286:	1203      	asrs	r3, r0, #8
90026288:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
9002628c:	fb13 f30c 	smulbb	r3, r3, ip
90026290:	fb05 3501 	mla	r5, r5, r1, r3
90026294:	10c3      	asrs	r3, r0, #3
90026296:	10d1      	asrs	r1, r2, #3
90026298:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002629c:	00d2      	lsls	r2, r2, #3
9002629e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900262a2:	b2ad      	uxth	r5, r5
900262a4:	fb13 f30c 	smulbb	r3, r3, ip
900262a8:	b2d2      	uxtb	r2, r2
900262aa:	fb01 3104 	mla	r1, r1, r4, r3
900262ae:	00c3      	lsls	r3, r0, #3
900262b0:	b2db      	uxtb	r3, r3
900262b2:	b289      	uxth	r1, r1
900262b4:	fb13 f30c 	smulbb	r3, r3, ip
900262b8:	fb02 3304 	mla	r3, r2, r4, r3
900262bc:	b29a      	uxth	r2, r3
900262be:	1c6b      	adds	r3, r5, #1
900262c0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900262c4:	1c53      	adds	r3, r2, #1
900262c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900262ca:	1c4a      	adds	r2, r1, #1
900262cc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900262d0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900262d4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900262d8:	0949      	lsrs	r1, r1, #5
900262da:	432b      	orrs	r3, r5
900262dc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900262e0:	430b      	orrs	r3, r1
900262e2:	803b      	strh	r3, [r7, #0]
900262e4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900262e6:	3702      	adds	r7, #2
900262e8:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
900262ea:	4413      	add	r3, r2
900262ec:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900262ee:	9321      	str	r3, [sp, #132]	@ 0x84
900262f0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900262f2:	441a      	add	r2, r3
900262f4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900262f6:	3b01      	subs	r3, #1
900262f8:	9222      	str	r2, [sp, #136]	@ 0x88
900262fa:	9313      	str	r3, [sp, #76]	@ 0x4c
900262fc:	e687      	b.n	9002600e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900262fe:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026300:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
90026302:	9c22      	ldr	r4, [sp, #136]	@ 0x88
90026304:	4433      	add	r3, r6
90026306:	9321      	str	r3, [sp, #132]	@ 0x84
90026308:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002630a:	441c      	add	r4, r3
9002630c:	9b08      	ldr	r3, [sp, #32]
9002630e:	3b01      	subs	r3, #1
90026310:	9422      	str	r4, [sp, #136]	@ 0x88
90026312:	9308      	str	r3, [sp, #32]
90026314:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026316:	3302      	adds	r3, #2
90026318:	9309      	str	r3, [sp, #36]	@ 0x24
9002631a:	e656      	b.n	90025fca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
9002631c:	d028      	beq.n	90026370 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
9002631e:	9b08      	ldr	r3, [sp, #32]
90026320:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90026322:	3b01      	subs	r3, #1
90026324:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90026326:	fb00 5003 	mla	r0, r0, r3, r5
9002632a:	1400      	asrs	r0, r0, #16
9002632c:	f53f ae6a 	bmi.w	90026004 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026330:	3901      	subs	r1, #1
90026332:	4288      	cmp	r0, r1
90026334:	f6bf ae66 	bge.w	90026004 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026338:	9924      	ldr	r1, [sp, #144]	@ 0x90
9002633a:	9822      	ldr	r0, [sp, #136]	@ 0x88
9002633c:	fb01 0303 	mla	r3, r1, r3, r0
90026340:	141b      	asrs	r3, r3, #16
90026342:	f53f ae5f 	bmi.w	90026004 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026346:	3a01      	subs	r2, #1
90026348:	4293      	cmp	r3, r2
9002634a:	f6bf ae5b 	bge.w	90026004 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002634e:	9b08      	ldr	r3, [sp, #32]
90026350:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90026354:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90026358:	9313      	str	r3, [sp, #76]	@ 0x4c
9002635a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9002635c:	2b00      	cmp	r3, #0
9002635e:	f300 8082 	bgt.w	90026466 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90026362:	9b08      	ldr	r3, [sp, #32]
90026364:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90026368:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002636a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002636e:	9309      	str	r3, [sp, #36]	@ 0x24
90026370:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90026372:	2b00      	cmp	r3, #0
90026374:	f340 81ef 	ble.w	90026756 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90026378:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002637c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002637e:	ee30 0a04 	vadd.f32	s0, s0, s8
90026382:	ee70 0aa4 	vadd.f32	s1, s1, s9
90026386:	eef0 6a62 	vmov.f32	s13, s5
9002638a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002638e:	ee31 1a05 	vadd.f32	s2, s2, s10
90026392:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026396:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
9002639a:	eef0 6a43 	vmov.f32	s13, s6
9002639e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900263a2:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
900263a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900263aa:	ee61 7a27 	vmul.f32	s15, s2, s15
900263ae:	ee77 2a62 	vsub.f32	s5, s14, s5
900263b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900263b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900263ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900263be:	ee12 2a90 	vmov	r2, s5
900263c2:	eef0 2a47 	vmov.f32	s5, s14
900263c6:	fb92 f3f3 	sdiv	r3, r2, r3
900263ca:	ee13 2a10 	vmov	r2, s6
900263ce:	9323      	str	r3, [sp, #140]	@ 0x8c
900263d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900263d2:	eeb0 3a67 	vmov.f32	s6, s15
900263d6:	fb92 f3f3 	sdiv	r3, r2, r3
900263da:	9324      	str	r3, [sp, #144]	@ 0x90
900263dc:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900263de:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900263e0:	3b01      	subs	r3, #1
900263e2:	9311      	str	r3, [sp, #68]	@ 0x44
900263e4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900263e6:	bf08      	it	eq
900263e8:	4613      	moveq	r3, r2
900263ea:	9308      	str	r3, [sp, #32]
900263ec:	e5df      	b.n	90025fae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900263ee:	fb08 f505 	mul.w	r5, r8, r5
900263f2:	fb09 5303 	mla	r3, r9, r3, r5
900263f6:	e65f      	b.n	900260b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
900263f8:	4681      	mov	r9, r0
900263fa:	e686      	b.n	9002610a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900263fc:	f1c1 0210 	rsb	r2, r1, #16
90026400:	4341      	muls	r1, r0
90026402:	fb09 1902 	mla	r9, r9, r2, r1
90026406:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002640a:	ea4f 5259 	mov.w	r2, r9, lsr #21
9002640e:	ea4f 1959 	mov.w	r9, r9, lsr #5
90026412:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026416:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
9002641a:	ea42 0909 	orr.w	r9, r2, r9
9002641e:	fa1f f289 	uxth.w	r2, r9
90026422:	e71b      	b.n	9002625c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90026424:	803a      	strh	r2, [r7, #0]
90026426:	e75d      	b.n	900262e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026428:	f115 0e01 	adds.w	lr, r5, #1
9002642c:	f53f af5a 	bmi.w	900262e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026430:	4572      	cmp	r2, lr
90026432:	f6ff af57 	blt.w	900262e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026436:	f110 0e01 	adds.w	lr, r0, #1
9002643a:	f53f af53 	bmi.w	900262e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002643e:	4573      	cmp	r3, lr
90026440:	f6ff af50 	blt.w	900262e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026444:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90026446:	b21b      	sxth	r3, r3
90026448:	b212      	sxth	r2, r2
9002644a:	9502      	str	r5, [sp, #8]
9002644c:	9301      	str	r3, [sp, #4]
9002644e:	9200      	str	r2, [sp, #0]
90026450:	e9cd 0103 	strd	r0, r1, [sp, #12]
90026454:	e9cd c405 	strd	ip, r4, [sp, #20]
90026458:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
9002645c:	4639      	mov	r1, r7
9002645e:	9815      	ldr	r0, [sp, #84]	@ 0x54
90026460:	f7ff fc02 	bl	90025c68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90026464:	e73e      	b.n	900262e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026466:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026468:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002646c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002646e:	f3c3 3503 	ubfx	r5, r3, #12, #4
90026472:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026474:	fa1f fc82 	uxth.w	ip, r2
90026478:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002647c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002647e:	ea4f 100c 	mov.w	r0, ip, lsl #4
90026482:	141f      	asrs	r7, r3, #16
90026484:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026486:	141b      	asrs	r3, r3, #16
90026488:	fb01 3707 	mla	r7, r1, r7, r3
9002648c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002648e:	eb03 0a07 	add.w	sl, r3, r7
90026492:	f813 9007 	ldrb.w	r9, [r3, r7]
90026496:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
9002649a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002649e:	b29b      	uxth	r3, r3
900264a0:	2d00      	cmp	r5, #0
900264a2:	f000 813d 	beq.w	90026720 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
900264a6:	f81a 4001 	ldrb.w	r4, [sl, r1]
900264aa:	eb0a 0b01 	add.w	fp, sl, r1
900264ae:	fa1f fa85 	uxth.w	sl, r5
900264b2:	940f      	str	r4, [sp, #60]	@ 0x3c
900264b4:	fb0a fc0c 	mul.w	ip, sl, ip
900264b8:	f89b 4001 	ldrb.w	r4, [fp, #1]
900264bc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
900264c0:	eba0 000c 	sub.w	r0, r0, ip
900264c4:	9410      	str	r4, [sp, #64]	@ 0x40
900264c6:	fa1f fa8a 	uxth.w	sl, sl
900264ca:	b280      	uxth	r0, r0
900264cc:	eba3 030a 	sub.w	r3, r3, sl
900264d0:	fb08 f000 	mul.w	r0, r8, r0
900264d4:	b29b      	uxth	r3, r3
900264d6:	fb09 0303 	mla	r3, r9, r3, r0
900264da:	980f      	ldr	r0, [sp, #60]	@ 0x3c
900264dc:	fb0a 3300 	mla	r3, sl, r0, r3
900264e0:	fb0c 3304 	mla	r3, ip, r4, r3
900264e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900264e8:	2b00      	cmp	r3, #0
900264ea:	f000 810b 	beq.w	90026704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
900264ee:	980b      	ldr	r0, [sp, #44]	@ 0x2c
900264f0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900264f4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900264f6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900264fa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900264fe:	f000 8114 	beq.w	9002672a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90026502:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90026506:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002650a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002650e:	fb0a fc0c 	mul.w	ip, sl, ip
90026512:	fb09 f707 	mul.w	r7, r9, r7
90026516:	ea06 195c 	and.w	r9, r6, ip, lsr #5
9002651a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
9002651e:	f107 0b20 	add.w	fp, r7, #32
90026522:	44cc      	add	ip, r9
90026524:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90026528:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002652c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026530:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90026534:	ea4c 0909 	orr.w	r9, ip, r9
90026538:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
9002653c:	8847      	ldrh	r7, [r0, #2]
9002653e:	d019      	beq.n	90026574 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90026540:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90026544:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90026548:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002654c:	fb0a fc0c 	mul.w	ip, sl, ip
90026550:	fb08 f807 	mul.w	r8, r8, r7
90026554:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90026558:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
9002655c:	f108 0b20 	add.w	fp, r8, #32
90026560:	44bc      	add	ip, r7
90026562:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90026566:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002656a:	0a3f      	lsrs	r7, r7, #8
9002656c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026570:	ea4c 0707 	orr.w	r7, ip, r7
90026574:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90026578:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
9002657c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90026580:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90026584:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90026588:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002658c:	ea4c 0909 	orr.w	r9, ip, r9
90026590:	ea4a 0707 	orr.w	r7, sl, r7
90026594:	2d00      	cmp	r5, #0
90026596:	f000 80ca 	beq.w	9002672e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
9002659a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
9002659e:	3901      	subs	r1, #1
900265a0:	0049      	lsls	r1, r1, #1
900265a2:	3102      	adds	r1, #2
900265a4:	eb00 0c01 	add.w	ip, r0, r1
900265a8:	5a41      	ldrh	r1, [r0, r1]
900265aa:	980f      	ldr	r0, [sp, #60]	@ 0x3c
900265ac:	28ff      	cmp	r0, #255	@ 0xff
900265ae:	d019      	beq.n	900265e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
900265b0:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
900265b4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900265b6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900265ba:	ea4f 08e4 	mov.w	r8, r4, asr #3
900265be:	fb04 fa01 	mul.w	sl, r4, r1
900265c2:	fb08 f800 	mul.w	r8, r8, r0
900265c6:	f10a 0020 	add.w	r0, sl, #32
900265ca:	ea06 1158 	and.w	r1, r6, r8, lsr #5
900265ce:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900265d2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900265d6:	4441      	add	r1, r8
900265d8:	0a00      	lsrs	r0, r0, #8
900265da:	ea06 1151 	and.w	r1, r6, r1, lsr #5
900265de:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900265e2:	4301      	orrs	r1, r0
900265e4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900265e6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
900265ea:	2cff      	cmp	r4, #255	@ 0xff
900265ec:	d01a      	beq.n	90026624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
900265ee:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
900265f2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900265f6:	ea4f 08e4 	mov.w	r8, r4, asr #3
900265fa:	fb04 fa00 	mul.w	sl, r4, r0
900265fe:	fb08 f80c 	mul.w	r8, r8, ip
90026602:	f10a 0c20 	add.w	ip, sl, #32
90026606:	ea06 1058 	and.w	r0, r6, r8, lsr #5
9002660a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002660e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90026612:	4440      	add	r0, r8
90026614:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026618:	ea06 1050 	and.w	r0, r6, r0, lsr #5
9002661c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90026620:	ea40 000c 	orr.w	r0, r0, ip
90026624:	fb15 fc02 	smulbb	ip, r5, r2
90026628:	f1c5 0810 	rsb	r8, r5, #16
9002662c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90026630:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90026634:	ea4f 0cec 	mov.w	ip, ip, asr #3
90026638:	eba8 0802 	sub.w	r8, r8, r2
9002663c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90026640:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026644:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90026648:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002664c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90026650:	ea4a 0101 	orr.w	r1, sl, r1
90026654:	437a      	muls	r2, r7
90026656:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9002665a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002665e:	fb09 2208 	mla	r2, r9, r8, r2
90026662:	ea4b 0000 	orr.w	r0, fp, r0
90026666:	fb05 2201 	mla	r2, r5, r1, r2
9002666a:	fb0c 2200 	mla	r2, ip, r0, r2
9002666e:	0d57      	lsrs	r7, r2, #21
90026670:	0952      	lsrs	r2, r2, #5
90026672:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026676:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002667a:	433a      	orrs	r2, r7
9002667c:	2bff      	cmp	r3, #255	@ 0xff
9002667e:	b292      	uxth	r2, r2
90026680:	d102      	bne.n	90026688 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90026682:	9912      	ldr	r1, [sp, #72]	@ 0x48
90026684:	29ff      	cmp	r1, #255	@ 0xff
90026686:	d063      	beq.n	90026750 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90026688:	980a      	ldr	r0, [sp, #40]	@ 0x28
9002668a:	1215      	asrs	r5, r2, #8
9002668c:	f8be 1000 	ldrh.w	r1, [lr]
90026690:	4343      	muls	r3, r0
90026692:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90026694:	10cf      	asrs	r7, r1, #3
90026696:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002669a:	1c58      	adds	r0, r3, #1
9002669c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900266a0:	eb00 2323 	add.w	r3, r0, r3, asr #8
900266a4:	1208      	asrs	r0, r1, #8
900266a6:	ea6f 2323 	mvn.w	r3, r3, asr #8
900266aa:	00c9      	lsls	r1, r1, #3
900266ac:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900266b0:	b2db      	uxtb	r3, r3
900266b2:	b2c9      	uxtb	r1, r1
900266b4:	fb10 f003 	smulbb	r0, r0, r3
900266b8:	fb11 f103 	smulbb	r1, r1, r3
900266bc:	fb05 0504 	mla	r5, r5, r4, r0
900266c0:	10d0      	asrs	r0, r2, #3
900266c2:	fb17 f703 	smulbb	r7, r7, r3
900266c6:	00d2      	lsls	r2, r2, #3
900266c8:	b2ad      	uxth	r5, r5
900266ca:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900266ce:	b2d2      	uxtb	r2, r2
900266d0:	fb00 7004 	mla	r0, r0, r4, r7
900266d4:	1c6b      	adds	r3, r5, #1
900266d6:	fb02 1204 	mla	r2, r2, r4, r1
900266da:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900266de:	b292      	uxth	r2, r2
900266e0:	b280      	uxth	r0, r0
900266e2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900266e6:	1c57      	adds	r7, r2, #1
900266e8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900266ec:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900266f0:	433d      	orrs	r5, r7
900266f2:	1c47      	adds	r7, r0, #1
900266f4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
900266f8:	097f      	lsrs	r7, r7, #5
900266fa:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900266fe:	433d      	orrs	r5, r7
90026700:	f8ae 5000 	strh.w	r5, [lr]
90026704:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026706:	f10e 0e02 	add.w	lr, lr, #2
9002670a:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
9002670c:	4413      	add	r3, r2
9002670e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90026710:	9321      	str	r3, [sp, #132]	@ 0x84
90026712:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026714:	441a      	add	r2, r3
90026716:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90026718:	3b01      	subs	r3, #1
9002671a:	9222      	str	r2, [sp, #136]	@ 0x88
9002671c:	9313      	str	r3, [sp, #76]	@ 0x4c
9002671e:	e61c      	b.n	9002635a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90026720:	fb08 f000 	mul.w	r0, r8, r0
90026724:	fb09 0303 	mla	r3, r9, r3, r0
90026728:	e6dc      	b.n	900264e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
9002672a:	46b9      	mov	r9, r7
9002672c:	e704      	b.n	90026538 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
9002672e:	f1c2 0110 	rsb	r1, r2, #16
90026732:	437a      	muls	r2, r7
90026734:	fb09 2901 	mla	r9, r9, r1, r2
90026738:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002673c:	ea4f 5059 	mov.w	r0, r9, lsr #21
90026740:	ea4f 1259 	mov.w	r2, r9, lsr #5
90026744:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026748:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002674c:	4302      	orrs	r2, r0
9002674e:	e795      	b.n	9002667c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90026750:	f8ae 2000 	strh.w	r2, [lr]
90026754:	e7d6      	b.n	90026704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90026756:	b017      	add	sp, #92	@ 0x5c
90026758:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002675c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9002675c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026760:	b085      	sub	sp, #20
90026762:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90026766:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
9002676a:	2800      	cmp	r0, #0
9002676c:	9103      	str	r1, [sp, #12]
9002676e:	fb00 7406 	mla	r4, r0, r6, r7
90026772:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90026776:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
9002677a:	eb03 0544 	add.w	r5, r3, r4, lsl #1
9002677e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
90026782:	eb02 0904 	add.w	r9, r2, r4
90026786:	9501      	str	r5, [sp, #4]
90026788:	f2c0 8141 	blt.w	90026a0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
9002678c:	4583      	cmp	fp, r0
9002678e:	f340 813e 	ble.w	90026a0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90026792:	2f00      	cmp	r7, #0
90026794:	f2c0 8137 	blt.w	90026a06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90026798:	42be      	cmp	r6, r7
9002679a:	f340 8134 	ble.w	90026a06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
9002679e:	f812 c004 	ldrb.w	ip, [r2, r4]
900267a2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
900267a6:	f64f 041f 	movw	r4, #63519	@ 0xf81f
900267aa:	ea4f 02ec 	mov.w	r2, ip, asr #3
900267ae:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
900267b2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900267b6:	4355      	muls	r5, r2
900267b8:	fb0c f203 	mul.w	r2, ip, r3
900267bc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900267c0:	f605 0501 	addw	r5, r5, #2049	@ 0x801
900267c4:	441d      	add	r5, r3
900267c6:	f102 0320 	add.w	r3, r2, #32
900267ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900267ce:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900267d2:	0a1b      	lsrs	r3, r3, #8
900267d4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900267d8:	431c      	orrs	r4, r3
900267da:	1c7b      	adds	r3, r7, #1
900267dc:	f100 811c 	bmi.w	90026a18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900267e0:	429e      	cmp	r6, r3
900267e2:	f340 8119 	ble.w	90026a18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900267e6:	2900      	cmp	r1, #0
900267e8:	f000 8119 	beq.w	90026a1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
900267ec:	9a01      	ldr	r2, [sp, #4]
900267ee:	f899 3001 	ldrb.w	r3, [r9, #1]
900267f2:	8855      	ldrh	r5, [r2, #2]
900267f4:	ea4f 08e3 	mov.w	r8, r3, asr #3
900267f8:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
900267fc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026800:	fb08 f802 	mul.w	r8, r8, r2
90026804:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90026808:	435d      	muls	r5, r3
9002680a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
9002680e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026812:	44d0      	add	r8, sl
90026814:	f105 0a20 	add.w	sl, r5, #32
90026818:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
9002681c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90026820:	0a2d      	lsrs	r5, r5, #8
90026822:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026826:	432a      	orrs	r2, r5
90026828:	3001      	adds	r0, #1
9002682a:	f100 80fe 	bmi.w	90026a2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
9002682e:	4583      	cmp	fp, r0
90026830:	f340 80fb 	ble.w	90026a2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90026834:	f1be 0f00 	cmp.w	lr, #0
90026838:	f000 80fc 	beq.w	90026a34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
9002683c:	2f00      	cmp	r7, #0
9002683e:	f2c0 80f1 	blt.w	90026a24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90026842:	42be      	cmp	r6, r7
90026844:	f340 80ee 	ble.w	90026a24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90026848:	9801      	ldr	r0, [sp, #4]
9002684a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
9002684e:	f819 5006 	ldrb.w	r5, [r9, r6]
90026852:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90026856:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9002685a:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
9002685e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90026862:	fb0a fa00 	mul.w	sl, sl, r0
90026866:	fb05 f808 	mul.w	r8, r5, r8
9002686a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
9002686e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90026872:	4482      	add	sl, r0
90026874:	f108 0020 	add.w	r0, r8, #32
90026878:	eb00 2018 	add.w	r0, r0, r8, lsr #8
9002687c:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90026880:	0a00      	lsrs	r0, r0, #8
90026882:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026886:	ea4b 0b00 	orr.w	fp, fp, r0
9002688a:	3701      	adds	r7, #1
9002688c:	f100 80d7 	bmi.w	90026a3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90026890:	42be      	cmp	r6, r7
90026892:	f340 80d4 	ble.w	90026a3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90026896:	2900      	cmp	r1, #0
90026898:	f000 80d4 	beq.w	90026a44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
9002689c:	3601      	adds	r6, #1
9002689e:	9801      	ldr	r0, [sp, #4]
900268a0:	f819 7006 	ldrb.w	r7, [r9, r6]
900268a4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
900268a8:	ea4f 09e7 	mov.w	r9, r7, asr #3
900268ac:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
900268b0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900268b4:	fb09 f906 	mul.w	r9, r9, r6
900268b8:	fb07 f800 	mul.w	r8, r7, r0
900268bc:	f64f 001f 	movw	r0, #63519	@ 0xf81f
900268c0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900268c4:	f609 0901 	addw	r9, r9, #2049	@ 0x801
900268c8:	44d1      	add	r9, sl
900268ca:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900268ce:	f108 0020 	add.w	r0, r8, #32
900268d2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900268d6:	0a00      	lsrs	r0, r0, #8
900268d8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900268dc:	4330      	orrs	r0, r6
900268de:	b28e      	uxth	r6, r1
900268e0:	fa1f f98e 	uxth.w	r9, lr
900268e4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900268e8:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
900268ec:	fb06 f809 	mul.w	r8, r6, r9
900268f0:	0136      	lsls	r6, r6, #4
900268f2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900268f6:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900268fa:	9601      	str	r6, [sp, #4]
900268fc:	ea4a 0404 	orr.w	r4, sl, r4
90026900:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90026904:	fa1f f689 	uxth.w	r6, r9
90026908:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002690c:	fb11 f90e 	smulbb	r9, r1, lr
90026910:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026914:	9602      	str	r6, [sp, #8]
90026916:	4626      	mov	r6, r4
90026918:	f3c9 09c7 	ubfx	r9, r9, #3, #8
9002691c:	f1ce 0410 	rsb	r4, lr, #16
90026920:	ea4a 0202 	orr.w	r2, sl, r2
90026924:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90026928:	1a64      	subs	r4, r4, r1
9002692a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
9002692e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026932:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026936:	434a      	muls	r2, r1
90026938:	eb09 0444 	add.w	r4, r9, r4, lsl #1
9002693c:	ea4a 0000 	orr.w	r0, sl, r0
90026940:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90026944:	fb04 2406 	mla	r4, r4, r6, r2
90026948:	9903      	ldr	r1, [sp, #12]
9002694a:	fb09 4200 	mla	r2, r9, r0, r4
9002694e:	ea4f 440b 	mov.w	r4, fp, lsl #16
90026952:	9801      	ldr	r0, [sp, #4]
90026954:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90026958:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9002695c:	8809      	ldrh	r1, [r1, #0]
9002695e:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
90026962:	ea44 0b0b 	orr.w	fp, r4, fp
90026966:	9c02      	ldr	r4, [sp, #8]
90026968:	1b00      	subs	r0, r0, r4
9002696a:	9c01      	ldr	r4, [sp, #4]
9002696c:	fb0e 2e0b 	mla	lr, lr, fp, r2
90026970:	eba4 0608 	sub.w	r6, r4, r8
90026974:	b280      	uxth	r0, r0
90026976:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002697a:	b2b6      	uxth	r6, r6
9002697c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90026980:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026984:	4373      	muls	r3, r6
90026986:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002698a:	fb0c 3300 	mla	r3, ip, r0, r3
9002698e:	9802      	ldr	r0, [sp, #8]
90026990:	ea42 0e0e 	orr.w	lr, r2, lr
90026994:	fb00 3505 	mla	r5, r0, r5, r3
90026998:	120b      	asrs	r3, r1, #8
9002699a:	10c8      	asrs	r0, r1, #3
9002699c:	fb08 5707 	mla	r7, r8, r7, r5
900269a0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900269a4:	00c9      	lsls	r1, r1, #3
900269a6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900269aa:	ea6f 2727 	mvn.w	r7, r7, asr #8
900269ae:	fa1f f28e 	uxth.w	r2, lr
900269b2:	b2c9      	uxtb	r1, r1
900269b4:	b2ff      	uxtb	r7, r7
900269b6:	437b      	muls	r3, r7
900269b8:	4378      	muls	r0, r7
900269ba:	434f      	muls	r7, r1
900269bc:	1c59      	adds	r1, r3, #1
900269be:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900269c2:	1213      	asrs	r3, r2, #8
900269c4:	f023 0307 	bic.w	r3, r3, #7
900269c8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900269cc:	1c41      	adds	r1, r0, #1
900269ce:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900269d2:	10d1      	asrs	r1, r2, #3
900269d4:	021b      	lsls	r3, r3, #8
900269d6:	f021 0103 	bic.w	r1, r1, #3
900269da:	00d2      	lsls	r2, r2, #3
900269dc:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900269e0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900269e4:	00c9      	lsls	r1, r1, #3
900269e6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900269ea:	430b      	orrs	r3, r1
900269ec:	1c79      	adds	r1, r7, #1
900269ee:	eb01 2717 	add.w	r7, r1, r7, lsr #8
900269f2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
900269f6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900269fa:	431a      	orrs	r2, r3
900269fc:	9b03      	ldr	r3, [sp, #12]
900269fe:	801a      	strh	r2, [r3, #0]
90026a00:	b005      	add	sp, #20
90026a02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026a06:	f04f 0c00 	mov.w	ip, #0
90026a0a:	4664      	mov	r4, ip
90026a0c:	e6e5      	b.n	900267da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
90026a0e:	2300      	movs	r3, #0
90026a10:	469c      	mov	ip, r3
90026a12:	461a      	mov	r2, r3
90026a14:	461c      	mov	r4, r3
90026a16:	e707      	b.n	90026828 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90026a18:	2300      	movs	r3, #0
90026a1a:	461a      	mov	r2, r3
90026a1c:	e704      	b.n	90026828 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90026a1e:	460b      	mov	r3, r1
90026a20:	460a      	mov	r2, r1
90026a22:	e701      	b.n	90026828 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90026a24:	2500      	movs	r5, #0
90026a26:	46ab      	mov	fp, r5
90026a28:	e72f      	b.n	9002688a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90026a2a:	2700      	movs	r7, #0
90026a2c:	463d      	mov	r5, r7
90026a2e:	4638      	mov	r0, r7
90026a30:	46bb      	mov	fp, r7
90026a32:	e754      	b.n	900268de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90026a34:	4677      	mov	r7, lr
90026a36:	4675      	mov	r5, lr
90026a38:	4670      	mov	r0, lr
90026a3a:	46f3      	mov	fp, lr
90026a3c:	e74f      	b.n	900268de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90026a3e:	2700      	movs	r7, #0
90026a40:	4638      	mov	r0, r7
90026a42:	e74c      	b.n	900268de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90026a44:	460f      	mov	r7, r1
90026a46:	4608      	mov	r0, r1
90026a48:	e749      	b.n	900268de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90026a4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026a4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026a50:	b093      	sub	sp, #76	@ 0x4c
90026a52:	9210      	str	r2, [sp, #64]	@ 0x40
90026a54:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90026a56:	9011      	str	r0, [sp, #68]	@ 0x44
90026a58:	910e      	str	r1, [sp, #56]	@ 0x38
90026a5a:	6850      	ldr	r0, [r2, #4]
90026a5c:	9306      	str	r3, [sp, #24]
90026a5e:	6812      	ldr	r2, [r2, #0]
90026a60:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90026a64:	fb00 1303 	mla	r3, r0, r3, r1
90026a68:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90026a6c:	9307      	str	r3, [sp, #28]
90026a6e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026a70:	681b      	ldr	r3, [r3, #0]
90026a72:	9308      	str	r3, [sp, #32]
90026a74:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026a76:	685b      	ldr	r3, [r3, #4]
90026a78:	9309      	str	r3, [sp, #36]	@ 0x24
90026a7a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90026a7c:	2b00      	cmp	r3, #0
90026a7e:	dc03      	bgt.n	90026a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90026a80:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90026a82:	2b00      	cmp	r3, #0
90026a84:	f340 83b6 	ble.w	900271f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90026a88:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026a8a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026a8e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026a92:	1e48      	subs	r0, r1, #1
90026a94:	1e55      	subs	r5, r2, #1
90026a96:	9b06      	ldr	r3, [sp, #24]
90026a98:	2b00      	cmp	r3, #0
90026a9a:	f340 8165 	ble.w	90026d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90026a9e:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
90026aa0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90026aa2:	1436      	asrs	r6, r6, #16
90026aa4:	ea4f 4323 	mov.w	r3, r3, asr #16
90026aa8:	d406      	bmi.n	90026ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90026aaa:	4286      	cmp	r6, r0
90026aac:	da04      	bge.n	90026ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90026aae:	2b00      	cmp	r3, #0
90026ab0:	db02      	blt.n	90026ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90026ab2:	42ab      	cmp	r3, r5
90026ab4:	f2c0 8159 	blt.w	90026d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90026ab8:	3601      	adds	r6, #1
90026aba:	f100 8146 	bmi.w	90026d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90026abe:	42b1      	cmp	r1, r6
90026ac0:	f2c0 8143 	blt.w	90026d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90026ac4:	3301      	adds	r3, #1
90026ac6:	f100 8140 	bmi.w	90026d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90026aca:	429a      	cmp	r2, r3
90026acc:	f2c0 813d 	blt.w	90026d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90026ad0:	9b06      	ldr	r3, [sp, #24]
90026ad2:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90026ad6:	9f07      	ldr	r7, [sp, #28]
90026ad8:	930f      	str	r3, [sp, #60]	@ 0x3c
90026ada:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90026adc:	2b00      	cmp	r3, #0
90026ade:	f340 8166 	ble.w	90026dae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026ae2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90026ae4:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90026ae6:	1418      	asrs	r0, r3, #16
90026ae8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90026aea:	142d      	asrs	r5, r5, #16
90026aec:	f3c3 3103 	ubfx	r1, r3, #12, #4
90026af0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90026af2:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90026af6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026af8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90026afc:	f100 81f0 	bmi.w	90026ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90026b00:	f102 3eff 	add.w	lr, r2, #4294967295
90026b04:	4575      	cmp	r5, lr
90026b06:	f280 81eb 	bge.w	90026ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90026b0a:	2800      	cmp	r0, #0
90026b0c:	f2c0 81e8 	blt.w	90026ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90026b10:	f103 3eff 	add.w	lr, r3, #4294967295
90026b14:	4570      	cmp	r0, lr
90026b16:	f280 81e3 	bge.w	90026ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90026b1a:	b212      	sxth	r2, r2
90026b1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026b1e:	fa1f fe81 	uxth.w	lr, r1
90026b22:	fb00 5002 	mla	r0, r0, r2, r5
90026b26:	ea4f 150e 	mov.w	r5, lr, lsl #4
90026b2a:	eb03 0a00 	add.w	sl, r3, r0
90026b2e:	f813 9000 	ldrb.w	r9, [r3, r0]
90026b32:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90026b36:	f89a 8001 	ldrb.w	r8, [sl, #1]
90026b3a:	b29b      	uxth	r3, r3
90026b3c:	f1bc 0f00 	cmp.w	ip, #0
90026b40:	f000 817b 	beq.w	90026e3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90026b44:	f81a 4002 	ldrb.w	r4, [sl, r2]
90026b48:	eb0a 0b02 	add.w	fp, sl, r2
90026b4c:	fa1f fa8c 	uxth.w	sl, ip
90026b50:	940a      	str	r4, [sp, #40]	@ 0x28
90026b52:	fb0a fe0e 	mul.w	lr, sl, lr
90026b56:	f89b 4001 	ldrb.w	r4, [fp, #1]
90026b5a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90026b5e:	eba5 050e 	sub.w	r5, r5, lr
90026b62:	940b      	str	r4, [sp, #44]	@ 0x2c
90026b64:	fa1f fa8a 	uxth.w	sl, sl
90026b68:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90026b6a:	b2ad      	uxth	r5, r5
90026b6c:	eba3 030a 	sub.w	r3, r3, sl
90026b70:	fb08 f505 	mul.w	r5, r8, r5
90026b74:	b29b      	uxth	r3, r3
90026b76:	fb09 5303 	mla	r3, r9, r3, r5
90026b7a:	fb0a 3304 	mla	r3, sl, r4, r3
90026b7e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90026b80:	fb0e 3304 	mla	r3, lr, r4, r3
90026b84:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026b88:	2b00      	cmp	r3, #0
90026b8a:	f000 80d1 	beq.w	90026d30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90026b8e:	9c08      	ldr	r4, [sp, #32]
90026b90:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90026b94:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90026b98:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90026b9c:	f000 8152 	beq.w	90026e44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90026ba0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90026ba4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90026ba8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026bac:	fb0a fe0e 	mul.w	lr, sl, lr
90026bb0:	fb09 f000 	mul.w	r0, r9, r0
90026bb4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90026bb8:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90026bbc:	f100 0b20 	add.w	fp, r0, #32
90026bc0:	44ce      	add	lr, r9
90026bc2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90026bc6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90026bca:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026bce:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90026bd2:	ea4e 0909 	orr.w	r9, lr, r9
90026bd6:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90026bda:	8868      	ldrh	r0, [r5, #2]
90026bdc:	d019      	beq.n	90026c12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90026bde:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90026be2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90026be6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026bea:	fb0a fe0e 	mul.w	lr, sl, lr
90026bee:	fb08 f800 	mul.w	r8, r8, r0
90026bf2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90026bf6:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90026bfa:	f108 0b20 	add.w	fp, r8, #32
90026bfe:	4486      	add	lr, r0
90026c00:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90026c04:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90026c08:	0a00      	lsrs	r0, r0, #8
90026c0a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026c0e:	ea4e 0000 	orr.w	r0, lr, r0
90026c12:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90026c16:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90026c1a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90026c1e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026c22:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90026c26:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026c2a:	ea4e 0909 	orr.w	r9, lr, r9
90026c2e:	ea4a 0000 	orr.w	r0, sl, r0
90026c32:	f1bc 0f00 	cmp.w	ip, #0
90026c36:	f000 8107 	beq.w	90026e48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90026c3a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90026c3e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90026c40:	3a01      	subs	r2, #1
90026c42:	2cff      	cmp	r4, #255	@ 0xff
90026c44:	ea4f 0242 	mov.w	r2, r2, lsl #1
90026c48:	f102 0202 	add.w	r2, r2, #2
90026c4c:	eb05 0e02 	add.w	lr, r5, r2
90026c50:	5aaa      	ldrh	r2, [r5, r2]
90026c52:	d018      	beq.n	90026c86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90026c54:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90026c58:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026c5c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90026c60:	fb04 fa02 	mul.w	sl, r4, r2
90026c64:	fb08 f805 	mul.w	r8, r8, r5
90026c68:	f10a 0520 	add.w	r5, sl, #32
90026c6c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90026c70:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026c74:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90026c78:	4442      	add	r2, r8
90026c7a:	0a2d      	lsrs	r5, r5, #8
90026c7c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90026c80:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026c84:	432a      	orrs	r2, r5
90026c86:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90026c88:	f8be 5002 	ldrh.w	r5, [lr, #2]
90026c8c:	2cff      	cmp	r4, #255	@ 0xff
90026c8e:	d01a      	beq.n	90026cc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90026c90:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90026c94:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026c98:	ea4f 08e4 	mov.w	r8, r4, asr #3
90026c9c:	fb04 fa05 	mul.w	sl, r4, r5
90026ca0:	fb08 f80e 	mul.w	r8, r8, lr
90026ca4:	f10a 0e20 	add.w	lr, sl, #32
90026ca8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90026cac:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026cb0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90026cb4:	4445      	add	r5, r8
90026cb6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026cba:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90026cbe:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90026cc2:	ea45 050e 	orr.w	r5, r5, lr
90026cc6:	fb1c fe01 	smulbb	lr, ip, r1
90026cca:	f1cc 0810 	rsb	r8, ip, #16
90026cce:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90026cd2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026cd6:	ea4f 0eee 	mov.w	lr, lr, asr #3
90026cda:	eba8 0801 	sub.w	r8, r8, r1
90026cde:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90026ce2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026ce6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90026cea:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90026cee:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90026cf2:	ea4a 0202 	orr.w	r2, sl, r2
90026cf6:	4341      	muls	r1, r0
90026cf8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90026cfc:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90026d00:	fb09 1108 	mla	r1, r9, r8, r1
90026d04:	ea4b 0505 	orr.w	r5, fp, r5
90026d08:	fb0c 1102 	mla	r1, ip, r2, r1
90026d0c:	fb0e 1e05 	mla	lr, lr, r5, r1
90026d10:	ea4f 525e 	mov.w	r2, lr, lsr #21
90026d14:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90026d18:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026d1c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90026d20:	ea42 0e0e 	orr.w	lr, r2, lr
90026d24:	fa1f f28e 	uxth.w	r2, lr
90026d28:	2bff      	cmp	r3, #255	@ 0xff
90026d2a:	f040 80a1 	bne.w	90026e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90026d2e:	803a      	strh	r2, [r7, #0]
90026d30:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90026d32:	3702      	adds	r7, #2
90026d34:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90026d36:	4413      	add	r3, r2
90026d38:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90026d3a:	931d      	str	r3, [sp, #116]	@ 0x74
90026d3c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026d3e:	441a      	add	r2, r3
90026d40:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90026d42:	3b01      	subs	r3, #1
90026d44:	921e      	str	r2, [sp, #120]	@ 0x78
90026d46:	930f      	str	r3, [sp, #60]	@ 0x3c
90026d48:	e6c7      	b.n	90026ada <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026d4a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90026d4c:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90026d4e:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
90026d50:	4433      	add	r3, r6
90026d52:	931d      	str	r3, [sp, #116]	@ 0x74
90026d54:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026d56:	441c      	add	r4, r3
90026d58:	9b06      	ldr	r3, [sp, #24]
90026d5a:	3b01      	subs	r3, #1
90026d5c:	941e      	str	r4, [sp, #120]	@ 0x78
90026d5e:	9306      	str	r3, [sp, #24]
90026d60:	9b07      	ldr	r3, [sp, #28]
90026d62:	3302      	adds	r3, #2
90026d64:	9307      	str	r3, [sp, #28]
90026d66:	e696      	b.n	90026a96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90026d68:	d028      	beq.n	90026dbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026d6a:	9b06      	ldr	r3, [sp, #24]
90026d6c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90026d6e:	3b01      	subs	r3, #1
90026d70:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90026d72:	fb00 5003 	mla	r0, r0, r3, r5
90026d76:	1400      	asrs	r0, r0, #16
90026d78:	f53f aeaa 	bmi.w	90026ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90026d7c:	3901      	subs	r1, #1
90026d7e:	4288      	cmp	r0, r1
90026d80:	f6bf aea6 	bge.w	90026ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90026d84:	9920      	ldr	r1, [sp, #128]	@ 0x80
90026d86:	981e      	ldr	r0, [sp, #120]	@ 0x78
90026d88:	fb01 0303 	mla	r3, r1, r3, r0
90026d8c:	141b      	asrs	r3, r3, #16
90026d8e:	f53f ae9f 	bmi.w	90026ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90026d92:	3a01      	subs	r2, #1
90026d94:	4293      	cmp	r3, r2
90026d96:	f6bf ae9b 	bge.w	90026ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90026d9a:	9b06      	ldr	r3, [sp, #24]
90026d9c:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90026da0:	f8dd e01c 	ldr.w	lr, [sp, #28]
90026da4:	930f      	str	r3, [sp, #60]	@ 0x3c
90026da6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90026da8:	2b00      	cmp	r3, #0
90026daa:	f300 80b6 	bgt.w	90026f1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90026dae:	9b06      	ldr	r3, [sp, #24]
90026db0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90026db4:	9b07      	ldr	r3, [sp, #28]
90026db6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90026dba:	9307      	str	r3, [sp, #28]
90026dbc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90026dbe:	2b00      	cmp	r3, #0
90026dc0:	f340 8218 	ble.w	900271f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90026dc4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90026dc8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90026dca:	ee30 0a04 	vadd.f32	s0, s0, s8
90026dce:	ee70 0aa4 	vadd.f32	s1, s1, s9
90026dd2:	eef0 6a62 	vmov.f32	s13, s5
90026dd6:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026dda:	ee31 1a05 	vadd.f32	s2, s2, s10
90026dde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026de2:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
90026de6:	eef0 6a43 	vmov.f32	s13, s6
90026dea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026dee:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
90026df2:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026df6:	ee61 7a27 	vmul.f32	s15, s2, s15
90026dfa:	ee77 2a62 	vsub.f32	s5, s14, s5
90026dfe:	ee37 3ac3 	vsub.f32	s6, s15, s6
90026e02:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026e06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026e0a:	ee12 2a90 	vmov	r2, s5
90026e0e:	eef0 2a47 	vmov.f32	s5, s14
90026e12:	fb92 f3f3 	sdiv	r3, r2, r3
90026e16:	ee13 2a10 	vmov	r2, s6
90026e1a:	931f      	str	r3, [sp, #124]	@ 0x7c
90026e1c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90026e1e:	eeb0 3a67 	vmov.f32	s6, s15
90026e22:	fb92 f3f3 	sdiv	r3, r2, r3
90026e26:	9320      	str	r3, [sp, #128]	@ 0x80
90026e28:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90026e2a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90026e2c:	3b01      	subs	r3, #1
90026e2e:	930e      	str	r3, [sp, #56]	@ 0x38
90026e30:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90026e32:	bf08      	it	eq
90026e34:	4613      	moveq	r3, r2
90026e36:	9306      	str	r3, [sp, #24]
90026e38:	e61f      	b.n	90026a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90026e3a:	fb08 f505 	mul.w	r5, r8, r5
90026e3e:	fb09 5303 	mla	r3, r9, r3, r5
90026e42:	e69f      	b.n	90026b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90026e44:	4681      	mov	r9, r0
90026e46:	e6c6      	b.n	90026bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90026e48:	f1c1 0210 	rsb	r2, r1, #16
90026e4c:	4341      	muls	r1, r0
90026e4e:	fb09 1902 	mla	r9, r9, r2, r1
90026e52:	ea4f 0949 	mov.w	r9, r9, lsl #1
90026e56:	ea4f 5259 	mov.w	r2, r9, lsr #21
90026e5a:	ea4f 1959 	mov.w	r9, r9, lsr #5
90026e5e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026e62:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90026e66:	ea42 0909 	orr.w	r9, r2, r9
90026e6a:	fa1f f289 	uxth.w	r2, r9
90026e6e:	e75b      	b.n	90026d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90026e70:	f8b7 c000 	ldrh.w	ip, [r7]
90026e74:	43db      	mvns	r3, r3
90026e76:	ea4f 202c 	mov.w	r0, ip, asr #8
90026e7a:	fa5f fe83 	uxtb.w	lr, r3
90026e7e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90026e82:	ea4f 05ec 	mov.w	r5, ip, asr #3
90026e86:	ea4f 03cc 	mov.w	r3, ip, lsl #3
90026e8a:	fb00 f00e 	mul.w	r0, r0, lr
90026e8e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90026e92:	b2db      	uxtb	r3, r3
90026e94:	1c41      	adds	r1, r0, #1
90026e96:	fb05 f50e 	mul.w	r5, r5, lr
90026e9a:	fb03 f30e 	mul.w	r3, r3, lr
90026e9e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90026ea2:	1211      	asrs	r1, r2, #8
90026ea4:	f021 0107 	bic.w	r1, r1, #7
90026ea8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90026eac:	48d3      	ldr	r0, [pc, #844]	@ (900271fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90026eae:	b2c9      	uxtb	r1, r1
90026eb0:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90026eb4:	1c69      	adds	r1, r5, #1
90026eb6:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90026eba:	10d1      	asrs	r1, r2, #3
90026ebc:	00d2      	lsls	r2, r2, #3
90026ebe:	f021 0103 	bic.w	r1, r1, #3
90026ec2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90026ec6:	00c9      	lsls	r1, r1, #3
90026ec8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90026ecc:	4301      	orrs	r1, r0
90026ece:	1c58      	adds	r0, r3, #1
90026ed0:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90026ed4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90026ed8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90026edc:	430a      	orrs	r2, r1
90026ede:	e726      	b.n	90026d2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90026ee0:	f115 0e01 	adds.w	lr, r5, #1
90026ee4:	f53f af24 	bmi.w	90026d30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90026ee8:	4572      	cmp	r2, lr
90026eea:	f6ff af21 	blt.w	90026d30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90026eee:	f110 0e01 	adds.w	lr, r0, #1
90026ef2:	f53f af1d 	bmi.w	90026d30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90026ef6:	4573      	cmp	r3, lr
90026ef8:	f6ff af1a 	blt.w	90026d30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90026efc:	b21b      	sxth	r3, r3
90026efe:	b212      	sxth	r2, r2
90026f00:	9301      	str	r3, [sp, #4]
90026f02:	9200      	str	r2, [sp, #0]
90026f04:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90026f08:	e9cd 5002 	strd	r5, r0, [sp, #8]
90026f0c:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90026f10:	4639      	mov	r1, r7
90026f12:	9811      	ldr	r0, [sp, #68]	@ 0x44
90026f14:	f7ff fc22 	bl	9002675c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90026f18:	e70a      	b.n	90026d30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90026f1a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90026f1c:	f3c3 3203 	ubfx	r2, r3, #12, #4
90026f20:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90026f22:	f3c3 3503 	ubfx	r5, r3, #12, #4
90026f26:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026f28:	fa1f fc82 	uxth.w	ip, r2
90026f2c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026f30:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90026f32:	ea4f 100c 	mov.w	r0, ip, lsl #4
90026f36:	141f      	asrs	r7, r3, #16
90026f38:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90026f3a:	141b      	asrs	r3, r3, #16
90026f3c:	fb01 3707 	mla	r7, r1, r7, r3
90026f40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026f42:	eb03 0a07 	add.w	sl, r3, r7
90026f46:	f813 9007 	ldrb.w	r9, [r3, r7]
90026f4a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90026f4e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90026f52:	b29b      	uxth	r3, r3
90026f54:	2d00      	cmp	r5, #0
90026f56:	f000 80fe 	beq.w	90027156 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90026f5a:	f81a 4001 	ldrb.w	r4, [sl, r1]
90026f5e:	eb0a 0b01 	add.w	fp, sl, r1
90026f62:	fa1f fa85 	uxth.w	sl, r5
90026f66:	940c      	str	r4, [sp, #48]	@ 0x30
90026f68:	fb0a fc0c 	mul.w	ip, sl, ip
90026f6c:	f89b 4001 	ldrb.w	r4, [fp, #1]
90026f70:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90026f74:	eba0 000c 	sub.w	r0, r0, ip
90026f78:	940d      	str	r4, [sp, #52]	@ 0x34
90026f7a:	fa1f fa8a 	uxth.w	sl, sl
90026f7e:	b280      	uxth	r0, r0
90026f80:	eba3 030a 	sub.w	r3, r3, sl
90026f84:	fb08 f000 	mul.w	r0, r8, r0
90026f88:	b29b      	uxth	r3, r3
90026f8a:	fb09 0303 	mla	r3, r9, r3, r0
90026f8e:	980c      	ldr	r0, [sp, #48]	@ 0x30
90026f90:	fb0a 3300 	mla	r3, sl, r0, r3
90026f94:	fb0c 3304 	mla	r3, ip, r4, r3
90026f98:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026f9c:	2b00      	cmp	r3, #0
90026f9e:	f000 80cc 	beq.w	9002713a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90026fa2:	9808      	ldr	r0, [sp, #32]
90026fa4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90026fa8:	9c08      	ldr	r4, [sp, #32]
90026faa:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90026fae:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90026fb2:	f000 80d5 	beq.w	90027160 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90026fb6:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90026fba:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90026fbe:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026fc2:	fb0a fc0c 	mul.w	ip, sl, ip
90026fc6:	fb09 f707 	mul.w	r7, r9, r7
90026fca:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90026fce:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90026fd2:	f107 0b20 	add.w	fp, r7, #32
90026fd6:	44cc      	add	ip, r9
90026fd8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90026fdc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90026fe0:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026fe4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90026fe8:	ea4c 0909 	orr.w	r9, ip, r9
90026fec:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90026ff0:	8847      	ldrh	r7, [r0, #2]
90026ff2:	d019      	beq.n	90027028 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90026ff4:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90026ff8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90026ffc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90027000:	fb0a fc0c 	mul.w	ip, sl, ip
90027004:	fb08 f807 	mul.w	r8, r8, r7
90027008:	ea06 175c 	and.w	r7, r6, ip, lsr #5
9002700c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90027010:	f108 0b20 	add.w	fp, r8, #32
90027014:	44bc      	add	ip, r7
90027016:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
9002701a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002701e:	0a3f      	lsrs	r7, r7, #8
90027020:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90027024:	ea4c 0707 	orr.w	r7, ip, r7
90027028:	ea4f 4c09 	mov.w	ip, r9, lsl #16
9002702c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90027030:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90027034:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90027038:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002703c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90027040:	ea4c 0909 	orr.w	r9, ip, r9
90027044:	ea4a 0707 	orr.w	r7, sl, r7
90027048:	2d00      	cmp	r5, #0
9002704a:	f000 808b 	beq.w	90027164 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
9002704e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90027052:	3901      	subs	r1, #1
90027054:	0049      	lsls	r1, r1, #1
90027056:	3102      	adds	r1, #2
90027058:	eb00 0c01 	add.w	ip, r0, r1
9002705c:	5a41      	ldrh	r1, [r0, r1]
9002705e:	980c      	ldr	r0, [sp, #48]	@ 0x30
90027060:	28ff      	cmp	r0, #255	@ 0xff
90027062:	d019      	beq.n	90027098 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90027064:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90027068:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
9002706a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002706e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90027072:	fb04 fa01 	mul.w	sl, r4, r1
90027076:	fb08 f800 	mul.w	r8, r8, r0
9002707a:	f10a 0020 	add.w	r0, sl, #32
9002707e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90027082:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90027086:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9002708a:	4441      	add	r1, r8
9002708c:	0a00      	lsrs	r0, r0, #8
9002708e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90027092:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027096:	4301      	orrs	r1, r0
90027098:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002709a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
9002709e:	2cff      	cmp	r4, #255	@ 0xff
900270a0:	d01a      	beq.n	900270d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
900270a2:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
900270a6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900270aa:	ea4f 08e4 	mov.w	r8, r4, asr #3
900270ae:	fb04 fa00 	mul.w	sl, r4, r0
900270b2:	fb08 f80c 	mul.w	r8, r8, ip
900270b6:	f10a 0c20 	add.w	ip, sl, #32
900270ba:	ea06 1058 	and.w	r0, r6, r8, lsr #5
900270be:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900270c2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
900270c6:	4440      	add	r0, r8
900270c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900270cc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
900270d0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900270d4:	ea40 000c 	orr.w	r0, r0, ip
900270d8:	fb15 fc02 	smulbb	ip, r5, r2
900270dc:	f1c5 0810 	rsb	r8, r5, #16
900270e0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900270e4:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900270e8:	ea4f 0cec 	mov.w	ip, ip, asr #3
900270ec:	eba8 0802 	sub.w	r8, r8, r2
900270f0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900270f4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900270f8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
900270fc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90027100:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90027104:	ea4a 0101 	orr.w	r1, sl, r1
90027108:	437a      	muls	r2, r7
9002710a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9002710e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90027112:	fb09 2208 	mla	r2, r9, r8, r2
90027116:	ea4b 0000 	orr.w	r0, fp, r0
9002711a:	fb05 2201 	mla	r2, r5, r1, r2
9002711e:	fb0c 2200 	mla	r2, ip, r0, r2
90027122:	0d57      	lsrs	r7, r2, #21
90027124:	0952      	lsrs	r2, r2, #5
90027126:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002712a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002712e:	433a      	orrs	r2, r7
90027130:	2bff      	cmp	r3, #255	@ 0xff
90027132:	b292      	uxth	r2, r2
90027134:	d127      	bne.n	90027186 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
90027136:	f8ae 2000 	strh.w	r2, [lr]
9002713a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
9002713c:	f10e 0e02 	add.w	lr, lr, #2
90027140:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90027142:	4413      	add	r3, r2
90027144:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90027146:	931d      	str	r3, [sp, #116]	@ 0x74
90027148:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002714a:	441a      	add	r2, r3
9002714c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002714e:	3b01      	subs	r3, #1
90027150:	921e      	str	r2, [sp, #120]	@ 0x78
90027152:	930f      	str	r3, [sp, #60]	@ 0x3c
90027154:	e627      	b.n	90026da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90027156:	fb08 f000 	mul.w	r0, r8, r0
9002715a:	fb09 0303 	mla	r3, r9, r3, r0
9002715e:	e71b      	b.n	90026f98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90027160:	46b9      	mov	r9, r7
90027162:	e743      	b.n	90026fec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90027164:	f1c2 0110 	rsb	r1, r2, #16
90027168:	437a      	muls	r2, r7
9002716a:	fb09 2901 	mla	r9, r9, r1, r2
9002716e:	ea4f 0949 	mov.w	r9, r9, lsl #1
90027172:	ea4f 5059 	mov.w	r0, r9, lsr #21
90027176:	ea4f 1259 	mov.w	r2, r9, lsr #5
9002717a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002717e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90027182:	4302      	orrs	r2, r0
90027184:	e7d4      	b.n	90027130 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
90027186:	f8be 7000 	ldrh.w	r7, [lr]
9002718a:	43db      	mvns	r3, r3
9002718c:	4c1b      	ldr	r4, [pc, #108]	@ (900271fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
9002718e:	1238      	asrs	r0, r7, #8
90027190:	fa5f fc83 	uxtb.w	ip, r3
90027194:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027198:	10fd      	asrs	r5, r7, #3
9002719a:	00fb      	lsls	r3, r7, #3
9002719c:	fb00 f00c 	mul.w	r0, r0, ip
900271a0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
900271a4:	b2db      	uxtb	r3, r3
900271a6:	fb05 f10c 	mul.w	r1, r5, ip
900271aa:	1c45      	adds	r5, r0, #1
900271ac:	fb03 f30c 	mul.w	r3, r3, ip
900271b0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
900271b4:	1215      	asrs	r5, r2, #8
900271b6:	f025 0507 	bic.w	r5, r5, #7
900271ba:	eb05 2010 	add.w	r0, r5, r0, lsr #8
900271be:	1c4d      	adds	r5, r1, #1
900271c0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
900271c4:	10d1      	asrs	r1, r2, #3
900271c6:	b2c0      	uxtb	r0, r0
900271c8:	f021 0103 	bic.w	r1, r1, #3
900271cc:	00d2      	lsls	r2, r2, #3
900271ce:	ea04 2000 	and.w	r0, r4, r0, lsl #8
900271d2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
900271d6:	00c9      	lsls	r1, r1, #3
900271d8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900271dc:	4308      	orrs	r0, r1
900271de:	1c59      	adds	r1, r3, #1
900271e0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900271e4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900271e8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
900271ec:	4318      	orrs	r0, r3
900271ee:	f8ae 0000 	strh.w	r0, [lr]
900271f2:	e7a2      	b.n	9002713a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
900271f4:	b013      	add	sp, #76	@ 0x4c
900271f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900271fa:	bf00      	nop
900271fc:	fffff800 	.word	0xfffff800

90027200 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90027200:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027204:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
90027208:	f9bd a020 	ldrsh.w	sl, [sp, #32]
9002720c:	fb05 4c03 	mla	ip, r5, r3, r4
90027210:	2d00      	cmp	r5, #0
90027212:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
90027216:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
9002721a:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
9002721e:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90027222:	8808      	ldrh	r0, [r1, #0]
90027224:	f2c0 80a7 	blt.w	90027376 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90027228:	45aa      	cmp	sl, r5
9002722a:	f340 80a4 	ble.w	90027376 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
9002722e:	2c00      	cmp	r4, #0
90027230:	f2c0 809f 	blt.w	90027372 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90027234:	42a3      	cmp	r3, r4
90027236:	f340 809c 	ble.w	90027372 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
9002723a:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
9002723e:	1c62      	adds	r2, r4, #1
90027240:	f100 809c 	bmi.w	9002737c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90027244:	4293      	cmp	r3, r2
90027246:	f340 8099 	ble.w	9002737c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
9002724a:	f1b9 0f00 	cmp.w	r9, #0
9002724e:	f000 8095 	beq.w	9002737c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90027252:	f8be c002 	ldrh.w	ip, [lr, #2]
90027256:	3501      	adds	r5, #1
90027258:	f100 8094 	bmi.w	90027384 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
9002725c:	45aa      	cmp	sl, r5
9002725e:	f340 8091 	ble.w	90027384 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90027262:	2f00      	cmp	r7, #0
90027264:	f000 808e 	beq.w	90027384 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90027268:	2c00      	cmp	r4, #0
9002726a:	f2c0 8089 	blt.w	90027380 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
9002726e:	42a3      	cmp	r3, r4
90027270:	f340 8086 	ble.w	90027380 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90027274:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90027278:	3401      	adds	r4, #1
9002727a:	f100 8086 	bmi.w	9002738a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002727e:	42a3      	cmp	r3, r4
90027280:	f340 8083 	ble.w	9002738a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90027284:	f1b9 0f00 	cmp.w	r9, #0
90027288:	d07f      	beq.n	9002738a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002728a:	3301      	adds	r3, #1
9002728c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90027290:	ea4f 4408 	mov.w	r4, r8, lsl #16
90027294:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90027298:	fb19 fe07 	smulbb	lr, r9, r7
9002729c:	f1c7 0210 	rsb	r2, r7, #16
900272a0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
900272a4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
900272a8:	eba2 0209 	sub.w	r2, r2, r9
900272ac:	ea44 0808 	orr.w	r8, r4, r8
900272b0:	ea4f 440c 	mov.w	r4, ip, lsl #16
900272b4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900272b8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
900272bc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
900272c0:	ebce 0747 	rsb	r7, lr, r7, lsl #1
900272c4:	ea44 0c0c 	orr.w	ip, r4, ip
900272c8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
900272cc:	fb04 f40c 	mul.w	r4, r4, ip
900272d0:	fb02 4808 	mla	r8, r2, r8, r4
900272d4:	041a      	lsls	r2, r3, #16
900272d6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900272da:	b2b4      	uxth	r4, r6
900272dc:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900272e0:	43f6      	mvns	r6, r6
900272e2:	4313      	orrs	r3, r2
900272e4:	042a      	lsls	r2, r5, #16
900272e6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900272ea:	b2f6      	uxtb	r6, r6
900272ec:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900272f0:	fb0e 8303 	mla	r3, lr, r3, r8
900272f4:	432a      	orrs	r2, r5
900272f6:	fb07 3202 	mla	r2, r7, r2, r3
900272fa:	10c7      	asrs	r7, r0, #3
900272fc:	0d53      	lsrs	r3, r2, #21
900272fe:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90027302:	0952      	lsrs	r2, r2, #5
90027304:	fb17 f706 	smulbb	r7, r7, r6
90027308:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002730c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90027310:	431a      	orrs	r2, r3
90027312:	b293      	uxth	r3, r2
90027314:	1202      	asrs	r2, r0, #8
90027316:	121d      	asrs	r5, r3, #8
90027318:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9002731c:	00c0      	lsls	r0, r0, #3
9002731e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90027322:	fb12 f206 	smulbb	r2, r2, r6
90027326:	b2c0      	uxtb	r0, r0
90027328:	fb05 2504 	mla	r5, r5, r4, r2
9002732c:	10da      	asrs	r2, r3, #3
9002732e:	fb10 f006 	smulbb	r0, r0, r6
90027332:	00db      	lsls	r3, r3, #3
90027334:	b2ad      	uxth	r5, r5
90027336:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002733a:	b2db      	uxtb	r3, r3
9002733c:	fb02 7204 	mla	r2, r2, r4, r7
90027340:	fb03 0004 	mla	r0, r3, r4, r0
90027344:	1c6b      	adds	r3, r5, #1
90027346:	b292      	uxth	r2, r2
90027348:	b280      	uxth	r0, r0
9002734a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002734e:	1c43      	adds	r3, r0, #1
90027350:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90027354:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90027358:	1c50      	adds	r0, r2, #1
9002735a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9002735e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027362:	0952      	lsrs	r2, r2, #5
90027364:	432b      	orrs	r3, r5
90027366:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002736a:	4313      	orrs	r3, r2
9002736c:	800b      	strh	r3, [r1, #0]
9002736e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90027372:	4680      	mov	r8, r0
90027374:	e763      	b.n	9002723e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90027376:	4684      	mov	ip, r0
90027378:	4680      	mov	r8, r0
9002737a:	e76c      	b.n	90027256 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
9002737c:	4684      	mov	ip, r0
9002737e:	e76a      	b.n	90027256 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90027380:	4605      	mov	r5, r0
90027382:	e779      	b.n	90027278 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90027384:	4603      	mov	r3, r0
90027386:	4605      	mov	r5, r0
90027388:	e782      	b.n	90027290 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
9002738a:	4603      	mov	r3, r0
9002738c:	e780      	b.n	90027290 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

9002738e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002738e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027392:	b093      	sub	sp, #76	@ 0x4c
90027394:	461d      	mov	r5, r3
90027396:	9210      	str	r2, [sp, #64]	@ 0x40
90027398:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002739a:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
9002739e:	910a      	str	r1, [sp, #40]	@ 0x28
900273a0:	920b      	str	r2, [sp, #44]	@ 0x2c
900273a2:	6859      	ldr	r1, [r3, #4]
900273a4:	681b      	ldr	r3, [r3, #0]
900273a6:	9011      	str	r0, [sp, #68]	@ 0x44
900273a8:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
900273ac:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
900273b0:	fb01 2707 	mla	r7, r1, r7, r2
900273b4:	eb03 0347 	add.w	r3, r3, r7, lsl #1
900273b8:	9307      	str	r3, [sp, #28]
900273ba:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900273bc:	681b      	ldr	r3, [r3, #0]
900273be:	9309      	str	r3, [sp, #36]	@ 0x24
900273c0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900273c2:	43db      	mvns	r3, r3
900273c4:	b2db      	uxtb	r3, r3
900273c6:	9308      	str	r3, [sp, #32]
900273c8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900273ca:	2b00      	cmp	r3, #0
900273cc:	dc03      	bgt.n	900273d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900273ce:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900273d0:	2b00      	cmp	r3, #0
900273d2:	f340 8205 	ble.w	900277e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900273d6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900273d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900273dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900273e0:	1e48      	subs	r0, r1, #1
900273e2:	f102 3cff 	add.w	ip, r2, #4294967295
900273e6:	2d00      	cmp	r5, #0
900273e8:	f340 80da 	ble.w	900275a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
900273ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
900273f0:	ea4f 4326 	mov.w	r3, r6, asr #16
900273f4:	d406      	bmi.n	90027404 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900273f6:	4586      	cmp	lr, r0
900273f8:	da04      	bge.n	90027404 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900273fa:	2b00      	cmp	r3, #0
900273fc:	db02      	blt.n	90027404 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900273fe:	4563      	cmp	r3, ip
90027400:	f2c0 80cf 	blt.w	900275a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90027404:	f11e 0e01 	adds.w	lr, lr, #1
90027408:	f100 80c1 	bmi.w	9002758e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002740c:	4571      	cmp	r1, lr
9002740e:	f2c0 80be 	blt.w	9002758e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90027412:	3301      	adds	r3, #1
90027414:	f100 80bb 	bmi.w	9002758e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90027418:	429a      	cmp	r2, r3
9002741a:	f2c0 80b8 	blt.w	9002758e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002741e:	46a9      	mov	r9, r5
90027420:	f8dd 801c 	ldr.w	r8, [sp, #28]
90027424:	f1b9 0f00 	cmp.w	r9, #0
90027428:	f340 80d8 	ble.w	900275dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
9002742c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002742e:	1421      	asrs	r1, r4, #16
90027430:	ea4f 4026 	mov.w	r0, r6, asr #16
90027434:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027438:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002743c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90027440:	f100 8112 	bmi.w	90027668 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90027444:	f10e 3aff 	add.w	sl, lr, #4294967295
90027448:	4551      	cmp	r1, sl
9002744a:	f280 810d 	bge.w	90027668 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002744e:	2800      	cmp	r0, #0
90027450:	f2c0 810a 	blt.w	90027668 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90027454:	f103 3aff 	add.w	sl, r3, #4294967295
90027458:	4550      	cmp	r0, sl
9002745a:	f280 8105 	bge.w	90027668 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002745e:	fa0f f38e 	sxth.w	r3, lr
90027462:	fb00 1103 	mla	r1, r0, r3, r1
90027466:	9809      	ldr	r0, [sp, #36]	@ 0x24
90027468:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
9002746c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90027470:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90027474:	f1bc 0f00 	cmp.w	ip, #0
90027478:	d007      	beq.n	9002748a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
9002747a:	005b      	lsls	r3, r3, #1
9002747c:	eb0a 0003 	add.w	r0, sl, r3
90027480:	f83a 3003 	ldrh.w	r3, [sl, r3]
90027484:	930c      	str	r3, [sp, #48]	@ 0x30
90027486:	8843      	ldrh	r3, [r0, #2]
90027488:	930d      	str	r3, [sp, #52]	@ 0x34
9002748a:	ea4f 400e 	mov.w	r0, lr, lsl #16
9002748e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90027492:	fb12 f30c 	smulbb	r3, r2, ip
90027496:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9002749a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002749e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900274a2:	10db      	asrs	r3, r3, #3
900274a4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900274a8:	ea40 000e 	orr.w	r0, r0, lr
900274ac:	f1cc 0e10 	rsb	lr, ip, #16
900274b0:	ea4a 0101 	orr.w	r1, sl, r1
900274b4:	9f08      	ldr	r7, [sp, #32]
900274b6:	ebae 0e02 	sub.w	lr, lr, r2
900274ba:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900274be:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
900274c2:	4351      	muls	r1, r2
900274c4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
900274c6:	fb0e 1e00 	mla	lr, lr, r0, r1
900274ca:	990c      	ldr	r1, [sp, #48]	@ 0x30
900274cc:	0410      	lsls	r0, r2, #16
900274ce:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900274d2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900274d6:	4310      	orrs	r0, r2
900274d8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900274da:	0412      	lsls	r2, r2, #16
900274dc:	fb03 e000 	mla	r0, r3, r0, lr
900274e0:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
900274e4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900274e8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900274ec:	ea42 020e 	orr.w	r2, r2, lr
900274f0:	fb03 0302 	mla	r3, r3, r2, r0
900274f4:	f8b8 0000 	ldrh.w	r0, [r8]
900274f8:	0d5a      	lsrs	r2, r3, #21
900274fa:	095b      	lsrs	r3, r3, #5
900274fc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027500:	1201      	asrs	r1, r0, #8
90027502:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90027506:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9002750a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002750e:	00c0      	lsls	r0, r0, #3
90027510:	4313      	orrs	r3, r2
90027512:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90027516:	fb11 f107 	smulbb	r1, r1, r7
9002751a:	b2c0      	uxtb	r0, r0
9002751c:	b29b      	uxth	r3, r3
9002751e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90027522:	fb10 f007 	smulbb	r0, r0, r7
90027526:	fb1e fe07 	smulbb	lr, lr, r7
9002752a:	ea4f 2c23 	mov.w	ip, r3, asr #8
9002752e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90027532:	fb0c 1c02 	mla	ip, ip, r2, r1
90027536:	10d9      	asrs	r1, r3, #3
90027538:	00db      	lsls	r3, r3, #3
9002753a:	fa1f fc8c 	uxth.w	ip, ip
9002753e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90027542:	b2db      	uxtb	r3, r3
90027544:	fb01 e102 	mla	r1, r1, r2, lr
90027548:	fb03 0302 	mla	r3, r3, r2, r0
9002754c:	b289      	uxth	r1, r1
9002754e:	b29a      	uxth	r2, r3
90027550:	f10c 0301 	add.w	r3, ip, #1
90027554:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90027558:	1c53      	adds	r3, r2, #1
9002755a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002755e:	1c4a      	adds	r2, r1, #1
90027560:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90027564:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90027568:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002756c:	0949      	lsrs	r1, r1, #5
9002756e:	ea43 030c 	orr.w	r3, r3, ip
90027572:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90027576:	430b      	orrs	r3, r1
90027578:	f8a8 3000 	strh.w	r3, [r8]
9002757c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002757e:	f108 0802 	add.w	r8, r8, #2
90027582:	f109 39ff 	add.w	r9, r9, #4294967295
90027586:	441c      	add	r4, r3
90027588:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002758a:	441e      	add	r6, r3
9002758c:	e74a      	b.n	90027424 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9002758e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90027590:	3d01      	subs	r5, #1
90027592:	441c      	add	r4, r3
90027594:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027596:	441e      	add	r6, r3
90027598:	9b07      	ldr	r3, [sp, #28]
9002759a:	3302      	adds	r3, #2
9002759c:	9307      	str	r3, [sp, #28]
9002759e:	e722      	b.n	900273e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900275a0:	d022      	beq.n	900275e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
900275a2:	1e6b      	subs	r3, r5, #1
900275a4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900275a6:	fb00 4003 	mla	r0, r0, r3, r4
900275aa:	1400      	asrs	r0, r0, #16
900275ac:	f53f af37 	bmi.w	9002741e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900275b0:	3901      	subs	r1, #1
900275b2:	4288      	cmp	r0, r1
900275b4:	f6bf af33 	bge.w	9002741e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900275b8:	9920      	ldr	r1, [sp, #128]	@ 0x80
900275ba:	fb01 6303 	mla	r3, r1, r3, r6
900275be:	141b      	asrs	r3, r3, #16
900275c0:	f53f af2d 	bmi.w	9002741e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900275c4:	3a01      	subs	r2, #1
900275c6:	4293      	cmp	r3, r2
900275c8:	f6bf af29 	bge.w	9002741e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900275cc:	46a8      	mov	r8, r5
900275ce:	f8dd 901c 	ldr.w	r9, [sp, #28]
900275d2:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
900275d6:	f1b8 0f00 	cmp.w	r8, #0
900275da:	dc60      	bgt.n	9002769e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
900275dc:	9b07      	ldr	r3, [sp, #28]
900275de:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900275e2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900275e6:	9307      	str	r3, [sp, #28]
900275e8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900275ea:	2b00      	cmp	r3, #0
900275ec:	f340 80f8 	ble.w	900277e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900275f0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900275f4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900275f6:	ee30 0a04 	vadd.f32	s0, s0, s8
900275fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
900275fe:	eef0 6a62 	vmov.f32	s13, s5
90027602:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027606:	ee31 1a05 	vadd.f32	s2, s2, s10
9002760a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002760e:	ee16 4a90 	vmov	r4, s13
90027612:	eef0 6a43 	vmov.f32	s13, s6
90027616:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002761a:	ee16 6a90 	vmov	r6, s13
9002761e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027622:	ee61 7a27 	vmul.f32	s15, s2, s15
90027626:	ee77 2a62 	vsub.f32	s5, s14, s5
9002762a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002762e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027632:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027636:	ee12 2a90 	vmov	r2, s5
9002763a:	eef0 2a47 	vmov.f32	s5, s14
9002763e:	fb92 f3f3 	sdiv	r3, r2, r3
90027642:	ee13 2a10 	vmov	r2, s6
90027646:	931f      	str	r3, [sp, #124]	@ 0x7c
90027648:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002764a:	eeb0 3a67 	vmov.f32	s6, s15
9002764e:	fb92 f3f3 	sdiv	r3, r2, r3
90027652:	9320      	str	r3, [sp, #128]	@ 0x80
90027654:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90027656:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90027658:	3b01      	subs	r3, #1
9002765a:	930a      	str	r3, [sp, #40]	@ 0x28
9002765c:	bf08      	it	eq
9002765e:	4615      	moveq	r5, r2
90027660:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027662:	bf18      	it	ne
90027664:	461d      	movne	r5, r3
90027666:	e6af      	b.n	900273c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90027668:	f111 0a01 	adds.w	sl, r1, #1
9002766c:	d486      	bmi.n	9002757c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002766e:	45d6      	cmp	lr, sl
90027670:	db84      	blt.n	9002757c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90027672:	f110 0a01 	adds.w	sl, r0, #1
90027676:	d481      	bmi.n	9002757c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90027678:	4553      	cmp	r3, sl
9002767a:	f6ff af7f 	blt.w	9002757c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002767e:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
90027680:	b21b      	sxth	r3, r3
90027682:	9101      	str	r1, [sp, #4]
90027684:	4641      	mov	r1, r8
90027686:	9300      	str	r3, [sp, #0]
90027688:	fa0f f38e 	sxth.w	r3, lr
9002768c:	e9cd 0202 	strd	r0, r2, [sp, #8]
90027690:	e9cd c704 	strd	ip, r7, [sp, #16]
90027694:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90027696:	9811      	ldr	r0, [sp, #68]	@ 0x44
90027698:	f7ff fdb2 	bl	90027200 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
9002769c:	e76e      	b.n	9002757c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002769e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900276a0:	1430      	asrs	r0, r6, #16
900276a2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
900276a4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
900276a8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900276ac:	1423      	asrs	r3, r4, #16
900276ae:	f3c4 3203 	ubfx	r2, r4, #12, #4
900276b2:	fb01 3000 	mla	r0, r1, r0, r3
900276b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900276b8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
900276bc:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
900276c0:	8858      	ldrh	r0, [r3, #2]
900276c2:	f1be 0f00 	cmp.w	lr, #0
900276c6:	d00b      	beq.n	900276e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
900276c8:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
900276cc:	3901      	subs	r1, #1
900276ce:	0049      	lsls	r1, r1, #1
900276d0:	3102      	adds	r1, #2
900276d2:	eb03 0b01 	add.w	fp, r3, r1
900276d6:	5a5b      	ldrh	r3, [r3, r1]
900276d8:	930e      	str	r3, [sp, #56]	@ 0x38
900276da:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900276de:	930f      	str	r3, [sp, #60]	@ 0x3c
900276e0:	ea4f 410c 	mov.w	r1, ip, lsl #16
900276e4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900276e8:	fb12 f30e 	smulbb	r3, r2, lr
900276ec:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900276f0:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
900276f4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900276f8:	10db      	asrs	r3, r3, #3
900276fa:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900276fe:	ea41 010c 	orr.w	r1, r1, ip
90027702:	f1ce 0c10 	rsb	ip, lr, #16
90027706:	ea4b 0000 	orr.w	r0, fp, r0
9002770a:	9f08      	ldr	r7, [sp, #32]
9002770c:	ebac 0c02 	sub.w	ip, ip, r2
90027710:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90027714:	f108 38ff 	add.w	r8, r8, #4294967295
90027718:	4350      	muls	r0, r2
9002771a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
9002771e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90027720:	fb0c 0c01 	mla	ip, ip, r1, r0
90027724:	980e      	ldr	r0, [sp, #56]	@ 0x38
90027726:	ea4f 4b02 	mov.w	fp, r2, lsl #16
9002772a:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
9002772e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90027730:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90027734:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90027738:	0412      	lsls	r2, r2, #16
9002773a:	ea4b 0101 	orr.w	r1, fp, r1
9002773e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90027742:	fb03 c101 	mla	r1, r3, r1, ip
90027746:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
9002774a:	4302      	orrs	r2, r0
9002774c:	fb03 1202 	mla	r2, r3, r2, r1
90027750:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90027754:	0952      	lsrs	r2, r2, #5
90027756:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9002775a:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
9002775e:	f8b9 2000 	ldrh.w	r2, [r9]
90027762:	ea4b 0303 	orr.w	r3, fp, r3
90027766:	1211      	asrs	r1, r2, #8
90027768:	ea4f 0ce2 	mov.w	ip, r2, asr #3
9002776c:	b29b      	uxth	r3, r3
9002776e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90027772:	00d2      	lsls	r2, r2, #3
90027774:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90027778:	fb11 f107 	smulbb	r1, r1, r7
9002777c:	1218      	asrs	r0, r3, #8
9002777e:	fb1c fc07 	smulbb	ip, ip, r7
90027782:	b2d2      	uxtb	r2, r2
90027784:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027788:	fb12 f207 	smulbb	r2, r2, r7
9002778c:	fb00 100a 	mla	r0, r0, sl, r1
90027790:	10d9      	asrs	r1, r3, #3
90027792:	00db      	lsls	r3, r3, #3
90027794:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90027798:	b280      	uxth	r0, r0
9002779a:	b2db      	uxtb	r3, r3
9002779c:	fb01 c10a 	mla	r1, r1, sl, ip
900277a0:	fb03 230a 	mla	r3, r3, sl, r2
900277a4:	1c42      	adds	r2, r0, #1
900277a6:	b289      	uxth	r1, r1
900277a8:	b29b      	uxth	r3, r3
900277aa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900277ae:	f101 0c01 	add.w	ip, r1, #1
900277b2:	1c5a      	adds	r2, r3, #1
900277b4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
900277b8:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900277bc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900277c0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900277c2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900277c6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900277ca:	441c      	add	r4, r3
900277cc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900277d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900277d2:	4310      	orrs	r0, r2
900277d4:	441e      	add	r6, r3
900277d6:	ea40 000c 	orr.w	r0, r0, ip
900277da:	f829 0b02 	strh.w	r0, [r9], #2
900277de:	e6fa      	b.n	900275d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
900277e0:	b013      	add	sp, #76	@ 0x4c
900277e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900277e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
900277e6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900277ea:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
900277ee:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
900277f2:	fb0e 4703 	mla	r7, lr, r3, r4
900277f6:	f1be 0f00 	cmp.w	lr, #0
900277fa:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
900277fe:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
90027802:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90027806:	8808      	ldrh	r0, [r1, #0]
90027808:	db60      	blt.n	900278cc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
9002780a:	45f1      	cmp	r9, lr
9002780c:	dd5e      	ble.n	900278cc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
9002780e:	2c00      	cmp	r4, #0
90027810:	db5a      	blt.n	900278c8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90027812:	42a3      	cmp	r3, r4
90027814:	dd58      	ble.n	900278c8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90027816:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
9002781a:	1c62      	adds	r2, r4, #1
9002781c:	d459      	bmi.n	900278d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002781e:	4293      	cmp	r3, r2
90027820:	dd57      	ble.n	900278d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90027822:	2d00      	cmp	r5, #0
90027824:	d055      	beq.n	900278d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90027826:	f8b8 7002 	ldrh.w	r7, [r8, #2]
9002782a:	f11e 0e01 	adds.w	lr, lr, #1
9002782e:	d454      	bmi.n	900278da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90027830:	45f1      	cmp	r9, lr
90027832:	dd52      	ble.n	900278da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90027834:	2e00      	cmp	r6, #0
90027836:	d050      	beq.n	900278da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90027838:	2c00      	cmp	r4, #0
9002783a:	db4c      	blt.n	900278d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
9002783c:	42a3      	cmp	r3, r4
9002783e:	dd4a      	ble.n	900278d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90027840:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90027844:	3401      	adds	r4, #1
90027846:	d405      	bmi.n	90027854 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90027848:	42a3      	cmp	r3, r4
9002784a:	dd03      	ble.n	90027854 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002784c:	b115      	cbz	r5, 90027854 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002784e:	3301      	adds	r3, #1
90027850:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90027854:	fb15 f406 	smulbb	r4, r5, r6
90027858:	ea4f 430c 	mov.w	r3, ip, lsl #16
9002785c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90027860:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90027864:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90027868:	f3c4 04c7 	ubfx	r4, r4, #3, #8
9002786c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90027870:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90027874:	ea43 0c0c 	orr.w	ip, r3, ip
90027878:	f1c6 0310 	rsb	r3, r6, #16
9002787c:	ea4e 0707 	orr.w	r7, lr, r7
90027880:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90027884:	1b5b      	subs	r3, r3, r5
90027886:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9002788a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002788e:	437d      	muls	r5, r7
90027890:	fb03 5c0c 	mla	ip, r3, ip, r5
90027894:	0403      	lsls	r3, r0, #16
90027896:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002789a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002789e:	4318      	orrs	r0, r3
900278a0:	0413      	lsls	r3, r2, #16
900278a2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900278a6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900278aa:	fb04 c000 	mla	r0, r4, r0, ip
900278ae:	4313      	orrs	r3, r2
900278b0:	fb06 0003 	mla	r0, r6, r3, r0
900278b4:	0d43      	lsrs	r3, r0, #21
900278b6:	0940      	lsrs	r0, r0, #5
900278b8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900278bc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900278c0:	4318      	orrs	r0, r3
900278c2:	8008      	strh	r0, [r1, #0]
900278c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900278c8:	4684      	mov	ip, r0
900278ca:	e7a6      	b.n	9002781a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
900278cc:	4607      	mov	r7, r0
900278ce:	4684      	mov	ip, r0
900278d0:	e7ab      	b.n	9002782a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900278d2:	4607      	mov	r7, r0
900278d4:	e7a9      	b.n	9002782a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900278d6:	4602      	mov	r2, r0
900278d8:	e7b4      	b.n	90027844 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
900278da:	4602      	mov	r2, r0
900278dc:	e7ba      	b.n	90027854 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

900278de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900278de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900278e2:	b08f      	sub	sp, #60	@ 0x3c
900278e4:	461d      	mov	r5, r3
900278e6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900278e8:	9107      	str	r1, [sp, #28]
900278ea:	920c      	str	r2, [sp, #48]	@ 0x30
900278ec:	6859      	ldr	r1, [r3, #4]
900278ee:	681b      	ldr	r3, [r3, #0]
900278f0:	900d      	str	r0, [sp, #52]	@ 0x34
900278f2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
900278f6:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
900278fa:	fb01 2707 	mla	r7, r1, r7, r2
900278fe:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90027902:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027904:	f8d3 8000 	ldr.w	r8, [r3]
90027908:	9b07      	ldr	r3, [sp, #28]
9002790a:	2b00      	cmp	r3, #0
9002790c:	dc03      	bgt.n	90027916 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9002790e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90027910:	2b00      	cmp	r3, #0
90027912:	f340 8182 	ble.w	90027c1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90027916:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027918:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002791c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027920:	1e48      	subs	r0, r1, #1
90027922:	f102 3cff 	add.w	ip, r2, #4294967295
90027926:	2d00      	cmp	r5, #0
90027928:	f340 809b 	ble.w	90027a62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
9002792c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027930:	ea4f 4326 	mov.w	r3, r6, asr #16
90027934:	d406      	bmi.n	90027944 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90027936:	4586      	cmp	lr, r0
90027938:	da04      	bge.n	90027944 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002793a:	2b00      	cmp	r3, #0
9002793c:	db02      	blt.n	90027944 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002793e:	4563      	cmp	r3, ip
90027940:	f2c0 8090 	blt.w	90027a64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90027944:	f11e 0e01 	adds.w	lr, lr, #1
90027948:	f100 8084 	bmi.w	90027a54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002794c:	4571      	cmp	r1, lr
9002794e:	f2c0 8081 	blt.w	90027a54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90027952:	3301      	adds	r3, #1
90027954:	d47e      	bmi.n	90027a54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90027956:	429a      	cmp	r2, r3
90027958:	db7c      	blt.n	90027a54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002795a:	46aa      	mov	sl, r5
9002795c:	46b9      	mov	r9, r7
9002795e:	f1ba 0f00 	cmp.w	sl, #0
90027962:	f340 8099 	ble.w	90027a98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90027966:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027968:	1421      	asrs	r1, r4, #16
9002796a:	ea4f 4026 	mov.w	r0, r6, asr #16
9002796e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027972:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90027976:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
9002797a:	f100 80d1 	bmi.w	90027b20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002797e:	f10e 3bff 	add.w	fp, lr, #4294967295
90027982:	4559      	cmp	r1, fp
90027984:	f280 80cc 	bge.w	90027b20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90027988:	2800      	cmp	r0, #0
9002798a:	f2c0 80c9 	blt.w	90027b20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002798e:	f103 3bff 	add.w	fp, r3, #4294967295
90027992:	4558      	cmp	r0, fp
90027994:	f280 80c4 	bge.w	90027b20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90027998:	fa0f fe8e 	sxth.w	lr, lr
9002799c:	fb00 110e 	mla	r1, r0, lr, r1
900279a0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
900279a4:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
900279a8:	8841      	ldrh	r1, [r0, #2]
900279aa:	f1bc 0f00 	cmp.w	ip, #0
900279ae:	d00b      	beq.n	900279c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
900279b0:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
900279b4:	3b01      	subs	r3, #1
900279b6:	005b      	lsls	r3, r3, #1
900279b8:	3302      	adds	r3, #2
900279ba:	eb00 0e03 	add.w	lr, r0, r3
900279be:	5ac3      	ldrh	r3, [r0, r3]
900279c0:	9308      	str	r3, [sp, #32]
900279c2:	f8be 3002 	ldrh.w	r3, [lr, #2]
900279c6:	9309      	str	r3, [sp, #36]	@ 0x24
900279c8:	ea4f 400b 	mov.w	r0, fp, lsl #16
900279cc:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
900279d0:	fb12 f30c 	smulbb	r3, r2, ip
900279d4:	f1cc 0e10 	rsb	lr, ip, #16
900279d8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900279dc:	10db      	asrs	r3, r3, #3
900279de:	ebae 0e02 	sub.w	lr, lr, r2
900279e2:	ea40 000b 	orr.w	r0, r0, fp
900279e6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900279ea:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900279ee:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900279f2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900279f6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
900279fa:	ea4b 0101 	orr.w	r1, fp, r1
900279fe:	4351      	muls	r1, r2
90027a00:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90027a02:	fb0e 1e00 	mla	lr, lr, r0, r1
90027a06:	0410      	lsls	r0, r2, #16
90027a08:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90027a0c:	9908      	ldr	r1, [sp, #32]
90027a0e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90027a12:	4310      	orrs	r0, r2
90027a14:	9a08      	ldr	r2, [sp, #32]
90027a16:	0412      	lsls	r2, r2, #16
90027a18:	fb03 e000 	mla	r0, r3, r0, lr
90027a1c:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
90027a20:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90027a24:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90027a28:	ea42 020e 	orr.w	r2, r2, lr
90027a2c:	fb03 0302 	mla	r3, r3, r2, r0
90027a30:	0d5a      	lsrs	r2, r3, #21
90027a32:	095b      	lsrs	r3, r3, #5
90027a34:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027a38:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90027a3c:	4313      	orrs	r3, r2
90027a3e:	f8a9 3000 	strh.w	r3, [r9]
90027a42:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90027a44:	f109 0902 	add.w	r9, r9, #2
90027a48:	f10a 3aff 	add.w	sl, sl, #4294967295
90027a4c:	441c      	add	r4, r3
90027a4e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027a50:	441e      	add	r6, r3
90027a52:	e784      	b.n	9002795e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90027a54:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90027a56:	3d01      	subs	r5, #1
90027a58:	3702      	adds	r7, #2
90027a5a:	441c      	add	r4, r3
90027a5c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027a5e:	441e      	add	r6, r3
90027a60:	e761      	b.n	90027926 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90027a62:	d01d      	beq.n	90027aa0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027a64:	1e6b      	subs	r3, r5, #1
90027a66:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90027a68:	fb00 4003 	mla	r0, r0, r3, r4
90027a6c:	1400      	asrs	r0, r0, #16
90027a6e:	f53f af74 	bmi.w	9002795a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90027a72:	3901      	subs	r1, #1
90027a74:	4288      	cmp	r0, r1
90027a76:	f6bf af70 	bge.w	9002795a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90027a7a:	991c      	ldr	r1, [sp, #112]	@ 0x70
90027a7c:	fb01 6303 	mla	r3, r1, r3, r6
90027a80:	141b      	asrs	r3, r3, #16
90027a82:	f53f af6a 	bmi.w	9002795a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90027a86:	3a01      	subs	r2, #1
90027a88:	4293      	cmp	r3, r2
90027a8a:	f6bf af66 	bge.w	9002795a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90027a8e:	46a9      	mov	r9, r5
90027a90:	46ba      	mov	sl, r7
90027a92:	f1b9 0f00 	cmp.w	r9, #0
90027a96:	dc5b      	bgt.n	90027b50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90027a98:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90027a9c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90027aa0:	9b07      	ldr	r3, [sp, #28]
90027aa2:	2b00      	cmp	r3, #0
90027aa4:	f340 80b9 	ble.w	90027c1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90027aa8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027aac:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90027aae:	ee30 0a04 	vadd.f32	s0, s0, s8
90027ab2:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027ab6:	eef0 6a62 	vmov.f32	s13, s5
90027aba:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027abe:	ee31 1a05 	vadd.f32	s2, s2, s10
90027ac2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027ac6:	ee16 4a90 	vmov	r4, s13
90027aca:	eef0 6a43 	vmov.f32	s13, s6
90027ace:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027ad2:	ee16 6a90 	vmov	r6, s13
90027ad6:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027ada:	ee61 7a27 	vmul.f32	s15, s2, s15
90027ade:	ee77 2a62 	vsub.f32	s5, s14, s5
90027ae2:	ee37 3ac3 	vsub.f32	s6, s15, s6
90027ae6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027aea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027aee:	ee12 2a90 	vmov	r2, s5
90027af2:	eef0 2a47 	vmov.f32	s5, s14
90027af6:	fb92 f3f3 	sdiv	r3, r2, r3
90027afa:	ee13 2a10 	vmov	r2, s6
90027afe:	931b      	str	r3, [sp, #108]	@ 0x6c
90027b00:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90027b02:	eeb0 3a67 	vmov.f32	s6, s15
90027b06:	fb92 f3f3 	sdiv	r3, r2, r3
90027b0a:	931c      	str	r3, [sp, #112]	@ 0x70
90027b0c:	9b07      	ldr	r3, [sp, #28]
90027b0e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90027b10:	3b01      	subs	r3, #1
90027b12:	9307      	str	r3, [sp, #28]
90027b14:	bf08      	it	eq
90027b16:	4615      	moveq	r5, r2
90027b18:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90027b1a:	bf18      	it	ne
90027b1c:	461d      	movne	r5, r3
90027b1e:	e6f3      	b.n	90027908 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90027b20:	f111 0b01 	adds.w	fp, r1, #1
90027b24:	d48d      	bmi.n	90027a42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90027b26:	45de      	cmp	lr, fp
90027b28:	db8b      	blt.n	90027a42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90027b2a:	f110 0b01 	adds.w	fp, r0, #1
90027b2e:	d488      	bmi.n	90027a42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90027b30:	455b      	cmp	r3, fp
90027b32:	db86      	blt.n	90027a42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90027b34:	b21b      	sxth	r3, r3
90027b36:	e9cd 1001 	strd	r1, r0, [sp, #4]
90027b3a:	e9cd 2c03 	strd	r2, ip, [sp, #12]
90027b3e:	9300      	str	r3, [sp, #0]
90027b40:	4642      	mov	r2, r8
90027b42:	fa0f f38e 	sxth.w	r3, lr
90027b46:	4649      	mov	r1, r9
90027b48:	980d      	ldr	r0, [sp, #52]	@ 0x34
90027b4a:	f7ff fe4c 	bl	900277e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
90027b4e:	e778      	b.n	90027a42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90027b50:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027b52:	1420      	asrs	r0, r4, #16
90027b54:	1431      	asrs	r1, r6, #16
90027b56:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90027b5a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90027b5e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027b62:	fb03 0101 	mla	r1, r3, r1, r0
90027b66:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90027b6a:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
90027b6e:	8841      	ldrh	r1, [r0, #2]
90027b70:	f1be 0f00 	cmp.w	lr, #0
90027b74:	d00b      	beq.n	90027b8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90027b76:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90027b7a:	3b01      	subs	r3, #1
90027b7c:	005b      	lsls	r3, r3, #1
90027b7e:	3302      	adds	r3, #2
90027b80:	eb00 0b03 	add.w	fp, r0, r3
90027b84:	5ac3      	ldrh	r3, [r0, r3]
90027b86:	930a      	str	r3, [sp, #40]	@ 0x28
90027b88:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90027b8c:	930b      	str	r3, [sp, #44]	@ 0x2c
90027b8e:	ea4f 400c 	mov.w	r0, ip, lsl #16
90027b92:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90027b96:	fb12 f30e 	smulbb	r3, r2, lr
90027b9a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90027b9e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90027ba2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90027ba6:	10db      	asrs	r3, r3, #3
90027ba8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90027bac:	ea40 000c 	orr.w	r0, r0, ip
90027bb0:	f1ce 0c10 	rsb	ip, lr, #16
90027bb4:	ea4b 0101 	orr.w	r1, fp, r1
90027bb8:	f109 39ff 	add.w	r9, r9, #4294967295
90027bbc:	ebac 0c02 	sub.w	ip, ip, r2
90027bc0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90027bc4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90027bc8:	4351      	muls	r1, r2
90027bca:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90027bcc:	fb0c 1c00 	mla	ip, ip, r0, r1
90027bd0:	990a      	ldr	r1, [sp, #40]	@ 0x28
90027bd2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90027bd6:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
90027bda:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90027bdc:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90027be0:	0412      	lsls	r2, r2, #16
90027be2:	ea4b 0000 	orr.w	r0, fp, r0
90027be6:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
90027bea:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90027bee:	fb03 c000 	mla	r0, r3, r0, ip
90027bf2:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90027bf6:	ea42 0b0b 	orr.w	fp, r2, fp
90027bfa:	fb03 000b 	mla	r0, r3, fp, r0
90027bfe:	0d43      	lsrs	r3, r0, #21
90027c00:	0940      	lsrs	r0, r0, #5
90027c02:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90027c06:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90027c0a:	4318      	orrs	r0, r3
90027c0c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90027c0e:	441c      	add	r4, r3
90027c10:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027c12:	f82a 0b02 	strh.w	r0, [sl], #2
90027c16:	441e      	add	r6, r3
90027c18:	e73b      	b.n	90027a92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90027c1a:	b00f      	add	sp, #60	@ 0x3c
90027c1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90027c20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90027c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027c24:	b085      	sub	sp, #20
90027c26:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90027c2a:	9102      	str	r1, [sp, #8]
90027c2c:	2c00      	cmp	r4, #0
90027c2e:	fb04 7103 	mla	r1, r4, r3, r7
90027c32:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90027c36:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90027c3a:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90027c3e:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
90027c42:	f2c0 811b 	blt.w	90027e7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90027c46:	45a6      	cmp	lr, r4
90027c48:	f340 8118 	ble.w	90027e7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90027c4c:	2f00      	cmp	r7, #0
90027c4e:	f2c0 8113 	blt.w	90027e78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90027c52:	42bb      	cmp	r3, r7
90027c54:	f340 8110 	ble.w	90027e78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90027c58:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90027c5c:	1c7a      	adds	r2, r7, #1
90027c5e:	f100 8110 	bmi.w	90027e82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90027c62:	4293      	cmp	r3, r2
90027c64:	f340 810d 	ble.w	90027e82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90027c68:	2e00      	cmp	r6, #0
90027c6a:	f000 810c 	beq.w	90027e86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
90027c6e:	f8dc 1004 	ldr.w	r1, [ip, #4]
90027c72:	3401      	adds	r4, #1
90027c74:	f100 810b 	bmi.w	90027e8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90027c78:	45a6      	cmp	lr, r4
90027c7a:	f340 8108 	ble.w	90027e8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90027c7e:	2800      	cmp	r0, #0
90027c80:	f000 8108 	beq.w	90027e94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90027c84:	2f00      	cmp	r7, #0
90027c86:	f2c0 8100 	blt.w	90027e8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90027c8a:	42bb      	cmp	r3, r7
90027c8c:	f340 80fd 	ble.w	90027e8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90027c90:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90027c94:	3701      	adds	r7, #1
90027c96:	f100 8100 	bmi.w	90027e9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90027c9a:	42bb      	cmp	r3, r7
90027c9c:	f340 80fd 	ble.w	90027e9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90027ca0:	2e00      	cmp	r6, #0
90027ca2:	f000 80fc 	beq.w	90027e9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
90027ca6:	3301      	adds	r3, #1
90027ca8:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90027cac:	b2b6      	uxth	r6, r6
90027cae:	b280      	uxth	r0, r0
90027cb0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90027cb4:	fb00 fe06 	mul.w	lr, r0, r6
90027cb8:	0136      	lsls	r6, r6, #4
90027cba:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90027cbe:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90027cc2:	eba6 070e 	sub.w	r7, r6, lr
90027cc6:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90027cca:	ea4f 6914 	mov.w	r9, r4, lsr #24
90027cce:	b280      	uxth	r0, r0
90027cd0:	b2bf      	uxth	r7, r7
90027cd2:	1a1b      	subs	r3, r3, r0
90027cd4:	ea4f 6812 	mov.w	r8, r2, lsr #24
90027cd8:	fb0a f607 	mul.w	r6, sl, r7
90027cdc:	b29b      	uxth	r3, r3
90027cde:	fb0b 6603 	mla	r6, fp, r3, r6
90027ce2:	fb00 6609 	mla	r6, r0, r9, r6
90027ce6:	fb0e 6608 	mla	r6, lr, r8, r6
90027cea:	f3c6 2607 	ubfx	r6, r6, #8, #8
90027cee:	9600      	str	r6, [sp, #0]
90027cf0:	2e00      	cmp	r6, #0
90027cf2:	f000 80be 	beq.w	90027e72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90027cf6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90027cfa:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90027cfe:	9e02      	ldr	r6, [sp, #8]
90027d00:	fb0b fc0c 	mul.w	ip, fp, ip
90027d04:	fb0b f505 	mul.w	r5, fp, r5
90027d08:	8836      	ldrh	r6, [r6, #0]
90027d0a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90027d0e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90027d12:	9501      	str	r5, [sp, #4]
90027d14:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90027d18:	44dc      	add	ip, fp
90027d1a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027d1e:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90027d22:	9503      	str	r5, [sp, #12]
90027d24:	9d01      	ldr	r5, [sp, #4]
90027d26:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90027d2a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90027d2e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90027d32:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90027d36:	fb0a fc0c 	mul.w	ip, sl, ip
90027d3a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90027d3e:	fb0a fa01 	mul.w	sl, sl, r1
90027d42:	ea4f 251c 	mov.w	r5, ip, lsr #8
90027d46:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90027d4a:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90027d4e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90027d52:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90027d56:	4465      	add	r5, ip
90027d58:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90027d5c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90027d60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027d64:	fb09 fc0c 	mul.w	ip, r9, ip
90027d68:	0a2d      	lsrs	r5, r5, #8
90027d6a:	fb09 f904 	mul.w	r9, r9, r4
90027d6e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027d72:	ea4f 211c 	mov.w	r1, ip, lsr #8
90027d76:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90027d7a:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90027d7e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90027d82:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90027d86:	437d      	muls	r5, r7
90027d88:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90027d8c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90027d90:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90027d94:	4461      	add	r1, ip
90027d96:	fb08 f404 	mul.w	r4, r8, r4
90027d9a:	ea4f 2919 	mov.w	r9, r9, lsr #8
90027d9e:	fb08 f802 	mul.w	r8, r8, r2
90027da2:	0a09      	lsrs	r1, r1, #8
90027da4:	0a22      	lsrs	r2, r4, #8
90027da6:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90027daa:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90027dae:	fb07 f70a 	mul.w	r7, r7, sl
90027db2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90027db6:	4414      	add	r4, r2
90027db8:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90027dbc:	0a24      	lsrs	r4, r4, #8
90027dbe:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90027dc2:	9a03      	ldr	r2, [sp, #12]
90027dc4:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90027dc8:	fb02 5503 	mla	r5, r2, r3, r5
90027dcc:	ea4f 2818 	mov.w	r8, r8, lsr #8
90027dd0:	9a00      	ldr	r2, [sp, #0]
90027dd2:	fb04 540e 	mla	r4, r4, lr, r5
90027dd6:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90027dda:	1235      	asrs	r5, r6, #8
90027ddc:	fb01 4100 	mla	r1, r1, r0, r4
90027de0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90027de4:	0a09      	lsrs	r1, r1, #8
90027de6:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90027dea:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90027dee:	fb03 7101 	mla	r1, r3, r1, r7
90027df2:	fb0e 1e08 	mla	lr, lr, r8, r1
90027df6:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90027dfa:	fb00 e101 	mla	r1, r0, r1, lr
90027dfe:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
90027e02:	b287      	uxth	r7, r0
90027e04:	0a09      	lsrs	r1, r1, #8
90027e06:	437a      	muls	r2, r7
90027e08:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90027e0c:	1c53      	adds	r3, r2, #1
90027e0e:	4321      	orrs	r1, r4
90027e10:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027e14:	0c0a      	lsrs	r2, r1, #16
90027e16:	f3c1 2407 	ubfx	r4, r1, #8, #8
90027e1a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90027e1e:	b2c8      	uxtb	r0, r1
90027e20:	fb12 f207 	smulbb	r2, r2, r7
90027e24:	fb14 f407 	smulbb	r4, r4, r7
90027e28:	b2db      	uxtb	r3, r3
90027e2a:	fb10 f007 	smulbb	r0, r0, r7
90027e2e:	fb05 2503 	mla	r5, r5, r3, r2
90027e32:	10f2      	asrs	r2, r6, #3
90027e34:	00f6      	lsls	r6, r6, #3
90027e36:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90027e3a:	b2ad      	uxth	r5, r5
90027e3c:	b2f6      	uxtb	r6, r6
90027e3e:	fb02 4203 	mla	r2, r2, r3, r4
90027e42:	fb06 0303 	mla	r3, r6, r3, r0
90027e46:	b294      	uxth	r4, r2
90027e48:	b299      	uxth	r1, r3
90027e4a:	1c6b      	adds	r3, r5, #1
90027e4c:	1c62      	adds	r2, r4, #1
90027e4e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90027e52:	1c4b      	adds	r3, r1, #1
90027e54:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90027e58:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90027e5c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90027e60:	0952      	lsrs	r2, r2, #5
90027e62:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027e66:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027e6a:	432b      	orrs	r3, r5
90027e6c:	4313      	orrs	r3, r2
90027e6e:	9a02      	ldr	r2, [sp, #8]
90027e70:	8013      	strh	r3, [r2, #0]
90027e72:	b005      	add	sp, #20
90027e74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027e78:	2500      	movs	r5, #0
90027e7a:	e6ef      	b.n	90027c5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90027e7c:	2100      	movs	r1, #0
90027e7e:	460d      	mov	r5, r1
90027e80:	e6f7      	b.n	90027c72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90027e82:	2100      	movs	r1, #0
90027e84:	e6f5      	b.n	90027c72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90027e86:	4631      	mov	r1, r6
90027e88:	e6f3      	b.n	90027c72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90027e8a:	2400      	movs	r4, #0
90027e8c:	e702      	b.n	90027c94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90027e8e:	2200      	movs	r2, #0
90027e90:	4614      	mov	r4, r2
90027e92:	e70b      	b.n	90027cac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90027e94:	4602      	mov	r2, r0
90027e96:	4604      	mov	r4, r0
90027e98:	e708      	b.n	90027cac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90027e9a:	2200      	movs	r2, #0
90027e9c:	e706      	b.n	90027cac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90027e9e:	4632      	mov	r2, r6
90027ea0:	e704      	b.n	90027cac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90027ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027ea2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027ea6:	b09d      	sub	sp, #116	@ 0x74
90027ea8:	9219      	str	r2, [sp, #100]	@ 0x64
90027eaa:	9307      	str	r3, [sp, #28]
90027eac:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
90027eae:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
90027eb2:	901b      	str	r0, [sp, #108]	@ 0x6c
90027eb4:	931a      	str	r3, [sp, #104]	@ 0x68
90027eb6:	6850      	ldr	r0, [r2, #4]
90027eb8:	9117      	str	r1, [sp, #92]	@ 0x5c
90027eba:	6812      	ldr	r2, [r2, #0]
90027ebc:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
90027ec0:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
90027ec4:	fb00 1303 	mla	r3, r0, r3, r1
90027ec8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90027ecc:	930a      	str	r3, [sp, #40]	@ 0x28
90027ece:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90027ed0:	681b      	ldr	r3, [r3, #0]
90027ed2:	9310      	str	r3, [sp, #64]	@ 0x40
90027ed4:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
90027ed8:	930b      	str	r3, [sp, #44]	@ 0x2c
90027eda:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90027edc:	2b00      	cmp	r3, #0
90027ede:	dc03      	bgt.n	90027ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90027ee0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90027ee2:	2b00      	cmp	r3, #0
90027ee4:	f340 8375 	ble.w	900285d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90027ee8:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90027eea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027eee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027ef2:	1e48      	subs	r0, r1, #1
90027ef4:	1e57      	subs	r7, r2, #1
90027ef6:	9b07      	ldr	r3, [sp, #28]
90027ef8:	2b00      	cmp	r3, #0
90027efa:	f340 818e 	ble.w	9002821a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90027efe:	ea5f 4c24 	movs.w	ip, r4, asr #16
90027f02:	ea4f 4326 	mov.w	r3, r6, asr #16
90027f06:	d406      	bmi.n	90027f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90027f08:	4584      	cmp	ip, r0
90027f0a:	da04      	bge.n	90027f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90027f0c:	2b00      	cmp	r3, #0
90027f0e:	db02      	blt.n	90027f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90027f10:	42bb      	cmp	r3, r7
90027f12:	f2c0 8183 	blt.w	9002821c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90027f16:	f11c 0c01 	adds.w	ip, ip, #1
90027f1a:	f100 8173 	bmi.w	90028204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90027f1e:	4561      	cmp	r1, ip
90027f20:	f2c0 8170 	blt.w	90028204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90027f24:	3301      	adds	r3, #1
90027f26:	f100 816d 	bmi.w	90028204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90027f2a:	429a      	cmp	r2, r3
90027f2c:	f2c0 816a 	blt.w	90028204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90027f30:	9b07      	ldr	r3, [sp, #28]
90027f32:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90027f34:	9318      	str	r3, [sp, #96]	@ 0x60
90027f36:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90027f38:	2b00      	cmp	r3, #0
90027f3a:	f340 818c 	ble.w	90028256 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90027f3e:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
90027f40:	ea4f 4c26 	mov.w	ip, r6, asr #16
90027f44:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90027f46:	f3c4 3003 	ubfx	r0, r4, #12, #4
90027f4a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90027f4e:	1422      	asrs	r2, r4, #16
90027f50:	f3c6 3103 	ubfx	r1, r6, #12, #4
90027f54:	689b      	ldr	r3, [r3, #8]
90027f56:	f100 81cd 	bmi.w	900282f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90027f5a:	f103 38ff 	add.w	r8, r3, #4294967295
90027f5e:	4542      	cmp	r2, r8
90027f60:	f280 81c8 	bge.w	900282f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90027f64:	f1bc 0f00 	cmp.w	ip, #0
90027f68:	f2c0 81c4 	blt.w	900282f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90027f6c:	f10e 38ff 	add.w	r8, lr, #4294967295
90027f70:	45c4      	cmp	ip, r8
90027f72:	f280 81bf 	bge.w	900282f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90027f76:	b21b      	sxth	r3, r3
90027f78:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90027f7a:	fb0c 2203 	mla	r2, ip, r3, r2
90027f7e:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90027f82:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90027f86:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90027f8a:	2800      	cmp	r0, #0
90027f8c:	f000 81a9 	beq.w	900282e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90027f90:	f8d8 5004 	ldr.w	r5, [r8, #4]
90027f94:	950c      	str	r5, [sp, #48]	@ 0x30
90027f96:	0e2d      	lsrs	r5, r5, #24
90027f98:	9513      	str	r5, [sp, #76]	@ 0x4c
90027f9a:	b181      	cbz	r1, 90027fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90027f9c:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90027fa0:	3b01      	subs	r3, #1
90027fa2:	009b      	lsls	r3, r3, #2
90027fa4:	3304      	adds	r3, #4
90027fa6:	eb08 0c03 	add.w	ip, r8, r3
90027faa:	f858 3003 	ldr.w	r3, [r8, r3]
90027fae:	9308      	str	r3, [sp, #32]
90027fb0:	0e1b      	lsrs	r3, r3, #24
90027fb2:	9311      	str	r3, [sp, #68]	@ 0x44
90027fb4:	f8dc 3004 	ldr.w	r3, [ip, #4]
90027fb8:	930d      	str	r3, [sp, #52]	@ 0x34
90027fba:	0e1b      	lsrs	r3, r3, #24
90027fbc:	9314      	str	r3, [sp, #80]	@ 0x50
90027fbe:	b280      	uxth	r0, r0
90027fc0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90027fc2:	b289      	uxth	r1, r1
90027fc4:	fb00 f901 	mul.w	r9, r0, r1
90027fc8:	0100      	lsls	r0, r0, #4
90027fca:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90027fce:	eba0 0809 	sub.w	r8, r0, r9
90027fd2:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90027fd6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90027fd8:	b289      	uxth	r1, r1
90027fda:	fa1f f888 	uxth.w	r8, r8
90027fde:	1a5b      	subs	r3, r3, r1
90027fe0:	fb08 f000 	mul.w	r0, r8, r0
90027fe4:	b29b      	uxth	r3, r3
90027fe6:	fb03 000e 	mla	r0, r3, lr, r0
90027fea:	fb01 0005 	mla	r0, r1, r5, r0
90027fee:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90027ff0:	fb09 0005 	mla	r0, r9, r5, r0
90027ff4:	f3c0 2007 	ubfx	r0, r0, #8, #8
90027ff8:	2800      	cmp	r0, #0
90027ffa:	f000 80fa 	beq.w	900281f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90027ffe:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90028002:	d01b      	beq.n	9002803c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90028004:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90028008:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002800c:	fb0e fa0a 	mul.w	sl, lr, sl
90028010:	fb0e fe02 	mul.w	lr, lr, r2
90028014:	ea4f 221a 	mov.w	r2, sl, lsr #8
90028018:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002801c:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90028020:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90028024:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90028028:	4452      	add	r2, sl
9002802a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002802e:	0a12      	lsrs	r2, r2, #8
90028030:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90028034:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90028038:	ea42 020c 	orr.w	r2, r2, ip
9002803c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002803e:	2dff      	cmp	r5, #255	@ 0xff
90028040:	d021      	beq.n	90028086 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90028042:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90028044:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90028048:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002804a:	fb05 fb0b 	mul.w	fp, r5, fp
9002804e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90028050:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028054:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90028056:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002805a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002805e:	fb05 fa0a 	mul.w	sl, r5, sl
90028062:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028066:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002806a:	44de      	add	lr, fp
9002806c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90028070:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90028074:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028078:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002807c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028080:	ea4e 050a 	orr.w	r5, lr, sl
90028084:	950c      	str	r5, [sp, #48]	@ 0x30
90028086:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90028088:	2dff      	cmp	r5, #255	@ 0xff
9002808a:	d021      	beq.n	900280d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
9002808c:	9d08      	ldr	r5, [sp, #32]
9002808e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90028092:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90028094:	fb05 fb0b 	mul.w	fp, r5, fp
90028098:	9d08      	ldr	r5, [sp, #32]
9002809a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002809e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900280a0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900280a4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900280a8:	fb05 fa0a 	mul.w	sl, r5, sl
900280ac:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900280b0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900280b4:	44de      	add	lr, fp
900280b6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900280ba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900280be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900280c2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900280c6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900280ca:	ea4e 050a 	orr.w	r5, lr, sl
900280ce:	9508      	str	r5, [sp, #32]
900280d0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900280d2:	2dff      	cmp	r5, #255	@ 0xff
900280d4:	d021      	beq.n	9002811a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
900280d6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900280d8:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900280dc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900280de:	fb05 fb0b 	mul.w	fp, r5, fp
900280e2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900280e4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900280e8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900280ea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900280ee:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900280f2:	fb05 fa0a 	mul.w	sl, r5, sl
900280f6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900280fa:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900280fe:	44de      	add	lr, fp
90028100:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90028104:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90028108:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002810c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028110:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028114:	ea4e 050a 	orr.w	r5, lr, sl
90028118:	950d      	str	r5, [sp, #52]	@ 0x34
9002811a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002811c:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90028120:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90028124:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028128:	9d08      	ldr	r5, [sp, #32]
9002812a:	fb08 fc0c 	mul.w	ip, r8, ip
9002812e:	fb03 cc0e 	mla	ip, r3, lr, ip
90028132:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90028136:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90028138:	fb01 cc0e 	mla	ip, r1, lr, ip
9002813c:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90028140:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90028142:	fb09 cc0e 	mla	ip, r9, lr, ip
90028146:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
9002814a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
9002814c:	fb08 f80e 	mul.w	r8, r8, lr
90028150:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028154:	fb03 8202 	mla	r2, r3, r2, r8
90028158:	9b08      	ldr	r3, [sp, #32]
9002815a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002815e:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
90028162:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90028164:	fb01 220a 	mla	r2, r1, sl, r2
90028168:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
9002816c:	883b      	ldrh	r3, [r7, #0]
9002816e:	fb09 2901 	mla	r9, r9, r1, r2
90028172:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90028174:	1219      	asrs	r1, r3, #8
90028176:	4342      	muls	r2, r0
90028178:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002817c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90028180:	1c50      	adds	r0, r2, #1
90028182:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90028186:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9002818a:	ea4c 0c09 	orr.w	ip, ip, r9
9002818e:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90028192:	ea4f 421c 	mov.w	r2, ip, lsr #16
90028196:	f3cc 2e07 	ubfx	lr, ip, #8, #8
9002819a:	fa5f fc8c 	uxtb.w	ip, ip
9002819e:	fb12 f205 	smulbb	r2, r2, r5
900281a2:	b2c0      	uxtb	r0, r0
900281a4:	fb1c fc05 	smulbb	ip, ip, r5
900281a8:	fb01 2100 	mla	r1, r1, r0, r2
900281ac:	10da      	asrs	r2, r3, #3
900281ae:	fb1e fe05 	smulbb	lr, lr, r5
900281b2:	00db      	lsls	r3, r3, #3
900281b4:	b289      	uxth	r1, r1
900281b6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900281ba:	b2db      	uxtb	r3, r3
900281bc:	fb02 e200 	mla	r2, r2, r0, lr
900281c0:	fb03 c300 	mla	r3, r3, r0, ip
900281c4:	b292      	uxth	r2, r2
900281c6:	fa1f fc83 	uxth.w	ip, r3
900281ca:	1c4b      	adds	r3, r1, #1
900281cc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900281d0:	f10c 0301 	add.w	r3, ip, #1
900281d4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
900281d8:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
900281dc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900281e0:	430b      	orrs	r3, r1
900281e2:	1c51      	adds	r1, r2, #1
900281e4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900281e8:	0952      	lsrs	r2, r2, #5
900281ea:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900281ee:	4313      	orrs	r3, r2
900281f0:	803b      	strh	r3, [r7, #0]
900281f2:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900281f4:	3702      	adds	r7, #2
900281f6:	441c      	add	r4, r3
900281f8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900281fa:	441e      	add	r6, r3
900281fc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900281fe:	3b01      	subs	r3, #1
90028200:	9318      	str	r3, [sp, #96]	@ 0x60
90028202:	e698      	b.n	90027f36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90028204:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90028206:	441c      	add	r4, r3
90028208:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002820a:	441e      	add	r6, r3
9002820c:	9b07      	ldr	r3, [sp, #28]
9002820e:	3b01      	subs	r3, #1
90028210:	9307      	str	r3, [sp, #28]
90028212:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90028214:	3302      	adds	r3, #2
90028216:	930a      	str	r3, [sp, #40]	@ 0x28
90028218:	e66d      	b.n	90027ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9002821a:	d023      	beq.n	90028264 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
9002821c:	9b07      	ldr	r3, [sp, #28]
9002821e:	9829      	ldr	r0, [sp, #164]	@ 0xa4
90028220:	3b01      	subs	r3, #1
90028222:	fb00 4003 	mla	r0, r0, r3, r4
90028226:	1400      	asrs	r0, r0, #16
90028228:	f53f ae82 	bmi.w	90027f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002822c:	3901      	subs	r1, #1
9002822e:	4288      	cmp	r0, r1
90028230:	f6bf ae7e 	bge.w	90027f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90028234:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90028236:	fb01 6303 	mla	r3, r1, r3, r6
9002823a:	141b      	asrs	r3, r3, #16
9002823c:	f53f ae78 	bmi.w	90027f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90028240:	3a01      	subs	r2, #1
90028242:	4293      	cmp	r3, r2
90028244:	f6bf ae74 	bge.w	90027f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90028248:	f8dd b01c 	ldr.w	fp, [sp, #28]
9002824c:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90028250:	f1bb 0f00 	cmp.w	fp, #0
90028254:	dc6c      	bgt.n	90028330 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90028256:	9b07      	ldr	r3, [sp, #28]
90028258:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9002825c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002825e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90028262:	930a      	str	r3, [sp, #40]	@ 0x28
90028264:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90028266:	2b00      	cmp	r3, #0
90028268:	f340 81b3 	ble.w	900285d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
9002826c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90028270:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90028272:	ee30 0a04 	vadd.f32	s0, s0, s8
90028276:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002827a:	eef0 6a62 	vmov.f32	s13, s5
9002827e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90028282:	ee31 1a05 	vadd.f32	s2, s2, s10
90028286:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002828a:	ee16 4a90 	vmov	r4, s13
9002828e:	eef0 6a43 	vmov.f32	s13, s6
90028292:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028296:	ee16 6a90 	vmov	r6, s13
9002829a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002829e:	ee61 7a27 	vmul.f32	s15, s2, s15
900282a2:	ee77 2a62 	vsub.f32	s5, s14, s5
900282a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900282aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900282ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900282b2:	ee12 2a90 	vmov	r2, s5
900282b6:	eef0 2a47 	vmov.f32	s5, s14
900282ba:	fb92 f3f3 	sdiv	r3, r2, r3
900282be:	ee13 2a10 	vmov	r2, s6
900282c2:	9329      	str	r3, [sp, #164]	@ 0xa4
900282c4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900282c6:	eeb0 3a67 	vmov.f32	s6, s15
900282ca:	fb92 f3f3 	sdiv	r3, r2, r3
900282ce:	932a      	str	r3, [sp, #168]	@ 0xa8
900282d0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900282d2:	9a19      	ldr	r2, [sp, #100]	@ 0x64
900282d4:	3b01      	subs	r3, #1
900282d6:	9317      	str	r3, [sp, #92]	@ 0x5c
900282d8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900282da:	bf08      	it	eq
900282dc:	4613      	moveq	r3, r2
900282de:	9307      	str	r3, [sp, #28]
900282e0:	e5fb      	b.n	90027eda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900282e2:	2900      	cmp	r1, #0
900282e4:	f43f ae6b 	beq.w	90027fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900282e8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
900282ec:	9308      	str	r3, [sp, #32]
900282ee:	0e1b      	lsrs	r3, r3, #24
900282f0:	9311      	str	r3, [sp, #68]	@ 0x44
900282f2:	e664      	b.n	90027fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900282f4:	f112 0801 	adds.w	r8, r2, #1
900282f8:	f53f af7b 	bmi.w	900281f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900282fc:	4543      	cmp	r3, r8
900282fe:	f6ff af78 	blt.w	900281f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90028302:	f11c 0801 	adds.w	r8, ip, #1
90028306:	f53f af74 	bmi.w	900281f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002830a:	45c6      	cmp	lr, r8
9002830c:	f6ff af71 	blt.w	900281f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90028310:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
90028312:	b21b      	sxth	r3, r3
90028314:	9201      	str	r2, [sp, #4]
90028316:	fa0f f28e 	sxth.w	r2, lr
9002831a:	e9cd 1504 	strd	r1, r5, [sp, #16]
9002831e:	e9cd c002 	strd	ip, r0, [sp, #8]
90028322:	9200      	str	r2, [sp, #0]
90028324:	4639      	mov	r1, r7
90028326:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90028328:	981b      	ldr	r0, [sp, #108]	@ 0x6c
9002832a:	f7ff fc79 	bl	90027c20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
9002832e:	e760      	b.n	900281f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90028330:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90028332:	1427      	asrs	r7, r4, #16
90028334:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028336:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002833a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002833e:	1433      	asrs	r3, r6, #16
90028340:	f3c6 3003 	ubfx	r0, r6, #12, #4
90028344:	fb01 7303 	mla	r3, r1, r3, r7
90028348:	eb05 0783 	add.w	r7, r5, r3, lsl #2
9002834c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90028350:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90028354:	2a00      	cmp	r2, #0
90028356:	f000 8133 	beq.w	900285c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
9002835a:	687d      	ldr	r5, [r7, #4]
9002835c:	950e      	str	r5, [sp, #56]	@ 0x38
9002835e:	0e2d      	lsrs	r5, r5, #24
90028360:	9515      	str	r5, [sp, #84]	@ 0x54
90028362:	b178      	cbz	r0, 90028384 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90028364:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90028368:	3901      	subs	r1, #1
9002836a:	0089      	lsls	r1, r1, #2
9002836c:	3104      	adds	r1, #4
9002836e:	eb07 0e01 	add.w	lr, r7, r1
90028372:	5879      	ldr	r1, [r7, r1]
90028374:	9109      	str	r1, [sp, #36]	@ 0x24
90028376:	0e09      	lsrs	r1, r1, #24
90028378:	9112      	str	r1, [sp, #72]	@ 0x48
9002837a:	f8de 1004 	ldr.w	r1, [lr, #4]
9002837e:	910f      	str	r1, [sp, #60]	@ 0x3c
90028380:	0e09      	lsrs	r1, r1, #24
90028382:	9116      	str	r1, [sp, #88]	@ 0x58
90028384:	b292      	uxth	r2, r2
90028386:	9915      	ldr	r1, [sp, #84]	@ 0x54
90028388:	b280      	uxth	r0, r0
9002838a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002838c:	fb02 f800 	mul.w	r8, r2, r0
90028390:	0112      	lsls	r2, r2, #4
90028392:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90028396:	eba2 0e08 	sub.w	lr, r2, r8
9002839a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
9002839e:	b280      	uxth	r0, r0
900283a0:	fa1f fe8e 	uxth.w	lr, lr
900283a4:	1a12      	subs	r2, r2, r0
900283a6:	fb0e f101 	mul.w	r1, lr, r1
900283aa:	b292      	uxth	r2, r2
900283ac:	fb02 110c 	mla	r1, r2, ip, r1
900283b0:	fb00 1105 	mla	r1, r0, r5, r1
900283b4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
900283b6:	fb08 1105 	mla	r1, r8, r5, r1
900283ba:	f3c1 2107 	ubfx	r1, r1, #8, #8
900283be:	2900      	cmp	r1, #0
900283c0:	f000 80f5 	beq.w	900285ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
900283c4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
900283c8:	d019      	beq.n	900283fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
900283ca:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900283ce:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900283d2:	fb0c fa0a 	mul.w	sl, ip, sl
900283d6:	fb0c fc03 	mul.w	ip, ip, r3
900283da:	ea4f 231a 	mov.w	r3, sl, lsr #8
900283de:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900283e2:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900283e6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900283ea:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900283ee:	4453      	add	r3, sl
900283f0:	0a3f      	lsrs	r7, r7, #8
900283f2:	0a1b      	lsrs	r3, r3, #8
900283f4:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900283f8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900283fc:	433b      	orrs	r3, r7
900283fe:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028400:	2dff      	cmp	r5, #255	@ 0xff
90028402:	d020      	beq.n	90028446 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90028404:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028406:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002840a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
9002840c:	436f      	muls	r7, r5
9002840e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028410:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90028414:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028418:	9d15      	ldr	r5, [sp, #84]	@ 0x54
9002841a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002841e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028422:	fb05 fa0a 	mul.w	sl, r5, sl
90028426:	44bc      	add	ip, r7
90028428:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002842c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028430:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028434:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028438:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002843c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028440:	ea4c 050a 	orr.w	r5, ip, sl
90028444:	950e      	str	r5, [sp, #56]	@ 0x38
90028446:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028448:	2dff      	cmp	r5, #255	@ 0xff
9002844a:	d020      	beq.n	9002848e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
9002844c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002844e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028452:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028454:	436f      	muls	r7, r5
90028456:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90028458:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002845c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028460:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028462:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90028466:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002846a:	fb05 fa0a 	mul.w	sl, r5, sl
9002846e:	44bc      	add	ip, r7
90028470:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90028474:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028478:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002847c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028480:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028484:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028488:	ea4c 050a 	orr.w	r5, ip, sl
9002848c:	9509      	str	r5, [sp, #36]	@ 0x24
9002848e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90028490:	2dff      	cmp	r5, #255	@ 0xff
90028492:	d020      	beq.n	900284d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90028494:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90028496:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002849a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9002849c:	436f      	muls	r7, r5
9002849e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900284a0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900284a4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900284a8:	9d16      	ldr	r5, [sp, #88]	@ 0x58
900284aa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900284ae:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900284b2:	fb05 fa0a 	mul.w	sl, r5, sl
900284b6:	44bc      	add	ip, r7
900284b8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900284bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900284c0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900284c4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900284c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900284cc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900284d0:	ea4c 050a 	orr.w	r5, ip, sl
900284d4:	950f      	str	r5, [sp, #60]	@ 0x3c
900284d6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900284d8:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
900284dc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900284e0:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900284e4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900284e6:	fb0e f707 	mul.w	r7, lr, r7
900284ea:	fb02 770c 	mla	r7, r2, ip, r7
900284ee:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900284f2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900284f4:	fb00 770c 	mla	r7, r0, ip, r7
900284f8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900284fc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900284fe:	fb08 770c 	mla	r7, r8, ip, r7
90028502:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90028506:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90028508:	fb0e fe0c 	mul.w	lr, lr, ip
9002850c:	0a3f      	lsrs	r7, r7, #8
9002850e:	fb02 e303 	mla	r3, r2, r3, lr
90028512:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90028514:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90028518:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
9002851c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002851e:	fb00 330a 	mla	r3, r0, sl, r3
90028522:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90028526:	f8b9 0000 	ldrh.w	r0, [r9]
9002852a:	fb08 3c0c 	mla	ip, r8, ip, r3
9002852e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90028530:	1202      	asrs	r2, r0, #8
90028532:	4359      	muls	r1, r3
90028534:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028538:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9002853c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90028540:	1c4b      	adds	r3, r1, #1
90028542:	ea47 070c 	orr.w	r7, r7, ip
90028546:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002854a:	0c3b      	lsrs	r3, r7, #16
9002854c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90028550:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90028554:	b2ff      	uxtb	r7, r7
90028556:	fb13 f305 	smulbb	r3, r3, r5
9002855a:	b2c9      	uxtb	r1, r1
9002855c:	fb17 f705 	smulbb	r7, r7, r5
90028560:	fb02 3201 	mla	r2, r2, r1, r3
90028564:	10c3      	asrs	r3, r0, #3
90028566:	fb1c fc05 	smulbb	ip, ip, r5
9002856a:	00c0      	lsls	r0, r0, #3
9002856c:	b292      	uxth	r2, r2
9002856e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90028572:	b2c0      	uxtb	r0, r0
90028574:	fb03 c301 	mla	r3, r3, r1, ip
90028578:	fb00 7001 	mla	r0, r0, r1, r7
9002857c:	1c51      	adds	r1, r2, #1
9002857e:	b29b      	uxth	r3, r3
90028580:	b280      	uxth	r0, r0
90028582:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90028586:	f100 0c01 	add.w	ip, r0, #1
9002858a:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
9002858e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90028592:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90028596:	ea4c 0202 	orr.w	r2, ip, r2
9002859a:	f103 0c01 	add.w	ip, r3, #1
9002859e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
900285a2:	095b      	lsrs	r3, r3, #5
900285a4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900285a8:	431a      	orrs	r2, r3
900285aa:	f8a9 2000 	strh.w	r2, [r9]
900285ae:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900285b0:	f109 0902 	add.w	r9, r9, #2
900285b4:	f10b 3bff 	add.w	fp, fp, #4294967295
900285b8:	441c      	add	r4, r3
900285ba:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900285bc:	441e      	add	r6, r3
900285be:	e647      	b.n	90028250 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
900285c0:	2800      	cmp	r0, #0
900285c2:	f43f aedf 	beq.w	90028384 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900285c6:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
900285ca:	9109      	str	r1, [sp, #36]	@ 0x24
900285cc:	0e09      	lsrs	r1, r1, #24
900285ce:	9112      	str	r1, [sp, #72]	@ 0x48
900285d0:	e6d8      	b.n	90028384 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900285d2:	b01d      	add	sp, #116	@ 0x74
900285d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900285d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
900285d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900285dc:	b085      	sub	sp, #20
900285de:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
900285e2:	9102      	str	r1, [sp, #8]
900285e4:	2c00      	cmp	r4, #0
900285e6:	fb04 7103 	mla	r1, r4, r3, r7
900285ea:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
900285ee:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
900285f2:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
900285f6:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
900285fa:	f2c0 810c 	blt.w	90028816 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
900285fe:	45a6      	cmp	lr, r4
90028600:	f340 8109 	ble.w	90028816 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90028604:	2f00      	cmp	r7, #0
90028606:	f2c0 8104 	blt.w	90028812 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
9002860a:	42bb      	cmp	r3, r7
9002860c:	f340 8101 	ble.w	90028812 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90028610:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90028614:	1c7a      	adds	r2, r7, #1
90028616:	f100 8101 	bmi.w	9002881c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
9002861a:	4293      	cmp	r3, r2
9002861c:	f340 80fe 	ble.w	9002881c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90028620:	2e00      	cmp	r6, #0
90028622:	f000 80fd 	beq.w	90028820 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90028626:	f8dc 1004 	ldr.w	r1, [ip, #4]
9002862a:	3401      	adds	r4, #1
9002862c:	f100 80fc 	bmi.w	90028828 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90028630:	45a6      	cmp	lr, r4
90028632:	f340 80f9 	ble.w	90028828 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90028636:	2800      	cmp	r0, #0
90028638:	f000 80f9 	beq.w	9002882e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
9002863c:	2f00      	cmp	r7, #0
9002863e:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90028642:	f2c0 80ef 	blt.w	90028824 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90028646:	42bb      	cmp	r3, r7
90028648:	f340 80ec 	ble.w	90028824 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
9002864c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90028650:	3701      	adds	r7, #1
90028652:	f100 80ef 	bmi.w	90028834 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90028656:	42bb      	cmp	r3, r7
90028658:	f340 80ec 	ble.w	90028834 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
9002865c:	2e00      	cmp	r6, #0
9002865e:	f000 80eb 	beq.w	90028838 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90028662:	6852      	ldr	r2, [r2, #4]
90028664:	b2b6      	uxth	r6, r6
90028666:	b280      	uxth	r0, r0
90028668:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9002866c:	fb00 fe06 	mul.w	lr, r0, r6
90028670:	0136      	lsls	r6, r6, #4
90028672:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90028676:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9002867a:	eba6 070e 	sub.w	r7, r6, lr
9002867e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90028682:	ea4f 6914 	mov.w	r9, r4, lsr #24
90028686:	b280      	uxth	r0, r0
90028688:	b2bf      	uxth	r7, r7
9002868a:	1a1b      	subs	r3, r3, r0
9002868c:	ea4f 6812 	mov.w	r8, r2, lsr #24
90028690:	fb07 f60a 	mul.w	r6, r7, sl
90028694:	b29b      	uxth	r3, r3
90028696:	fb0b 6603 	mla	r6, fp, r3, r6
9002869a:	fb00 6609 	mla	r6, r0, r9, r6
9002869e:	fb0e 6608 	mla	r6, lr, r8, r6
900286a2:	f3c6 2607 	ubfx	r6, r6, #8, #8
900286a6:	9600      	str	r6, [sp, #0]
900286a8:	2e00      	cmp	r6, #0
900286aa:	f000 80af 	beq.w	9002880c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
900286ae:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900286b2:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900286b6:	9e02      	ldr	r6, [sp, #8]
900286b8:	fb0b fc0c 	mul.w	ip, fp, ip
900286bc:	fb0b f505 	mul.w	r5, fp, r5
900286c0:	8836      	ldrh	r6, [r6, #0]
900286c2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900286c6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900286ca:	9501      	str	r5, [sp, #4]
900286cc:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900286d0:	44dc      	add	ip, fp
900286d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900286d6:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900286da:	9503      	str	r5, [sp, #12]
900286dc:	9d01      	ldr	r5, [sp, #4]
900286de:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900286e2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900286e6:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900286ea:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900286ee:	fb0a fc0c 	mul.w	ip, sl, ip
900286f2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900286f6:	fb0a fa01 	mul.w	sl, sl, r1
900286fa:	ea4f 251c 	mov.w	r5, ip, lsr #8
900286fe:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90028702:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90028706:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002870a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002870e:	4465      	add	r5, ip
90028710:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90028714:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90028718:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002871c:	fb09 fc0c 	mul.w	ip, r9, ip
90028720:	0a2d      	lsrs	r5, r5, #8
90028722:	fb09 f904 	mul.w	r9, r9, r4
90028726:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002872a:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002872e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90028732:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90028736:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002873a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002873e:	437d      	muls	r5, r7
90028740:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90028744:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90028748:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002874c:	4461      	add	r1, ip
9002874e:	fb08 f404 	mul.w	r4, r8, r4
90028752:	ea4f 2919 	mov.w	r9, r9, lsr #8
90028756:	fb08 f802 	mul.w	r8, r8, r2
9002875a:	0a09      	lsrs	r1, r1, #8
9002875c:	0a22      	lsrs	r2, r4, #8
9002875e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90028762:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90028766:	fb07 f70a 	mul.w	r7, r7, sl
9002876a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002876e:	4414      	add	r4, r2
90028770:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90028774:	0a24      	lsrs	r4, r4, #8
90028776:	eb02 2818 	add.w	r8, r2, r8, lsr #8
9002877a:	9a03      	ldr	r2, [sp, #12]
9002877c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90028780:	fb02 5503 	mla	r5, r2, r3, r5
90028784:	ea4f 2818 	mov.w	r8, r8, lsr #8
90028788:	fb04 540e 	mla	r4, r4, lr, r5
9002878c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90028790:	fb01 4100 	mla	r1, r1, r0, r4
90028794:	0a09      	lsrs	r1, r1, #8
90028796:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
9002879a:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
9002879e:	fb03 7101 	mla	r1, r3, r1, r7
900287a2:	9b00      	ldr	r3, [sp, #0]
900287a4:	fb0e 1e08 	mla	lr, lr, r8, r1
900287a8:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900287ac:	43da      	mvns	r2, r3
900287ae:	1233      	asrs	r3, r6, #8
900287b0:	fb00 e101 	mla	r1, r0, r1, lr
900287b4:	10f0      	asrs	r0, r6, #3
900287b6:	b2d2      	uxtb	r2, r2
900287b8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900287bc:	0a09      	lsrs	r1, r1, #8
900287be:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900287c2:	00f6      	lsls	r6, r6, #3
900287c4:	4353      	muls	r3, r2
900287c6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900287ca:	4350      	muls	r0, r2
900287cc:	b2f6      	uxtb	r6, r6
900287ce:	4321      	orrs	r1, r4
900287d0:	4356      	muls	r6, r2
900287d2:	1c5a      	adds	r2, r3, #1
900287d4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900287d8:	0c0b      	lsrs	r3, r1, #16
900287da:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900287de:	1c42      	adds	r2, r0, #1
900287e0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900287e4:	0a0a      	lsrs	r2, r1, #8
900287e6:	021b      	lsls	r3, r3, #8
900287e8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900287ec:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900287f0:	00d2      	lsls	r2, r2, #3
900287f2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900287f6:	4313      	orrs	r3, r2
900287f8:	1c72      	adds	r2, r6, #1
900287fa:	eb02 2616 	add.w	r6, r2, r6, lsr #8
900287fe:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90028802:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90028806:	4319      	orrs	r1, r3
90028808:	9b02      	ldr	r3, [sp, #8]
9002880a:	8019      	strh	r1, [r3, #0]
9002880c:	b005      	add	sp, #20
9002880e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028812:	2500      	movs	r5, #0
90028814:	e6fe      	b.n	90028614 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90028816:	2100      	movs	r1, #0
90028818:	460d      	mov	r5, r1
9002881a:	e706      	b.n	9002862a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
9002881c:	2100      	movs	r1, #0
9002881e:	e704      	b.n	9002862a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90028820:	4631      	mov	r1, r6
90028822:	e702      	b.n	9002862a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90028824:	2400      	movs	r4, #0
90028826:	e713      	b.n	90028650 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90028828:	2200      	movs	r2, #0
9002882a:	4614      	mov	r4, r2
9002882c:	e71a      	b.n	90028664 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
9002882e:	4602      	mov	r2, r0
90028830:	4604      	mov	r4, r0
90028832:	e717      	b.n	90028664 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90028834:	2200      	movs	r2, #0
90028836:	e715      	b.n	90028664 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90028838:	4632      	mov	r2, r6
9002883a:	e713      	b.n	90028664 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

9002883c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002883c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028840:	b09b      	sub	sp, #108	@ 0x6c
90028842:	9218      	str	r2, [sp, #96]	@ 0x60
90028844:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90028846:	9019      	str	r0, [sp, #100]	@ 0x64
90028848:	9116      	str	r1, [sp, #88]	@ 0x58
9002884a:	6850      	ldr	r0, [r2, #4]
9002884c:	9307      	str	r3, [sp, #28]
9002884e:	6812      	ldr	r2, [r2, #0]
90028850:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90028854:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
90028858:	fb00 1303 	mla	r3, r0, r3, r1
9002885c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90028860:	930a      	str	r3, [sp, #40]	@ 0x28
90028862:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90028864:	681b      	ldr	r3, [r3, #0]
90028866:	930f      	str	r3, [sp, #60]	@ 0x3c
90028868:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002886a:	2b00      	cmp	r3, #0
9002886c:	dc03      	bgt.n	90028876 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9002886e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90028870:	2b00      	cmp	r3, #0
90028872:	f340 8387 	ble.w	90028f84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90028876:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90028878:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002887c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90028880:	1e48      	subs	r0, r1, #1
90028882:	1e57      	subs	r7, r2, #1
90028884:	9b07      	ldr	r3, [sp, #28]
90028886:	2b00      	cmp	r3, #0
90028888:	f340 8166 	ble.w	90028b58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
9002888c:	ea5f 4c24 	movs.w	ip, r4, asr #16
90028890:	ea4f 4326 	mov.w	r3, r6, asr #16
90028894:	d406      	bmi.n	900288a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90028896:	4584      	cmp	ip, r0
90028898:	da04      	bge.n	900288a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9002889a:	2b00      	cmp	r3, #0
9002889c:	db02      	blt.n	900288a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9002889e:	42bb      	cmp	r3, r7
900288a0:	f2c0 815b 	blt.w	90028b5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900288a4:	f11c 0c01 	adds.w	ip, ip, #1
900288a8:	f100 814b 	bmi.w	90028b42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900288ac:	4561      	cmp	r1, ip
900288ae:	f2c0 8148 	blt.w	90028b42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900288b2:	3301      	adds	r3, #1
900288b4:	f100 8145 	bmi.w	90028b42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900288b8:	429a      	cmp	r2, r3
900288ba:	f2c0 8142 	blt.w	90028b42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900288be:	9b07      	ldr	r3, [sp, #28]
900288c0:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
900288c2:	9317      	str	r3, [sp, #92]	@ 0x5c
900288c4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900288c6:	2b00      	cmp	r3, #0
900288c8:	f340 8165 	ble.w	90028b96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
900288cc:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
900288ce:	ea4f 4c26 	mov.w	ip, r6, asr #16
900288d2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900288d4:	f3c4 3103 	ubfx	r1, r4, #12, #4
900288d8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900288dc:	1422      	asrs	r2, r4, #16
900288de:	f3c6 3003 	ubfx	r0, r6, #12, #4
900288e2:	689b      	ldr	r3, [r3, #8]
900288e4:	f100 81d5 	bmi.w	90028c92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900288e8:	f103 38ff 	add.w	r8, r3, #4294967295
900288ec:	4542      	cmp	r2, r8
900288ee:	f280 81d0 	bge.w	90028c92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900288f2:	f1bc 0f00 	cmp.w	ip, #0
900288f6:	f2c0 81cc 	blt.w	90028c92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900288fa:	f10e 38ff 	add.w	r8, lr, #4294967295
900288fe:	45c4      	cmp	ip, r8
90028900:	f280 81c7 	bge.w	90028c92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90028904:	b21b      	sxth	r3, r3
90028906:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90028908:	fb0c 2203 	mla	r2, ip, r3, r2
9002890c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90028910:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90028914:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90028918:	2900      	cmp	r1, #0
9002891a:	f000 8182 	beq.w	90028c22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
9002891e:	f8d8 5004 	ldr.w	r5, [r8, #4]
90028922:	950b      	str	r5, [sp, #44]	@ 0x2c
90028924:	0e2d      	lsrs	r5, r5, #24
90028926:	9512      	str	r5, [sp, #72]	@ 0x48
90028928:	b180      	cbz	r0, 9002894c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
9002892a:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
9002892e:	3b01      	subs	r3, #1
90028930:	009b      	lsls	r3, r3, #2
90028932:	3304      	adds	r3, #4
90028934:	eb08 0c03 	add.w	ip, r8, r3
90028938:	f858 3003 	ldr.w	r3, [r8, r3]
9002893c:	9308      	str	r3, [sp, #32]
9002893e:	0e1b      	lsrs	r3, r3, #24
90028940:	9310      	str	r3, [sp, #64]	@ 0x40
90028942:	f8dc 3004 	ldr.w	r3, [ip, #4]
90028946:	930c      	str	r3, [sp, #48]	@ 0x30
90028948:	0e1b      	lsrs	r3, r3, #24
9002894a:	9313      	str	r3, [sp, #76]	@ 0x4c
9002894c:	b289      	uxth	r1, r1
9002894e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90028950:	b280      	uxth	r0, r0
90028952:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028954:	fb01 f900 	mul.w	r9, r1, r0
90028958:	0109      	lsls	r1, r1, #4
9002895a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002895e:	eba1 0809 	sub.w	r8, r1, r9
90028962:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
90028966:	b280      	uxth	r0, r0
90028968:	fa1f f888 	uxth.w	r8, r8
9002896c:	1a09      	subs	r1, r1, r0
9002896e:	fb08 f303 	mul.w	r3, r8, r3
90028972:	b289      	uxth	r1, r1
90028974:	fb01 330e 	mla	r3, r1, lr, r3
90028978:	fb00 3305 	mla	r3, r0, r5, r3
9002897c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002897e:	fb09 3305 	mla	r3, r9, r5, r3
90028982:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028986:	2b00      	cmp	r3, #0
90028988:	f000 80d2 	beq.w	90028b30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002898c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90028990:	d01b      	beq.n	900289ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90028992:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90028996:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002899a:	fb0e fa0a 	mul.w	sl, lr, sl
9002899e:	fb0e fe02 	mul.w	lr, lr, r2
900289a2:	ea4f 221a 	mov.w	r2, sl, lsr #8
900289a6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900289aa:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900289ae:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900289b2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900289b6:	4452      	add	r2, sl
900289b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900289bc:	0a12      	lsrs	r2, r2, #8
900289be:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900289c2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900289c6:	ea42 020c 	orr.w	r2, r2, ip
900289ca:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900289cc:	2dff      	cmp	r5, #255	@ 0xff
900289ce:	d021      	beq.n	90028a14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
900289d0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900289d2:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900289d6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900289d8:	fb05 fb0b 	mul.w	fp, r5, fp
900289dc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900289de:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900289e2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900289e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900289e8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900289ec:	fb05 fa0a 	mul.w	sl, r5, sl
900289f0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900289f4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900289f8:	44de      	add	lr, fp
900289fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900289fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90028a02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028a06:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028a0a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028a0e:	ea4e 050a 	orr.w	r5, lr, sl
90028a12:	950b      	str	r5, [sp, #44]	@ 0x2c
90028a14:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028a16:	2dff      	cmp	r5, #255	@ 0xff
90028a18:	d021      	beq.n	90028a5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90028a1a:	9d08      	ldr	r5, [sp, #32]
90028a1c:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90028a20:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028a22:	fb05 fb0b 	mul.w	fp, r5, fp
90028a26:	9d08      	ldr	r5, [sp, #32]
90028a28:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90028a2c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028a2e:	fb05 fa0e 	mul.w	sl, r5, lr
90028a32:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90028a36:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90028a3a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028a3e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90028a42:	44de      	add	lr, fp
90028a44:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90028a48:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90028a4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028a50:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028a54:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028a58:	ea4e 050a 	orr.w	r5, lr, sl
90028a5c:	9508      	str	r5, [sp, #32]
90028a5e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90028a60:	2dff      	cmp	r5, #255	@ 0xff
90028a62:	d021      	beq.n	90028aa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90028a64:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90028a66:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90028a6a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90028a6c:	fb05 fb0b 	mul.w	fp, r5, fp
90028a70:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90028a72:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028a76:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90028a78:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90028a7c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90028a80:	fb05 fa0a 	mul.w	sl, r5, sl
90028a84:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028a88:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90028a8c:	44de      	add	lr, fp
90028a8e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90028a92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90028a96:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028a9a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028a9e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028aa2:	ea4e 050a 	orr.w	r5, lr, sl
90028aa6:	950c      	str	r5, [sp, #48]	@ 0x30
90028aa8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90028aaa:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90028aae:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90028ab2:	2bff      	cmp	r3, #255	@ 0xff
90028ab4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028ab8:	9d08      	ldr	r5, [sp, #32]
90028aba:	fb08 fc0c 	mul.w	ip, r8, ip
90028abe:	fb01 cc0e 	mla	ip, r1, lr, ip
90028ac2:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90028ac6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90028ac8:	fb00 cc0e 	mla	ip, r0, lr, ip
90028acc:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90028ad0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90028ad2:	fb09 cc0e 	mla	ip, r9, lr, ip
90028ad6:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90028ada:	fb08 f80e 	mul.w	r8, r8, lr
90028ade:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028ae2:	fb01 8202 	mla	r2, r1, r2, r8
90028ae6:	9908      	ldr	r1, [sp, #32]
90028ae8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028aec:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90028af0:	990c      	ldr	r1, [sp, #48]	@ 0x30
90028af2:	fb00 220a 	mla	r2, r0, sl, r2
90028af6:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
90028afa:	fb09 2900 	mla	r9, r9, r0, r2
90028afe:	ea4f 2919 	mov.w	r9, r9, lsr #8
90028b02:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90028b06:	ea4c 0c09 	orr.w	ip, ip, r9
90028b0a:	ea4f 221c 	mov.w	r2, ip, lsr #8
90028b0e:	f040 8091 	bne.w	90028c34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90028b12:	ea4f 135c 	mov.w	r3, ip, lsr #5
90028b16:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
90028b1a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90028b1e:	f022 0207 	bic.w	r2, r2, #7
90028b22:	431a      	orrs	r2, r3
90028b24:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90028b28:	ea4c 0c02 	orr.w	ip, ip, r2
90028b2c:	f8a7 c000 	strh.w	ip, [r7]
90028b30:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90028b32:	3702      	adds	r7, #2
90028b34:	441c      	add	r4, r3
90028b36:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90028b38:	441e      	add	r6, r3
90028b3a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90028b3c:	3b01      	subs	r3, #1
90028b3e:	9317      	str	r3, [sp, #92]	@ 0x5c
90028b40:	e6c0      	b.n	900288c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90028b42:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90028b44:	441c      	add	r4, r3
90028b46:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90028b48:	441e      	add	r6, r3
90028b4a:	9b07      	ldr	r3, [sp, #28]
90028b4c:	3b01      	subs	r3, #1
90028b4e:	9307      	str	r3, [sp, #28]
90028b50:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90028b52:	3302      	adds	r3, #2
90028b54:	930a      	str	r3, [sp, #40]	@ 0x28
90028b56:	e695      	b.n	90028884 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90028b58:	d024      	beq.n	90028ba4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90028b5a:	9b07      	ldr	r3, [sp, #28]
90028b5c:	9827      	ldr	r0, [sp, #156]	@ 0x9c
90028b5e:	3b01      	subs	r3, #1
90028b60:	fb00 4003 	mla	r0, r0, r3, r4
90028b64:	1400      	asrs	r0, r0, #16
90028b66:	f53f aeaa 	bmi.w	900288be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90028b6a:	3901      	subs	r1, #1
90028b6c:	4288      	cmp	r0, r1
90028b6e:	f6bf aea6 	bge.w	900288be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90028b72:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90028b74:	fb01 6303 	mla	r3, r1, r3, r6
90028b78:	141b      	asrs	r3, r3, #16
90028b7a:	f53f aea0 	bmi.w	900288be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90028b7e:	3a01      	subs	r2, #1
90028b80:	4293      	cmp	r3, r2
90028b82:	f6bf ae9c 	bge.w	900288be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90028b86:	f8dd b01c 	ldr.w	fp, [sp, #28]
90028b8a:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
90028b8e:	f1bb 0f00 	cmp.w	fp, #0
90028b92:	f300 809a 	bgt.w	90028cca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90028b96:	9b07      	ldr	r3, [sp, #28]
90028b98:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90028b9c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90028b9e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90028ba2:	930a      	str	r3, [sp, #40]	@ 0x28
90028ba4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90028ba6:	2b00      	cmp	r3, #0
90028ba8:	f340 81ec 	ble.w	90028f84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90028bac:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90028bb0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90028bb2:	ee30 0a04 	vadd.f32	s0, s0, s8
90028bb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
90028bba:	eef0 6a62 	vmov.f32	s13, s5
90028bbe:	eec7 7a00 	vdiv.f32	s15, s14, s0
90028bc2:	ee31 1a05 	vadd.f32	s2, s2, s10
90028bc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028bca:	ee16 4a90 	vmov	r4, s13
90028bce:	eef0 6a43 	vmov.f32	s13, s6
90028bd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028bd6:	ee16 6a90 	vmov	r6, s13
90028bda:	ee20 7aa7 	vmul.f32	s14, s1, s15
90028bde:	ee61 7a27 	vmul.f32	s15, s2, s15
90028be2:	ee77 2a62 	vsub.f32	s5, s14, s5
90028be6:	ee37 3ac3 	vsub.f32	s6, s15, s6
90028bea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90028bee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90028bf2:	ee12 2a90 	vmov	r2, s5
90028bf6:	eef0 2a47 	vmov.f32	s5, s14
90028bfa:	fb92 f3f3 	sdiv	r3, r2, r3
90028bfe:	ee13 2a10 	vmov	r2, s6
90028c02:	9327      	str	r3, [sp, #156]	@ 0x9c
90028c04:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90028c06:	eeb0 3a67 	vmov.f32	s6, s15
90028c0a:	fb92 f3f3 	sdiv	r3, r2, r3
90028c0e:	9328      	str	r3, [sp, #160]	@ 0xa0
90028c10:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90028c12:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90028c14:	3b01      	subs	r3, #1
90028c16:	9316      	str	r3, [sp, #88]	@ 0x58
90028c18:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90028c1a:	bf08      	it	eq
90028c1c:	4613      	moveq	r3, r2
90028c1e:	9307      	str	r3, [sp, #28]
90028c20:	e622      	b.n	90028868 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
90028c22:	2800      	cmp	r0, #0
90028c24:	f43f ae92 	beq.w	9002894c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90028c28:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90028c2c:	9308      	str	r3, [sp, #32]
90028c2e:	0e1b      	lsrs	r3, r3, #24
90028c30:	9310      	str	r3, [sp, #64]	@ 0x40
90028c32:	e68b      	b.n	9002894c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90028c34:	8839      	ldrh	r1, [r7, #0]
90028c36:	43db      	mvns	r3, r3
90028c38:	4dd4      	ldr	r5, [pc, #848]	@ (90028f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90028c3a:	ea4f 2e21 	mov.w	lr, r1, asr #8
90028c3e:	fa5f f883 	uxtb.w	r8, r3
90028c42:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90028c46:	10c8      	asrs	r0, r1, #3
90028c48:	00cb      	lsls	r3, r1, #3
90028c4a:	fb0e fe08 	mul.w	lr, lr, r8
90028c4e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90028c52:	b2db      	uxtb	r3, r3
90028c54:	f10e 0101 	add.w	r1, lr, #1
90028c58:	fb00 f008 	mul.w	r0, r0, r8
90028c5c:	fb03 f308 	mul.w	r3, r3, r8
90028c60:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90028c64:	ea4f 411c 	mov.w	r1, ip, lsr #16
90028c68:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90028c6c:	f100 0e01 	add.w	lr, r0, #1
90028c70:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90028c74:	b2c9      	uxtb	r1, r1
90028c76:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90028c7a:	ea05 2101 	and.w	r1, r5, r1, lsl #8
90028c7e:	00d2      	lsls	r2, r2, #3
90028c80:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028c84:	430a      	orrs	r2, r1
90028c86:	1c59      	adds	r1, r3, #1
90028c88:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90028c8c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90028c90:	e748      	b.n	90028b24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90028c92:	f112 0801 	adds.w	r8, r2, #1
90028c96:	f53f af4b 	bmi.w	90028b30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90028c9a:	4543      	cmp	r3, r8
90028c9c:	f6ff af48 	blt.w	90028b30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90028ca0:	f11c 0801 	adds.w	r8, ip, #1
90028ca4:	f53f af44 	bmi.w	90028b30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90028ca8:	45c6      	cmp	lr, r8
90028caa:	f6ff af41 	blt.w	90028b30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90028cae:	b21b      	sxth	r3, r3
90028cb0:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90028cb4:	fa0f f28e 	sxth.w	r2, lr
90028cb8:	e9cd 1003 	strd	r1, r0, [sp, #12]
90028cbc:	9200      	str	r2, [sp, #0]
90028cbe:	4639      	mov	r1, r7
90028cc0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90028cc2:	9819      	ldr	r0, [sp, #100]	@ 0x64
90028cc4:	f7ff fc88 	bl	900285d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90028cc8:	e732      	b.n	90028b30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90028cca:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90028ccc:	1421      	asrs	r1, r4, #16
90028cce:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90028cd0:	f3c4 3203 	ubfx	r2, r4, #12, #4
90028cd4:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90028cd8:	1433      	asrs	r3, r6, #16
90028cda:	f3c6 3003 	ubfx	r0, r6, #12, #4
90028cde:	fb07 1303 	mla	r3, r7, r3, r1
90028ce2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90028ce4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90028ce8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90028cec:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90028cf0:	2a00      	cmp	r2, #0
90028cf2:	f000 8108 	beq.w	90028f06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90028cf6:	684d      	ldr	r5, [r1, #4]
90028cf8:	950d      	str	r5, [sp, #52]	@ 0x34
90028cfa:	0e2d      	lsrs	r5, r5, #24
90028cfc:	9514      	str	r5, [sp, #80]	@ 0x50
90028cfe:	b178      	cbz	r0, 90028d20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90028d00:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
90028d04:	3f01      	subs	r7, #1
90028d06:	00bf      	lsls	r7, r7, #2
90028d08:	3704      	adds	r7, #4
90028d0a:	eb01 0e07 	add.w	lr, r1, r7
90028d0e:	59c9      	ldr	r1, [r1, r7]
90028d10:	9109      	str	r1, [sp, #36]	@ 0x24
90028d12:	0e09      	lsrs	r1, r1, #24
90028d14:	9111      	str	r1, [sp, #68]	@ 0x44
90028d16:	f8de 1004 	ldr.w	r1, [lr, #4]
90028d1a:	910e      	str	r1, [sp, #56]	@ 0x38
90028d1c:	0e09      	lsrs	r1, r1, #24
90028d1e:	9115      	str	r1, [sp, #84]	@ 0x54
90028d20:	b292      	uxth	r2, r2
90028d22:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90028d24:	b280      	uxth	r0, r0
90028d26:	fb02 f900 	mul.w	r9, r2, r0
90028d2a:	0112      	lsls	r2, r2, #4
90028d2c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90028d30:	eba2 0e09 	sub.w	lr, r2, r9
90028d34:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90028d38:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90028d3a:	b280      	uxth	r0, r0
90028d3c:	fa1f fe8e 	uxth.w	lr, lr
90028d40:	1a09      	subs	r1, r1, r0
90028d42:	fb0e f202 	mul.w	r2, lr, r2
90028d46:	b289      	uxth	r1, r1
90028d48:	fb01 220c 	mla	r2, r1, ip, r2
90028d4c:	fb00 2205 	mla	r2, r0, r5, r2
90028d50:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028d52:	fb09 2205 	mla	r2, r9, r5, r2
90028d56:	f3c2 2207 	ubfx	r2, r2, #8, #8
90028d5a:	2a00      	cmp	r2, #0
90028d5c:	f000 80ca 	beq.w	90028ef4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90028d60:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90028d64:	d019      	beq.n	90028d9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90028d66:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90028d6a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90028d6e:	fb0c fa0a 	mul.w	sl, ip, sl
90028d72:	fb0c fc03 	mul.w	ip, ip, r3
90028d76:	ea4f 231a 	mov.w	r3, sl, lsr #8
90028d7a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90028d7e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90028d82:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90028d86:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90028d8a:	4453      	add	r3, sl
90028d8c:	0a3f      	lsrs	r7, r7, #8
90028d8e:	0a1b      	lsrs	r3, r3, #8
90028d90:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90028d94:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90028d98:	433b      	orrs	r3, r7
90028d9a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90028d9c:	2dff      	cmp	r5, #255	@ 0xff
90028d9e:	d020      	beq.n	90028de2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90028da0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90028da2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028da6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90028da8:	436f      	muls	r7, r5
90028daa:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90028dac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90028db0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028db4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90028db6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90028dba:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028dbe:	fb05 fa0a 	mul.w	sl, r5, sl
90028dc2:	44bc      	add	ip, r7
90028dc4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90028dc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028dcc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028dd0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028dd4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028dd8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028ddc:	ea4c 050a 	orr.w	r5, ip, sl
90028de0:	950d      	str	r5, [sp, #52]	@ 0x34
90028de2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90028de4:	2dff      	cmp	r5, #255	@ 0xff
90028de6:	d020      	beq.n	90028e2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90028de8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90028dea:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028dee:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90028df0:	436f      	muls	r7, r5
90028df2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90028df4:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90028df8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90028dfa:	fb05 fa0c 	mul.w	sl, r5, ip
90028dfe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90028e02:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90028e06:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028e0a:	44bc      	add	ip, r7
90028e0c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90028e10:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028e14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028e18:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028e1c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028e20:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028e24:	ea4c 050a 	orr.w	r5, ip, sl
90028e28:	9509      	str	r5, [sp, #36]	@ 0x24
90028e2a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028e2c:	2dff      	cmp	r5, #255	@ 0xff
90028e2e:	d020      	beq.n	90028e72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90028e30:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028e32:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028e36:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028e38:	436f      	muls	r7, r5
90028e3a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028e3c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90028e40:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028e44:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028e46:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90028e4a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028e4e:	fb05 fa0a 	mul.w	sl, r5, sl
90028e52:	44bc      	add	ip, r7
90028e54:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90028e58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028e5c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028e60:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028e64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028e68:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028e6c:	ea4c 050a 	orr.w	r5, ip, sl
90028e70:	950e      	str	r5, [sp, #56]	@ 0x38
90028e72:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90028e74:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90028e78:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90028e7c:	2aff      	cmp	r2, #255	@ 0xff
90028e7e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028e82:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90028e84:	fb0e f707 	mul.w	r7, lr, r7
90028e88:	fb01 770c 	mla	r7, r1, ip, r7
90028e8c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028e90:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028e92:	fb00 770c 	mla	r7, r0, ip, r7
90028e96:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028e9a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90028e9c:	fb09 770c 	mla	r7, r9, ip, r7
90028ea0:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90028ea4:	fb0e fe0c 	mul.w	lr, lr, ip
90028ea8:	ea4f 2717 	mov.w	r7, r7, lsr #8
90028eac:	fb01 e303 	mla	r3, r1, r3, lr
90028eb0:	9909      	ldr	r1, [sp, #36]	@ 0x24
90028eb2:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90028eb6:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90028eba:	990e      	ldr	r1, [sp, #56]	@ 0x38
90028ebc:	fb00 330a 	mla	r3, r0, sl, r3
90028ec0:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90028ec4:	fb09 3c0c 	mla	ip, r9, ip, r3
90028ec8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028ecc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90028ed0:	ea47 070c 	orr.w	r7, r7, ip
90028ed4:	ea4f 2317 	mov.w	r3, r7, lsr #8
90028ed8:	d11e      	bne.n	90028f18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
90028eda:	097a      	lsrs	r2, r7, #5
90028edc:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
90028ee0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90028ee4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028ee8:	f023 0307 	bic.w	r3, r3, #7
90028eec:	4313      	orrs	r3, r2
90028eee:	431f      	orrs	r7, r3
90028ef0:	f8a8 7000 	strh.w	r7, [r8]
90028ef4:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90028ef6:	f108 0802 	add.w	r8, r8, #2
90028efa:	f10b 3bff 	add.w	fp, fp, #4294967295
90028efe:	441c      	add	r4, r3
90028f00:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90028f02:	441e      	add	r6, r3
90028f04:	e643      	b.n	90028b8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90028f06:	2800      	cmp	r0, #0
90028f08:	f43f af0a 	beq.w	90028d20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90028f0c:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90028f10:	9109      	str	r1, [sp, #36]	@ 0x24
90028f12:	0e09      	lsrs	r1, r1, #24
90028f14:	9111      	str	r1, [sp, #68]	@ 0x44
90028f16:	e703      	b.n	90028d20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90028f18:	f8b8 1000 	ldrh.w	r1, [r8]
90028f1c:	43d2      	mvns	r2, r2
90028f1e:	ea4f 2c21 	mov.w	ip, r1, asr #8
90028f22:	fa5f fe82 	uxtb.w	lr, r2
90028f26:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90028f2a:	10c8      	asrs	r0, r1, #3
90028f2c:	00ca      	lsls	r2, r1, #3
90028f2e:	fb0c fc0e 	mul.w	ip, ip, lr
90028f32:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90028f36:	b2d2      	uxtb	r2, r2
90028f38:	f10c 0101 	add.w	r1, ip, #1
90028f3c:	fb00 f00e 	mul.w	r0, r0, lr
90028f40:	fb02 f20e 	mul.w	r2, r2, lr
90028f44:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90028f48:	0c39      	lsrs	r1, r7, #16
90028f4a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90028f4e:	490f      	ldr	r1, [pc, #60]	@ (90028f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90028f50:	fa5f fc8c 	uxtb.w	ip, ip
90028f54:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90028f58:	1c41      	adds	r1, r0, #1
90028f5a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90028f5e:	1c51      	adds	r1, r2, #1
90028f60:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90028f64:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90028f68:	00c0      	lsls	r0, r0, #3
90028f6a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90028f6e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90028f72:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90028f76:	ea4c 0c00 	orr.w	ip, ip, r0
90028f7a:	ea47 0c0c 	orr.w	ip, r7, ip
90028f7e:	f8a8 c000 	strh.w	ip, [r8]
90028f82:	e7b7      	b.n	90028ef4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90028f84:	b01b      	add	sp, #108	@ 0x6c
90028f86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028f8a:	bf00      	nop
90028f8c:	fffff800 	.word	0xfffff800

90028f90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90028f90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90028f94:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90028f98:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90028f9c:	2d00      	cmp	r5, #0
90028f9e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90028fa2:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90028fa6:	fb05 0e03 	mla	lr, r5, r3, r0
90028faa:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90028fae:	f2c0 808c 	blt.w	900290ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90028fb2:	45a9      	cmp	r9, r5
90028fb4:	f340 8089 	ble.w	900290ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90028fb8:	2800      	cmp	r0, #0
90028fba:	f2c0 8084 	blt.w	900290c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90028fbe:	4580      	cmp	r8, r0
90028fc0:	f340 8081 	ble.w	900290c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90028fc4:	ea4f 045e 	mov.w	r4, lr, lsr #1
90028fc8:	f01e 0f01 	tst.w	lr, #1
90028fcc:	5d16      	ldrb	r6, [r2, r4]
90028fce:	bf0c      	ite	eq
90028fd0:	f006 060f 	andeq.w	r6, r6, #15
90028fd4:	1136      	asrne	r6, r6, #4
90028fd6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90028fda:	b2f6      	uxtb	r6, r6
90028fdc:	1c44      	adds	r4, r0, #1
90028fde:	d477      	bmi.n	900290d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90028fe0:	45a0      	cmp	r8, r4
90028fe2:	dd75      	ble.n	900290d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90028fe4:	2f00      	cmp	r7, #0
90028fe6:	d075      	beq.n	900290d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90028fe8:	f10e 0a01 	add.w	sl, lr, #1
90028fec:	ea4f 045a 	mov.w	r4, sl, lsr #1
90028ff0:	f01a 0f01 	tst.w	sl, #1
90028ff4:	5d14      	ldrb	r4, [r2, r4]
90028ff6:	bf0c      	ite	eq
90028ff8:	f004 040f 	andeq.w	r4, r4, #15
90028ffc:	1124      	asrne	r4, r4, #4
90028ffe:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90029002:	b2e4      	uxtb	r4, r4
90029004:	3501      	adds	r5, #1
90029006:	d469      	bmi.n	900290dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90029008:	45a9      	cmp	r9, r5
9002900a:	dd67      	ble.n	900290dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
9002900c:	f1bc 0f00 	cmp.w	ip, #0
90029010:	d067      	beq.n	900290e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90029012:	2800      	cmp	r0, #0
90029014:	db60      	blt.n	900290d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90029016:	4580      	cmp	r8, r0
90029018:	dd5e      	ble.n	900290d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002901a:	eb03 090e 	add.w	r9, r3, lr
9002901e:	ea4f 0559 	mov.w	r5, r9, lsr #1
90029022:	f019 0f01 	tst.w	r9, #1
90029026:	5d55      	ldrb	r5, [r2, r5]
90029028:	bf0c      	ite	eq
9002902a:	f005 050f 	andeq.w	r5, r5, #15
9002902e:	112d      	asrne	r5, r5, #4
90029030:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90029034:	b2ed      	uxtb	r5, r5
90029036:	3001      	adds	r0, #1
90029038:	d456      	bmi.n	900290e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
9002903a:	4580      	cmp	r8, r0
9002903c:	dd54      	ble.n	900290e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
9002903e:	2f00      	cmp	r7, #0
90029040:	d054      	beq.n	900290ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90029042:	3301      	adds	r3, #1
90029044:	449e      	add	lr, r3
90029046:	ea4f 035e 	mov.w	r3, lr, lsr #1
9002904a:	f01e 0f01 	tst.w	lr, #1
9002904e:	5cd0      	ldrb	r0, [r2, r3]
90029050:	bf0c      	ite	eq
90029052:	f000 000f 	andeq.w	r0, r0, #15
90029056:	1100      	asrne	r0, r0, #4
90029058:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002905c:	b2c3      	uxtb	r3, r0
9002905e:	b2ba      	uxth	r2, r7
90029060:	fa1f fc8c 	uxth.w	ip, ip
90029064:	fb02 f00c 	mul.w	r0, r2, ip
90029068:	0112      	lsls	r2, r2, #4
9002906a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
9002906e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90029072:	1a12      	subs	r2, r2, r0
90029074:	fa1f fc8c 	uxth.w	ip, ip
90029078:	b292      	uxth	r2, r2
9002907a:	eba7 070c 	sub.w	r7, r7, ip
9002907e:	4362      	muls	r2, r4
90029080:	b2bf      	uxth	r7, r7
90029082:	fb06 2207 	mla	r2, r6, r7, r2
90029086:	fb0c 2505 	mla	r5, ip, r5, r2
9002908a:	fb00 5303 	mla	r3, r0, r3, r5
9002908e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90029092:	b1b3      	cbz	r3, 900290c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90029094:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
90029098:	435a      	muls	r2, r3
9002909a:	1c53      	adds	r3, r2, #1
9002909c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900290a0:	4a2d      	ldr	r2, [pc, #180]	@ (90029158 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
900290a2:	121b      	asrs	r3, r3, #8
900290a4:	6812      	ldr	r2, [r2, #0]
900290a6:	2bff      	cmp	r3, #255	@ 0xff
900290a8:	ea4f 2612 	mov.w	r6, r2, lsr #8
900290ac:	d120      	bne.n	900290f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
900290ae:	0950      	lsrs	r0, r2, #5
900290b0:	4b2a      	ldr	r3, [pc, #168]	@ (9002915c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
900290b2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900290b6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900290ba:	4033      	ands	r3, r6
900290bc:	4318      	orrs	r0, r3
900290be:	4302      	orrs	r2, r0
900290c0:	800a      	strh	r2, [r1, #0]
900290c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900290c6:	2600      	movs	r6, #0
900290c8:	e788      	b.n	90028fdc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
900290ca:	2400      	movs	r4, #0
900290cc:	4626      	mov	r6, r4
900290ce:	e799      	b.n	90029004 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900290d0:	2400      	movs	r4, #0
900290d2:	e797      	b.n	90029004 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900290d4:	463c      	mov	r4, r7
900290d6:	e795      	b.n	90029004 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900290d8:	2500      	movs	r5, #0
900290da:	e7ac      	b.n	90029036 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
900290dc:	2300      	movs	r3, #0
900290de:	461d      	mov	r5, r3
900290e0:	e7bd      	b.n	9002905e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900290e2:	4663      	mov	r3, ip
900290e4:	4665      	mov	r5, ip
900290e6:	e7ba      	b.n	9002905e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900290e8:	2300      	movs	r3, #0
900290ea:	e7b8      	b.n	9002905e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900290ec:	463b      	mov	r3, r7
900290ee:	e7b6      	b.n	9002905e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900290f0:	880d      	ldrh	r5, [r1, #0]
900290f2:	b29f      	uxth	r7, r3
900290f4:	f3c2 4007 	ubfx	r0, r2, #16, #8
900290f8:	43db      	mvns	r3, r3
900290fa:	122c      	asrs	r4, r5, #8
900290fc:	fb10 f007 	smulbb	r0, r0, r7
90029100:	b2db      	uxtb	r3, r3
90029102:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90029106:	b2f6      	uxtb	r6, r6
90029108:	b2d2      	uxtb	r2, r2
9002910a:	fb04 0403 	mla	r4, r4, r3, r0
9002910e:	10e8      	asrs	r0, r5, #3
90029110:	fb12 f207 	smulbb	r2, r2, r7
90029114:	00ed      	lsls	r5, r5, #3
90029116:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002911a:	b2a4      	uxth	r4, r4
9002911c:	fb16 f607 	smulbb	r6, r6, r7
90029120:	b2ed      	uxtb	r5, r5
90029122:	fb00 6603 	mla	r6, r0, r3, r6
90029126:	fb05 2303 	mla	r3, r5, r3, r2
9002912a:	b2b0      	uxth	r0, r6
9002912c:	b29a      	uxth	r2, r3
9002912e:	1c63      	adds	r3, r4, #1
90029130:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90029134:	1c53      	adds	r3, r2, #1
90029136:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002913a:	1c42      	adds	r2, r0, #1
9002913c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90029140:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90029144:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90029148:	0940      	lsrs	r0, r0, #5
9002914a:	4323      	orrs	r3, r4
9002914c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90029150:	4303      	orrs	r3, r0
90029152:	800b      	strh	r3, [r1, #0]
90029154:	e7b5      	b.n	900290c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90029156:	bf00      	nop
90029158:	24027eac 	.word	0x24027eac
9002915c:	00fff800 	.word	0x00fff800

90029160 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90029160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029164:	b097      	sub	sp, #92	@ 0x5c
90029166:	9214      	str	r2, [sp, #80]	@ 0x50
90029168:	9309      	str	r3, [sp, #36]	@ 0x24
9002916a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
9002916c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90029170:	9015      	str	r0, [sp, #84]	@ 0x54
90029172:	910d      	str	r1, [sp, #52]	@ 0x34
90029174:	6850      	ldr	r0, [r2, #4]
90029176:	930f      	str	r3, [sp, #60]	@ 0x3c
90029178:	6812      	ldr	r2, [r2, #0]
9002917a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
9002917e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
90029182:	fb00 1303 	mla	r3, r0, r3, r1
90029186:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002918a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002918c:	689b      	ldr	r3, [r3, #8]
9002918e:	3301      	adds	r3, #1
90029190:	f023 0301 	bic.w	r3, r3, #1
90029194:	930a      	str	r3, [sp, #40]	@ 0x28
90029196:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90029198:	681f      	ldr	r7, [r3, #0]
9002919a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002919c:	2b00      	cmp	r3, #0
9002919e:	dc03      	bgt.n	900291a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900291a0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
900291a2:	2b00      	cmp	r3, #0
900291a4:	f340 8289 	ble.w	900296ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
900291a8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900291aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900291ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900291b2:	1e48      	subs	r0, r1, #1
900291b4:	f102 3cff 	add.w	ip, r2, #4294967295
900291b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900291ba:	2b00      	cmp	r3, #0
900291bc:	f340 80c5 	ble.w	9002934a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
900291c0:	ea5f 4e24 	movs.w	lr, r4, asr #16
900291c4:	ea4f 4326 	mov.w	r3, r6, asr #16
900291c8:	d406      	bmi.n	900291d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900291ca:	4586      	cmp	lr, r0
900291cc:	da04      	bge.n	900291d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900291ce:	2b00      	cmp	r3, #0
900291d0:	db02      	blt.n	900291d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900291d2:	4563      	cmp	r3, ip
900291d4:	f2c0 80ba 	blt.w	9002934c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
900291d8:	f11e 0e01 	adds.w	lr, lr, #1
900291dc:	f100 80ab 	bmi.w	90029336 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900291e0:	4571      	cmp	r1, lr
900291e2:	f2c0 80a8 	blt.w	90029336 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900291e6:	3301      	adds	r3, #1
900291e8:	f100 80a5 	bmi.w	90029336 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900291ec:	429a      	cmp	r2, r3
900291ee:	f2c0 80a2 	blt.w	90029336 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900291f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900291f4:	46c8      	mov	r8, r9
900291f6:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
900291fa:	930e      	str	r3, [sp, #56]	@ 0x38
900291fc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900291fe:	2b00      	cmp	r3, #0
90029200:	f340 80c4 	ble.w	9002938c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90029204:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90029206:	1430      	asrs	r0, r6, #16
90029208:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002920c:	f3c6 3103 	ubfx	r1, r6, #12, #4
90029210:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90029214:	1423      	asrs	r3, r4, #16
90029216:	f100 814f 	bmi.w	900294b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002921a:	f10c 3bff 	add.w	fp, ip, #4294967295
9002921e:	455b      	cmp	r3, fp
90029220:	f280 814a 	bge.w	900294b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90029224:	2800      	cmp	r0, #0
90029226:	f2c0 8147 	blt.w	900294b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002922a:	f10e 3bff 	add.w	fp, lr, #4294967295
9002922e:	4558      	cmp	r0, fp
90029230:	f280 8142 	bge.w	900294b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90029234:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90029236:	fb00 3305 	mla	r3, r0, r5, r3
9002923a:	0858      	lsrs	r0, r3, #1
9002923c:	07dd      	lsls	r5, r3, #31
9002923e:	f817 c000 	ldrb.w	ip, [r7, r0]
90029242:	bf54      	ite	pl
90029244:	f00c 0c0f 	andpl.w	ip, ip, #15
90029248:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002924c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029250:	fa5f fc8c 	uxtb.w	ip, ip
90029254:	2a00      	cmp	r2, #0
90029256:	f000 80dd 	beq.w	90029414 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
9002925a:	1c58      	adds	r0, r3, #1
9002925c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90029260:	07c0      	lsls	r0, r0, #31
90029262:	f817 e00e 	ldrb.w	lr, [r7, lr]
90029266:	bf54      	ite	pl
90029268:	f00e 0e0f 	andpl.w	lr, lr, #15
9002926c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90029270:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90029274:	fa5f f08e 	uxtb.w	r0, lr
90029278:	9010      	str	r0, [sp, #64]	@ 0x40
9002927a:	b1d9      	cbz	r1, 900292b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002927c:	4453      	add	r3, sl
9002927e:	0858      	lsrs	r0, r3, #1
90029280:	07dd      	lsls	r5, r3, #31
90029282:	f103 0301 	add.w	r3, r3, #1
90029286:	5c38      	ldrb	r0, [r7, r0]
90029288:	bf54      	ite	pl
9002928a:	f000 000f 	andpl.w	r0, r0, #15
9002928e:	1100      	asrmi	r0, r0, #4
90029290:	07dd      	lsls	r5, r3, #31
90029292:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90029296:	b2c0      	uxtb	r0, r0
90029298:	900b      	str	r0, [sp, #44]	@ 0x2c
9002929a:	ea4f 0053 	mov.w	r0, r3, lsr #1
9002929e:	f817 e000 	ldrb.w	lr, [r7, r0]
900292a2:	bf54      	ite	pl
900292a4:	f00e 030f 	andpl.w	r3, lr, #15
900292a8:	ea4f 132e 	movmi.w	r3, lr, asr #4
900292ac:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900292b0:	b2db      	uxtb	r3, r3
900292b2:	9311      	str	r3, [sp, #68]	@ 0x44
900292b4:	b292      	uxth	r2, r2
900292b6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900292b8:	b289      	uxth	r1, r1
900292ba:	fb02 f301 	mul.w	r3, r2, r1
900292be:	0112      	lsls	r2, r2, #4
900292c0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900292c4:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
900292c8:	1ad2      	subs	r2, r2, r3
900292ca:	b289      	uxth	r1, r1
900292cc:	b292      	uxth	r2, r2
900292ce:	1a40      	subs	r0, r0, r1
900292d0:	436a      	muls	r2, r5
900292d2:	b280      	uxth	r0, r0
900292d4:	fb0c 2c00 	mla	ip, ip, r0, r2
900292d8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900292da:	fb01 c102 	mla	r1, r1, r2, ip
900292de:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900292e0:	fb03 1302 	mla	r3, r3, r2, r1
900292e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900292e8:	b1db      	cbz	r3, 90029322 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900292ea:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900292ec:	4353      	muls	r3, r2
900292ee:	1c5a      	adds	r2, r3, #1
900292f0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900292f4:	4ac6      	ldr	r2, [pc, #792]	@ (90029610 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900292f6:	121b      	asrs	r3, r3, #8
900292f8:	6812      	ldr	r2, [r2, #0]
900292fa:	2bff      	cmp	r3, #255	@ 0xff
900292fc:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90029300:	f040 8099 	bne.w	90029436 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90029304:	0953      	lsrs	r3, r2, #5
90029306:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
9002930a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002930e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90029312:	f02c 0c07 	bic.w	ip, ip, #7
90029316:	ea43 0c0c 	orr.w	ip, r3, ip
9002931a:	ea4c 0202 	orr.w	r2, ip, r2
9002931e:	f8a8 2000 	strh.w	r2, [r8]
90029322:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90029324:	f108 0802 	add.w	r8, r8, #2
90029328:	441c      	add	r4, r3
9002932a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002932c:	441e      	add	r6, r3
9002932e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90029330:	3b01      	subs	r3, #1
90029332:	930e      	str	r3, [sp, #56]	@ 0x38
90029334:	e762      	b.n	900291fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90029336:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90029338:	f109 0902 	add.w	r9, r9, #2
9002933c:	441c      	add	r4, r3
9002933e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029340:	441e      	add	r6, r3
90029342:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029344:	3b01      	subs	r3, #1
90029346:	9309      	str	r3, [sp, #36]	@ 0x24
90029348:	e736      	b.n	900291b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9002934a:	d024      	beq.n	90029396 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9002934c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002934e:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90029350:	3b01      	subs	r3, #1
90029352:	fb00 4003 	mla	r0, r0, r3, r4
90029356:	1400      	asrs	r0, r0, #16
90029358:	f53f af4b 	bmi.w	900291f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002935c:	3901      	subs	r1, #1
9002935e:	4288      	cmp	r0, r1
90029360:	f6bf af47 	bge.w	900291f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90029364:	9924      	ldr	r1, [sp, #144]	@ 0x90
90029366:	fb01 6303 	mla	r3, r1, r3, r6
9002936a:	141b      	asrs	r3, r3, #16
9002936c:	f53f af41 	bmi.w	900291f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90029370:	3a01      	subs	r2, #1
90029372:	4293      	cmp	r3, r2
90029374:	f6bf af3d 	bge.w	900291f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90029378:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9002937c:	46c8      	mov	r8, r9
9002937e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90029382:	930e      	str	r3, [sp, #56]	@ 0x38
90029384:	f1bb 0f00 	cmp.w	fp, #0
90029388:	f300 80b7 	bgt.w	900294fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
9002938c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002938e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90029392:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90029396:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90029398:	2b00      	cmp	r3, #0
9002939a:	f340 818e 	ble.w	900296ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
9002939e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900293a2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900293a4:	ee30 0a04 	vadd.f32	s0, s0, s8
900293a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
900293ac:	eef0 6a62 	vmov.f32	s13, s5
900293b0:	eec7 7a00 	vdiv.f32	s15, s14, s0
900293b4:	ee31 1a05 	vadd.f32	s2, s2, s10
900293b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900293bc:	ee16 4a90 	vmov	r4, s13
900293c0:	eef0 6a43 	vmov.f32	s13, s6
900293c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900293c8:	ee16 6a90 	vmov	r6, s13
900293cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
900293d0:	ee61 7a27 	vmul.f32	s15, s2, s15
900293d4:	ee77 2a62 	vsub.f32	s5, s14, s5
900293d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
900293dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900293e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900293e4:	ee12 2a90 	vmov	r2, s5
900293e8:	eef0 2a47 	vmov.f32	s5, s14
900293ec:	fb92 f3f3 	sdiv	r3, r2, r3
900293f0:	ee13 2a10 	vmov	r2, s6
900293f4:	9323      	str	r3, [sp, #140]	@ 0x8c
900293f6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900293f8:	eeb0 3a67 	vmov.f32	s6, s15
900293fc:	fb92 f3f3 	sdiv	r3, r2, r3
90029400:	9324      	str	r3, [sp, #144]	@ 0x90
90029402:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90029404:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90029406:	3b01      	subs	r3, #1
90029408:	930d      	str	r3, [sp, #52]	@ 0x34
9002940a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002940c:	bf08      	it	eq
9002940e:	4613      	moveq	r3, r2
90029410:	9309      	str	r3, [sp, #36]	@ 0x24
90029412:	e6c2      	b.n	9002919a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90029414:	2900      	cmp	r1, #0
90029416:	f43f af4d 	beq.w	900292b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002941a:	eb0a 0003 	add.w	r0, sl, r3
9002941e:	0843      	lsrs	r3, r0, #1
90029420:	07c0      	lsls	r0, r0, #31
90029422:	5cfb      	ldrb	r3, [r7, r3]
90029424:	bf54      	ite	pl
90029426:	f003 030f 	andpl.w	r3, r3, #15
9002942a:	111b      	asrmi	r3, r3, #4
9002942c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90029430:	b2db      	uxtb	r3, r3
90029432:	930b      	str	r3, [sp, #44]	@ 0x2c
90029434:	e73e      	b.n	900292b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90029436:	f8b8 e000 	ldrh.w	lr, [r8]
9002943a:	fa1f fb83 	uxth.w	fp, r3
9002943e:	f3c2 4107 	ubfx	r1, r2, #16, #8
90029442:	43db      	mvns	r3, r3
90029444:	ea4f 202e 	mov.w	r0, lr, asr #8
90029448:	fb11 f10b 	smulbb	r1, r1, fp
9002944c:	b2db      	uxtb	r3, r3
9002944e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90029452:	fa5f fc8c 	uxtb.w	ip, ip
90029456:	b2d2      	uxtb	r2, r2
90029458:	fb00 1003 	mla	r0, r0, r3, r1
9002945c:	ea4f 01ee 	mov.w	r1, lr, asr #3
90029460:	fb1c fc0b 	smulbb	ip, ip, fp
90029464:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90029468:	b280      	uxth	r0, r0
9002946a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002946e:	fb12 fb0b 	smulbb	fp, r2, fp
90029472:	fa5f fe8e 	uxtb.w	lr, lr
90029476:	fb01 cc03 	mla	ip, r1, r3, ip
9002947a:	fb0e bb03 	mla	fp, lr, r3, fp
9002947e:	1c43      	adds	r3, r0, #1
90029480:	fa1f fc8c 	uxth.w	ip, ip
90029484:	fa1f fb8b 	uxth.w	fp, fp
90029488:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9002948c:	f10c 0101 	add.w	r1, ip, #1
90029490:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
90029494:	f10b 0001 	add.w	r0, fp, #1
90029498:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002949c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
900294a0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900294a4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900294a8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900294ac:	4318      	orrs	r0, r3
900294ae:	ea40 000c 	orr.w	r0, r0, ip
900294b2:	f8a8 0000 	strh.w	r0, [r8]
900294b6:	e734      	b.n	90029322 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900294b8:	f113 0b01 	adds.w	fp, r3, #1
900294bc:	f53f af31 	bmi.w	90029322 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900294c0:	45dc      	cmp	ip, fp
900294c2:	f6ff af2e 	blt.w	90029322 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900294c6:	f110 0b01 	adds.w	fp, r0, #1
900294ca:	f53f af2a 	bmi.w	90029322 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900294ce:	45de      	cmp	lr, fp
900294d0:	f6ff af27 	blt.w	90029322 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900294d4:	9302      	str	r3, [sp, #8]
900294d6:	fa0f f38e 	sxth.w	r3, lr
900294da:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900294dc:	9301      	str	r3, [sp, #4]
900294de:	fa0f f38c 	sxth.w	r3, ip
900294e2:	e9cd 0203 	strd	r0, r2, [sp, #12]
900294e6:	e9cd 1505 	strd	r1, r5, [sp, #20]
900294ea:	9300      	str	r3, [sp, #0]
900294ec:	463a      	mov	r2, r7
900294ee:	4653      	mov	r3, sl
900294f0:	4641      	mov	r1, r8
900294f2:	9815      	ldr	r0, [sp, #84]	@ 0x54
900294f4:	f7ff fd4c 	bl	90028f90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
900294f8:	e713      	b.n	90029322 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900294fa:	1422      	asrs	r2, r4, #16
900294fc:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
900294fe:	1433      	asrs	r3, r6, #16
90029500:	f3c4 3103 	ubfx	r1, r4, #12, #4
90029504:	f3c6 3003 	ubfx	r0, r6, #12, #4
90029508:	fb05 2303 	mla	r3, r5, r3, r2
9002950c:	085a      	lsrs	r2, r3, #1
9002950e:	07dd      	lsls	r5, r3, #31
90029510:	5cba      	ldrb	r2, [r7, r2]
90029512:	bf54      	ite	pl
90029514:	f002 020f 	andpl.w	r2, r2, #15
90029518:	1112      	asrmi	r2, r2, #4
9002951a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9002951e:	b2d2      	uxtb	r2, r2
90029520:	2900      	cmp	r1, #0
90029522:	d077      	beq.n	90029614 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90029524:	f103 0e01 	add.w	lr, r3, #1
90029528:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
9002952c:	f01e 0f01 	tst.w	lr, #1
90029530:	f817 c00c 	ldrb.w	ip, [r7, ip]
90029534:	bf0c      	ite	eq
90029536:	f00c 0c0f 	andeq.w	ip, ip, #15
9002953a:	ea4f 1c2c 	movne.w	ip, ip, asr #4
9002953e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029542:	fa5f f58c 	uxtb.w	r5, ip
90029546:	9512      	str	r5, [sp, #72]	@ 0x48
90029548:	b308      	cbz	r0, 9002958e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002954a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002954c:	442b      	add	r3, r5
9002954e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90029552:	07dd      	lsls	r5, r3, #31
90029554:	f103 0301 	add.w	r3, r3, #1
90029558:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002955c:	bf54      	ite	pl
9002955e:	f00c 0c0f 	andpl.w	ip, ip, #15
90029562:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90029566:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002956a:	fa5f f58c 	uxtb.w	r5, ip
9002956e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90029572:	950c      	str	r5, [sp, #48]	@ 0x30
90029574:	07dd      	lsls	r5, r3, #31
90029576:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002957a:	bf54      	ite	pl
9002957c:	f00c 0c0f 	andpl.w	ip, ip, #15
90029580:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90029584:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029588:	fa5f f38c 	uxtb.w	r3, ip
9002958c:	9313      	str	r3, [sp, #76]	@ 0x4c
9002958e:	b289      	uxth	r1, r1
90029590:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90029592:	b280      	uxth	r0, r0
90029594:	fb01 f300 	mul.w	r3, r1, r0
90029598:	0109      	lsls	r1, r1, #4
9002959a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
9002959e:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
900295a2:	1ac9      	subs	r1, r1, r3
900295a4:	b280      	uxth	r0, r0
900295a6:	b289      	uxth	r1, r1
900295a8:	ebac 0c00 	sub.w	ip, ip, r0
900295ac:	4369      	muls	r1, r5
900295ae:	fa1f fc8c 	uxth.w	ip, ip
900295b2:	fb02 120c 	mla	r2, r2, ip, r1
900295b6:	990c      	ldr	r1, [sp, #48]	@ 0x30
900295b8:	fb00 2001 	mla	r0, r0, r1, r2
900295bc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900295be:	fb03 0302 	mla	r3, r3, r2, r0
900295c2:	f3c3 2307 	ubfx	r3, r3, #8, #8
900295c6:	b1d3      	cbz	r3, 900295fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900295c8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900295ca:	4353      	muls	r3, r2
900295cc:	1c5a      	adds	r2, r3, #1
900295ce:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900295d2:	4a0f      	ldr	r2, [pc, #60]	@ (90029610 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900295d4:	121b      	asrs	r3, r3, #8
900295d6:	6812      	ldr	r2, [r2, #0]
900295d8:	2bff      	cmp	r3, #255	@ 0xff
900295da:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900295de:	d12d      	bne.n	9002963c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
900295e0:	0953      	lsrs	r3, r2, #5
900295e2:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
900295e6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900295ea:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900295ee:	f02c 0c07 	bic.w	ip, ip, #7
900295f2:	ea43 0c0c 	orr.w	ip, r3, ip
900295f6:	ea4c 0202 	orr.w	r2, ip, r2
900295fa:	f8a8 2000 	strh.w	r2, [r8]
900295fe:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90029600:	f108 0802 	add.w	r8, r8, #2
90029604:	f10b 3bff 	add.w	fp, fp, #4294967295
90029608:	441c      	add	r4, r3
9002960a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002960c:	441e      	add	r6, r3
9002960e:	e6b9      	b.n	90029384 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90029610:	24027eac 	.word	0x24027eac
90029614:	2800      	cmp	r0, #0
90029616:	d0ba      	beq.n	9002958e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90029618:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002961a:	442b      	add	r3, r5
9002961c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90029620:	07db      	lsls	r3, r3, #31
90029622:	f817 c00c 	ldrb.w	ip, [r7, ip]
90029626:	bf54      	ite	pl
90029628:	f00c 0c0f 	andpl.w	ip, ip, #15
9002962c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90029630:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029634:	fa5f f38c 	uxtb.w	r3, ip
90029638:	930c      	str	r3, [sp, #48]	@ 0x30
9002963a:	e7a8      	b.n	9002958e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002963c:	f8b8 e000 	ldrh.w	lr, [r8]
90029640:	fa1f fa83 	uxth.w	sl, r3
90029644:	f3c2 4107 	ubfx	r1, r2, #16, #8
90029648:	43db      	mvns	r3, r3
9002964a:	ea4f 202e 	mov.w	r0, lr, asr #8
9002964e:	fb11 f10a 	smulbb	r1, r1, sl
90029652:	b2db      	uxtb	r3, r3
90029654:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90029658:	b2d2      	uxtb	r2, r2
9002965a:	fa5f fc8c 	uxtb.w	ip, ip
9002965e:	fb00 1003 	mla	r0, r0, r3, r1
90029662:	ea4f 01ee 	mov.w	r1, lr, asr #3
90029666:	fb12 f20a 	smulbb	r2, r2, sl
9002966a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002966e:	b280      	uxth	r0, r0
90029670:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90029674:	fb1c fc0a 	smulbb	ip, ip, sl
90029678:	fa5f fe8e 	uxtb.w	lr, lr
9002967c:	fb0e 2203 	mla	r2, lr, r3, r2
90029680:	fb01 cc03 	mla	ip, r1, r3, ip
90029684:	1c43      	adds	r3, r0, #1
90029686:	b292      	uxth	r2, r2
90029688:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9002968c:	1c51      	adds	r1, r2, #1
9002968e:	fa1f fc8c 	uxth.w	ip, ip
90029692:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90029696:	eb01 2112 	add.w	r1, r1, r2, lsr #8
9002969a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002969e:	4308      	orrs	r0, r1
900296a0:	f10c 0101 	add.w	r1, ip, #1
900296a4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900296a8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900296ac:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900296b0:	ea40 000c 	orr.w	r0, r0, ip
900296b4:	f8a8 0000 	strh.w	r0, [r8]
900296b8:	e7a1      	b.n	900295fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900296ba:	b017      	add	sp, #92	@ 0x5c
900296bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900296c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
900296c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900296c4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
900296c8:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900296cc:	2d00      	cmp	r5, #0
900296ce:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
900296d2:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
900296d6:	fb05 0e03 	mla	lr, r5, r3, r0
900296da:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
900296de:	f2c0 80b0 	blt.w	90029842 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900296e2:	45a9      	cmp	r9, r5
900296e4:	f340 80ad 	ble.w	90029842 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900296e8:	2800      	cmp	r0, #0
900296ea:	f2c0 80a8 	blt.w	9002983e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900296ee:	4580      	cmp	r8, r0
900296f0:	f340 80a5 	ble.w	9002983e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900296f4:	ea4f 045e 	mov.w	r4, lr, lsr #1
900296f8:	f01e 0f01 	tst.w	lr, #1
900296fc:	5d16      	ldrb	r6, [r2, r4]
900296fe:	bf0c      	ite	eq
90029700:	f006 060f 	andeq.w	r6, r6, #15
90029704:	1136      	asrne	r6, r6, #4
90029706:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002970a:	b2f6      	uxtb	r6, r6
9002970c:	1c44      	adds	r4, r0, #1
9002970e:	f100 809b 	bmi.w	90029848 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90029712:	45a0      	cmp	r8, r4
90029714:	f340 8098 	ble.w	90029848 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90029718:	2f00      	cmp	r7, #0
9002971a:	f000 8097 	beq.w	9002984c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
9002971e:	f10e 0a01 	add.w	sl, lr, #1
90029722:	ea4f 045a 	mov.w	r4, sl, lsr #1
90029726:	f01a 0f01 	tst.w	sl, #1
9002972a:	5d14      	ldrb	r4, [r2, r4]
9002972c:	bf0c      	ite	eq
9002972e:	f004 040f 	andeq.w	r4, r4, #15
90029732:	1124      	asrne	r4, r4, #4
90029734:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90029738:	b2e4      	uxtb	r4, r4
9002973a:	3501      	adds	r5, #1
9002973c:	f100 808a 	bmi.w	90029854 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90029740:	45a9      	cmp	r9, r5
90029742:	f340 8087 	ble.w	90029854 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90029746:	f1bc 0f00 	cmp.w	ip, #0
9002974a:	f000 8086 	beq.w	9002985a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
9002974e:	2800      	cmp	r0, #0
90029750:	db7e      	blt.n	90029850 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90029752:	4580      	cmp	r8, r0
90029754:	dd7c      	ble.n	90029850 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90029756:	eb03 090e 	add.w	r9, r3, lr
9002975a:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002975e:	f019 0f01 	tst.w	r9, #1
90029762:	5d55      	ldrb	r5, [r2, r5]
90029764:	bf0c      	ite	eq
90029766:	f005 050f 	andeq.w	r5, r5, #15
9002976a:	112d      	asrne	r5, r5, #4
9002976c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90029770:	b2ed      	uxtb	r5, r5
90029772:	3001      	adds	r0, #1
90029774:	d474      	bmi.n	90029860 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90029776:	4580      	cmp	r8, r0
90029778:	dd72      	ble.n	90029860 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
9002977a:	2f00      	cmp	r7, #0
9002977c:	d072      	beq.n	90029864 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
9002977e:	3301      	adds	r3, #1
90029780:	449e      	add	lr, r3
90029782:	ea4f 035e 	mov.w	r3, lr, lsr #1
90029786:	f01e 0f01 	tst.w	lr, #1
9002978a:	5cd0      	ldrb	r0, [r2, r3]
9002978c:	bf0c      	ite	eq
9002978e:	f000 000f 	andeq.w	r0, r0, #15
90029792:	1100      	asrne	r0, r0, #4
90029794:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90029798:	b2c3      	uxtb	r3, r0
9002979a:	b2ba      	uxth	r2, r7
9002979c:	fa1f fc8c 	uxth.w	ip, ip
900297a0:	fb02 f00c 	mul.w	r0, r2, ip
900297a4:	0112      	lsls	r2, r2, #4
900297a6:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900297aa:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
900297ae:	1a12      	subs	r2, r2, r0
900297b0:	fa1f fc8c 	uxth.w	ip, ip
900297b4:	b292      	uxth	r2, r2
900297b6:	eba7 070c 	sub.w	r7, r7, ip
900297ba:	4362      	muls	r2, r4
900297bc:	b2bf      	uxth	r7, r7
900297be:	fb06 2207 	mla	r2, r6, r7, r2
900297c2:	fb0c 2505 	mla	r5, ip, r5, r2
900297c6:	fb00 5303 	mla	r3, r0, r3, r5
900297ca:	f3c3 2307 	ubfx	r3, r3, #8, #8
900297ce:	b3a3      	cbz	r3, 9002983a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
900297d0:	4a25      	ldr	r2, [pc, #148]	@ (90029868 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
900297d2:	880e      	ldrh	r6, [r1, #0]
900297d4:	6815      	ldr	r5, [r2, #0]
900297d6:	b29a      	uxth	r2, r3
900297d8:	1234      	asrs	r4, r6, #8
900297da:	43db      	mvns	r3, r3
900297dc:	f3c5 4007 	ubfx	r0, r5, #16, #8
900297e0:	f3c5 2707 	ubfx	r7, r5, #8, #8
900297e4:	b2db      	uxtb	r3, r3
900297e6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900297ea:	fb10 f002 	smulbb	r0, r0, r2
900297ee:	b2ed      	uxtb	r5, r5
900297f0:	fb17 f702 	smulbb	r7, r7, r2
900297f4:	fb04 0403 	mla	r4, r4, r3, r0
900297f8:	10f0      	asrs	r0, r6, #3
900297fa:	fb15 f202 	smulbb	r2, r5, r2
900297fe:	00f6      	lsls	r6, r6, #3
90029800:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90029804:	b2a4      	uxth	r4, r4
90029806:	b2f6      	uxtb	r6, r6
90029808:	fb00 7003 	mla	r0, r0, r3, r7
9002980c:	fb06 2303 	mla	r3, r6, r3, r2
90029810:	b280      	uxth	r0, r0
90029812:	b29a      	uxth	r2, r3
90029814:	1c63      	adds	r3, r4, #1
90029816:	eb03 2414 	add.w	r4, r3, r4, lsr #8
9002981a:	1c53      	adds	r3, r2, #1
9002981c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90029820:	1c42      	adds	r2, r0, #1
90029822:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90029826:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002982a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002982e:	0940      	lsrs	r0, r0, #5
90029830:	4323      	orrs	r3, r4
90029832:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90029836:	4303      	orrs	r3, r0
90029838:	800b      	strh	r3, [r1, #0]
9002983a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002983e:	2600      	movs	r6, #0
90029840:	e764      	b.n	9002970c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90029842:	2400      	movs	r4, #0
90029844:	4626      	mov	r6, r4
90029846:	e778      	b.n	9002973a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90029848:	2400      	movs	r4, #0
9002984a:	e776      	b.n	9002973a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
9002984c:	463c      	mov	r4, r7
9002984e:	e774      	b.n	9002973a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90029850:	2500      	movs	r5, #0
90029852:	e78e      	b.n	90029772 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90029854:	2300      	movs	r3, #0
90029856:	461d      	mov	r5, r3
90029858:	e79f      	b.n	9002979a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002985a:	4663      	mov	r3, ip
9002985c:	4665      	mov	r5, ip
9002985e:	e79c      	b.n	9002979a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90029860:	2300      	movs	r3, #0
90029862:	e79a      	b.n	9002979a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90029864:	463b      	mov	r3, r7
90029866:	e798      	b.n	9002979a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90029868:	24027eac 	.word	0x24027eac

9002986c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002986c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029870:	b093      	sub	sp, #76	@ 0x4c
90029872:	461d      	mov	r5, r3
90029874:	920c      	str	r2, [sp, #48]	@ 0x30
90029876:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90029878:	9011      	str	r0, [sp, #68]	@ 0x44
9002987a:	9107      	str	r1, [sp, #28]
9002987c:	6850      	ldr	r0, [r2, #4]
9002987e:	6812      	ldr	r2, [r2, #0]
90029880:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90029884:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90029888:	fb00 1303 	mla	r3, r0, r3, r1
9002988c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90029890:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029892:	689b      	ldr	r3, [r3, #8]
90029894:	3301      	adds	r3, #1
90029896:	f023 0301 	bic.w	r3, r3, #1
9002989a:	9306      	str	r3, [sp, #24]
9002989c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002989e:	681f      	ldr	r7, [r3, #0]
900298a0:	9b07      	ldr	r3, [sp, #28]
900298a2:	2b00      	cmp	r3, #0
900298a4:	dc03      	bgt.n	900298ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
900298a6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900298a8:	2b00      	cmp	r3, #0
900298aa:	f340 8267 	ble.w	90029d7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
900298ae:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900298b0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900298b4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900298b8:	1e48      	subs	r0, r1, #1
900298ba:	f102 3cff 	add.w	ip, r2, #4294967295
900298be:	2d00      	cmp	r5, #0
900298c0:	f340 80b7 	ble.w	90029a32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900298c4:	ea5f 4e24 	movs.w	lr, r4, asr #16
900298c8:	ea4f 4326 	mov.w	r3, r6, asr #16
900298cc:	d406      	bmi.n	900298dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900298ce:	4586      	cmp	lr, r0
900298d0:	da04      	bge.n	900298dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900298d2:	2b00      	cmp	r3, #0
900298d4:	db02      	blt.n	900298dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900298d6:	4563      	cmp	r3, ip
900298d8:	f2c0 80ac 	blt.w	90029a34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
900298dc:	f11e 0e01 	adds.w	lr, lr, #1
900298e0:	f100 809f 	bmi.w	90029a22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900298e4:	4571      	cmp	r1, lr
900298e6:	f2c0 809c 	blt.w	90029a22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900298ea:	3301      	adds	r3, #1
900298ec:	f100 8099 	bmi.w	90029a22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900298f0:	429a      	cmp	r2, r3
900298f2:	f2c0 8096 	blt.w	90029a22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900298f6:	46c8      	mov	r8, r9
900298f8:	f9bd a018 	ldrsh.w	sl, [sp, #24]
900298fc:	9509      	str	r5, [sp, #36]	@ 0x24
900298fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029900:	2b00      	cmp	r3, #0
90029902:	f340 80b5 	ble.w	90029a70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90029906:	f3c4 3303 	ubfx	r3, r4, #12, #4
9002990a:	1430      	asrs	r0, r6, #16
9002990c:	f3c6 3103 	ubfx	r1, r6, #12, #4
90029910:	9308      	str	r3, [sp, #32]
90029912:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029914:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90029918:	1423      	asrs	r3, r4, #16
9002991a:	f100 813f 	bmi.w	90029b9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002991e:	f10c 3bff 	add.w	fp, ip, #4294967295
90029922:	455b      	cmp	r3, fp
90029924:	f280 813a 	bge.w	90029b9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90029928:	2800      	cmp	r0, #0
9002992a:	f2c0 8137 	blt.w	90029b9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002992e:	f10e 3bff 	add.w	fp, lr, #4294967295
90029932:	4558      	cmp	r0, fp
90029934:	f280 8132 	bge.w	90029b9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90029938:	9a06      	ldr	r2, [sp, #24]
9002993a:	fb00 3302 	mla	r3, r0, r2, r3
9002993e:	0858      	lsrs	r0, r3, #1
90029940:	07da      	lsls	r2, r3, #31
90029942:	9a08      	ldr	r2, [sp, #32]
90029944:	f817 c000 	ldrb.w	ip, [r7, r0]
90029948:	bf54      	ite	pl
9002994a:	f00c 0c0f 	andpl.w	ip, ip, #15
9002994e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90029952:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029956:	fa5f fc8c 	uxtb.w	ip, ip
9002995a:	2a00      	cmp	r2, #0
9002995c:	f000 80cc 	beq.w	90029af8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90029960:	1c58      	adds	r0, r3, #1
90029962:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90029966:	07c0      	lsls	r0, r0, #31
90029968:	f817 e00e 	ldrb.w	lr, [r7, lr]
9002996c:	bf54      	ite	pl
9002996e:	f00e 0e0f 	andpl.w	lr, lr, #15
90029972:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90029976:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
9002997a:	fa5f fe8e 	uxtb.w	lr, lr
9002997e:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
90029982:	b1b9      	cbz	r1, 900299b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90029984:	4453      	add	r3, sl
90029986:	0858      	lsrs	r0, r3, #1
90029988:	07da      	lsls	r2, r3, #31
9002998a:	5c38      	ldrb	r0, [r7, r0]
9002998c:	bf54      	ite	pl
9002998e:	f000 000f 	andpl.w	r0, r0, #15
90029992:	1100      	asrmi	r0, r0, #4
90029994:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90029998:	b2c0      	uxtb	r0, r0
9002999a:	900a      	str	r0, [sp, #40]	@ 0x28
9002999c:	1c58      	adds	r0, r3, #1
9002999e:	0843      	lsrs	r3, r0, #1
900299a0:	07c2      	lsls	r2, r0, #31
900299a2:	5cfb      	ldrb	r3, [r7, r3]
900299a4:	bf54      	ite	pl
900299a6:	f003 030f 	andpl.w	r3, r3, #15
900299aa:	111b      	asrmi	r3, r3, #4
900299ac:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900299b0:	b2db      	uxtb	r3, r3
900299b2:	930e      	str	r3, [sp, #56]	@ 0x38
900299b4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
900299b8:	b289      	uxth	r1, r1
900299ba:	fb02 f301 	mul.w	r3, r2, r1
900299be:	0112      	lsls	r2, r2, #4
900299c0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900299c4:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
900299c8:	1ad2      	subs	r2, r2, r3
900299ca:	b289      	uxth	r1, r1
900299cc:	b292      	uxth	r2, r2
900299ce:	1a40      	subs	r0, r0, r1
900299d0:	fa1f fe80 	uxth.w	lr, r0
900299d4:	980d      	ldr	r0, [sp, #52]	@ 0x34
900299d6:	4342      	muls	r2, r0
900299d8:	fb0c 2c0e 	mla	ip, ip, lr, r2
900299dc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900299de:	fb01 c102 	mla	r1, r1, r2, ip
900299e2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900299e4:	fb03 1302 	mla	r3, r3, r2, r1
900299e8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900299ec:	2bff      	cmp	r3, #255	@ 0xff
900299ee:	f040 8094 	bne.w	90029b1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
900299f2:	4bbf      	ldr	r3, [pc, #764]	@ (90029cf0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900299f4:	681a      	ldr	r2, [r3, #0]
900299f6:	4bbf      	ldr	r3, [pc, #764]	@ (90029cf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
900299f8:	0951      	lsrs	r1, r2, #5
900299fa:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900299fe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90029a02:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90029a06:	430b      	orrs	r3, r1
90029a08:	4313      	orrs	r3, r2
90029a0a:	f8a8 3000 	strh.w	r3, [r8]
90029a0e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90029a10:	f108 0802 	add.w	r8, r8, #2
90029a14:	441c      	add	r4, r3
90029a16:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90029a18:	441e      	add	r6, r3
90029a1a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029a1c:	3b01      	subs	r3, #1
90029a1e:	9309      	str	r3, [sp, #36]	@ 0x24
90029a20:	e76d      	b.n	900298fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90029a22:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90029a24:	3d01      	subs	r5, #1
90029a26:	f109 0902 	add.w	r9, r9, #2
90029a2a:	441c      	add	r4, r3
90029a2c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90029a2e:	441e      	add	r6, r3
90029a30:	e745      	b.n	900298be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90029a32:	d021      	beq.n	90029a78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90029a34:	1e6b      	subs	r3, r5, #1
90029a36:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90029a38:	fb00 4003 	mla	r0, r0, r3, r4
90029a3c:	1400      	asrs	r0, r0, #16
90029a3e:	f53f af5a 	bmi.w	900298f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90029a42:	3901      	subs	r1, #1
90029a44:	4288      	cmp	r0, r1
90029a46:	f6bf af56 	bge.w	900298f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90029a4a:	9920      	ldr	r1, [sp, #128]	@ 0x80
90029a4c:	fb01 6303 	mla	r3, r1, r3, r6
90029a50:	141b      	asrs	r3, r3, #16
90029a52:	f53f af50 	bmi.w	900298f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90029a56:	3a01      	subs	r2, #1
90029a58:	4293      	cmp	r3, r2
90029a5a:	f6bf af4c 	bge.w	900298f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90029a5e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90029a62:	46a8      	mov	r8, r5
90029a64:	46ce      	mov	lr, r9
90029a66:	9308      	str	r3, [sp, #32]
90029a68:	f1b8 0f00 	cmp.w	r8, #0
90029a6c:	f300 80b6 	bgt.w	90029bdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90029a70:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90029a74:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90029a78:	9b07      	ldr	r3, [sp, #28]
90029a7a:	2b00      	cmp	r3, #0
90029a7c:	f340 817e 	ble.w	90029d7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90029a80:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90029a84:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90029a86:	ee30 0a04 	vadd.f32	s0, s0, s8
90029a8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90029a8e:	eef0 6a62 	vmov.f32	s13, s5
90029a92:	eec7 7a00 	vdiv.f32	s15, s14, s0
90029a96:	ee31 1a05 	vadd.f32	s2, s2, s10
90029a9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90029a9e:	ee16 4a90 	vmov	r4, s13
90029aa2:	eef0 6a43 	vmov.f32	s13, s6
90029aa6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90029aaa:	ee16 6a90 	vmov	r6, s13
90029aae:	ee20 7aa7 	vmul.f32	s14, s1, s15
90029ab2:	ee61 7a27 	vmul.f32	s15, s2, s15
90029ab6:	ee77 2a62 	vsub.f32	s5, s14, s5
90029aba:	ee37 3ac3 	vsub.f32	s6, s15, s6
90029abe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90029ac2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90029ac6:	ee12 2a90 	vmov	r2, s5
90029aca:	eef0 2a47 	vmov.f32	s5, s14
90029ace:	fb92 f3f3 	sdiv	r3, r2, r3
90029ad2:	ee13 2a10 	vmov	r2, s6
90029ad6:	931f      	str	r3, [sp, #124]	@ 0x7c
90029ad8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90029ada:	eeb0 3a67 	vmov.f32	s6, s15
90029ade:	fb92 f3f3 	sdiv	r3, r2, r3
90029ae2:	9320      	str	r3, [sp, #128]	@ 0x80
90029ae4:	9b07      	ldr	r3, [sp, #28]
90029ae6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90029ae8:	3b01      	subs	r3, #1
90029aea:	9307      	str	r3, [sp, #28]
90029aec:	bf08      	it	eq
90029aee:	4615      	moveq	r5, r2
90029af0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90029af2:	bf18      	it	ne
90029af4:	461d      	movne	r5, r3
90029af6:	e6d3      	b.n	900298a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90029af8:	2900      	cmp	r1, #0
90029afa:	f43f af5b 	beq.w	900299b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90029afe:	eb0a 0003 	add.w	r0, sl, r3
90029b02:	0843      	lsrs	r3, r0, #1
90029b04:	07c0      	lsls	r0, r0, #31
90029b06:	5cfb      	ldrb	r3, [r7, r3]
90029b08:	bf54      	ite	pl
90029b0a:	f003 030f 	andpl.w	r3, r3, #15
90029b0e:	111b      	asrmi	r3, r3, #4
90029b10:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90029b14:	b2db      	uxtb	r3, r3
90029b16:	930a      	str	r3, [sp, #40]	@ 0x28
90029b18:	e74c      	b.n	900299b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90029b1a:	2b00      	cmp	r3, #0
90029b1c:	f43f af77 	beq.w	90029a0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90029b20:	4a73      	ldr	r2, [pc, #460]	@ (90029cf0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90029b22:	fa1f fe83 	uxth.w	lr, r3
90029b26:	f8b8 c000 	ldrh.w	ip, [r8]
90029b2a:	43db      	mvns	r3, r3
90029b2c:	6810      	ldr	r0, [r2, #0]
90029b2e:	ea4f 212c 	mov.w	r1, ip, asr #8
90029b32:	f3c0 4207 	ubfx	r2, r0, #16, #8
90029b36:	b2db      	uxtb	r3, r3
90029b38:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90029b3c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90029b40:	fb12 f20e 	smulbb	r2, r2, lr
90029b44:	b2c0      	uxtb	r0, r0
90029b46:	fb1b fb0e 	smulbb	fp, fp, lr
90029b4a:	fb01 2103 	mla	r1, r1, r3, r2
90029b4e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90029b52:	fb10 fe0e 	smulbb	lr, r0, lr
90029b56:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90029b5a:	b289      	uxth	r1, r1
90029b5c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90029b60:	fa5f fc8c 	uxtb.w	ip, ip
90029b64:	fb02 b203 	mla	r2, r2, r3, fp
90029b68:	1c48      	adds	r0, r1, #1
90029b6a:	fb0c e303 	mla	r3, ip, r3, lr
90029b6e:	b292      	uxth	r2, r2
90029b70:	b29b      	uxth	r3, r3
90029b72:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90029b76:	f102 0b01 	add.w	fp, r2, #1
90029b7a:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
90029b7e:	1c59      	adds	r1, r3, #1
90029b80:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90029b84:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90029b88:	0952      	lsrs	r2, r2, #5
90029b8a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90029b8e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90029b92:	4301      	orrs	r1, r0
90029b94:	4311      	orrs	r1, r2
90029b96:	f8a8 1000 	strh.w	r1, [r8]
90029b9a:	e738      	b.n	90029a0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90029b9c:	f113 0b01 	adds.w	fp, r3, #1
90029ba0:	f53f af35 	bmi.w	90029a0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90029ba4:	45dc      	cmp	ip, fp
90029ba6:	f6ff af32 	blt.w	90029a0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90029baa:	f110 0b01 	adds.w	fp, r0, #1
90029bae:	f53f af2e 	bmi.w	90029a0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90029bb2:	45de      	cmp	lr, fp
90029bb4:	f6ff af2b 	blt.w	90029a0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90029bb8:	9302      	str	r3, [sp, #8]
90029bba:	fa0f f38e 	sxth.w	r3, lr
90029bbe:	9a08      	ldr	r2, [sp, #32]
90029bc0:	9301      	str	r3, [sp, #4]
90029bc2:	fa0f f38c 	sxth.w	r3, ip
90029bc6:	9105      	str	r1, [sp, #20]
90029bc8:	4641      	mov	r1, r8
90029bca:	9300      	str	r3, [sp, #0]
90029bcc:	4653      	mov	r3, sl
90029bce:	e9cd 0203 	strd	r0, r2, [sp, #12]
90029bd2:	463a      	mov	r2, r7
90029bd4:	9811      	ldr	r0, [sp, #68]	@ 0x44
90029bd6:	f7ff fd73 	bl	900296c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
90029bda:	e718      	b.n	90029a0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90029bdc:	1422      	asrs	r2, r4, #16
90029bde:	9906      	ldr	r1, [sp, #24]
90029be0:	1433      	asrs	r3, r6, #16
90029be2:	f3c4 3003 	ubfx	r0, r4, #12, #4
90029be6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90029bea:	fb01 2303 	mla	r3, r1, r3, r2
90029bee:	085a      	lsrs	r2, r3, #1
90029bf0:	07d9      	lsls	r1, r3, #31
90029bf2:	5cba      	ldrb	r2, [r7, r2]
90029bf4:	bf54      	ite	pl
90029bf6:	f002 020f 	andpl.w	r2, r2, #15
90029bfa:	1112      	asrmi	r2, r2, #4
90029bfc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90029c00:	b2d2      	uxtb	r2, r2
90029c02:	2800      	cmp	r0, #0
90029c04:	d063      	beq.n	90029cce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
90029c06:	f103 0a01 	add.w	sl, r3, #1
90029c0a:	ea4f 015a 	mov.w	r1, sl, lsr #1
90029c0e:	f01a 0f01 	tst.w	sl, #1
90029c12:	5c79      	ldrb	r1, [r7, r1]
90029c14:	bf0c      	ite	eq
90029c16:	f001 010f 	andeq.w	r1, r1, #15
90029c1a:	1109      	asrne	r1, r1, #4
90029c1c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90029c20:	b2c9      	uxtb	r1, r1
90029c22:	910f      	str	r1, [sp, #60]	@ 0x3c
90029c24:	f1bc 0f00 	cmp.w	ip, #0
90029c28:	d01a      	beq.n	90029c60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90029c2a:	9908      	ldr	r1, [sp, #32]
90029c2c:	440b      	add	r3, r1
90029c2e:	0859      	lsrs	r1, r3, #1
90029c30:	f013 0f01 	tst.w	r3, #1
90029c34:	f103 0301 	add.w	r3, r3, #1
90029c38:	5c79      	ldrb	r1, [r7, r1]
90029c3a:	bf0c      	ite	eq
90029c3c:	f001 010f 	andeq.w	r1, r1, #15
90029c40:	1109      	asrne	r1, r1, #4
90029c42:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90029c46:	b2c9      	uxtb	r1, r1
90029c48:	910b      	str	r1, [sp, #44]	@ 0x2c
90029c4a:	0859      	lsrs	r1, r3, #1
90029c4c:	07db      	lsls	r3, r3, #31
90029c4e:	5c79      	ldrb	r1, [r7, r1]
90029c50:	bf54      	ite	pl
90029c52:	f001 010f 	andpl.w	r1, r1, #15
90029c56:	1109      	asrmi	r1, r1, #4
90029c58:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90029c5c:	b2c9      	uxtb	r1, r1
90029c5e:	9110      	str	r1, [sp, #64]	@ 0x40
90029c60:	b280      	uxth	r0, r0
90029c62:	fa1f fc8c 	uxth.w	ip, ip
90029c66:	fb00 f30c 	mul.w	r3, r0, ip
90029c6a:	0100      	lsls	r0, r0, #4
90029c6c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90029c70:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
90029c74:	1ac0      	subs	r0, r0, r3
90029c76:	fa1f fc8c 	uxth.w	ip, ip
90029c7a:	b280      	uxth	r0, r0
90029c7c:	eba1 010c 	sub.w	r1, r1, ip
90029c80:	fa1f fa81 	uxth.w	sl, r1
90029c84:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90029c86:	4348      	muls	r0, r1
90029c88:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90029c8a:	fb02 020a 	mla	r2, r2, sl, r0
90029c8e:	fb0c 2c01 	mla	ip, ip, r1, r2
90029c92:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90029c94:	fb03 c302 	mla	r3, r3, r2, ip
90029c98:	f3c3 2307 	ubfx	r3, r3, #8, #8
90029c9c:	2bff      	cmp	r3, #255	@ 0xff
90029c9e:	d12b      	bne.n	90029cf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90029ca0:	4b13      	ldr	r3, [pc, #76]	@ (90029cf0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90029ca2:	681a      	ldr	r2, [r3, #0]
90029ca4:	4b13      	ldr	r3, [pc, #76]	@ (90029cf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90029ca6:	0951      	lsrs	r1, r2, #5
90029ca8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90029cac:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90029cb0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90029cb4:	430b      	orrs	r3, r1
90029cb6:	4313      	orrs	r3, r2
90029cb8:	f8ae 3000 	strh.w	r3, [lr]
90029cbc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90029cbe:	f10e 0e02 	add.w	lr, lr, #2
90029cc2:	f108 38ff 	add.w	r8, r8, #4294967295
90029cc6:	441c      	add	r4, r3
90029cc8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90029cca:	441e      	add	r6, r3
90029ccc:	e6cc      	b.n	90029a68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90029cce:	f1bc 0f00 	cmp.w	ip, #0
90029cd2:	d0c5      	beq.n	90029c60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90029cd4:	9908      	ldr	r1, [sp, #32]
90029cd6:	440b      	add	r3, r1
90029cd8:	0859      	lsrs	r1, r3, #1
90029cda:	07db      	lsls	r3, r3, #31
90029cdc:	5c79      	ldrb	r1, [r7, r1]
90029cde:	bf54      	ite	pl
90029ce0:	f001 010f 	andpl.w	r1, r1, #15
90029ce4:	1109      	asrmi	r1, r1, #4
90029ce6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90029cea:	b2c9      	uxtb	r1, r1
90029cec:	910b      	str	r1, [sp, #44]	@ 0x2c
90029cee:	e7b7      	b.n	90029c60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90029cf0:	24027eac 	.word	0x24027eac
90029cf4:	fffff800 	.word	0xfffff800
90029cf8:	2b00      	cmp	r3, #0
90029cfa:	d0df      	beq.n	90029cbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90029cfc:	4a21      	ldr	r2, [pc, #132]	@ (90029d84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
90029cfe:	fa1f fa83 	uxth.w	sl, r3
90029d02:	f8be c000 	ldrh.w	ip, [lr]
90029d06:	43db      	mvns	r3, r3
90029d08:	6810      	ldr	r0, [r2, #0]
90029d0a:	ea4f 212c 	mov.w	r1, ip, asr #8
90029d0e:	f3c0 4207 	ubfx	r2, r0, #16, #8
90029d12:	b2db      	uxtb	r3, r3
90029d14:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90029d18:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90029d1c:	fb12 f20a 	smulbb	r2, r2, sl
90029d20:	b2c0      	uxtb	r0, r0
90029d22:	fb1b fb0a 	smulbb	fp, fp, sl
90029d26:	fb01 2103 	mla	r1, r1, r3, r2
90029d2a:	ea4f 02ec 	mov.w	r2, ip, asr #3
90029d2e:	fb10 f00a 	smulbb	r0, r0, sl
90029d32:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90029d36:	b289      	uxth	r1, r1
90029d38:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90029d3c:	fa5f fc8c 	uxtb.w	ip, ip
90029d40:	fb02 b203 	mla	r2, r2, r3, fp
90029d44:	fb0c 0003 	mla	r0, ip, r3, r0
90029d48:	1c4b      	adds	r3, r1, #1
90029d4a:	b292      	uxth	r2, r2
90029d4c:	b280      	uxth	r0, r0
90029d4e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90029d52:	f100 0b01 	add.w	fp, r0, #1
90029d56:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90029d5a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90029d5e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90029d62:	ea4b 0101 	orr.w	r1, fp, r1
90029d66:	f102 0b01 	add.w	fp, r2, #1
90029d6a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90029d6e:	0952      	lsrs	r2, r2, #5
90029d70:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90029d74:	4311      	orrs	r1, r2
90029d76:	f8ae 1000 	strh.w	r1, [lr]
90029d7a:	e79f      	b.n	90029cbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90029d7c:	b013      	add	sp, #76	@ 0x4c
90029d7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029d82:	bf00      	nop
90029d84:	24027eac 	.word	0x24027eac

90029d88 <CRC_Lock>:
90029d88:	4a20      	ldr	r2, [pc, #128]	@ (90029e0c <CRC_Lock+0x84>)
90029d8a:	b530      	push	{r4, r5, lr}
90029d8c:	6813      	ldr	r3, [r2, #0]
90029d8e:	f64f 74f0 	movw	r4, #65520	@ 0xfff0
90029d92:	f24c 2540 	movw	r5, #49728	@ 0xc240
90029d96:	f023 0301 	bic.w	r3, r3, #1
90029d9a:	6013      	str	r3, [r2, #0]
90029d9c:	4b1c      	ldr	r3, [pc, #112]	@ (90029e10 <CRC_Lock+0x88>)
90029d9e:	681a      	ldr	r2, [r3, #0]
90029da0:	4022      	ands	r2, r4
90029da2:	42aa      	cmp	r2, r5
90029da4:	d005      	beq.n	90029db2 <CRC_Lock+0x2a>
90029da6:	681b      	ldr	r3, [r3, #0]
90029da8:	f24c 2270 	movw	r2, #49776	@ 0xc270
90029dac:	4023      	ands	r3, r4
90029dae:	4293      	cmp	r3, r2
90029db0:	d124      	bne.n	90029dfc <CRC_Lock+0x74>
90029db2:	4b18      	ldr	r3, [pc, #96]	@ (90029e14 <CRC_Lock+0x8c>)
90029db4:	681b      	ldr	r3, [r3, #0]
90029db6:	bb0b      	cbnz	r3, 90029dfc <CRC_Lock+0x74>
90029db8:	4b17      	ldr	r3, [pc, #92]	@ (90029e18 <CRC_Lock+0x90>)
90029dba:	681a      	ldr	r2, [r3, #0]
90029dbc:	f3c2 020b 	ubfx	r2, r2, #0, #12
90029dc0:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
90029dc4:	d00d      	beq.n	90029de2 <CRC_Lock+0x5a>
90029dc6:	681a      	ldr	r2, [r3, #0]
90029dc8:	f240 4483 	movw	r4, #1155	@ 0x483
90029dcc:	f3c2 020b 	ubfx	r2, r2, #0, #12
90029dd0:	42a2      	cmp	r2, r4
90029dd2:	d006      	beq.n	90029de2 <CRC_Lock+0x5a>
90029dd4:	681b      	ldr	r3, [r3, #0]
90029dd6:	f240 4285 	movw	r2, #1157	@ 0x485
90029dda:	f3c3 030b 	ubfx	r3, r3, #0, #12
90029dde:	4293      	cmp	r3, r2
90029de0:	d10c      	bne.n	90029dfc <CRC_Lock+0x74>
90029de2:	4b0e      	ldr	r3, [pc, #56]	@ (90029e1c <CRC_Lock+0x94>)
90029de4:	2201      	movs	r2, #1
90029de6:	601a      	str	r2, [r3, #0]
90029de8:	681a      	ldr	r2, [r3, #0]
90029dea:	2a00      	cmp	r2, #0
90029dec:	d1fc      	bne.n	90029de8 <CRC_Lock+0x60>
90029dee:	4b0c      	ldr	r3, [pc, #48]	@ (90029e20 <CRC_Lock+0x98>)
90029df0:	6018      	str	r0, [r3, #0]
90029df2:	6818      	ldr	r0, [r3, #0]
90029df4:	1a43      	subs	r3, r0, r1
90029df6:	4258      	negs	r0, r3
90029df8:	4158      	adcs	r0, r3
90029dfa:	bd30      	pop	{r4, r5, pc}
90029dfc:	4b09      	ldr	r3, [pc, #36]	@ (90029e24 <CRC_Lock+0x9c>)
90029dfe:	2201      	movs	r2, #1
90029e00:	601a      	str	r2, [r3, #0]
90029e02:	681a      	ldr	r2, [r3, #0]
90029e04:	2a00      	cmp	r2, #0
90029e06:	d1fc      	bne.n	90029e02 <CRC_Lock+0x7a>
90029e08:	4b07      	ldr	r3, [pc, #28]	@ (90029e28 <CRC_Lock+0xa0>)
90029e0a:	e7f1      	b.n	90029df0 <CRC_Lock+0x68>
90029e0c:	e0002000 	.word	0xe0002000
90029e10:	e000ed00 	.word	0xe000ed00
90029e14:	e0042000 	.word	0xe0042000
90029e18:	5c001000 	.word	0x5c001000
90029e1c:	58024c08 	.word	0x58024c08
90029e20:	58024c00 	.word	0x58024c00
90029e24:	40023008 	.word	0x40023008
90029e28:	40023000 	.word	0x40023000

90029e2c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90029e2c:	6101      	str	r1, [r0, #16]
90029e2e:	4770      	bx	lr

90029e30 <_ZN8touchgfx8Gestures4tickEv>:
90029e30:	7b83      	ldrb	r3, [r0, #14]
90029e32:	b14b      	cbz	r3, 90029e48 <_ZN8touchgfx8Gestures4tickEv+0x18>
90029e34:	8903      	ldrh	r3, [r0, #8]
90029e36:	3301      	adds	r3, #1
90029e38:	b29b      	uxth	r3, r3
90029e3a:	2b07      	cmp	r3, #7
90029e3c:	8103      	strh	r3, [r0, #8]
90029e3e:	bf81      	itttt	hi
90029e40:	2300      	movhi	r3, #0
90029e42:	8143      	strhhi	r3, [r0, #10]
90029e44:	8183      	strhhi	r3, [r0, #12]
90029e46:	7383      	strbhi	r3, [r0, #14]
90029e48:	4770      	bx	lr
	...

90029e4c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90029e4c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90029e50:	4698      	mov	r8, r3
90029e52:	8883      	ldrh	r3, [r0, #4]
90029e54:	4604      	mov	r4, r0
90029e56:	4617      	mov	r7, r2
90029e58:	f8ad 3006 	strh.w	r3, [sp, #6]
90029e5c:	eba8 0303 	sub.w	r3, r8, r3
90029e60:	4a19      	ldr	r2, [pc, #100]	@ (90029ec8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
90029e62:	460e      	mov	r6, r1
90029e64:	b21b      	sxth	r3, r3
90029e66:	88c1      	ldrh	r1, [r0, #6]
90029e68:	9200      	str	r2, [sp, #0]
90029e6a:	2000      	movs	r0, #0
90029e6c:	2b00      	cmp	r3, #0
90029e6e:	8aa2      	ldrh	r2, [r4, #20]
90029e70:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
90029e74:	bfb8      	it	lt
90029e76:	425b      	neglt	r3, r3
90029e78:	f88d 0004 	strb.w	r0, [sp, #4]
90029e7c:	f8ad 1008 	strh.w	r1, [sp, #8]
90029e80:	b21b      	sxth	r3, r3
90029e82:	f8ad 800a 	strh.w	r8, [sp, #10]
90029e86:	f8ad 500c 	strh.w	r5, [sp, #12]
90029e8a:	4293      	cmp	r3, r2
90029e8c:	dc07      	bgt.n	90029e9e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90029e8e:	1a69      	subs	r1, r5, r1
90029e90:	b209      	sxth	r1, r1
90029e92:	2900      	cmp	r1, #0
90029e94:	bfb8      	it	lt
90029e96:	4249      	neglt	r1, r1
90029e98:	b209      	sxth	r1, r1
90029e9a:	428a      	cmp	r2, r1
90029e9c:	da10      	bge.n	90029ec0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
90029e9e:	6920      	ldr	r0, [r4, #16]
90029ea0:	4669      	mov	r1, sp
90029ea2:	eba8 0606 	sub.w	r6, r8, r6
90029ea6:	1bef      	subs	r7, r5, r7
90029ea8:	6803      	ldr	r3, [r0, #0]
90029eaa:	685b      	ldr	r3, [r3, #4]
90029eac:	4798      	blx	r3
90029eae:	2300      	movs	r3, #0
90029eb0:	2001      	movs	r0, #1
90029eb2:	8166      	strh	r6, [r4, #10]
90029eb4:	8123      	strh	r3, [r4, #8]
90029eb6:	81a7      	strh	r7, [r4, #12]
90029eb8:	f8a4 8004 	strh.w	r8, [r4, #4]
90029ebc:	80e5      	strh	r5, [r4, #6]
90029ebe:	73a0      	strb	r0, [r4, #14]
90029ec0:	b004      	add	sp, #16
90029ec2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90029ec6:	bf00      	nop
90029ec8:	90030768 	.word	0x90030768

90029ecc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
90029ecc:	b5f0      	push	{r4, r5, r6, r7, lr}
90029ece:	461e      	mov	r6, r3
90029ed0:	1e4b      	subs	r3, r1, #1
90029ed2:	b085      	sub	sp, #20
90029ed4:	4604      	mov	r4, r0
90029ed6:	2b01      	cmp	r3, #1
90029ed8:	460d      	mov	r5, r1
90029eda:	4617      	mov	r7, r2
90029edc:	d84b      	bhi.n	90029f76 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
90029ede:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90029ee2:	1cd3      	adds	r3, r2, #3
90029ee4:	b29b      	uxth	r3, r3
90029ee6:	2b06      	cmp	r3, #6
90029ee8:	d916      	bls.n	90029f18 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
90029eea:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 90029f8c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90029eee:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90029ef2:	f8cd c004 	str.w	ip, [sp, #4]
90029ef6:	f04f 0c00 	mov.w	ip, #0
90029efa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90029efe:	6900      	ldr	r0, [r0, #16]
90029f00:	f8ad 100c 	strh.w	r1, [sp, #12]
90029f04:	a901      	add	r1, sp, #4
90029f06:	f88d c008 	strb.w	ip, [sp, #8]
90029f0a:	f8ad 200a 	strh.w	r2, [sp, #10]
90029f0e:	f8ad 300e 	strh.w	r3, [sp, #14]
90029f12:	6803      	ldr	r3, [r0, #0]
90029f14:	689b      	ldr	r3, [r3, #8]
90029f16:	4798      	blx	r3
90029f18:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90029f1c:	1cd3      	adds	r3, r2, #3
90029f1e:	b29b      	uxth	r3, r3
90029f20:	2b06      	cmp	r3, #6
90029f22:	d916      	bls.n	90029f52 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90029f24:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90029f8c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90029f28:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90029f2c:	f8cd c004 	str.w	ip, [sp, #4]
90029f30:	f04f 0c01 	mov.w	ip, #1
90029f34:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90029f38:	6920      	ldr	r0, [r4, #16]
90029f3a:	f8ad 100c 	strh.w	r1, [sp, #12]
90029f3e:	a901      	add	r1, sp, #4
90029f40:	f88d c008 	strb.w	ip, [sp, #8]
90029f44:	f8ad 200a 	strh.w	r2, [sp, #10]
90029f48:	f8ad 300e 	strh.w	r3, [sp, #14]
90029f4c:	6803      	ldr	r3, [r0, #0]
90029f4e:	689b      	ldr	r3, [r3, #8]
90029f50:	4798      	blx	r3
90029f52:	4b0d      	ldr	r3, [pc, #52]	@ (90029f88 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90029f54:	a901      	add	r1, sp, #4
90029f56:	6920      	ldr	r0, [r4, #16]
90029f58:	9301      	str	r3, [sp, #4]
90029f5a:	2300      	movs	r3, #0
90029f5c:	f88d 5008 	strb.w	r5, [sp, #8]
90029f60:	f8ad 700a 	strh.w	r7, [sp, #10]
90029f64:	f8ad 600c 	strh.w	r6, [sp, #12]
90029f68:	f8ad 300e 	strh.w	r3, [sp, #14]
90029f6c:	6803      	ldr	r3, [r0, #0]
90029f6e:	681b      	ldr	r3, [r3, #0]
90029f70:	4798      	blx	r3
90029f72:	b005      	add	sp, #20
90029f74:	bdf0      	pop	{r4, r5, r6, r7, pc}
90029f76:	2900      	cmp	r1, #0
90029f78:	d1eb      	bne.n	90029f52 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90029f7a:	80a2      	strh	r2, [r4, #4]
90029f7c:	80c6      	strh	r6, [r0, #6]
90029f7e:	60a1      	str	r1, [r4, #8]
90029f80:	81a1      	strh	r1, [r4, #12]
90029f82:	73a1      	strb	r1, [r4, #14]
90029f84:	e7e5      	b.n	90029f52 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90029f86:	bf00      	nop
90029f88:	90030754 	.word	0x90030754
90029f8c:	9003077c 	.word	0x9003077c

90029f90 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
90029f90:	10c9      	asrs	r1, r1, #3
90029f92:	2900      	cmp	r1, #0
90029f94:	bfb8      	it	lt
90029f96:	4249      	neglt	r1, r1
90029f98:	2801      	cmp	r0, #1
90029f9a:	d108      	bne.n	90029fae <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
90029f9c:	f3c1 0008 	ubfx	r0, r1, #0, #9
90029fa0:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
90029fa4:	4601      	mov	r1, r0
90029fa6:	dd02      	ble.n	90029fae <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
90029fa8:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
90029fac:	4770      	bx	lr
90029fae:	29ff      	cmp	r1, #255	@ 0xff
90029fb0:	bfa8      	it	ge
90029fb2:	21ff      	movge	r1, #255	@ 0xff
90029fb4:	4608      	mov	r0, r1
90029fb6:	4770      	bx	lr

90029fb8 <_ZN8touchgfx10Rasterizer6lineToEii>:
90029fb8:	b410      	push	{r4}
90029fba:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90029fbe:	429c      	cmp	r4, r3
90029fc0:	d803      	bhi.n	90029fca <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
90029fc2:	f85d 4b04 	ldr.w	r4, [sp], #4
90029fc6:	f7ee bf8d 	b.w	90018ee4 <_ZN8touchgfx7Outline6lineToEii>
90029fca:	f85d 4b04 	ldr.w	r4, [sp], #4
90029fce:	4770      	bx	lr

90029fd0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
90029fd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029fd4:	b08b      	sub	sp, #44	@ 0x2c
90029fd6:	4606      	mov	r6, r0
90029fd8:	468a      	mov	sl, r1
90029fda:	e9cd 2306 	strd	r2, r3, [sp, #24]
90029fde:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90029fe2:	9308      	str	r3, [sp, #32]
90029fe4:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90029fe8:	9309      	str	r3, [sp, #36]	@ 0x24
90029fea:	f7ef f8e6 	bl	900191ba <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
90029fee:	68b5      	ldr	r5, [r6, #8]
90029ff0:	4604      	mov	r4, r0
90029ff2:	2d00      	cmp	r5, #0
90029ff4:	d044      	beq.n	9002a080 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90029ff6:	6873      	ldr	r3, [r6, #4]
90029ff8:	42ab      	cmp	r3, r5
90029ffa:	d33d      	bcc.n	9002a078 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90029ffc:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9002a000:	f04f 0800 	mov.w	r8, #0
9002a004:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
9002a008:	eb02 0b03 	add.w	fp, r2, r3
9002a00c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
9002a010:	fb02 1203 	mla	r2, r2, r3, r1
9002a014:	9205      	str	r2, [sp, #20]
9002a016:	1e6a      	subs	r2, r5, #1
9002a018:	9204      	str	r2, [sp, #16]
9002a01a:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
9002a01e:	f9b4 7000 	ldrsh.w	r7, [r4]
9002a022:	454b      	cmp	r3, r9
9002a024:	463a      	mov	r2, r7
9002a026:	d008      	beq.n	9002a03a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
9002a028:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
9002a02c:	eb03 0b09 	add.w	fp, r3, r9
9002a030:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
9002a034:	fb03 1309 	mla	r3, r3, r9, r1
9002a038:	9305      	str	r3, [sp, #20]
9002a03a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9002a03e:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9002a042:	4498      	add	r8, r3
9002a044:	9b04      	ldr	r3, [sp, #16]
9002a046:	3b01      	subs	r3, #1
9002a048:	9304      	str	r3, [sp, #16]
9002a04a:	9b04      	ldr	r3, [sp, #16]
9002a04c:	3301      	adds	r3, #1
9002a04e:	d015      	beq.n	9002a07c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
9002a050:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
9002a054:	42bb      	cmp	r3, r7
9002a056:	d117      	bne.n	9002a088 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
9002a058:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
9002a05c:	9b04      	ldr	r3, [sp, #16]
9002a05e:	4548      	cmp	r0, r9
9002a060:	f103 33ff 	add.w	r3, r3, #4294967295
9002a064:	d17d      	bne.n	9002a162 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
9002a066:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
9002a06a:	4401      	add	r1, r0
9002a06c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9002a070:	4480      	add	r8, r0
9002a072:	e7e9      	b.n	9002a048 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
9002a074:	461f      	mov	r7, r3
9002a076:	e042      	b.n	9002a0fe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
9002a078:	2000      	movs	r0, #0
9002a07a:	e002      	b.n	9002a082 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
9002a07c:	2900      	cmp	r1, #0
9002a07e:	d16d      	bne.n	9002a15c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
9002a080:	2001      	movs	r0, #1
9002a082:	b00b      	add	sp, #44	@ 0x2c
9002a084:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002a088:	b379      	cbz	r1, 9002a0ea <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
9002a08a:	2f00      	cmp	r7, #0
9002a08c:	db29      	blt.n	9002a0e2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002a08e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
9002a092:	42bb      	cmp	r3, r7
9002a094:	dd25      	ble.n	9002a0e2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002a096:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
9002a09a:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
9002a09e:	f7ff ff77 	bl	90029f90 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
9002a0a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002a0a4:	fb10 f003 	smulbb	r0, r0, r3
9002a0a8:	b280      	uxth	r0, r0
9002a0aa:	1c41      	adds	r1, r0, #1
9002a0ac:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002a0b0:	1209      	asrs	r1, r1, #8
9002a0b2:	f011 0fff 	tst.w	r1, #255	@ 0xff
9002a0b6:	d014      	beq.n	9002a0e2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002a0b8:	b2c9      	uxtb	r1, r1
9002a0ba:	9808      	ldr	r0, [sp, #32]
9002a0bc:	b2ba      	uxth	r2, r7
9002a0be:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
9002a0c0:	9102      	str	r1, [sp, #8]
9002a0c2:	2101      	movs	r1, #1
9002a0c4:	4413      	add	r3, r2
9002a0c6:	4402      	add	r2, r0
9002a0c8:	9101      	str	r1, [sp, #4]
9002a0ca:	fa0f f18b 	sxth.w	r1, fp
9002a0ce:	f8da 0000 	ldr.w	r0, [sl]
9002a0d2:	b21b      	sxth	r3, r3
9002a0d4:	9100      	str	r1, [sp, #0]
9002a0d6:	b212      	sxth	r2, r2
9002a0d8:	6941      	ldr	r1, [r0, #20]
9002a0da:	4650      	mov	r0, sl
9002a0dc:	460d      	mov	r5, r1
9002a0de:	9905      	ldr	r1, [sp, #20]
9002a0e0:	47a8      	blx	r5
9002a0e2:	9b04      	ldr	r3, [sp, #16]
9002a0e4:	1c7a      	adds	r2, r7, #1
9002a0e6:	3301      	adds	r3, #1
9002a0e8:	d0ca      	beq.n	9002a080 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002a0ea:	f9b4 7000 	ldrsh.w	r7, [r4]
9002a0ee:	1abb      	subs	r3, r7, r2
9002a0f0:	2b00      	cmp	r3, #0
9002a0f2:	dd31      	ble.n	9002a158 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002a0f4:	2a00      	cmp	r2, #0
9002a0f6:	dabd      	bge.n	9002a074 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
9002a0f8:	2f00      	cmp	r7, #0
9002a0fa:	dd2d      	ble.n	9002a158 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002a0fc:	2200      	movs	r2, #0
9002a0fe:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
9002a102:	19d1      	adds	r1, r2, r7
9002a104:	4299      	cmp	r1, r3
9002a106:	db02      	blt.n	9002a10e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
9002a108:	1a9f      	subs	r7, r3, r2
9002a10a:	2f00      	cmp	r7, #0
9002a10c:	dd24      	ble.n	9002a158 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002a10e:	ea4f 1188 	mov.w	r1, r8, lsl #6
9002a112:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
9002a116:	f7ff ff3b 	bl	90029f90 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
9002a11a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002a11c:	fb10 f003 	smulbb	r0, r0, r3
9002a120:	b280      	uxth	r0, r0
9002a122:	1c41      	adds	r1, r0, #1
9002a124:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002a128:	1209      	asrs	r1, r1, #8
9002a12a:	f011 0fff 	tst.w	r1, #255	@ 0xff
9002a12e:	d013      	beq.n	9002a158 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002a130:	b292      	uxth	r2, r2
9002a132:	9808      	ldr	r0, [sp, #32]
9002a134:	b2c9      	uxtb	r1, r1
9002a136:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
9002a138:	b23f      	sxth	r7, r7
9002a13a:	4413      	add	r3, r2
9002a13c:	9102      	str	r1, [sp, #8]
9002a13e:	4402      	add	r2, r0
9002a140:	fa0f f18b 	sxth.w	r1, fp
9002a144:	f8da 0000 	ldr.w	r0, [sl]
9002a148:	b21b      	sxth	r3, r3
9002a14a:	9100      	str	r1, [sp, #0]
9002a14c:	b212      	sxth	r2, r2
9002a14e:	9701      	str	r7, [sp, #4]
9002a150:	9905      	ldr	r1, [sp, #20]
9002a152:	6947      	ldr	r7, [r0, #20]
9002a154:	4650      	mov	r0, sl
9002a156:	47b8      	blx	r7
9002a158:	464b      	mov	r3, r9
9002a15a:	e75e      	b.n	9002a01a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
9002a15c:	2f00      	cmp	r7, #0
9002a15e:	da96      	bge.n	9002a08e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
9002a160:	e78e      	b.n	9002a080 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002a162:	2900      	cmp	r1, #0
9002a164:	d0f8      	beq.n	9002a158 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002a166:	e790      	b.n	9002a08a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

9002a168 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
9002a168:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
9002a16c:	4b4a      	ldr	r3, [pc, #296]	@ (9002a298 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
9002a16e:	2500      	movs	r5, #0
9002a170:	f100 0620 	add.w	r6, r0, #32
9002a174:	4604      	mov	r4, r0
9002a176:	4690      	mov	r8, r2
9002a178:	f100 0718 	add.w	r7, r0, #24
9002a17c:	e9c0 3100 	strd	r3, r1, [r0]
9002a180:	e9c0 5502 	strd	r5, r5, [r0, #8]
9002a184:	e9c0 5504 	strd	r5, r5, [r0, #16]
9002a188:	e9c0 5506 	strd	r5, r5, [r0, #24]
9002a18c:	4630      	mov	r0, r6
9002a18e:	f7ee f9ef 	bl	90018570 <_ZN8touchgfx7OutlineC1Ev>
9002a192:	f884 5050 	strb.w	r5, [r4, #80]	@ 0x50
9002a196:	f8a4 5052 	strh.w	r5, [r4, #82]	@ 0x52
9002a19a:	f8a4 5054 	strh.w	r5, [r4, #84]	@ 0x54
9002a19e:	f8a4 5056 	strh.w	r5, [r4, #86]	@ 0x56
9002a1a2:	f884 5058 	strb.w	r5, [r4, #88]	@ 0x58
9002a1a6:	f884 5059 	strb.w	r5, [r4, #89]	@ 0x59
9002a1aa:	f8a4 5064 	strh.w	r5, [r4, #100]	@ 0x64
9002a1ae:	f8d4 c004 	ldr.w	ip, [r4, #4]
9002a1b2:	9500      	str	r5, [sp, #0]
9002a1b4:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
9002a1b8:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
9002a1bc:	f9b8 2000 	ldrsh.w	r2, [r8]
9002a1c0:	f8b8 0004 	ldrh.w	r0, [r8, #4]
9002a1c4:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
9002a1c8:	4410      	add	r0, r2
9002a1ca:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
9002a1ce:	b280      	uxth	r0, r0
9002a1d0:	fa0f fa80 	sxth.w	sl, r0
9002a1d4:	45aa      	cmp	sl, r5
9002a1d6:	dd5c      	ble.n	9002a292 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
9002a1d8:	4591      	cmp	r9, r2
9002a1da:	dd5a      	ble.n	9002a292 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
9002a1dc:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
9002a1e0:	f8b8 3006 	ldrh.w	r3, [r8, #6]
9002a1e4:	440b      	add	r3, r1
9002a1e6:	b29b      	uxth	r3, r3
9002a1e8:	b21d      	sxth	r5, r3
9002a1ea:	2d00      	cmp	r5, #0
9002a1ec:	dd51      	ble.n	9002a292 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
9002a1ee:	458e      	cmp	lr, r1
9002a1f0:	dd4f      	ble.n	9002a292 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
9002a1f2:	45d1      	cmp	r9, sl
9002a1f4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
9002a1f8:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
9002a1fc:	bfb8      	it	lt
9002a1fe:	fa1f f089 	uxthlt.w	r0, r9
9002a202:	45ae      	cmp	lr, r5
9002a204:	f8ad 2000 	strh.w	r2, [sp]
9002a208:	bfb8      	it	lt
9002a20a:	fa1f f38e 	uxthlt.w	r3, lr
9002a20e:	1a80      	subs	r0, r0, r2
9002a210:	f8ad 1002 	strh.w	r1, [sp, #2]
9002a214:	1a5b      	subs	r3, r3, r1
9002a216:	f8ad 0004 	strh.w	r0, [sp, #4]
9002a21a:	f8ad 3006 	strh.w	r3, [sp, #6]
9002a21e:	466d      	mov	r5, sp
9002a220:	e895 0003 	ldmia.w	r5, {r0, r1}
9002a224:	e887 0003 	stmia.w	r7, {r0, r1}
9002a228:	f8dc 3000 	ldr.w	r3, [ip]
9002a22c:	4660      	mov	r0, ip
9002a22e:	4639      	mov	r1, r7
9002a230:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002a232:	4798      	blx	r3
9002a234:	6861      	ldr	r1, [r4, #4]
9002a236:	4628      	mov	r0, r5
9002a238:	3104      	adds	r1, #4
9002a23a:	f7f0 fb85 	bl	9001a948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002a23e:	4638      	mov	r0, r7
9002a240:	f7f0 fb3e 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002a244:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9002a248:	f8bd 2000 	ldrh.w	r2, [sp]
9002a24c:	4630      	mov	r0, r6
9002a24e:	f8a4 3054 	strh.w	r3, [r4, #84]	@ 0x54
9002a252:	f8a4 2052 	strh.w	r2, [r4, #82]	@ 0x52
9002a256:	f7ee f96f 	bl	90018538 <_ZN8touchgfx7Outline5resetEv>
9002a25a:	f9bd 3000 	ldrsh.w	r3, [sp]
9002a25e:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
9002a262:	4620      	mov	r0, r4
9002a264:	015b      	lsls	r3, r3, #5
9002a266:	60a3      	str	r3, [r4, #8]
9002a268:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9002a26c:	015b      	lsls	r3, r3, #5
9002a26e:	60e3      	str	r3, [r4, #12]
9002a270:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9002a274:	015b      	lsls	r3, r3, #5
9002a276:	6123      	str	r3, [r4, #16]
9002a278:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
9002a27c:	015b      	lsls	r3, r3, #5
9002a27e:	6163      	str	r3, [r4, #20]
9002a280:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
9002a284:	f8a4 3056 	strh.w	r3, [r4, #86]	@ 0x56
9002a288:	e9c4 3212 	strd	r3, r2, [r4, #72]	@ 0x48
9002a28c:	b002      	add	sp, #8
9002a28e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002a292:	2300      	movs	r3, #0
9002a294:	9301      	str	r3, [sp, #4]
9002a296:	e7c2      	b.n	9002a21e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
9002a298:	90030a4c 	.word	0x90030a4c

9002a29c <_ZN8touchgfx6Canvas5closeEv>:
9002a29c:	b538      	push	{r3, r4, r5, lr}
9002a29e:	f890 3058 	ldrb.w	r3, [r0, #88]	@ 0x58
9002a2a2:	4604      	mov	r4, r0
9002a2a4:	b193      	cbz	r3, 9002a2cc <_ZN8touchgfx6Canvas5closeEv+0x30>
9002a2a6:	f890 3064 	ldrb.w	r3, [r0, #100]	@ 0x64
9002a2aa:	f890 2065 	ldrb.w	r2, [r0, #101]	@ 0x65
9002a2ae:	4213      	tst	r3, r2
9002a2b0:	d10c      	bne.n	9002a2cc <_ZN8touchgfx6Canvas5closeEv+0x30>
9002a2b2:	f100 0520 	add.w	r5, r0, #32
9002a2b6:	b123      	cbz	r3, 9002a2c2 <_ZN8touchgfx6Canvas5closeEv+0x26>
9002a2b8:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	@ 0x5c
9002a2bc:	4628      	mov	r0, r5
9002a2be:	f7ff fe7b 	bl	90029fb8 <_ZN8touchgfx10Rasterizer6lineToEii>
9002a2c2:	4628      	mov	r0, r5
9002a2c4:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	@ 0x68
9002a2c8:	f7ff fe76 	bl	90029fb8 <_ZN8touchgfx10Rasterizer6lineToEii>
9002a2cc:	2300      	movs	r3, #0
9002a2ce:	f884 3058 	strb.w	r3, [r4, #88]	@ 0x58
9002a2d2:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	@ 0x24
9002a2d6:	4298      	cmp	r0, r3
9002a2d8:	bf34      	ite	cc
9002a2da:	2000      	movcc	r0, #0
9002a2dc:	2001      	movcs	r0, #1
9002a2de:	bd38      	pop	{r3, r4, r5, pc}

9002a2e0 <_ZN8touchgfx6Canvas6renderEh>:
9002a2e0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9002a2e4:	4604      	mov	r4, r0
9002a2e6:	6840      	ldr	r0, [r0, #4]
9002a2e8:	460d      	mov	r5, r1
9002a2ea:	6803      	ldr	r3, [r0, #0]
9002a2ec:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
9002a2ee:	4798      	blx	r3
9002a2f0:	fb10 f105 	smulbb	r1, r0, r5
9002a2f4:	b289      	uxth	r1, r1
9002a2f6:	1c4d      	adds	r5, r1, #1
9002a2f8:	eb05 2511 	add.w	r5, r5, r1, lsr #8
9002a2fc:	122d      	asrs	r5, r5, #8
9002a2fe:	f000 8097 	beq.w	9002a430 <_ZN8touchgfx6Canvas6renderEh+0x150>
9002a302:	f894 3059 	ldrb.w	r3, [r4, #89]	@ 0x59
9002a306:	2b00      	cmp	r3, #0
9002a308:	f000 8092 	beq.w	9002a430 <_ZN8touchgfx6Canvas6renderEh+0x150>
9002a30c:	4620      	mov	r0, r4
9002a30e:	f7ff ffc5 	bl	9002a29c <_ZN8touchgfx6Canvas5closeEv>
9002a312:	4607      	mov	r7, r0
9002a314:	2800      	cmp	r0, #0
9002a316:	d043      	beq.n	9002a3a0 <_ZN8touchgfx6Canvas6renderEh+0xc0>
9002a318:	6863      	ldr	r3, [r4, #4]
9002a31a:	4e46      	ldr	r6, [pc, #280]	@ (9002a434 <_ZN8touchgfx6Canvas6renderEh+0x154>)
9002a31c:	6a98      	ldr	r0, [r3, #40]	@ 0x28
9002a31e:	6837      	ldr	r7, [r6, #0]
9002a320:	6803      	ldr	r3, [r0, #0]
9002a322:	689b      	ldr	r3, [r3, #8]
9002a324:	4798      	blx	r3
9002a326:	4601      	mov	r1, r0
9002a328:	4638      	mov	r0, r7
9002a32a:	f7eb fbdd 	bl	90015ae8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
9002a32e:	4607      	mov	r7, r0
9002a330:	f7ea ffb6 	bl	900152a0 <_ZN8touchgfx3HAL3lcdEv>
9002a334:	6803      	ldr	r3, [r0, #0]
9002a336:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002a338:	4798      	blx	r3
9002a33a:	4680      	mov	r8, r0
9002a33c:	f7ea ffb0 	bl	900152a0 <_ZN8touchgfx3HAL3lcdEv>
9002a340:	6803      	ldr	r3, [r0, #0]
9002a342:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002a344:	4798      	blx	r3
9002a346:	280b      	cmp	r0, #11
9002a348:	d857      	bhi.n	9002a3fa <_ZN8touchgfx6Canvas6renderEh+0x11a>
9002a34a:	e8df f000 	tbb	[pc, r0]
9002a34e:	584d      	.short	0x584d
9002a350:	2d560668 	.word	0x2d560668
9002a354:	6161613d 	.word	0x6161613d
9002a358:	6161      	.short	0x6161
9002a35a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
9002a35e:	2208      	movs	r2, #8
9002a360:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
9002a364:	fb91 f2f2 	sdiv	r2, r1, r2
9002a368:	fb08 2303 	mla	r3, r8, r3, r2
9002a36c:	441f      	add	r7, r3
9002a36e:	424b      	negs	r3, r1
9002a370:	f001 0107 	and.w	r1, r1, #7
9002a374:	f003 0307 	and.w	r3, r3, #7
9002a378:	bf58      	it	pl
9002a37a:	4259      	negpl	r1, r3
9002a37c:	b2c9      	uxtb	r1, r1
9002a37e:	6860      	ldr	r0, [r4, #4]
9002a380:	b2ed      	uxtb	r5, r5
9002a382:	fa0f f388 	sxth.w	r3, r8
9002a386:	463a      	mov	r2, r7
9002a388:	e9cd 1500 	strd	r1, r5, [sp]
9002a38c:	6a81      	ldr	r1, [r0, #40]	@ 0x28
9002a38e:	f104 0020 	add.w	r0, r4, #32
9002a392:	f7ff fe1d 	bl	90029fd0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
9002a396:	4607      	mov	r7, r0
9002a398:	6830      	ldr	r0, [r6, #0]
9002a39a:	6803      	ldr	r3, [r0, #0]
9002a39c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002a39e:	4798      	blx	r3
9002a3a0:	4638      	mov	r0, r7
9002a3a2:	b002      	add	sp, #8
9002a3a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002a3a8:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
9002a3ac:	2204      	movs	r2, #4
9002a3ae:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
9002a3b2:	fb91 f2f2 	sdiv	r2, r1, r2
9002a3b6:	fb08 2303 	mla	r3, r8, r3, r2
9002a3ba:	441f      	add	r7, r3
9002a3bc:	424b      	negs	r3, r1
9002a3be:	f001 0103 	and.w	r1, r1, #3
9002a3c2:	f003 0303 	and.w	r3, r3, #3
9002a3c6:	e7d7      	b.n	9002a378 <_ZN8touchgfx6Canvas6renderEh+0x98>
9002a3c8:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
9002a3cc:	2202      	movs	r2, #2
9002a3ce:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
9002a3d2:	2900      	cmp	r1, #0
9002a3d4:	fb91 f2f2 	sdiv	r2, r1, r2
9002a3d8:	f001 0101 	and.w	r1, r1, #1
9002a3dc:	fb08 2303 	mla	r3, r8, r3, r2
9002a3e0:	bfb8      	it	lt
9002a3e2:	4249      	neglt	r1, r1
9002a3e4:	441f      	add	r7, r3
9002a3e6:	e7c9      	b.n	9002a37c <_ZN8touchgfx6Canvas6renderEh+0x9c>
9002a3e8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
9002a3ec:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
9002a3f0:	fb08 f303 	mul.w	r3, r8, r3
9002a3f4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9002a3f8:	441f      	add	r7, r3
9002a3fa:	2100      	movs	r1, #0
9002a3fc:	e7bf      	b.n	9002a37e <_ZN8touchgfx6Canvas6renderEh+0x9e>
9002a3fe:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
9002a402:	2103      	movs	r1, #3
9002a404:	fb08 f203 	mul.w	r2, r8, r3
9002a408:	8b23      	ldrh	r3, [r4, #24]
9002a40a:	fb13 2301 	smlabb	r3, r3, r1, r2
9002a40e:	e7f3      	b.n	9002a3f8 <_ZN8touchgfx6Canvas6renderEh+0x118>
9002a410:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
9002a414:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
9002a418:	fb08 2303 	mla	r3, r8, r3, r2
9002a41c:	e7ec      	b.n	9002a3f8 <_ZN8touchgfx6Canvas6renderEh+0x118>
9002a41e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
9002a422:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
9002a426:	fb08 f303 	mul.w	r3, r8, r3
9002a42a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9002a42e:	e7e3      	b.n	9002a3f8 <_ZN8touchgfx6Canvas6renderEh+0x118>
9002a430:	2701      	movs	r7, #1
9002a432:	e7b5      	b.n	9002a3a0 <_ZN8touchgfx6Canvas6renderEh+0xc0>
9002a434:	24027e9c 	.word	0x24027e9c

9002a438 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
9002a438:	4b07      	ldr	r3, [pc, #28]	@ (9002a458 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
9002a43a:	b510      	push	{r4, lr}
9002a43c:	781b      	ldrb	r3, [r3, #0]
9002a43e:	2b01      	cmp	r3, #1
9002a440:	d108      	bne.n	9002a454 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
9002a442:	6843      	ldr	r3, [r0, #4]
9002a444:	6814      	ldr	r4, [r2, #0]
9002a446:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9002a44a:	680b      	ldr	r3, [r1, #0]
9002a44c:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
9002a450:	6013      	str	r3, [r2, #0]
9002a452:	600c      	str	r4, [r1, #0]
9002a454:	bd10      	pop	{r4, pc}
9002a456:	bf00      	nop
9002a458:	24027e94 	.word	0x24027e94

9002a45c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
9002a45c:	b513      	push	{r0, r1, r4, lr}
9002a45e:	f890 3058 	ldrb.w	r3, [r0, #88]	@ 0x58
9002a462:	4604      	mov	r4, r0
9002a464:	e9cd 2100 	strd	r2, r1, [sp]
9002a468:	b9a3      	cbnz	r3, 9002a494 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
9002a46a:	466a      	mov	r2, sp
9002a46c:	a901      	add	r1, sp, #4
9002a46e:	4620      	mov	r0, r4
9002a470:	f7ff ffe2 	bl	9002a438 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002a474:	68a3      	ldr	r3, [r4, #8]
9002a476:	9901      	ldr	r1, [sp, #4]
9002a478:	9a00      	ldr	r2, [sp, #0]
9002a47a:	1ac9      	subs	r1, r1, r3
9002a47c:	68e3      	ldr	r3, [r4, #12]
9002a47e:	1ad2      	subs	r2, r2, r3
9002a480:	9101      	str	r1, [sp, #4]
9002a482:	2a00      	cmp	r2, #0
9002a484:	9200      	str	r2, [sp, #0]
9002a486:	da0b      	bge.n	9002a4a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
9002a488:	2301      	movs	r3, #1
9002a48a:	2900      	cmp	r1, #0
9002a48c:	da0e      	bge.n	9002a4ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
9002a48e:	f043 0304 	orr.w	r3, r3, #4
9002a492:	e013      	b.n	9002a4bc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
9002a494:	f7ff ff02 	bl	9002a29c <_ZN8touchgfx6Canvas5closeEv>
9002a498:	2800      	cmp	r0, #0
9002a49a:	d1e6      	bne.n	9002a46a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
9002a49c:	b002      	add	sp, #8
9002a49e:	bd10      	pop	{r4, pc}
9002a4a0:	6963      	ldr	r3, [r4, #20]
9002a4a2:	429a      	cmp	r2, r3
9002a4a4:	bfac      	ite	ge
9002a4a6:	2302      	movge	r3, #2
9002a4a8:	2300      	movlt	r3, #0
9002a4aa:	e7ee      	b.n	9002a48a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
9002a4ac:	6920      	ldr	r0, [r4, #16]
9002a4ae:	4281      	cmp	r1, r0
9002a4b0:	bfac      	ite	ge
9002a4b2:	2008      	movge	r0, #8
9002a4b4:	2000      	movlt	r0, #0
9002a4b6:	4318      	orrs	r0, r3
9002a4b8:	b2c3      	uxtb	r3, r0
9002a4ba:	b158      	cbz	r0, 9002a4d4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
9002a4bc:	2200      	movs	r2, #0
9002a4be:	f884 2058 	strb.w	r2, [r4, #88]	@ 0x58
9002a4c2:	9901      	ldr	r1, [sp, #4]
9002a4c4:	9a00      	ldr	r2, [sp, #0]
9002a4c6:	66a1      	str	r1, [r4, #104]	@ 0x68
9002a4c8:	66e2      	str	r2, [r4, #108]	@ 0x6c
9002a4ca:	f884 3064 	strb.w	r3, [r4, #100]	@ 0x64
9002a4ce:	e9c4 1217 	strd	r1, r2, [r4, #92]	@ 0x5c
9002a4d2:	e7e3      	b.n	9002a49c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
9002a4d4:	f884 0065 	strb.w	r0, [r4, #101]	@ 0x65
9002a4d8:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	@ 0x24
9002a4dc:	4298      	cmp	r0, r3
9002a4de:	d803      	bhi.n	9002a4e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
9002a4e0:	f104 0020 	add.w	r0, r4, #32
9002a4e4:	f7ee fd18 	bl	90018f18 <_ZN8touchgfx7Outline6moveToEii>
9002a4e8:	2301      	movs	r3, #1
9002a4ea:	f884 3058 	strb.w	r3, [r4, #88]	@ 0x58
9002a4ee:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9002a4f2:	2300      	movs	r3, #0
9002a4f4:	e7e5      	b.n	9002a4c2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

9002a4f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
9002a4f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
9002a4f8:	ab02      	add	r3, sp, #8
9002a4fa:	4604      	mov	r4, r0
9002a4fc:	9101      	str	r1, [sp, #4]
9002a4fe:	a901      	add	r1, sp, #4
9002a500:	f843 2d08 	str.w	r2, [r3, #-8]!
9002a504:	461a      	mov	r2, r3
9002a506:	f7ff ff97 	bl	9002a438 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002a50a:	68a3      	ldr	r3, [r4, #8]
9002a50c:	9901      	ldr	r1, [sp, #4]
9002a50e:	9a00      	ldr	r2, [sp, #0]
9002a510:	1ac9      	subs	r1, r1, r3
9002a512:	68e3      	ldr	r3, [r4, #12]
9002a514:	1ad2      	subs	r2, r2, r3
9002a516:	9101      	str	r1, [sp, #4]
9002a518:	2a00      	cmp	r2, #0
9002a51a:	9200      	str	r2, [sp, #0]
9002a51c:	db1c      	blt.n	9002a558 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
9002a51e:	6963      	ldr	r3, [r4, #20]
9002a520:	429a      	cmp	r2, r3
9002a522:	bfac      	ite	ge
9002a524:	2002      	movge	r0, #2
9002a526:	2000      	movlt	r0, #0
9002a528:	2900      	cmp	r1, #0
9002a52a:	db17      	blt.n	9002a55c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
9002a52c:	6923      	ldr	r3, [r4, #16]
9002a52e:	4299      	cmp	r1, r3
9002a530:	bfac      	ite	ge
9002a532:	2308      	movge	r3, #8
9002a534:	2300      	movlt	r3, #0
9002a536:	4303      	orrs	r3, r0
9002a538:	f894 0064 	ldrb.w	r0, [r4, #100]	@ 0x64
9002a53c:	b2dd      	uxtb	r5, r3
9002a53e:	b978      	cbnz	r0, 9002a560 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
9002a540:	f104 0020 	add.w	r0, r4, #32
9002a544:	f7ff fd38 	bl	90029fb8 <_ZN8touchgfx10Rasterizer6lineToEii>
9002a548:	9b01      	ldr	r3, [sp, #4]
9002a54a:	f884 5064 	strb.w	r5, [r4, #100]	@ 0x64
9002a54e:	65e3      	str	r3, [r4, #92]	@ 0x5c
9002a550:	9b00      	ldr	r3, [sp, #0]
9002a552:	6623      	str	r3, [r4, #96]	@ 0x60
9002a554:	b002      	add	sp, #8
9002a556:	bd70      	pop	{r4, r5, r6, pc}
9002a558:	2001      	movs	r0, #1
9002a55a:	e7e5      	b.n	9002a528 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
9002a55c:	2304      	movs	r3, #4
9002a55e:	e7ea      	b.n	9002a536 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
9002a560:	b113      	cbz	r3, 9002a568 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
9002a562:	ea10 0305 	ands.w	r3, r0, r5
9002a566:	d11c      	bne.n	9002a5a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
9002a568:	f894 3058 	ldrb.w	r3, [r4, #88]	@ 0x58
9002a56c:	f104 0620 	add.w	r6, r4, #32
9002a570:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	@ 0x5c
9002a574:	b98b      	cbnz	r3, 9002a59a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
9002a576:	f884 0065 	strb.w	r0, [r4, #101]	@ 0x65
9002a57a:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	@ 0x24
9002a57e:	4298      	cmp	r0, r3
9002a580:	d802      	bhi.n	9002a588 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
9002a582:	4630      	mov	r0, r6
9002a584:	f7ee fcc8 	bl	90018f18 <_ZN8touchgfx7Outline6moveToEii>
9002a588:	2301      	movs	r3, #1
9002a58a:	f884 3058 	strb.w	r3, [r4, #88]	@ 0x58
9002a58e:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9002a592:	4630      	mov	r0, r6
9002a594:	e9dd 2100 	ldrd	r2, r1, [sp]
9002a598:	e7d4      	b.n	9002a544 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
9002a59a:	4630      	mov	r0, r6
9002a59c:	f7ff fd0c 	bl	90029fb8 <_ZN8touchgfx10Rasterizer6lineToEii>
9002a5a0:	e7f7      	b.n	9002a592 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
9002a5a2:	461d      	mov	r5, r3
9002a5a4:	e7d0      	b.n	9002a548 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

9002a5a8 <_ZN8touchgfx6CanvasD1Ev>:
9002a5a8:	4b04      	ldr	r3, [pc, #16]	@ (9002a5bc <_ZN8touchgfx6CanvasD1Ev+0x14>)
9002a5aa:	b510      	push	{r4, lr}
9002a5ac:	4604      	mov	r4, r0
9002a5ae:	f840 3b20 	str.w	r3, [r0], #32
9002a5b2:	f7ed ffb9 	bl	90018528 <_ZN8touchgfx7OutlineD1Ev>
9002a5b6:	4620      	mov	r0, r4
9002a5b8:	bd10      	pop	{r4, pc}
9002a5ba:	bf00      	nop
9002a5bc:	90030a4c 	.word	0x90030a4c

9002a5c0 <_ZN8touchgfx6CanvasD0Ev>:
9002a5c0:	b510      	push	{r4, lr}
9002a5c2:	4604      	mov	r4, r0
9002a5c4:	f7ff fff0 	bl	9002a5a8 <_ZN8touchgfx6CanvasD1Ev>
9002a5c8:	2170      	movs	r1, #112	@ 0x70
9002a5ca:	4620      	mov	r0, r4
9002a5cc:	f000 ff9b 	bl	9002b506 <_ZdlPvj>
9002a5d0:	4620      	mov	r0, r4
9002a5d2:	bd10      	pop	{r4, pc}

9002a5d4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
9002a5d4:	790b      	ldrb	r3, [r1, #4]
9002a5d6:	2b00      	cmp	r3, #0
9002a5d8:	bf0c      	ite	eq
9002a5da:	2301      	moveq	r3, #1
9002a5dc:	2300      	movne	r3, #0
9002a5de:	b570      	push	{r4, r5, r6, lr}
9002a5e0:	4604      	mov	r4, r0
9002a5e2:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
9002a5e6:	460e      	mov	r6, r1
9002a5e8:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
9002a5ec:	d109      	bne.n	9002a602 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
9002a5ee:	b14d      	cbz	r5, 9002a604 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
9002a5f0:	7933      	ldrb	r3, [r6, #4]
9002a5f2:	2b01      	cmp	r3, #1
9002a5f4:	d10c      	bne.n	9002a610 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002a5f6:	6823      	ldr	r3, [r4, #0]
9002a5f8:	4620      	mov	r0, r4
9002a5fa:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9002a5fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9002a600:	4718      	bx	r3
9002a602:	b12d      	cbz	r5, 9002a610 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002a604:	6823      	ldr	r3, [r4, #0]
9002a606:	4620      	mov	r0, r4
9002a608:	695b      	ldr	r3, [r3, #20]
9002a60a:	4798      	blx	r3
9002a60c:	2d00      	cmp	r5, #0
9002a60e:	d1ef      	bne.n	9002a5f0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
9002a610:	bd70      	pop	{r4, r5, r6, pc}

9002a612 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
9002a612:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
9002a616:	4770      	bx	lr

9002a618 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
9002a618:	f890 0029 	ldrb.w	r0, [r0, #41]	@ 0x29
9002a61c:	4770      	bx	lr

9002a61e <_ZN8touchgfx13TextureMapper9setXAngleEf>:
9002a61e:	6802      	ldr	r2, [r0, #0]
9002a620:	ed90 1a0f 	vldr	s2, [r0, #60]	@ 0x3c
9002a624:	6ed2      	ldr	r2, [r2, #108]	@ 0x6c
9002a626:	edd0 0a0e 	vldr	s1, [r0, #56]	@ 0x38
9002a62a:	4710      	bx	r2

9002a62c <_ZN8touchgfx13TextureMapper9setYAngleEf>:
9002a62c:	6802      	ldr	r2, [r0, #0]
9002a62e:	eef0 0a40 	vmov.f32	s1, s0
9002a632:	ed90 1a0f 	vldr	s2, [r0, #60]	@ 0x3c
9002a636:	6ed2      	ldr	r2, [r2, #108]	@ 0x6c
9002a638:	ed90 0a0d 	vldr	s0, [r0, #52]	@ 0x34
9002a63c:	4710      	bx	r2

9002a63e <_ZN8touchgfx13TextureMapper9setZAngleEf>:
9002a63e:	6802      	ldr	r2, [r0, #0]
9002a640:	eeb0 1a40 	vmov.f32	s2, s0
9002a644:	edd0 0a0e 	vldr	s1, [r0, #56]	@ 0x38
9002a648:	6ed2      	ldr	r2, [r2, #108]	@ 0x6c
9002a64a:	ed90 0a0d 	vldr	s0, [r0, #52]	@ 0x34
9002a64e:	4710      	bx	r2

9002a650 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
9002a650:	6802      	ldr	r2, [r0, #0]
9002a652:	ed90 1a0f 	vldr	s2, [r0, #60]	@ 0x3c
9002a656:	6fd2      	ldr	r2, [r2, #124]	@ 0x7c
9002a658:	edd0 0a0e 	vldr	s1, [r0, #56]	@ 0x38
9002a65c:	4710      	bx	r2

9002a65e <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
9002a65e:	6802      	ldr	r2, [r0, #0]
9002a660:	eef0 0a40 	vmov.f32	s1, s0
9002a664:	ed90 1a0f 	vldr	s2, [r0, #60]	@ 0x3c
9002a668:	6fd2      	ldr	r2, [r2, #124]	@ 0x7c
9002a66a:	ed90 0a0d 	vldr	s0, [r0, #52]	@ 0x34
9002a66e:	4710      	bx	r2

9002a670 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
9002a670:	6802      	ldr	r2, [r0, #0]
9002a672:	eeb0 1a40 	vmov.f32	s2, s0
9002a676:	edd0 0a0e 	vldr	s1, [r0, #56]	@ 0x38
9002a67a:	6fd2      	ldr	r2, [r2, #124]	@ 0x7c
9002a67c:	ed90 0a0d 	vldr	s0, [r0, #52]	@ 0x34
9002a680:	4710      	bx	r2

9002a682 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
9002a682:	ed90 0a0d 	vldr	s0, [r0, #52]	@ 0x34
9002a686:	4770      	bx	lr

9002a688 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
9002a688:	ed90 0a0e 	vldr	s0, [r0, #56]	@ 0x38
9002a68c:	4770      	bx	lr

9002a68e <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
9002a68e:	ed90 0a0f 	vldr	s0, [r0, #60]	@ 0x3c
9002a692:	4770      	bx	lr

9002a694 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
9002a694:	ed90 0a10 	vldr	s0, [r0, #64]	@ 0x40
9002a698:	4770      	bx	lr

9002a69a <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
9002a69a:	ed90 0a11 	vldr	s0, [r0, #68]	@ 0x44
9002a69e:	4770      	bx	lr

9002a6a0 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
9002a6a0:	ed90 0a12 	vldr	s0, [r0, #72]	@ 0x48
9002a6a4:	4770      	bx	lr

9002a6a6 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
9002a6a6:	ed90 0a13 	vldr	s0, [r0, #76]	@ 0x4c
9002a6aa:	4770      	bx	lr

9002a6ac <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
9002a6ac:	ed90 0a14 	vldr	s0, [r0, #80]	@ 0x50
9002a6b0:	4770      	bx	lr

9002a6b2 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
9002a6b2:	ed90 0a15 	vldr	s0, [r0, #84]	@ 0x54
9002a6b6:	4770      	bx	lr

9002a6b8 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
9002a6b8:	ed90 0a16 	vldr	s0, [r0, #88]	@ 0x58
9002a6bc:	4770      	bx	lr

9002a6be <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
9002a6be:	ee07 2a90 	vmov	s15, r2
9002a6c2:	6803      	ldr	r3, [r0, #0]
9002a6c4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
9002a6c8:	ee07 1a90 	vmov	s15, r1
9002a6cc:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
9002a6d0:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
9002a6d4:	4718      	bx	r3

9002a6d6 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
9002a6d6:	ed90 0a0b 	vldr	s0, [r0, #44]	@ 0x2c
9002a6da:	4770      	bx	lr

9002a6dc <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
9002a6dc:	ed90 0a0c 	vldr	s0, [r0, #48]	@ 0x30
9002a6e0:	4770      	bx	lr

9002a6e2 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
9002a6e2:	ed90 0a17 	vldr	s0, [r0, #92]	@ 0x5c
9002a6e6:	4770      	bx	lr

9002a6e8 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
9002a6e8:	ed90 0a1a 	vldr	s0, [r0, #104]	@ 0x68
9002a6ec:	4770      	bx	lr

9002a6ee <_ZNK8touchgfx13TextureMapper5getX2Ev>:
9002a6ee:	ed90 0a1d 	vldr	s0, [r0, #116]	@ 0x74
9002a6f2:	4770      	bx	lr

9002a6f4 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
9002a6f4:	ed90 0a20 	vldr	s0, [r0, #128]	@ 0x80
9002a6f8:	4770      	bx	lr

9002a6fa <_ZNK8touchgfx13TextureMapper5getY0Ev>:
9002a6fa:	ed90 0a18 	vldr	s0, [r0, #96]	@ 0x60
9002a6fe:	4770      	bx	lr

9002a700 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
9002a700:	ed90 0a1b 	vldr	s0, [r0, #108]	@ 0x6c
9002a704:	4770      	bx	lr

9002a706 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
9002a706:	ed90 0a1e 	vldr	s0, [r0, #120]	@ 0x78
9002a70a:	4770      	bx	lr

9002a70c <_ZNK8touchgfx13TextureMapper5getY3Ev>:
9002a70c:	ed90 0a21 	vldr	s0, [r0, #132]	@ 0x84
9002a710:	4770      	bx	lr

9002a712 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
9002a712:	ed90 0a19 	vldr	s0, [r0, #100]	@ 0x64
9002a716:	4770      	bx	lr

9002a718 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
9002a718:	ed90 0a1c 	vldr	s0, [r0, #112]	@ 0x70
9002a71c:	4770      	bx	lr

9002a71e <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
9002a71e:	ed90 0a1f 	vldr	s0, [r0, #124]	@ 0x7c
9002a722:	4770      	bx	lr

9002a724 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
9002a724:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
9002a728:	4770      	bx	lr

9002a72a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
9002a72a:	b510      	push	{r4, lr}
9002a72c:	ed2d 8b04 	vpush	{d8-d9}
9002a730:	6803      	ldr	r3, [r0, #0]
9002a732:	4604      	mov	r4, r0
9002a734:	eeb0 8a40 	vmov.f32	s16, s0
9002a738:	eef0 8a60 	vmov.f32	s17, s1
9002a73c:	699b      	ldr	r3, [r3, #24]
9002a73e:	eeb0 9a41 	vmov.f32	s18, s2
9002a742:	4798      	blx	r3
9002a744:	6823      	ldr	r3, [r4, #0]
9002a746:	4620      	mov	r0, r4
9002a748:	eef0 0a68 	vmov.f32	s1, s17
9002a74c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
9002a74e:	eeb0 1a49 	vmov.f32	s2, s18
9002a752:	eeb0 0a48 	vmov.f32	s0, s16
9002a756:	4798      	blx	r3
9002a758:	6823      	ldr	r3, [r4, #0]
9002a75a:	4620      	mov	r0, r4
9002a75c:	699b      	ldr	r3, [r3, #24]
9002a75e:	ecbd 8b04 	vpop	{d8-d9}
9002a762:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a766:	4718      	bx	r3

9002a768 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
9002a768:	b510      	push	{r4, lr}
9002a76a:	ed2d 8b02 	vpush	{d8}
9002a76e:	6803      	ldr	r3, [r0, #0]
9002a770:	4604      	mov	r4, r0
9002a772:	eeb0 8a40 	vmov.f32	s16, s0
9002a776:	699b      	ldr	r3, [r3, #24]
9002a778:	4798      	blx	r3
9002a77a:	6823      	ldr	r3, [r4, #0]
9002a77c:	4620      	mov	r0, r4
9002a77e:	eeb0 0a48 	vmov.f32	s0, s16
9002a782:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
9002a786:	4798      	blx	r3
9002a788:	6823      	ldr	r3, [r4, #0]
9002a78a:	4620      	mov	r0, r4
9002a78c:	699b      	ldr	r3, [r3, #24]
9002a78e:	ecbd 8b02 	vpop	{d8}
9002a792:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002a796:	4718      	bx	r3

9002a798 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
9002a798:	2200      	movs	r2, #0
9002a79a:	8002      	strh	r2, [r0, #0]
9002a79c:	8042      	strh	r2, [r0, #2]
9002a79e:	8082      	strh	r2, [r0, #4]
9002a7a0:	80c2      	strh	r2, [r0, #6]
9002a7a2:	4770      	bx	lr

9002a7a4 <_ZN8touchgfx13TextureMapperD1Ev>:
9002a7a4:	4770      	bx	lr

9002a7a6 <_ZN8touchgfx13TextureMapperD0Ev>:
9002a7a6:	b510      	push	{r4, lr}
9002a7a8:	4604      	mov	r4, r0
9002a7aa:	2190      	movs	r1, #144	@ 0x90
9002a7ac:	f000 feab 	bl	9002b506 <_ZdlPvj>
9002a7b0:	4620      	mov	r0, r4
9002a7b2:	bd10      	pop	{r4, pc}

9002a7b4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
9002a7b4:	b538      	push	{r3, r4, r5, lr}
9002a7b6:	2301      	movs	r3, #1
9002a7b8:	2500      	movs	r5, #0
9002a7ba:	4604      	mov	r4, r0
9002a7bc:	f880 3025 	strb.w	r3, [r0, #37]	@ 0x25
9002a7c0:	4b1f      	ldr	r3, [pc, #124]	@ (9002a840 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
9002a7c2:	8085      	strh	r5, [r0, #4]
9002a7c4:	80c5      	strh	r5, [r0, #6]
9002a7c6:	8105      	strh	r5, [r0, #8]
9002a7c8:	8145      	strh	r5, [r0, #10]
9002a7ca:	8185      	strh	r5, [r0, #12]
9002a7cc:	81c5      	strh	r5, [r0, #14]
9002a7ce:	8205      	strh	r5, [r0, #16]
9002a7d0:	8245      	strh	r5, [r0, #18]
9002a7d2:	61c5      	str	r5, [r0, #28]
9002a7d4:	8405      	strh	r5, [r0, #32]
9002a7d6:	8445      	strh	r5, [r0, #34]	@ 0x22
9002a7d8:	f880 5024 	strb.w	r5, [r0, #36]	@ 0x24
9002a7dc:	6003      	str	r3, [r0, #0]
9002a7de:	e9c0 5505 	strd	r5, r5, [r0, #20]
9002a7e2:	880b      	ldrh	r3, [r1, #0]
9002a7e4:	84c3      	strh	r3, [r0, #38]	@ 0x26
9002a7e6:	23ff      	movs	r3, #255	@ 0xff
9002a7e8:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
9002a7ec:	f7ed fe29 	bl	90018442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9002a7f0:	4b14      	ldr	r3, [pc, #80]	@ (9002a844 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
9002a7f2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
9002a7f6:	4914      	ldr	r1, [pc, #80]	@ (9002a848 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
9002a7f8:	6023      	str	r3, [r4, #0]
9002a7fa:	2300      	movs	r3, #0
9002a7fc:	f884 5029 	strb.w	r5, [r4, #41]	@ 0x29
9002a800:	4620      	mov	r0, r4
9002a802:	62e3      	str	r3, [r4, #44]	@ 0x2c
9002a804:	6323      	str	r3, [r4, #48]	@ 0x30
9002a806:	6363      	str	r3, [r4, #52]	@ 0x34
9002a808:	63a3      	str	r3, [r4, #56]	@ 0x38
9002a80a:	63e3      	str	r3, [r4, #60]	@ 0x3c
9002a80c:	6463      	str	r3, [r4, #68]	@ 0x44
9002a80e:	64a3      	str	r3, [r4, #72]	@ 0x48
9002a810:	6523      	str	r3, [r4, #80]	@ 0x50
9002a812:	6563      	str	r3, [r4, #84]	@ 0x54
9002a814:	65e3      	str	r3, [r4, #92]	@ 0x5c
9002a816:	6623      	str	r3, [r4, #96]	@ 0x60
9002a818:	66a3      	str	r3, [r4, #104]	@ 0x68
9002a81a:	66e3      	str	r3, [r4, #108]	@ 0x6c
9002a81c:	6763      	str	r3, [r4, #116]	@ 0x74
9002a81e:	67a3      	str	r3, [r4, #120]	@ 0x78
9002a820:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
9002a824:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
9002a828:	230c      	movs	r3, #12
9002a82a:	6422      	str	r2, [r4, #64]	@ 0x40
9002a82c:	64e1      	str	r1, [r4, #76]	@ 0x4c
9002a82e:	65a1      	str	r1, [r4, #88]	@ 0x58
9002a830:	6662      	str	r2, [r4, #100]	@ 0x64
9002a832:	6722      	str	r2, [r4, #112]	@ 0x70
9002a834:	67e2      	str	r2, [r4, #124]	@ 0x7c
9002a836:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
9002a83a:	f8a4 308c 	strh.w	r3, [r4, #140]	@ 0x8c
9002a83e:	bd38      	pop	{r3, r4, r5, pc}
9002a840:	900305c4 	.word	0x900305c4
9002a844:	90030a60 	.word	0x90030a60
9002a848:	447a0000 	.word	0x447a0000

9002a84c <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
9002a84c:	b570      	push	{r4, r5, r6, lr}
9002a84e:	ed2d 8b04 	vpush	{d8-d9}
9002a852:	f5ad 7d50 	sub.w	sp, sp, #832	@ 0x340
9002a856:	8cc3      	ldrh	r3, [r0, #38]	@ 0x26
9002a858:	4604      	mov	r4, r0
9002a85a:	add0      	add	r5, sp, #832	@ 0x340
9002a85c:	f825 3d40 	strh.w	r3, [r5, #-64]!
9002a860:	4628      	mov	r0, r5
9002a862:	f7f3 fdb9 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9002a866:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
9002a868:	4606      	mov	r6, r0
9002a86a:	4628      	mov	r0, r5
9002a86c:	f8ad 3300 	strh.w	r3, [sp, #768]	@ 0x300
9002a870:	f7f3 fde6 	bl	9001e440 <_ZNK8touchgfx6Bitmap9getHeightEv>
9002a874:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002a878:	1c72      	adds	r2, r6, #1
9002a87a:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
9002a87e:	3001      	adds	r0, #1
9002a880:	ee07 2a90 	vmov	s15, r2
9002a884:	ed94 6a0b 	vldr	s12, [r4, #44]	@ 0x2c
9002a888:	ee76 5ac7 	vsub.f32	s11, s13, s14
9002a88c:	ee06 0a90 	vmov	s13, r0
9002a890:	ee36 6a47 	vsub.f32	s12, s12, s14
9002a894:	6da3      	ldr	r3, [r4, #88]	@ 0x58
9002a896:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9002a89a:	ed94 9a11 	vldr	s18, [r4, #68]	@ 0x44
9002a89e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9002a8a2:	9312      	str	r3, [sp, #72]	@ 0x48
9002a8a4:	9316      	str	r3, [sp, #88]	@ 0x58
9002a8a6:	a830      	add	r0, sp, #192	@ 0xc0
9002a8a8:	ee77 7a86 	vadd.f32	s15, s15, s12
9002a8ac:	931a      	str	r3, [sp, #104]	@ 0x68
9002a8ae:	ee76 6aa5 	vadd.f32	s13, s13, s11
9002a8b2:	931e      	str	r3, [sp, #120]	@ 0x78
9002a8b4:	2300      	movs	r3, #0
9002a8b6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9002a8ba:	edcd 5a11 	vstr	s11, [sp, #68]	@ 0x44
9002a8be:	ae70      	add	r6, sp, #448	@ 0x1c0
9002a8c0:	9320      	str	r3, [sp, #128]	@ 0x80
9002a8c2:	9321      	str	r3, [sp, #132]	@ 0x84
9002a8c4:	9322      	str	r3, [sp, #136]	@ 0x88
9002a8c6:	9324      	str	r3, [sp, #144]	@ 0x90
9002a8c8:	9325      	str	r3, [sp, #148]	@ 0x94
9002a8ca:	9326      	str	r3, [sp, #152]	@ 0x98
9002a8cc:	9328      	str	r3, [sp, #160]	@ 0xa0
9002a8ce:	9329      	str	r3, [sp, #164]	@ 0xa4
9002a8d0:	932a      	str	r3, [sp, #168]	@ 0xa8
9002a8d2:	932c      	str	r3, [sp, #176]	@ 0xb0
9002a8d4:	932d      	str	r3, [sp, #180]	@ 0xb4
9002a8d6:	932e      	str	r3, [sp, #184]	@ 0xb8
9002a8d8:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
9002a8dc:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
9002a8e0:	edcd 5a15 	vstr	s11, [sp, #84]	@ 0x54
9002a8e4:	ed8d 7a17 	vstr	s14, [sp, #92]	@ 0x5c
9002a8e8:	edcd 7a18 	vstr	s15, [sp, #96]	@ 0x60
9002a8ec:	edcd 6a19 	vstr	s13, [sp, #100]	@ 0x64
9002a8f0:	ed8d 7a1b 	vstr	s14, [sp, #108]	@ 0x6c
9002a8f4:	ed8d 6a1c 	vstr	s12, [sp, #112]	@ 0x70
9002a8f8:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
9002a8fc:	ed8d 7a1f 	vstr	s14, [sp, #124]	@ 0x7c
9002a900:	edd4 8a12 	vldr	s17, [r4, #72]	@ 0x48
9002a904:	ed94 8a13 	vldr	s16, [r4, #76]	@ 0x4c
9002a908:	f000 fcd6 	bl	9002b2b8 <_ZN8touchgfx9Matrix4x4C1Ev>
9002a90c:	eeb1 0a49 	vneg.f32	s0, s18
9002a910:	a830      	add	r0, sp, #192	@ 0xc0
9002a912:	f000 fda1 	bl	9002b458 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
9002a916:	eeb1 0a68 	vneg.f32	s0, s17
9002a91a:	f000 fdab 	bl	9002b474 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
9002a91e:	eeb1 0a48 	vneg.f32	s0, s16
9002a922:	f000 fdb6 	bl	9002b492 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
9002a926:	a840      	add	r0, sp, #256	@ 0x100
9002a928:	f000 fcc6 	bl	9002b2b8 <_ZN8touchgfx9Matrix4x4C1Ev>
9002a92c:	ed94 0a0d 	vldr	s0, [r4, #52]	@ 0x34
9002a930:	a840      	add	r0, sp, #256	@ 0x100
9002a932:	f000 fd15 	bl	9002b360 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
9002a936:	ed94 0a0e 	vldr	s0, [r4, #56]	@ 0x38
9002a93a:	f000 fd3b 	bl	9002b3b4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
9002a93e:	ed94 0a0f 	vldr	s0, [r4, #60]	@ 0x3c
9002a942:	f000 fd60 	bl	9002b406 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
9002a946:	a850      	add	r0, sp, #320	@ 0x140
9002a948:	f000 fcb6 	bl	9002b2b8 <_ZN8touchgfx9Matrix4x4C1Ev>
9002a94c:	ed94 0a10 	vldr	s0, [r4, #64]	@ 0x40
9002a950:	a850      	add	r0, sp, #320	@ 0x140
9002a952:	f000 fdad 	bl	9002b4b0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
9002a956:	ed94 0a10 	vldr	s0, [r4, #64]	@ 0x40
9002a95a:	f000 fdb5 	bl	9002b4c8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
9002a95e:	ed94 0a10 	vldr	s0, [r4, #64]	@ 0x40
9002a962:	f000 fdbe 	bl	9002b4e2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
9002a966:	a860      	add	r0, sp, #384	@ 0x180
9002a968:	f000 fca6 	bl	9002b2b8 <_ZN8touchgfx9Matrix4x4C1Ev>
9002a96c:	eeb0 0a49 	vmov.f32	s0, s18
9002a970:	a860      	add	r0, sp, #384	@ 0x180
9002a972:	f000 fd71 	bl	9002b458 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
9002a976:	eeb0 0a68 	vmov.f32	s0, s17
9002a97a:	f000 fd7b 	bl	9002b474 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
9002a97e:	eeb0 0a48 	vmov.f32	s0, s16
9002a982:	f000 fd86 	bl	9002b492 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
9002a986:	aa50      	add	r2, sp, #320	@ 0x140
9002a988:	a960      	add	r1, sp, #384	@ 0x180
9002a98a:	a8b0      	add	r0, sp, #704	@ 0x2c0
9002a98c:	f000 fcac 	bl	9002b2e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
9002a990:	4628      	mov	r0, r5
9002a992:	aa40      	add	r2, sp, #256	@ 0x100
9002a994:	a9b0      	add	r1, sp, #704	@ 0x2c0
9002a996:	f000 fca7 	bl	9002b2e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
9002a99a:	4629      	mov	r1, r5
9002a99c:	aa30      	add	r2, sp, #192	@ 0xc0
9002a99e:	a870      	add	r0, sp, #448	@ 0x1c0
9002a9a0:	f000 fca2 	bl	9002b2e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
9002a9a4:	a880      	add	r0, sp, #512	@ 0x200
9002a9a6:	f000 fc87 	bl	9002b2b8 <_ZN8touchgfx9Matrix4x4C1Ev>
9002a9aa:	ed94 0a14 	vldr	s0, [r4, #80]	@ 0x50
9002a9ae:	a880      	add	r0, sp, #512	@ 0x200
9002a9b0:	eeb1 0a40 	vneg.f32	s0, s0
9002a9b4:	f000 fd50 	bl	9002b458 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
9002a9b8:	ed94 0a15 	vldr	s0, [r4, #84]	@ 0x54
9002a9bc:	a880      	add	r0, sp, #512	@ 0x200
9002a9be:	eeb1 0a40 	vneg.f32	s0, s0
9002a9c2:	f000 fd57 	bl	9002b474 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
9002a9c6:	a890      	add	r0, sp, #576	@ 0x240
9002a9c8:	f000 fc76 	bl	9002b2b8 <_ZN8touchgfx9Matrix4x4C1Ev>
9002a9cc:	ed94 0a16 	vldr	s0, [r4, #88]	@ 0x58
9002a9d0:	a890      	add	r0, sp, #576	@ 0x240
9002a9d2:	f000 fcb5 	bl	9002b340 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
9002a9d6:	a8a0      	add	r0, sp, #640	@ 0x280
9002a9d8:	f000 fc6e 	bl	9002b2b8 <_ZN8touchgfx9Matrix4x4C1Ev>
9002a9dc:	ed94 0a14 	vldr	s0, [r4, #80]	@ 0x50
9002a9e0:	a8a0      	add	r0, sp, #640	@ 0x280
9002a9e2:	f000 fd39 	bl	9002b458 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
9002a9e6:	ed94 0a15 	vldr	s0, [r4, #84]	@ 0x54
9002a9ea:	f000 fd43 	bl	9002b474 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
9002a9ee:	aa90      	add	r2, sp, #576	@ 0x240
9002a9f0:	a9a0      	add	r1, sp, #640	@ 0x280
9002a9f2:	a8b0      	add	r0, sp, #704	@ 0x2c0
9002a9f4:	f000 fc78 	bl	9002b2e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
9002a9f8:	4628      	mov	r0, r5
9002a9fa:	aa80      	add	r2, sp, #512	@ 0x200
9002a9fc:	a9b0      	add	r1, sp, #704	@ 0x2c0
9002a9fe:	f000 fc73 	bl	9002b2e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
9002aa02:	4629      	mov	r1, r5
9002aa04:	466d      	mov	r5, sp
9002aa06:	aa70      	add	r2, sp, #448	@ 0x1c0
9002aa08:	4668      	mov	r0, sp
9002aa0a:	f000 fc6d 	bl	9002b2e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
9002aa0e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9002aa10:	c60f      	stmia	r6!, {r0, r1, r2, r3}
9002aa12:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9002aa14:	c60f      	stmia	r6!, {r0, r1, r2, r3}
9002aa16:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9002aa18:	c60f      	stmia	r6!, {r0, r1, r2, r3}
9002aa1a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
9002aa1e:	2500      	movs	r5, #0
9002aa20:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
9002aa24:	0129      	lsls	r1, r5, #4
9002aa26:	ab20      	add	r3, sp, #128	@ 0x80
9002aa28:	3501      	adds	r5, #1
9002aa2a:	a870      	add	r0, sp, #448	@ 0x1c0
9002aa2c:	185e      	adds	r6, r3, r1
9002aa2e:	ab10      	add	r3, sp, #64	@ 0x40
9002aa30:	4419      	add	r1, r3
9002aa32:	f000 fc11 	bl	9002b258 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
9002aa36:	2d04      	cmp	r5, #4
9002aa38:	ed86 0a00 	vstr	s0, [r6]
9002aa3c:	edc6 0a01 	vstr	s1, [r6, #4]
9002aa40:	ed86 1a02 	vstr	s2, [r6, #8]
9002aa44:	edc6 1a03 	vstr	s3, [r6, #12]
9002aa48:	d1ec      	bne.n	9002aa24 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
9002aa4a:	edd4 7a16 	vldr	s15, [r4, #88]	@ 0x58
9002aa4e:	eddd 6a20 	vldr	s13, [sp, #128]	@ 0x80
9002aa52:	ed9d 7a22 	vldr	s14, [sp, #136]	@ 0x88
9002aa56:	ee67 6aa6 	vmul.f32	s13, s15, s13
9002aa5a:	ed84 7a19 	vstr	s14, [r4, #100]	@ 0x64
9002aa5e:	ee86 6a87 	vdiv.f32	s12, s13, s14
9002aa62:	eddd 6a21 	vldr	s13, [sp, #132]	@ 0x84
9002aa66:	ee67 6aa6 	vmul.f32	s13, s15, s13
9002aa6a:	ed84 6a17 	vstr	s12, [r4, #92]	@ 0x5c
9002aa6e:	ee86 6a87 	vdiv.f32	s12, s13, s14
9002aa72:	eddd 6a24 	vldr	s13, [sp, #144]	@ 0x90
9002aa76:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
9002aa7a:	ed84 7a1c 	vstr	s14, [r4, #112]	@ 0x70
9002aa7e:	ee67 6aa6 	vmul.f32	s13, s15, s13
9002aa82:	ed84 6a18 	vstr	s12, [r4, #96]	@ 0x60
9002aa86:	ee86 6a87 	vdiv.f32	s12, s13, s14
9002aa8a:	eddd 6a25 	vldr	s13, [sp, #148]	@ 0x94
9002aa8e:	ee67 6aa6 	vmul.f32	s13, s15, s13
9002aa92:	ed84 6a1a 	vstr	s12, [r4, #104]	@ 0x68
9002aa96:	ee86 6a87 	vdiv.f32	s12, s13, s14
9002aa9a:	eddd 6a28 	vldr	s13, [sp, #160]	@ 0xa0
9002aa9e:	ed9d 7a2a 	vldr	s14, [sp, #168]	@ 0xa8
9002aaa2:	ed84 7a1f 	vstr	s14, [r4, #124]	@ 0x7c
9002aaa6:	ee67 6aa6 	vmul.f32	s13, s15, s13
9002aaaa:	ed84 6a1b 	vstr	s12, [r4, #108]	@ 0x6c
9002aaae:	ee86 6a87 	vdiv.f32	s12, s13, s14
9002aab2:	eddd 6a29 	vldr	s13, [sp, #164]	@ 0xa4
9002aab6:	ee67 6aa6 	vmul.f32	s13, s15, s13
9002aaba:	ed84 6a1d 	vstr	s12, [r4, #116]	@ 0x74
9002aabe:	ee86 6a87 	vdiv.f32	s12, s13, s14
9002aac2:	eddd 6a2c 	vldr	s13, [sp, #176]	@ 0xb0
9002aac6:	ed9d 7a2e 	vldr	s14, [sp, #184]	@ 0xb8
9002aaca:	ed84 7a22 	vstr	s14, [r4, #136]	@ 0x88
9002aace:	ee67 6aa6 	vmul.f32	s13, s15, s13
9002aad2:	ed84 6a1e 	vstr	s12, [r4, #120]	@ 0x78
9002aad6:	ee86 6a87 	vdiv.f32	s12, s13, s14
9002aada:	eddd 6a2d 	vldr	s13, [sp, #180]	@ 0xb4
9002aade:	ee67 7aa6 	vmul.f32	s15, s15, s13
9002aae2:	eec7 6a87 	vdiv.f32	s13, s15, s14
9002aae6:	ed84 6a20 	vstr	s12, [r4, #128]	@ 0x80
9002aaea:	edc4 6a21 	vstr	s13, [r4, #132]	@ 0x84
9002aaee:	f50d 7d50 	add.w	sp, sp, #832	@ 0x340
9002aaf2:	ecbd 8b04 	vpop	{d8-d9}
9002aaf6:	bd70      	pop	{r4, r5, r6, pc}

9002aaf8 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
9002aaf8:	b510      	push	{r4, lr}
9002aafa:	4604      	mov	r4, r0
9002aafc:	f7ed fca1 	bl	90018442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9002ab00:	4620      	mov	r0, r4
9002ab02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002ab06:	f7ff bea1 	b.w	9002a84c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

9002ab0a <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
9002ab0a:	ed80 0a0d 	vstr	s0, [r0, #52]	@ 0x34
9002ab0e:	edc0 0a0e 	vstr	s1, [r0, #56]	@ 0x38
9002ab12:	ed80 1a0f 	vstr	s2, [r0, #60]	@ 0x3c
9002ab16:	f7ff be99 	b.w	9002a84c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

9002ab1a <_ZN8touchgfx13TextureMapper8setScaleEf>:
9002ab1a:	ed80 0a10 	vstr	s0, [r0, #64]	@ 0x40
9002ab1e:	f7ff be95 	b.w	9002a84c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

9002ab22 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
9002ab22:	ed80 0a0b 	vstr	s0, [r0, #44]	@ 0x2c
9002ab26:	edc0 0a0c 	vstr	s1, [r0, #48]	@ 0x30
9002ab2a:	f7ff be8f 	b.w	9002a84c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

9002ab2e <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
9002ab2e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
9002ab32:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002ab36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ab3a:	fe30 0a27 	vselgt.f32	s0, s0, s15
9002ab3e:	ed80 0a16 	vstr	s0, [r0, #88]	@ 0x58
9002ab42:	f7ff be83 	b.w	9002a84c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

9002ab46 <_ZN8touchgfx13TextureMapper9setCameraEff>:
9002ab46:	ed80 0a14 	vstr	s0, [r0, #80]	@ 0x50
9002ab4a:	edc0 0a15 	vstr	s1, [r0, #84]	@ 0x54
9002ab4e:	f7ff be7d 	b.w	9002a84c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

9002ab52 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
9002ab52:	ed80 0a11 	vstr	s0, [r0, #68]	@ 0x44
9002ab56:	edc0 0a12 	vstr	s1, [r0, #72]	@ 0x48
9002ab5a:	f7ff be77 	b.w	9002a84c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

9002ab5e <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
9002ab5e:	ed80 0a11 	vstr	s0, [r0, #68]	@ 0x44
9002ab62:	edc0 0a12 	vstr	s1, [r0, #72]	@ 0x48
9002ab66:	ed80 1a13 	vstr	s2, [r0, #76]	@ 0x4c
9002ab6a:	f7ff be6f 	b.w	9002a84c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

9002ab6e <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
9002ab6e:	b510      	push	{r4, lr}
9002ab70:	edd1 5a1a 	vldr	s11, [r1, #104]	@ 0x68
9002ab74:	edd1 7a17 	vldr	s15, [r1, #92]	@ 0x5c
9002ab78:	ed91 6a1d 	vldr	s12, [r1, #116]	@ 0x74
9002ab7c:	eef4 7ae5 	vcmpe.f32	s15, s11
9002ab80:	edd1 6a20 	vldr	s13, [r1, #128]	@ 0x80
9002ab84:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
9002ab88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ab8c:	bf54      	ite	pl
9002ab8e:	eeb0 7a65 	vmovpl.f32	s14, s11
9002ab92:	eeb0 7a67 	vmovmi.f32	s14, s15
9002ab96:	eeb4 6ac7 	vcmpe.f32	s12, s14
9002ab9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ab9e:	fe37 7a06 	vselgt.f32	s14, s14, s12
9002aba2:	eef4 6ac7 	vcmpe.f32	s13, s14
9002aba6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002abaa:	fe37 7a26 	vselgt.f32	s14, s14, s13
9002abae:	febb 7a47 	vrintm.f32	s14, s14
9002abb2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9002abb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002abba:	eef4 7ae5 	vcmpe.f32	s15, s11
9002abbe:	bf56      	itet	pl
9002abc0:	eebd 7ac7 	vcvtpl.s32.f32	s14, s14
9002abc4:	2200      	movmi	r2, #0
9002abc6:	ee17 3a10 	vmovpl	r3, s14
9002abca:	ee07 4a10 	vmov	s14, r4
9002abce:	bf58      	it	pl
9002abd0:	b21a      	sxthpl	r2, r3
9002abd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002abd6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9002abda:	8002      	strh	r2, [r0, #0]
9002abdc:	fe77 7aa5 	vselgt.f32	s15, s15, s11
9002abe0:	eeb4 6ae7 	vcmpe.f32	s12, s15
9002abe4:	edd1 5a1b 	vldr	s11, [r1, #108]	@ 0x6c
9002abe8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002abec:	bf58      	it	pl
9002abee:	eef0 7a46 	vmovpl.f32	s15, s12
9002abf2:	ed91 6a1e 	vldr	s12, [r1, #120]	@ 0x78
9002abf6:	eef4 6ae7 	vcmpe.f32	s13, s15
9002abfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002abfe:	bf58      	it	pl
9002ac00:	eef0 7a66 	vmovpl.f32	s15, s13
9002ac04:	edd1 6a21 	vldr	s13, [r1, #132]	@ 0x84
9002ac08:	fefa 7a67 	vrintp.f32	s15, s15
9002ac0c:	eef4 7ac7 	vcmpe.f32	s15, s14
9002ac10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac14:	bfdc      	itt	le
9002ac16:	eefd 7ae7 	vcvtle.s32.f32	s15, s15
9002ac1a:	ee17 3a90 	vmovle	r3, s15
9002ac1e:	edd1 7a18 	vldr	s15, [r1, #96]	@ 0x60
9002ac22:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
9002ac26:	eef4 7ae5 	vcmpe.f32	s15, s11
9002ac2a:	bfd8      	it	le
9002ac2c:	b21c      	sxthle	r4, r3
9002ac2e:	1aa2      	subs	r2, r4, r2
9002ac30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac34:	8082      	strh	r2, [r0, #4]
9002ac36:	bf54      	ite	pl
9002ac38:	eeb0 7a65 	vmovpl.f32	s14, s11
9002ac3c:	eeb0 7a67 	vmovmi.f32	s14, s15
9002ac40:	eeb4 6ac7 	vcmpe.f32	s12, s14
9002ac44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac48:	fe37 7a06 	vselgt.f32	s14, s14, s12
9002ac4c:	eef4 6ac7 	vcmpe.f32	s13, s14
9002ac50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac54:	fe37 7a26 	vselgt.f32	s14, s14, s13
9002ac58:	febb 7a47 	vrintm.f32	s14, s14
9002ac5c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9002ac60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac64:	eef4 7ae5 	vcmpe.f32	s15, s11
9002ac68:	bf56      	itet	pl
9002ac6a:	eebd 7ac7 	vcvtpl.s32.f32	s14, s14
9002ac6e:	2300      	movmi	r3, #0
9002ac70:	ee17 3a10 	vmovpl	r3, s14
9002ac74:	ee07 1a10 	vmov	s14, r1
9002ac78:	bf58      	it	pl
9002ac7a:	b21b      	sxthpl	r3, r3
9002ac7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac80:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9002ac84:	8043      	strh	r3, [r0, #2]
9002ac86:	fe77 7aa5 	vselgt.f32	s15, s15, s11
9002ac8a:	eeb4 6ae7 	vcmpe.f32	s12, s15
9002ac8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002ac92:	bf58      	it	pl
9002ac94:	eef0 7a46 	vmovpl.f32	s15, s12
9002ac98:	eef4 6ae7 	vcmpe.f32	s13, s15
9002ac9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002aca0:	bf58      	it	pl
9002aca2:	eef0 7a66 	vmovpl.f32	s15, s13
9002aca6:	fefa 7a67 	vrintp.f32	s15, s15
9002acaa:	eef4 7ac7 	vcmpe.f32	s15, s14
9002acae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002acb2:	bfde      	ittt	le
9002acb4:	eefd 7ae7 	vcvtle.s32.f32	s15, s15
9002acb8:	ee17 1a90 	vmovle	r1, s15
9002acbc:	b209      	sxthle	r1, r1
9002acbe:	1acb      	subs	r3, r1, r3
9002acc0:	80c3      	strh	r3, [r0, #6]
9002acc2:	bd10      	pop	{r4, pc}

9002acc4 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
9002acc4:	b513      	push	{r0, r1, r4, lr}
9002acc6:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
9002acca:	4604      	mov	r4, r0
9002accc:	b143      	cbz	r3, 9002ace0 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
9002acce:	4601      	mov	r1, r0
9002acd0:	4668      	mov	r0, sp
9002acd2:	f7ff ff4c 	bl	9002ab6e <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
9002acd6:	6823      	ldr	r3, [r4, #0]
9002acd8:	4669      	mov	r1, sp
9002acda:	4620      	mov	r0, r4
9002acdc:	691b      	ldr	r3, [r3, #16]
9002acde:	4798      	blx	r3
9002ace0:	b002      	add	sp, #8
9002ace2:	bd10      	pop	{r4, pc}

9002ace4 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
9002ace4:	4603      	mov	r3, r0
9002ace6:	3026      	adds	r0, #38	@ 0x26
9002ace8:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
9002acec:	b90b      	cbnz	r3, 9002acf2 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
9002acee:	f7f1 b97b 	b.w	9001bfe8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
9002acf2:	f7f1 b989 	b.w	9001c008 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

9002acf8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
9002acf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002acfc:	4604      	mov	r4, r0
9002acfe:	469b      	mov	fp, r3
9002ad00:	ed2d 8b04 	vpush	{d8-d9}
9002ad04:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
9002ad08:	b0b3      	sub	sp, #204	@ 0xcc
9002ad0a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9002ad0e:	f9b1 6000 	ldrsh.w	r6, [r1]
9002ad12:	8888      	ldrh	r0, [r1, #4]
9002ad14:	9206      	str	r2, [sp, #24]
9002ad16:	2200      	movs	r2, #0
9002ad18:	4430      	add	r0, r6
9002ad1a:	f8dd a100 	ldr.w	sl, [sp, #256]	@ 0x100
9002ad1e:	f8dd 9104 	ldr.w	r9, [sp, #260]	@ 0x104
9002ad22:	b280      	uxth	r0, r0
9002ad24:	f8dd 8108 	ldr.w	r8, [sp, #264]	@ 0x108
9002ad28:	9f43      	ldr	r7, [sp, #268]	@ 0x10c
9002ad2a:	fa0f fe80 	sxth.w	lr, r0
9002ad2e:	9211      	str	r2, [sp, #68]	@ 0x44
9002ad30:	4596      	cmp	lr, r2
9002ad32:	f340 8129 	ble.w	9002af88 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
9002ad36:	45b4      	cmp	ip, r6
9002ad38:	f340 8126 	ble.w	9002af88 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
9002ad3c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
9002ad40:	88ca      	ldrh	r2, [r1, #6]
9002ad42:	442a      	add	r2, r5
9002ad44:	b292      	uxth	r2, r2
9002ad46:	b211      	sxth	r1, r2
9002ad48:	2900      	cmp	r1, #0
9002ad4a:	f340 811d 	ble.w	9002af88 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
9002ad4e:	42ab      	cmp	r3, r5
9002ad50:	f340 811a 	ble.w	9002af88 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
9002ad54:	45f4      	cmp	ip, lr
9002ad56:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
9002ad5a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9002ad5e:	bfb8      	it	lt
9002ad60:	fa1f f08c 	uxthlt.w	r0, ip
9002ad64:	428b      	cmp	r3, r1
9002ad66:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
9002ad6a:	bfb8      	it	lt
9002ad6c:	b29a      	uxthlt	r2, r3
9002ad6e:	1b80      	subs	r0, r0, r6
9002ad70:	f8ad 5046 	strh.w	r5, [sp, #70]	@ 0x46
9002ad74:	1b52      	subs	r2, r2, r5
9002ad76:	f8ad 0048 	strh.w	r0, [sp, #72]	@ 0x48
9002ad7a:	f8ad 204a 	strh.w	r2, [sp, #74]	@ 0x4a
9002ad7e:	ab11      	add	r3, sp, #68	@ 0x44
9002ad80:	ad13      	add	r5, sp, #76	@ 0x4c
9002ad82:	6822      	ldr	r2, [r4, #0]
9002ad84:	1d26      	adds	r6, r4, #4
9002ad86:	9307      	str	r3, [sp, #28]
9002ad88:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9002ad8a:	e893 0003 	ldmia.w	r3, {r0, r1}
9002ad8e:	e885 0003 	stmia.w	r5, {r0, r1}
9002ad92:	4629      	mov	r1, r5
9002ad94:	4620      	mov	r0, r4
9002ad96:	4790      	blx	r2
9002ad98:	4621      	mov	r1, r4
9002ad9a:	a815      	add	r0, sp, #84	@ 0x54
9002ad9c:	f7f1 f880 	bl	9001bea0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9002ada0:	a815      	add	r0, sp, #84	@ 0x54
9002ada2:	f7ef fd8d 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002ada6:	9b07      	ldr	r3, [sp, #28]
9002ada8:	4631      	mov	r1, r6
9002adaa:	4618      	mov	r0, r3
9002adac:	f7ef fdcc 	bl	9001a948 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002adb0:	4628      	mov	r0, r5
9002adb2:	f104 0526 	add.w	r5, r4, #38	@ 0x26
9002adb6:	f7ef fd83 	bl	9001a8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002adba:	4628      	mov	r0, r5
9002adbc:	f7f3 fbf8 	bl	9001e5b0 <_ZNK8touchgfx6Bitmap7getDataEv>
9002adc0:	9007      	str	r0, [sp, #28]
9002adc2:	2800      	cmp	r0, #0
9002adc4:	f000 80db 	beq.w	9002af7e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
9002adc8:	f8db 2000 	ldr.w	r2, [fp]
9002adcc:	a90d      	add	r1, sp, #52	@ 0x34
9002adce:	a809      	add	r0, sp, #36	@ 0x24
9002add0:	9209      	str	r2, [sp, #36]	@ 0x24
9002add2:	f8db 2004 	ldr.w	r2, [fp, #4]
9002add6:	920a      	str	r2, [sp, #40]	@ 0x28
9002add8:	f8db 2008 	ldr.w	r2, [fp, #8]
9002addc:	920b      	str	r2, [sp, #44]	@ 0x2c
9002adde:	f8db 200c 	ldr.w	r2, [fp, #12]
9002ade2:	920c      	str	r2, [sp, #48]	@ 0x30
9002ade4:	f8da 2000 	ldr.w	r2, [sl]
9002ade8:	920d      	str	r2, [sp, #52]	@ 0x34
9002adea:	f8da 2004 	ldr.w	r2, [sl, #4]
9002adee:	920e      	str	r2, [sp, #56]	@ 0x38
9002adf0:	f8da 2008 	ldr.w	r2, [sl, #8]
9002adf4:	920f      	str	r2, [sp, #60]	@ 0x3c
9002adf6:	f8da 200c 	ldr.w	r2, [sl, #12]
9002adfa:	9210      	str	r2, [sp, #64]	@ 0x40
9002adfc:	4632      	mov	r2, r6
9002adfe:	f7ef fd87 	bl	9001a910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9002ae02:	4632      	mov	r2, r6
9002ae04:	a90e      	add	r1, sp, #56	@ 0x38
9002ae06:	a80a      	add	r0, sp, #40	@ 0x28
9002ae08:	f7ef fd82 	bl	9001a910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9002ae0c:	4632      	mov	r2, r6
9002ae0e:	a90f      	add	r1, sp, #60	@ 0x3c
9002ae10:	a80b      	add	r0, sp, #44	@ 0x2c
9002ae12:	f7ef fd7d 	bl	9001a910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9002ae16:	4632      	mov	r2, r6
9002ae18:	a910      	add	r1, sp, #64	@ 0x40
9002ae1a:	a80c      	add	r0, sp, #48	@ 0x30
9002ae1c:	f7ef fd78 	bl	9001a910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9002ae20:	eddd 7a0d 	vldr	s15, [sp, #52]	@ 0x34
9002ae24:	edd7 4a00 	vldr	s9, [r7]
9002ae28:	eef0 6a67 	vmov.f32	s13, s15
9002ae2c:	eddd 7a0a 	vldr	s15, [sp, #40]	@ 0x28
9002ae30:	edd7 5a01 	vldr	s11, [r7, #4]
9002ae34:	eeb0 7a67 	vmov.f32	s14, s15
9002ae38:	eddd 7a0e 	vldr	s15, [sp, #56]	@ 0x38
9002ae3c:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
9002ae40:	ed98 4a00 	vldr	s8, [r8]
9002ae44:	eeb0 6a67 	vmov.f32	s12, s15
9002ae48:	eddd 7a0b 	vldr	s15, [sp, #44]	@ 0x2c
9002ae4c:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
9002ae50:	ed98 5a01 	vldr	s10, [r8, #4]
9002ae54:	ed99 9a00 	vldr	s18, [r9]
9002ae58:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9002ae5c:	ed99 8a01 	vldr	s16, [r9, #4]
9002ae60:	edd9 8a02 	vldr	s17, [r9, #8]
9002ae64:	f8d9 e00c 	ldr.w	lr, [r9, #12]
9002ae68:	ee16 6a10 	vmov	r6, s12
9002ae6c:	eeb0 6a67 	vmov.f32	s12, s15
9002ae70:	eddd 7a0f 	vldr	s15, [sp, #60]	@ 0x3c
9002ae74:	f8d8 c00c 	ldr.w	ip, [r8, #12]
9002ae78:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9002ae7c:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
9002ae80:	ed8d 4a21 	vstr	s8, [sp, #132]	@ 0x84
9002ae84:	edcd 4a22 	vstr	s9, [sp, #136]	@ 0x88
9002ae88:	ee16 0a10 	vmov	r0, s12
9002ae8c:	eeb0 6a67 	vmov.f32	s12, s15
9002ae90:	eddd 7a0c 	vldr	s15, [sp, #48]	@ 0x30
9002ae94:	ed8d 7a23 	vstr	s14, [sp, #140]	@ 0x8c
9002ae98:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9002ae9c:	ed8d 5a26 	vstr	s10, [sp, #152]	@ 0x98
9002aea0:	edcd 5a27 	vstr	s11, [sp, #156]	@ 0x9c
9002aea4:	f8d7 a008 	ldr.w	sl, [r7, #8]
9002aea8:	ee16 1a10 	vmov	r1, s12
9002aeac:	eeb0 6a67 	vmov.f32	s12, s15
9002aeb0:	eddd 7a10 	vldr	s15, [sp, #64]	@ 0x40
9002aeb4:	f8d8 b008 	ldr.w	fp, [r8, #8]
9002aeb8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9002aebc:	68ff      	ldr	r7, [r7, #12]
9002aebe:	9624      	str	r6, [sp, #144]	@ 0x90
9002aec0:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
9002aec4:	ed8d 9a20 	vstr	s18, [sp, #128]	@ 0x80
9002aec8:	ee16 2a10 	vmov	r2, s12
9002aecc:	ed9d 6a09 	vldr	s12, [sp, #36]	@ 0x24
9002aed0:	ed8d 8a25 	vstr	s16, [sp, #148]	@ 0x94
9002aed4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9002aed8:	e9cd 0128 	strd	r0, r1, [sp, #160]	@ 0xa0
9002aedc:	ed8d 6a1e 	vstr	s12, [sp, #120]	@ 0x78
9002aee0:	4628      	mov	r0, r5
9002aee2:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
9002aee6:	9b06      	ldr	r3, [sp, #24]
9002aee8:	922d      	str	r2, [sp, #180]	@ 0xb4
9002aeea:	4a29      	ldr	r2, [pc, #164]	@ (9002af90 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
9002aeec:	9317      	str	r3, [sp, #92]	@ 0x5c
9002aeee:	8812      	ldrh	r2, [r2, #0]
9002aef0:	9b07      	ldr	r3, [sp, #28]
9002aef2:	edcd 7a2e 	vstr	s15, [sp, #184]	@ 0xb8
9002aef6:	f8cd e0bc 	str.w	lr, [sp, #188]	@ 0xbc
9002aefa:	f8cd c0c0 	str.w	ip, [sp, #192]	@ 0xc0
9002aefe:	9218      	str	r2, [sp, #96]	@ 0x60
9002af00:	9319      	str	r3, [sp, #100]	@ 0x64
9002af02:	f8cd b0ac 	str.w	fp, [sp, #172]	@ 0xac
9002af06:	f8cd a0b0 	str.w	sl, [sp, #176]	@ 0xb0
9002af0a:	9731      	str	r7, [sp, #196]	@ 0xc4
9002af0c:	f7f3 fb80 	bl	9001e610 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9002af10:	901a      	str	r0, [sp, #104]	@ 0x68
9002af12:	4628      	mov	r0, r5
9002af14:	f7f3 fa60 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9002af18:	901b      	str	r0, [sp, #108]	@ 0x6c
9002af1a:	4628      	mov	r0, r5
9002af1c:	f7f3 fa90 	bl	9001e440 <_ZNK8touchgfx6Bitmap9getHeightEv>
9002af20:	901c      	str	r0, [sp, #112]	@ 0x70
9002af22:	4628      	mov	r0, r5
9002af24:	f7f3 fa58 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9002af28:	eeb4 9a48 	vcmp.f32	s18, s16
9002af2c:	901d      	str	r0, [sp, #116]	@ 0x74
9002af2e:	f8b4 608c 	ldrh.w	r6, [r4, #140]	@ 0x8c
9002af32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002af36:	d107      	bne.n	9002af48 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
9002af38:	eeb4 8a68 	vcmp.f32	s16, s17
9002af3c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
9002af40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002af44:	bf08      	it	eq
9002af46:	461e      	moveq	r6, r3
9002af48:	4b12      	ldr	r3, [pc, #72]	@ (9002af94 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
9002af4a:	681b      	ldr	r3, [r3, #0]
9002af4c:	f893 2076 	ldrb.w	r2, [r3, #118]	@ 0x76
9002af50:	b10a      	cbz	r2, 9002af56 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
9002af52:	6cdd      	ldr	r5, [r3, #76]	@ 0x4c
9002af54:	b905      	cbnz	r5, 9002af58 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
9002af56:	689d      	ldr	r5, [r3, #8]
9002af58:	682b      	ldr	r3, [r5, #0]
9002af5a:	4620      	mov	r0, r4
9002af5c:	6c1f      	ldr	r7, [r3, #64]	@ 0x40
9002af5e:	f7ff fec1 	bl	9002ace4 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
9002af62:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
9002af66:	aa1e      	add	r2, sp, #120	@ 0x78
9002af68:	9604      	str	r6, [sp, #16]
9002af6a:	a917      	add	r1, sp, #92	@ 0x5c
9002af6c:	e9cd 0302 	strd	r0, r3, [sp, #8]
9002af70:	ab13      	add	r3, sp, #76	@ 0x4c
9002af72:	4628      	mov	r0, r5
9002af74:	9301      	str	r3, [sp, #4]
9002af76:	ab15      	add	r3, sp, #84	@ 0x54
9002af78:	9300      	str	r3, [sp, #0]
9002af7a:	ab19      	add	r3, sp, #100	@ 0x64
9002af7c:	47b8      	blx	r7
9002af7e:	b033      	add	sp, #204	@ 0xcc
9002af80:	ecbd 8b04 	vpop	{d8-d9}
9002af84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002af88:	2300      	movs	r3, #0
9002af8a:	9312      	str	r3, [sp, #72]	@ 0x48
9002af8c:	e6f7      	b.n	9002ad7e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
9002af8e:	bf00      	nop
9002af90:	24027e96 	.word	0x24027e96
9002af94:	24027e9c 	.word	0x24027e9c

9002af98 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
9002af98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002af9c:	ed2d 8b02 	vpush	{d8}
9002afa0:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
9002afa4:	b098      	sub	sp, #96	@ 0x60
9002afa6:	4604      	mov	r4, r0
9002afa8:	4688      	mov	r8, r1
9002afaa:	2b00      	cmp	r3, #0
9002afac:	d077      	beq.n	9002b09e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
9002afae:	f100 0526 	add.w	r5, r0, #38	@ 0x26
9002afb2:	4628      	mov	r0, r5
9002afb4:	f7f3 fa10 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9002afb8:	ee07 0a90 	vmov	s15, r0
9002afbc:	4628      	mov	r0, r5
9002afbe:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
9002afc2:	f7f3 fa3d 	bl	9001e440 <_ZNK8touchgfx6Bitmap9getHeightEv>
9002afc6:	4b4e      	ldr	r3, [pc, #312]	@ (9002b100 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
9002afc8:	ee07 0a90 	vmov	s15, r0
9002afcc:	781b      	ldrb	r3, [r3, #0]
9002afce:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9002afd2:	eeff 7a00 	vmov.f32	s15, #240	@ 0xbf800000 -1.0
9002afd6:	2b01      	cmp	r3, #1
9002afd8:	d066      	beq.n	9002b0a8 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
9002afda:	eeb0 6a47 	vmov.f32	s12, s14
9002afde:	ee17 3a10 	vmov	r3, s14
9002afe2:	eeb0 4a48 	vmov.f32	s8, s16
9002afe6:	eeb0 7a48 	vmov.f32	s14, s16
9002afea:	eef0 4a67 	vmov.f32	s9, s15
9002afee:	eeb0 8a67 	vmov.f32	s16, s15
9002aff2:	ed94 5a17 	vldr	s10, [r4, #92]	@ 0x5c
9002aff6:	edd4 5a18 	vldr	s11, [r4, #96]	@ 0x60
9002affa:	ed94 3a1b 	vldr	s6, [r4, #108]	@ 0x6c
9002affe:	edd4 2a1d 	vldr	s5, [r4, #116]	@ 0x74
9002b002:	ee73 1a65 	vsub.f32	s3, s6, s11
9002b006:	ed94 2a1a 	vldr	s4, [r4, #104]	@ 0x68
9002b00a:	ee72 6ac5 	vsub.f32	s13, s5, s10
9002b00e:	edd4 3a1e 	vldr	s7, [r4, #120]	@ 0x78
9002b012:	ee32 1a45 	vsub.f32	s2, s4, s10
9002b016:	6f25      	ldr	r5, [r4, #112]	@ 0x70
9002b018:	6e66      	ldr	r6, [r4, #100]	@ 0x64
9002b01a:	ee66 6ae1 	vnmul.f32	s13, s13, s3
9002b01e:	6fe2      	ldr	r2, [r4, #124]	@ 0x7c
9002b020:	ee73 1ae5 	vsub.f32	s3, s7, s11
9002b024:	f8d4 c080 	ldr.w	ip, [r4, #128]	@ 0x80
9002b028:	f8d4 7084 	ldr.w	r7, [r4, #132]	@ 0x84
9002b02c:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9002b030:	eee1 6a21 	vfma.f32	s13, s2, s3
9002b034:	eef5 6ac0 	vcmpe.f32	s13, #0.0
9002b038:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b03c:	dd3d      	ble.n	9002b0ba <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
9002b03e:	ed8d 5a04 	vstr	s10, [sp, #16]
9002b042:	ed8d 2a05 	vstr	s4, [sp, #20]
9002b046:	edcd 2a06 	vstr	s5, [sp, #24]
9002b04a:	f8cd c01c 	str.w	ip, [sp, #28]
9002b04e:	edcd 5a08 	vstr	s11, [sp, #32]
9002b052:	ed8d 3a09 	vstr	s6, [sp, #36]	@ 0x24
9002b056:	edcd 3a0a 	vstr	s7, [sp, #40]	@ 0x28
9002b05a:	970b      	str	r7, [sp, #44]	@ 0x2c
9002b05c:	960c      	str	r6, [sp, #48]	@ 0x30
9002b05e:	950d      	str	r5, [sp, #52]	@ 0x34
9002b060:	920e      	str	r2, [sp, #56]	@ 0x38
9002b062:	900f      	str	r0, [sp, #60]	@ 0x3c
9002b064:	edcd 7a10 	vstr	s15, [sp, #64]	@ 0x40
9002b068:	ed8d 4a11 	vstr	s8, [sp, #68]	@ 0x44
9002b06c:	ed8d 7a12 	vstr	s14, [sp, #72]	@ 0x48
9002b070:	edcd 4a13 	vstr	s9, [sp, #76]	@ 0x4c
9002b074:	ed8d 8a14 	vstr	s16, [sp, #80]	@ 0x50
9002b078:	edcd 7a15 	vstr	s15, [sp, #84]	@ 0x54
9002b07c:	9316      	str	r3, [sp, #88]	@ 0x58
9002b07e:	ed8d 6a17 	vstr	s12, [sp, #92]	@ 0x5c
9002b082:	ab14      	add	r3, sp, #80	@ 0x50
9002b084:	2200      	movs	r2, #0
9002b086:	4641      	mov	r1, r8
9002b088:	4620      	mov	r0, r4
9002b08a:	9303      	str	r3, [sp, #12]
9002b08c:	ab10      	add	r3, sp, #64	@ 0x40
9002b08e:	9302      	str	r3, [sp, #8]
9002b090:	ab0c      	add	r3, sp, #48	@ 0x30
9002b092:	9301      	str	r3, [sp, #4]
9002b094:	ab08      	add	r3, sp, #32
9002b096:	9300      	str	r3, [sp, #0]
9002b098:	ab04      	add	r3, sp, #16
9002b09a:	f7ff fe2d 	bl	9002acf8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
9002b09e:	b018      	add	sp, #96	@ 0x60
9002b0a0:	ecbd 8b02 	vpop	{d8}
9002b0a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b0a8:	eeb0 6a48 	vmov.f32	s12, s16
9002b0ac:	ee17 3a90 	vmov	r3, s15
9002b0b0:	eef0 4a47 	vmov.f32	s9, s14
9002b0b4:	eeb0 4a67 	vmov.f32	s8, s15
9002b0b8:	e79b      	b.n	9002aff2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
9002b0ba:	ed8d 5a05 	vstr	s10, [sp, #20]
9002b0be:	ed8d 2a04 	vstr	s4, [sp, #16]
9002b0c2:	f8cd c018 	str.w	ip, [sp, #24]
9002b0c6:	edcd 2a07 	vstr	s5, [sp, #28]
9002b0ca:	edcd 5a09 	vstr	s11, [sp, #36]	@ 0x24
9002b0ce:	ed8d 3a08 	vstr	s6, [sp, #32]
9002b0d2:	970a      	str	r7, [sp, #40]	@ 0x28
9002b0d4:	edcd 3a0b 	vstr	s7, [sp, #44]	@ 0x2c
9002b0d8:	960d      	str	r6, [sp, #52]	@ 0x34
9002b0da:	950c      	str	r5, [sp, #48]	@ 0x30
9002b0dc:	900e      	str	r0, [sp, #56]	@ 0x38
9002b0de:	920f      	str	r2, [sp, #60]	@ 0x3c
9002b0e0:	edcd 7a11 	vstr	s15, [sp, #68]	@ 0x44
9002b0e4:	ed8d 4a10 	vstr	s8, [sp, #64]	@ 0x40
9002b0e8:	edcd 4a12 	vstr	s9, [sp, #72]	@ 0x48
9002b0ec:	ed8d 7a13 	vstr	s14, [sp, #76]	@ 0x4c
9002b0f0:	ed8d 8a15 	vstr	s16, [sp, #84]	@ 0x54
9002b0f4:	edcd 7a14 	vstr	s15, [sp, #80]	@ 0x50
9002b0f8:	ed8d 6a16 	vstr	s12, [sp, #88]	@ 0x58
9002b0fc:	9317      	str	r3, [sp, #92]	@ 0x5c
9002b0fe:	e7c0      	b.n	9002b082 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
9002b100:	24027e94 	.word	0x24027e94

9002b104 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
9002b104:	b570      	push	{r4, r5, r6, lr}
9002b106:	880b      	ldrh	r3, [r1, #0]
9002b108:	4605      	mov	r5, r0
9002b10a:	4604      	mov	r4, r0
9002b10c:	85c3      	strh	r3, [r0, #46]	@ 0x2e
9002b10e:	8813      	ldrh	r3, [r2, #0]
9002b110:	f825 3f30 	strh.w	r3, [r5, #48]!
9002b114:	4628      	mov	r0, r5
9002b116:	f7f3 f95f 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9002b11a:	4606      	mov	r6, r0
9002b11c:	4628      	mov	r0, r5
9002b11e:	f7f3 f98f 	bl	9001e440 <_ZNK8touchgfx6Bitmap9getHeightEv>
9002b122:	6823      	ldr	r3, [r4, #0]
9002b124:	4605      	mov	r5, r0
9002b126:	4631      	mov	r1, r6
9002b128:	4620      	mov	r0, r4
9002b12a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9002b12c:	4798      	blx	r3
9002b12e:	6823      	ldr	r3, [r4, #0]
9002b130:	4629      	mov	r1, r5
9002b132:	4620      	mov	r0, r4
9002b134:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9002b136:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9002b13a:	4718      	bx	r3

9002b13c <_ZNK8touchgfx6Button12getSolidRectEv>:
9002b13c:	b510      	push	{r4, lr}
9002b13e:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
9002b142:	4604      	mov	r4, r0
9002b144:	2bff      	cmp	r3, #255	@ 0xff
9002b146:	d006      	beq.n	9002b156 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
9002b148:	2300      	movs	r3, #0
9002b14a:	8003      	strh	r3, [r0, #0]
9002b14c:	8043      	strh	r3, [r0, #2]
9002b14e:	8083      	strh	r3, [r0, #4]
9002b150:	80c3      	strh	r3, [r0, #6]
9002b152:	4620      	mov	r0, r4
9002b154:	bd10      	pop	{r4, pc}
9002b156:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
9002b15a:	b11b      	cbz	r3, 9002b164 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
9002b15c:	3130      	adds	r1, #48	@ 0x30
9002b15e:	f7f3 f9a3 	bl	9001e4a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9002b162:	e7f6      	b.n	9002b152 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
9002b164:	312e      	adds	r1, #46	@ 0x2e
9002b166:	e7fa      	b.n	9002b15e <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

9002b168 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
9002b168:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002b16c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9002b170:	b08a      	sub	sp, #40	@ 0x28
9002b172:	4604      	mov	r4, r0
9002b174:	4688      	mov	r8, r1
9002b176:	2b00      	cmp	r3, #0
9002b178:	d066      	beq.n	9002b248 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
9002b17a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
9002b17c:	a805      	add	r0, sp, #20
9002b17e:	f8ad 3014 	strh.w	r3, [sp, #20]
9002b182:	f7f3 f929 	bl	9001e3d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9002b186:	4607      	mov	r7, r0
9002b188:	a805      	add	r0, sp, #20
9002b18a:	f7f3 f959 	bl	9001e440 <_ZNK8touchgfx6Bitmap9getHeightEv>
9002b18e:	f9b8 6000 	ldrsh.w	r6, [r8]
9002b192:	f8b8 2004 	ldrh.w	r2, [r8, #4]
9002b196:	2300      	movs	r3, #0
9002b198:	4432      	add	r2, r6
9002b19a:	9306      	str	r3, [sp, #24]
9002b19c:	b292      	uxth	r2, r2
9002b19e:	fa0f fc82 	sxth.w	ip, r2
9002b1a2:	459c      	cmp	ip, r3
9002b1a4:	dd52      	ble.n	9002b24c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9002b1a6:	42b7      	cmp	r7, r6
9002b1a8:	dd50      	ble.n	9002b24c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9002b1aa:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
9002b1ae:	f8b8 3006 	ldrh.w	r3, [r8, #6]
9002b1b2:	442b      	add	r3, r5
9002b1b4:	b29b      	uxth	r3, r3
9002b1b6:	b219      	sxth	r1, r3
9002b1b8:	2900      	cmp	r1, #0
9002b1ba:	dd47      	ble.n	9002b24c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9002b1bc:	42a8      	cmp	r0, r5
9002b1be:	dd45      	ble.n	9002b24c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9002b1c0:	4567      	cmp	r7, ip
9002b1c2:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
9002b1c6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9002b1ca:	bfb8      	it	lt
9002b1cc:	b2ba      	uxthlt	r2, r7
9002b1ce:	4288      	cmp	r0, r1
9002b1d0:	f8ad 6018 	strh.w	r6, [sp, #24]
9002b1d4:	bfb8      	it	lt
9002b1d6:	b283      	uxthlt	r3, r0
9002b1d8:	1b92      	subs	r2, r2, r6
9002b1da:	f8ad 501a 	strh.w	r5, [sp, #26]
9002b1de:	1b5b      	subs	r3, r3, r5
9002b1e0:	f8ad 201c 	strh.w	r2, [sp, #28]
9002b1e4:	f8ad 301e 	strh.w	r3, [sp, #30]
9002b1e8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
9002b1ec:	f64f 73ff 	movw	r3, #65535	@ 0xffff
9002b1f0:	429a      	cmp	r2, r3
9002b1f2:	d026      	beq.n	9002b242 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
9002b1f4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9002b1f8:	2b00      	cmp	r3, #0
9002b1fa:	dd22      	ble.n	9002b242 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
9002b1fc:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
9002b200:	2b00      	cmp	r3, #0
9002b202:	dd1e      	ble.n	9002b242 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
9002b204:	2300      	movs	r3, #0
9002b206:	a908      	add	r1, sp, #32
9002b208:	4620      	mov	r0, r4
9002b20a:	e9cd 3308 	strd	r3, r3, [sp, #32]
9002b20e:	6823      	ldr	r3, [r4, #0]
9002b210:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002b212:	4798      	blx	r3
9002b214:	4b0f      	ldr	r3, [pc, #60]	@ (9002b254 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
9002b216:	681b      	ldr	r3, [r3, #0]
9002b218:	f893 2076 	ldrb.w	r2, [r3, #118]	@ 0x76
9002b21c:	b10a      	cbz	r2, 9002b222 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
9002b21e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9002b220:	b900      	cbnz	r0, 9002b224 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
9002b222:	6898      	ldr	r0, [r3, #8]
9002b224:	2501      	movs	r5, #1
9002b226:	6801      	ldr	r1, [r0, #0]
9002b228:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9002b22c:	9502      	str	r5, [sp, #8]
9002b22e:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
9002b232:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9002b236:	9401      	str	r4, [sp, #4]
9002b238:	ac06      	add	r4, sp, #24
9002b23a:	9400      	str	r4, [sp, #0]
9002b23c:	688c      	ldr	r4, [r1, #8]
9002b23e:	a905      	add	r1, sp, #20
9002b240:	47a0      	blx	r4
9002b242:	b00a      	add	sp, #40	@ 0x28
9002b244:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b248:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
9002b24a:	e797      	b.n	9002b17c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
9002b24c:	2300      	movs	r3, #0
9002b24e:	9307      	str	r3, [sp, #28]
9002b250:	e7ca      	b.n	9002b1e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
9002b252:	bf00      	nop
9002b254:	24027e9c 	.word	0x24027e9c

9002b258 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
9002b258:	b5f0      	push	{r4, r5, r6, r7, lr}
9002b25a:	2300      	movs	r3, #0
9002b25c:	b08d      	sub	sp, #52	@ 0x34
9002b25e:	f100 0640 	add.w	r6, r0, #64	@ 0x40
9002b262:	f101 0710 	add.w	r7, r1, #16
9002b266:	9304      	str	r3, [sp, #16]
9002b268:	aa04      	add	r2, sp, #16
9002b26a:	9305      	str	r3, [sp, #20]
9002b26c:	9306      	str	r3, [sp, #24]
9002b26e:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
9002b272:	9307      	str	r3, [sp, #28]
9002b274:	4613      	mov	r3, r2
9002b276:	460c      	mov	r4, r1
9002b278:	4605      	mov	r5, r0
9002b27a:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 9002b2b4 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
9002b27e:	ecb4 7a01 	vldmia	r4!, {s14}
9002b282:	ecf5 6a01 	vldmia	r5!, {s13}
9002b286:	42bc      	cmp	r4, r7
9002b288:	eee6 7a87 	vfma.f32	s15, s13, s14
9002b28c:	d1f7      	bne.n	9002b27e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
9002b28e:	3010      	adds	r0, #16
9002b290:	ece2 7a01 	vstmia	r2!, {s15}
9002b294:	42b0      	cmp	r0, r6
9002b296:	d1ee      	bne.n	9002b276 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
9002b298:	ac0c      	add	r4, sp, #48	@ 0x30
9002b29a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9002b29c:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
9002b2a0:	ed9d 0a08 	vldr	s0, [sp, #32]
9002b2a4:	eddd 0a09 	vldr	s1, [sp, #36]	@ 0x24
9002b2a8:	ed9d 1a0a 	vldr	s2, [sp, #40]	@ 0x28
9002b2ac:	eddd 1a0b 	vldr	s3, [sp, #44]	@ 0x2c
9002b2b0:	b00d      	add	sp, #52	@ 0x34
9002b2b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002b2b4:	00000000 	.word	0x00000000

9002b2b8 <_ZN8touchgfx9Matrix4x4C1Ev>:
9002b2b8:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
9002b2bc:	2300      	movs	r3, #0
9002b2be:	ed9f 7a09 	vldr	s14, [pc, #36]	@ 9002b2e4 <_ZN8touchgfx9Matrix4x4C1Ev+0x2c>
9002b2c2:	eb00 1103 	add.w	r1, r0, r3, lsl #4
9002b2c6:	2200      	movs	r2, #0
9002b2c8:	4293      	cmp	r3, r2
9002b2ca:	f102 0201 	add.w	r2, r2, #1
9002b2ce:	fe47 6a87 	vseleq.f32	s13, s15, s14
9002b2d2:	2a04      	cmp	r2, #4
9002b2d4:	ece1 6a01 	vstmia	r1!, {s13}
9002b2d8:	d1f6      	bne.n	9002b2c8 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
9002b2da:	3301      	adds	r3, #1
9002b2dc:	2b04      	cmp	r3, #4
9002b2de:	d1f0      	bne.n	9002b2c2 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
9002b2e0:	4770      	bx	lr
9002b2e2:	bf00      	nop
9002b2e4:	00000000 	.word	0x00000000

9002b2e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
9002b2e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002b2ec:	460c      	mov	r4, r1
9002b2ee:	4605      	mov	r5, r0
9002b2f0:	4690      	mov	r8, r2
9002b2f2:	f7ff ffe1 	bl	9002b2b8 <_ZN8touchgfx9Matrix4x4C1Ev>
9002b2f6:	4628      	mov	r0, r5
9002b2f8:	4621      	mov	r1, r4
9002b2fa:	f104 0c40 	add.w	ip, r4, #64	@ 0x40
9002b2fe:	2300      	movs	r3, #0
9002b300:	eb08 0603 	add.w	r6, r8, r3
9002b304:	460f      	mov	r7, r1
9002b306:	2400      	movs	r4, #0
9002b308:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 9002b33c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x54>
9002b30c:	4632      	mov	r2, r6
9002b30e:	3401      	adds	r4, #1
9002b310:	ecf7 6a01 	vldmia	r7!, {s13}
9002b314:	3610      	adds	r6, #16
9002b316:	ed92 7a00 	vldr	s14, [r2]
9002b31a:	2c04      	cmp	r4, #4
9002b31c:	eee6 7a87 	vfma.f32	s15, s13, s14
9002b320:	d1f4      	bne.n	9002b30c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
9002b322:	18c2      	adds	r2, r0, r3
9002b324:	3304      	adds	r3, #4
9002b326:	2b10      	cmp	r3, #16
9002b328:	edc2 7a00 	vstr	s15, [r2]
9002b32c:	d1e8      	bne.n	9002b300 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
9002b32e:	3110      	adds	r1, #16
9002b330:	3010      	adds	r0, #16
9002b332:	4561      	cmp	r1, ip
9002b334:	d1e3      	bne.n	9002b2fe <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
9002b336:	4628      	mov	r0, r5
9002b338:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b33c:	00000000 	.word	0x00000000

9002b340 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
9002b340:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
9002b344:	f100 0320 	add.w	r3, r0, #32
9002b348:	3030      	adds	r0, #48	@ 0x30
9002b34a:	ee87 0a80 	vdiv.f32	s0, s15, s0
9002b34e:	ecf3 7a01 	vldmia	r3!, {s15}
9002b352:	4283      	cmp	r3, r0
9002b354:	ee60 7a27 	vmul.f32	s15, s0, s15
9002b358:	edc3 7a03 	vstr	s15, [r3, #12]
9002b35c:	d1f7      	bne.n	9002b34e <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
9002b35e:	4770      	bx	lr

9002b360 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
9002b360:	b510      	push	{r4, lr}
9002b362:	ed2d 8b02 	vpush	{d8}
9002b366:	eef0 8a40 	vmov.f32	s17, s0
9002b36a:	4604      	mov	r4, r0
9002b36c:	f000 f920 	bl	9002b5b0 <sinf>
9002b370:	eeb0 8a40 	vmov.f32	s16, s0
9002b374:	eeb0 0a68 	vmov.f32	s0, s17
9002b378:	f000 f9de 	bl	9002b738 <cosf>
9002b37c:	eeb1 6a48 	vneg.f32	s12, s16
9002b380:	f104 0310 	add.w	r3, r4, #16
9002b384:	f104 0220 	add.w	r2, r4, #32
9002b388:	edd3 7a04 	vldr	s15, [r3, #16]
9002b38c:	edd3 6a00 	vldr	s13, [r3]
9002b390:	ee26 7a27 	vmul.f32	s14, s12, s15
9002b394:	ee67 7a80 	vmul.f32	s15, s15, s0
9002b398:	eea6 7a80 	vfma.f32	s14, s13, s0
9002b39c:	eee6 7a88 	vfma.f32	s15, s13, s16
9002b3a0:	eca3 7a01 	vstmia	r3!, {s14}
9002b3a4:	429a      	cmp	r2, r3
9002b3a6:	edc3 7a03 	vstr	s15, [r3, #12]
9002b3aa:	d1ed      	bne.n	9002b388 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
9002b3ac:	4620      	mov	r0, r4
9002b3ae:	ecbd 8b02 	vpop	{d8}
9002b3b2:	bd10      	pop	{r4, pc}

9002b3b4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
9002b3b4:	b510      	push	{r4, lr}
9002b3b6:	ed2d 8b02 	vpush	{d8}
9002b3ba:	eef0 8a40 	vmov.f32	s17, s0
9002b3be:	4604      	mov	r4, r0
9002b3c0:	f000 f8f6 	bl	9002b5b0 <sinf>
9002b3c4:	eeb0 8a40 	vmov.f32	s16, s0
9002b3c8:	eeb0 0a68 	vmov.f32	s0, s17
9002b3cc:	f000 f9b4 	bl	9002b738 <cosf>
9002b3d0:	eeb1 6a48 	vneg.f32	s12, s16
9002b3d4:	4623      	mov	r3, r4
9002b3d6:	f104 0210 	add.w	r2, r4, #16
9002b3da:	edd3 7a08 	vldr	s15, [r3, #32]
9002b3de:	edd3 6a00 	vldr	s13, [r3]
9002b3e2:	ee27 7a88 	vmul.f32	s14, s15, s16
9002b3e6:	ee67 7a80 	vmul.f32	s15, s15, s0
9002b3ea:	eea6 7a80 	vfma.f32	s14, s13, s0
9002b3ee:	eee6 7a26 	vfma.f32	s15, s12, s13
9002b3f2:	eca3 7a01 	vstmia	r3!, {s14}
9002b3f6:	429a      	cmp	r2, r3
9002b3f8:	edc3 7a07 	vstr	s15, [r3, #28]
9002b3fc:	d1ed      	bne.n	9002b3da <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
9002b3fe:	4620      	mov	r0, r4
9002b400:	ecbd 8b02 	vpop	{d8}
9002b404:	bd10      	pop	{r4, pc}

9002b406 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
9002b406:	b510      	push	{r4, lr}
9002b408:	ed2d 8b02 	vpush	{d8}
9002b40c:	eef0 8a40 	vmov.f32	s17, s0
9002b410:	4604      	mov	r4, r0
9002b412:	f000 f8cd 	bl	9002b5b0 <sinf>
9002b416:	eeb0 8a40 	vmov.f32	s16, s0
9002b41a:	eeb0 0a68 	vmov.f32	s0, s17
9002b41e:	f000 f98b 	bl	9002b738 <cosf>
9002b422:	eeb1 6a48 	vneg.f32	s12, s16
9002b426:	4623      	mov	r3, r4
9002b428:	f104 0210 	add.w	r2, r4, #16
9002b42c:	edd3 7a04 	vldr	s15, [r3, #16]
9002b430:	edd3 6a00 	vldr	s13, [r3]
9002b434:	ee26 7a27 	vmul.f32	s14, s12, s15
9002b438:	ee67 7a80 	vmul.f32	s15, s15, s0
9002b43c:	eea6 7a80 	vfma.f32	s14, s13, s0
9002b440:	eee6 7a88 	vfma.f32	s15, s13, s16
9002b444:	eca3 7a01 	vstmia	r3!, {s14}
9002b448:	429a      	cmp	r2, r3
9002b44a:	edc3 7a03 	vstr	s15, [r3, #12]
9002b44e:	d1ed      	bne.n	9002b42c <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
9002b450:	4620      	mov	r0, r4
9002b452:	ecbd 8b02 	vpop	{d8}
9002b456:	bd10      	pop	{r4, pc}

9002b458 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
9002b458:	4603      	mov	r3, r0
9002b45a:	f100 0210 	add.w	r2, r0, #16
9002b45e:	ed93 7a0c 	vldr	s14, [r3, #48]	@ 0x30
9002b462:	edd3 7a00 	vldr	s15, [r3]
9002b466:	eee7 7a00 	vfma.f32	s15, s14, s0
9002b46a:	ece3 7a01 	vstmia	r3!, {s15}
9002b46e:	4293      	cmp	r3, r2
9002b470:	d1f5      	bne.n	9002b45e <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
9002b472:	4770      	bx	lr

9002b474 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
9002b474:	f100 0310 	add.w	r3, r0, #16
9002b478:	f100 0220 	add.w	r2, r0, #32
9002b47c:	ed93 7a08 	vldr	s14, [r3, #32]
9002b480:	edd3 7a00 	vldr	s15, [r3]
9002b484:	eee7 7a00 	vfma.f32	s15, s14, s0
9002b488:	ece3 7a01 	vstmia	r3!, {s15}
9002b48c:	4293      	cmp	r3, r2
9002b48e:	d1f5      	bne.n	9002b47c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
9002b490:	4770      	bx	lr

9002b492 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
9002b492:	f100 0320 	add.w	r3, r0, #32
9002b496:	f100 0230 	add.w	r2, r0, #48	@ 0x30
9002b49a:	ed93 7a04 	vldr	s14, [r3, #16]
9002b49e:	edd3 7a00 	vldr	s15, [r3]
9002b4a2:	eee7 7a00 	vfma.f32	s15, s14, s0
9002b4a6:	ece3 7a01 	vstmia	r3!, {s15}
9002b4aa:	4293      	cmp	r3, r2
9002b4ac:	d1f5      	bne.n	9002b49a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
9002b4ae:	4770      	bx	lr

9002b4b0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
9002b4b0:	4603      	mov	r3, r0
9002b4b2:	f100 0210 	add.w	r2, r0, #16
9002b4b6:	edd3 7a00 	vldr	s15, [r3]
9002b4ba:	ee67 7a80 	vmul.f32	s15, s15, s0
9002b4be:	ece3 7a01 	vstmia	r3!, {s15}
9002b4c2:	4293      	cmp	r3, r2
9002b4c4:	d1f7      	bne.n	9002b4b6 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
9002b4c6:	4770      	bx	lr

9002b4c8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
9002b4c8:	f100 0310 	add.w	r3, r0, #16
9002b4cc:	f100 0220 	add.w	r2, r0, #32
9002b4d0:	edd3 7a00 	vldr	s15, [r3]
9002b4d4:	ee67 7a80 	vmul.f32	s15, s15, s0
9002b4d8:	ece3 7a01 	vstmia	r3!, {s15}
9002b4dc:	4293      	cmp	r3, r2
9002b4de:	d1f7      	bne.n	9002b4d0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
9002b4e0:	4770      	bx	lr

9002b4e2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
9002b4e2:	f100 0320 	add.w	r3, r0, #32
9002b4e6:	f100 0230 	add.w	r2, r0, #48	@ 0x30
9002b4ea:	edd3 7a00 	vldr	s15, [r3]
9002b4ee:	ee67 7a80 	vmul.f32	s15, s15, s0
9002b4f2:	ece3 7a01 	vstmia	r3!, {s15}
9002b4f6:	4293      	cmp	r3, r2
9002b4f8:	d1f7      	bne.n	9002b4ea <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
9002b4fa:	4770      	bx	lr

9002b4fc <__aeabi_atexit>:
9002b4fc:	460b      	mov	r3, r1
9002b4fe:	4601      	mov	r1, r0
9002b500:	4618      	mov	r0, r3
9002b502:	f000 babf 	b.w	9002ba84 <__cxa_atexit>

9002b506 <_ZdlPvj>:
9002b506:	f000 b812 	b.w	9002b52e <_ZdlPv>

9002b50a <__cxa_guard_acquire>:
9002b50a:	6802      	ldr	r2, [r0, #0]
9002b50c:	07d2      	lsls	r2, r2, #31
9002b50e:	4603      	mov	r3, r0
9002b510:	d405      	bmi.n	9002b51e <__cxa_guard_acquire+0x14>
9002b512:	7842      	ldrb	r2, [r0, #1]
9002b514:	b102      	cbz	r2, 9002b518 <__cxa_guard_acquire+0xe>
9002b516:	deff      	udf	#255	@ 0xff
9002b518:	2001      	movs	r0, #1
9002b51a:	7058      	strb	r0, [r3, #1]
9002b51c:	4770      	bx	lr
9002b51e:	2000      	movs	r0, #0
9002b520:	4770      	bx	lr

9002b522 <__cxa_guard_release>:
9002b522:	2301      	movs	r3, #1
9002b524:	6003      	str	r3, [r0, #0]
9002b526:	4770      	bx	lr

9002b528 <__cxa_pure_virtual>:
9002b528:	b508      	push	{r3, lr}
9002b52a:	f000 f80f 	bl	9002b54c <_ZSt9terminatev>

9002b52e <_ZdlPv>:
9002b52e:	f000 b9f3 	b.w	9002b918 <free>

9002b532 <_ZN10__cxxabiv111__terminateEPFvvE>:
9002b532:	b508      	push	{r3, lr}
9002b534:	4780      	blx	r0
9002b536:	f000 f9bc 	bl	9002b8b2 <abort>
	...

9002b53c <_ZSt13get_terminatev>:
9002b53c:	4b02      	ldr	r3, [pc, #8]	@ (9002b548 <_ZSt13get_terminatev+0xc>)
9002b53e:	6818      	ldr	r0, [r3, #0]
9002b540:	f3bf 8f5b 	dmb	ish
9002b544:	4770      	bx	lr
9002b546:	bf00      	nop
9002b548:	240000dc 	.word	0x240000dc

9002b54c <_ZSt9terminatev>:
9002b54c:	b508      	push	{r3, lr}
9002b54e:	f7ff fff5 	bl	9002b53c <_ZSt13get_terminatev>
9002b552:	f7ff ffee 	bl	9002b532 <_ZN10__cxxabiv111__terminateEPFvvE>

9002b556 <sinf_poly>:
9002b556:	07cb      	lsls	r3, r1, #31
9002b558:	d412      	bmi.n	9002b580 <sinf_poly+0x2a>
9002b55a:	ee21 5b00 	vmul.f64	d5, d1, d0
9002b55e:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002b562:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
9002b566:	eea6 7b01 	vfma.f64	d7, d6, d1
9002b56a:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
9002b56e:	ee21 1b05 	vmul.f64	d1, d1, d5
9002b572:	eea6 0b05 	vfma.f64	d0, d6, d5
9002b576:	eea7 0b01 	vfma.f64	d0, d7, d1
9002b57a:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002b57e:	4770      	bx	lr
9002b580:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002b584:	ee21 5b01 	vmul.f64	d5, d1, d1
9002b588:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
9002b58c:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
9002b590:	eea1 7b06 	vfma.f64	d7, d1, d6
9002b594:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002b598:	eea1 0b06 	vfma.f64	d0, d1, d6
9002b59c:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002b5a0:	ee21 1b05 	vmul.f64	d1, d1, d5
9002b5a4:	eea5 0b06 	vfma.f64	d0, d5, d6
9002b5a8:	e7e5      	b.n	9002b576 <sinf_poly+0x20>
9002b5aa:	0000      	movs	r0, r0
9002b5ac:	0000      	movs	r0, r0
	...

9002b5b0 <sinf>:
9002b5b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
9002b5b2:	ee10 4a10 	vmov	r4, s0
9002b5b6:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002b5ba:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
9002b5be:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
9002b5c2:	eef0 7a40 	vmov.f32	s15, s0
9002b5c6:	ea4f 5214 	mov.w	r2, r4, lsr #20
9002b5ca:	d218      	bcs.n	9002b5fe <sinf+0x4e>
9002b5cc:	ee26 1b06 	vmul.f64	d1, d6, d6
9002b5d0:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
9002b5d4:	d20a      	bcs.n	9002b5ec <sinf+0x3c>
9002b5d6:	f412 6fff 	tst.w	r2, #2040	@ 0x7f8
9002b5da:	d103      	bne.n	9002b5e4 <sinf+0x34>
9002b5dc:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
9002b5e0:	ed8d 1a01 	vstr	s2, [sp, #4]
9002b5e4:	eeb0 0a67 	vmov.f32	s0, s15
9002b5e8:	b003      	add	sp, #12
9002b5ea:	bd30      	pop	{r4, r5, pc}
9002b5ec:	483a      	ldr	r0, [pc, #232]	@ (9002b6d8 <sinf+0x128>)
9002b5ee:	eeb0 0b46 	vmov.f64	d0, d6
9002b5f2:	2100      	movs	r1, #0
9002b5f4:	b003      	add	sp, #12
9002b5f6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002b5fa:	f7ff bfac 	b.w	9002b556 <sinf_poly>
9002b5fe:	f240 422e 	movw	r2, #1070	@ 0x42e
9002b602:	4293      	cmp	r3, r2
9002b604:	d824      	bhi.n	9002b650 <sinf+0xa0>
9002b606:	4b34      	ldr	r3, [pc, #208]	@ (9002b6d8 <sinf+0x128>)
9002b608:	ed93 7b08 	vldr	d7, [r3, #32]
9002b60c:	ee26 7b07 	vmul.f64	d7, d6, d7
9002b610:	eefd 7bc7 	vcvt.s32.f64	s15, d7
9002b614:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002b618:	ee17 1a90 	vmov	r1, s15
9002b61c:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002b620:	1609      	asrs	r1, r1, #24
9002b622:	ee07 1a90 	vmov	s15, r1
9002b626:	f001 0203 	and.w	r2, r1, #3
9002b62a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002b62e:	eeb8 5be7 	vcvt.f64.s32	d5, s15
9002b632:	ed92 0b00 	vldr	d0, [r2]
9002b636:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
9002b63a:	f011 0f02 	tst.w	r1, #2
9002b63e:	eea5 6b47 	vfms.f64	d6, d5, d7
9002b642:	bf08      	it	eq
9002b644:	4618      	moveq	r0, r3
9002b646:	ee26 1b06 	vmul.f64	d1, d6, d6
9002b64a:	ee20 0b06 	vmul.f64	d0, d0, d6
9002b64e:	e7d1      	b.n	9002b5f4 <sinf+0x44>
9002b650:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002b654:	d237      	bcs.n	9002b6c6 <sinf+0x116>
9002b656:	4921      	ldr	r1, [pc, #132]	@ (9002b6dc <sinf+0x12c>)
9002b658:	f3c4 6083 	ubfx	r0, r4, #26, #4
9002b65c:	eb01 0280 	add.w	r2, r1, r0, lsl #2
9002b660:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002b664:	f3c4 55c2 	ubfx	r5, r4, #23, #3
9002b668:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
9002b66c:	6a10      	ldr	r0, [r2, #32]
9002b66e:	6912      	ldr	r2, [r2, #16]
9002b670:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
9002b674:	40ab      	lsls	r3, r5
9002b676:	fba0 5003 	umull	r5, r0, r0, r3
9002b67a:	4359      	muls	r1, r3
9002b67c:	fbe3 0102 	umlal	r0, r1, r3, r2
9002b680:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
9002b684:	0f9d      	lsrs	r5, r3, #30
9002b686:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
9002b68a:	1ac9      	subs	r1, r1, r3
9002b68c:	f7d5 f806 	bl	9000069c <__aeabi_l2d>
9002b690:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002b694:	4b10      	ldr	r3, [pc, #64]	@ (9002b6d8 <sinf+0x128>)
9002b696:	f004 0203 	and.w	r2, r4, #3
9002b69a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002b69e:	ed9f 6b0c 	vldr	d6, [pc, #48]	@ 9002b6d0 <sinf+0x120>
9002b6a2:	ed92 0b00 	vldr	d0, [r2]
9002b6a6:	ec41 0b17 	vmov	d7, r0, r1
9002b6aa:	f014 0f02 	tst.w	r4, #2
9002b6ae:	ee27 7b06 	vmul.f64	d7, d7, d6
9002b6b2:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002b6b6:	4629      	mov	r1, r5
9002b6b8:	bf08      	it	eq
9002b6ba:	4618      	moveq	r0, r3
9002b6bc:	ee27 1b07 	vmul.f64	d1, d7, d7
9002b6c0:	ee20 0b07 	vmul.f64	d0, d0, d7
9002b6c4:	e796      	b.n	9002b5f4 <sinf+0x44>
9002b6c6:	b003      	add	sp, #12
9002b6c8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002b6cc:	f000 b8e2 	b.w	9002b894 <__math_invalidf>
9002b6d0:	54442d18 	.word	0x54442d18
9002b6d4:	3c1921fb 	.word	0x3c1921fb
9002b6d8:	90030bd0 	.word	0x90030bd0
9002b6dc:	90030b6c 	.word	0x90030b6c

9002b6e0 <sinf_poly>:
9002b6e0:	07cb      	lsls	r3, r1, #31
9002b6e2:	d412      	bmi.n	9002b70a <sinf_poly+0x2a>
9002b6e4:	ee21 5b00 	vmul.f64	d5, d1, d0
9002b6e8:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002b6ec:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
9002b6f0:	eea6 7b01 	vfma.f64	d7, d6, d1
9002b6f4:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
9002b6f8:	ee21 1b05 	vmul.f64	d1, d1, d5
9002b6fc:	eea6 0b05 	vfma.f64	d0, d6, d5
9002b700:	eea7 0b01 	vfma.f64	d0, d7, d1
9002b704:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002b708:	4770      	bx	lr
9002b70a:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002b70e:	ee21 5b01 	vmul.f64	d5, d1, d1
9002b712:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
9002b716:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
9002b71a:	eea1 7b06 	vfma.f64	d7, d1, d6
9002b71e:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002b722:	eea1 0b06 	vfma.f64	d0, d1, d6
9002b726:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002b72a:	ee21 1b05 	vmul.f64	d1, d1, d5
9002b72e:	eea5 0b06 	vfma.f64	d0, d5, d6
9002b732:	e7e5      	b.n	9002b700 <sinf_poly+0x20>
9002b734:	0000      	movs	r0, r0
	...

9002b738 <cosf>:
9002b738:	b538      	push	{r3, r4, r5, lr}
9002b73a:	ee10 4a10 	vmov	r4, s0
9002b73e:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002b742:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
9002b746:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
9002b74a:	d21f      	bcs.n	9002b78c <cosf+0x54>
9002b74c:	ee27 7b07 	vmul.f64	d7, d7, d7
9002b750:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
9002b754:	f0c0 8082 	bcc.w	9002b85c <cosf+0x124>
9002b758:	ee27 4b07 	vmul.f64	d4, d7, d7
9002b75c:	4b44      	ldr	r3, [pc, #272]	@ (9002b870 <cosf+0x138>)
9002b75e:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
9002b762:	ed93 6b12 	vldr	d6, [r3, #72]	@ 0x48
9002b766:	ed93 0b0c 	vldr	d0, [r3, #48]	@ 0x30
9002b76a:	eea7 6b05 	vfma.f64	d6, d7, d5
9002b76e:	ed93 5b0e 	vldr	d5, [r3, #56]	@ 0x38
9002b772:	eea7 0b05 	vfma.f64	d0, d7, d5
9002b776:	ed93 5b10 	vldr	d5, [r3, #64]	@ 0x40
9002b77a:	ee27 7b04 	vmul.f64	d7, d7, d4
9002b77e:	eea4 0b05 	vfma.f64	d0, d4, d5
9002b782:	eea6 0b07 	vfma.f64	d0, d6, d7
9002b786:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002b78a:	bd38      	pop	{r3, r4, r5, pc}
9002b78c:	f240 422e 	movw	r2, #1070	@ 0x42e
9002b790:	4293      	cmp	r3, r2
9002b792:	d829      	bhi.n	9002b7e8 <cosf+0xb0>
9002b794:	4b36      	ldr	r3, [pc, #216]	@ (9002b870 <cosf+0x138>)
9002b796:	ed93 6b08 	vldr	d6, [r3, #32]
9002b79a:	ee27 6b06 	vmul.f64	d6, d7, d6
9002b79e:	eefd 6bc6 	vcvt.s32.f64	s13, d6
9002b7a2:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002b7a6:	ee16 1a90 	vmov	r1, s13
9002b7aa:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002b7ae:	1609      	asrs	r1, r1, #24
9002b7b0:	ee06 1a90 	vmov	s13, r1
9002b7b4:	f001 0203 	and.w	r2, r1, #3
9002b7b8:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002b7bc:	eeb8 5be6 	vcvt.f64.s32	d5, s13
9002b7c0:	ed92 0b00 	vldr	d0, [r2]
9002b7c4:	ed93 6b0a 	vldr	d6, [r3, #40]	@ 0x28
9002b7c8:	f011 0f02 	tst.w	r1, #2
9002b7cc:	f081 0101 	eor.w	r1, r1, #1
9002b7d0:	eea5 7b46 	vfms.f64	d7, d5, d6
9002b7d4:	bf08      	it	eq
9002b7d6:	4618      	moveq	r0, r3
9002b7d8:	ee27 1b07 	vmul.f64	d1, d7, d7
9002b7dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002b7e0:	ee20 0b07 	vmul.f64	d0, d0, d7
9002b7e4:	f7ff bf7c 	b.w	9002b6e0 <sinf_poly>
9002b7e8:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002b7ec:	d232      	bcs.n	9002b854 <cosf+0x11c>
9002b7ee:	4921      	ldr	r1, [pc, #132]	@ (9002b874 <cosf+0x13c>)
9002b7f0:	f3c4 6083 	ubfx	r0, r4, #26, #4
9002b7f4:	eb01 0280 	add.w	r2, r1, r0, lsl #2
9002b7f8:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002b7fc:	f3c4 55c2 	ubfx	r5, r4, #23, #3
9002b800:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
9002b804:	6a10      	ldr	r0, [r2, #32]
9002b806:	6912      	ldr	r2, [r2, #16]
9002b808:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
9002b80c:	40ab      	lsls	r3, r5
9002b80e:	fba0 5003 	umull	r5, r0, r0, r3
9002b812:	4359      	muls	r1, r3
9002b814:	fbe3 0102 	umlal	r0, r1, r3, r2
9002b818:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
9002b81c:	0f9d      	lsrs	r5, r3, #30
9002b81e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
9002b822:	1ac9      	subs	r1, r1, r3
9002b824:	f7d4 ff3a 	bl	9000069c <__aeabi_l2d>
9002b828:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002b82c:	4b10      	ldr	r3, [pc, #64]	@ (9002b870 <cosf+0x138>)
9002b82e:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 9002b868 <cosf+0x130>
9002b832:	ec41 0b17 	vmov	d7, r0, r1
9002b836:	f004 0203 	and.w	r2, r4, #3
9002b83a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002b83e:	ed92 0b00 	vldr	d0, [r2]
9002b842:	ee27 7b06 	vmul.f64	d7, d7, d6
9002b846:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002b84a:	f014 0f02 	tst.w	r4, #2
9002b84e:	f085 0101 	eor.w	r1, r5, #1
9002b852:	e7bf      	b.n	9002b7d4 <cosf+0x9c>
9002b854:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002b858:	f000 b81c 	b.w	9002b894 <__math_invalidf>
9002b85c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
9002b860:	e793      	b.n	9002b78a <cosf+0x52>
9002b862:	bf00      	nop
9002b864:	f3af 8000 	nop.w
9002b868:	54442d18 	.word	0x54442d18
9002b86c:	3c1921fb 	.word	0x3c1921fb
9002b870:	90030bd0 	.word	0x90030bd0
9002b874:	90030b6c 	.word	0x90030b6c

9002b878 <with_errnof>:
9002b878:	b510      	push	{r4, lr}
9002b87a:	ed2d 8b02 	vpush	{d8}
9002b87e:	eeb0 8a40 	vmov.f32	s16, s0
9002b882:	4604      	mov	r4, r0
9002b884:	f000 fb6c 	bl	9002bf60 <__errno>
9002b888:	eeb0 0a48 	vmov.f32	s0, s16
9002b88c:	ecbd 8b02 	vpop	{d8}
9002b890:	6004      	str	r4, [r0, #0]
9002b892:	bd10      	pop	{r4, pc}

9002b894 <__math_invalidf>:
9002b894:	eef0 7a40 	vmov.f32	s15, s0
9002b898:	ee30 7a40 	vsub.f32	s14, s0, s0
9002b89c:	eef4 7a67 	vcmp.f32	s15, s15
9002b8a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b8a4:	ee87 0a07 	vdiv.f32	s0, s14, s14
9002b8a8:	d602      	bvs.n	9002b8b0 <__math_invalidf+0x1c>
9002b8aa:	2021      	movs	r0, #33	@ 0x21
9002b8ac:	f7ff bfe4 	b.w	9002b878 <with_errnof>
9002b8b0:	4770      	bx	lr

9002b8b2 <abort>:
9002b8b2:	b508      	push	{r3, lr}
9002b8b4:	2006      	movs	r0, #6
9002b8b6:	f000 fae1 	bl	9002be7c <raise>
9002b8ba:	2001      	movs	r0, #1
9002b8bc:	f7d6 f832 	bl	90001924 <_exit>

9002b8c0 <__assert_func>:
9002b8c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002b8c2:	4614      	mov	r4, r2
9002b8c4:	461a      	mov	r2, r3
9002b8c6:	4b09      	ldr	r3, [pc, #36]	@ (9002b8ec <__assert_func+0x2c>)
9002b8c8:	681b      	ldr	r3, [r3, #0]
9002b8ca:	4605      	mov	r5, r0
9002b8cc:	68d8      	ldr	r0, [r3, #12]
9002b8ce:	b954      	cbnz	r4, 9002b8e6 <__assert_func+0x26>
9002b8d0:	4b07      	ldr	r3, [pc, #28]	@ (9002b8f0 <__assert_func+0x30>)
9002b8d2:	461c      	mov	r4, r3
9002b8d4:	e9cd 3401 	strd	r3, r4, [sp, #4]
9002b8d8:	9100      	str	r1, [sp, #0]
9002b8da:	462b      	mov	r3, r5
9002b8dc:	4905      	ldr	r1, [pc, #20]	@ (9002b8f4 <__assert_func+0x34>)
9002b8de:	f000 f983 	bl	9002bbe8 <fiprintf>
9002b8e2:	f7ff ffe6 	bl	9002b8b2 <abort>
9002b8e6:	4b04      	ldr	r3, [pc, #16]	@ (9002b8f8 <__assert_func+0x38>)
9002b8e8:	e7f4      	b.n	9002b8d4 <__assert_func+0x14>
9002b8ea:	bf00      	nop
9002b8ec:	240000ec 	.word	0x240000ec
9002b8f0:	90030ceb 	.word	0x90030ceb
9002b8f4:	90030cbd 	.word	0x90030cbd
9002b8f8:	90030cb0 	.word	0x90030cb0

9002b8fc <atexit>:
9002b8fc:	2300      	movs	r3, #0
9002b8fe:	4601      	mov	r1, r0
9002b900:	461a      	mov	r2, r3
9002b902:	4618      	mov	r0, r3
9002b904:	f000 bb68 	b.w	9002bfd8 <__register_exitproc>

9002b908 <malloc>:
9002b908:	4b02      	ldr	r3, [pc, #8]	@ (9002b914 <malloc+0xc>)
9002b90a:	4601      	mov	r1, r0
9002b90c:	6818      	ldr	r0, [r3, #0]
9002b90e:	f000 b82d 	b.w	9002b96c <_malloc_r>
9002b912:	bf00      	nop
9002b914:	240000ec 	.word	0x240000ec

9002b918 <free>:
9002b918:	4b02      	ldr	r3, [pc, #8]	@ (9002b924 <free+0xc>)
9002b91a:	4601      	mov	r1, r0
9002b91c:	6818      	ldr	r0, [r3, #0]
9002b91e:	f000 bbb7 	b.w	9002c090 <_free_r>
9002b922:	bf00      	nop
9002b924:	240000ec 	.word	0x240000ec

9002b928 <sbrk_aligned>:
9002b928:	b570      	push	{r4, r5, r6, lr}
9002b92a:	4e0f      	ldr	r6, [pc, #60]	@ (9002b968 <sbrk_aligned+0x40>)
9002b92c:	460c      	mov	r4, r1
9002b92e:	6831      	ldr	r1, [r6, #0]
9002b930:	4605      	mov	r5, r0
9002b932:	b911      	cbnz	r1, 9002b93a <sbrk_aligned+0x12>
9002b934:	f000 faf2 	bl	9002bf1c <_sbrk_r>
9002b938:	6030      	str	r0, [r6, #0]
9002b93a:	4621      	mov	r1, r4
9002b93c:	4628      	mov	r0, r5
9002b93e:	f000 faed 	bl	9002bf1c <_sbrk_r>
9002b942:	1c43      	adds	r3, r0, #1
9002b944:	d103      	bne.n	9002b94e <sbrk_aligned+0x26>
9002b946:	f04f 34ff 	mov.w	r4, #4294967295
9002b94a:	4620      	mov	r0, r4
9002b94c:	bd70      	pop	{r4, r5, r6, pc}
9002b94e:	1cc4      	adds	r4, r0, #3
9002b950:	f024 0403 	bic.w	r4, r4, #3
9002b954:	42a0      	cmp	r0, r4
9002b956:	d0f8      	beq.n	9002b94a <sbrk_aligned+0x22>
9002b958:	1a21      	subs	r1, r4, r0
9002b95a:	4628      	mov	r0, r5
9002b95c:	f000 fade 	bl	9002bf1c <_sbrk_r>
9002b960:	3001      	adds	r0, #1
9002b962:	d1f2      	bne.n	9002b94a <sbrk_aligned+0x22>
9002b964:	e7ef      	b.n	9002b946 <sbrk_aligned+0x1e>
9002b966:	bf00      	nop
9002b968:	24027fa0 	.word	0x24027fa0

9002b96c <_malloc_r>:
9002b96c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002b970:	1ccd      	adds	r5, r1, #3
9002b972:	f025 0503 	bic.w	r5, r5, #3
9002b976:	3508      	adds	r5, #8
9002b978:	2d0c      	cmp	r5, #12
9002b97a:	bf38      	it	cc
9002b97c:	250c      	movcc	r5, #12
9002b97e:	2d00      	cmp	r5, #0
9002b980:	4606      	mov	r6, r0
9002b982:	db01      	blt.n	9002b988 <_malloc_r+0x1c>
9002b984:	42a9      	cmp	r1, r5
9002b986:	d904      	bls.n	9002b992 <_malloc_r+0x26>
9002b988:	230c      	movs	r3, #12
9002b98a:	6033      	str	r3, [r6, #0]
9002b98c:	2000      	movs	r0, #0
9002b98e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002b992:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 9002ba68 <_malloc_r+0xfc>
9002b996:	f000 f869 	bl	9002ba6c <__malloc_lock>
9002b99a:	f8d8 3000 	ldr.w	r3, [r8]
9002b99e:	461c      	mov	r4, r3
9002b9a0:	bb44      	cbnz	r4, 9002b9f4 <_malloc_r+0x88>
9002b9a2:	4629      	mov	r1, r5
9002b9a4:	4630      	mov	r0, r6
9002b9a6:	f7ff ffbf 	bl	9002b928 <sbrk_aligned>
9002b9aa:	1c43      	adds	r3, r0, #1
9002b9ac:	4604      	mov	r4, r0
9002b9ae:	d158      	bne.n	9002ba62 <_malloc_r+0xf6>
9002b9b0:	f8d8 4000 	ldr.w	r4, [r8]
9002b9b4:	4627      	mov	r7, r4
9002b9b6:	2f00      	cmp	r7, #0
9002b9b8:	d143      	bne.n	9002ba42 <_malloc_r+0xd6>
9002b9ba:	2c00      	cmp	r4, #0
9002b9bc:	d04b      	beq.n	9002ba56 <_malloc_r+0xea>
9002b9be:	6823      	ldr	r3, [r4, #0]
9002b9c0:	4639      	mov	r1, r7
9002b9c2:	4630      	mov	r0, r6
9002b9c4:	eb04 0903 	add.w	r9, r4, r3
9002b9c8:	f000 faa8 	bl	9002bf1c <_sbrk_r>
9002b9cc:	4581      	cmp	r9, r0
9002b9ce:	d142      	bne.n	9002ba56 <_malloc_r+0xea>
9002b9d0:	6821      	ldr	r1, [r4, #0]
9002b9d2:	1a6d      	subs	r5, r5, r1
9002b9d4:	4629      	mov	r1, r5
9002b9d6:	4630      	mov	r0, r6
9002b9d8:	f7ff ffa6 	bl	9002b928 <sbrk_aligned>
9002b9dc:	3001      	adds	r0, #1
9002b9de:	d03a      	beq.n	9002ba56 <_malloc_r+0xea>
9002b9e0:	6823      	ldr	r3, [r4, #0]
9002b9e2:	442b      	add	r3, r5
9002b9e4:	6023      	str	r3, [r4, #0]
9002b9e6:	f8d8 3000 	ldr.w	r3, [r8]
9002b9ea:	685a      	ldr	r2, [r3, #4]
9002b9ec:	bb62      	cbnz	r2, 9002ba48 <_malloc_r+0xdc>
9002b9ee:	f8c8 7000 	str.w	r7, [r8]
9002b9f2:	e00f      	b.n	9002ba14 <_malloc_r+0xa8>
9002b9f4:	6822      	ldr	r2, [r4, #0]
9002b9f6:	1b52      	subs	r2, r2, r5
9002b9f8:	d420      	bmi.n	9002ba3c <_malloc_r+0xd0>
9002b9fa:	2a0b      	cmp	r2, #11
9002b9fc:	d917      	bls.n	9002ba2e <_malloc_r+0xc2>
9002b9fe:	1961      	adds	r1, r4, r5
9002ba00:	42a3      	cmp	r3, r4
9002ba02:	6025      	str	r5, [r4, #0]
9002ba04:	bf18      	it	ne
9002ba06:	6059      	strne	r1, [r3, #4]
9002ba08:	6863      	ldr	r3, [r4, #4]
9002ba0a:	bf08      	it	eq
9002ba0c:	f8c8 1000 	streq.w	r1, [r8]
9002ba10:	5162      	str	r2, [r4, r5]
9002ba12:	604b      	str	r3, [r1, #4]
9002ba14:	4630      	mov	r0, r6
9002ba16:	f000 f82f 	bl	9002ba78 <__malloc_unlock>
9002ba1a:	f104 000b 	add.w	r0, r4, #11
9002ba1e:	1d23      	adds	r3, r4, #4
9002ba20:	f020 0007 	bic.w	r0, r0, #7
9002ba24:	1ac2      	subs	r2, r0, r3
9002ba26:	bf1c      	itt	ne
9002ba28:	1a1b      	subne	r3, r3, r0
9002ba2a:	50a3      	strne	r3, [r4, r2]
9002ba2c:	e7af      	b.n	9002b98e <_malloc_r+0x22>
9002ba2e:	6862      	ldr	r2, [r4, #4]
9002ba30:	42a3      	cmp	r3, r4
9002ba32:	bf0c      	ite	eq
9002ba34:	f8c8 2000 	streq.w	r2, [r8]
9002ba38:	605a      	strne	r2, [r3, #4]
9002ba3a:	e7eb      	b.n	9002ba14 <_malloc_r+0xa8>
9002ba3c:	4623      	mov	r3, r4
9002ba3e:	6864      	ldr	r4, [r4, #4]
9002ba40:	e7ae      	b.n	9002b9a0 <_malloc_r+0x34>
9002ba42:	463c      	mov	r4, r7
9002ba44:	687f      	ldr	r7, [r7, #4]
9002ba46:	e7b6      	b.n	9002b9b6 <_malloc_r+0x4a>
9002ba48:	461a      	mov	r2, r3
9002ba4a:	685b      	ldr	r3, [r3, #4]
9002ba4c:	42a3      	cmp	r3, r4
9002ba4e:	d1fb      	bne.n	9002ba48 <_malloc_r+0xdc>
9002ba50:	2300      	movs	r3, #0
9002ba52:	6053      	str	r3, [r2, #4]
9002ba54:	e7de      	b.n	9002ba14 <_malloc_r+0xa8>
9002ba56:	230c      	movs	r3, #12
9002ba58:	6033      	str	r3, [r6, #0]
9002ba5a:	4630      	mov	r0, r6
9002ba5c:	f000 f80c 	bl	9002ba78 <__malloc_unlock>
9002ba60:	e794      	b.n	9002b98c <_malloc_r+0x20>
9002ba62:	6005      	str	r5, [r0, #0]
9002ba64:	e7d6      	b.n	9002ba14 <_malloc_r+0xa8>
9002ba66:	bf00      	nop
9002ba68:	24027fa4 	.word	0x24027fa4

9002ba6c <__malloc_lock>:
9002ba6c:	4801      	ldr	r0, [pc, #4]	@ (9002ba74 <__malloc_lock+0x8>)
9002ba6e:	f000 baa2 	b.w	9002bfb6 <__retarget_lock_acquire_recursive>
9002ba72:	bf00      	nop
9002ba74:	240280e8 	.word	0x240280e8

9002ba78 <__malloc_unlock>:
9002ba78:	4801      	ldr	r0, [pc, #4]	@ (9002ba80 <__malloc_unlock+0x8>)
9002ba7a:	f000 ba9d 	b.w	9002bfb8 <__retarget_lock_release_recursive>
9002ba7e:	bf00      	nop
9002ba80:	240280e8 	.word	0x240280e8

9002ba84 <__cxa_atexit>:
9002ba84:	b510      	push	{r4, lr}
9002ba86:	4604      	mov	r4, r0
9002ba88:	4804      	ldr	r0, [pc, #16]	@ (9002ba9c <__cxa_atexit+0x18>)
9002ba8a:	4613      	mov	r3, r2
9002ba8c:	b120      	cbz	r0, 9002ba98 <__cxa_atexit+0x14>
9002ba8e:	460a      	mov	r2, r1
9002ba90:	2002      	movs	r0, #2
9002ba92:	4621      	mov	r1, r4
9002ba94:	f000 faa0 	bl	9002bfd8 <__register_exitproc>
9002ba98:	bd10      	pop	{r4, pc}
9002ba9a:	bf00      	nop
9002ba9c:	9002bfd9 	.word	0x9002bfd9

9002baa0 <std>:
9002baa0:	2300      	movs	r3, #0
9002baa2:	b510      	push	{r4, lr}
9002baa4:	4604      	mov	r4, r0
9002baa6:	e9c0 3300 	strd	r3, r3, [r0]
9002baaa:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002baae:	6083      	str	r3, [r0, #8]
9002bab0:	8181      	strh	r1, [r0, #12]
9002bab2:	6643      	str	r3, [r0, #100]	@ 0x64
9002bab4:	81c2      	strh	r2, [r0, #14]
9002bab6:	6183      	str	r3, [r0, #24]
9002bab8:	4619      	mov	r1, r3
9002baba:	2208      	movs	r2, #8
9002babc:	305c      	adds	r0, #92	@ 0x5c
9002babe:	f000 f99b 	bl	9002bdf8 <memset>
9002bac2:	4b0d      	ldr	r3, [pc, #52]	@ (9002baf8 <std+0x58>)
9002bac4:	6263      	str	r3, [r4, #36]	@ 0x24
9002bac6:	4b0d      	ldr	r3, [pc, #52]	@ (9002bafc <std+0x5c>)
9002bac8:	62a3      	str	r3, [r4, #40]	@ 0x28
9002baca:	4b0d      	ldr	r3, [pc, #52]	@ (9002bb00 <std+0x60>)
9002bacc:	62e3      	str	r3, [r4, #44]	@ 0x2c
9002bace:	4b0d      	ldr	r3, [pc, #52]	@ (9002bb04 <std+0x64>)
9002bad0:	6323      	str	r3, [r4, #48]	@ 0x30
9002bad2:	4b0d      	ldr	r3, [pc, #52]	@ (9002bb08 <std+0x68>)
9002bad4:	6224      	str	r4, [r4, #32]
9002bad6:	429c      	cmp	r4, r3
9002bad8:	d006      	beq.n	9002bae8 <std+0x48>
9002bada:	f103 0268 	add.w	r2, r3, #104	@ 0x68
9002bade:	4294      	cmp	r4, r2
9002bae0:	d002      	beq.n	9002bae8 <std+0x48>
9002bae2:	33d0      	adds	r3, #208	@ 0xd0
9002bae4:	429c      	cmp	r4, r3
9002bae6:	d105      	bne.n	9002baf4 <std+0x54>
9002bae8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
9002baec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002baf0:	f000 ba60 	b.w	9002bfb4 <__retarget_lock_init_recursive>
9002baf4:	bd10      	pop	{r4, pc}
9002baf6:	bf00      	nop
9002baf8:	9002bc49 	.word	0x9002bc49
9002bafc:	9002bc6b 	.word	0x9002bc6b
9002bb00:	9002bca3 	.word	0x9002bca3
9002bb04:	9002bcc7 	.word	0x9002bcc7
9002bb08:	24027fa8 	.word	0x24027fa8

9002bb0c <stdio_exit_handler>:
9002bb0c:	4a02      	ldr	r2, [pc, #8]	@ (9002bb18 <stdio_exit_handler+0xc>)
9002bb0e:	4903      	ldr	r1, [pc, #12]	@ (9002bb1c <stdio_exit_handler+0x10>)
9002bb10:	4803      	ldr	r0, [pc, #12]	@ (9002bb20 <stdio_exit_handler+0x14>)
9002bb12:	f000 b87b 	b.w	9002bc0c <_fwalk_sglue>
9002bb16:	bf00      	nop
9002bb18:	240000e0 	.word	0x240000e0
9002bb1c:	9002c7cd 	.word	0x9002c7cd
9002bb20:	240000f0 	.word	0x240000f0

9002bb24 <cleanup_stdio>:
9002bb24:	6841      	ldr	r1, [r0, #4]
9002bb26:	4b0c      	ldr	r3, [pc, #48]	@ (9002bb58 <cleanup_stdio+0x34>)
9002bb28:	4299      	cmp	r1, r3
9002bb2a:	b510      	push	{r4, lr}
9002bb2c:	4604      	mov	r4, r0
9002bb2e:	d001      	beq.n	9002bb34 <cleanup_stdio+0x10>
9002bb30:	f000 fe4c 	bl	9002c7cc <_fflush_r>
9002bb34:	68a1      	ldr	r1, [r4, #8]
9002bb36:	4b09      	ldr	r3, [pc, #36]	@ (9002bb5c <cleanup_stdio+0x38>)
9002bb38:	4299      	cmp	r1, r3
9002bb3a:	d002      	beq.n	9002bb42 <cleanup_stdio+0x1e>
9002bb3c:	4620      	mov	r0, r4
9002bb3e:	f000 fe45 	bl	9002c7cc <_fflush_r>
9002bb42:	68e1      	ldr	r1, [r4, #12]
9002bb44:	4b06      	ldr	r3, [pc, #24]	@ (9002bb60 <cleanup_stdio+0x3c>)
9002bb46:	4299      	cmp	r1, r3
9002bb48:	d004      	beq.n	9002bb54 <cleanup_stdio+0x30>
9002bb4a:	4620      	mov	r0, r4
9002bb4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002bb50:	f000 be3c 	b.w	9002c7cc <_fflush_r>
9002bb54:	bd10      	pop	{r4, pc}
9002bb56:	bf00      	nop
9002bb58:	24027fa8 	.word	0x24027fa8
9002bb5c:	24028010 	.word	0x24028010
9002bb60:	24028078 	.word	0x24028078

9002bb64 <global_stdio_init.part.0>:
9002bb64:	b510      	push	{r4, lr}
9002bb66:	4b0b      	ldr	r3, [pc, #44]	@ (9002bb94 <global_stdio_init.part.0+0x30>)
9002bb68:	4c0b      	ldr	r4, [pc, #44]	@ (9002bb98 <global_stdio_init.part.0+0x34>)
9002bb6a:	4a0c      	ldr	r2, [pc, #48]	@ (9002bb9c <global_stdio_init.part.0+0x38>)
9002bb6c:	601a      	str	r2, [r3, #0]
9002bb6e:	4620      	mov	r0, r4
9002bb70:	2200      	movs	r2, #0
9002bb72:	2104      	movs	r1, #4
9002bb74:	f7ff ff94 	bl	9002baa0 <std>
9002bb78:	f104 0068 	add.w	r0, r4, #104	@ 0x68
9002bb7c:	2201      	movs	r2, #1
9002bb7e:	2109      	movs	r1, #9
9002bb80:	f7ff ff8e 	bl	9002baa0 <std>
9002bb84:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
9002bb88:	2202      	movs	r2, #2
9002bb8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002bb8e:	2112      	movs	r1, #18
9002bb90:	f7ff bf86 	b.w	9002baa0 <std>
9002bb94:	240280e0 	.word	0x240280e0
9002bb98:	24027fa8 	.word	0x24027fa8
9002bb9c:	9002bb0d 	.word	0x9002bb0d

9002bba0 <__sfp_lock_acquire>:
9002bba0:	4801      	ldr	r0, [pc, #4]	@ (9002bba8 <__sfp_lock_acquire+0x8>)
9002bba2:	f000 ba08 	b.w	9002bfb6 <__retarget_lock_acquire_recursive>
9002bba6:	bf00      	nop
9002bba8:	240280ea 	.word	0x240280ea

9002bbac <__sfp_lock_release>:
9002bbac:	4801      	ldr	r0, [pc, #4]	@ (9002bbb4 <__sfp_lock_release+0x8>)
9002bbae:	f000 ba03 	b.w	9002bfb8 <__retarget_lock_release_recursive>
9002bbb2:	bf00      	nop
9002bbb4:	240280ea 	.word	0x240280ea

9002bbb8 <__sinit>:
9002bbb8:	b510      	push	{r4, lr}
9002bbba:	4604      	mov	r4, r0
9002bbbc:	f7ff fff0 	bl	9002bba0 <__sfp_lock_acquire>
9002bbc0:	6a23      	ldr	r3, [r4, #32]
9002bbc2:	b11b      	cbz	r3, 9002bbcc <__sinit+0x14>
9002bbc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002bbc8:	f7ff bff0 	b.w	9002bbac <__sfp_lock_release>
9002bbcc:	4b04      	ldr	r3, [pc, #16]	@ (9002bbe0 <__sinit+0x28>)
9002bbce:	6223      	str	r3, [r4, #32]
9002bbd0:	4b04      	ldr	r3, [pc, #16]	@ (9002bbe4 <__sinit+0x2c>)
9002bbd2:	681b      	ldr	r3, [r3, #0]
9002bbd4:	2b00      	cmp	r3, #0
9002bbd6:	d1f5      	bne.n	9002bbc4 <__sinit+0xc>
9002bbd8:	f7ff ffc4 	bl	9002bb64 <global_stdio_init.part.0>
9002bbdc:	e7f2      	b.n	9002bbc4 <__sinit+0xc>
9002bbde:	bf00      	nop
9002bbe0:	9002bb25 	.word	0x9002bb25
9002bbe4:	240280e0 	.word	0x240280e0

9002bbe8 <fiprintf>:
9002bbe8:	b40e      	push	{r1, r2, r3}
9002bbea:	b503      	push	{r0, r1, lr}
9002bbec:	4601      	mov	r1, r0
9002bbee:	ab03      	add	r3, sp, #12
9002bbf0:	4805      	ldr	r0, [pc, #20]	@ (9002bc08 <fiprintf+0x20>)
9002bbf2:	f853 2b04 	ldr.w	r2, [r3], #4
9002bbf6:	6800      	ldr	r0, [r0, #0]
9002bbf8:	9301      	str	r3, [sp, #4]
9002bbfa:	f000 fabd 	bl	9002c178 <_vfiprintf_r>
9002bbfe:	b002      	add	sp, #8
9002bc00:	f85d eb04 	ldr.w	lr, [sp], #4
9002bc04:	b003      	add	sp, #12
9002bc06:	4770      	bx	lr
9002bc08:	240000ec 	.word	0x240000ec

9002bc0c <_fwalk_sglue>:
9002bc0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002bc10:	4607      	mov	r7, r0
9002bc12:	4688      	mov	r8, r1
9002bc14:	4614      	mov	r4, r2
9002bc16:	2600      	movs	r6, #0
9002bc18:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
9002bc1c:	f1b9 0901 	subs.w	r9, r9, #1
9002bc20:	d505      	bpl.n	9002bc2e <_fwalk_sglue+0x22>
9002bc22:	6824      	ldr	r4, [r4, #0]
9002bc24:	2c00      	cmp	r4, #0
9002bc26:	d1f7      	bne.n	9002bc18 <_fwalk_sglue+0xc>
9002bc28:	4630      	mov	r0, r6
9002bc2a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002bc2e:	89ab      	ldrh	r3, [r5, #12]
9002bc30:	2b01      	cmp	r3, #1
9002bc32:	d907      	bls.n	9002bc44 <_fwalk_sglue+0x38>
9002bc34:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
9002bc38:	3301      	adds	r3, #1
9002bc3a:	d003      	beq.n	9002bc44 <_fwalk_sglue+0x38>
9002bc3c:	4629      	mov	r1, r5
9002bc3e:	4638      	mov	r0, r7
9002bc40:	47c0      	blx	r8
9002bc42:	4306      	orrs	r6, r0
9002bc44:	3568      	adds	r5, #104	@ 0x68
9002bc46:	e7e9      	b.n	9002bc1c <_fwalk_sglue+0x10>

9002bc48 <__sread>:
9002bc48:	b510      	push	{r4, lr}
9002bc4a:	460c      	mov	r4, r1
9002bc4c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002bc50:	f000 f93e 	bl	9002bed0 <_read_r>
9002bc54:	2800      	cmp	r0, #0
9002bc56:	bfab      	itete	ge
9002bc58:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
9002bc5a:	89a3      	ldrhlt	r3, [r4, #12]
9002bc5c:	181b      	addge	r3, r3, r0
9002bc5e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
9002bc62:	bfac      	ite	ge
9002bc64:	6563      	strge	r3, [r4, #84]	@ 0x54
9002bc66:	81a3      	strhlt	r3, [r4, #12]
9002bc68:	bd10      	pop	{r4, pc}

9002bc6a <__swrite>:
9002bc6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002bc6e:	461f      	mov	r7, r3
9002bc70:	898b      	ldrh	r3, [r1, #12]
9002bc72:	05db      	lsls	r3, r3, #23
9002bc74:	4605      	mov	r5, r0
9002bc76:	460c      	mov	r4, r1
9002bc78:	4616      	mov	r6, r2
9002bc7a:	d505      	bpl.n	9002bc88 <__swrite+0x1e>
9002bc7c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002bc80:	2302      	movs	r3, #2
9002bc82:	2200      	movs	r2, #0
9002bc84:	f000 f912 	bl	9002beac <_lseek_r>
9002bc88:	89a3      	ldrh	r3, [r4, #12]
9002bc8a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002bc8e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9002bc92:	81a3      	strh	r3, [r4, #12]
9002bc94:	4632      	mov	r2, r6
9002bc96:	463b      	mov	r3, r7
9002bc98:	4628      	mov	r0, r5
9002bc9a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002bc9e:	f000 b94d 	b.w	9002bf3c <_write_r>

9002bca2 <__sseek>:
9002bca2:	b510      	push	{r4, lr}
9002bca4:	460c      	mov	r4, r1
9002bca6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002bcaa:	f000 f8ff 	bl	9002beac <_lseek_r>
9002bcae:	1c43      	adds	r3, r0, #1
9002bcb0:	89a3      	ldrh	r3, [r4, #12]
9002bcb2:	bf15      	itete	ne
9002bcb4:	6560      	strne	r0, [r4, #84]	@ 0x54
9002bcb6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
9002bcba:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
9002bcbe:	81a3      	strheq	r3, [r4, #12]
9002bcc0:	bf18      	it	ne
9002bcc2:	81a3      	strhne	r3, [r4, #12]
9002bcc4:	bd10      	pop	{r4, pc}

9002bcc6 <__sclose>:
9002bcc6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002bcca:	f000 b8df 	b.w	9002be8c <_close_r>

9002bcce <__swbuf_r>:
9002bcce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002bcd0:	460e      	mov	r6, r1
9002bcd2:	4614      	mov	r4, r2
9002bcd4:	4605      	mov	r5, r0
9002bcd6:	b118      	cbz	r0, 9002bce0 <__swbuf_r+0x12>
9002bcd8:	6a03      	ldr	r3, [r0, #32]
9002bcda:	b90b      	cbnz	r3, 9002bce0 <__swbuf_r+0x12>
9002bcdc:	f7ff ff6c 	bl	9002bbb8 <__sinit>
9002bce0:	69a3      	ldr	r3, [r4, #24]
9002bce2:	60a3      	str	r3, [r4, #8]
9002bce4:	89a3      	ldrh	r3, [r4, #12]
9002bce6:	071a      	lsls	r2, r3, #28
9002bce8:	d501      	bpl.n	9002bcee <__swbuf_r+0x20>
9002bcea:	6923      	ldr	r3, [r4, #16]
9002bcec:	b943      	cbnz	r3, 9002bd00 <__swbuf_r+0x32>
9002bcee:	4621      	mov	r1, r4
9002bcf0:	4628      	mov	r0, r5
9002bcf2:	f000 f82b 	bl	9002bd4c <__swsetup_r>
9002bcf6:	b118      	cbz	r0, 9002bd00 <__swbuf_r+0x32>
9002bcf8:	f04f 37ff 	mov.w	r7, #4294967295
9002bcfc:	4638      	mov	r0, r7
9002bcfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002bd00:	6823      	ldr	r3, [r4, #0]
9002bd02:	6922      	ldr	r2, [r4, #16]
9002bd04:	1a98      	subs	r0, r3, r2
9002bd06:	6963      	ldr	r3, [r4, #20]
9002bd08:	b2f6      	uxtb	r6, r6
9002bd0a:	4283      	cmp	r3, r0
9002bd0c:	4637      	mov	r7, r6
9002bd0e:	dc05      	bgt.n	9002bd1c <__swbuf_r+0x4e>
9002bd10:	4621      	mov	r1, r4
9002bd12:	4628      	mov	r0, r5
9002bd14:	f000 fd5a 	bl	9002c7cc <_fflush_r>
9002bd18:	2800      	cmp	r0, #0
9002bd1a:	d1ed      	bne.n	9002bcf8 <__swbuf_r+0x2a>
9002bd1c:	68a3      	ldr	r3, [r4, #8]
9002bd1e:	3b01      	subs	r3, #1
9002bd20:	60a3      	str	r3, [r4, #8]
9002bd22:	6823      	ldr	r3, [r4, #0]
9002bd24:	1c5a      	adds	r2, r3, #1
9002bd26:	6022      	str	r2, [r4, #0]
9002bd28:	701e      	strb	r6, [r3, #0]
9002bd2a:	6962      	ldr	r2, [r4, #20]
9002bd2c:	1c43      	adds	r3, r0, #1
9002bd2e:	429a      	cmp	r2, r3
9002bd30:	d004      	beq.n	9002bd3c <__swbuf_r+0x6e>
9002bd32:	89a3      	ldrh	r3, [r4, #12]
9002bd34:	07db      	lsls	r3, r3, #31
9002bd36:	d5e1      	bpl.n	9002bcfc <__swbuf_r+0x2e>
9002bd38:	2e0a      	cmp	r6, #10
9002bd3a:	d1df      	bne.n	9002bcfc <__swbuf_r+0x2e>
9002bd3c:	4621      	mov	r1, r4
9002bd3e:	4628      	mov	r0, r5
9002bd40:	f000 fd44 	bl	9002c7cc <_fflush_r>
9002bd44:	2800      	cmp	r0, #0
9002bd46:	d0d9      	beq.n	9002bcfc <__swbuf_r+0x2e>
9002bd48:	e7d6      	b.n	9002bcf8 <__swbuf_r+0x2a>
	...

9002bd4c <__swsetup_r>:
9002bd4c:	b538      	push	{r3, r4, r5, lr}
9002bd4e:	4b29      	ldr	r3, [pc, #164]	@ (9002bdf4 <__swsetup_r+0xa8>)
9002bd50:	4605      	mov	r5, r0
9002bd52:	6818      	ldr	r0, [r3, #0]
9002bd54:	460c      	mov	r4, r1
9002bd56:	b118      	cbz	r0, 9002bd60 <__swsetup_r+0x14>
9002bd58:	6a03      	ldr	r3, [r0, #32]
9002bd5a:	b90b      	cbnz	r3, 9002bd60 <__swsetup_r+0x14>
9002bd5c:	f7ff ff2c 	bl	9002bbb8 <__sinit>
9002bd60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002bd64:	0719      	lsls	r1, r3, #28
9002bd66:	d422      	bmi.n	9002bdae <__swsetup_r+0x62>
9002bd68:	06da      	lsls	r2, r3, #27
9002bd6a:	d407      	bmi.n	9002bd7c <__swsetup_r+0x30>
9002bd6c:	2209      	movs	r2, #9
9002bd6e:	602a      	str	r2, [r5, #0]
9002bd70:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002bd74:	81a3      	strh	r3, [r4, #12]
9002bd76:	f04f 30ff 	mov.w	r0, #4294967295
9002bd7a:	e033      	b.n	9002bde4 <__swsetup_r+0x98>
9002bd7c:	0758      	lsls	r0, r3, #29
9002bd7e:	d512      	bpl.n	9002bda6 <__swsetup_r+0x5a>
9002bd80:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002bd82:	b141      	cbz	r1, 9002bd96 <__swsetup_r+0x4a>
9002bd84:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002bd88:	4299      	cmp	r1, r3
9002bd8a:	d002      	beq.n	9002bd92 <__swsetup_r+0x46>
9002bd8c:	4628      	mov	r0, r5
9002bd8e:	f000 f97f 	bl	9002c090 <_free_r>
9002bd92:	2300      	movs	r3, #0
9002bd94:	6363      	str	r3, [r4, #52]	@ 0x34
9002bd96:	89a3      	ldrh	r3, [r4, #12]
9002bd98:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
9002bd9c:	81a3      	strh	r3, [r4, #12]
9002bd9e:	2300      	movs	r3, #0
9002bda0:	6063      	str	r3, [r4, #4]
9002bda2:	6923      	ldr	r3, [r4, #16]
9002bda4:	6023      	str	r3, [r4, #0]
9002bda6:	89a3      	ldrh	r3, [r4, #12]
9002bda8:	f043 0308 	orr.w	r3, r3, #8
9002bdac:	81a3      	strh	r3, [r4, #12]
9002bdae:	6923      	ldr	r3, [r4, #16]
9002bdb0:	b94b      	cbnz	r3, 9002bdc6 <__swsetup_r+0x7a>
9002bdb2:	89a3      	ldrh	r3, [r4, #12]
9002bdb4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
9002bdb8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
9002bdbc:	d003      	beq.n	9002bdc6 <__swsetup_r+0x7a>
9002bdbe:	4621      	mov	r1, r4
9002bdc0:	4628      	mov	r0, r5
9002bdc2:	f000 fd51 	bl	9002c868 <__smakebuf_r>
9002bdc6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002bdca:	f013 0201 	ands.w	r2, r3, #1
9002bdce:	d00a      	beq.n	9002bde6 <__swsetup_r+0x9a>
9002bdd0:	2200      	movs	r2, #0
9002bdd2:	60a2      	str	r2, [r4, #8]
9002bdd4:	6962      	ldr	r2, [r4, #20]
9002bdd6:	4252      	negs	r2, r2
9002bdd8:	61a2      	str	r2, [r4, #24]
9002bdda:	6922      	ldr	r2, [r4, #16]
9002bddc:	b942      	cbnz	r2, 9002bdf0 <__swsetup_r+0xa4>
9002bdde:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
9002bde2:	d1c5      	bne.n	9002bd70 <__swsetup_r+0x24>
9002bde4:	bd38      	pop	{r3, r4, r5, pc}
9002bde6:	0799      	lsls	r1, r3, #30
9002bde8:	bf58      	it	pl
9002bdea:	6962      	ldrpl	r2, [r4, #20]
9002bdec:	60a2      	str	r2, [r4, #8]
9002bdee:	e7f4      	b.n	9002bdda <__swsetup_r+0x8e>
9002bdf0:	2000      	movs	r0, #0
9002bdf2:	e7f7      	b.n	9002bde4 <__swsetup_r+0x98>
9002bdf4:	240000ec 	.word	0x240000ec

9002bdf8 <memset>:
9002bdf8:	4402      	add	r2, r0
9002bdfa:	4603      	mov	r3, r0
9002bdfc:	4293      	cmp	r3, r2
9002bdfe:	d100      	bne.n	9002be02 <memset+0xa>
9002be00:	4770      	bx	lr
9002be02:	f803 1b01 	strb.w	r1, [r3], #1
9002be06:	e7f9      	b.n	9002bdfc <memset+0x4>

9002be08 <strncmp>:
9002be08:	b510      	push	{r4, lr}
9002be0a:	b16a      	cbz	r2, 9002be28 <strncmp+0x20>
9002be0c:	3901      	subs	r1, #1
9002be0e:	1884      	adds	r4, r0, r2
9002be10:	f810 2b01 	ldrb.w	r2, [r0], #1
9002be14:	f811 3f01 	ldrb.w	r3, [r1, #1]!
9002be18:	429a      	cmp	r2, r3
9002be1a:	d103      	bne.n	9002be24 <strncmp+0x1c>
9002be1c:	42a0      	cmp	r0, r4
9002be1e:	d001      	beq.n	9002be24 <strncmp+0x1c>
9002be20:	2a00      	cmp	r2, #0
9002be22:	d1f5      	bne.n	9002be10 <strncmp+0x8>
9002be24:	1ad0      	subs	r0, r2, r3
9002be26:	bd10      	pop	{r4, pc}
9002be28:	4610      	mov	r0, r2
9002be2a:	e7fc      	b.n	9002be26 <strncmp+0x1e>

9002be2c <_raise_r>:
9002be2c:	291f      	cmp	r1, #31
9002be2e:	b538      	push	{r3, r4, r5, lr}
9002be30:	4605      	mov	r5, r0
9002be32:	460c      	mov	r4, r1
9002be34:	d904      	bls.n	9002be40 <_raise_r+0x14>
9002be36:	2316      	movs	r3, #22
9002be38:	6003      	str	r3, [r0, #0]
9002be3a:	f04f 30ff 	mov.w	r0, #4294967295
9002be3e:	bd38      	pop	{r3, r4, r5, pc}
9002be40:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
9002be42:	b112      	cbz	r2, 9002be4a <_raise_r+0x1e>
9002be44:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
9002be48:	b94b      	cbnz	r3, 9002be5e <_raise_r+0x32>
9002be4a:	4628      	mov	r0, r5
9002be4c:	f000 f864 	bl	9002bf18 <_getpid_r>
9002be50:	4622      	mov	r2, r4
9002be52:	4601      	mov	r1, r0
9002be54:	4628      	mov	r0, r5
9002be56:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002be5a:	f000 b84b 	b.w	9002bef4 <_kill_r>
9002be5e:	2b01      	cmp	r3, #1
9002be60:	d00a      	beq.n	9002be78 <_raise_r+0x4c>
9002be62:	1c59      	adds	r1, r3, #1
9002be64:	d103      	bne.n	9002be6e <_raise_r+0x42>
9002be66:	2316      	movs	r3, #22
9002be68:	6003      	str	r3, [r0, #0]
9002be6a:	2001      	movs	r0, #1
9002be6c:	e7e7      	b.n	9002be3e <_raise_r+0x12>
9002be6e:	2100      	movs	r1, #0
9002be70:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
9002be74:	4620      	mov	r0, r4
9002be76:	4798      	blx	r3
9002be78:	2000      	movs	r0, #0
9002be7a:	e7e0      	b.n	9002be3e <_raise_r+0x12>

9002be7c <raise>:
9002be7c:	4b02      	ldr	r3, [pc, #8]	@ (9002be88 <raise+0xc>)
9002be7e:	4601      	mov	r1, r0
9002be80:	6818      	ldr	r0, [r3, #0]
9002be82:	f7ff bfd3 	b.w	9002be2c <_raise_r>
9002be86:	bf00      	nop
9002be88:	240000ec 	.word	0x240000ec

9002be8c <_close_r>:
9002be8c:	b538      	push	{r3, r4, r5, lr}
9002be8e:	4d06      	ldr	r5, [pc, #24]	@ (9002bea8 <_close_r+0x1c>)
9002be90:	2300      	movs	r3, #0
9002be92:	4604      	mov	r4, r0
9002be94:	4608      	mov	r0, r1
9002be96:	602b      	str	r3, [r5, #0]
9002be98:	f7d5 fd66 	bl	90001968 <_close>
9002be9c:	1c43      	adds	r3, r0, #1
9002be9e:	d102      	bne.n	9002bea6 <_close_r+0x1a>
9002bea0:	682b      	ldr	r3, [r5, #0]
9002bea2:	b103      	cbz	r3, 9002bea6 <_close_r+0x1a>
9002bea4:	6023      	str	r3, [r4, #0]
9002bea6:	bd38      	pop	{r3, r4, r5, pc}
9002bea8:	240280e4 	.word	0x240280e4

9002beac <_lseek_r>:
9002beac:	b538      	push	{r3, r4, r5, lr}
9002beae:	4d07      	ldr	r5, [pc, #28]	@ (9002becc <_lseek_r+0x20>)
9002beb0:	4604      	mov	r4, r0
9002beb2:	4608      	mov	r0, r1
9002beb4:	4611      	mov	r1, r2
9002beb6:	2200      	movs	r2, #0
9002beb8:	602a      	str	r2, [r5, #0]
9002beba:	461a      	mov	r2, r3
9002bebc:	f7d5 fd60 	bl	90001980 <_lseek>
9002bec0:	1c43      	adds	r3, r0, #1
9002bec2:	d102      	bne.n	9002beca <_lseek_r+0x1e>
9002bec4:	682b      	ldr	r3, [r5, #0]
9002bec6:	b103      	cbz	r3, 9002beca <_lseek_r+0x1e>
9002bec8:	6023      	str	r3, [r4, #0]
9002beca:	bd38      	pop	{r3, r4, r5, pc}
9002becc:	240280e4 	.word	0x240280e4

9002bed0 <_read_r>:
9002bed0:	b538      	push	{r3, r4, r5, lr}
9002bed2:	4d07      	ldr	r5, [pc, #28]	@ (9002bef0 <_read_r+0x20>)
9002bed4:	4604      	mov	r4, r0
9002bed6:	4608      	mov	r0, r1
9002bed8:	4611      	mov	r1, r2
9002beda:	2200      	movs	r2, #0
9002bedc:	602a      	str	r2, [r5, #0]
9002bede:	461a      	mov	r2, r3
9002bee0:	f7d5 fd26 	bl	90001930 <_read>
9002bee4:	1c43      	adds	r3, r0, #1
9002bee6:	d102      	bne.n	9002beee <_read_r+0x1e>
9002bee8:	682b      	ldr	r3, [r5, #0]
9002beea:	b103      	cbz	r3, 9002beee <_read_r+0x1e>
9002beec:	6023      	str	r3, [r4, #0]
9002beee:	bd38      	pop	{r3, r4, r5, pc}
9002bef0:	240280e4 	.word	0x240280e4

9002bef4 <_kill_r>:
9002bef4:	b538      	push	{r3, r4, r5, lr}
9002bef6:	4d07      	ldr	r5, [pc, #28]	@ (9002bf14 <_kill_r+0x20>)
9002bef8:	2300      	movs	r3, #0
9002befa:	4604      	mov	r4, r0
9002befc:	4608      	mov	r0, r1
9002befe:	4611      	mov	r1, r2
9002bf00:	602b      	str	r3, [r5, #0]
9002bf02:	f7d5 fd05 	bl	90001910 <_kill>
9002bf06:	1c43      	adds	r3, r0, #1
9002bf08:	d102      	bne.n	9002bf10 <_kill_r+0x1c>
9002bf0a:	682b      	ldr	r3, [r5, #0]
9002bf0c:	b103      	cbz	r3, 9002bf10 <_kill_r+0x1c>
9002bf0e:	6023      	str	r3, [r4, #0]
9002bf10:	bd38      	pop	{r3, r4, r5, pc}
9002bf12:	bf00      	nop
9002bf14:	240280e4 	.word	0x240280e4

9002bf18 <_getpid_r>:
9002bf18:	f7d5 bcf8 	b.w	9000190c <_getpid>

9002bf1c <_sbrk_r>:
9002bf1c:	b538      	push	{r3, r4, r5, lr}
9002bf1e:	4d06      	ldr	r5, [pc, #24]	@ (9002bf38 <_sbrk_r+0x1c>)
9002bf20:	2300      	movs	r3, #0
9002bf22:	4604      	mov	r4, r0
9002bf24:	4608      	mov	r0, r1
9002bf26:	602b      	str	r3, [r5, #0]
9002bf28:	f7d5 fd2c 	bl	90001984 <_sbrk>
9002bf2c:	1c43      	adds	r3, r0, #1
9002bf2e:	d102      	bne.n	9002bf36 <_sbrk_r+0x1a>
9002bf30:	682b      	ldr	r3, [r5, #0]
9002bf32:	b103      	cbz	r3, 9002bf36 <_sbrk_r+0x1a>
9002bf34:	6023      	str	r3, [r4, #0]
9002bf36:	bd38      	pop	{r3, r4, r5, pc}
9002bf38:	240280e4 	.word	0x240280e4

9002bf3c <_write_r>:
9002bf3c:	b538      	push	{r3, r4, r5, lr}
9002bf3e:	4d07      	ldr	r5, [pc, #28]	@ (9002bf5c <_write_r+0x20>)
9002bf40:	4604      	mov	r4, r0
9002bf42:	4608      	mov	r0, r1
9002bf44:	4611      	mov	r1, r2
9002bf46:	2200      	movs	r2, #0
9002bf48:	602a      	str	r2, [r5, #0]
9002bf4a:	461a      	mov	r2, r3
9002bf4c:	f7d5 fcfe 	bl	9000194c <_write>
9002bf50:	1c43      	adds	r3, r0, #1
9002bf52:	d102      	bne.n	9002bf5a <_write_r+0x1e>
9002bf54:	682b      	ldr	r3, [r5, #0]
9002bf56:	b103      	cbz	r3, 9002bf5a <_write_r+0x1e>
9002bf58:	6023      	str	r3, [r4, #0]
9002bf5a:	bd38      	pop	{r3, r4, r5, pc}
9002bf5c:	240280e4 	.word	0x240280e4

9002bf60 <__errno>:
9002bf60:	4b01      	ldr	r3, [pc, #4]	@ (9002bf68 <__errno+0x8>)
9002bf62:	6818      	ldr	r0, [r3, #0]
9002bf64:	4770      	bx	lr
9002bf66:	bf00      	nop
9002bf68:	240000ec 	.word	0x240000ec

9002bf6c <__libc_init_array>:
9002bf6c:	b570      	push	{r4, r5, r6, lr}
9002bf6e:	4d0d      	ldr	r5, [pc, #52]	@ (9002bfa4 <__libc_init_array+0x38>)
9002bf70:	4c0d      	ldr	r4, [pc, #52]	@ (9002bfa8 <__libc_init_array+0x3c>)
9002bf72:	1b64      	subs	r4, r4, r5
9002bf74:	10a4      	asrs	r4, r4, #2
9002bf76:	2600      	movs	r6, #0
9002bf78:	42a6      	cmp	r6, r4
9002bf7a:	d109      	bne.n	9002bf90 <__libc_init_array+0x24>
9002bf7c:	4d0b      	ldr	r5, [pc, #44]	@ (9002bfac <__libc_init_array+0x40>)
9002bf7e:	4c0c      	ldr	r4, [pc, #48]	@ (9002bfb0 <__libc_init_array+0x44>)
9002bf80:	f000 fcd0 	bl	9002c924 <_init>
9002bf84:	1b64      	subs	r4, r4, r5
9002bf86:	10a4      	asrs	r4, r4, #2
9002bf88:	2600      	movs	r6, #0
9002bf8a:	42a6      	cmp	r6, r4
9002bf8c:	d105      	bne.n	9002bf9a <__libc_init_array+0x2e>
9002bf8e:	bd70      	pop	{r4, r5, r6, pc}
9002bf90:	f855 3b04 	ldr.w	r3, [r5], #4
9002bf94:	4798      	blx	r3
9002bf96:	3601      	adds	r6, #1
9002bf98:	e7ee      	b.n	9002bf78 <__libc_init_array+0xc>
9002bf9a:	f855 3b04 	ldr.w	r3, [r5], #4
9002bf9e:	4798      	blx	r3
9002bfa0:	3601      	adds	r6, #1
9002bfa2:	e7f2      	b.n	9002bf8a <__libc_init_array+0x1e>
9002bfa4:	90030d60 	.word	0x90030d60
9002bfa8:	90030d60 	.word	0x90030d60
9002bfac:	90030d60 	.word	0x90030d60
9002bfb0:	90030d7c 	.word	0x90030d7c

9002bfb4 <__retarget_lock_init_recursive>:
9002bfb4:	4770      	bx	lr

9002bfb6 <__retarget_lock_acquire_recursive>:
9002bfb6:	4770      	bx	lr

9002bfb8 <__retarget_lock_release_recursive>:
9002bfb8:	4770      	bx	lr

9002bfba <memcpy>:
9002bfba:	440a      	add	r2, r1
9002bfbc:	4291      	cmp	r1, r2
9002bfbe:	f100 33ff 	add.w	r3, r0, #4294967295
9002bfc2:	d100      	bne.n	9002bfc6 <memcpy+0xc>
9002bfc4:	4770      	bx	lr
9002bfc6:	b510      	push	{r4, lr}
9002bfc8:	f811 4b01 	ldrb.w	r4, [r1], #1
9002bfcc:	f803 4f01 	strb.w	r4, [r3, #1]!
9002bfd0:	4291      	cmp	r1, r2
9002bfd2:	d1f9      	bne.n	9002bfc8 <memcpy+0xe>
9002bfd4:	bd10      	pop	{r4, pc}
	...

9002bfd8 <__register_exitproc>:
9002bfd8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002bfdc:	4d27      	ldr	r5, [pc, #156]	@ (9002c07c <__register_exitproc+0xa4>)
9002bfde:	4607      	mov	r7, r0
9002bfe0:	6828      	ldr	r0, [r5, #0]
9002bfe2:	4691      	mov	r9, r2
9002bfe4:	460e      	mov	r6, r1
9002bfe6:	4698      	mov	r8, r3
9002bfe8:	f7ff ffe5 	bl	9002bfb6 <__retarget_lock_acquire_recursive>
9002bfec:	4a24      	ldr	r2, [pc, #144]	@ (9002c080 <__register_exitproc+0xa8>)
9002bfee:	6814      	ldr	r4, [r2, #0]
9002bff0:	b93c      	cbnz	r4, 9002c002 <__register_exitproc+0x2a>
9002bff2:	4b24      	ldr	r3, [pc, #144]	@ (9002c084 <__register_exitproc+0xac>)
9002bff4:	6013      	str	r3, [r2, #0]
9002bff6:	4a24      	ldr	r2, [pc, #144]	@ (9002c088 <__register_exitproc+0xb0>)
9002bff8:	b112      	cbz	r2, 9002c000 <__register_exitproc+0x28>
9002bffa:	6812      	ldr	r2, [r2, #0]
9002bffc:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
9002c000:	4c20      	ldr	r4, [pc, #128]	@ (9002c084 <__register_exitproc+0xac>)
9002c002:	6863      	ldr	r3, [r4, #4]
9002c004:	2b1f      	cmp	r3, #31
9002c006:	dd06      	ble.n	9002c016 <__register_exitproc+0x3e>
9002c008:	6828      	ldr	r0, [r5, #0]
9002c00a:	f7ff ffd5 	bl	9002bfb8 <__retarget_lock_release_recursive>
9002c00e:	f04f 30ff 	mov.w	r0, #4294967295
9002c012:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002c016:	b32f      	cbz	r7, 9002c064 <__register_exitproc+0x8c>
9002c018:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9002c01c:	b968      	cbnz	r0, 9002c03a <__register_exitproc+0x62>
9002c01e:	4b1b      	ldr	r3, [pc, #108]	@ (9002c08c <__register_exitproc+0xb4>)
9002c020:	2b00      	cmp	r3, #0
9002c022:	d0f1      	beq.n	9002c008 <__register_exitproc+0x30>
9002c024:	f44f 7084 	mov.w	r0, #264	@ 0x108
9002c028:	f7ff fc6e 	bl	9002b908 <malloc>
9002c02c:	2800      	cmp	r0, #0
9002c02e:	d0eb      	beq.n	9002c008 <__register_exitproc+0x30>
9002c030:	2300      	movs	r3, #0
9002c032:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
9002c036:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
9002c03a:	6863      	ldr	r3, [r4, #4]
9002c03c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
9002c040:	2201      	movs	r2, #1
9002c042:	409a      	lsls	r2, r3
9002c044:	eb00 0183 	add.w	r1, r0, r3, lsl #2
9002c048:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
9002c04c:	4313      	orrs	r3, r2
9002c04e:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
9002c052:	2f02      	cmp	r7, #2
9002c054:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
9002c058:	bf02      	ittt	eq
9002c05a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
9002c05e:	4313      	orreq	r3, r2
9002c060:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
9002c064:	6863      	ldr	r3, [r4, #4]
9002c066:	6828      	ldr	r0, [r5, #0]
9002c068:	1c5a      	adds	r2, r3, #1
9002c06a:	3302      	adds	r3, #2
9002c06c:	6062      	str	r2, [r4, #4]
9002c06e:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
9002c072:	f7ff ffa1 	bl	9002bfb8 <__retarget_lock_release_recursive>
9002c076:	2000      	movs	r0, #0
9002c078:	e7cb      	b.n	9002c012 <__register_exitproc+0x3a>
9002c07a:	bf00      	nop
9002c07c:	2400013c 	.word	0x2400013c
9002c080:	24028178 	.word	0x24028178
9002c084:	240280ec 	.word	0x240280ec
9002c088:	90030cec 	.word	0x90030cec
9002c08c:	9002b909 	.word	0x9002b909

9002c090 <_free_r>:
9002c090:	b538      	push	{r3, r4, r5, lr}
9002c092:	4605      	mov	r5, r0
9002c094:	2900      	cmp	r1, #0
9002c096:	d041      	beq.n	9002c11c <_free_r+0x8c>
9002c098:	f851 3c04 	ldr.w	r3, [r1, #-4]
9002c09c:	1f0c      	subs	r4, r1, #4
9002c09e:	2b00      	cmp	r3, #0
9002c0a0:	bfb8      	it	lt
9002c0a2:	18e4      	addlt	r4, r4, r3
9002c0a4:	f7ff fce2 	bl	9002ba6c <__malloc_lock>
9002c0a8:	4a1d      	ldr	r2, [pc, #116]	@ (9002c120 <_free_r+0x90>)
9002c0aa:	6813      	ldr	r3, [r2, #0]
9002c0ac:	b933      	cbnz	r3, 9002c0bc <_free_r+0x2c>
9002c0ae:	6063      	str	r3, [r4, #4]
9002c0b0:	6014      	str	r4, [r2, #0]
9002c0b2:	4628      	mov	r0, r5
9002c0b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002c0b8:	f7ff bcde 	b.w	9002ba78 <__malloc_unlock>
9002c0bc:	42a3      	cmp	r3, r4
9002c0be:	d908      	bls.n	9002c0d2 <_free_r+0x42>
9002c0c0:	6820      	ldr	r0, [r4, #0]
9002c0c2:	1821      	adds	r1, r4, r0
9002c0c4:	428b      	cmp	r3, r1
9002c0c6:	bf01      	itttt	eq
9002c0c8:	6819      	ldreq	r1, [r3, #0]
9002c0ca:	685b      	ldreq	r3, [r3, #4]
9002c0cc:	1809      	addeq	r1, r1, r0
9002c0ce:	6021      	streq	r1, [r4, #0]
9002c0d0:	e7ed      	b.n	9002c0ae <_free_r+0x1e>
9002c0d2:	461a      	mov	r2, r3
9002c0d4:	685b      	ldr	r3, [r3, #4]
9002c0d6:	b10b      	cbz	r3, 9002c0dc <_free_r+0x4c>
9002c0d8:	42a3      	cmp	r3, r4
9002c0da:	d9fa      	bls.n	9002c0d2 <_free_r+0x42>
9002c0dc:	6811      	ldr	r1, [r2, #0]
9002c0de:	1850      	adds	r0, r2, r1
9002c0e0:	42a0      	cmp	r0, r4
9002c0e2:	d10b      	bne.n	9002c0fc <_free_r+0x6c>
9002c0e4:	6820      	ldr	r0, [r4, #0]
9002c0e6:	4401      	add	r1, r0
9002c0e8:	1850      	adds	r0, r2, r1
9002c0ea:	4283      	cmp	r3, r0
9002c0ec:	6011      	str	r1, [r2, #0]
9002c0ee:	d1e0      	bne.n	9002c0b2 <_free_r+0x22>
9002c0f0:	6818      	ldr	r0, [r3, #0]
9002c0f2:	685b      	ldr	r3, [r3, #4]
9002c0f4:	6053      	str	r3, [r2, #4]
9002c0f6:	4408      	add	r0, r1
9002c0f8:	6010      	str	r0, [r2, #0]
9002c0fa:	e7da      	b.n	9002c0b2 <_free_r+0x22>
9002c0fc:	d902      	bls.n	9002c104 <_free_r+0x74>
9002c0fe:	230c      	movs	r3, #12
9002c100:	602b      	str	r3, [r5, #0]
9002c102:	e7d6      	b.n	9002c0b2 <_free_r+0x22>
9002c104:	6820      	ldr	r0, [r4, #0]
9002c106:	1821      	adds	r1, r4, r0
9002c108:	428b      	cmp	r3, r1
9002c10a:	bf04      	itt	eq
9002c10c:	6819      	ldreq	r1, [r3, #0]
9002c10e:	685b      	ldreq	r3, [r3, #4]
9002c110:	6063      	str	r3, [r4, #4]
9002c112:	bf04      	itt	eq
9002c114:	1809      	addeq	r1, r1, r0
9002c116:	6021      	streq	r1, [r4, #0]
9002c118:	6054      	str	r4, [r2, #4]
9002c11a:	e7ca      	b.n	9002c0b2 <_free_r+0x22>
9002c11c:	bd38      	pop	{r3, r4, r5, pc}
9002c11e:	bf00      	nop
9002c120:	24027fa4 	.word	0x24027fa4

9002c124 <__sfputc_r>:
9002c124:	6893      	ldr	r3, [r2, #8]
9002c126:	3b01      	subs	r3, #1
9002c128:	2b00      	cmp	r3, #0
9002c12a:	b410      	push	{r4}
9002c12c:	6093      	str	r3, [r2, #8]
9002c12e:	da08      	bge.n	9002c142 <__sfputc_r+0x1e>
9002c130:	6994      	ldr	r4, [r2, #24]
9002c132:	42a3      	cmp	r3, r4
9002c134:	db01      	blt.n	9002c13a <__sfputc_r+0x16>
9002c136:	290a      	cmp	r1, #10
9002c138:	d103      	bne.n	9002c142 <__sfputc_r+0x1e>
9002c13a:	f85d 4b04 	ldr.w	r4, [sp], #4
9002c13e:	f7ff bdc6 	b.w	9002bcce <__swbuf_r>
9002c142:	6813      	ldr	r3, [r2, #0]
9002c144:	1c58      	adds	r0, r3, #1
9002c146:	6010      	str	r0, [r2, #0]
9002c148:	7019      	strb	r1, [r3, #0]
9002c14a:	4608      	mov	r0, r1
9002c14c:	f85d 4b04 	ldr.w	r4, [sp], #4
9002c150:	4770      	bx	lr

9002c152 <__sfputs_r>:
9002c152:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002c154:	4606      	mov	r6, r0
9002c156:	460f      	mov	r7, r1
9002c158:	4614      	mov	r4, r2
9002c15a:	18d5      	adds	r5, r2, r3
9002c15c:	42ac      	cmp	r4, r5
9002c15e:	d101      	bne.n	9002c164 <__sfputs_r+0x12>
9002c160:	2000      	movs	r0, #0
9002c162:	e007      	b.n	9002c174 <__sfputs_r+0x22>
9002c164:	f814 1b01 	ldrb.w	r1, [r4], #1
9002c168:	463a      	mov	r2, r7
9002c16a:	4630      	mov	r0, r6
9002c16c:	f7ff ffda 	bl	9002c124 <__sfputc_r>
9002c170:	1c43      	adds	r3, r0, #1
9002c172:	d1f3      	bne.n	9002c15c <__sfputs_r+0xa>
9002c174:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

9002c178 <_vfiprintf_r>:
9002c178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002c17c:	460d      	mov	r5, r1
9002c17e:	b09d      	sub	sp, #116	@ 0x74
9002c180:	4614      	mov	r4, r2
9002c182:	4698      	mov	r8, r3
9002c184:	4606      	mov	r6, r0
9002c186:	b118      	cbz	r0, 9002c190 <_vfiprintf_r+0x18>
9002c188:	6a03      	ldr	r3, [r0, #32]
9002c18a:	b90b      	cbnz	r3, 9002c190 <_vfiprintf_r+0x18>
9002c18c:	f7ff fd14 	bl	9002bbb8 <__sinit>
9002c190:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002c192:	07d9      	lsls	r1, r3, #31
9002c194:	d405      	bmi.n	9002c1a2 <_vfiprintf_r+0x2a>
9002c196:	89ab      	ldrh	r3, [r5, #12]
9002c198:	059a      	lsls	r2, r3, #22
9002c19a:	d402      	bmi.n	9002c1a2 <_vfiprintf_r+0x2a>
9002c19c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002c19e:	f7ff ff0a 	bl	9002bfb6 <__retarget_lock_acquire_recursive>
9002c1a2:	89ab      	ldrh	r3, [r5, #12]
9002c1a4:	071b      	lsls	r3, r3, #28
9002c1a6:	d501      	bpl.n	9002c1ac <_vfiprintf_r+0x34>
9002c1a8:	692b      	ldr	r3, [r5, #16]
9002c1aa:	b99b      	cbnz	r3, 9002c1d4 <_vfiprintf_r+0x5c>
9002c1ac:	4629      	mov	r1, r5
9002c1ae:	4630      	mov	r0, r6
9002c1b0:	f7ff fdcc 	bl	9002bd4c <__swsetup_r>
9002c1b4:	b170      	cbz	r0, 9002c1d4 <_vfiprintf_r+0x5c>
9002c1b6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002c1b8:	07dc      	lsls	r4, r3, #31
9002c1ba:	d504      	bpl.n	9002c1c6 <_vfiprintf_r+0x4e>
9002c1bc:	f04f 30ff 	mov.w	r0, #4294967295
9002c1c0:	b01d      	add	sp, #116	@ 0x74
9002c1c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002c1c6:	89ab      	ldrh	r3, [r5, #12]
9002c1c8:	0598      	lsls	r0, r3, #22
9002c1ca:	d4f7      	bmi.n	9002c1bc <_vfiprintf_r+0x44>
9002c1cc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002c1ce:	f7ff fef3 	bl	9002bfb8 <__retarget_lock_release_recursive>
9002c1d2:	e7f3      	b.n	9002c1bc <_vfiprintf_r+0x44>
9002c1d4:	2300      	movs	r3, #0
9002c1d6:	9309      	str	r3, [sp, #36]	@ 0x24
9002c1d8:	2320      	movs	r3, #32
9002c1da:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
9002c1de:	f8cd 800c 	str.w	r8, [sp, #12]
9002c1e2:	2330      	movs	r3, #48	@ 0x30
9002c1e4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 9002c394 <_vfiprintf_r+0x21c>
9002c1e8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
9002c1ec:	f04f 0901 	mov.w	r9, #1
9002c1f0:	4623      	mov	r3, r4
9002c1f2:	469a      	mov	sl, r3
9002c1f4:	f813 2b01 	ldrb.w	r2, [r3], #1
9002c1f8:	b10a      	cbz	r2, 9002c1fe <_vfiprintf_r+0x86>
9002c1fa:	2a25      	cmp	r2, #37	@ 0x25
9002c1fc:	d1f9      	bne.n	9002c1f2 <_vfiprintf_r+0x7a>
9002c1fe:	ebba 0b04 	subs.w	fp, sl, r4
9002c202:	d00b      	beq.n	9002c21c <_vfiprintf_r+0xa4>
9002c204:	465b      	mov	r3, fp
9002c206:	4622      	mov	r2, r4
9002c208:	4629      	mov	r1, r5
9002c20a:	4630      	mov	r0, r6
9002c20c:	f7ff ffa1 	bl	9002c152 <__sfputs_r>
9002c210:	3001      	adds	r0, #1
9002c212:	f000 80a7 	beq.w	9002c364 <_vfiprintf_r+0x1ec>
9002c216:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002c218:	445a      	add	r2, fp
9002c21a:	9209      	str	r2, [sp, #36]	@ 0x24
9002c21c:	f89a 3000 	ldrb.w	r3, [sl]
9002c220:	2b00      	cmp	r3, #0
9002c222:	f000 809f 	beq.w	9002c364 <_vfiprintf_r+0x1ec>
9002c226:	2300      	movs	r3, #0
9002c228:	f04f 32ff 	mov.w	r2, #4294967295
9002c22c:	e9cd 2305 	strd	r2, r3, [sp, #20]
9002c230:	f10a 0a01 	add.w	sl, sl, #1
9002c234:	9304      	str	r3, [sp, #16]
9002c236:	9307      	str	r3, [sp, #28]
9002c238:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
9002c23c:	931a      	str	r3, [sp, #104]	@ 0x68
9002c23e:	4654      	mov	r4, sl
9002c240:	2205      	movs	r2, #5
9002c242:	f814 1b01 	ldrb.w	r1, [r4], #1
9002c246:	4853      	ldr	r0, [pc, #332]	@ (9002c394 <_vfiprintf_r+0x21c>)
9002c248:	f7d4 f84a 	bl	900002e0 <memchr>
9002c24c:	9a04      	ldr	r2, [sp, #16]
9002c24e:	b9d8      	cbnz	r0, 9002c288 <_vfiprintf_r+0x110>
9002c250:	06d1      	lsls	r1, r2, #27
9002c252:	bf44      	itt	mi
9002c254:	2320      	movmi	r3, #32
9002c256:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002c25a:	0713      	lsls	r3, r2, #28
9002c25c:	bf44      	itt	mi
9002c25e:	232b      	movmi	r3, #43	@ 0x2b
9002c260:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002c264:	f89a 3000 	ldrb.w	r3, [sl]
9002c268:	2b2a      	cmp	r3, #42	@ 0x2a
9002c26a:	d015      	beq.n	9002c298 <_vfiprintf_r+0x120>
9002c26c:	9a07      	ldr	r2, [sp, #28]
9002c26e:	4654      	mov	r4, sl
9002c270:	2000      	movs	r0, #0
9002c272:	f04f 0c0a 	mov.w	ip, #10
9002c276:	4621      	mov	r1, r4
9002c278:	f811 3b01 	ldrb.w	r3, [r1], #1
9002c27c:	3b30      	subs	r3, #48	@ 0x30
9002c27e:	2b09      	cmp	r3, #9
9002c280:	d94b      	bls.n	9002c31a <_vfiprintf_r+0x1a2>
9002c282:	b1b0      	cbz	r0, 9002c2b2 <_vfiprintf_r+0x13a>
9002c284:	9207      	str	r2, [sp, #28]
9002c286:	e014      	b.n	9002c2b2 <_vfiprintf_r+0x13a>
9002c288:	eba0 0308 	sub.w	r3, r0, r8
9002c28c:	fa09 f303 	lsl.w	r3, r9, r3
9002c290:	4313      	orrs	r3, r2
9002c292:	9304      	str	r3, [sp, #16]
9002c294:	46a2      	mov	sl, r4
9002c296:	e7d2      	b.n	9002c23e <_vfiprintf_r+0xc6>
9002c298:	9b03      	ldr	r3, [sp, #12]
9002c29a:	1d19      	adds	r1, r3, #4
9002c29c:	681b      	ldr	r3, [r3, #0]
9002c29e:	9103      	str	r1, [sp, #12]
9002c2a0:	2b00      	cmp	r3, #0
9002c2a2:	bfbb      	ittet	lt
9002c2a4:	425b      	neglt	r3, r3
9002c2a6:	f042 0202 	orrlt.w	r2, r2, #2
9002c2aa:	9307      	strge	r3, [sp, #28]
9002c2ac:	9307      	strlt	r3, [sp, #28]
9002c2ae:	bfb8      	it	lt
9002c2b0:	9204      	strlt	r2, [sp, #16]
9002c2b2:	7823      	ldrb	r3, [r4, #0]
9002c2b4:	2b2e      	cmp	r3, #46	@ 0x2e
9002c2b6:	d10a      	bne.n	9002c2ce <_vfiprintf_r+0x156>
9002c2b8:	7863      	ldrb	r3, [r4, #1]
9002c2ba:	2b2a      	cmp	r3, #42	@ 0x2a
9002c2bc:	d132      	bne.n	9002c324 <_vfiprintf_r+0x1ac>
9002c2be:	9b03      	ldr	r3, [sp, #12]
9002c2c0:	1d1a      	adds	r2, r3, #4
9002c2c2:	681b      	ldr	r3, [r3, #0]
9002c2c4:	9203      	str	r2, [sp, #12]
9002c2c6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
9002c2ca:	3402      	adds	r4, #2
9002c2cc:	9305      	str	r3, [sp, #20]
9002c2ce:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 9002c3a4 <_vfiprintf_r+0x22c>
9002c2d2:	7821      	ldrb	r1, [r4, #0]
9002c2d4:	2203      	movs	r2, #3
9002c2d6:	4650      	mov	r0, sl
9002c2d8:	f7d4 f802 	bl	900002e0 <memchr>
9002c2dc:	b138      	cbz	r0, 9002c2ee <_vfiprintf_r+0x176>
9002c2de:	9b04      	ldr	r3, [sp, #16]
9002c2e0:	eba0 000a 	sub.w	r0, r0, sl
9002c2e4:	2240      	movs	r2, #64	@ 0x40
9002c2e6:	4082      	lsls	r2, r0
9002c2e8:	4313      	orrs	r3, r2
9002c2ea:	3401      	adds	r4, #1
9002c2ec:	9304      	str	r3, [sp, #16]
9002c2ee:	f814 1b01 	ldrb.w	r1, [r4], #1
9002c2f2:	4829      	ldr	r0, [pc, #164]	@ (9002c398 <_vfiprintf_r+0x220>)
9002c2f4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
9002c2f8:	2206      	movs	r2, #6
9002c2fa:	f7d3 fff1 	bl	900002e0 <memchr>
9002c2fe:	2800      	cmp	r0, #0
9002c300:	d03f      	beq.n	9002c382 <_vfiprintf_r+0x20a>
9002c302:	4b26      	ldr	r3, [pc, #152]	@ (9002c39c <_vfiprintf_r+0x224>)
9002c304:	bb1b      	cbnz	r3, 9002c34e <_vfiprintf_r+0x1d6>
9002c306:	9b03      	ldr	r3, [sp, #12]
9002c308:	3307      	adds	r3, #7
9002c30a:	f023 0307 	bic.w	r3, r3, #7
9002c30e:	3308      	adds	r3, #8
9002c310:	9303      	str	r3, [sp, #12]
9002c312:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002c314:	443b      	add	r3, r7
9002c316:	9309      	str	r3, [sp, #36]	@ 0x24
9002c318:	e76a      	b.n	9002c1f0 <_vfiprintf_r+0x78>
9002c31a:	fb0c 3202 	mla	r2, ip, r2, r3
9002c31e:	460c      	mov	r4, r1
9002c320:	2001      	movs	r0, #1
9002c322:	e7a8      	b.n	9002c276 <_vfiprintf_r+0xfe>
9002c324:	2300      	movs	r3, #0
9002c326:	3401      	adds	r4, #1
9002c328:	9305      	str	r3, [sp, #20]
9002c32a:	4619      	mov	r1, r3
9002c32c:	f04f 0c0a 	mov.w	ip, #10
9002c330:	4620      	mov	r0, r4
9002c332:	f810 2b01 	ldrb.w	r2, [r0], #1
9002c336:	3a30      	subs	r2, #48	@ 0x30
9002c338:	2a09      	cmp	r2, #9
9002c33a:	d903      	bls.n	9002c344 <_vfiprintf_r+0x1cc>
9002c33c:	2b00      	cmp	r3, #0
9002c33e:	d0c6      	beq.n	9002c2ce <_vfiprintf_r+0x156>
9002c340:	9105      	str	r1, [sp, #20]
9002c342:	e7c4      	b.n	9002c2ce <_vfiprintf_r+0x156>
9002c344:	fb0c 2101 	mla	r1, ip, r1, r2
9002c348:	4604      	mov	r4, r0
9002c34a:	2301      	movs	r3, #1
9002c34c:	e7f0      	b.n	9002c330 <_vfiprintf_r+0x1b8>
9002c34e:	ab03      	add	r3, sp, #12
9002c350:	9300      	str	r3, [sp, #0]
9002c352:	462a      	mov	r2, r5
9002c354:	4b12      	ldr	r3, [pc, #72]	@ (9002c3a0 <_vfiprintf_r+0x228>)
9002c356:	a904      	add	r1, sp, #16
9002c358:	4630      	mov	r0, r6
9002c35a:	f3af 8000 	nop.w
9002c35e:	4607      	mov	r7, r0
9002c360:	1c78      	adds	r0, r7, #1
9002c362:	d1d6      	bne.n	9002c312 <_vfiprintf_r+0x19a>
9002c364:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002c366:	07d9      	lsls	r1, r3, #31
9002c368:	d405      	bmi.n	9002c376 <_vfiprintf_r+0x1fe>
9002c36a:	89ab      	ldrh	r3, [r5, #12]
9002c36c:	059a      	lsls	r2, r3, #22
9002c36e:	d402      	bmi.n	9002c376 <_vfiprintf_r+0x1fe>
9002c370:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002c372:	f7ff fe21 	bl	9002bfb8 <__retarget_lock_release_recursive>
9002c376:	89ab      	ldrh	r3, [r5, #12]
9002c378:	065b      	lsls	r3, r3, #25
9002c37a:	f53f af1f 	bmi.w	9002c1bc <_vfiprintf_r+0x44>
9002c37e:	9809      	ldr	r0, [sp, #36]	@ 0x24
9002c380:	e71e      	b.n	9002c1c0 <_vfiprintf_r+0x48>
9002c382:	ab03      	add	r3, sp, #12
9002c384:	9300      	str	r3, [sp, #0]
9002c386:	462a      	mov	r2, r5
9002c388:	4b05      	ldr	r3, [pc, #20]	@ (9002c3a0 <_vfiprintf_r+0x228>)
9002c38a:	a904      	add	r1, sp, #16
9002c38c:	4630      	mov	r0, r6
9002c38e:	f000 f879 	bl	9002c484 <_printf_i>
9002c392:	e7e4      	b.n	9002c35e <_vfiprintf_r+0x1e6>
9002c394:	90030cf0 	.word	0x90030cf0
9002c398:	90030cfa 	.word	0x90030cfa
9002c39c:	00000000 	.word	0x00000000
9002c3a0:	9002c153 	.word	0x9002c153
9002c3a4:	90030cf6 	.word	0x90030cf6

9002c3a8 <_printf_common>:
9002c3a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002c3ac:	4616      	mov	r6, r2
9002c3ae:	4698      	mov	r8, r3
9002c3b0:	688a      	ldr	r2, [r1, #8]
9002c3b2:	690b      	ldr	r3, [r1, #16]
9002c3b4:	f8dd 9020 	ldr.w	r9, [sp, #32]
9002c3b8:	4293      	cmp	r3, r2
9002c3ba:	bfb8      	it	lt
9002c3bc:	4613      	movlt	r3, r2
9002c3be:	6033      	str	r3, [r6, #0]
9002c3c0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
9002c3c4:	4607      	mov	r7, r0
9002c3c6:	460c      	mov	r4, r1
9002c3c8:	b10a      	cbz	r2, 9002c3ce <_printf_common+0x26>
9002c3ca:	3301      	adds	r3, #1
9002c3cc:	6033      	str	r3, [r6, #0]
9002c3ce:	6823      	ldr	r3, [r4, #0]
9002c3d0:	0699      	lsls	r1, r3, #26
9002c3d2:	bf42      	ittt	mi
9002c3d4:	6833      	ldrmi	r3, [r6, #0]
9002c3d6:	3302      	addmi	r3, #2
9002c3d8:	6033      	strmi	r3, [r6, #0]
9002c3da:	6825      	ldr	r5, [r4, #0]
9002c3dc:	f015 0506 	ands.w	r5, r5, #6
9002c3e0:	d106      	bne.n	9002c3f0 <_printf_common+0x48>
9002c3e2:	f104 0a19 	add.w	sl, r4, #25
9002c3e6:	68e3      	ldr	r3, [r4, #12]
9002c3e8:	6832      	ldr	r2, [r6, #0]
9002c3ea:	1a9b      	subs	r3, r3, r2
9002c3ec:	42ab      	cmp	r3, r5
9002c3ee:	dc26      	bgt.n	9002c43e <_printf_common+0x96>
9002c3f0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
9002c3f4:	6822      	ldr	r2, [r4, #0]
9002c3f6:	3b00      	subs	r3, #0
9002c3f8:	bf18      	it	ne
9002c3fa:	2301      	movne	r3, #1
9002c3fc:	0692      	lsls	r2, r2, #26
9002c3fe:	d42b      	bmi.n	9002c458 <_printf_common+0xb0>
9002c400:	f104 0243 	add.w	r2, r4, #67	@ 0x43
9002c404:	4641      	mov	r1, r8
9002c406:	4638      	mov	r0, r7
9002c408:	47c8      	blx	r9
9002c40a:	3001      	adds	r0, #1
9002c40c:	d01e      	beq.n	9002c44c <_printf_common+0xa4>
9002c40e:	6823      	ldr	r3, [r4, #0]
9002c410:	6922      	ldr	r2, [r4, #16]
9002c412:	f003 0306 	and.w	r3, r3, #6
9002c416:	2b04      	cmp	r3, #4
9002c418:	bf02      	ittt	eq
9002c41a:	68e5      	ldreq	r5, [r4, #12]
9002c41c:	6833      	ldreq	r3, [r6, #0]
9002c41e:	1aed      	subeq	r5, r5, r3
9002c420:	68a3      	ldr	r3, [r4, #8]
9002c422:	bf0c      	ite	eq
9002c424:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002c428:	2500      	movne	r5, #0
9002c42a:	4293      	cmp	r3, r2
9002c42c:	bfc4      	itt	gt
9002c42e:	1a9b      	subgt	r3, r3, r2
9002c430:	18ed      	addgt	r5, r5, r3
9002c432:	2600      	movs	r6, #0
9002c434:	341a      	adds	r4, #26
9002c436:	42b5      	cmp	r5, r6
9002c438:	d11a      	bne.n	9002c470 <_printf_common+0xc8>
9002c43a:	2000      	movs	r0, #0
9002c43c:	e008      	b.n	9002c450 <_printf_common+0xa8>
9002c43e:	2301      	movs	r3, #1
9002c440:	4652      	mov	r2, sl
9002c442:	4641      	mov	r1, r8
9002c444:	4638      	mov	r0, r7
9002c446:	47c8      	blx	r9
9002c448:	3001      	adds	r0, #1
9002c44a:	d103      	bne.n	9002c454 <_printf_common+0xac>
9002c44c:	f04f 30ff 	mov.w	r0, #4294967295
9002c450:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002c454:	3501      	adds	r5, #1
9002c456:	e7c6      	b.n	9002c3e6 <_printf_common+0x3e>
9002c458:	18e1      	adds	r1, r4, r3
9002c45a:	1c5a      	adds	r2, r3, #1
9002c45c:	2030      	movs	r0, #48	@ 0x30
9002c45e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
9002c462:	4422      	add	r2, r4
9002c464:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
9002c468:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
9002c46c:	3302      	adds	r3, #2
9002c46e:	e7c7      	b.n	9002c400 <_printf_common+0x58>
9002c470:	2301      	movs	r3, #1
9002c472:	4622      	mov	r2, r4
9002c474:	4641      	mov	r1, r8
9002c476:	4638      	mov	r0, r7
9002c478:	47c8      	blx	r9
9002c47a:	3001      	adds	r0, #1
9002c47c:	d0e6      	beq.n	9002c44c <_printf_common+0xa4>
9002c47e:	3601      	adds	r6, #1
9002c480:	e7d9      	b.n	9002c436 <_printf_common+0x8e>
	...

9002c484 <_printf_i>:
9002c484:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002c488:	7e0f      	ldrb	r7, [r1, #24]
9002c48a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002c48c:	2f78      	cmp	r7, #120	@ 0x78
9002c48e:	4691      	mov	r9, r2
9002c490:	4680      	mov	r8, r0
9002c492:	460c      	mov	r4, r1
9002c494:	469a      	mov	sl, r3
9002c496:	f101 0243 	add.w	r2, r1, #67	@ 0x43
9002c49a:	d807      	bhi.n	9002c4ac <_printf_i+0x28>
9002c49c:	2f62      	cmp	r7, #98	@ 0x62
9002c49e:	d80a      	bhi.n	9002c4b6 <_printf_i+0x32>
9002c4a0:	2f00      	cmp	r7, #0
9002c4a2:	f000 80d2 	beq.w	9002c64a <_printf_i+0x1c6>
9002c4a6:	2f58      	cmp	r7, #88	@ 0x58
9002c4a8:	f000 80b9 	beq.w	9002c61e <_printf_i+0x19a>
9002c4ac:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002c4b0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
9002c4b4:	e03a      	b.n	9002c52c <_printf_i+0xa8>
9002c4b6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
9002c4ba:	2b15      	cmp	r3, #21
9002c4bc:	d8f6      	bhi.n	9002c4ac <_printf_i+0x28>
9002c4be:	a101      	add	r1, pc, #4	@ (adr r1, 9002c4c4 <_printf_i+0x40>)
9002c4c0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002c4c4:	9002c51d 	.word	0x9002c51d
9002c4c8:	9002c531 	.word	0x9002c531
9002c4cc:	9002c4ad 	.word	0x9002c4ad
9002c4d0:	9002c4ad 	.word	0x9002c4ad
9002c4d4:	9002c4ad 	.word	0x9002c4ad
9002c4d8:	9002c4ad 	.word	0x9002c4ad
9002c4dc:	9002c531 	.word	0x9002c531
9002c4e0:	9002c4ad 	.word	0x9002c4ad
9002c4e4:	9002c4ad 	.word	0x9002c4ad
9002c4e8:	9002c4ad 	.word	0x9002c4ad
9002c4ec:	9002c4ad 	.word	0x9002c4ad
9002c4f0:	9002c631 	.word	0x9002c631
9002c4f4:	9002c55b 	.word	0x9002c55b
9002c4f8:	9002c5eb 	.word	0x9002c5eb
9002c4fc:	9002c4ad 	.word	0x9002c4ad
9002c500:	9002c4ad 	.word	0x9002c4ad
9002c504:	9002c653 	.word	0x9002c653
9002c508:	9002c4ad 	.word	0x9002c4ad
9002c50c:	9002c55b 	.word	0x9002c55b
9002c510:	9002c4ad 	.word	0x9002c4ad
9002c514:	9002c4ad 	.word	0x9002c4ad
9002c518:	9002c5f3 	.word	0x9002c5f3
9002c51c:	6833      	ldr	r3, [r6, #0]
9002c51e:	1d1a      	adds	r2, r3, #4
9002c520:	681b      	ldr	r3, [r3, #0]
9002c522:	6032      	str	r2, [r6, #0]
9002c524:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002c528:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9002c52c:	2301      	movs	r3, #1
9002c52e:	e09d      	b.n	9002c66c <_printf_i+0x1e8>
9002c530:	6833      	ldr	r3, [r6, #0]
9002c532:	6820      	ldr	r0, [r4, #0]
9002c534:	1d19      	adds	r1, r3, #4
9002c536:	6031      	str	r1, [r6, #0]
9002c538:	0606      	lsls	r6, r0, #24
9002c53a:	d501      	bpl.n	9002c540 <_printf_i+0xbc>
9002c53c:	681d      	ldr	r5, [r3, #0]
9002c53e:	e003      	b.n	9002c548 <_printf_i+0xc4>
9002c540:	0645      	lsls	r5, r0, #25
9002c542:	d5fb      	bpl.n	9002c53c <_printf_i+0xb8>
9002c544:	f9b3 5000 	ldrsh.w	r5, [r3]
9002c548:	2d00      	cmp	r5, #0
9002c54a:	da03      	bge.n	9002c554 <_printf_i+0xd0>
9002c54c:	232d      	movs	r3, #45	@ 0x2d
9002c54e:	426d      	negs	r5, r5
9002c550:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002c554:	4859      	ldr	r0, [pc, #356]	@ (9002c6bc <_printf_i+0x238>)
9002c556:	230a      	movs	r3, #10
9002c558:	e011      	b.n	9002c57e <_printf_i+0xfa>
9002c55a:	6821      	ldr	r1, [r4, #0]
9002c55c:	6833      	ldr	r3, [r6, #0]
9002c55e:	0608      	lsls	r0, r1, #24
9002c560:	f853 5b04 	ldr.w	r5, [r3], #4
9002c564:	d402      	bmi.n	9002c56c <_printf_i+0xe8>
9002c566:	0649      	lsls	r1, r1, #25
9002c568:	bf48      	it	mi
9002c56a:	b2ad      	uxthmi	r5, r5
9002c56c:	2f6f      	cmp	r7, #111	@ 0x6f
9002c56e:	4853      	ldr	r0, [pc, #332]	@ (9002c6bc <_printf_i+0x238>)
9002c570:	6033      	str	r3, [r6, #0]
9002c572:	bf14      	ite	ne
9002c574:	230a      	movne	r3, #10
9002c576:	2308      	moveq	r3, #8
9002c578:	2100      	movs	r1, #0
9002c57a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
9002c57e:	6866      	ldr	r6, [r4, #4]
9002c580:	60a6      	str	r6, [r4, #8]
9002c582:	2e00      	cmp	r6, #0
9002c584:	bfa2      	ittt	ge
9002c586:	6821      	ldrge	r1, [r4, #0]
9002c588:	f021 0104 	bicge.w	r1, r1, #4
9002c58c:	6021      	strge	r1, [r4, #0]
9002c58e:	b90d      	cbnz	r5, 9002c594 <_printf_i+0x110>
9002c590:	2e00      	cmp	r6, #0
9002c592:	d04b      	beq.n	9002c62c <_printf_i+0x1a8>
9002c594:	4616      	mov	r6, r2
9002c596:	fbb5 f1f3 	udiv	r1, r5, r3
9002c59a:	fb03 5711 	mls	r7, r3, r1, r5
9002c59e:	5dc7      	ldrb	r7, [r0, r7]
9002c5a0:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002c5a4:	462f      	mov	r7, r5
9002c5a6:	42bb      	cmp	r3, r7
9002c5a8:	460d      	mov	r5, r1
9002c5aa:	d9f4      	bls.n	9002c596 <_printf_i+0x112>
9002c5ac:	2b08      	cmp	r3, #8
9002c5ae:	d10b      	bne.n	9002c5c8 <_printf_i+0x144>
9002c5b0:	6823      	ldr	r3, [r4, #0]
9002c5b2:	07df      	lsls	r7, r3, #31
9002c5b4:	d508      	bpl.n	9002c5c8 <_printf_i+0x144>
9002c5b6:	6923      	ldr	r3, [r4, #16]
9002c5b8:	6861      	ldr	r1, [r4, #4]
9002c5ba:	4299      	cmp	r1, r3
9002c5bc:	bfde      	ittt	le
9002c5be:	2330      	movle	r3, #48	@ 0x30
9002c5c0:	f806 3c01 	strble.w	r3, [r6, #-1]
9002c5c4:	f106 36ff 	addle.w	r6, r6, #4294967295
9002c5c8:	1b92      	subs	r2, r2, r6
9002c5ca:	6122      	str	r2, [r4, #16]
9002c5cc:	f8cd a000 	str.w	sl, [sp]
9002c5d0:	464b      	mov	r3, r9
9002c5d2:	aa03      	add	r2, sp, #12
9002c5d4:	4621      	mov	r1, r4
9002c5d6:	4640      	mov	r0, r8
9002c5d8:	f7ff fee6 	bl	9002c3a8 <_printf_common>
9002c5dc:	3001      	adds	r0, #1
9002c5de:	d14a      	bne.n	9002c676 <_printf_i+0x1f2>
9002c5e0:	f04f 30ff 	mov.w	r0, #4294967295
9002c5e4:	b004      	add	sp, #16
9002c5e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002c5ea:	6823      	ldr	r3, [r4, #0]
9002c5ec:	f043 0320 	orr.w	r3, r3, #32
9002c5f0:	6023      	str	r3, [r4, #0]
9002c5f2:	4833      	ldr	r0, [pc, #204]	@ (9002c6c0 <_printf_i+0x23c>)
9002c5f4:	2778      	movs	r7, #120	@ 0x78
9002c5f6:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
9002c5fa:	6823      	ldr	r3, [r4, #0]
9002c5fc:	6831      	ldr	r1, [r6, #0]
9002c5fe:	061f      	lsls	r7, r3, #24
9002c600:	f851 5b04 	ldr.w	r5, [r1], #4
9002c604:	d402      	bmi.n	9002c60c <_printf_i+0x188>
9002c606:	065f      	lsls	r7, r3, #25
9002c608:	bf48      	it	mi
9002c60a:	b2ad      	uxthmi	r5, r5
9002c60c:	6031      	str	r1, [r6, #0]
9002c60e:	07d9      	lsls	r1, r3, #31
9002c610:	bf44      	itt	mi
9002c612:	f043 0320 	orrmi.w	r3, r3, #32
9002c616:	6023      	strmi	r3, [r4, #0]
9002c618:	b11d      	cbz	r5, 9002c622 <_printf_i+0x19e>
9002c61a:	2310      	movs	r3, #16
9002c61c:	e7ac      	b.n	9002c578 <_printf_i+0xf4>
9002c61e:	4827      	ldr	r0, [pc, #156]	@ (9002c6bc <_printf_i+0x238>)
9002c620:	e7e9      	b.n	9002c5f6 <_printf_i+0x172>
9002c622:	6823      	ldr	r3, [r4, #0]
9002c624:	f023 0320 	bic.w	r3, r3, #32
9002c628:	6023      	str	r3, [r4, #0]
9002c62a:	e7f6      	b.n	9002c61a <_printf_i+0x196>
9002c62c:	4616      	mov	r6, r2
9002c62e:	e7bd      	b.n	9002c5ac <_printf_i+0x128>
9002c630:	6833      	ldr	r3, [r6, #0]
9002c632:	6825      	ldr	r5, [r4, #0]
9002c634:	6961      	ldr	r1, [r4, #20]
9002c636:	1d18      	adds	r0, r3, #4
9002c638:	6030      	str	r0, [r6, #0]
9002c63a:	062e      	lsls	r6, r5, #24
9002c63c:	681b      	ldr	r3, [r3, #0]
9002c63e:	d501      	bpl.n	9002c644 <_printf_i+0x1c0>
9002c640:	6019      	str	r1, [r3, #0]
9002c642:	e002      	b.n	9002c64a <_printf_i+0x1c6>
9002c644:	0668      	lsls	r0, r5, #25
9002c646:	d5fb      	bpl.n	9002c640 <_printf_i+0x1bc>
9002c648:	8019      	strh	r1, [r3, #0]
9002c64a:	2300      	movs	r3, #0
9002c64c:	6123      	str	r3, [r4, #16]
9002c64e:	4616      	mov	r6, r2
9002c650:	e7bc      	b.n	9002c5cc <_printf_i+0x148>
9002c652:	6833      	ldr	r3, [r6, #0]
9002c654:	1d1a      	adds	r2, r3, #4
9002c656:	6032      	str	r2, [r6, #0]
9002c658:	681e      	ldr	r6, [r3, #0]
9002c65a:	6862      	ldr	r2, [r4, #4]
9002c65c:	2100      	movs	r1, #0
9002c65e:	4630      	mov	r0, r6
9002c660:	f7d3 fe3e 	bl	900002e0 <memchr>
9002c664:	b108      	cbz	r0, 9002c66a <_printf_i+0x1e6>
9002c666:	1b80      	subs	r0, r0, r6
9002c668:	6060      	str	r0, [r4, #4]
9002c66a:	6863      	ldr	r3, [r4, #4]
9002c66c:	6123      	str	r3, [r4, #16]
9002c66e:	2300      	movs	r3, #0
9002c670:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002c674:	e7aa      	b.n	9002c5cc <_printf_i+0x148>
9002c676:	6923      	ldr	r3, [r4, #16]
9002c678:	4632      	mov	r2, r6
9002c67a:	4649      	mov	r1, r9
9002c67c:	4640      	mov	r0, r8
9002c67e:	47d0      	blx	sl
9002c680:	3001      	adds	r0, #1
9002c682:	d0ad      	beq.n	9002c5e0 <_printf_i+0x15c>
9002c684:	6823      	ldr	r3, [r4, #0]
9002c686:	079b      	lsls	r3, r3, #30
9002c688:	d413      	bmi.n	9002c6b2 <_printf_i+0x22e>
9002c68a:	68e0      	ldr	r0, [r4, #12]
9002c68c:	9b03      	ldr	r3, [sp, #12]
9002c68e:	4298      	cmp	r0, r3
9002c690:	bfb8      	it	lt
9002c692:	4618      	movlt	r0, r3
9002c694:	e7a6      	b.n	9002c5e4 <_printf_i+0x160>
9002c696:	2301      	movs	r3, #1
9002c698:	4632      	mov	r2, r6
9002c69a:	4649      	mov	r1, r9
9002c69c:	4640      	mov	r0, r8
9002c69e:	47d0      	blx	sl
9002c6a0:	3001      	adds	r0, #1
9002c6a2:	d09d      	beq.n	9002c5e0 <_printf_i+0x15c>
9002c6a4:	3501      	adds	r5, #1
9002c6a6:	68e3      	ldr	r3, [r4, #12]
9002c6a8:	9903      	ldr	r1, [sp, #12]
9002c6aa:	1a5b      	subs	r3, r3, r1
9002c6ac:	42ab      	cmp	r3, r5
9002c6ae:	dcf2      	bgt.n	9002c696 <_printf_i+0x212>
9002c6b0:	e7eb      	b.n	9002c68a <_printf_i+0x206>
9002c6b2:	2500      	movs	r5, #0
9002c6b4:	f104 0619 	add.w	r6, r4, #25
9002c6b8:	e7f5      	b.n	9002c6a6 <_printf_i+0x222>
9002c6ba:	bf00      	nop
9002c6bc:	90030d01 	.word	0x90030d01
9002c6c0:	90030d12 	.word	0x90030d12

9002c6c4 <__sflush_r>:
9002c6c4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
9002c6c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002c6cc:	0716      	lsls	r6, r2, #28
9002c6ce:	4605      	mov	r5, r0
9002c6d0:	460c      	mov	r4, r1
9002c6d2:	d454      	bmi.n	9002c77e <__sflush_r+0xba>
9002c6d4:	684b      	ldr	r3, [r1, #4]
9002c6d6:	2b00      	cmp	r3, #0
9002c6d8:	dc02      	bgt.n	9002c6e0 <__sflush_r+0x1c>
9002c6da:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
9002c6dc:	2b00      	cmp	r3, #0
9002c6de:	dd48      	ble.n	9002c772 <__sflush_r+0xae>
9002c6e0:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002c6e2:	2e00      	cmp	r6, #0
9002c6e4:	d045      	beq.n	9002c772 <__sflush_r+0xae>
9002c6e6:	2300      	movs	r3, #0
9002c6e8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
9002c6ec:	682f      	ldr	r7, [r5, #0]
9002c6ee:	6a21      	ldr	r1, [r4, #32]
9002c6f0:	602b      	str	r3, [r5, #0]
9002c6f2:	d030      	beq.n	9002c756 <__sflush_r+0x92>
9002c6f4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9002c6f6:	89a3      	ldrh	r3, [r4, #12]
9002c6f8:	0759      	lsls	r1, r3, #29
9002c6fa:	d505      	bpl.n	9002c708 <__sflush_r+0x44>
9002c6fc:	6863      	ldr	r3, [r4, #4]
9002c6fe:	1ad2      	subs	r2, r2, r3
9002c700:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9002c702:	b10b      	cbz	r3, 9002c708 <__sflush_r+0x44>
9002c704:	6c23      	ldr	r3, [r4, #64]	@ 0x40
9002c706:	1ad2      	subs	r2, r2, r3
9002c708:	2300      	movs	r3, #0
9002c70a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002c70c:	6a21      	ldr	r1, [r4, #32]
9002c70e:	4628      	mov	r0, r5
9002c710:	47b0      	blx	r6
9002c712:	1c43      	adds	r3, r0, #1
9002c714:	89a3      	ldrh	r3, [r4, #12]
9002c716:	d106      	bne.n	9002c726 <__sflush_r+0x62>
9002c718:	6829      	ldr	r1, [r5, #0]
9002c71a:	291d      	cmp	r1, #29
9002c71c:	d82b      	bhi.n	9002c776 <__sflush_r+0xb2>
9002c71e:	4a2a      	ldr	r2, [pc, #168]	@ (9002c7c8 <__sflush_r+0x104>)
9002c720:	410a      	asrs	r2, r1
9002c722:	07d6      	lsls	r6, r2, #31
9002c724:	d427      	bmi.n	9002c776 <__sflush_r+0xb2>
9002c726:	2200      	movs	r2, #0
9002c728:	6062      	str	r2, [r4, #4]
9002c72a:	04d9      	lsls	r1, r3, #19
9002c72c:	6922      	ldr	r2, [r4, #16]
9002c72e:	6022      	str	r2, [r4, #0]
9002c730:	d504      	bpl.n	9002c73c <__sflush_r+0x78>
9002c732:	1c42      	adds	r2, r0, #1
9002c734:	d101      	bne.n	9002c73a <__sflush_r+0x76>
9002c736:	682b      	ldr	r3, [r5, #0]
9002c738:	b903      	cbnz	r3, 9002c73c <__sflush_r+0x78>
9002c73a:	6560      	str	r0, [r4, #84]	@ 0x54
9002c73c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002c73e:	602f      	str	r7, [r5, #0]
9002c740:	b1b9      	cbz	r1, 9002c772 <__sflush_r+0xae>
9002c742:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002c746:	4299      	cmp	r1, r3
9002c748:	d002      	beq.n	9002c750 <__sflush_r+0x8c>
9002c74a:	4628      	mov	r0, r5
9002c74c:	f7ff fca0 	bl	9002c090 <_free_r>
9002c750:	2300      	movs	r3, #0
9002c752:	6363      	str	r3, [r4, #52]	@ 0x34
9002c754:	e00d      	b.n	9002c772 <__sflush_r+0xae>
9002c756:	2301      	movs	r3, #1
9002c758:	4628      	mov	r0, r5
9002c75a:	47b0      	blx	r6
9002c75c:	4602      	mov	r2, r0
9002c75e:	1c50      	adds	r0, r2, #1
9002c760:	d1c9      	bne.n	9002c6f6 <__sflush_r+0x32>
9002c762:	682b      	ldr	r3, [r5, #0]
9002c764:	2b00      	cmp	r3, #0
9002c766:	d0c6      	beq.n	9002c6f6 <__sflush_r+0x32>
9002c768:	2b1d      	cmp	r3, #29
9002c76a:	d001      	beq.n	9002c770 <__sflush_r+0xac>
9002c76c:	2b16      	cmp	r3, #22
9002c76e:	d11e      	bne.n	9002c7ae <__sflush_r+0xea>
9002c770:	602f      	str	r7, [r5, #0]
9002c772:	2000      	movs	r0, #0
9002c774:	e022      	b.n	9002c7bc <__sflush_r+0xf8>
9002c776:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002c77a:	b21b      	sxth	r3, r3
9002c77c:	e01b      	b.n	9002c7b6 <__sflush_r+0xf2>
9002c77e:	690f      	ldr	r7, [r1, #16]
9002c780:	2f00      	cmp	r7, #0
9002c782:	d0f6      	beq.n	9002c772 <__sflush_r+0xae>
9002c784:	0793      	lsls	r3, r2, #30
9002c786:	680e      	ldr	r6, [r1, #0]
9002c788:	bf08      	it	eq
9002c78a:	694b      	ldreq	r3, [r1, #20]
9002c78c:	600f      	str	r7, [r1, #0]
9002c78e:	bf18      	it	ne
9002c790:	2300      	movne	r3, #0
9002c792:	eba6 0807 	sub.w	r8, r6, r7
9002c796:	608b      	str	r3, [r1, #8]
9002c798:	f1b8 0f00 	cmp.w	r8, #0
9002c79c:	dde9      	ble.n	9002c772 <__sflush_r+0xae>
9002c79e:	6a21      	ldr	r1, [r4, #32]
9002c7a0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
9002c7a2:	4643      	mov	r3, r8
9002c7a4:	463a      	mov	r2, r7
9002c7a6:	4628      	mov	r0, r5
9002c7a8:	47b0      	blx	r6
9002c7aa:	2800      	cmp	r0, #0
9002c7ac:	dc08      	bgt.n	9002c7c0 <__sflush_r+0xfc>
9002c7ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002c7b2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002c7b6:	81a3      	strh	r3, [r4, #12]
9002c7b8:	f04f 30ff 	mov.w	r0, #4294967295
9002c7bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002c7c0:	4407      	add	r7, r0
9002c7c2:	eba8 0800 	sub.w	r8, r8, r0
9002c7c6:	e7e7      	b.n	9002c798 <__sflush_r+0xd4>
9002c7c8:	dfbffffe 	.word	0xdfbffffe

9002c7cc <_fflush_r>:
9002c7cc:	b538      	push	{r3, r4, r5, lr}
9002c7ce:	690b      	ldr	r3, [r1, #16]
9002c7d0:	4605      	mov	r5, r0
9002c7d2:	460c      	mov	r4, r1
9002c7d4:	b913      	cbnz	r3, 9002c7dc <_fflush_r+0x10>
9002c7d6:	2500      	movs	r5, #0
9002c7d8:	4628      	mov	r0, r5
9002c7da:	bd38      	pop	{r3, r4, r5, pc}
9002c7dc:	b118      	cbz	r0, 9002c7e6 <_fflush_r+0x1a>
9002c7de:	6a03      	ldr	r3, [r0, #32]
9002c7e0:	b90b      	cbnz	r3, 9002c7e6 <_fflush_r+0x1a>
9002c7e2:	f7ff f9e9 	bl	9002bbb8 <__sinit>
9002c7e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002c7ea:	2b00      	cmp	r3, #0
9002c7ec:	d0f3      	beq.n	9002c7d6 <_fflush_r+0xa>
9002c7ee:	6e62      	ldr	r2, [r4, #100]	@ 0x64
9002c7f0:	07d0      	lsls	r0, r2, #31
9002c7f2:	d404      	bmi.n	9002c7fe <_fflush_r+0x32>
9002c7f4:	0599      	lsls	r1, r3, #22
9002c7f6:	d402      	bmi.n	9002c7fe <_fflush_r+0x32>
9002c7f8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002c7fa:	f7ff fbdc 	bl	9002bfb6 <__retarget_lock_acquire_recursive>
9002c7fe:	4628      	mov	r0, r5
9002c800:	4621      	mov	r1, r4
9002c802:	f7ff ff5f 	bl	9002c6c4 <__sflush_r>
9002c806:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9002c808:	07da      	lsls	r2, r3, #31
9002c80a:	4605      	mov	r5, r0
9002c80c:	d4e4      	bmi.n	9002c7d8 <_fflush_r+0xc>
9002c80e:	89a3      	ldrh	r3, [r4, #12]
9002c810:	059b      	lsls	r3, r3, #22
9002c812:	d4e1      	bmi.n	9002c7d8 <_fflush_r+0xc>
9002c814:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002c816:	f7ff fbcf 	bl	9002bfb8 <__retarget_lock_release_recursive>
9002c81a:	e7dd      	b.n	9002c7d8 <_fflush_r+0xc>

9002c81c <__swhatbuf_r>:
9002c81c:	b570      	push	{r4, r5, r6, lr}
9002c81e:	460c      	mov	r4, r1
9002c820:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002c824:	2900      	cmp	r1, #0
9002c826:	b096      	sub	sp, #88	@ 0x58
9002c828:	4615      	mov	r5, r2
9002c82a:	461e      	mov	r6, r3
9002c82c:	da0d      	bge.n	9002c84a <__swhatbuf_r+0x2e>
9002c82e:	89a3      	ldrh	r3, [r4, #12]
9002c830:	f013 0f80 	tst.w	r3, #128	@ 0x80
9002c834:	f04f 0100 	mov.w	r1, #0
9002c838:	bf14      	ite	ne
9002c83a:	2340      	movne	r3, #64	@ 0x40
9002c83c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
9002c840:	2000      	movs	r0, #0
9002c842:	6031      	str	r1, [r6, #0]
9002c844:	602b      	str	r3, [r5, #0]
9002c846:	b016      	add	sp, #88	@ 0x58
9002c848:	bd70      	pop	{r4, r5, r6, pc}
9002c84a:	466a      	mov	r2, sp
9002c84c:	f000 f848 	bl	9002c8e0 <_fstat_r>
9002c850:	2800      	cmp	r0, #0
9002c852:	dbec      	blt.n	9002c82e <__swhatbuf_r+0x12>
9002c854:	9901      	ldr	r1, [sp, #4]
9002c856:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
9002c85a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
9002c85e:	4259      	negs	r1, r3
9002c860:	4159      	adcs	r1, r3
9002c862:	f44f 6380 	mov.w	r3, #1024	@ 0x400
9002c866:	e7eb      	b.n	9002c840 <__swhatbuf_r+0x24>

9002c868 <__smakebuf_r>:
9002c868:	898b      	ldrh	r3, [r1, #12]
9002c86a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9002c86c:	079d      	lsls	r5, r3, #30
9002c86e:	4606      	mov	r6, r0
9002c870:	460c      	mov	r4, r1
9002c872:	d507      	bpl.n	9002c884 <__smakebuf_r+0x1c>
9002c874:	f104 0347 	add.w	r3, r4, #71	@ 0x47
9002c878:	6023      	str	r3, [r4, #0]
9002c87a:	6123      	str	r3, [r4, #16]
9002c87c:	2301      	movs	r3, #1
9002c87e:	6163      	str	r3, [r4, #20]
9002c880:	b003      	add	sp, #12
9002c882:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002c884:	ab01      	add	r3, sp, #4
9002c886:	466a      	mov	r2, sp
9002c888:	f7ff ffc8 	bl	9002c81c <__swhatbuf_r>
9002c88c:	9f00      	ldr	r7, [sp, #0]
9002c88e:	4605      	mov	r5, r0
9002c890:	4639      	mov	r1, r7
9002c892:	4630      	mov	r0, r6
9002c894:	f7ff f86a 	bl	9002b96c <_malloc_r>
9002c898:	b948      	cbnz	r0, 9002c8ae <__smakebuf_r+0x46>
9002c89a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002c89e:	059a      	lsls	r2, r3, #22
9002c8a0:	d4ee      	bmi.n	9002c880 <__smakebuf_r+0x18>
9002c8a2:	f023 0303 	bic.w	r3, r3, #3
9002c8a6:	f043 0302 	orr.w	r3, r3, #2
9002c8aa:	81a3      	strh	r3, [r4, #12]
9002c8ac:	e7e2      	b.n	9002c874 <__smakebuf_r+0xc>
9002c8ae:	89a3      	ldrh	r3, [r4, #12]
9002c8b0:	6020      	str	r0, [r4, #0]
9002c8b2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9002c8b6:	81a3      	strh	r3, [r4, #12]
9002c8b8:	9b01      	ldr	r3, [sp, #4]
9002c8ba:	e9c4 0704 	strd	r0, r7, [r4, #16]
9002c8be:	b15b      	cbz	r3, 9002c8d8 <__smakebuf_r+0x70>
9002c8c0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002c8c4:	4630      	mov	r0, r6
9002c8c6:	f000 f81d 	bl	9002c904 <_isatty_r>
9002c8ca:	b128      	cbz	r0, 9002c8d8 <__smakebuf_r+0x70>
9002c8cc:	89a3      	ldrh	r3, [r4, #12]
9002c8ce:	f023 0303 	bic.w	r3, r3, #3
9002c8d2:	f043 0301 	orr.w	r3, r3, #1
9002c8d6:	81a3      	strh	r3, [r4, #12]
9002c8d8:	89a3      	ldrh	r3, [r4, #12]
9002c8da:	431d      	orrs	r5, r3
9002c8dc:	81a5      	strh	r5, [r4, #12]
9002c8de:	e7cf      	b.n	9002c880 <__smakebuf_r+0x18>

9002c8e0 <_fstat_r>:
9002c8e0:	b538      	push	{r3, r4, r5, lr}
9002c8e2:	4d07      	ldr	r5, [pc, #28]	@ (9002c900 <_fstat_r+0x20>)
9002c8e4:	2300      	movs	r3, #0
9002c8e6:	4604      	mov	r4, r0
9002c8e8:	4608      	mov	r0, r1
9002c8ea:	4611      	mov	r1, r2
9002c8ec:	602b      	str	r3, [r5, #0]
9002c8ee:	f7d5 f83f 	bl	90001970 <_fstat>
9002c8f2:	1c43      	adds	r3, r0, #1
9002c8f4:	d102      	bne.n	9002c8fc <_fstat_r+0x1c>
9002c8f6:	682b      	ldr	r3, [r5, #0]
9002c8f8:	b103      	cbz	r3, 9002c8fc <_fstat_r+0x1c>
9002c8fa:	6023      	str	r3, [r4, #0]
9002c8fc:	bd38      	pop	{r3, r4, r5, pc}
9002c8fe:	bf00      	nop
9002c900:	240280e4 	.word	0x240280e4

9002c904 <_isatty_r>:
9002c904:	b538      	push	{r3, r4, r5, lr}
9002c906:	4d06      	ldr	r5, [pc, #24]	@ (9002c920 <_isatty_r+0x1c>)
9002c908:	2300      	movs	r3, #0
9002c90a:	4604      	mov	r4, r0
9002c90c:	4608      	mov	r0, r1
9002c90e:	602b      	str	r3, [r5, #0]
9002c910:	f7d5 f834 	bl	9000197c <_isatty>
9002c914:	1c43      	adds	r3, r0, #1
9002c916:	d102      	bne.n	9002c91e <_isatty_r+0x1a>
9002c918:	682b      	ldr	r3, [r5, #0]
9002c91a:	b103      	cbz	r3, 9002c91e <_isatty_r+0x1a>
9002c91c:	6023      	str	r3, [r4, #0]
9002c91e:	bd38      	pop	{r3, r4, r5, pc}
9002c920:	240280e4 	.word	0x240280e4

9002c924 <_init>:
9002c924:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002c926:	bf00      	nop
9002c928:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002c92a:	bc08      	pop	{r3}
9002c92c:	469e      	mov	lr, r3
9002c92e:	4770      	bx	lr

9002c930 <_fini>:
9002c930:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002c932:	bf00      	nop
9002c934:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002c936:	bc08      	pop	{r3}
9002c938:	469e      	mov	lr, r3
9002c93a:	4770      	bx	lr
